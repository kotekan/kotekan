// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5807[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception15832[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<342>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16425>;
	.reg .f32 	%f<1392>;
	.reg .b64 	%rd<163>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r263, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd24, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r268, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r268, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd25, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u32 	%r264, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r269, %r2, 9;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r270, %r269, %r1;
	or.b32  	%r271, %r270, %r4;
	mul.wide.u32 	%rd31, %r271, 4;
	add.s64 	%rd4, %rd25, %rd31;
	mov.u32 	%r272, 1;
	st.global.u32 	[%rd4], %r272;
	setp.lt.s32 	%p2, %r264, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L115
	ld.param.u32 	%r265, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r265, %r264;
	setp.gt.s32 	%p4, %r265, 131072;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L125
	ld.param.u32 	%r266, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r273, %r265, %r264;
	and.b32  	%r274, %r273, 255;
	setp.ne.s32 	%p6, %r274, 0;
	setp.lt.s32 	%p7, %r266, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L131
	ld.param.u32 	%r267, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r267, %r266;
	setp.gt.s32 	%p10, %r267, 1024;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L141
	sub.s32 	%r275, %r267, %r266;
	and.b32  	%r276, %r275, 1;
	setp.eq.b32 	%p12, %r276, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass145
	bfe.u32 	%r183, %r1, 1, 1;
	and.b32  	%r184, %r1, 1;
	bfe.u32 	%r186, %r1, 2, 1;
	shr.u32 	%r187, %r1, 4;
	shl.b32 	%r282, %r187, 2;
	shl.b32 	%r283, %r186, 3;
	shl.b32 	%r284, %r184, 4;
	shl.b32 	%r285, %r183, 5;
	or.b32  	%r286, %r284, %r285;
	or.b32  	%r287, %r283, %r286;
	or.b32  	%r288, %r282, %r287;
	bfe.u32 	%r189, %r1, 3, 1;
	shl.b32 	%r289, %r189, 1;
	or.b32  	%r190, %r289, %r288;
	or.b32  	%r191, %r190, 64;
	mov.f32 	%f257, 0f40000000;
	mov.f32 	%f258, 0f43FF8000;
	div.approx.f32 	%f253, %f258, %f257;
	cvt.rn.f32.s32 	%f259, %r190;
	sub.f32 	%f260, %f259, %f253;
	mov.f32 	%f289, 0f43000000;
	div.approx.f32 	%f255, %f260, %f289;
	setp.ne.f32 	%p20, %f255, 0f00000000;
	mov.f32 	%f1351, 0f3F800000;
	mov.f32 	%f1336, %f1351;
	@%p20 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L646
	sin.approx.f32 	%f290, %f255;
	div.approx.f32 	%f1336, %f290, %f255;
$L__BB0_10:                             // %L649
	cvt.rn.f32.s32 	%f293, %r191;
	sub.f32 	%f294, %f293, %f253;
	div.approx.f32 	%f5, %f294, %f289;
	setp.eq.f32 	%p26, %f5, 0f00000000;
	mov.f32 	%f1337, %f1351;
	@%p26 bra 	$L__BB0_12;
// %bb.11:                              // %L666
	sin.approx.f32 	%f324, %f5;
	div.approx.f32 	%f1337, %f324, %f5;
$L__BB0_12:                             // %L669
	or.b32  	%r307, %r190, 1;
	or.b32  	%r6, %r190, 65;
	cvt.rn.f32.s32 	%f328, %r307;
	sub.f32 	%f329, %f328, %f253;
	div.approx.f32 	%f9, %f329, %f289;
	setp.eq.f32 	%p32, %f9, 0f00000000;
	mov.f32 	%f1338, %f1351;
	@%p32 bra 	$L__BB0_14;
// %bb.13:                              // %L748
	sin.approx.f32 	%f359, %f9;
	div.approx.f32 	%f1338, %f359, %f9;
$L__BB0_14:                             // %L751
	cvt.rn.f32.s32 	%f362, %r6;
	sub.f32 	%f363, %f362, %f253;
	div.approx.f32 	%f14, %f363, %f289;
	setp.eq.f32 	%p38, %f14, 0f00000000;
	mov.f32 	%f1339, %f1351;
	@%p38 bra 	$L__BB0_16;
// %bb.15:                              // %L768
	sin.approx.f32 	%f393, %f14;
	div.approx.f32 	%f1339, %f393, %f14;
$L__BB0_16:                             // %L771
	or.b32  	%r325, %r190, 128;
	or.b32  	%r8, %r190, 192;
	cvt.rn.f32.s32 	%f397, %r325;
	sub.f32 	%f398, %f397, %f253;
	div.approx.f32 	%f18, %f398, %f289;
	setp.eq.f32 	%p44, %f18, 0f00000000;
	mov.f32 	%f1340, %f1351;
	@%p44 bra 	$L__BB0_18;
// %bb.17:                              // %L850
	sin.approx.f32 	%f428, %f18;
	div.approx.f32 	%f1340, %f428, %f18;
$L__BB0_18:                             // %L853
	cvt.rn.f32.s32 	%f431, %r8;
	sub.f32 	%f432, %f431, %f253;
	div.approx.f32 	%f23, %f432, %f289;
	setp.eq.f32 	%p50, %f23, 0f00000000;
	mov.f32 	%f1341, %f1351;
	@%p50 bra 	$L__BB0_20;
// %bb.19:                              // %L870
	sin.approx.f32 	%f462, %f23;
	div.approx.f32 	%f1341, %f462, %f23;
$L__BB0_20:                             // %L873
	or.b32  	%r343, %r190, 129;
	or.b32  	%r10, %r190, 193;
	cvt.rn.f32.s32 	%f466, %r343;
	sub.f32 	%f467, %f466, %f253;
	div.approx.f32 	%f27, %f467, %f289;
	setp.eq.f32 	%p56, %f27, 0f00000000;
	mov.f32 	%f1342, %f1351;
	@%p56 bra 	$L__BB0_22;
// %bb.21:                              // %L952
	sin.approx.f32 	%f497, %f27;
	div.approx.f32 	%f1342, %f497, %f27;
$L__BB0_22:                             // %L955
	cvt.rn.f32.s32 	%f500, %r10;
	sub.f32 	%f501, %f500, %f253;
	div.approx.f32 	%f32, %f501, %f289;
	setp.eq.f32 	%p62, %f32, 0f00000000;
	mov.f32 	%f1343, %f1351;
	@%p62 bra 	$L__BB0_24;
// %bb.23:                              // %L972
	sin.approx.f32 	%f531, %f32;
	div.approx.f32 	%f1343, %f531, %f32;
$L__BB0_24:                             // %L975
	or.b32  	%r361, %r190, 256;
	or.b32  	%r12, %r190, 320;
	cvt.rn.f32.s32 	%f535, %r361;
	sub.f32 	%f536, %f535, %f253;
	div.approx.f32 	%f36, %f536, %f289;
	setp.eq.f32 	%p68, %f36, 0f00000000;
	mov.f32 	%f1344, %f1351;
	@%p68 bra 	$L__BB0_26;
// %bb.25:                              // %L1054
	sin.approx.f32 	%f566, %f36;
	div.approx.f32 	%f1344, %f566, %f36;
$L__BB0_26:                             // %L1057
	mov.f32 	%f261, 0f44004000;
	cvt.rn.f32.s32 	%f569, %r12;
	sub.f32 	%f570, %f569, %f253;
	div.approx.f32 	%f41, %f570, %f289;
	setp.eq.f32 	%p74, %f41, 0f00000000;
	mov.f32 	%f1345, %f1351;
	@%p74 bra 	$L__BB0_28;
// %bb.27:                              // %L1074
	sin.approx.f32 	%f600, %f41;
	div.approx.f32 	%f1345, %f600, %f41;
$L__BB0_28:                             // %L1077
	div.approx.f32 	%f262, %f260, %f261;
	div.approx.f32 	%f296, %f294, %f261;
	div.approx.f32 	%f331, %f329, %f261;
	div.approx.f32 	%f365, %f363, %f261;
	div.approx.f32 	%f400, %f398, %f261;
	div.approx.f32 	%f434, %f432, %f261;
	div.approx.f32 	%f469, %f467, %f261;
	div.approx.f32 	%f503, %f501, %f261;
	div.approx.f32 	%f538, %f536, %f261;
	div.approx.f32 	%f572, %f570, %f261;
	or.b32  	%r379, %r190, 257;
	or.b32  	%r14, %r190, 321;
	cvt.rn.f32.s32 	%f604, %r379;
	sub.f32 	%f605, %f604, %f253;
	div.approx.f32 	%f607, %f605, %f261;
	div.approx.f32 	%f45, %f605, %f289;
	setp.eq.f32 	%p80, %f45, 0f00000000;
	mov.f32 	%f1346, %f1351;
	@%p80 bra 	$L__BB0_30;
// %bb.29:                              // %L1156
	sin.approx.f32 	%f635, %f45;
	div.approx.f32 	%f1346, %f635, %f45;
$L__BB0_30:                             // %L1159
	abs.f32 	%f263, %f262;
	abs.f32 	%f297, %f296;
	abs.f32 	%f332, %f331;
	abs.f32 	%f366, %f365;
	abs.f32 	%f401, %f400;
	abs.f32 	%f435, %f434;
	abs.f32 	%f470, %f469;
	abs.f32 	%f504, %f503;
	abs.f32 	%f539, %f538;
	abs.f32 	%f573, %f572;
	abs.f32 	%f608, %f607;
	cvt.rn.f32.s32 	%f638, %r14;
	sub.f32 	%f639, %f638, %f253;
	div.approx.f32 	%f641, %f639, %f261;
	abs.f32 	%f642, %f641;
	div.approx.f32 	%f50, %f639, %f289;
	setp.eq.f32 	%p86, %f50, 0f00000000;
	mov.f32 	%f1347, %f1351;
	@%p86 bra 	$L__BB0_32;
// %bb.31:                              // %L1176
	sin.approx.f32 	%f669, %f50;
	div.approx.f32 	%f1347, %f669, %f50;
$L__BB0_32:                             // %L1179
	setp.gt.f32 	%p15, %f263, 0f4B800000;
	mul.f32 	%f264, %f262, 0f00000000;
	setp.gt.f32 	%p21, %f297, 0f4B800000;
	mul.f32 	%f298, %f296, 0f00000000;
	setp.gt.f32 	%p27, %f332, 0f4B800000;
	mul.f32 	%f333, %f331, 0f00000000;
	setp.gt.f32 	%p33, %f366, 0f4B800000;
	mul.f32 	%f367, %f365, 0f00000000;
	setp.gt.f32 	%p39, %f401, 0f4B800000;
	mul.f32 	%f402, %f400, 0f00000000;
	setp.gt.f32 	%p45, %f435, 0f4B800000;
	mul.f32 	%f436, %f434, 0f00000000;
	setp.gt.f32 	%p51, %f470, 0f4B800000;
	mul.f32 	%f471, %f469, 0f00000000;
	setp.gt.f32 	%p57, %f504, 0f4B800000;
	mul.f32 	%f505, %f503, 0f00000000;
	setp.gt.f32 	%p63, %f539, 0f4B800000;
	mul.f32 	%f540, %f538, 0f00000000;
	setp.gt.f32 	%p69, %f573, 0f4B800000;
	mul.f32 	%f574, %f572, 0f00000000;
	setp.gt.f32 	%p75, %f608, 0f4B800000;
	mul.f32 	%f609, %f607, 0f00000000;
	setp.gt.f32 	%p81, %f642, 0f4B800000;
	mul.f32 	%f643, %f641, 0f00000000;
	or.b32  	%r397, %r190, 384;
	or.b32  	%r16, %r190, 448;
	cvt.rn.f32.s32 	%f673, %r397;
	sub.f32 	%f674, %f673, %f253;
	div.approx.f32 	%f676, %f674, %f261;
	abs.f32 	%f677, %f676;
	setp.gt.f32 	%p87, %f677, 0f4B800000;
	mul.f32 	%f678, %f676, 0f00000000;
	div.approx.f32 	%f54, %f674, %f289;
	setp.eq.f32 	%p92, %f54, 0f00000000;
	mov.f32 	%f1348, %f1351;
	@%p92 bra 	$L__BB0_34;
// %bb.33:                              // %L1258
	sin.approx.f32 	%f704, %f54;
	div.approx.f32 	%f1348, %f704, %f54;
$L__BB0_34:                             // %L1261
	selp.f32 	%f265, %f264, %f262, %p15;
	selp.f32 	%f299, %f298, %f296, %p21;
	selp.f32 	%f334, %f333, %f331, %p27;
	selp.f32 	%f368, %f367, %f365, %p33;
	selp.f32 	%f403, %f402, %f400, %p39;
	selp.f32 	%f437, %f436, %f434, %p45;
	selp.f32 	%f472, %f471, %f469, %p51;
	selp.f32 	%f506, %f505, %f503, %p57;
	selp.f32 	%f541, %f540, %f538, %p63;
	selp.f32 	%f575, %f574, %f572, %p69;
	selp.f32 	%f610, %f609, %f607, %p75;
	selp.f32 	%f644, %f643, %f641, %p81;
	selp.f32 	%f679, %f678, %f676, %p87;
	cvt.rn.f32.s32 	%f707, %r16;
	sub.f32 	%f708, %f707, %f253;
	div.approx.f32 	%f710, %f708, %f261;
	abs.f32 	%f711, %f710;
	setp.gt.f32 	%p93, %f711, 0f4B800000;
	mul.f32 	%f712, %f710, 0f00000000;
	selp.f32 	%f713, %f712, %f710, %p93;
	div.approx.f32 	%f59, %f708, %f289;
	setp.eq.f32 	%p98, %f59, 0f00000000;
	mov.f32 	%f1349, %f1351;
	@%p98 bra 	$L__BB0_36;
// %bb.35:                              // %L1278
	sin.approx.f32 	%f738, %f59;
	div.approx.f32 	%f1349, %f738, %f59;
$L__BB0_36:                             // %L1281
	add.f32 	%f266, %f265, %f265;
	add.f32 	%f300, %f299, %f299;
	add.f32 	%f335, %f334, %f334;
	add.f32 	%f369, %f368, %f368;
	add.f32 	%f404, %f403, %f403;
	add.f32 	%f438, %f437, %f437;
	add.f32 	%f473, %f472, %f472;
	add.f32 	%f507, %f506, %f506;
	add.f32 	%f542, %f541, %f541;
	add.f32 	%f576, %f575, %f575;
	add.f32 	%f611, %f610, %f610;
	add.f32 	%f645, %f644, %f644;
	add.f32 	%f680, %f679, %f679;
	add.f32 	%f714, %f713, %f713;
	or.b32  	%r415, %r190, 385;
	or.b32  	%r18, %r190, 449;
	cvt.rn.f32.s32 	%f742, %r415;
	sub.f32 	%f743, %f742, %f253;
	div.approx.f32 	%f745, %f743, %f261;
	abs.f32 	%f746, %f745;
	setp.gt.f32 	%p99, %f746, 0f4B800000;
	mul.f32 	%f747, %f745, 0f00000000;
	selp.f32 	%f748, %f747, %f745, %p99;
	add.f32 	%f749, %f748, %f748;
	div.approx.f32 	%f63, %f743, %f289;
	setp.eq.f32 	%p104, %f63, 0f00000000;
	mov.f32 	%f1350, %f1351;
	@%p104 bra 	$L__BB0_38;
// %bb.37:                              // %L1360
	sin.approx.f32 	%f773, %f63;
	div.approx.f32 	%f1350, %f773, %f63;
$L__BB0_38:                             // %L1363
	mov.b32 	%r290, %f266;
	mov.b32 	%r297, %f300;
	mov.b32 	%r308, %f335;
	mov.b32 	%r315, %f369;
	mov.b32 	%r326, %f404;
	mov.b32 	%r333, %f438;
	mov.b32 	%r344, %f473;
	mov.b32 	%r351, %f507;
	mov.b32 	%r362, %f542;
	mov.b32 	%r369, %f576;
	mov.b32 	%r380, %f611;
	mov.b32 	%r387, %f645;
	mov.b32 	%r398, %f680;
	mov.b32 	%r405, %f714;
	mov.b32 	%r416, %f749;
	cvt.rn.f32.s32 	%f776, %r18;
	sub.f32 	%f777, %f776, %f253;
	div.approx.f32 	%f779, %f777, %f261;
	abs.f32 	%f780, %f779;
	setp.gt.f32 	%p105, %f780, 0f4B800000;
	mul.f32 	%f781, %f779, 0f00000000;
	selp.f32 	%f782, %f781, %f779, %p105;
	add.f32 	%f783, %f782, %f782;
	mov.b32 	%r423, %f783;
	div.approx.f32 	%f68, %f777, %f289;
	setp.eq.f32 	%p110, %f68, 0f00000000;
	@%p110 bra 	$L__BB0_40;
// %bb.39:                              // %L1380
	sin.approx.f32 	%f807, %f68;
	div.approx.f32 	%f1351, %f807, %f68;
$L__BB0_40:                             // %L1383
	and.b32  	%r291, %r290, -2147483648;
	and.b32  	%r298, %r297, -2147483648;
	and.b32  	%r309, %r308, -2147483648;
	and.b32  	%r316, %r315, -2147483648;
	and.b32  	%r327, %r326, -2147483648;
	and.b32  	%r334, %r333, -2147483648;
	and.b32  	%r345, %r344, -2147483648;
	and.b32  	%r352, %r351, -2147483648;
	and.b32  	%r363, %r362, -2147483648;
	and.b32  	%r370, %r369, -2147483648;
	and.b32  	%r381, %r380, -2147483648;
	and.b32  	%r388, %r387, -2147483648;
	and.b32  	%r399, %r398, -2147483648;
	and.b32  	%r406, %r405, -2147483648;
	and.b32  	%r417, %r416, -2147483648;
	and.b32  	%r424, %r423, -2147483648;
	mul.lo.s32 	%r20, %r190, 127;
	cvt.rn.f32.s32 	%f810, %r20;
	div.approx.f32 	%f71, %f810, %f289;
	abs.f32 	%f1354, %f71;
	setp.lt.f32 	%p111, %f1354, 0f40000000;
	@%p111 bra 	$L__BB0_52;
// %bb.41:
	setp.gtu.f32 	%p112, %f1354, 0f4B800000;
	@%p112 bra 	$L__BB0_48;
	bra.uni 	$L__BB0_42;
$L__BB0_48:
	mov.b32 	%r22, %f1354;
	and.b32  	%r433, %r22, 8388607;
	or.b32  	%r16355, %r433, 1065353216;
	mov.b32 	%f1353, %r16355;
	add.s32 	%r434, %r22, -1073741824;
	and.b32  	%r16356, %r434, -8388608;
	setp.eq.s32 	%p118, %r16356, 0;
	@%p118 bra 	$L__BB0_51;
// %bb.49:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f821, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f820,%f821;
	// end inline asm
$L__BB0_50:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r435, %r16356, 192937984;
	add.s32 	%r436, %r16355, %r435;
	mov.b32 	%f822, %r436;
	mul.f32 	%f823, %f820, %f822;
	sub.f32 	%f824, %f822, %f823;
	fma.rn.f32 	%f825, %f824, %f820, %f823;
	sub.f32 	%f826, %f822, %f825;
	fma.rz.f32 	%f827, %f826, %f820, %f825;
	cvt.rzi.f32.f32 	%f828, %f827;
	sub.f32 	%f1353, %f822, %f828;
	sub.s32 	%r16356, %r16356, %r435;
	mov.b32 	%r16355, %f1353;
	setp.ne.s32 	%p119, %r16356, 0;
	setp.ne.s32 	%p120, %r16355, 0;
	and.pred  	%p121, %p119, %p120;
	@%p121 bra 	$L__BB0_50;
$L__BB0_51:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p122, %r22, 2139095039;
	selp.f32 	%f829, 0f7FFFFFFF, 0f4B800000, %p122;
	mul.f32 	%f830, %f1353, 0f34000000;
	mul.f32 	%f1354, %f829, %f830;
	bra.uni 	$L__BB0_52;
$L__BB0_42:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f813, %f1354, %f257;
	cvt.rzi.f32.f32 	%f1352, %f813;
	fma.rn.f32 	%f74, %f1352, 0fC0000000, %f1354;
	mov.b32 	%r21, %f74;
	setp.lt.u32 	%p113, %r21, 1073741824;
	@%p113 bra 	$L__BB0_47;
// %bb.43:
	setp.lt.u32 	%p114, %r21, -2147483647;
	@%p114 bra 	$L__BB0_45;
// %bb.44:
	add.f32 	%f818, %f1352, 0fBF800000;
	setp.lt.f32 	%p117, %f74, 0fC0000000;
	add.f32 	%f819, %f818, 0fBF800000;
	selp.f32 	%f1352, %f819, %f818, %p117;
	bra.uni 	$L__BB0_47;
$L__BB0_45:
	add.f32 	%f1352, %f1352, 0f3F800000;
	setp.ltu.f32 	%p115, %f74, 0f40800000;
	@%p115 bra 	$L__BB0_47;
// %bb.46:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f814, %f1352, 0f3F800000;
	fma.rn.f32 	%f816, %f257, 0fC0400000, %f74;
	setp.ge.f32 	%p116, %f816, 0f00000000;
	add.f32 	%f817, %f814, 0f3F800000;
	selp.f32 	%f1352, %f817, %f814, %p116;
$L__BB0_47:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1354, %f1352, 0fC0000000, %f1354;
$L__BB0_52:                             // %__internal_fmodf_kernel.exit.i
	or.b32  	%r292, %r291, 1056964608;
	or.b32  	%r299, %r298, 1056964608;
	or.b32  	%r310, %r309, 1056964608;
	or.b32  	%r317, %r316, 1056964608;
	or.b32  	%r328, %r327, 1056964608;
	or.b32  	%r335, %r334, 1056964608;
	or.b32  	%r346, %r345, 1056964608;
	or.b32  	%r353, %r352, 1056964608;
	or.b32  	%r364, %r363, 1056964608;
	or.b32  	%r371, %r370, 1056964608;
	or.b32  	%r382, %r381, 1056964608;
	or.b32  	%r389, %r388, 1056964608;
	or.b32  	%r400, %r399, 1056964608;
	or.b32  	%r407, %r406, 1056964608;
	or.b32  	%r418, %r417, 1056964608;
	or.b32  	%r425, %r424, 1056964608;
	abs.f32 	%f831, %f1354;
	setp.gtu.f32 	%p123, %f831, 0f7F800000;
	@%p123 bra 	$L__BB0_54;
// %bb.53:
	mov.b32 	%r437, %f71;
	and.b32  	%r438, %r437, -2147483648;
	mov.b32 	%r439, %f1354;
	or.b32  	%r440, %r438, %r439;
	mov.b32 	%f1354, %r440;
$L__BB0_54:                             // %__nv_fmodf.exit
	mov.b32 	%f267, %r292;
	mov.b32 	%f301, %r299;
	mov.b32 	%f336, %r310;
	mov.b32 	%f370, %r317;
	mov.b32 	%f405, %r328;
	mov.b32 	%f439, %r335;
	mov.b32 	%f474, %r346;
	mov.b32 	%f508, %r353;
	mov.b32 	%f543, %r364;
	mov.b32 	%f577, %r371;
	mov.b32 	%f612, %r382;
	mov.b32 	%f646, %r389;
	mov.b32 	%f681, %r400;
	mov.b32 	%f715, %r407;
	mov.b32 	%f750, %r418;
	mov.b32 	%f784, %r425;
	add.f32 	%f832, %f1354, %f1354;
	mov.b32 	%r441, %f832;
	and.b32  	%r442, %r441, -2147483648;
	or.b32  	%r443, %r442, 1056964608;
	mov.b32 	%f833, %r443;
	add.f32 	%f834, %f832, %f833;
	abs.f32 	%f836, %f832;
	add.s32 	%r449, %r20, 8128;
	cvt.rn.f32.s32 	%f862, %r449;
	div.approx.f32 	%f90, %f862, %f289;
	abs.f32 	%f1358, %f90;
	setp.lt.f32 	%p131, %f1358, 0f40000000;
	@%p131 bra 	$L__BB0_66;
// %bb.55:
	setp.gtu.f32 	%p132, %f1358, 0f4B800000;
	@%p132 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_56;
$L__BB0_62:
	mov.b32 	%r30, %f1358;
	and.b32  	%r450, %r30, 8388607;
	or.b32  	%r16357, %r450, 1065353216;
	mov.b32 	%f1357, %r16357;
	add.s32 	%r451, %r30, -1073741824;
	and.b32  	%r16358, %r451, -8388608;
	setp.eq.s32 	%p138, %r16358, 0;
	@%p138 bra 	$L__BB0_65;
// %bb.63:                              // %__nv_fmaf_rn.exit4.i.i.i1619.preheader
	mov.f32 	%f873, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f872,%f873;
	// end inline asm
$L__BB0_64:                             // %__nv_fmaf_rn.exit4.i.i.i1619
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r452, %r16358, 192937984;
	add.s32 	%r453, %r16357, %r452;
	mov.b32 	%f874, %r453;
	mul.f32 	%f875, %f872, %f874;
	sub.f32 	%f876, %f874, %f875;
	fma.rn.f32 	%f877, %f876, %f872, %f875;
	sub.f32 	%f878, %f874, %f877;
	fma.rz.f32 	%f879, %f878, %f872, %f877;
	cvt.rzi.f32.f32 	%f880, %f879;
	sub.f32 	%f1357, %f874, %f880;
	sub.s32 	%r16358, %r16358, %r452;
	mov.b32 	%r16357, %f1357;
	setp.ne.s32 	%p139, %r16358, 0;
	setp.ne.s32 	%p140, %r16357, 0;
	and.pred  	%p141, %p139, %p140;
	@%p141 bra 	$L__BB0_64;
$L__BB0_65:                             // %__internal_fmodf_slowpath_mod.exit.i.i1621
	setp.gt.u32 	%p142, %r30, 2139095039;
	selp.f32 	%f881, 0f7FFFFFFF, 0f4B800000, %p142;
	mul.f32 	%f882, %f1357, 0f34000000;
	mul.f32 	%f1358, %f881, %f882;
	bra.uni 	$L__BB0_66;
$L__BB0_56:                             // %__nv_fast_fdividef.exit.i.i.i1598
	div.approx.f32 	%f865, %f1358, %f257;
	cvt.rzi.f32.f32 	%f1356, %f865;
	fma.rn.f32 	%f93, %f1356, 0fC0000000, %f1358;
	mov.b32 	%r29, %f93;
	setp.lt.u32 	%p133, %r29, 1073741824;
	@%p133 bra 	$L__BB0_61;
// %bb.57:
	setp.lt.u32 	%p134, %r29, -2147483647;
	@%p134 bra 	$L__BB0_59;
// %bb.58:
	add.f32 	%f870, %f1356, 0fBF800000;
	setp.lt.f32 	%p137, %f93, 0fC0000000;
	add.f32 	%f871, %f870, 0fBF800000;
	selp.f32 	%f1356, %f871, %f870, %p137;
	bra.uni 	$L__BB0_61;
$L__BB0_59:
	add.f32 	%f1356, %f1356, 0f3F800000;
	setp.ltu.f32 	%p135, %f93, 0f40800000;
	@%p135 bra 	$L__BB0_61;
// %bb.60:                              // %__nv_fmaf_rn.exit.i.i.i1602
	add.f32 	%f866, %f1356, 0f3F800000;
	fma.rn.f32 	%f868, %f257, 0fC0400000, %f93;
	setp.ge.f32 	%p136, %f868, 0f00000000;
	add.f32 	%f869, %f866, 0f3F800000;
	selp.f32 	%f1356, %f869, %f866, %p136;
$L__BB0_61:                             // %__internal_fmodf_fastpath_quot.exit.i.i1605
	fma.rn.f32 	%f1358, %f1356, 0fC0000000, %f1358;
$L__BB0_66:                             // %__internal_fmodf_kernel.exit.i1624
	add.f32 	%f268, %f266, %f267;
	abs.f32 	%f270, %f266;
	add.f32 	%f302, %f300, %f301;
	abs.f32 	%f304, %f300;
	add.f32 	%f337, %f335, %f336;
	abs.f32 	%f339, %f335;
	add.f32 	%f371, %f369, %f370;
	abs.f32 	%f373, %f369;
	add.f32 	%f406, %f404, %f405;
	abs.f32 	%f408, %f404;
	add.f32 	%f440, %f438, %f439;
	abs.f32 	%f442, %f438;
	add.f32 	%f475, %f473, %f474;
	abs.f32 	%f477, %f473;
	add.f32 	%f509, %f507, %f508;
	abs.f32 	%f511, %f507;
	add.f32 	%f544, %f542, %f543;
	abs.f32 	%f546, %f542;
	add.f32 	%f578, %f576, %f577;
	abs.f32 	%f580, %f576;
	add.f32 	%f613, %f611, %f612;
	abs.f32 	%f615, %f611;
	add.f32 	%f647, %f645, %f646;
	abs.f32 	%f649, %f645;
	add.f32 	%f682, %f680, %f681;
	abs.f32 	%f684, %f680;
	add.f32 	%f716, %f714, %f715;
	abs.f32 	%f718, %f714;
	add.f32 	%f751, %f749, %f750;
	abs.f32 	%f753, %f749;
	add.f32 	%f785, %f783, %f784;
	abs.f32 	%f787, %f783;
	cvt.rzi.f32.f32 	%f835, %f834;
	setp.gt.f32 	%p124, %f836, 0f4B000000;
	shr.u32 	%r182, %r1, 1;
	shr.u32 	%r188, %r1, 3;
	abs.f32 	%f883, %f1358;
	setp.gtu.f32 	%p143, %f883, 0f7F800000;
	@%p143 bra 	$L__BB0_68;
// %bb.67:
	mov.b32 	%r454, %f90;
	and.b32  	%r455, %r454, -2147483648;
	mov.b32 	%r456, %f1358;
	or.b32  	%r457, %r455, %r456;
	mov.b32 	%f1358, %r457;
$L__BB0_68:                             // %__nv_fmodf.exit1625
	cvt.rzi.f32.f32 	%f269, %f268;
	setp.gt.f32 	%p16, %f270, 0f4B000000;
	cvt.rzi.f32.f32 	%f303, %f302;
	setp.gt.f32 	%p22, %f304, 0f4B000000;
	cvt.rzi.f32.f32 	%f338, %f337;
	setp.gt.f32 	%p28, %f339, 0f4B000000;
	cvt.rzi.f32.f32 	%f372, %f371;
	setp.gt.f32 	%p34, %f373, 0f4B000000;
	cvt.rzi.f32.f32 	%f407, %f406;
	setp.gt.f32 	%p40, %f408, 0f4B000000;
	cvt.rzi.f32.f32 	%f441, %f440;
	setp.gt.f32 	%p46, %f442, 0f4B000000;
	cvt.rzi.f32.f32 	%f476, %f475;
	setp.gt.f32 	%p52, %f477, 0f4B000000;
	cvt.rzi.f32.f32 	%f510, %f509;
	setp.gt.f32 	%p58, %f511, 0f4B000000;
	cvt.rzi.f32.f32 	%f545, %f544;
	setp.gt.f32 	%p64, %f546, 0f4B000000;
	cvt.rzi.f32.f32 	%f579, %f578;
	setp.gt.f32 	%p70, %f580, 0f4B000000;
	cvt.rzi.f32.f32 	%f614, %f613;
	setp.gt.f32 	%p76, %f615, 0f4B000000;
	cvt.rzi.f32.f32 	%f648, %f647;
	setp.gt.f32 	%p82, %f649, 0f4B000000;
	cvt.rzi.f32.f32 	%f683, %f682;
	setp.gt.f32 	%p88, %f684, 0f4B000000;
	cvt.rzi.f32.f32 	%f717, %f716;
	setp.gt.f32 	%p94, %f718, 0f4B000000;
	cvt.rzi.f32.f32 	%f752, %f751;
	setp.gt.f32 	%p100, %f753, 0f4B000000;
	cvt.rzi.f32.f32 	%f786, %f785;
	setp.gt.f32 	%p106, %f787, 0f4B000000;
	selp.f32 	%f837, %f832, %f835, %p124;
	cvt.rzi.f32.f32 	%f838, %f832;
	setp.lt.f32 	%p125, %f836, 0f3F000000;
	add.f32 	%f884, %f1358, %f1358;
	mov.b32 	%r470, %f884;
	and.b32  	%r471, %r470, -2147483648;
	or.b32  	%r472, %r471, 1056964608;
	mov.b32 	%f885, %r472;
	add.f32 	%f886, %f884, %f885;
	cvt.rzi.f32.f32 	%f887, %f886;
	abs.f32 	%f888, %f884;
	setp.gt.f32 	%p144, %f888, 0f4B000000;
	selp.f32 	%f889, %f884, %f887, %p144;
	cvt.rzi.f32.f32 	%f890, %f884;
	setp.lt.f32 	%p145, %f888, 0f3F000000;
	and.b32  	%r478, %r188, 2;
	or.b32  	%r479, %r186, %r478;
	and.b32  	%r480, %r182, 4;
	or.b32  	%r41, %r479, %r480;
	and.b32  	%r481, %r1, 3;
	mul.lo.s32 	%r482, %r481, %r41;
	shl.b32 	%r483, %r482, 1;
	neg.s32 	%r484, %r483;
	cvt.rn.f32.s32 	%f916, %r484;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f107, %f916, %f917;
	abs.f32 	%f1362, %f107;
	setp.lt.f32 	%p151, %f1362, 0f40000000;
	@%p151 bra 	$L__BB0_80;
// %bb.69:
	setp.gtu.f32 	%p152, %f1362, 0f4B800000;
	@%p152 bra 	$L__BB0_76;
	bra.uni 	$L__BB0_70;
$L__BB0_76:
	mov.b32 	%r43, %f1362;
	and.b32  	%r485, %r43, 8388607;
	or.b32  	%r16359, %r485, 1065353216;
	mov.b32 	%f1361, %r16359;
	add.s32 	%r486, %r43, -1073741824;
	and.b32  	%r16360, %r486, -8388608;
	setp.eq.s32 	%p158, %r16360, 0;
	@%p158 bra 	$L__BB0_79;
// %bb.77:                              // %__nv_fmaf_rn.exit4.i.i.i1650.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
$L__BB0_78:                             // %__nv_fmaf_rn.exit4.i.i.i1650
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r487, %r16360, 192937984;
	add.s32 	%r488, %r16359, %r487;
	mov.b32 	%f928, %r488;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1361, %f928, %f934;
	sub.s32 	%r16360, %r16360, %r487;
	mov.b32 	%r16359, %f1361;
	setp.ne.s32 	%p159, %r16360, 0;
	setp.ne.s32 	%p160, %r16359, 0;
	and.pred  	%p161, %p159, %p160;
	@%p161 bra 	$L__BB0_78;
$L__BB0_79:                             // %__internal_fmodf_slowpath_mod.exit.i.i1652
	setp.gt.u32 	%p162, %r43, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p162;
	mul.f32 	%f936, %f1361, 0f34000000;
	mul.f32 	%f1362, %f935, %f936;
	bra.uni 	$L__BB0_80;
$L__BB0_70:                             // %__nv_fast_fdividef.exit.i.i.i1629
	div.approx.f32 	%f919, %f1362, %f257;
	cvt.rzi.f32.f32 	%f1360, %f919;
	fma.rn.f32 	%f110, %f1360, 0fC0000000, %f1362;
	mov.b32 	%r42, %f110;
	setp.lt.u32 	%p153, %r42, 1073741824;
	@%p153 bra 	$L__BB0_75;
// %bb.71:
	setp.lt.u32 	%p154, %r42, -2147483647;
	@%p154 bra 	$L__BB0_73;
// %bb.72:
	add.f32 	%f924, %f1360, 0fBF800000;
	setp.lt.f32 	%p157, %f110, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1360, %f925, %f924, %p157;
	bra.uni 	$L__BB0_75;
$L__BB0_73:
	add.f32 	%f1360, %f1360, 0f3F800000;
	setp.ltu.f32 	%p155, %f110, 0f40800000;
	@%p155 bra 	$L__BB0_75;
// %bb.74:                              // %__nv_fmaf_rn.exit.i.i.i1633
	add.f32 	%f920, %f1360, 0f3F800000;
	fma.rn.f32 	%f922, %f257, 0fC0400000, %f110;
	setp.ge.f32 	%p156, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1360, %f923, %f920, %p156;
$L__BB0_75:                             // %__internal_fmodf_fastpath_quot.exit.i.i1636
	fma.rn.f32 	%f1362, %f1360, 0fC0000000, %f1362;
$L__BB0_80:                             // %__internal_fmodf_kernel.exit.i1655
	selp.f32 	%f271, %f266, %f269, %p16;
	cvt.rzi.f32.f32 	%f272, %f266;
	setp.lt.f32 	%p17, %f270, 0f3F000000;
	selp.f32 	%f305, %f300, %f303, %p22;
	cvt.rzi.f32.f32 	%f306, %f300;
	setp.lt.f32 	%p23, %f304, 0f3F000000;
	selp.f32 	%f340, %f335, %f338, %p28;
	cvt.rzi.f32.f32 	%f341, %f335;
	setp.lt.f32 	%p29, %f339, 0f3F000000;
	selp.f32 	%f374, %f369, %f372, %p34;
	cvt.rzi.f32.f32 	%f375, %f369;
	setp.lt.f32 	%p35, %f373, 0f3F000000;
	selp.f32 	%f409, %f404, %f407, %p40;
	cvt.rzi.f32.f32 	%f410, %f404;
	setp.lt.f32 	%p41, %f408, 0f3F000000;
	selp.f32 	%f443, %f438, %f441, %p46;
	cvt.rzi.f32.f32 	%f444, %f438;
	setp.lt.f32 	%p47, %f442, 0f3F000000;
	selp.f32 	%f478, %f473, %f476, %p52;
	cvt.rzi.f32.f32 	%f479, %f473;
	setp.lt.f32 	%p53, %f477, 0f3F000000;
	selp.f32 	%f512, %f507, %f510, %p58;
	cvt.rzi.f32.f32 	%f513, %f507;
	setp.lt.f32 	%p59, %f511, 0f3F000000;
	selp.f32 	%f547, %f542, %f545, %p64;
	cvt.rzi.f32.f32 	%f548, %f542;
	setp.lt.f32 	%p65, %f546, 0f3F000000;
	selp.f32 	%f581, %f576, %f579, %p70;
	cvt.rzi.f32.f32 	%f582, %f576;
	setp.lt.f32 	%p71, %f580, 0f3F000000;
	selp.f32 	%f616, %f611, %f614, %p76;
	cvt.rzi.f32.f32 	%f617, %f611;
	setp.lt.f32 	%p77, %f615, 0f3F000000;
	selp.f32 	%f650, %f645, %f648, %p82;
	cvt.rzi.f32.f32 	%f651, %f645;
	setp.lt.f32 	%p83, %f649, 0f3F000000;
	selp.f32 	%f685, %f680, %f683, %p88;
	cvt.rzi.f32.f32 	%f686, %f680;
	setp.lt.f32 	%p89, %f684, 0f3F000000;
	selp.f32 	%f719, %f714, %f717, %p94;
	cvt.rzi.f32.f32 	%f720, %f714;
	setp.lt.f32 	%p95, %f718, 0f3F000000;
	selp.f32 	%f754, %f749, %f752, %p100;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p101, %f753, 0f3F000000;
	selp.f32 	%f788, %f783, %f786, %p106;
	cvt.rzi.f32.f32 	%f789, %f783;
	setp.lt.f32 	%p107, %f787, 0f3F000000;
	selp.f32 	%f839, %f838, %f837, %p125;
	selp.f32 	%f891, %f890, %f889, %p145;
	shl.b32 	%r171, %r1, 1;
	abs.f32 	%f937, %f1362;
	setp.gtu.f32 	%p163, %f937, 0f7F800000;
	@%p163 bra 	$L__BB0_82;
// %bb.81:
	mov.b32 	%r489, %f107;
	and.b32  	%r490, %r489, -2147483648;
	mov.b32 	%r491, %f1362;
	or.b32  	%r492, %r490, %r491;
	mov.b32 	%f1362, %r492;
$L__BB0_82:                             // %__nv_fmodf.exit1656
	selp.f32 	%f273, %f272, %f271, %p17;
	selp.f32 	%f307, %f306, %f305, %p23;
	selp.f32 	%f342, %f341, %f340, %p29;
	selp.f32 	%f376, %f375, %f374, %p35;
	selp.f32 	%f411, %f410, %f409, %p41;
	selp.f32 	%f445, %f444, %f443, %p47;
	selp.f32 	%f480, %f479, %f478, %p53;
	selp.f32 	%f514, %f513, %f512, %p59;
	selp.f32 	%f549, %f548, %f547, %p65;
	selp.f32 	%f583, %f582, %f581, %p71;
	selp.f32 	%f618, %f617, %f616, %p77;
	selp.f32 	%f652, %f651, %f650, %p83;
	selp.f32 	%f687, %f686, %f685, %p89;
	selp.f32 	%f721, %f720, %f719, %p95;
	selp.f32 	%f756, %f755, %f754, %p101;
	selp.f32 	%f790, %f789, %f788, %p107;
	fma.rn.f32 	%f840, %f839, 0fBF000000, %f1354;
	fma.rn.f32 	%f892, %f891, 0fBF000000, %f1358;
	add.f32 	%f938, %f1362, %f1362;
	mov.b32 	%r493, %f938;
	and.b32  	%r494, %r493, -2147483648;
	or.b32  	%r495, %r494, 1056964608;
	mov.b32 	%f939, %r495;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p164, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p164;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p165, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p165;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1362;
	and.b32  	%r501, %r171, 6;
	mov.u32 	%r502, -8;
	sub.s32 	%r503, %r502, %r501;
	mul.lo.s32 	%r504, %r41, %r503;
	cvt.rn.f32.s32 	%f968, %r504;
	div.approx.f32 	%f126, %f968, %f917;
	abs.f32 	%f1366, %f126;
	setp.lt.f32 	%p171, %f1366, 0f40000000;
	@%p171 bra 	$L__BB0_94;
// %bb.83:
	setp.gtu.f32 	%p172, %f1366, 0f4B800000;
	@%p172 bra 	$L__BB0_90;
	bra.uni 	$L__BB0_84;
$L__BB0_90:
	mov.b32 	%r51, %f1366;
	and.b32  	%r505, %r51, 8388607;
	or.b32  	%r16361, %r505, 1065353216;
	mov.b32 	%f1365, %r16361;
	add.s32 	%r506, %r51, -1073741824;
	and.b32  	%r16362, %r506, -8388608;
	setp.eq.s32 	%p178, %r16362, 0;
	@%p178 bra 	$L__BB0_93;
// %bb.91:                              // %__nv_fmaf_rn.exit4.i.i.i1681.preheader
	mov.f32 	%f979, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f978,%f979;
	// end inline asm
$L__BB0_92:                             // %__nv_fmaf_rn.exit4.i.i.i1681
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r507, %r16362, 192937984;
	add.s32 	%r508, %r16361, %r507;
	mov.b32 	%f980, %r508;
	mul.f32 	%f981, %f978, %f980;
	sub.f32 	%f982, %f980, %f981;
	fma.rn.f32 	%f983, %f982, %f978, %f981;
	sub.f32 	%f984, %f980, %f983;
	fma.rz.f32 	%f985, %f984, %f978, %f983;
	cvt.rzi.f32.f32 	%f986, %f985;
	sub.f32 	%f1365, %f980, %f986;
	sub.s32 	%r16362, %r16362, %r507;
	mov.b32 	%r16361, %f1365;
	setp.ne.s32 	%p179, %r16362, 0;
	setp.ne.s32 	%p180, %r16361, 0;
	and.pred  	%p181, %p179, %p180;
	@%p181 bra 	$L__BB0_92;
$L__BB0_93:                             // %__internal_fmodf_slowpath_mod.exit.i.i1683
	setp.gt.u32 	%p182, %r51, 2139095039;
	selp.f32 	%f987, 0f7FFFFFFF, 0f4B800000, %p182;
	mul.f32 	%f988, %f1365, 0f34000000;
	mul.f32 	%f1366, %f987, %f988;
	bra.uni 	$L__BB0_94;
$L__BB0_84:                             // %__nv_fast_fdividef.exit.i.i.i1660
	div.approx.f32 	%f971, %f1366, %f257;
	cvt.rzi.f32.f32 	%f1364, %f971;
	fma.rn.f32 	%f129, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r50, %f129;
	setp.lt.u32 	%p173, %r50, 1073741824;
	@%p173 bra 	$L__BB0_89;
// %bb.85:
	setp.lt.u32 	%p174, %r50, -2147483647;
	@%p174 bra 	$L__BB0_87;
// %bb.86:
	add.f32 	%f976, %f1364, 0fBF800000;
	setp.lt.f32 	%p177, %f129, 0fC0000000;
	add.f32 	%f977, %f976, 0fBF800000;
	selp.f32 	%f1364, %f977, %f976, %p177;
	bra.uni 	$L__BB0_89;
$L__BB0_87:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p175, %f129, 0f40800000;
	@%p175 bra 	$L__BB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i1664
	add.f32 	%f972, %f1364, 0f3F800000;
	fma.rn.f32 	%f974, %f257, 0fC0400000, %f129;
	setp.ge.f32 	%p176, %f974, 0f00000000;
	add.f32 	%f975, %f972, 0f3F800000;
	selp.f32 	%f1364, %f975, %f972, %p176;
$L__BB0_89:                             // %__internal_fmodf_fastpath_quot.exit.i.i1667
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
$L__BB0_94:                             // %__internal_fmodf_kernel.exit.i1686
	fma.rn.f32 	%f274, %f273, 0fBF000000, %f265;
	fma.rn.f32 	%f308, %f307, 0fBF000000, %f299;
	fma.rn.f32 	%f343, %f342, 0fBF000000, %f334;
	fma.rn.f32 	%f377, %f376, 0fBF000000, %f368;
	fma.rn.f32 	%f412, %f411, 0fBF000000, %f403;
	fma.rn.f32 	%f446, %f445, 0fBF000000, %f437;
	fma.rn.f32 	%f481, %f480, 0fBF000000, %f472;
	fma.rn.f32 	%f515, %f514, 0fBF000000, %f506;
	fma.rn.f32 	%f550, %f549, 0fBF000000, %f541;
	fma.rn.f32 	%f584, %f583, 0fBF000000, %f575;
	fma.rn.f32 	%f619, %f618, 0fBF000000, %f610;
	fma.rn.f32 	%f653, %f652, 0fBF000000, %f644;
	fma.rn.f32 	%f688, %f687, 0fBF000000, %f679;
	fma.rn.f32 	%f722, %f721, 0fBF000000, %f713;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f748;
	fma.rn.f32 	%f791, %f790, 0fBF000000, %f782;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f893, %f892, %f892;
	mul.f32 	%f947, %f946, %f946;
	abs.f32 	%f989, %f1366;
	setp.gtu.f32 	%p183, %f989, 0f7F800000;
	@%p183 bra 	$L__BB0_96;
// %bb.95:
	mov.b32 	%r509, %f126;
	and.b32  	%r510, %r509, -2147483648;
	mov.b32 	%r511, %f1366;
	or.b32  	%r512, %r510, %r511;
	mov.b32 	%f1366, %r512;
$L__BB0_96:                             // %__nv_fmodf.exit1687
	mul.f32 	%f275, %f274, %f274;
	mul.f32 	%f309, %f308, %f308;
	mul.f32 	%f344, %f343, %f343;
	mul.f32 	%f378, %f377, %f377;
	mul.f32 	%f413, %f412, %f412;
	mul.f32 	%f447, %f446, %f446;
	mul.f32 	%f482, %f481, %f481;
	mul.f32 	%f516, %f515, %f515;
	mul.f32 	%f551, %f550, %f550;
	mul.f32 	%f585, %f584, %f584;
	mul.f32 	%f620, %f619, %f619;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f689, %f688, %f688;
	mul.f32 	%f723, %f722, %f722;
	mul.f32 	%f758, %f757, %f757;
	mul.f32 	%f792, %f791, %f791;
	fma.rn.f32 	%f842, %f841, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f843, %f841, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f894, %f893, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f895, %f893, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f948, %f947, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f949, %f947, 0f3E684E12, 0fBFAAD2E0;
	add.f32 	%f990, %f1366, %f1366;
	mov.b32 	%r525, %f990;
	and.b32  	%r526, %r525, -2147483648;
	or.b32  	%r527, %r526, 1056964608;
	mov.b32 	%f991, %r527;
	add.f32 	%f992, %f990, %f991;
	cvt.rzi.f32.f32 	%f993, %f992;
	abs.f32 	%f994, %f990;
	setp.gt.f32 	%p184, %f994, 0f4B000000;
	selp.f32 	%f995, %f990, %f993, %p184;
	cvt.rzi.f32.f32 	%f996, %f990;
	setp.lt.f32 	%p185, %f994, 0f3F000000;
	selp.f32 	%f997, %f996, %f995, %p185;
	fma.rn.f32 	%f998, %f997, 0fBF000000, %f1366;
	mul.f32 	%f999, %f998, %f998;
	fma.rn.f32 	%f1000, %f999, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1001, %f999, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r533, %r184, 2147483646;
	shl.b32 	%r534, %r183, 2;
	sub.s32 	%r535, %r533, %r534;
	mul.lo.s32 	%r536, %r535, %r41;
	shl.b32 	%r62, %r536, 1;
	cvt.rn.f32.s32 	%f143, %r62;
	div.approx.f32 	%f144, %f143, %f289;
	abs.f32 	%f1370, %f144;
	setp.lt.f32 	%p191, %f1370, 0f40000000;
	@%p191 bra 	$L__BB0_108;
// %bb.97:
	setp.gtu.f32 	%p192, %f1370, 0f4B800000;
	@%p192 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_98;
$L__BB0_104:
	mov.b32 	%r64, %f1370;
	and.b32  	%r537, %r64, 8388607;
	or.b32  	%r16363, %r537, 1065353216;
	mov.b32 	%f1369, %r16363;
	add.s32 	%r538, %r64, -1073741824;
	and.b32  	%r16364, %r538, -8388608;
	setp.eq.s32 	%p198, %r16364, 0;
	@%p198 bra 	$L__BB0_107;
// %bb.105:                             // %__nv_fmaf_rn.exit4.i.i.i1712.preheader
	mov.f32 	%f1032, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1031,%f1032;
	// end inline asm
$L__BB0_106:                            // %__nv_fmaf_rn.exit4.i.i.i1712
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r539, %r16364, 192937984;
	add.s32 	%r540, %r16363, %r539;
	mov.b32 	%f1033, %r540;
	mul.f32 	%f1034, %f1031, %f1033;
	sub.f32 	%f1035, %f1033, %f1034;
	fma.rn.f32 	%f1036, %f1035, %f1031, %f1034;
	sub.f32 	%f1037, %f1033, %f1036;
	fma.rz.f32 	%f1038, %f1037, %f1031, %f1036;
	cvt.rzi.f32.f32 	%f1039, %f1038;
	sub.f32 	%f1369, %f1033, %f1039;
	sub.s32 	%r16364, %r16364, %r539;
	mov.b32 	%r16363, %f1369;
	setp.ne.s32 	%p199, %r16364, 0;
	setp.ne.s32 	%p200, %r16363, 0;
	and.pred  	%p201, %p199, %p200;
	@%p201 bra 	$L__BB0_106;
$L__BB0_107:                            // %__internal_fmodf_slowpath_mod.exit.i.i1714
	setp.gt.u32 	%p202, %r64, 2139095039;
	selp.f32 	%f1040, 0f7FFFFFFF, 0f4B800000, %p202;
	mul.f32 	%f1041, %f1369, 0f34000000;
	mul.f32 	%f1370, %f1040, %f1041;
	bra.uni 	$L__BB0_108;
$L__BB0_98:                             // %__nv_fast_fdividef.exit.i.i.i1691
	div.approx.f32 	%f1024, %f1370, %f257;
	cvt.rzi.f32.f32 	%f1368, %f1024;
	fma.rn.f32 	%f147, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r63, %f147;
	setp.lt.u32 	%p193, %r63, 1073741824;
	@%p193 bra 	$L__BB0_103;
// %bb.99:
	setp.lt.u32 	%p194, %r63, -2147483647;
	@%p194 bra 	$L__BB0_101;
// %bb.100:
	add.f32 	%f1029, %f1368, 0fBF800000;
	setp.lt.f32 	%p197, %f147, 0fC0000000;
	add.f32 	%f1030, %f1029, 0fBF800000;
	selp.f32 	%f1368, %f1030, %f1029, %p197;
	bra.uni 	$L__BB0_103;
$L__BB0_101:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p195, %f147, 0f40800000;
	@%p195 bra 	$L__BB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i1695
	add.f32 	%f1025, %f1368, 0f3F800000;
	fma.rn.f32 	%f1027, %f257, 0fC0400000, %f147;
	setp.ge.f32 	%p196, %f1027, 0f00000000;
	add.f32 	%f1028, %f1025, 0f3F800000;
	selp.f32 	%f1368, %f1028, %f1025, %p196;
$L__BB0_103:                            // %__internal_fmodf_fastpath_quot.exit.i.i1698
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
$L__BB0_108:                            // %__internal_fmodf_kernel.exit.i1717
	cvt.rzi.s32.f32 	%r293, %f273;
	fma.rn.f32 	%f276, %f275, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f277, %f275, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r300, %f307;
	fma.rn.f32 	%f310, %f309, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f311, %f309, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r311, %f342;
	fma.rn.f32 	%f345, %f344, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f346, %f344, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r318, %f376;
	fma.rn.f32 	%f379, %f378, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f380, %f378, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r329, %f411;
	fma.rn.f32 	%f414, %f413, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f415, %f413, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r336, %f445;
	fma.rn.f32 	%f448, %f447, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f449, %f447, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r347, %f480;
	fma.rn.f32 	%f483, %f482, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f484, %f482, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r354, %f514;
	fma.rn.f32 	%f517, %f516, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f518, %f516, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r365, %f549;
	fma.rn.f32 	%f552, %f551, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f553, %f551, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r372, %f583;
	fma.rn.f32 	%f586, %f585, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f587, %f585, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r383, %f618;
	fma.rn.f32 	%f621, %f620, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f622, %f620, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r390, %f652;
	fma.rn.f32 	%f655, %f654, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f656, %f654, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r401, %f687;
	fma.rn.f32 	%f690, %f689, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f691, %f689, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r408, %f721;
	fma.rn.f32 	%f724, %f723, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f725, %f723, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r419, %f756;
	fma.rn.f32 	%f759, %f758, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f760, %f758, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r426, %f790;
	fma.rn.f32 	%f793, %f792, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f794, %f792, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r444, %f839;
	fma.rn.f32 	%f844, %f842, %f841, 0fC0A55DF6;
	fma.rn.f32 	%f845, %f843, %f841, 0f4081E0CF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	cvt.rzi.s32.f32 	%r473, %f891;
	fma.rn.f32 	%f896, %f894, %f893, 0fC0A55DF6;
	fma.rn.f32 	%f897, %f895, %f893, 0f4081E0CF;
	fma.rn.f32 	%f898, %f893, %f892, 0f00000000;
	cvt.rzi.s32.f32 	%r496, %f945;
	fma.rn.f32 	%f950, %f948, %f947, 0fC0A55DF6;
	fma.rn.f32 	%f951, %f949, %f947, 0f4081E0CF;
	fma.rn.f32 	%f952, %f947, %f946, 0f00000000;
	cvt.rzi.s32.f32 	%r528, %f997;
	fma.rn.f32 	%f1002, %f1000, %f999, 0fC0A55DF6;
	fma.rn.f32 	%f1003, %f1001, %f999, 0f4081E0CF;
	fma.rn.f32 	%f1004, %f999, %f998, 0f00000000;
	abs.f32 	%f1042, %f1370;
	setp.gtu.f32 	%p203, %f1042, 0f7F800000;
	@%p203 bra 	$L__BB0_110;
// %bb.109:
	mov.b32 	%r541, %f144;
	and.b32  	%r542, %r541, -2147483648;
	mov.b32 	%r543, %f1370;
	or.b32  	%r544, %r542, %r543;
	mov.b32 	%f1370, %r544;
$L__BB0_110:                            // %__nv_fmodf.exit1718
	add.s32 	%r294, %r293, 1;
	fma.rn.f32 	%f278, %f276, %f275, 0fC0A55DF6;
	fma.rn.f32 	%f279, %f277, %f275, 0f4081E0CF;
	fma.rn.f32 	%f280, %f275, %f274, 0f00000000;
	add.s32 	%r301, %r300, 1;
	fma.rn.f32 	%f312, %f310, %f309, 0fC0A55DF6;
	fma.rn.f32 	%f313, %f311, %f309, 0f4081E0CF;
	fma.rn.f32 	%f314, %f309, %f308, 0f00000000;
	add.s32 	%r312, %r311, 1;
	fma.rn.f32 	%f347, %f345, %f344, 0fC0A55DF6;
	fma.rn.f32 	%f348, %f346, %f344, 0f4081E0CF;
	fma.rn.f32 	%f349, %f344, %f343, 0f00000000;
	add.s32 	%r319, %r318, 1;
	fma.rn.f32 	%f381, %f379, %f378, 0fC0A55DF6;
	fma.rn.f32 	%f382, %f380, %f378, 0f4081E0CF;
	fma.rn.f32 	%f383, %f378, %f377, 0f00000000;
	add.s32 	%r330, %r329, 1;
	fma.rn.f32 	%f416, %f414, %f413, 0fC0A55DF6;
	fma.rn.f32 	%f417, %f415, %f413, 0f4081E0CF;
	fma.rn.f32 	%f418, %f413, %f412, 0f00000000;
	add.s32 	%r337, %r336, 1;
	fma.rn.f32 	%f450, %f448, %f447, 0fC0A55DF6;
	fma.rn.f32 	%f451, %f449, %f447, 0f4081E0CF;
	fma.rn.f32 	%f452, %f447, %f446, 0f00000000;
	add.s32 	%r348, %r347, 1;
	fma.rn.f32 	%f485, %f483, %f482, 0fC0A55DF6;
	fma.rn.f32 	%f486, %f484, %f482, 0f4081E0CF;
	fma.rn.f32 	%f487, %f482, %f481, 0f00000000;
	add.s32 	%r355, %r354, 1;
	fma.rn.f32 	%f519, %f517, %f516, 0fC0A55DF6;
	fma.rn.f32 	%f520, %f518, %f516, 0f4081E0CF;
	fma.rn.f32 	%f521, %f516, %f515, 0f00000000;
	add.s32 	%r366, %r365, 1;
	fma.rn.f32 	%f554, %f552, %f551, 0fC0A55DF6;
	fma.rn.f32 	%f555, %f553, %f551, 0f4081E0CF;
	fma.rn.f32 	%f556, %f551, %f550, 0f00000000;
	add.s32 	%r373, %r372, 1;
	fma.rn.f32 	%f588, %f586, %f585, 0fC0A55DF6;
	fma.rn.f32 	%f589, %f587, %f585, 0f4081E0CF;
	fma.rn.f32 	%f590, %f585, %f584, 0f00000000;
	add.s32 	%r384, %r383, 1;
	fma.rn.f32 	%f623, %f621, %f620, 0fC0A55DF6;
	fma.rn.f32 	%f624, %f622, %f620, 0f4081E0CF;
	fma.rn.f32 	%f625, %f620, %f619, 0f00000000;
	add.s32 	%r391, %r390, 1;
	fma.rn.f32 	%f657, %f655, %f654, 0fC0A55DF6;
	fma.rn.f32 	%f658, %f656, %f654, 0f4081E0CF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	add.s32 	%r402, %r401, 1;
	fma.rn.f32 	%f692, %f690, %f689, 0fC0A55DF6;
	fma.rn.f32 	%f693, %f691, %f689, 0f4081E0CF;
	fma.rn.f32 	%f694, %f689, %f688, 0f00000000;
	add.s32 	%r409, %r408, 1;
	fma.rn.f32 	%f726, %f724, %f723, 0fC0A55DF6;
	fma.rn.f32 	%f727, %f725, %f723, 0f4081E0CF;
	fma.rn.f32 	%f728, %f723, %f722, 0f00000000;
	add.s32 	%r420, %r419, 1;
	fma.rn.f32 	%f761, %f759, %f758, 0fC0A55DF6;
	fma.rn.f32 	%f762, %f760, %f758, 0f4081E0CF;
	fma.rn.f32 	%f763, %f758, %f757, 0f00000000;
	add.s32 	%r427, %r426, 1;
	fma.rn.f32 	%f795, %f793, %f792, 0fC0A55DF6;
	fma.rn.f32 	%f796, %f794, %f792, 0f4081E0CF;
	fma.rn.f32 	%f797, %f792, %f791, 0f00000000;
	fma.rn.f32 	%f847, %f845, %f841, 0fC09DE9E6;
	fma.rn.f32 	%f848, %f844, %f846, 0f00000000;
	and.b32  	%r445, %r444, 1;
	fma.rn.f32 	%f899, %f897, %f893, 0fC09DE9E6;
	fma.rn.f32 	%f900, %f896, %f898, 0f00000000;
	and.b32  	%r474, %r473, 1;
	fma.rn.f32 	%f953, %f951, %f947, 0fC09DE9E6;
	fma.rn.f32 	%f954, %f950, %f952, 0f00000000;
	and.b32  	%r497, %r496, 1;
	fma.rn.f32 	%f1005, %f1003, %f999, 0fC09DE9E6;
	fma.rn.f32 	%f1006, %f1002, %f1004, 0f00000000;
	and.b32  	%r529, %r528, 1;
	add.f32 	%f1043, %f1370, %f1370;
	mov.b32 	%r545, %f1043;
	and.b32  	%r546, %r545, -2147483648;
	or.b32  	%r547, %r546, 1056964608;
	mov.b32 	%f1044, %r547;
	add.f32 	%f1045, %f1043, %f1044;
	cvt.rzi.f32.f32 	%f1046, %f1045;
	abs.f32 	%f1047, %f1043;
	setp.gt.f32 	%p204, %f1047, 0f4B000000;
	selp.f32 	%f1048, %f1043, %f1046, %p204;
	cvt.rzi.f32.f32 	%f1049, %f1043;
	setp.lt.f32 	%p205, %f1047, 0f3F000000;
	selp.f32 	%f1050, %f1049, %f1048, %p205;
	cvt.rzi.s32.f32 	%r548, %f1050;
	fma.rn.f32 	%f1051, %f1050, 0fBF000000, %f1370;
	mul.f32 	%f1052, %f1051, %f1051;
	fma.rn.f32 	%f1053, %f1052, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1054, %f1052, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1055, %f1053, %f1052, 0fC0A55DF6;
	fma.rn.f32 	%f1056, %f1054, %f1052, 0f4081E0CF;
	fma.rn.f32 	%f1057, %f1052, %f1051, 0f00000000;
	shl.b32 	%r553, %r41, 4;
	sub.s32 	%r554, %r62, %r553;
	cvt.rn.f32.s32 	%f163, %r554;
	div.approx.f32 	%f164, %f163, %f289;
	abs.f32 	%f1374, %f164;
	setp.lt.f32 	%p211, %f1374, 0f40000000;
	@%p211 bra 	$L__BB0_122;
// %bb.111:
	setp.gtu.f32 	%p212, %f1374, 0f4B800000;
	@%p212 bra 	$L__BB0_118;
	bra.uni 	$L__BB0_112;
$L__BB0_118:
	mov.b32 	%r72, %f1374;
	and.b32  	%r555, %r72, 8388607;
	or.b32  	%r16365, %r555, 1065353216;
	mov.b32 	%f1373, %r16365;
	add.s32 	%r556, %r72, -1073741824;
	and.b32  	%r16366, %r556, -8388608;
	setp.eq.s32 	%p218, %r16366, 0;
	@%p218 bra 	$L__BB0_121;
// %bb.119:                             // %__nv_fmaf_rn.exit4.i.i.i1743.preheader
	mov.f32 	%f1083, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1082,%f1083;
	// end inline asm
$L__BB0_120:                            // %__nv_fmaf_rn.exit4.i.i.i1743
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r557, %r16366, 192937984;
	add.s32 	%r558, %r16365, %r557;
	mov.b32 	%f1084, %r558;
	mul.f32 	%f1085, %f1082, %f1084;
	sub.f32 	%f1086, %f1084, %f1085;
	fma.rn.f32 	%f1087, %f1086, %f1082, %f1085;
	sub.f32 	%f1088, %f1084, %f1087;
	fma.rz.f32 	%f1089, %f1088, %f1082, %f1087;
	cvt.rzi.f32.f32 	%f1090, %f1089;
	sub.f32 	%f1373, %f1084, %f1090;
	sub.s32 	%r16366, %r16366, %r557;
	mov.b32 	%r16365, %f1373;
	setp.ne.s32 	%p219, %r16366, 0;
	setp.ne.s32 	%p220, %r16365, 0;
	and.pred  	%p221, %p219, %p220;
	@%p221 bra 	$L__BB0_120;
$L__BB0_121:                            // %__internal_fmodf_slowpath_mod.exit.i.i1745
	setp.gt.u32 	%p222, %r72, 2139095039;
	selp.f32 	%f1091, 0f7FFFFFFF, 0f4B800000, %p222;
	mul.f32 	%f1092, %f1373, 0f34000000;
	mul.f32 	%f1374, %f1091, %f1092;
	bra.uni 	$L__BB0_122;
$L__BB0_112:                            // %__nv_fast_fdividef.exit.i.i.i1722
	div.approx.f32 	%f1075, %f1374, %f257;
	cvt.rzi.f32.f32 	%f1372, %f1075;
	fma.rn.f32 	%f167, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r71, %f167;
	setp.lt.u32 	%p213, %r71, 1073741824;
	@%p213 bra 	$L__BB0_117;
// %bb.113:
	setp.lt.u32 	%p214, %r71, -2147483647;
	@%p214 bra 	$L__BB0_115;
// %bb.114:
	add.f32 	%f1080, %f1372, 0fBF800000;
	setp.lt.f32 	%p217, %f167, 0fC0000000;
	add.f32 	%f1081, %f1080, 0fBF800000;
	selp.f32 	%f1372, %f1081, %f1080, %p217;
	bra.uni 	$L__BB0_117;
$L__BB0_115:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p215, %f167, 0f40800000;
	@%p215 bra 	$L__BB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i1726
	add.f32 	%f1076, %f1372, 0f3F800000;
	fma.rn.f32 	%f1078, %f257, 0fC0400000, %f167;
	setp.ge.f32 	%p216, %f1078, 0f00000000;
	add.f32 	%f1079, %f1076, 0f3F800000;
	selp.f32 	%f1372, %f1079, %f1076, %p216;
$L__BB0_117:                            // %__internal_fmodf_fastpath_quot.exit.i.i1729
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
$L__BB0_122:                            // %__internal_fmodf_kernel.exit.i1748
	fma.rn.f32 	%f281, %f279, %f275, 0fC09DE9E6;
	fma.rn.f32 	%f282, %f278, %f280, 0f00000000;
	and.b32  	%r295, %r294, 1;
	fma.rn.f32 	%f315, %f313, %f309, 0fC09DE9E6;
	fma.rn.f32 	%f316, %f312, %f314, 0f00000000;
	and.b32  	%r302, %r301, 1;
	fma.rn.f32 	%f350, %f348, %f344, 0fC09DE9E6;
	fma.rn.f32 	%f351, %f347, %f349, 0f00000000;
	and.b32  	%r313, %r312, 1;
	fma.rn.f32 	%f384, %f382, %f378, 0fC09DE9E6;
	fma.rn.f32 	%f385, %f381, %f383, 0f00000000;
	and.b32  	%r320, %r319, 1;
	fma.rn.f32 	%f419, %f417, %f413, 0fC09DE9E6;
	fma.rn.f32 	%f420, %f416, %f418, 0f00000000;
	and.b32  	%r331, %r330, 1;
	fma.rn.f32 	%f453, %f451, %f447, 0fC09DE9E6;
	fma.rn.f32 	%f454, %f450, %f452, 0f00000000;
	and.b32  	%r338, %r337, 1;
	fma.rn.f32 	%f488, %f486, %f482, 0fC09DE9E6;
	fma.rn.f32 	%f489, %f485, %f487, 0f00000000;
	and.b32  	%r349, %r348, 1;
	fma.rn.f32 	%f522, %f520, %f516, 0fC09DE9E6;
	fma.rn.f32 	%f523, %f519, %f521, 0f00000000;
	and.b32  	%r356, %r355, 1;
	fma.rn.f32 	%f557, %f555, %f551, 0fC09DE9E6;
	fma.rn.f32 	%f558, %f554, %f556, 0f00000000;
	and.b32  	%r367, %r366, 1;
	fma.rn.f32 	%f591, %f589, %f585, 0fC09DE9E6;
	fma.rn.f32 	%f592, %f588, %f590, 0f00000000;
	and.b32  	%r374, %r373, 1;
	fma.rn.f32 	%f626, %f624, %f620, 0fC09DE9E6;
	fma.rn.f32 	%f627, %f623, %f625, 0f00000000;
	and.b32  	%r385, %r384, 1;
	fma.rn.f32 	%f660, %f658, %f654, 0fC09DE9E6;
	fma.rn.f32 	%f661, %f657, %f659, 0f00000000;
	and.b32  	%r392, %r391, 1;
	fma.rn.f32 	%f695, %f693, %f689, 0fC09DE9E6;
	fma.rn.f32 	%f696, %f692, %f694, 0f00000000;
	and.b32  	%r403, %r402, 1;
	fma.rn.f32 	%f729, %f727, %f723, 0fC09DE9E6;
	fma.rn.f32 	%f730, %f726, %f728, 0f00000000;
	and.b32  	%r410, %r409, 1;
	fma.rn.f32 	%f764, %f762, %f758, 0fC09DE9E6;
	fma.rn.f32 	%f765, %f761, %f763, 0f00000000;
	and.b32  	%r421, %r420, 1;
	fma.rn.f32 	%f798, %f796, %f792, 0fC09DE9E6;
	fma.rn.f32 	%f799, %f795, %f797, 0f00000000;
	and.b32  	%r428, %r427, 1;
	fma.rn.f32 	%f849, %f847, %f841, 0f3F800000;
	fma.rn.f32 	%f850, %f840, 0f40490FDB, %f848;
	setp.eq.b32 	%p126, %r445, 1;
	fma.rn.f32 	%f901, %f899, %f893, 0f3F800000;
	fma.rn.f32 	%f902, %f892, 0f40490FDB, %f900;
	setp.eq.b32 	%p146, %r474, 1;
	fma.rn.f32 	%f955, %f953, %f947, 0f3F800000;
	fma.rn.f32 	%f956, %f946, 0f40490FDB, %f954;
	setp.eq.b32 	%p166, %r497, 1;
	fma.rn.f32 	%f1007, %f1005, %f999, 0f3F800000;
	fma.rn.f32 	%f1008, %f998, 0f40490FDB, %f1006;
	setp.eq.b32 	%p186, %r529, 1;
	fma.rn.f32 	%f1058, %f1056, %f1052, 0fC09DE9E6;
	fma.rn.f32 	%f1059, %f1055, %f1057, 0f00000000;
	and.b32  	%r549, %r548, 1;
	abs.f32 	%f1093, %f1374;
	setp.gtu.f32 	%p223, %f1093, 0f7F800000;
	@%p223 bra 	$L__BB0_124;
// %bb.123:
	mov.b32 	%r559, %f164;
	and.b32  	%r560, %r559, -2147483648;
	mov.b32 	%r561, %f1374;
	or.b32  	%r562, %r560, %r561;
	mov.b32 	%f1374, %r562;
$L__BB0_124:                            // %__nv_fmodf.exit1749
	and.b32  	%r172, %r171, 8;
	shl.b32 	%r173, %r2, 5;
	and.b32  	%r179, %r1, 18;
	fma.rn.f32 	%f283, %f281, %f275, 0f3F800000;
	fma.rn.f32 	%f284, %f274, 0f40490FDB, %f282;
	setp.eq.b32 	%p18, %r295, 1;
	fma.rn.f32 	%f317, %f315, %f309, 0f3F800000;
	fma.rn.f32 	%f318, %f308, 0f40490FDB, %f316;
	setp.eq.b32 	%p24, %r302, 1;
	fma.rn.f32 	%f352, %f350, %f344, 0f3F800000;
	fma.rn.f32 	%f353, %f343, 0f40490FDB, %f351;
	setp.eq.b32 	%p30, %r313, 1;
	fma.rn.f32 	%f386, %f384, %f378, 0f3F800000;
	fma.rn.f32 	%f387, %f377, 0f40490FDB, %f385;
	setp.eq.b32 	%p36, %r320, 1;
	fma.rn.f32 	%f421, %f419, %f413, 0f3F800000;
	fma.rn.f32 	%f422, %f412, 0f40490FDB, %f420;
	setp.eq.b32 	%p42, %r331, 1;
	fma.rn.f32 	%f455, %f453, %f447, 0f3F800000;
	fma.rn.f32 	%f456, %f446, 0f40490FDB, %f454;
	setp.eq.b32 	%p48, %r338, 1;
	fma.rn.f32 	%f490, %f488, %f482, 0f3F800000;
	fma.rn.f32 	%f491, %f481, 0f40490FDB, %f489;
	setp.eq.b32 	%p54, %r349, 1;
	fma.rn.f32 	%f524, %f522, %f516, 0f3F800000;
	fma.rn.f32 	%f525, %f515, 0f40490FDB, %f523;
	setp.eq.b32 	%p60, %r356, 1;
	fma.rn.f32 	%f559, %f557, %f551, 0f3F800000;
	fma.rn.f32 	%f560, %f550, 0f40490FDB, %f558;
	setp.eq.b32 	%p66, %r367, 1;
	fma.rn.f32 	%f593, %f591, %f585, 0f3F800000;
	fma.rn.f32 	%f594, %f584, 0f40490FDB, %f592;
	setp.eq.b32 	%p72, %r374, 1;
	fma.rn.f32 	%f628, %f626, %f620, 0f3F800000;
	fma.rn.f32 	%f629, %f619, 0f40490FDB, %f627;
	setp.eq.b32 	%p78, %r385, 1;
	fma.rn.f32 	%f662, %f660, %f654, 0f3F800000;
	fma.rn.f32 	%f663, %f653, 0f40490FDB, %f661;
	setp.eq.b32 	%p84, %r392, 1;
	fma.rn.f32 	%f697, %f695, %f689, 0f3F800000;
	fma.rn.f32 	%f698, %f688, 0f40490FDB, %f696;
	setp.eq.b32 	%p90, %r403, 1;
	fma.rn.f32 	%f731, %f729, %f723, 0f3F800000;
	fma.rn.f32 	%f732, %f722, 0f40490FDB, %f730;
	setp.eq.b32 	%p96, %r410, 1;
	fma.rn.f32 	%f766, %f764, %f758, 0f3F800000;
	fma.rn.f32 	%f767, %f757, 0f40490FDB, %f765;
	setp.eq.b32 	%p102, %r421, 1;
	fma.rn.f32 	%f800, %f798, %f792, 0f3F800000;
	fma.rn.f32 	%f801, %f791, 0f40490FDB, %f799;
	setp.eq.b32 	%p108, %r428, 1;
	selp.f32 	%f851, %f849, %f850, %p126;
	and.b32  	%r446, %r444, 2;
	selp.f32 	%f903, %f901, %f902, %p146;
	and.b32  	%r475, %r473, 2;
	selp.f32 	%f957, %f955, %f956, %p166;
	and.b32  	%r498, %r496, 2;
	selp.f32 	%f1009, %f1007, %f1008, %p186;
	and.b32  	%r530, %r528, 2;
	fma.rn.f32 	%f1060, %f1058, %f1052, 0f3F800000;
	fma.rn.f32 	%f1061, %f1051, 0f40490FDB, %f1059;
	setp.eq.b32 	%p206, %r549, 1;
	add.f32 	%f1094, %f1374, %f1374;
	mov.b32 	%r569, %f1094;
	and.b32  	%r570, %r569, -2147483648;
	or.b32  	%r571, %r570, 1056964608;
	mov.b32 	%f1095, %r571;
	add.f32 	%f1096, %f1094, %f1095;
	cvt.rzi.f32.f32 	%f1097, %f1096;
	abs.f32 	%f1098, %f1094;
	setp.gt.f32 	%p224, %f1098, 0f4B000000;
	selp.f32 	%f1099, %f1094, %f1097, %p224;
	cvt.rzi.f32.f32 	%f1100, %f1094;
	setp.lt.f32 	%p225, %f1098, 0f3F000000;
	selp.f32 	%f1101, %f1100, %f1099, %p225;
	cvt.rzi.s32.f32 	%r572, %f1101;
	fma.rn.f32 	%f1102, %f1101, 0fBF000000, %f1374;
	mul.f32 	%f1103, %f1102, %f1102;
	fma.rn.f32 	%f1104, %f1103, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1105, %f1103, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1106, %f1104, %f1103, 0fC0A55DF6;
	fma.rn.f32 	%f1107, %f1105, %f1103, 0f4081E0CF;
	fma.rn.f32 	%f1108, %f1103, %f1102, 0f00000000;
	fma.rn.f32 	%f1109, %f1107, %f1103, 0fC09DE9E6;
	fma.rn.f32 	%f1110, %f1106, %f1108, 0f00000000;
	fma.rn.f32 	%f1111, %f1109, %f1103, 0f3F800000;
	fma.rn.f32 	%f1112, %f1102, 0f40490FDB, %f1110;
	and.b32  	%r573, %r572, 1;
	setp.eq.b32 	%p226, %r573, 1;
	mov.f32 	%f1126, 0f41800000;
	div.approx.f32 	%f181, %f143, %f1126;
	abs.f32 	%f1378, %f181;
	setp.lt.f32 	%p231, %f1378, 0f40000000;
	@%p231 bra 	$L__BB0_136;
// %bb.125:
	setp.gtu.f32 	%p232, %f1378, 0f4B800000;
	@%p232 bra 	$L__BB0_132;
	bra.uni 	$L__BB0_126;
$L__BB0_132:
	mov.b32 	%r82, %f1378;
	and.b32  	%r577, %r82, 8388607;
	or.b32  	%r16367, %r577, 1065353216;
	mov.b32 	%f1377, %r16367;
	add.s32 	%r578, %r82, -1073741824;
	and.b32  	%r16368, %r578, -8388608;
	setp.eq.s32 	%p238, %r16368, 0;
	@%p238 bra 	$L__BB0_135;
// %bb.133:                             // %__nv_fmaf_rn.exit4.i.i.i1774.preheader
	mov.f32 	%f1136, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1135,%f1136;
	// end inline asm
$L__BB0_134:                            // %__nv_fmaf_rn.exit4.i.i.i1774
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r579, %r16368, 192937984;
	add.s32 	%r580, %r16367, %r579;
	mov.b32 	%f1137, %r580;
	mul.f32 	%f1138, %f1135, %f1137;
	sub.f32 	%f1139, %f1137, %f1138;
	fma.rn.f32 	%f1140, %f1139, %f1135, %f1138;
	sub.f32 	%f1141, %f1137, %f1140;
	fma.rz.f32 	%f1142, %f1141, %f1135, %f1140;
	cvt.rzi.f32.f32 	%f1143, %f1142;
	sub.f32 	%f1377, %f1137, %f1143;
	sub.s32 	%r16368, %r16368, %r579;
	mov.b32 	%r16367, %f1377;
	setp.ne.s32 	%p239, %r16368, 0;
	setp.ne.s32 	%p240, %r16367, 0;
	and.pred  	%p241, %p239, %p240;
	@%p241 bra 	$L__BB0_134;
$L__BB0_135:                            // %__internal_fmodf_slowpath_mod.exit.i.i1776
	setp.gt.u32 	%p242, %r82, 2139095039;
	selp.f32 	%f1144, 0f7FFFFFFF, 0f4B800000, %p242;
	mul.f32 	%f1145, %f1377, 0f34000000;
	mul.f32 	%f1378, %f1144, %f1145;
	bra.uni 	$L__BB0_136;
$L__BB0_126:                            // %__nv_fast_fdividef.exit.i.i.i1753
	div.approx.f32 	%f1128, %f1378, %f257;
	cvt.rzi.f32.f32 	%f1376, %f1128;
	fma.rn.f32 	%f184, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r81, %f184;
	setp.lt.u32 	%p233, %r81, 1073741824;
	@%p233 bra 	$L__BB0_131;
// %bb.127:
	setp.lt.u32 	%p234, %r81, -2147483647;
	@%p234 bra 	$L__BB0_129;
// %bb.128:
	add.f32 	%f1133, %f1376, 0fBF800000;
	setp.lt.f32 	%p237, %f184, 0fC0000000;
	add.f32 	%f1134, %f1133, 0fBF800000;
	selp.f32 	%f1376, %f1134, %f1133, %p237;
	bra.uni 	$L__BB0_131;
$L__BB0_129:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p235, %f184, 0f40800000;
	@%p235 bra 	$L__BB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i1757
	add.f32 	%f1129, %f1376, 0f3F800000;
	fma.rn.f32 	%f1131, %f257, 0fC0400000, %f184;
	setp.ge.f32 	%p236, %f1131, 0f00000000;
	add.f32 	%f1132, %f1129, 0f3F800000;
	selp.f32 	%f1376, %f1132, %f1129, %p236;
$L__BB0_131:                            // %__internal_fmodf_fastpath_quot.exit.i.i1760
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
$L__BB0_136:                            // %__internal_fmodf_kernel.exit.i1779
	and.b32  	%r174, %r173, 8064;
	shl.b32 	%r175, %r1, 2;
	or.b32  	%r277, %r179, %r172;
	selp.f32 	%f285, %f283, %f284, %p18;
	and.b32  	%r296, %r294, 2;
	mov.f32 	%f286, 0f00000000;
	selp.f32 	%f319, %f317, %f318, %p24;
	and.b32  	%r303, %r301, 2;
	selp.f32 	%f354, %f352, %f353, %p30;
	and.b32  	%r314, %r312, 2;
	selp.f32 	%f388, %f386, %f387, %p36;
	and.b32  	%r321, %r319, 2;
	selp.f32 	%f423, %f421, %f422, %p42;
	and.b32  	%r332, %r330, 2;
	selp.f32 	%f457, %f455, %f456, %p48;
	and.b32  	%r339, %r337, 2;
	selp.f32 	%f492, %f490, %f491, %p54;
	and.b32  	%r350, %r348, 2;
	selp.f32 	%f526, %f524, %f525, %p60;
	and.b32  	%r357, %r355, 2;
	selp.f32 	%f561, %f559, %f560, %p66;
	and.b32  	%r368, %r366, 2;
	selp.f32 	%f595, %f593, %f594, %p72;
	and.b32  	%r375, %r373, 2;
	selp.f32 	%f630, %f628, %f629, %p78;
	and.b32  	%r386, %r384, 2;
	selp.f32 	%f664, %f662, %f663, %p84;
	and.b32  	%r393, %r391, 2;
	selp.f32 	%f699, %f697, %f698, %p90;
	and.b32  	%r404, %r402, 2;
	selp.f32 	%f733, %f731, %f732, %p96;
	and.b32  	%r411, %r409, 2;
	selp.f32 	%f768, %f766, %f767, %p102;
	and.b32  	%r422, %r420, 2;
	selp.f32 	%f802, %f800, %f801, %p108;
	and.b32  	%r429, %r427, 2;
	setp.eq.s32 	%p127, %r446, 0;
	neg.f32 	%f853, %f851;
	add.s32 	%r447, %r444, 1;
	cvt.rzi.f32.f32 	%f858, %f1354;
	setp.eq.s32 	%p147, %r475, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r476, %r473, 1;
	cvt.rzi.f32.f32 	%f910, %f1358;
	setp.eq.s32 	%p167, %r498, 0;
	neg.f32 	%f959, %f957;
	add.s32 	%r499, %r496, 1;
	cvt.rzi.f32.f32 	%f964, %f1362;
	setp.eq.s32 	%p187, %r530, 0;
	neg.f32 	%f1011, %f1009;
	add.s32 	%r531, %r528, 1;
	cvt.rzi.f32.f32 	%f1016, %f1366;
	selp.f32 	%f1062, %f1060, %f1061, %p206;
	and.b32  	%r550, %r548, 2;
	selp.f32 	%f1113, %f1111, %f1112, %p226;
	and.b32  	%r574, %r572, 2;
	abs.f32 	%f1146, %f1378;
	setp.gtu.f32 	%p243, %f1146, 0f7F800000;
	@%p243 bra 	$L__BB0_138;
// %bb.137:
	mov.b32 	%r581, %f181;
	and.b32  	%r582, %r581, -2147483648;
	mov.b32 	%r583, %f1378;
	or.b32  	%r584, %r582, %r583;
	mov.b32 	%f1378, %r584;
$L__BB0_138:                            // %__nv_fmodf.exit1780
	and.b32  	%r176, %r175, 32;
	or.b32  	%r278, %r277, %r174;
	setp.eq.s32 	%p19, %r296, 0;
	sub.f32 	%f287, %f286, %f285;
	setp.eq.s32 	%p25, %r303, 0;
	sub.f32 	%f321, %f286, %f319;
	setp.eq.s32 	%p31, %r314, 0;
	sub.f32 	%f356, %f286, %f354;
	setp.eq.s32 	%p37, %r321, 0;
	sub.f32 	%f390, %f286, %f388;
	setp.eq.s32 	%p43, %r332, 0;
	sub.f32 	%f425, %f286, %f423;
	setp.eq.s32 	%p49, %r339, 0;
	sub.f32 	%f459, %f286, %f457;
	setp.eq.s32 	%p55, %r350, 0;
	sub.f32 	%f494, %f286, %f492;
	setp.eq.s32 	%p61, %r357, 0;
	sub.f32 	%f528, %f286, %f526;
	setp.eq.s32 	%p67, %r368, 0;
	sub.f32 	%f563, %f286, %f561;
	setp.eq.s32 	%p73, %r375, 0;
	sub.f32 	%f597, %f286, %f595;
	setp.eq.s32 	%p79, %r386, 0;
	sub.f32 	%f632, %f286, %f630;
	setp.eq.s32 	%p85, %r393, 0;
	sub.f32 	%f666, %f286, %f664;
	setp.eq.s32 	%p91, %r404, 0;
	sub.f32 	%f701, %f286, %f699;
	setp.eq.s32 	%p97, %r411, 0;
	sub.f32 	%f735, %f286, %f733;
	setp.eq.s32 	%p103, %r422, 0;
	sub.f32 	%f770, %f286, %f768;
	setp.eq.s32 	%p109, %r429, 0;
	sub.f32 	%f804, %f286, %f802;
	selp.f32 	%f852, %f850, %f849, %p126;
	selp.f32 	%f854, %f851, %f853, %p127;
	and.b32  	%r448, %r447, 2;
	setp.eq.f32 	%p129, %f858, %f1354;
	mul.f32 	%f859, %f1354, 0f00000000;
	selp.f32 	%f904, %f902, %f901, %p146;
	selp.f32 	%f906, %f903, %f905, %p147;
	and.b32  	%r477, %r476, 2;
	setp.eq.f32 	%p149, %f910, %f1358;
	mul.f32 	%f911, %f1358, 0f00000000;
	selp.f32 	%f958, %f956, %f955, %p166;
	selp.f32 	%f960, %f957, %f959, %p167;
	and.b32  	%r500, %r499, 2;
	setp.eq.f32 	%p169, %f964, %f1362;
	mul.f32 	%f965, %f1362, 0f00000000;
	selp.f32 	%f1010, %f1008, %f1007, %p186;
	selp.f32 	%f1012, %f1009, %f1011, %p187;
	and.b32  	%r532, %r531, 2;
	setp.eq.f32 	%p189, %f1016, %f1366;
	mul.f32 	%f1017, %f1366, 0f00000000;
	setp.eq.s32 	%p207, %r550, 0;
	neg.f32 	%f1064, %f1062;
	add.s32 	%r551, %r548, 1;
	cvt.rzi.f32.f32 	%f1069, %f1370;
	setp.eq.s32 	%p227, %r574, 0;
	neg.f32 	%f1115, %f1113;
	add.s32 	%r575, %r572, 1;
	cvt.rzi.f32.f32 	%f1120, %f1374;
	add.f32 	%f1147, %f1378, %f1378;
	mov.b32 	%r585, %f1147;
	and.b32  	%r586, %r585, -2147483648;
	or.b32  	%r587, %r586, 1056964608;
	mov.b32 	%f1148, %r587;
	add.f32 	%f1149, %f1147, %f1148;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	abs.f32 	%f1151, %f1147;
	setp.gt.f32 	%p244, %f1151, 0f4B000000;
	selp.f32 	%f1152, %f1147, %f1150, %p244;
	cvt.rzi.f32.f32 	%f1153, %f1147;
	setp.lt.f32 	%p245, %f1151, 0f3F000000;
	selp.f32 	%f1154, %f1153, %f1152, %p245;
	cvt.rzi.s32.f32 	%r588, %f1154;
	fma.rn.f32 	%f1155, %f1154, 0fBF000000, %f1378;
	mul.f32 	%f1156, %f1155, %f1155;
	fma.rn.f32 	%f1157, %f1156, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1158, %f1156, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1159, %f1157, %f1156, 0fC0A55DF6;
	fma.rn.f32 	%f1160, %f1158, %f1156, 0f4081E0CF;
	fma.rn.f32 	%f1161, %f1156, %f1155, 0f00000000;
	fma.rn.f32 	%f1162, %f1160, %f1156, 0fC09DE9E6;
	fma.rn.f32 	%f1163, %f1159, %f1161, 0f00000000;
	fma.rn.f32 	%f1164, %f1162, %f1156, 0f3F800000;
	fma.rn.f32 	%f1165, %f1155, 0f40490FDB, %f1163;
	and.b32  	%r589, %r588, 1;
	setp.eq.b32 	%p246, %r589, 1;
	selp.f32 	%f1166, %f1164, %f1165, %p246;
	selp.f32 	%f1167, %f1165, %f1164, %p246;
	and.b32  	%r590, %r588, 2;
	setp.eq.s32 	%p247, %r590, 0;
	neg.f32 	%f1168, %f1166;
	selp.f32 	%f1169, %f1166, %f1168, %p247;
	add.s32 	%r591, %r588, 1;
	and.b32  	%r592, %r591, 2;
	cvt.rzi.f32.f32 	%f1173, %f1378;
	setp.eq.f32 	%p249, %f1173, %f1378;
	mul.f32 	%f1174, %f1378, 0f00000000;
	div.approx.f32 	%f200, %f163, %f1126;
	abs.f32 	%f1382, %f200;
	setp.lt.f32 	%p251, %f1382, 0f40000000;
	@%p251 bra 	$L__BB0_150;
// %bb.139:
	setp.gtu.f32 	%p252, %f1382, 0f4B800000;
	@%p252 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_140;
$L__BB0_146:
	mov.b32 	%r90, %f1382;
	and.b32  	%r593, %r90, 8388607;
	or.b32  	%r16369, %r593, 1065353216;
	mov.b32 	%f1381, %r16369;
	add.s32 	%r594, %r90, -1073741824;
	and.b32  	%r16370, %r594, -8388608;
	setp.eq.s32 	%p258, %r16370, 0;
	@%p258 bra 	$L__BB0_149;
// %bb.147:                             // %__nv_fmaf_rn.exit4.i.i.i1805.preheader
	mov.f32 	%f1187, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1186,%f1187;
	// end inline asm
$L__BB0_148:                            // %__nv_fmaf_rn.exit4.i.i.i1805
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r595, %r16370, 192937984;
	add.s32 	%r596, %r16369, %r595;
	mov.b32 	%f1188, %r596;
	mul.f32 	%f1189, %f1186, %f1188;
	sub.f32 	%f1190, %f1188, %f1189;
	fma.rn.f32 	%f1191, %f1190, %f1186, %f1189;
	sub.f32 	%f1192, %f1188, %f1191;
	fma.rz.f32 	%f1193, %f1192, %f1186, %f1191;
	cvt.rzi.f32.f32 	%f1194, %f1193;
	sub.f32 	%f1381, %f1188, %f1194;
	sub.s32 	%r16370, %r16370, %r595;
	mov.b32 	%r16369, %f1381;
	setp.ne.s32 	%p259, %r16370, 0;
	setp.ne.s32 	%p260, %r16369, 0;
	and.pred  	%p261, %p259, %p260;
	@%p261 bra 	$L__BB0_148;
$L__BB0_149:                            // %__internal_fmodf_slowpath_mod.exit.i.i1807
	setp.gt.u32 	%p262, %r90, 2139095039;
	selp.f32 	%f1195, 0f7FFFFFFF, 0f4B800000, %p262;
	mul.f32 	%f1196, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1195, %f1196;
	bra.uni 	$L__BB0_150;
$L__BB0_140:                            // %__nv_fast_fdividef.exit.i.i.i1784
	div.approx.f32 	%f1179, %f1382, %f257;
	cvt.rzi.f32.f32 	%f1380, %f1179;
	fma.rn.f32 	%f203, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r89, %f203;
	setp.lt.u32 	%p253, %r89, 1073741824;
	@%p253 bra 	$L__BB0_145;
// %bb.141:
	setp.lt.u32 	%p254, %r89, -2147483647;
	@%p254 bra 	$L__BB0_143;
// %bb.142:
	add.f32 	%f1184, %f1380, 0fBF800000;
	setp.lt.f32 	%p257, %f203, 0fC0000000;
	add.f32 	%f1185, %f1184, 0fBF800000;
	selp.f32 	%f1380, %f1185, %f1184, %p257;
	bra.uni 	$L__BB0_145;
$L__BB0_143:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p255, %f203, 0f40800000;
	@%p255 bra 	$L__BB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i1788
	add.f32 	%f1180, %f1380, 0f3F800000;
	fma.rn.f32 	%f1182, %f257, 0fC0400000, %f203;
	setp.ge.f32 	%p256, %f1182, 0f00000000;
	add.f32 	%f1183, %f1180, 0f3F800000;
	selp.f32 	%f1380, %f1183, %f1180, %p256;
$L__BB0_145:                            // %__internal_fmodf_fastpath_quot.exit.i.i1791
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
$L__BB0_150:                            // %__internal_fmodf_kernel.exit.i1810
	and.b32  	%r178, %r175, 4;
	or.b32  	%r279, %r278, %r176;
	selp.f32 	%f288, %f285, %f287, %p19;
	selp.f32 	%f322, %f319, %f321, %p25;
	selp.f32 	%f357, %f354, %f356, %p31;
	selp.f32 	%f391, %f388, %f390, %p37;
	selp.f32 	%f426, %f423, %f425, %p43;
	selp.f32 	%f460, %f457, %f459, %p49;
	selp.f32 	%f495, %f492, %f494, %p55;
	selp.f32 	%f529, %f526, %f528, %p61;
	selp.f32 	%f564, %f561, %f563, %p67;
	selp.f32 	%f598, %f595, %f597, %p73;
	selp.f32 	%f633, %f630, %f632, %p79;
	selp.f32 	%f667, %f664, %f666, %p85;
	selp.f32 	%f702, %f699, %f701, %p91;
	selp.f32 	%f736, %f733, %f735, %p97;
	selp.f32 	%f771, %f768, %f770, %p103;
	selp.f32 	%f805, %f802, %f804, %p109;
	setp.eq.s32 	%p128, %r448, 0;
	sub.f32 	%f856, %f286, %f852;
	selp.f32 	%f88, %f859, %f854, %p129;
	abs.f32 	%f860, %f1354;
	setp.eq.s32 	%p148, %r477, 0;
	sub.f32 	%f908, %f286, %f904;
	selp.f32 	%f912, %f911, %f906, %p149;
	abs.f32 	%f913, %f1358;
	setp.eq.s32 	%p168, %r500, 0;
	sub.f32 	%f962, %f286, %f958;
	selp.f32 	%f124, %f965, %f960, %p169;
	abs.f32 	%f966, %f1362;
	setp.eq.s32 	%p188, %r532, 0;
	sub.f32 	%f1014, %f286, %f1010;
	selp.f32 	%f1018, %f1017, %f1012, %p189;
	abs.f32 	%f1019, %f1366;
	selp.f32 	%f1063, %f1061, %f1060, %p206;
	selp.f32 	%f1065, %f1062, %f1064, %p207;
	and.b32  	%r552, %r551, 2;
	setp.eq.f32 	%p209, %f1069, %f1370;
	mul.f32 	%f1070, %f1370, 0f00000000;
	selp.f32 	%f1114, %f1112, %f1111, %p226;
	selp.f32 	%f1116, %f1113, %f1115, %p227;
	and.b32  	%r576, %r575, 2;
	setp.eq.f32 	%p229, %f1120, %f1374;
	mul.f32 	%f1121, %f1374, 0f00000000;
	setp.eq.s32 	%p248, %r592, 0;
	sub.f32 	%f1171, %f286, %f1167;
	selp.f32 	%f198, %f1174, %f1169, %p249;
	abs.f32 	%f1175, %f1378;
	and.b32  	%r177, %r1, 16;
	abs.f32 	%f1197, %f1382;
	setp.gtu.f32 	%p263, %f1197, 0f7F800000;
	@%p263 bra 	$L__BB0_152;
// %bb.151:
	mov.b32 	%r597, %f200;
	and.b32  	%r598, %r597, -2147483648;
	mov.b32 	%r599, %f1382;
	or.b32  	%r600, %r598, %r599;
	mov.b32 	%f1382, %r600;
$L__BB0_152:                            // %__nv_fmodf.exit1811
	or.b32  	%r280, %r279, %r178;
	mul.f32 	%f254, %f288, %f288;
	mul.f32 	%f4, %f322, %f322;
	mul.f32 	%f8, %f357, %f357;
	mul.f32 	%f13, %f391, %f391;
	mul.f32 	%f17, %f426, %f426;
	mul.f32 	%f22, %f460, %f460;
	mul.f32 	%f26, %f495, %f495;
	mul.f32 	%f31, %f529, %f529;
	mul.f32 	%f35, %f564, %f564;
	mul.f32 	%f40, %f598, %f598;
	mul.f32 	%f44, %f633, %f633;
	mul.f32 	%f49, %f667, %f667;
	mul.f32 	%f53, %f702, %f702;
	mul.f32 	%f58, %f736, %f736;
	mul.f32 	%f62, %f771, %f771;
	mul.f32 	%f67, %f805, %f805;
	selp.f32 	%f857, %f852, %f856, %p128;
	setp.gt.f32 	%p130, %f860, 0f4B800000;
	add.f32 	%f861, %f88, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p148;
	setp.gt.f32 	%p150, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f963, %f958, %f962, %p168;
	setp.gt.f32 	%p170, %f966, 0f4B800000;
	add.f32 	%f967, %f124, 0f3F800000;
	selp.f32 	%f1015, %f1010, %f1014, %p188;
	setp.gt.f32 	%p190, %f1019, 0f4B800000;
	add.f32 	%f1020, %f1018, 0f3F800000;
	setp.eq.s32 	%p208, %r552, 0;
	sub.f32 	%f1067, %f286, %f1063;
	selp.f32 	%f161, %f1070, %f1065, %p209;
	abs.f32 	%f1071, %f1370;
	setp.eq.s32 	%p228, %r576, 0;
	sub.f32 	%f1118, %f286, %f1114;
	selp.f32 	%f1122, %f1121, %f1116, %p229;
	abs.f32 	%f1123, %f1374;
	selp.f32 	%f1172, %f1167, %f1171, %p248;
	setp.gt.f32 	%p250, %f1175, 0f4B800000;
	add.f32 	%f1176, %f198, 0f3F800000;
	add.f32 	%f1198, %f1382, %f1382;
	mov.b32 	%r613, %f1198;
	and.b32  	%r614, %r613, -2147483648;
	or.b32  	%r615, %r614, 1056964608;
	mov.b32 	%f1199, %r615;
	add.f32 	%f1200, %f1198, %f1199;
	cvt.rzi.f32.f32 	%f1201, %f1200;
	abs.f32 	%f1202, %f1198;
	setp.gt.f32 	%p264, %f1202, 0f4B000000;
	selp.f32 	%f1203, %f1198, %f1201, %p264;
	cvt.rzi.f32.f32 	%f1204, %f1198;
	setp.lt.f32 	%p265, %f1202, 0f3F000000;
	selp.f32 	%f1205, %f1204, %f1203, %p265;
	cvt.rzi.s32.f32 	%r616, %f1205;
	fma.rn.f32 	%f1206, %f1205, 0fBF000000, %f1382;
	mul.f32 	%f1207, %f1206, %f1206;
	fma.rn.f32 	%f1208, %f1207, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1209, %f1207, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1210, %f1208, %f1207, 0fC0A55DF6;
	fma.rn.f32 	%f1211, %f1209, %f1207, 0f4081E0CF;
	fma.rn.f32 	%f1212, %f1207, %f1206, 0f00000000;
	fma.rn.f32 	%f1213, %f1211, %f1207, 0fC09DE9E6;
	fma.rn.f32 	%f1214, %f1210, %f1212, 0f00000000;
	fma.rn.f32 	%f1215, %f1213, %f1207, 0f3F800000;
	fma.rn.f32 	%f1216, %f1206, 0f40490FDB, %f1214;
	and.b32  	%r617, %r616, 1;
	setp.eq.b32 	%p266, %r617, 1;
	selp.f32 	%f1217, %f1215, %f1216, %p266;
	selp.f32 	%f1218, %f1216, %f1215, %p266;
	and.b32  	%r618, %r616, 2;
	setp.eq.s32 	%p267, %r618, 0;
	neg.f32 	%f1219, %f1217;
	selp.f32 	%f1220, %f1217, %f1219, %p267;
	add.s32 	%r619, %r616, 1;
	and.b32  	%r620, %r619, 2;
	setp.eq.s32 	%p268, %r620, 0;
	sub.f32 	%f1222, %f286, %f1218;
	selp.f32 	%f1223, %f1218, %f1222, %p268;
	cvt.rzi.f32.f32 	%f1224, %f1382;
	setp.eq.f32 	%p269, %f1224, %f1382;
	mul.f32 	%f1225, %f1382, 0f00000000;
	selp.f32 	%f1226, %f1225, %f1220, %p269;
	abs.f32 	%f1227, %f1382;
	setp.gt.f32 	%p270, %f1227, 0f4B800000;
	add.f32 	%f1228, %f1226, 0f3F800000;
	mul.lo.s32 	%r621, %r186, 2147483640;
	cvt.u16.u32 	%rs1, %r1;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	sub.s32 	%r622, %r621, %r177;
	mad.lo.s32 	%r623, %r189, 2147483616, %r622;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r624, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r625, %rs21;
	sub.s32 	%r626, %r623, %r625;
	shl.b32 	%r627, %r626, 1;
	cvt.rn.f32.s32 	%f1230, %r627;
	div.approx.f32 	%f217, %f1230, %f289;
	abs.f32 	%f1386, %f217;
	setp.lt.f32 	%p271, %f1386, 0f40000000;
	@%p271 bra 	$L__BB0_164;
// %bb.153:
	setp.gtu.f32 	%p272, %f1386, 0f4B800000;
	@%p272 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_154;
$L__BB0_160:
	mov.b32 	%r103, %f1386;
	and.b32  	%r628, %r103, 8388607;
	or.b32  	%r16371, %r628, 1065353216;
	mov.b32 	%f1385, %r16371;
	add.s32 	%r629, %r103, -1073741824;
	and.b32  	%r16372, %r629, -8388608;
	setp.eq.s32 	%p278, %r16372, 0;
	@%p278 bra 	$L__BB0_163;
// %bb.161:                             // %__nv_fmaf_rn.exit4.i.i.i1836.preheader
	mov.f32 	%f1241, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1240,%f1241;
	// end inline asm
$L__BB0_162:                            // %__nv_fmaf_rn.exit4.i.i.i1836
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r630, %r16372, 192937984;
	add.s32 	%r631, %r16371, %r630;
	mov.b32 	%f1242, %r631;
	mul.f32 	%f1243, %f1240, %f1242;
	sub.f32 	%f1244, %f1242, %f1243;
	fma.rn.f32 	%f1245, %f1244, %f1240, %f1243;
	sub.f32 	%f1246, %f1242, %f1245;
	fma.rz.f32 	%f1247, %f1246, %f1240, %f1245;
	cvt.rzi.f32.f32 	%f1248, %f1247;
	sub.f32 	%f1385, %f1242, %f1248;
	sub.s32 	%r16372, %r16372, %r630;
	mov.b32 	%r16371, %f1385;
	setp.ne.s32 	%p279, %r16372, 0;
	setp.ne.s32 	%p280, %r16371, 0;
	and.pred  	%p281, %p279, %p280;
	@%p281 bra 	$L__BB0_162;
$L__BB0_163:                            // %__internal_fmodf_slowpath_mod.exit.i.i1838
	setp.gt.u32 	%p282, %r103, 2139095039;
	selp.f32 	%f1249, 0f7FFFFFFF, 0f4B800000, %p282;
	mul.f32 	%f1250, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1249, %f1250;
	bra.uni 	$L__BB0_164;
$L__BB0_154:                            // %__nv_fast_fdividef.exit.i.i.i1815
	div.approx.f32 	%f1233, %f1386, %f257;
	cvt.rzi.f32.f32 	%f1384, %f1233;
	fma.rn.f32 	%f220, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r102, %f220;
	setp.lt.u32 	%p273, %r102, 1073741824;
	@%p273 bra 	$L__BB0_159;
// %bb.155:
	setp.lt.u32 	%p274, %r102, -2147483647;
	@%p274 bra 	$L__BB0_157;
// %bb.156:
	add.f32 	%f1238, %f1384, 0fBF800000;
	setp.lt.f32 	%p277, %f220, 0fC0000000;
	add.f32 	%f1239, %f1238, 0fBF800000;
	selp.f32 	%f1384, %f1239, %f1238, %p277;
	bra.uni 	$L__BB0_159;
$L__BB0_157:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p275, %f220, 0f40800000;
	@%p275 bra 	$L__BB0_159;
// %bb.158:                             // %__nv_fmaf_rn.exit.i.i.i1819
	add.f32 	%f1234, %f1384, 0f3F800000;
	fma.rn.f32 	%f1236, %f257, 0fC0400000, %f220;
	setp.ge.f32 	%p276, %f1236, 0f00000000;
	add.f32 	%f1237, %f1234, 0f3F800000;
	selp.f32 	%f1384, %f1237, %f1234, %p276;
$L__BB0_159:                            // %__internal_fmodf_fastpath_quot.exit.i.i1822
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
$L__BB0_164:                            // %__internal_fmodf_kernel.exit.i1841
	shr.u32 	%r281, %r280, 1;
	mul.f32 	%f292, %f254, 0f3B8B2FF9;
	mul.f32 	%f326, %f4, 0f3B8B2FF9;
	mul.f32 	%f361, %f8, 0f3B8B2FF9;
	mul.f32 	%f395, %f13, 0f3B8B2FF9;
	mul.f32 	%f430, %f17, 0f3B8B2FF9;
	mul.f32 	%f464, %f22, 0f3B8B2FF9;
	mul.f32 	%f499, %f26, 0f3B8B2FF9;
	mul.f32 	%f533, %f31, 0f3B8B2FF9;
	mul.f32 	%f568, %f35, 0f3B8B2FF9;
	mul.f32 	%f602, %f40, 0f3B8B2FF9;
	mul.f32 	%f637, %f44, 0f3B8B2FF9;
	mul.f32 	%f671, %f49, 0f3B8B2FF9;
	mul.f32 	%f706, %f53, 0f3B8B2FF9;
	mul.f32 	%f740, %f58, 0f3B8B2FF9;
	mul.f32 	%f775, %f62, 0f3B8B2FF9;
	mul.f32 	%f808, %f67, 0f3B8B2FF9;
	selp.f32 	%f89, %f861, %f857, %p130;
	selp.f32 	%f915, %f914, %f909, %p150;
	selp.f32 	%f125, %f967, %f963, %p170;
	selp.f32 	%f1021, %f1020, %f1015, %p190;
	selp.f32 	%f1068, %f1063, %f1067, %p208;
	setp.gt.f32 	%p210, %f1071, 0f4B800000;
	add.f32 	%f1072, %f161, 0f3F800000;
	selp.f32 	%f1119, %f1114, %f1118, %p228;
	setp.gt.f32 	%p230, %f1123, 0f4B800000;
	add.f32 	%f1124, %f1122, 0f3F800000;
	selp.f32 	%f199, %f1176, %f1172, %p250;
	selp.f32 	%f1229, %f1228, %f1223, %p270;
	sub.s32 	%r101, %r623, %r624;
	abs.f32 	%f1251, %f1386;
	setp.gtu.f32 	%p283, %f1251, 0f7F800000;
	@%p283 bra 	$L__BB0_166;
// %bb.165:
	mov.b32 	%r632, %f217;
	and.b32  	%r633, %r632, -2147483648;
	mov.b32 	%r634, %f1386;
	or.b32  	%r635, %r633, %r634;
	mov.b32 	%f1386, %r635;
$L__BB0_166:                            // %__nv_fmodf.exit1842
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd32, %r281, 4;
	mul.f32 	%f3, %f292, %f1336;
	mul.f32 	%f327, %f326, %f1337;
	mul.f32 	%f12, %f361, %f1338;
	mul.f32 	%f396, %f395, %f1339;
	mul.f32 	%f21, %f430, %f1340;
	mul.f32 	%f465, %f464, %f1341;
	mul.f32 	%f30, %f499, %f1342;
	mul.f32 	%f534, %f533, %f1343;
	mul.f32 	%f39, %f568, %f1344;
	mul.f32 	%f603, %f602, %f1345;
	mul.f32 	%f48, %f637, %f1346;
	mul.f32 	%f672, %f671, %f1347;
	mul.f32 	%f57, %f706, %f1348;
	mul.f32 	%f741, %f740, %f1349;
	mul.f32 	%f66, %f775, %f1350;
	mul.f32 	%f809, %f808, %f1351;
	mov.b32 	%r460, %f915;
	mov.b32 	%r459, %f89;
	mov.b32 	%r466, %f912;
	mov.b32 	%r465, %f88;
	mov.b32 	%r515, %f1021;
	mov.b32 	%r514, %f125;
	mov.b32 	%r521, %f1018;
	mov.b32 	%r520, %f124;
	selp.f32 	%f162, %f1072, %f1068, %p210;
	selp.f32 	%f1125, %f1124, %f1119, %p230;
	mov.b32 	%r603, %f1229;
	mov.b32 	%r602, %f199;
	mov.b32 	%r609, %f1226;
	mov.b32 	%r608, %f198;
	add.f32 	%f1252, %f1386, %f1386;
	mov.b32 	%r636, %f1252;
	and.b32  	%r637, %r636, -2147483648;
	or.b32  	%r638, %r637, 1056964608;
	mov.b32 	%f1253, %r638;
	add.f32 	%f1254, %f1252, %f1253;
	cvt.rzi.f32.f32 	%f1255, %f1254;
	abs.f32 	%f1256, %f1252;
	setp.gt.f32 	%p284, %f1256, 0f4B000000;
	selp.f32 	%f1257, %f1252, %f1255, %p284;
	cvt.rzi.f32.f32 	%f1258, %f1252;
	setp.lt.f32 	%p285, %f1256, 0f3F000000;
	selp.f32 	%f1259, %f1258, %f1257, %p285;
	cvt.rzi.s32.f32 	%r639, %f1259;
	fma.rn.f32 	%f1260, %f1259, 0fBF000000, %f1386;
	mul.f32 	%f1261, %f1260, %f1260;
	fma.rn.f32 	%f1262, %f1261, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1263, %f1261, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1264, %f1262, %f1261, 0fC0A55DF6;
	fma.rn.f32 	%f1265, %f1263, %f1261, 0f4081E0CF;
	fma.rn.f32 	%f1266, %f1261, %f1260, 0f00000000;
	fma.rn.f32 	%f1267, %f1265, %f1261, 0fC09DE9E6;
	fma.rn.f32 	%f1268, %f1264, %f1266, 0f00000000;
	fma.rn.f32 	%f1269, %f1267, %f1261, 0f3F800000;
	fma.rn.f32 	%f1270, %f1260, 0f40490FDB, %f1268;
	and.b32  	%r640, %r639, 1;
	setp.eq.b32 	%p286, %r640, 1;
	selp.f32 	%f1271, %f1269, %f1270, %p286;
	selp.f32 	%f1272, %f1270, %f1269, %p286;
	and.b32  	%r641, %r639, 2;
	setp.eq.s32 	%p287, %r641, 0;
	neg.f32 	%f1273, %f1271;
	selp.f32 	%f1274, %f1271, %f1273, %p287;
	add.s32 	%r642, %r639, 1;
	and.b32  	%r643, %r642, 2;
	setp.eq.s32 	%p288, %r643, 0;
	sub.f32 	%f1276, %f286, %f1272;
	selp.f32 	%f1277, %f1272, %f1276, %p288;
	cvt.rzi.f32.f32 	%f1278, %f1386;
	setp.eq.f32 	%p289, %f1278, %f1386;
	mul.f32 	%f1279, %f1386, 0f00000000;
	selp.f32 	%f234, %f1279, %f1274, %p289;
	abs.f32 	%f1280, %f1386;
	setp.gt.f32 	%p290, %f1280, 0f4B800000;
	add.f32 	%f1281, %f234, 0f3F800000;
	shl.b32 	%r644, %r101, 1;
	cvt.rn.f32.s32 	%f1282, %r644;
	div.approx.f32 	%f236, %f1282, %f289;
	abs.f32 	%f1390, %f236;
	setp.lt.f32 	%p291, %f1390, 0f40000000;
	@%p291 bra 	$L__BB0_178;
// %bb.167:
	setp.gtu.f32 	%p292, %f1390, 0f4B800000;
	@%p292 bra 	$L__BB0_174;
	bra.uni 	$L__BB0_168;
$L__BB0_174:
	mov.b32 	%r111, %f1390;
	and.b32  	%r645, %r111, 8388607;
	or.b32  	%r16373, %r645, 1065353216;
	mov.b32 	%f1389, %r16373;
	add.s32 	%r646, %r111, -1073741824;
	and.b32  	%r16374, %r646, -8388608;
	setp.eq.s32 	%p298, %r16374, 0;
	@%p298 bra 	$L__BB0_177;
// %bb.175:                             // %__nv_fmaf_rn.exit4.i.i.i1867.preheader
	mov.f32 	%f1293, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1292,%f1293;
	// end inline asm
$L__BB0_176:                            // %__nv_fmaf_rn.exit4.i.i.i1867
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r647, %r16374, 192937984;
	add.s32 	%r648, %r16373, %r647;
	mov.b32 	%f1294, %r648;
	mul.f32 	%f1295, %f1292, %f1294;
	sub.f32 	%f1296, %f1294, %f1295;
	fma.rn.f32 	%f1297, %f1296, %f1292, %f1295;
	sub.f32 	%f1298, %f1294, %f1297;
	fma.rz.f32 	%f1299, %f1298, %f1292, %f1297;
	cvt.rzi.f32.f32 	%f1300, %f1299;
	sub.f32 	%f1389, %f1294, %f1300;
	sub.s32 	%r16374, %r16374, %r647;
	mov.b32 	%r16373, %f1389;
	setp.ne.s32 	%p299, %r16374, 0;
	setp.ne.s32 	%p300, %r16373, 0;
	and.pred  	%p301, %p299, %p300;
	@%p301 bra 	$L__BB0_176;
$L__BB0_177:                            // %__internal_fmodf_slowpath_mod.exit.i.i1869
	setp.gt.u32 	%p302, %r111, 2139095039;
	selp.f32 	%f1301, 0f7FFFFFFF, 0f4B800000, %p302;
	mul.f32 	%f1302, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1301, %f1302;
	bra.uni 	$L__BB0_178;
$L__BB0_168:                            // %__nv_fast_fdividef.exit.i.i.i1846
	div.approx.f32 	%f1285, %f1390, %f257;
	cvt.rzi.f32.f32 	%f1388, %f1285;
	fma.rn.f32 	%f239, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r110, %f239;
	setp.lt.u32 	%p293, %r110, 1073741824;
	@%p293 bra 	$L__BB0_173;
// %bb.169:
	setp.lt.u32 	%p294, %r110, -2147483647;
	@%p294 bra 	$L__BB0_171;
// %bb.170:
	add.f32 	%f1290, %f1388, 0fBF800000;
	setp.lt.f32 	%p297, %f239, 0fC0000000;
	add.f32 	%f1291, %f1290, 0fBF800000;
	selp.f32 	%f1388, %f1291, %f1290, %p297;
	bra.uni 	$L__BB0_173;
$L__BB0_171:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p295, %f239, 0f40800000;
	@%p295 bra 	$L__BB0_173;
// %bb.172:                             // %__nv_fmaf_rn.exit.i.i.i1850
	add.f32 	%f1286, %f1388, 0f3F800000;
	fma.rn.f32 	%f1288, %f257, 0fC0400000, %f239;
	setp.ge.f32 	%p296, %f1288, 0f00000000;
	add.f32 	%f1289, %f1286, 0f3F800000;
	selp.f32 	%f1388, %f1289, %f1286, %p296;
$L__BB0_173:                            // %__internal_fmodf_fastpath_quot.exit.i.i1853
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
$L__BB0_178:                            // %__internal_fmodf_kernel.exit.i1872
	add.s64 	%rd33, %rd1, %rd32;
	shr.u32 	%r185, %r1, 2;
	mov.b32 	%r306, %f327;
	mov.b32 	%r305, %f3;
	mov.b32 	%r324, %f396;
	mov.b32 	%r323, %f12;
	mov.b32 	%r342, %f465;
	mov.b32 	%r341, %f21;
	mov.b32 	%r360, %f534;
	mov.b32 	%r359, %f30;
	mov.b32 	%r378, %f603;
	mov.b32 	%r377, %f39;
	mov.b32 	%r396, %f672;
	mov.b32 	%r395, %f48;
	mov.b32 	%r414, %f741;
	mov.b32 	%r413, %f57;
	mov.b32 	%r432, %f809;
	mov.b32 	%r431, %f66;
	xor.b32  	%r518, %r521, -2147483648;
	xor.b32  	%r517, %r520, -2147483648;
	mov.b32 	%r565, %f1125;
	mov.b32 	%r564, %f162;
	mov.b32 	%r568, %f1122;
	mov.b32 	%r567, %f161;
	xor.b32  	%r606, %r609, -2147483648;
	xor.b32  	%r605, %r608, -2147483648;
	selp.f32 	%f235, %f1281, %f1277, %p290;
	abs.f32 	%f1303, %f1390;
	setp.gtu.f32 	%p303, %f1303, 0f7F800000;
	@%p303 bra 	$L__BB0_180;
// %bb.179:
	mov.b32 	%r649, %f236;
	and.b32  	%r650, %r649, -2147483648;
	mov.b32 	%r651, %f1390;
	or.b32  	%r652, %r650, %r651;
	mov.b32 	%f1390, %r652;
$L__BB0_180:                            // %__nv_fmodf.exit1873
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	ld.global.u32 	%r180, [%rd33];
	ld.global.u32 	%r181, [%rd33+128];
	// begin inline asm
	cvt.rn.f16x2.f32 %r304, %r306, %r305;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r322, %r324, %r323;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r340, %r342, %r341;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r358, %r360, %r359;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r376, %r378, %r377;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r394, %r396, %r395;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r412, %r414, %r413;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r430, %r432, %r431;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r458, %r460, %r459;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r461, %r460, %r459;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r464, %r466, %r465;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r467, %r466, %r465;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r513, %r515, %r514;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r516, %r518, %r517;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r519, %r521, %r520;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r522, %r515, %r514;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r563, %r565, %r564;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r566, %r568, %r567;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r601, %r603, %r602;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r604, %r606, %r605;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r607, %r609, %r608;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r610, %r603, %r602;
	// end inline asm
	add.f32 	%f1304, %f1390, %f1390;
	mov.b32 	%r660, %f1304;
	and.b32  	%r661, %r660, -2147483648;
	or.b32  	%r662, %r661, 1056964608;
	mov.b32 	%f1305, %r662;
	add.f32 	%f1306, %f1304, %f1305;
	cvt.rzi.f32.f32 	%f1307, %f1306;
	abs.f32 	%f1308, %f1304;
	setp.gt.f32 	%p304, %f1308, 0f4B000000;
	selp.f32 	%f1309, %f1304, %f1307, %p304;
	cvt.rzi.f32.f32 	%f1310, %f1304;
	setp.lt.f32 	%p305, %f1308, 0f3F000000;
	selp.f32 	%f1311, %f1310, %f1309, %p305;
	cvt.rzi.s32.f32 	%r663, %f1311;
	fma.rn.f32 	%f1312, %f1311, 0fBF000000, %f1390;
	mul.f32 	%f1313, %f1312, %f1312;
	fma.rn.f32 	%f1314, %f1313, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1315, %f1313, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1316, %f1314, %f1313, 0fC0A55DF6;
	fma.rn.f32 	%f1317, %f1315, %f1313, 0f4081E0CF;
	fma.rn.f32 	%f1318, %f1313, %f1312, 0f00000000;
	fma.rn.f32 	%f1319, %f1317, %f1313, 0fC09DE9E6;
	fma.rn.f32 	%f1320, %f1316, %f1318, 0f00000000;
	fma.rn.f32 	%f1321, %f1319, %f1313, 0f3F800000;
	fma.rn.f32 	%f1322, %f1312, 0f40490FDB, %f1320;
	and.b32  	%r664, %r663, 1;
	setp.eq.b32 	%p306, %r664, 1;
	selp.f32 	%f1323, %f1321, %f1322, %p306;
	selp.f32 	%f1324, %f1322, %f1321, %p306;
	and.b32  	%r665, %r663, 2;
	setp.eq.s32 	%p307, %r665, 0;
	neg.f32 	%f1325, %f1323;
	selp.f32 	%f1326, %f1323, %f1325, %p307;
	add.s32 	%r666, %r663, 1;
	and.b32  	%r667, %r666, 2;
	setp.eq.s32 	%p308, %r667, 0;
	sub.f32 	%f1328, %f286, %f1324;
	selp.f32 	%f1329, %f1324, %f1328, %p308;
	cvt.rzi.f32.f32 	%f1330, %f1390;
	setp.eq.f32 	%p309, %f1330, %f1390;
	mul.f32 	%f1331, %f1390, 0f00000000;
	selp.f32 	%f1332, %f1331, %f1326, %p309;
	abs.f32 	%f1333, %f1390;
	setp.gt.f32 	%p310, %f1333, 0f4B800000;
	add.f32 	%f1334, %f1332, 0f3F800000;
	selp.f32 	%f1335, %f1334, %f1329, %p310;
	mov.b32 	%r655, %f1335;
	mov.b32 	%r654, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r653, %r655, %r654;
	// end inline asm
	mov.b32 	%r658, %f1332;
	mov.b32 	%r657, %f234;
	// begin inline asm
	cvt.rn.f16x2.f32 %r656, %r658, %r657;
	// end inline asm
	shl.b32 	%r668, %r264, 13;
	and.b32  	%r669, %r175, 28;
	and.b32  	%r670, %r173, 32;
	or.b32  	%r671, %r670, %r669;
	and.b32  	%r120, %r173, 64;
	and.b32  	%r672, %r171, 32;
	shl.b32 	%r673, %r1, 3;
	and.b32  	%r674, %r673, 64;
	or.b32  	%r675, %r120, %r671;
	or.b32  	%r676, %r674, %r3;
	or.b32  	%r121, %r676, %r672;
	or.b32  	%r122, %r675, %r668;
	bfe.s32 	%r677, %r1, 3, 1;
	and.b32  	%r123, %r1, 8;
	shl.b32 	%r678, %r1, 4;
	or.b32  	%r679, %r123, %r678;
	shr.u32 	%r680, %r679, 2;
	and.b32  	%r681, %r680, 30;
	and.b32  	%r682, %r678, 48;
	shr.u32 	%r683, %r3, 1;
	and.b32  	%r684, %r4, 32;
	or.b32  	%r685, %r684, %r683;
	or.b32  	%r686, %r685, 8;
	or.b32  	%r687, %r685, 16;
	or.b32  	%r688, %r685, 24;
	or.b32  	%r689, %r185, %r682;
	or.b32  	%r124, %r689, %r172;
	or.b32  	%r690, %r179, %r176;
	or.b32  	%r691, %r690, %r172;
	or.b32  	%r692, %r691, %r178;
	shr.u32 	%r693, %r692, 1;
	mul.lo.s32 	%r694, %r693, 65;
	add.s32 	%r125, %r694, %r685;
	add.s32 	%r126, %r694, %r686;
	add.s32 	%r127, %r694, %r687;
	add.s32 	%r128, %r694, %r688;
	add.s32 	%r695, %r694, 2080;
	add.s32 	%r129, %r695, %r685;
	add.s32 	%r130, %r695, %r686;
	add.s32 	%r131, %r695, %r687;
	add.s32 	%r132, %r695, %r688;
	shl.b32 	%r696, %r3, 1;
	or.b32  	%r697, %r187, %r696;
	mul.lo.s32 	%r698, %r697, 65;
	add.s32 	%r699, %r681, %r698;
	mul.wide.u32 	%rd34, %r699, 4;
	mov.u64 	%rd35, shmem;
	add.s64 	%rd5, %rd35, %rd34;
	cvt.u64.u32 	%rd36, %r681;
	cvt.u64.u32 	%rd37, %r698;
	add.s64 	%rd38, %rd37, %rd36;
	shl.b64 	%rd39, %rd38, 2;
	add.s64 	%rd6, %rd35, %rd39;
	or.b32  	%r700, %r697, 32;
	mul.lo.s32 	%r701, %r700, 65;
	add.s32 	%r702, %r681, %r701;
	mul.wide.u32 	%rd40, %r702, 4;
	add.s64 	%rd7, %rd35, %rd40;
	cvt.u64.u32 	%rd41, %r701;
	add.s64 	%rd42, %rd36, %rd41;
	shl.b64 	%rd43, %rd42, 2;
	add.s64 	%rd8, %rd35, %rd43;
	shl.b32 	%r703, %r266, 20;
	add.s32 	%r704, %r703, -3145728;
	or.b32  	%r705, %r174, %r188;
	shl.b32 	%r706, %r3, 9;
	shl.b32 	%r707, %r705, 7;
	or.b32  	%r708, %r706, %r707;
	or.b32  	%r133, %r671, %r708;
	cvt.s64.s32 	%rd9, %r704;
	or.b32  	%r709, %r708, %r675;
	or.b32  	%r134, %r709, 8192;
	bfe.u32 	%r710, %r678, 5, 1;
	setp.gt.u32 	%p311, %r1, 15;
	shr.u32 	%r711, %r172, 3;
	mul.lo.s32 	%r712, %r187, 65;
	bfe.s32 	%r713, %r3, 2, 1;
	and.b32  	%r714, %r3, 4;
	setp.eq.s32 	%p312, %r714, 0;
	and.b32  	%r715, %r713, 520;
	and.b32  	%r716, %r3, 1;
	neg.s32 	%r717, %r716;
	and.b32  	%r718, %r717, 2080;
	bfe.s32 	%r719, %r3, 1, 1;
	and.b32  	%r720, %r3, 2;
	setp.eq.s32 	%p313, %r720, 0;
	and.b32  	%r721, %r719, 1040;
	shr.u32 	%r722, %r3, 3;
	mul.lo.s32 	%r723, %r722, 260;
	or.b32  	%r724, %r718, %r681;
	add.s32 	%r725, %r724, %r712;
	add.s32 	%r726, %r725, %r715;
	add.s32 	%r727, %r726, %r721;
	add.s32 	%r728, %r727, %r723;
	mul.wide.u32 	%rd44, %r728, 4;
	add.s64 	%rd10, %rd35, %rd44;
	cvt.u64.u32 	%rd45, %r723;
	selp.b64 	%rd46, 0, 1040, %p313;
	selp.b64 	%rd47, 0, 520, %p312;
	cvt.u64.u32 	%rd48, %r712;
	cvt.u64.u32 	%rd49, %r724;
	add.s64 	%rd50, %rd49, %rd48;
	add.s64 	%rd51, %rd50, %rd47;
	add.s64 	%rd52, %rd51, %rd46;
	add.s64 	%rd53, %rd52, %rd45;
	shl.b64 	%rd54, %rd53, 2;
	add.s64 	%rd11, %rd35, %rd54;
	cvt.u64.u32 	%rd55, %r725;
	add.s64 	%rd56, %rd55, %rd47;
	add.s64 	%rd57, %rd56, %rd46;
	add.s64 	%rd58, %rd57, %rd45;
	shl.b64 	%rd59, %rd58, 2;
	add.s64 	%rd12, %rd35, %rd59;
	add.s32 	%r729, %r728, 162;
	mul.wide.u32 	%rd60, %r729, 4;
	add.s64 	%rd13, %rd35, %rd60;
	add.s32 	%r730, %r728, 131;
	mul.wide.u32 	%rd61, %r730, 4;
	add.s64 	%rd14, %rd35, %rd61;
	add.s32 	%r731, %r728, 163;
	mul.wide.u32 	%rd62, %r731, 4;
	add.s64 	%rd15, %rd35, %rd62;
	cvt.u64.u32 	%rd63, %r726;
	add.s64 	%rd64, %rd63, %rd46;
	add.s64 	%rd65, %rd64, %rd45;
	shl.b64 	%rd66, %rd65, 2;
	add.s64 	%rd16, %rd35, %rd66;
	add.s32 	%r732, %r728, 4193;
	mul.wide.u32 	%rd67, %r732, 4;
	add.s64 	%rd17, %rd35, %rd67;
	add.s32 	%r733, %r728, 4162;
	mul.wide.u32 	%rd68, %r733, 4;
	add.s64 	%rd18, %rd35, %rd68;
	add.s32 	%r734, %r728, 4194;
	mul.wide.u32 	%rd69, %r734, 4;
	add.s64 	%rd19, %rd35, %rd69;
	add.s32 	%r735, %r728, 4291;
	mul.wide.u32 	%rd70, %r735, 4;
	add.s64 	%rd20, %rd35, %rd70;
	add.s32 	%r736, %r728, 4323;
	mul.wide.u32 	%rd71, %r736, 4;
	add.s64 	%rd21, %rd35, %rd71;
	add.s32 	%r737, %r728, 4292;
	mul.wide.u32 	%rd72, %r737, 4;
	add.s64 	%rd22, %rd35, %rd72;
	add.s32 	%r738, %r728, 4324;
	mul.wide.u32 	%rd73, %r738, 4;
	add.s64 	%rd23, %rd35, %rd73;
	mul.lo.s32 	%r739, %r710, 65;
	setp.eq.s32 	%p314, %r184, 0;
	selp.b32 	%r740, 0, 130, %p314;
	selp.b32 	%r741, 520, 0, %p311;
	and.b32  	%r135, %r677, 1040;
	mul.lo.s32 	%r136, %r711, 260;
	add.s32 	%r742, %r685, %r739;
	add.s32 	%r743, %r742, %r740;
	add.s32 	%r137, %r743, %r741;
	add.s32 	%r744, %r686, %r739;
	add.s32 	%r745, %r744, %r740;
	add.s32 	%r138, %r745, %r741;
	add.s32 	%r746, %r687, %r739;
	add.s32 	%r747, %r746, %r740;
	add.s32 	%r139, %r747, %r741;
	add.s32 	%r748, %r688, %r739;
	add.s32 	%r749, %r748, %r740;
	add.s32 	%r140, %r749, %r741;
	add.s32 	%r141, %r685, 2080;
	add.s32 	%r142, %r686, 2080;
	add.s32 	%r143, %r687, 2080;
	add.s32 	%r144, %r688, 2080;
	mov.u32 	%r16375, 0;
	setp.eq.s32 	%p316, %r123, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16376, %r16375;
	mov.u32 	%r16377, %r16375;
	mov.u32 	%r16378, %r16375;
	mov.u32 	%r16379, %r16375;
	mov.u32 	%r16380, %r16375;
	mov.u32 	%r16381, %r16375;
	mov.u32 	%r16382, %r16375;
	mov.u32 	%r16383, %r16375;
	mov.u32 	%r16384, %r16375;
	mov.u32 	%r16385, %r16375;
	mov.u32 	%r16386, %r16375;
	mov.u32 	%r16387, %r16375;
	mov.u32 	%r16388, %r16375;
	mov.u32 	%r16389, %r16375;
	mov.u32 	%r16390, %r16375;
	mov.u32 	%r16391, %r16375;
	mov.u32 	%r16392, %r16375;
	mov.u32 	%r16393, %r16375;
	mov.u32 	%r16394, %r16375;
	mov.u32 	%r16395, %r16375;
	mov.u32 	%r16396, %r16375;
	mov.u32 	%r16397, %r16375;
	mov.u32 	%r16398, %r16375;
	mov.u32 	%r16399, %r16375;
	bra.uni 	$L__BB0_181;
$L__BB0_187:                            // %L70648
                                        //   in Loop: Header=BB0_181 Depth=1
	add.s32 	%r170, %r16399, 256;
	setp.ne.s32 	%p341, %r16399, 65280;
	mov.u32 	%r16399, %r170;
	@%p341 bra 	$L__BB0_181;
	bra.uni 	$L__BB0_188;
$L__BB0_181:                            // %L2328
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_183 Depth 2
	add.s32 	%r750, %r16399, %r264;
	setp.lt.s32 	%p315, %r750, %r265;
	@%p315 bra 	$L__BB0_182;
	bra.uni 	$L__BB0_188;
$L__BB0_182:                            // %pass860
                                        //   in Loop: Header=BB0_181 Depth=1
	and.b32  	%r816, %r16399, 65280;
	or.b32  	%r817, %r121, %r816;
	shl.b32 	%r818, %r817, 13;
	add.s32 	%r819, %r122, %r818;
	shr.s32 	%r820, %r819, 31;
	shr.u32 	%r821, %r820, 3;
	add.s32 	%r822, %r819, %r821;
	shr.s32 	%r823, %r822, 29;
	setp.lt.s32 	%p317, %r819, 0;
	and.b32  	%r824, %r822, -536870912;
	setp.ne.s32 	%p318, %r824, %r819;
	and.pred  	%p319, %p317, %p318;
	selp.u32 	%r825, 1, 0, %p319;
	sub.s32 	%r826, %r825, %r823;
	shl.b32 	%r827, %r826, 29;
	add.s32 	%r828, %r827, %r819;
	mul.wide.s32 	%rd74, %r828, 4;
	add.s64 	%rd75, %rd2, %rd74;
	ld.global.v4.u32 	{%r829, %r830, %r831, %r832}, [%rd75];
	or.b32  	%r833, %r818, 131072;
	add.s32 	%r834, %r122, %r833;
	shr.s32 	%r835, %r834, 31;
	shr.u32 	%r836, %r835, 3;
	add.s32 	%r837, %r834, %r836;
	shr.s32 	%r838, %r837, 29;
	setp.lt.s32 	%p320, %r834, 0;
	and.b32  	%r839, %r837, -536870912;
	setp.ne.s32 	%p321, %r839, %r834;
	and.pred  	%p322, %p320, %p321;
	selp.u32 	%r840, 1, 0, %p322;
	sub.s32 	%r841, %r840, %r838;
	shl.b32 	%r842, %r841, 29;
	add.s32 	%r843, %r842, %r834;
	mul.wide.s32 	%rd76, %r843, 4;
	add.s64 	%rd77, %rd2, %rd76;
	ld.global.v4.u32 	{%r844, %r845, %r846, %r847}, [%rd77];
	or.b32  	%r848, %r818, 1048576;
	add.s32 	%r849, %r122, %r848;
	shr.s32 	%r850, %r849, 31;
	shr.u32 	%r851, %r850, 3;
	add.s32 	%r852, %r849, %r851;
	shr.s32 	%r853, %r852, 29;
	setp.lt.s32 	%p323, %r849, 0;
	and.b32  	%r854, %r852, -536870912;
	setp.ne.s32 	%p324, %r854, %r849;
	and.pred  	%p325, %p323, %p324;
	selp.u32 	%r855, 1, 0, %p325;
	sub.s32 	%r856, %r855, %r853;
	shl.b32 	%r857, %r856, 29;
	add.s32 	%r858, %r857, %r849;
	mul.wide.s32 	%rd78, %r858, 4;
	add.s64 	%rd79, %rd2, %rd78;
	ld.global.v4.u32 	{%r859, %r860, %r861, %r862}, [%rd79];
	or.b32  	%r863, %r818, 1179648;
	add.s32 	%r864, %r122, %r863;
	shr.s32 	%r865, %r864, 31;
	shr.u32 	%r866, %r865, 3;
	add.s32 	%r867, %r864, %r866;
	shr.s32 	%r868, %r867, 29;
	setp.lt.s32 	%p326, %r864, 0;
	and.b32  	%r869, %r867, -536870912;
	setp.ne.s32 	%p327, %r869, %r864;
	and.pred  	%p328, %p326, %p327;
	selp.u32 	%r870, 1, 0, %p328;
	sub.s32 	%r871, %r870, %r868;
	shl.b32 	%r872, %r871, 29;
	add.s32 	%r873, %r872, %r864;
	mul.wide.s32 	%rd80, %r873, 4;
	add.s64 	%rd81, %rd2, %rd80;
	ld.global.v4.u32 	{%r874, %r875, %r876, %r877}, [%rd81];
	selp.b32 	%r878, %r831, %r829, %p316;
	shfl.sync.bfly.b32	%r879, %r878, 8, 31, -1;
	selp.b32 	%r752, %r829, %r879, %p316;
	selp.b32 	%r753, %r879, %r831, %p316;
	selp.b32 	%r880, %r832, %r830, %p316;
	shfl.sync.bfly.b32	%r881, %r880, 8, 31, -1;
	selp.b32 	%r760, %r830, %r881, %p316;
	selp.b32 	%r761, %r881, %r832, %p316;
	selp.b32 	%r882, %r846, %r844, %p316;
	shfl.sync.bfly.b32	%r883, %r882, 8, 31, -1;
	selp.b32 	%r768, %r844, %r883, %p316;
	selp.b32 	%r769, %r883, %r846, %p316;
	selp.b32 	%r884, %r847, %r845, %p316;
	shfl.sync.bfly.b32	%r885, %r884, 8, 31, -1;
	selp.b32 	%r776, %r845, %r885, %p316;
	selp.b32 	%r777, %r885, %r847, %p316;
	selp.b32 	%r886, %r861, %r859, %p316;
	shfl.sync.bfly.b32	%r887, %r886, 8, 31, -1;
	selp.b32 	%r784, %r859, %r887, %p316;
	selp.b32 	%r785, %r887, %r861, %p316;
	selp.b32 	%r888, %r862, %r860, %p316;
	shfl.sync.bfly.b32	%r889, %r888, 8, 31, -1;
	selp.b32 	%r792, %r860, %r889, %p316;
	selp.b32 	%r793, %r889, %r862, %p316;
	selp.b32 	%r890, %r876, %r874, %p316;
	shfl.sync.bfly.b32	%r891, %r890, 8, 31, -1;
	selp.b32 	%r800, %r874, %r891, %p316;
	selp.b32 	%r801, %r891, %r876, %p316;
	selp.b32 	%r892, %r877, %r875, %p316;
	shfl.sync.bfly.b32	%r893, %r892, 8, 31, -1;
	selp.b32 	%r808, %r875, %r893, %p316;
	selp.b32 	%r809, %r893, %r877, %p316;
	mov.u32 	%r810, 21520;
	// begin inline asm
	prmt.b32 %r751, %r752, %r753, %r810;
	// end inline asm
	mov.u32 	%r814, 30258;
	// begin inline asm
	prmt.b32 %r755, %r752, %r753, %r814;
	// end inline asm
	// begin inline asm
	prmt.b32 %r759, %r760, %r761, %r810;
	// end inline asm
	// begin inline asm
	prmt.b32 %r763, %r760, %r761, %r814;
	// end inline asm
	// begin inline asm
	prmt.b32 %r767, %r768, %r769, %r810;
	// end inline asm
	// begin inline asm
	prmt.b32 %r771, %r768, %r769, %r814;
	// end inline asm
	// begin inline asm
	prmt.b32 %r775, %r776, %r777, %r810;
	// end inline asm
	// begin inline asm
	prmt.b32 %r779, %r776, %r777, %r814;
	// end inline asm
	// begin inline asm
	prmt.b32 %r783, %r784, %r785, %r810;
	// end inline asm
	// begin inline asm
	prmt.b32 %r787, %r784, %r785, %r814;
	// end inline asm
	// begin inline asm
	prmt.b32 %r791, %r792, %r793, %r810;
	// end inline asm
	// begin inline asm
	prmt.b32 %r795, %r792, %r793, %r814;
	// end inline asm
	// begin inline asm
	prmt.b32 %r799, %r800, %r801, %r810;
	// end inline asm
	// begin inline asm
	prmt.b32 %r803, %r800, %r801, %r814;
	// end inline asm
	// begin inline asm
	prmt.b32 %r807, %r808, %r809, %r810;
	// end inline asm
	// begin inline asm
	prmt.b32 %r811, %r808, %r809, %r814;
	// end inline asm
	st.shared.u32 	[%rd10], %r751;
	st.shared.u32 	[%rd11+128], %r755;
	st.shared.u32 	[%rd11+4], %r759;
	st.shared.u32 	[%rd11+132], %r763;
	st.shared.u32 	[%rd12+520], %r767;
	st.shared.u32 	[%rd13], %r771;
	st.shared.u32 	[%rd14], %r775;
	st.shared.u32 	[%rd15], %r779;
	st.shared.u32 	[%rd16+16644], %r783;
	st.shared.u32 	[%rd17], %r787;
	st.shared.u32 	[%rd18], %r791;
	st.shared.u32 	[%rd19], %r795;
	st.shared.u32 	[%rd20], %r799;
	st.shared.u32 	[%rd21], %r803;
	st.shared.u32 	[%rd22], %r807;
	st.shared.u32 	[%rd23], %r811;
	bar.sync 	0;
	mov.u32 	%r3238, 0;
	mov.u32 	%r16400, %r3238;
$L__BB0_183:                            // %pass6401
                                        //   Parent Loop BB0_181 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.eq.s32 	%p329, %r16400, 0;
	selp.b32 	%r16158, 0, 4161, %p329;
	add.s32 	%r16159, %r137, %r16158;
	add.s32 	%r16160, %r16159, %r135;
	add.s32 	%r16161, %r16160, %r136;
	mul.wide.u32 	%rd82, %r16161, 4;
	add.s64 	%rd84, %rd35, %rd82;
	ld.shared.u32 	%r16162, [%rd84];
	add.s32 	%r16163, %r138, %r16158;
	add.s32 	%r16164, %r16163, %r135;
	add.s32 	%r16165, %r16164, %r136;
	mul.wide.u32 	%rd85, %r16165, 4;
	add.s64 	%rd86, %rd35, %rd85;
	ld.shared.u32 	%r16166, [%rd86];
	add.s32 	%r16167, %r139, %r16158;
	add.s32 	%r16168, %r16167, %r135;
	add.s32 	%r16169, %r16168, %r136;
	mul.wide.u32 	%rd87, %r16169, 4;
	add.s64 	%rd88, %rd35, %rd87;
	ld.shared.u32 	%r16170, [%rd88];
	add.s32 	%r16171, %r140, %r16158;
	add.s32 	%r16172, %r16171, %r135;
	add.s32 	%r16173, %r16172, %r136;
	mul.wide.u32 	%rd89, %r16173, 4;
	add.s64 	%rd90, %rd35, %rd89;
	ld.shared.u32 	%r16174, [%rd90];
	or.b32  	%r16175, %r124, %r16400;
	or.b32  	%r16176, %r16175, 1;
	add.s32 	%r16177, %r16176, %r16399;
	bfe.s32 	%r16178, %r16177, 5, 1;
	and.b32  	%r16179, %r16178, 65;
	bfe.s32 	%r16180, %r16177, 4, 1;
	and.b32  	%r16181, %r16180, 130;
	bfe.s32 	%r16182, %r16177, 2, 1;
	and.b32  	%r16183, %r16182, 520;
	bfe.s32 	%r16184, %r16177, 7, 1;
	and.b32  	%r16185, %r16184, 4161;
	bfe.s32 	%r16186, %r16177, 1, 1;
	and.b32  	%r16187, %r16186, 1040;
	bfe.s32 	%r16188, %r16177, 3, 1;
	and.b32  	%r16189, %r16188, 260;
	add.s32 	%r16190, %r141, %r16179;
	add.s32 	%r16191, %r16190, %r16181;
	add.s32 	%r16192, %r16191, %r16183;
	add.s32 	%r16193, %r16192, %r16185;
	add.s32 	%r16194, %r16193, %r16187;
	add.s32 	%r16195, %r16194, %r16189;
	mul.wide.u32 	%rd91, %r16195, 4;
	add.s64 	%rd92, %rd35, %rd91;
	ld.shared.u32 	%r16196, [%rd92];
	add.s32 	%r16197, %r142, %r16179;
	add.s32 	%r16198, %r16197, %r16181;
	add.s32 	%r16199, %r16198, %r16183;
	add.s32 	%r16200, %r16199, %r16185;
	add.s32 	%r16201, %r16200, %r16187;
	add.s32 	%r16202, %r16201, %r16189;
	mul.wide.u32 	%rd93, %r16202, 4;
	add.s64 	%rd94, %rd35, %rd93;
	ld.shared.u32 	%r16203, [%rd94];
	add.s32 	%r16204, %r143, %r16179;
	add.s32 	%r16205, %r16204, %r16181;
	add.s32 	%r16206, %r16205, %r16183;
	add.s32 	%r16207, %r16206, %r16185;
	add.s32 	%r16208, %r16207, %r16187;
	add.s32 	%r16209, %r16208, %r16189;
	mul.wide.u32 	%rd95, %r16209, 4;
	add.s64 	%rd96, %rd35, %rd95;
	ld.shared.u32 	%r16210, [%rd96];
	add.s32 	%r16211, %r144, %r16179;
	add.s32 	%r16212, %r16211, %r16181;
	add.s32 	%r16213, %r16212, %r16183;
	add.s32 	%r16214, %r16213, %r16185;
	add.s32 	%r16215, %r16214, %r16187;
	add.s32 	%r16216, %r16215, %r16189;
	mul.wide.u32 	%rd97, %r16216, 4;
	add.s64 	%rd98, %rd35, %rd97;
	ld.shared.u32 	%r16217, [%rd98];
	// begin inline asm
	mov.b32 %r899, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r898, %r16162, -2004318072;
	mov.u32 	%r897, 983055;
	// begin inline asm
	lop3.b32 %r896, %r897, %r898, %r899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r900, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r901, %r899, %r900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r904, %r896, %r901;
	// end inline asm
	mov.u32 	%r908, 15728880;
	// begin inline asm
	lop3.b32 %r907, %r908, %r898, %r910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r911, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r912, %r910, %r911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r915, %r907, %r912;
	// end inline asm
	shr.u32 	%r920, %r898, 8;
	// begin inline asm
	lop3.b32 %r918, %r897, %r920, %r899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r922, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r923, %r899, %r922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r926, %r918, %r923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r929, %r908, %r920, %r910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r933, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r934, %r910, %r933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r937, %r929, %r934;
	// end inline asm
	// begin inline asm
	mov.b32 %r945, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r944, %r16166, -2004318072;
	// begin inline asm
	lop3.b32 %r942, %r897, %r944, %r945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r947, %r945, %r946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r950, %r942, %r947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r953, %r908, %r944, %r956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r958, %r956, %r957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r961, %r953, %r958;
	// end inline asm
	shr.u32 	%r966, %r944, 8;
	// begin inline asm
	lop3.b32 %r964, %r897, %r966, %r945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r968, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r969, %r945, %r968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r972, %r964, %r969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r975, %r908, %r966, %r956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r979, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r980, %r956, %r979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r983, %r975, %r980;
	// end inline asm
	// begin inline asm
	mov.b32 %r991, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1002, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r990, %r16170, -2004318072;
	// begin inline asm
	lop3.b32 %r988, %r897, %r990, %r991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r993, %r991, %r992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r996, %r988, %r993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r999, %r908, %r990, %r1002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1004, %r1002, %r1003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1007, %r999, %r1004;
	// end inline asm
	shr.u32 	%r1012, %r990, 8;
	// begin inline asm
	lop3.b32 %r1010, %r897, %r1012, %r991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1014, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1015, %r991, %r1014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1018, %r1010, %r1015;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1021, %r908, %r1012, %r1002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1025, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1026, %r1002, %r1025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1029, %r1021, %r1026;
	// end inline asm
	// begin inline asm
	mov.b32 %r1037, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1048, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1036, %r16174, -2004318072;
	// begin inline asm
	lop3.b32 %r1034, %r897, %r1036, %r1037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1039, %r1037, %r1038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1042, %r1034, %r1039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1045, %r908, %r1036, %r1048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1050, %r1048, %r1049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1053, %r1045, %r1050;
	// end inline asm
	shr.u32 	%r1058, %r1036, 8;
	// begin inline asm
	lop3.b32 %r1056, %r897, %r1058, %r1037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1061, %r1037, %r1060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1064, %r1056, %r1061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1067, %r908, %r1058, %r1048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1071, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1072, %r1048, %r1071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1075, %r1067, %r1072;
	// end inline asm
	// begin inline asm
	mov.b32 %r1083, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1094, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1082, %r16196, -2004318072;
	// begin inline asm
	lop3.b32 %r1080, %r897, %r1082, %r1083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1084, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1085, %r1083, %r1084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1088, %r1080, %r1085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1091, %r908, %r1082, %r1094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1096, %r1094, %r1095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1099, %r1091, %r1096;
	// end inline asm
	shr.u32 	%r1104, %r1082, 8;
	// begin inline asm
	lop3.b32 %r1102, %r897, %r1104, %r1083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1107, %r1083, %r1106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1110, %r1102, %r1107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1113, %r908, %r1104, %r1094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1117, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1118, %r1094, %r1117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1121, %r1113, %r1118;
	// end inline asm
	// begin inline asm
	mov.b32 %r1129, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1140, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1128, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r1126, %r897, %r1128, %r1129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1131, %r1129, %r1130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1134, %r1126, %r1131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1137, %r908, %r1128, %r1140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1142, %r1140, %r1141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1145, %r1137, %r1142;
	// end inline asm
	shr.u32 	%r1150, %r1128, 8;
	// begin inline asm
	lop3.b32 %r1148, %r897, %r1150, %r1129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1152, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1153, %r1129, %r1152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1156, %r1148, %r1153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1159, %r908, %r1150, %r1140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1163, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1164, %r1140, %r1163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1167, %r1159, %r1164;
	// end inline asm
	// begin inline asm
	mov.b32 %r1175, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1186, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1174, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r1172, %r897, %r1174, %r1175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1177, %r1175, %r1176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1180, %r1172, %r1177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1183, %r908, %r1174, %r1186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1188, %r1186, %r1187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1191, %r1183, %r1188;
	// end inline asm
	shr.u32 	%r1196, %r1174, 8;
	// begin inline asm
	lop3.b32 %r1194, %r897, %r1196, %r1175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1198, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1199, %r1175, %r1198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1202, %r1194, %r1199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1205, %r908, %r1196, %r1186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1209, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1210, %r1186, %r1209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1213, %r1205, %r1210;
	// end inline asm
	// begin inline asm
	mov.b32 %r1221, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1232, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1220, %r16217, -2004318072;
	// begin inline asm
	lop3.b32 %r1218, %r897, %r1220, %r1221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1222, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1223, %r1221, %r1222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1226, %r1218, %r1223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1229, %r908, %r1220, %r1232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1233, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1234, %r1232, %r1233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1237, %r1229, %r1234;
	// end inline asm
	shr.u32 	%r1242, %r1220, 8;
	// begin inline asm
	lop3.b32 %r1240, %r897, %r1242, %r1221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1245, %r1221, %r1244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1248, %r1240, %r1245;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1251, %r908, %r1242, %r1232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1255, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1256, %r1232, %r1255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1259, %r1251, %r1256;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1262, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1264, %r1262, %r904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1267, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1269, %r1267, %r915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1272, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1274, %r1272, %r926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1277, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1279, %r1277, %r937;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1282, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1284, %r1282, %r950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1287, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1289, %r1287, %r961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1292, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1294, %r1292, %r972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1297, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1299, %r1297, %r983;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1302, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1304, %r1302, %r996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1307, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1309, %r1307, %r1007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1312, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1314, %r1312, %r1018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1317, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1319, %r1317, %r1029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1322, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1324, %r1322, %r1042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1327, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1329, %r1327, %r1053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1332, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1334, %r1332, %r1064;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1337, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1339, %r1337, %r1075;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1342, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1344, %r1342, %r1088;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1347, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1349, %r1347, %r1099;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1352, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1354, %r1352, %r1110;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1357, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1359, %r1357, %r1121;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1362, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1364, %r1362, %r1134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1367, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1369, %r1367, %r1145;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1372, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1374, %r1372, %r1156;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1377, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1379, %r1377, %r1167;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1382, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1384, %r1382, %r1180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1387, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1389, %r1387, %r1191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1392, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1394, %r1392, %r1202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1397, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1399, %r1397, %r1213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1402, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1404, %r1402, %r1226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1407, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1409, %r1407, %r1237;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1412, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1414, %r1412, %r1248;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1417, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1419, %r1417, %r1259;
	// end inline asm
	// begin inline asm
	mov.b32 %r1427, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1438, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1426, %r16375, -2004318072;
	// begin inline asm
	lop3.b32 %r1424, %r897, %r1426, %r1427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1429, %r1427, %r1428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1432, %r1424, %r1429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1435, %r908, %r1426, %r1438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1439, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1440, %r1438, %r1439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1443, %r1435, %r1440;
	// end inline asm
	shr.u32 	%r1448, %r1426, 8;
	// begin inline asm
	lop3.b32 %r1446, %r897, %r1448, %r1427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1450, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1451, %r1427, %r1450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1454, %r1446, %r1451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1457, %r908, %r1448, %r1438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1461, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1462, %r1438, %r1461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1465, %r1457, %r1462;
	// end inline asm
	// begin inline asm
	mov.b32 %r1473, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1484, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1472, %r16376, -2004318072;
	// begin inline asm
	lop3.b32 %r1470, %r897, %r1472, %r1473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1475, %r1473, %r1474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1478, %r1470, %r1475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1481, %r908, %r1472, %r1484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1485, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1486, %r1484, %r1485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1489, %r1481, %r1486;
	// end inline asm
	shr.u32 	%r1494, %r1472, 8;
	// begin inline asm
	lop3.b32 %r1492, %r897, %r1494, %r1473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1497, %r1473, %r1496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1500, %r1492, %r1497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1503, %r908, %r1494, %r1484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1507, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1508, %r1484, %r1507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1511, %r1503, %r1508;
	// end inline asm
	// begin inline asm
	mov.b32 %r1519, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1530, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1518, %r16377, -2004318072;
	// begin inline asm
	lop3.b32 %r1516, %r897, %r1518, %r1519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1521, %r1519, %r1520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1524, %r1516, %r1521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1527, %r908, %r1518, %r1530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1531, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1532, %r1530, %r1531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1535, %r1527, %r1532;
	// end inline asm
	shr.u32 	%r1540, %r1518, 8;
	// begin inline asm
	lop3.b32 %r1538, %r897, %r1540, %r1519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1542, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1543, %r1519, %r1542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1546, %r1538, %r1543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1549, %r908, %r1540, %r1530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1553, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1554, %r1530, %r1553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1557, %r1549, %r1554;
	// end inline asm
	// begin inline asm
	mov.b32 %r1565, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1576, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1564, %r16378, -2004318072;
	// begin inline asm
	lop3.b32 %r1562, %r897, %r1564, %r1565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1566, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1567, %r1565, %r1566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1570, %r1562, %r1567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1573, %r908, %r1564, %r1576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1577, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1578, %r1576, %r1577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1581, %r1573, %r1578;
	// end inline asm
	shr.u32 	%r1586, %r1564, 8;
	// begin inline asm
	lop3.b32 %r1584, %r897, %r1586, %r1565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1588, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1589, %r1565, %r1588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1592, %r1584, %r1589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1595, %r908, %r1586, %r1576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1599, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1600, %r1576, %r1599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1603, %r1595, %r1600;
	// end inline asm
	// begin inline asm
	mov.b32 %r1611, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1622, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1610, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r1608, %r897, %r1610, %r1611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1612, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1613, %r1611, %r1612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1616, %r1608, %r1613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1619, %r908, %r1610, %r1622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1623, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1624, %r1622, %r1623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1627, %r1619, %r1624;
	// end inline asm
	shr.u32 	%r1632, %r1610, 8;
	// begin inline asm
	lop3.b32 %r1630, %r897, %r1632, %r1611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1634, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1635, %r1611, %r1634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1638, %r1630, %r1635;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1641, %r908, %r1632, %r1622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1645, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1646, %r1622, %r1645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1649, %r1641, %r1646;
	// end inline asm
	// begin inline asm
	mov.b32 %r1657, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1668, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1656, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r1654, %r897, %r1656, %r1657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1658, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1659, %r1657, %r1658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1662, %r1654, %r1659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1665, %r908, %r1656, %r1668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1669, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1670, %r1668, %r1669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1673, %r1665, %r1670;
	// end inline asm
	shr.u32 	%r1678, %r1656, 8;
	// begin inline asm
	lop3.b32 %r1676, %r897, %r1678, %r1657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1680, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1681, %r1657, %r1680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1684, %r1676, %r1681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1687, %r908, %r1678, %r1668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1691, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1692, %r1668, %r1691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1695, %r1687, %r1692;
	// end inline asm
	// begin inline asm
	mov.b32 %r1703, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1714, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1702, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r1700, %r897, %r1702, %r1703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1704, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1705, %r1703, %r1704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1708, %r1700, %r1705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1711, %r908, %r1702, %r1714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1715, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1716, %r1714, %r1715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1719, %r1711, %r1716;
	// end inline asm
	shr.u32 	%r1724, %r1702, 8;
	// begin inline asm
	lop3.b32 %r1722, %r897, %r1724, %r1703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1726, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1727, %r1703, %r1726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1730, %r1722, %r1727;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1733, %r908, %r1724, %r1714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1737, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1738, %r1714, %r1737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1741, %r1733, %r1738;
	// end inline asm
	// begin inline asm
	mov.b32 %r1749, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1760, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1748, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r1746, %r897, %r1748, %r1749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1750, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1751, %r1749, %r1750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1754, %r1746, %r1751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1757, %r908, %r1748, %r1760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1761, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1762, %r1760, %r1761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1765, %r1757, %r1762;
	// end inline asm
	shr.u32 	%r1770, %r1748, 8;
	// begin inline asm
	lop3.b32 %r1768, %r897, %r1770, %r1749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1772, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1773, %r1749, %r1772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1776, %r1768, %r1773;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1779, %r908, %r1770, %r1760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1783, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1784, %r1760, %r1783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1787, %r1779, %r1784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1790, %r304, %r1432, %r1264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1794, %r304, %r1443, %r1269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1798, %r304, %r1454, %r1274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1802, %r304, %r1465, %r1279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1806, %r304, %r1478, %r1284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1810, %r304, %r1489, %r1289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1814, %r304, %r1500, %r1294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1818, %r304, %r1511, %r1299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1822, %r304, %r1524, %r1304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1826, %r304, %r1535, %r1309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1830, %r304, %r1546, %r1314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1834, %r304, %r1557, %r1319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1838, %r304, %r1570, %r1324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1842, %r304, %r1581, %r1329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1846, %r304, %r1592, %r1334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1850, %r304, %r1603, %r1339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1854, %r322, %r1616, %r1344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1858, %r322, %r1627, %r1349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1862, %r322, %r1638, %r1354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1866, %r322, %r1649, %r1359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1870, %r322, %r1662, %r1364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1874, %r322, %r1673, %r1369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1878, %r322, %r1684, %r1374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1882, %r322, %r1695, %r1379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1886, %r322, %r1708, %r1384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1890, %r322, %r1719, %r1389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1894, %r322, %r1730, %r1394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1898, %r322, %r1741, %r1399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1902, %r322, %r1754, %r1404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1906, %r322, %r1765, %r1409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1910, %r322, %r1776, %r1414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1914, %r322, %r1787, %r1419;
	// end inline asm
	// begin inline asm
	mov.b32 %r1923, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1934, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1922, %r16379, -2004318072;
	// begin inline asm
	lop3.b32 %r1920, %r897, %r1922, %r1923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1925, %r1923, %r1924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1928, %r1920, %r1925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1931, %r908, %r1922, %r1934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1936, %r1934, %r1935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1939, %r1931, %r1936;
	// end inline asm
	shr.u32 	%r1944, %r1922, 8;
	// begin inline asm
	lop3.b32 %r1942, %r897, %r1944, %r1923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1947, %r1923, %r1946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1950, %r1942, %r1947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1953, %r908, %r1944, %r1934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1958, %r1934, %r1957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1961, %r1953, %r1958;
	// end inline asm
	// begin inline asm
	mov.b32 %r1969, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1980, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1968, %r16380, -2004318072;
	// begin inline asm
	lop3.b32 %r1966, %r897, %r1968, %r1969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1970, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1971, %r1969, %r1970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1974, %r1966, %r1971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1977, %r908, %r1968, %r1980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1982, %r1980, %r1981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1985, %r1977, %r1982;
	// end inline asm
	shr.u32 	%r1990, %r1968, 8;
	// begin inline asm
	lop3.b32 %r1988, %r897, %r1990, %r1969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1993, %r1969, %r1992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1996, %r1988, %r1993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1999, %r908, %r1990, %r1980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2004, %r1980, %r2003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2007, %r1999, %r2004;
	// end inline asm
	// begin inline asm
	mov.b32 %r2015, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2026, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2014, %r16381, -2004318072;
	// begin inline asm
	lop3.b32 %r2012, %r897, %r2014, %r2015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2016, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2017, %r2015, %r2016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2020, %r2012, %r2017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2023, %r908, %r2014, %r2026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2027, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2028, %r2026, %r2027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2031, %r2023, %r2028;
	// end inline asm
	shr.u32 	%r2036, %r2014, 8;
	// begin inline asm
	lop3.b32 %r2034, %r897, %r2036, %r2015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2039, %r2015, %r2038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2042, %r2034, %r2039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2045, %r908, %r2036, %r2026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2050, %r2026, %r2049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2053, %r2045, %r2050;
	// end inline asm
	// begin inline asm
	mov.b32 %r2061, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2072, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2060, %r16382, -2004318072;
	// begin inline asm
	lop3.b32 %r2058, %r897, %r2060, %r2061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2063, %r2061, %r2062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2066, %r2058, %r2063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2069, %r908, %r2060, %r2072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2073, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2074, %r2072, %r2073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2077, %r2069, %r2074;
	// end inline asm
	shr.u32 	%r2082, %r2060, 8;
	// begin inline asm
	lop3.b32 %r2080, %r897, %r2082, %r2061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2084, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2085, %r2061, %r2084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2088, %r2080, %r2085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2091, %r908, %r2082, %r2072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2096, %r2072, %r2095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2099, %r2091, %r2096;
	// end inline asm
	// begin inline asm
	mov.b32 %r2107, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2118, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2106, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r2104, %r897, %r2106, %r2107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2109, %r2107, %r2108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2112, %r2104, %r2109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2115, %r908, %r2106, %r2118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2119, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2120, %r2118, %r2119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2123, %r2115, %r2120;
	// end inline asm
	shr.u32 	%r2128, %r2106, 8;
	// begin inline asm
	lop3.b32 %r2126, %r897, %r2128, %r2107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2131, %r2107, %r2130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2134, %r2126, %r2131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2137, %r908, %r2128, %r2118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2142, %r2118, %r2141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2145, %r2137, %r2142;
	// end inline asm
	// begin inline asm
	mov.b32 %r2153, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2164, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2152, %r16392, -2004318072;
	// begin inline asm
	lop3.b32 %r2150, %r897, %r2152, %r2153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2154, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2155, %r2153, %r2154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2158, %r2150, %r2155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2161, %r908, %r2152, %r2164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2165, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2166, %r2164, %r2165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2169, %r2161, %r2166;
	// end inline asm
	shr.u32 	%r2174, %r2152, 8;
	// begin inline asm
	lop3.b32 %r2172, %r897, %r2174, %r2153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2177, %r2153, %r2176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2180, %r2172, %r2177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2183, %r908, %r2174, %r2164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2188, %r2164, %r2187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2191, %r2183, %r2188;
	// end inline asm
	// begin inline asm
	mov.b32 %r2199, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2210, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2198, %r16393, -2004318072;
	// begin inline asm
	lop3.b32 %r2196, %r897, %r2198, %r2199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2200, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2201, %r2199, %r2200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2204, %r2196, %r2201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2207, %r908, %r2198, %r2210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2211, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2212, %r2210, %r2211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2215, %r2207, %r2212;
	// end inline asm
	shr.u32 	%r2220, %r2198, 8;
	// begin inline asm
	lop3.b32 %r2218, %r897, %r2220, %r2199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2222, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2223, %r2199, %r2222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2226, %r2218, %r2223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2229, %r908, %r2220, %r2210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2233, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2234, %r2210, %r2233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2237, %r2229, %r2234;
	// end inline asm
	// begin inline asm
	mov.b32 %r2245, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2256, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2244, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r2242, %r897, %r2244, %r2245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2246, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2247, %r2245, %r2246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2250, %r2242, %r2247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2253, %r908, %r2244, %r2256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2257, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2258, %r2256, %r2257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2261, %r2253, %r2258;
	// end inline asm
	shr.u32 	%r2266, %r2244, 8;
	// begin inline asm
	lop3.b32 %r2264, %r897, %r2266, %r2245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2268, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2269, %r2245, %r2268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2272, %r2264, %r2269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2275, %r908, %r2266, %r2256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2279, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2280, %r2256, %r2279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2283, %r2275, %r2280;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2286, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2288, %r2286, %r1928, %r1790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2292, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2294, %r2292, %r1939, %r1794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2298, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2300, %r2298, %r1950, %r1798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2304, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2306, %r2304, %r1961, %r1802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2310, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2312, %r2310, %r1974, %r1806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2316, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2318, %r2316, %r1985, %r1810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2322, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2324, %r2322, %r1996, %r1814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2328, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2330, %r2328, %r2007, %r1818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2334, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2336, %r2334, %r2020, %r1822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2340, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2342, %r2340, %r2031, %r1826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2346, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2348, %r2346, %r2042, %r1830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2352, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2354, %r2352, %r2053, %r1834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2358, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2360, %r2358, %r2066, %r1838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2364, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2366, %r2364, %r2077, %r1842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2370, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2372, %r2370, %r2088, %r1846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2376, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2378, %r2376, %r2099, %r1850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2382, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2384, %r2382, %r2112, %r1854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2388, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2390, %r2388, %r2123, %r1858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2394, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2396, %r2394, %r2134, %r1862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2400, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2402, %r2400, %r2145, %r1866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2406, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2408, %r2406, %r2158, %r1870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2412, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2414, %r2412, %r2169, %r1874;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2418, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2420, %r2418, %r2180, %r1878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2424, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2426, %r2424, %r2191, %r1882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2430, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2432, %r2430, %r2204, %r1886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2436, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2438, %r2436, %r2215, %r1890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2442, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2444, %r2442, %r2226, %r1894;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2448, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2450, %r2448, %r2237, %r1898;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2454, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2456, %r2454, %r2250, %r1902;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2460, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2462, %r2460, %r2261, %r1906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2466, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2468, %r2466, %r2272, %r1910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2472, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2474, %r2472, %r2283, %r1914;
	// end inline asm
	// begin inline asm
	mov.b32 %r2483, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2494, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2482, %r16383, -2004318072;
	// begin inline asm
	lop3.b32 %r2480, %r897, %r2482, %r2483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2484, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2485, %r2483, %r2484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2488, %r2480, %r2485;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2491, %r908, %r2482, %r2494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2495, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2496, %r2494, %r2495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2499, %r2491, %r2496;
	// end inline asm
	shr.u32 	%r2504, %r2482, 8;
	// begin inline asm
	lop3.b32 %r2502, %r897, %r2504, %r2483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2506, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2507, %r2483, %r2506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2510, %r2502, %r2507;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2513, %r908, %r2504, %r2494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2518, %r2494, %r2517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2521, %r2513, %r2518;
	// end inline asm
	// begin inline asm
	mov.b32 %r2529, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2540, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2528, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r2526, %r897, %r2528, %r2529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2530, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2531, %r2529, %r2530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2534, %r2526, %r2531;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2537, %r908, %r2528, %r2540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2541, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2542, %r2540, %r2541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2545, %r2537, %r2542;
	// end inline asm
	shr.u32 	%r2550, %r2528, 8;
	// begin inline asm
	lop3.b32 %r2548, %r897, %r2550, %r2529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2552, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2553, %r2529, %r2552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2556, %r2548, %r2553;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2559, %r908, %r2550, %r2540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2563, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2564, %r2540, %r2563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2567, %r2559, %r2564;
	// end inline asm
	// begin inline asm
	mov.b32 %r2575, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2586, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2574, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r2572, %r897, %r2574, %r2575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2576, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2577, %r2575, %r2576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2580, %r2572, %r2577;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2583, %r908, %r2574, %r2586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2587, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2588, %r2586, %r2587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2591, %r2583, %r2588;
	// end inline asm
	shr.u32 	%r2596, %r2574, 8;
	// begin inline asm
	lop3.b32 %r2594, %r897, %r2596, %r2575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2598, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2599, %r2575, %r2598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2602, %r2594, %r2599;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2605, %r908, %r2596, %r2586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2609, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2610, %r2586, %r2609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2613, %r2605, %r2610;
	// end inline asm
	// begin inline asm
	mov.b32 %r2621, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2632, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2620, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r2618, %r897, %r2620, %r2621, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2622, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2623, %r2621, %r2622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2626, %r2618, %r2623;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2629, %r908, %r2620, %r2632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2633, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2634, %r2632, %r2633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2637, %r2629, %r2634;
	// end inline asm
	shr.u32 	%r2642, %r2620, 8;
	// begin inline asm
	lop3.b32 %r2640, %r897, %r2642, %r2621, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2644, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2645, %r2621, %r2644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2648, %r2640, %r2645;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2651, %r908, %r2642, %r2632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2655, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2656, %r2632, %r2655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2659, %r2651, %r2656;
	// end inline asm
	// begin inline asm
	mov.b32 %r2667, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2678, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2666, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r2664, %r897, %r2666, %r2667, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2668, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2669, %r2667, %r2668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2672, %r2664, %r2669;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2675, %r908, %r2666, %r2678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2679, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2680, %r2678, %r2679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2683, %r2675, %r2680;
	// end inline asm
	shr.u32 	%r2688, %r2666, 8;
	// begin inline asm
	lop3.b32 %r2686, %r897, %r2688, %r2667, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2690, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2691, %r2667, %r2690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2694, %r2686, %r2691;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2697, %r908, %r2688, %r2678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2701, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2702, %r2678, %r2701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2705, %r2697, %r2702;
	// end inline asm
	// begin inline asm
	mov.b32 %r2713, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2724, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2712, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r2710, %r897, %r2712, %r2713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2714, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2715, %r2713, %r2714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2718, %r2710, %r2715;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2721, %r908, %r2712, %r2724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2725, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2726, %r2724, %r2725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2729, %r2721, %r2726;
	// end inline asm
	shr.u32 	%r2734, %r2712, 8;
	// begin inline asm
	lop3.b32 %r2732, %r897, %r2734, %r2713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2736, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2737, %r2713, %r2736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2740, %r2732, %r2737;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2743, %r908, %r2734, %r2724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2747, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2748, %r2724, %r2747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2751, %r2743, %r2748;
	// end inline asm
	// begin inline asm
	mov.b32 %r2759, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2770, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2758, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r2756, %r897, %r2758, %r2759, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2760, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2761, %r2759, %r2760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2764, %r2756, %r2761;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2767, %r908, %r2758, %r2770, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2771, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2772, %r2770, %r2771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2775, %r2767, %r2772;
	// end inline asm
	shr.u32 	%r2780, %r2758, 8;
	// begin inline asm
	lop3.b32 %r2778, %r897, %r2780, %r2759, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2782, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2783, %r2759, %r2782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2786, %r2778, %r2783;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2789, %r908, %r2780, %r2770, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2793, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2794, %r2770, %r2793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2797, %r2789, %r2794;
	// end inline asm
	// begin inline asm
	mov.b32 %r2805, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2816, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2804, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r2802, %r897, %r2804, %r2805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2806, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2807, %r2805, %r2806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2810, %r2802, %r2807;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2813, %r908, %r2804, %r2816, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2817, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2818, %r2816, %r2817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2821, %r2813, %r2818;
	// end inline asm
	shr.u32 	%r2826, %r2804, 8;
	// begin inline asm
	lop3.b32 %r2824, %r897, %r2826, %r2805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2828, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2829, %r2805, %r2828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2832, %r2824, %r2829;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2835, %r908, %r2826, %r2816, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2839, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2840, %r2816, %r2839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2843, %r2835, %r2840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2981, %r376, %r2488, %r2288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2978, %r376, %r2499, %r2294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2990, %r376, %r2510, %r2300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2987, %r376, %r2521, %r2306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2999, %r376, %r2534, %r2312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2996, %r376, %r2545, %r2318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3008, %r376, %r2556, %r2324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3005, %r376, %r2567, %r2330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3017, %r376, %r2580, %r2336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3014, %r376, %r2591, %r2342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3026, %r376, %r2602, %r2348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3023, %r376, %r2613, %r2354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3035, %r376, %r2626, %r2360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3032, %r376, %r2637, %r2366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3044, %r376, %r2648, %r2372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3041, %r376, %r2659, %r2378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3053, %r394, %r2672, %r2384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3050, %r394, %r2683, %r2390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3062, %r394, %r2694, %r2396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3059, %r394, %r2705, %r2402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3071, %r394, %r2718, %r2408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3068, %r394, %r2729, %r2414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3080, %r394, %r2740, %r2420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3077, %r394, %r2751, %r2426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3089, %r394, %r2764, %r2432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3086, %r394, %r2775, %r2438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3098, %r394, %r2786, %r2444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3095, %r394, %r2797, %r2450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3107, %r394, %r2810, %r2456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3104, %r394, %r2821, %r2462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3116, %r394, %r2832, %r2468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3113, %r394, %r2843, %r2474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2974, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2976, %r2974, %r2978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2979, %r458, %r2981, %r2976;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2983, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2985, %r2983, %r2987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2988, %r458, %r2990, %r2985;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2992, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2994, %r2992, %r2996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2997, %r458, %r2999, %r2994;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3001, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3003, %r3001, %r3005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3006, %r458, %r3008, %r3003;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3010, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3012, %r3010, %r3014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3015, %r458, %r3017, %r3012;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3019, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3021, %r3019, %r3023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3024, %r458, %r3026, %r3021;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3028, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3030, %r3028, %r3032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3033, %r458, %r3035, %r3030;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3037, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3039, %r3037, %r3041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3042, %r458, %r3044, %r3039;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3046, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3048, %r3046, %r3050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3051, %r461, %r3053, %r3048;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3055, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3057, %r3055, %r3059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3060, %r461, %r3062, %r3057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3064, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3066, %r3064, %r3068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3069, %r461, %r3071, %r3066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3073, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3075, %r3073, %r3077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3078, %r461, %r3080, %r3075;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3082, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3084, %r3082, %r3086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3087, %r461, %r3089, %r3084;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3091, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3093, %r3091, %r3095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3096, %r461, %r3098, %r3093;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3100, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3102, %r3100, %r3104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3105, %r461, %r3107, %r3102;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3109, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3111, %r3109, %r3113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3114, %r461, %r3116, %r3111;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3118, %r464, %r2981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3121, %r458, %r2978, %r3118;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3125, %r464, %r2990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3128, %r458, %r2987, %r3125;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3132, %r464, %r2999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3135, %r458, %r2996, %r3132;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3139, %r464, %r3008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3142, %r458, %r3005, %r3139;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3146, %r464, %r3017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3149, %r458, %r3014, %r3146;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3153, %r464, %r3026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3156, %r458, %r3023, %r3153;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3160, %r464, %r3035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3163, %r458, %r3032, %r3160;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3167, %r464, %r3044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3170, %r458, %r3041, %r3167;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3174, %r467, %r3053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3177, %r461, %r3050, %r3174;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3181, %r467, %r3062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3184, %r461, %r3059, %r3181;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3188, %r467, %r3071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3191, %r461, %r3068, %r3188;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3195, %r467, %r3080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3198, %r461, %r3077, %r3195;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3202, %r467, %r3089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3205, %r461, %r3086, %r3202;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3209, %r467, %r3098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3212, %r461, %r3095, %r3209;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3216, %r467, %r3107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3219, %r461, %r3104, %r3216;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3223, %r467, %r3116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3226, %r461, %r3113, %r3223;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3397, %r3394}, {%r513, %r519, %r516, %r522}, {%r2979, %r3121}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3406, %r3403}, {%r513, %r519, %r516, %r522}, {%r2988, %r3128}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3415, %r3412}, {%r513, %r519, %r516, %r522}, {%r2997, %r3135}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3424, %r3421}, {%r513, %r519, %r516, %r522}, {%r3006, %r3142}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3433, %r3430}, {%r513, %r519, %r516, %r522}, {%r3015, %r3149}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3442, %r3439}, {%r513, %r519, %r516, %r522}, {%r3024, %r3156}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3451, %r3448}, {%r513, %r519, %r516, %r522}, {%r3033, %r3163}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3460, %r3457}, {%r513, %r519, %r516, %r522}, {%r3042, %r3170}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3469, %r3466}, {%r513, %r519, %r516, %r522}, {%r3051, %r3177}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3478, %r3475}, {%r513, %r519, %r516, %r522}, {%r3060, %r3184}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3487, %r3484}, {%r513, %r519, %r516, %r522}, {%r3069, %r3191}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3496, %r3493}, {%r513, %r519, %r516, %r522}, {%r3078, %r3198}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3505, %r3502}, {%r513, %r519, %r516, %r522}, {%r3087, %r3205}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3514, %r3511}, {%r513, %r519, %r516, %r522}, {%r3096, %r3212}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3523, %r3520}, {%r513, %r519, %r516, %r522}, {%r3105, %r3219}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3532, %r3529}, {%r513, %r519, %r516, %r522}, {%r3114, %r3226}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3390, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3392, %r3390, %r3394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3395, %r563, %r3397, %r3392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3399, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3401, %r3399, %r3403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3404, %r563, %r3406, %r3401;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3408, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3410, %r3408, %r3412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3413, %r563, %r3415, %r3410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3417, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3419, %r3417, %r3421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3422, %r563, %r3424, %r3419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3426, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3428, %r3426, %r3430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3431, %r563, %r3433, %r3428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3435, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3437, %r3435, %r3439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3440, %r563, %r3442, %r3437;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3444, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3446, %r3444, %r3448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3449, %r563, %r3451, %r3446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3453, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3455, %r3453, %r3457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3458, %r563, %r3460, %r3455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3462, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3464, %r3462, %r3466;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3467, %r563, %r3469, %r3464;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3471, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3473, %r3471, %r3475;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3476, %r563, %r3478, %r3473;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3480, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3482, %r3480, %r3484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3485, %r563, %r3487, %r3482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3489, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3491, %r3489, %r3493;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3494, %r563, %r3496, %r3491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3498, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3500, %r3498, %r3502;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3503, %r563, %r3505, %r3500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3507, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3509, %r3507, %r3511;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3512, %r563, %r3514, %r3509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3516, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3518, %r3516, %r3520;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3521, %r563, %r3523, %r3518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3525, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3527, %r3525, %r3529;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3530, %r563, %r3532, %r3527;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3534, %r566, %r3397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3537, %r563, %r3394, %r3534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3541, %r566, %r3406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3544, %r563, %r3403, %r3541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3548, %r566, %r3415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3551, %r563, %r3412, %r3548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3555, %r566, %r3424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3558, %r563, %r3421, %r3555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3562, %r566, %r3433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3565, %r563, %r3430, %r3562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3569, %r566, %r3442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3572, %r563, %r3439, %r3569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3576, %r566, %r3451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3579, %r563, %r3448, %r3576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3583, %r566, %r3460;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3586, %r563, %r3457, %r3583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3590, %r566, %r3469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3593, %r563, %r3466, %r3590;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3597, %r566, %r3478;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3600, %r563, %r3475, %r3597;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3604, %r566, %r3487;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3607, %r563, %r3484, %r3604;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3611, %r566, %r3496;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3614, %r563, %r3493, %r3611;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3618, %r566, %r3505;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3621, %r563, %r3502, %r3618;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3625, %r566, %r3514;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3628, %r563, %r3511, %r3625;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3632, %r566, %r3523;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3635, %r563, %r3520, %r3632;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3639, %r566, %r3532;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3642, %r563, %r3529, %r3639;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3935, %r3938}, {%r601, %r607, %r604, %r610}, {%r3395, %r3537}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3941, %r3944}, {%r601, %r607, %r604, %r610}, {%r3404, %r3544}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3947, %r3950}, {%r601, %r607, %r604, %r610}, {%r3413, %r3551}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3953, %r3956}, {%r601, %r607, %r604, %r610}, {%r3422, %r3558}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3959, %r3962}, {%r601, %r607, %r604, %r610}, {%r3431, %r3565}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3965, %r3968}, {%r601, %r607, %r604, %r610}, {%r3440, %r3572}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3971, %r3974}, {%r601, %r607, %r604, %r610}, {%r3449, %r3579}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3977, %r3980}, {%r601, %r607, %r604, %r610}, {%r3458, %r3586}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3936, %r3939}, {%r601, %r607, %r604, %r610}, {%r3467, %r3593}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3942, %r3945}, {%r601, %r607, %r604, %r610}, {%r3476, %r3600}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3948, %r3951}, {%r601, %r607, %r604, %r610}, {%r3485, %r3607}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3954, %r3957}, {%r601, %r607, %r604, %r610}, {%r3494, %r3614}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3960, %r3963}, {%r601, %r607, %r604, %r610}, {%r3503, %r3621}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3966, %r3969}, {%r601, %r607, %r604, %r610}, {%r3512, %r3628}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3972, %r3975}, {%r601, %r607, %r604, %r610}, {%r3521, %r3635}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3978, %r3981}, {%r601, %r607, %r604, %r610}, {%r3530, %r3642}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3934, %r3935, %r3936;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3937, %r3938, %r3939;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3940, %r3941, %r3942;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3943, %r3944, %r3945;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3946, %r3947, %r3948;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3949, %r3950, %r3951;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3952, %r3953, %r3954;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3955, %r3956, %r3957;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3958, %r3959, %r3960;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3961, %r3962, %r3963;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3964, %r3965, %r3966;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3967, %r3968, %r3969;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3970, %r3971, %r3972;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3973, %r3974, %r3975;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3976, %r3977, %r3978;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3979, %r3980, %r3981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3982, %r3935, %r3936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3985, %r3938, %r3939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3988, %r3941, %r3942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3991, %r3944, %r3945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3994, %r3947, %r3948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3997, %r3950, %r3951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4000, %r3953, %r3954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4003, %r3956, %r3957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4006, %r3959, %r3960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4009, %r3962, %r3963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4012, %r3965, %r3966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4015, %r3968, %r3969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4018, %r3971, %r3972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4021, %r3974, %r3975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4024, %r3977, %r3978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4027, %r3980, %r3981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4030, %r180, %r3934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4033, %r180, %r3937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4036, %r180, %r3940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4039, %r180, %r3943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4042, %r180, %r3946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4045, %r180, %r3949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4048, %r180, %r3952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4051, %r180, %r3955;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4054, %r180, %r3958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4057, %r180, %r3961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4060, %r180, %r3964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4063, %r180, %r3967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4066, %r180, %r3970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4069, %r180, %r3973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4072, %r180, %r3976;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4075, %r180, %r3979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4078, %r181, %r3982;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4081, %r181, %r3985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4084, %r181, %r3988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4087, %r181, %r3991;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4090, %r181, %r3994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4093, %r181, %r3997;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4096, %r181, %r4000;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4099, %r181, %r4003;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4102, %r181, %r4006;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4105, %r181, %r4009;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4108, %r181, %r4012;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4111, %r181, %r4015;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4114, %r181, %r4018;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4117, %r181, %r4021;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4120, %r181, %r4024;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4123, %r181, %r4027;
	// end inline asm
	// begin inline asm
	mov.b32 %r4126, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4127, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4128, %r4030, %r4126;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4131, %r4128, %r4127;
	// end inline asm
	// begin inline asm
	mov.b32 %r4134, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4135, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4136, %r4033, %r4134;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4139, %r4136, %r4135;
	// end inline asm
	// begin inline asm
	mov.b32 %r4142, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4143, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4144, %r4036, %r4142;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4147, %r4144, %r4143;
	// end inline asm
	// begin inline asm
	mov.b32 %r4150, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4151, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4152, %r4039, %r4150;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4155, %r4152, %r4151;
	// end inline asm
	// begin inline asm
	mov.b32 %r4158, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4159, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4160, %r4042, %r4158;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4163, %r4160, %r4159;
	// end inline asm
	// begin inline asm
	mov.b32 %r4166, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4167, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4168, %r4045, %r4166;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4171, %r4168, %r4167;
	// end inline asm
	// begin inline asm
	mov.b32 %r4174, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4175, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4176, %r4048, %r4174;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4179, %r4176, %r4175;
	// end inline asm
	// begin inline asm
	mov.b32 %r4182, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4183, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4184, %r4051, %r4182;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4187, %r4184, %r4183;
	// end inline asm
	// begin inline asm
	mov.b32 %r4190, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4191, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4192, %r4054, %r4190;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4195, %r4192, %r4191;
	// end inline asm
	// begin inline asm
	mov.b32 %r4198, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4199, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4200, %r4057, %r4198;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4203, %r4200, %r4199;
	// end inline asm
	// begin inline asm
	mov.b32 %r4206, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4207, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4208, %r4060, %r4206;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4211, %r4208, %r4207;
	// end inline asm
	// begin inline asm
	mov.b32 %r4214, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4215, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4216, %r4063, %r4214;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4219, %r4216, %r4215;
	// end inline asm
	// begin inline asm
	mov.b32 %r4222, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4223, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4224, %r4066, %r4222;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4227, %r4224, %r4223;
	// end inline asm
	// begin inline asm
	mov.b32 %r4230, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4231, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4232, %r4069, %r4230;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4235, %r4232, %r4231;
	// end inline asm
	// begin inline asm
	mov.b32 %r4238, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4239, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4240, %r4072, %r4238;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4243, %r4240, %r4239;
	// end inline asm
	// begin inline asm
	mov.b32 %r4246, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4247, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4248, %r4075, %r4246;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4251, %r4248, %r4247;
	// end inline asm
	// begin inline asm
	mov.b32 %r4254, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4255, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4256, %r4078, %r4254;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4259, %r4256, %r4255;
	// end inline asm
	// begin inline asm
	mov.b32 %r4262, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4263, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4264, %r4081, %r4262;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4267, %r4264, %r4263;
	// end inline asm
	// begin inline asm
	mov.b32 %r4270, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4271, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4272, %r4084, %r4270;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4275, %r4272, %r4271;
	// end inline asm
	// begin inline asm
	mov.b32 %r4278, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4279, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4280, %r4087, %r4278;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4283, %r4280, %r4279;
	// end inline asm
	// begin inline asm
	mov.b32 %r4286, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4287, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4288, %r4090, %r4286;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4291, %r4288, %r4287;
	// end inline asm
	// begin inline asm
	mov.b32 %r4294, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4295, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4296, %r4093, %r4294;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4299, %r4296, %r4295;
	// end inline asm
	// begin inline asm
	mov.b32 %r4302, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4303, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4304, %r4096, %r4302;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4307, %r4304, %r4303;
	// end inline asm
	// begin inline asm
	mov.b32 %r4310, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4311, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4312, %r4099, %r4310;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4315, %r4312, %r4311;
	// end inline asm
	// begin inline asm
	mov.b32 %r4318, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4319, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4320, %r4102, %r4318;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4323, %r4320, %r4319;
	// end inline asm
	// begin inline asm
	mov.b32 %r4326, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4327, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4328, %r4105, %r4326;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4331, %r4328, %r4327;
	// end inline asm
	// begin inline asm
	mov.b32 %r4334, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4335, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4336, %r4108, %r4334;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4339, %r4336, %r4335;
	// end inline asm
	// begin inline asm
	mov.b32 %r4342, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4343, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4344, %r4111, %r4342;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4347, %r4344, %r4343;
	// end inline asm
	// begin inline asm
	mov.b32 %r4350, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4351, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4352, %r4114, %r4350;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4355, %r4352, %r4351;
	// end inline asm
	// begin inline asm
	mov.b32 %r4358, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4359, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4360, %r4117, %r4358;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4363, %r4360, %r4359;
	// end inline asm
	// begin inline asm
	mov.b32 %r4366, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4367, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4368, %r4120, %r4366;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4371, %r4368, %r4367;
	// end inline asm
	// begin inline asm
	mov.b32 %r4374, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4375, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4376, %r4123, %r4374;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4379, %r4376, %r4375;
	// end inline asm
	// begin inline asm
	mov.b32 %r4385, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4384, %r4385, %r4383;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4387, %r4131, %r4384;
	// end inline asm
	// begin inline asm
	mov.b32 %r4390, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4391, %r4385, %r4390;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4394, %r4139, %r4391;
	// end inline asm
	// begin inline asm
	mov.b32 %r4397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4398, %r4385, %r4397;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4401, %r4147, %r4398;
	// end inline asm
	// begin inline asm
	mov.b32 %r4404, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4405, %r4385, %r4404;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4408, %r4155, %r4405;
	// end inline asm
	mov.u32 	%r4414, 25152;
	// begin inline asm
	prmt.b32 %r4411, %r4387, %r4401, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4415, %r4394, %r4408, %r4414;
	// end inline asm
	shl.b32 	%r4422, %r4415, 4;
	mov.u32 	%r4420, 252645135;
	// begin inline asm
	lop3.b32 %r4419, %r4420, %r4411, %r4422, 202;
	// end inline asm
	xor.b32  	%r16218, %r4419, -2004318072;
	// begin inline asm
	mov.b32 %r4426, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4425, %r4426, %r4424;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4428, %r4163, %r4425;
	// end inline asm
	// begin inline asm
	mov.b32 %r4431, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4432, %r4426, %r4431;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4435, %r4171, %r4432;
	// end inline asm
	// begin inline asm
	mov.b32 %r4438, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4439, %r4426, %r4438;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4442, %r4179, %r4439;
	// end inline asm
	// begin inline asm
	mov.b32 %r4445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4446, %r4426, %r4445;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4449, %r4187, %r4446;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4452, %r4428, %r4442, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4456, %r4435, %r4449, %r4414;
	// end inline asm
	shl.b32 	%r4463, %r4456, 4;
	// begin inline asm
	lop3.b32 %r4460, %r4420, %r4452, %r4463, 202;
	// end inline asm
	xor.b32  	%r16219, %r4460, -2004318072;
	// begin inline asm
	mov.b32 %r4467, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4466, %r4467, %r4465;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4469, %r4195, %r4466;
	// end inline asm
	// begin inline asm
	mov.b32 %r4472, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4473, %r4467, %r4472;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4476, %r4203, %r4473;
	// end inline asm
	// begin inline asm
	mov.b32 %r4479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4480, %r4467, %r4479;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4483, %r4211, %r4480;
	// end inline asm
	// begin inline asm
	mov.b32 %r4486, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4487, %r4467, %r4486;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4490, %r4219, %r4487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4493, %r4469, %r4483, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4497, %r4476, %r4490, %r4414;
	// end inline asm
	shl.b32 	%r4504, %r4497, 4;
	// begin inline asm
	lop3.b32 %r4501, %r4420, %r4493, %r4504, 202;
	// end inline asm
	xor.b32  	%r16220, %r4501, -2004318072;
	// begin inline asm
	mov.b32 %r4508, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4506, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4507, %r4508, %r4506;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4510, %r4227, %r4507;
	// end inline asm
	// begin inline asm
	mov.b32 %r4513, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4514, %r4508, %r4513;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4517, %r4235, %r4514;
	// end inline asm
	// begin inline asm
	mov.b32 %r4520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4521, %r4508, %r4520;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4524, %r4243, %r4521;
	// end inline asm
	// begin inline asm
	mov.b32 %r4527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4528, %r4508, %r4527;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4531, %r4251, %r4528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4534, %r4510, %r4524, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4538, %r4517, %r4531, %r4414;
	// end inline asm
	shl.b32 	%r4545, %r4538, 4;
	// begin inline asm
	lop3.b32 %r4542, %r4420, %r4534, %r4545, 202;
	// end inline asm
	xor.b32  	%r16221, %r4542, -2004318072;
	// begin inline asm
	mov.b32 %r4549, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4548, %r4549, %r4547;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4551, %r4259, %r4548;
	// end inline asm
	// begin inline asm
	mov.b32 %r4554, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4555, %r4549, %r4554;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4558, %r4267, %r4555;
	// end inline asm
	// begin inline asm
	mov.b32 %r4561, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4562, %r4549, %r4561;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4565, %r4275, %r4562;
	// end inline asm
	// begin inline asm
	mov.b32 %r4568, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4569, %r4549, %r4568;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4572, %r4283, %r4569;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4575, %r4551, %r4565, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4579, %r4558, %r4572, %r4414;
	// end inline asm
	shl.b32 	%r4586, %r4579, 4;
	// begin inline asm
	lop3.b32 %r4583, %r4420, %r4575, %r4586, 202;
	// end inline asm
	xor.b32  	%r16222, %r4583, -2004318072;
	// begin inline asm
	mov.b32 %r4590, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4588, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4589, %r4590, %r4588;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4592, %r4291, %r4589;
	// end inline asm
	// begin inline asm
	mov.b32 %r4595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4596, %r4590, %r4595;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4599, %r4299, %r4596;
	// end inline asm
	// begin inline asm
	mov.b32 %r4602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4603, %r4590, %r4602;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4606, %r4307, %r4603;
	// end inline asm
	// begin inline asm
	mov.b32 %r4609, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4610, %r4590, %r4609;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4613, %r4315, %r4610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4616, %r4592, %r4606, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4620, %r4599, %r4613, %r4414;
	// end inline asm
	shl.b32 	%r4627, %r4620, 4;
	// begin inline asm
	lop3.b32 %r4624, %r4420, %r4616, %r4627, 202;
	// end inline asm
	xor.b32  	%r16223, %r4624, -2004318072;
	// begin inline asm
	mov.b32 %r4631, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4630, %r4631, %r4629;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4633, %r4323, %r4630;
	// end inline asm
	// begin inline asm
	mov.b32 %r4636, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4637, %r4631, %r4636;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4640, %r4331, %r4637;
	// end inline asm
	// begin inline asm
	mov.b32 %r4643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4644, %r4631, %r4643;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4647, %r4339, %r4644;
	// end inline asm
	// begin inline asm
	mov.b32 %r4650, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4651, %r4631, %r4650;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4654, %r4347, %r4651;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4657, %r4633, %r4647, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4661, %r4640, %r4654, %r4414;
	// end inline asm
	shl.b32 	%r4668, %r4661, 4;
	// begin inline asm
	lop3.b32 %r4665, %r4420, %r4657, %r4668, 202;
	// end inline asm
	xor.b32  	%r16224, %r4665, -2004318072;
	// begin inline asm
	mov.b32 %r4672, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4670, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4671, %r4672, %r4670;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4674, %r4355, %r4671;
	// end inline asm
	// begin inline asm
	mov.b32 %r4677, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4678, %r4672, %r4677;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4681, %r4363, %r4678;
	// end inline asm
	// begin inline asm
	mov.b32 %r4684, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4685, %r4672, %r4684;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4688, %r4371, %r4685;
	// end inline asm
	// begin inline asm
	mov.b32 %r4691, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4692, %r4672, %r4691;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4695, %r4379, %r4692;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4698, %r4674, %r4688, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4702, %r4681, %r4695, %r4414;
	// end inline asm
	shl.b32 	%r4709, %r4702, 4;
	// begin inline asm
	lop3.b32 %r4706, %r4420, %r4698, %r4709, 202;
	// end inline asm
	xor.b32  	%r16225, %r4706, -2004318072;
	add.s32 	%r16226, %r125, %r16158;
	mul.wide.u32 	%rd99, %r16226, 4;
	add.s64 	%rd100, %rd35, %rd99;
	st.shared.u32 	[%rd100], %r16218;
	add.s32 	%r16227, %r126, %r16158;
	mul.wide.u32 	%rd101, %r16227, 4;
	add.s64 	%rd102, %rd35, %rd101;
	st.shared.u32 	[%rd102], %r16219;
	add.s32 	%r16228, %r127, %r16158;
	mul.wide.u32 	%rd103, %r16228, 4;
	add.s64 	%rd104, %rd35, %rd103;
	st.shared.u32 	[%rd104], %r16220;
	add.s32 	%r16229, %r128, %r16158;
	mul.wide.u32 	%rd105, %r16229, 4;
	add.s64 	%rd106, %rd35, %rd105;
	st.shared.u32 	[%rd106], %r16221;
	add.s32 	%r16230, %r129, %r16158;
	mul.wide.u32 	%rd107, %r16230, 4;
	add.s64 	%rd108, %rd35, %rd107;
	st.shared.u32 	[%rd108], %r16222;
	add.s32 	%r16231, %r130, %r16158;
	mul.wide.u32 	%rd109, %r16231, 4;
	add.s64 	%rd110, %rd35, %rd109;
	st.shared.u32 	[%rd110], %r16223;
	add.s32 	%r16232, %r131, %r16158;
	mul.wide.u32 	%rd111, %r16232, 4;
	add.s64 	%rd112, %rd35, %rd111;
	st.shared.u32 	[%rd112], %r16224;
	add.s32 	%r16233, %r132, %r16158;
	mul.wide.u32 	%rd113, %r16233, 4;
	add.s64 	%rd114, %rd35, %rd113;
	st.shared.u32 	[%rd114], %r16225;
	ld.shared.u32 	%r16375, [%rd84];
	ld.shared.u32 	%r16376, [%rd86];
	ld.shared.u32 	%r16377, [%rd88];
	ld.shared.u32 	%r16378, [%rd90];
	ld.shared.u32 	%r16387, [%rd92];
	ld.shared.u32 	%r16388, [%rd94];
	ld.shared.u32 	%r16389, [%rd96];
	ld.shared.u32 	%r16390, [%rd98];
	// begin inline asm
	mov.b32 %r4715, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4726, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4714, %r16375, -2004318072;
	// begin inline asm
	lop3.b32 %r4712, %r897, %r4714, %r4715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4716, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4717, %r4715, %r4716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4720, %r4712, %r4717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4723, %r908, %r4714, %r4726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4727, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4728, %r4726, %r4727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4731, %r4723, %r4728;
	// end inline asm
	shr.u32 	%r4736, %r4714, 8;
	// begin inline asm
	lop3.b32 %r4734, %r897, %r4736, %r4715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4738, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4739, %r4715, %r4738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4742, %r4734, %r4739;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4745, %r908, %r4736, %r4726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4749, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4750, %r4726, %r4749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4753, %r4745, %r4750;
	// end inline asm
	// begin inline asm
	mov.b32 %r4761, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4772, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4760, %r16376, -2004318072;
	// begin inline asm
	lop3.b32 %r4758, %r897, %r4760, %r4761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4762, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4763, %r4761, %r4762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4766, %r4758, %r4763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4769, %r908, %r4760, %r4772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4773, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4774, %r4772, %r4773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4777, %r4769, %r4774;
	// end inline asm
	shr.u32 	%r4782, %r4760, 8;
	// begin inline asm
	lop3.b32 %r4780, %r897, %r4782, %r4761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4784, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4785, %r4761, %r4784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4788, %r4780, %r4785;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4791, %r908, %r4782, %r4772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4795, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4796, %r4772, %r4795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4799, %r4791, %r4796;
	// end inline asm
	// begin inline asm
	mov.b32 %r4807, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4818, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4806, %r16377, -2004318072;
	// begin inline asm
	lop3.b32 %r4804, %r897, %r4806, %r4807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4808, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4809, %r4807, %r4808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4812, %r4804, %r4809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4815, %r908, %r4806, %r4818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4819, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4820, %r4818, %r4819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4823, %r4815, %r4820;
	// end inline asm
	shr.u32 	%r4828, %r4806, 8;
	// begin inline asm
	lop3.b32 %r4826, %r897, %r4828, %r4807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4830, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4831, %r4807, %r4830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4834, %r4826, %r4831;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4837, %r908, %r4828, %r4818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4841, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4842, %r4818, %r4841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4845, %r4837, %r4842;
	// end inline asm
	// begin inline asm
	mov.b32 %r4853, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4864, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4852, %r16378, -2004318072;
	// begin inline asm
	lop3.b32 %r4850, %r897, %r4852, %r4853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4854, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4855, %r4853, %r4854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4858, %r4850, %r4855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4861, %r908, %r4852, %r4864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4865, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4866, %r4864, %r4865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4869, %r4861, %r4866;
	// end inline asm
	shr.u32 	%r4874, %r4852, 8;
	// begin inline asm
	lop3.b32 %r4872, %r897, %r4874, %r4853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4876, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4877, %r4853, %r4876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4880, %r4872, %r4877;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4883, %r908, %r4874, %r4864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4887, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4888, %r4864, %r4887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4891, %r4883, %r4888;
	// end inline asm
	// begin inline asm
	mov.b32 %r4899, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4910, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4898, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r4896, %r897, %r4898, %r4899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4900, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4901, %r4899, %r4900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4904, %r4896, %r4901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4907, %r908, %r4898, %r4910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4911, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4912, %r4910, %r4911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4915, %r4907, %r4912;
	// end inline asm
	shr.u32 	%r4920, %r4898, 8;
	// begin inline asm
	lop3.b32 %r4918, %r897, %r4920, %r4899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4922, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4923, %r4899, %r4922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4926, %r4918, %r4923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4929, %r908, %r4920, %r4910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4933, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4934, %r4910, %r4933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4937, %r4929, %r4934;
	// end inline asm
	// begin inline asm
	mov.b32 %r4945, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4956, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4944, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r4942, %r897, %r4944, %r4945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4947, %r4945, %r4946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4950, %r4942, %r4947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4953, %r908, %r4944, %r4956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4958, %r4956, %r4957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4961, %r4953, %r4958;
	// end inline asm
	shr.u32 	%r4966, %r4944, 8;
	// begin inline asm
	lop3.b32 %r4964, %r897, %r4966, %r4945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4968, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4969, %r4945, %r4968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4972, %r4964, %r4969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4975, %r908, %r4966, %r4956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4979, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4980, %r4956, %r4979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4983, %r4975, %r4980;
	// end inline asm
	// begin inline asm
	mov.b32 %r4991, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5002, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4990, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r4988, %r897, %r4990, %r4991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4993, %r4991, %r4992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4996, %r4988, %r4993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4999, %r908, %r4990, %r5002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5004, %r5002, %r5003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5007, %r4999, %r5004;
	// end inline asm
	shr.u32 	%r5012, %r4990, 8;
	// begin inline asm
	lop3.b32 %r5010, %r897, %r5012, %r4991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5014, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5015, %r4991, %r5014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5018, %r5010, %r5015;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5021, %r908, %r5012, %r5002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5025, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5026, %r5002, %r5025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5029, %r5021, %r5026;
	// end inline asm
	// begin inline asm
	mov.b32 %r5037, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5048, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r5036, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r5034, %r897, %r5036, %r5037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5039, %r5037, %r5038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5042, %r5034, %r5039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5045, %r908, %r5036, %r5048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5050, %r5048, %r5049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5053, %r5045, %r5050;
	// end inline asm
	shr.u32 	%r5058, %r5036, 8;
	// begin inline asm
	lop3.b32 %r5056, %r897, %r5058, %r5037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5061, %r5037, %r5060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5064, %r5056, %r5061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5067, %r908, %r5058, %r5048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5071, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5072, %r5048, %r5071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5075, %r5067, %r5072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5078, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5080, %r5078, %r4720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5083, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5085, %r5083, %r4731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5088, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5090, %r5088, %r4742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5093, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5095, %r5093, %r4753;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5098, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5100, %r5098, %r4766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5103, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5105, %r5103, %r4777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5108, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5110, %r5108, %r4788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5113, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5115, %r5113, %r4799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5118, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5120, %r5118, %r4812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5123, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5125, %r5123, %r4823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5128, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5130, %r5128, %r4834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5133, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5135, %r5133, %r4845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5138, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5140, %r5138, %r4858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5143, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5145, %r5143, %r4869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5148, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5150, %r5148, %r4880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5153, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5155, %r5153, %r4891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5158, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5160, %r5158, %r4904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5163, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5165, %r5163, %r4915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5168, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5170, %r5168, %r4926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5173, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5175, %r5173, %r4937;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5178, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5180, %r5178, %r4950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5183, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5185, %r5183, %r4961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5188, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5190, %r5188, %r4972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5193, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5195, %r5193, %r4983;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5198, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5200, %r5198, %r4996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5203, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5205, %r5203, %r5007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5208, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5210, %r5208, %r5018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5213, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5215, %r5213, %r5029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5218, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5220, %r5218, %r5042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5223, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5225, %r5223, %r5053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5228, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5230, %r5228, %r5064;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5233, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5235, %r5233, %r5075;
	// end inline asm
	// begin inline asm
	mov.b32 %r5243, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5254, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5240, %r897, %r1922, %r5243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5245, %r5243, %r5244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5248, %r5240, %r5245;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5251, %r908, %r1922, %r5254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5255, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5256, %r5254, %r5255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5259, %r5251, %r5256;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5262, %r897, %r1944, %r5243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5266, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5267, %r5243, %r5266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5270, %r5262, %r5267;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5273, %r908, %r1944, %r5254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5277, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5278, %r5254, %r5277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5281, %r5273, %r5278;
	// end inline asm
	// begin inline asm
	mov.b32 %r5289, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5300, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5286, %r897, %r1968, %r5289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5291, %r5289, %r5290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5294, %r5286, %r5291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5297, %r908, %r1968, %r5300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5301, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5302, %r5300, %r5301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5305, %r5297, %r5302;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5308, %r897, %r1990, %r5289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5313, %r5289, %r5312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5316, %r5308, %r5313;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5319, %r908, %r1990, %r5300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5323, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5324, %r5300, %r5323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5327, %r5319, %r5324;
	// end inline asm
	// begin inline asm
	mov.b32 %r5335, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5346, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5332, %r897, %r2014, %r5335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5336, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5337, %r5335, %r5336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5340, %r5332, %r5337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5343, %r908, %r2014, %r5346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5347, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5348, %r5346, %r5347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5351, %r5343, %r5348;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5354, %r897, %r2036, %r5335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5358, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5359, %r5335, %r5358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5362, %r5354, %r5359;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5365, %r908, %r2036, %r5346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5369, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5370, %r5346, %r5369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5373, %r5365, %r5370;
	// end inline asm
	// begin inline asm
	mov.b32 %r5381, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5392, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5378, %r897, %r2060, %r5381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5382, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5383, %r5381, %r5382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5386, %r5378, %r5383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5389, %r908, %r2060, %r5392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5393, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5394, %r5392, %r5393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5397, %r5389, %r5394;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5400, %r897, %r2082, %r5381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5404, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5405, %r5381, %r5404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5408, %r5400, %r5405;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5411, %r908, %r2082, %r5392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5415, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5416, %r5392, %r5415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5419, %r5411, %r5416;
	// end inline asm
	// begin inline asm
	mov.b32 %r5427, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5438, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5424, %r897, %r2106, %r5427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5429, %r5427, %r5428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5432, %r5424, %r5429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5435, %r908, %r2106, %r5438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5439, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5440, %r5438, %r5439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5443, %r5435, %r5440;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5446, %r897, %r2128, %r5427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5450, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5451, %r5427, %r5450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5454, %r5446, %r5451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5457, %r908, %r2128, %r5438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5461, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5462, %r5438, %r5461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5465, %r5457, %r5462;
	// end inline asm
	// begin inline asm
	mov.b32 %r5473, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5484, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5470, %r897, %r2152, %r5473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5475, %r5473, %r5474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5478, %r5470, %r5475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5481, %r908, %r2152, %r5484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5485, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5486, %r5484, %r5485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5489, %r5481, %r5486;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5492, %r897, %r2174, %r5473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5497, %r5473, %r5496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5500, %r5492, %r5497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5503, %r908, %r2174, %r5484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5507, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5508, %r5484, %r5507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5511, %r5503, %r5508;
	// end inline asm
	// begin inline asm
	mov.b32 %r5519, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5530, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5516, %r897, %r2198, %r5519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5521, %r5519, %r5520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5524, %r5516, %r5521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5527, %r908, %r2198, %r5530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5531, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5532, %r5530, %r5531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5535, %r5527, %r5532;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5538, %r897, %r2220, %r5519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5542, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5543, %r5519, %r5542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5546, %r5538, %r5543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5549, %r908, %r2220, %r5530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5553, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5554, %r5530, %r5553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5557, %r5549, %r5554;
	// end inline asm
	// begin inline asm
	mov.b32 %r5565, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5576, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5562, %r897, %r2244, %r5565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5566, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5567, %r5565, %r5566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5570, %r5562, %r5567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5573, %r908, %r2244, %r5576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5577, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5578, %r5576, %r5577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5581, %r5573, %r5578;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5584, %r897, %r2266, %r5565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5588, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5589, %r5565, %r5588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5592, %r5584, %r5589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5595, %r908, %r2266, %r5576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5599, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5600, %r5576, %r5599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5603, %r5595, %r5600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5606, %r304, %r5248, %r5080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5610, %r304, %r5259, %r5085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5614, %r304, %r5270, %r5090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5618, %r304, %r5281, %r5095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5622, %r304, %r5294, %r5100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5626, %r304, %r5305, %r5105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5630, %r304, %r5316, %r5110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5634, %r304, %r5327, %r5115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5638, %r304, %r5340, %r5120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5642, %r304, %r5351, %r5125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5646, %r304, %r5362, %r5130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5650, %r304, %r5373, %r5135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5654, %r304, %r5386, %r5140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5658, %r304, %r5397, %r5145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5662, %r304, %r5408, %r5150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5666, %r304, %r5419, %r5155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5670, %r322, %r5432, %r5160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5674, %r322, %r5443, %r5165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5678, %r322, %r5454, %r5170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5682, %r322, %r5465, %r5175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5686, %r322, %r5478, %r5180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5690, %r322, %r5489, %r5185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5694, %r322, %r5500, %r5190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5698, %r322, %r5511, %r5195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5702, %r322, %r5524, %r5200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5706, %r322, %r5535, %r5205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5710, %r322, %r5546, %r5210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5714, %r322, %r5557, %r5215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5718, %r322, %r5570, %r5220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5722, %r322, %r5581, %r5225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5726, %r322, %r5592, %r5230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5730, %r322, %r5603, %r5235;
	// end inline asm
	// begin inline asm
	mov.b32 %r5739, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5750, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5736, %r897, %r2482, %r5739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5740, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5741, %r5739, %r5740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5744, %r5736, %r5741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5747, %r908, %r2482, %r5750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5751, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5752, %r5750, %r5751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5755, %r5747, %r5752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5758, %r897, %r2504, %r5739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5762, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5763, %r5739, %r5762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5766, %r5758, %r5763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5769, %r908, %r2504, %r5750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5773, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5774, %r5750, %r5773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5777, %r5769, %r5774;
	// end inline asm
	// begin inline asm
	mov.b32 %r5785, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5796, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5782, %r897, %r2528, %r5785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5786, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5787, %r5785, %r5786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5790, %r5782, %r5787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5793, %r908, %r2528, %r5796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5797, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5798, %r5796, %r5797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5801, %r5793, %r5798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5804, %r897, %r2550, %r5785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5808, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5809, %r5785, %r5808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5812, %r5804, %r5809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5815, %r908, %r2550, %r5796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5819, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5820, %r5796, %r5819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5823, %r5815, %r5820;
	// end inline asm
	// begin inline asm
	mov.b32 %r5831, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5842, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5828, %r897, %r2574, %r5831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5832, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5833, %r5831, %r5832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5836, %r5828, %r5833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5839, %r908, %r2574, %r5842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5843, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5844, %r5842, %r5843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5847, %r5839, %r5844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5850, %r897, %r2596, %r5831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5854, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5855, %r5831, %r5854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5858, %r5850, %r5855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5861, %r908, %r2596, %r5842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5865, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5866, %r5842, %r5865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5869, %r5861, %r5866;
	// end inline asm
	// begin inline asm
	mov.b32 %r5877, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5888, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5874, %r897, %r2620, %r5877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5878, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5879, %r5877, %r5878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5882, %r5874, %r5879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5885, %r908, %r2620, %r5888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5889, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5890, %r5888, %r5889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5893, %r5885, %r5890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5896, %r897, %r2642, %r5877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5900, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5901, %r5877, %r5900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5904, %r5896, %r5901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5907, %r908, %r2642, %r5888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5911, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5912, %r5888, %r5911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5915, %r5907, %r5912;
	// end inline asm
	// begin inline asm
	mov.b32 %r5923, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5934, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5920, %r897, %r2666, %r5923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5925, %r5923, %r5924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5928, %r5920, %r5925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5931, %r908, %r2666, %r5934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5936, %r5934, %r5935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5939, %r5931, %r5936;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5942, %r897, %r2688, %r5923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5947, %r5923, %r5946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5950, %r5942, %r5947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5953, %r908, %r2688, %r5934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5958, %r5934, %r5957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5961, %r5953, %r5958;
	// end inline asm
	// begin inline asm
	mov.b32 %r5969, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5980, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5966, %r897, %r2712, %r5969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5970, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5971, %r5969, %r5970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5974, %r5966, %r5971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5977, %r908, %r2712, %r5980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5982, %r5980, %r5981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5985, %r5977, %r5982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5988, %r897, %r2734, %r5969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5993, %r5969, %r5992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5996, %r5988, %r5993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5999, %r908, %r2734, %r5980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6004, %r5980, %r6003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6007, %r5999, %r6004;
	// end inline asm
	// begin inline asm
	mov.b32 %r6015, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6026, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6012, %r897, %r2758, %r6015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6016, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6017, %r6015, %r6016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6020, %r6012, %r6017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6023, %r908, %r2758, %r6026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6027, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6028, %r6026, %r6027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6031, %r6023, %r6028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6034, %r897, %r2780, %r6015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6039, %r6015, %r6038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6042, %r6034, %r6039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6045, %r908, %r2780, %r6026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6050, %r6026, %r6049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6053, %r6045, %r6050;
	// end inline asm
	// begin inline asm
	mov.b32 %r6061, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6072, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6058, %r897, %r2804, %r6061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6063, %r6061, %r6062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6066, %r6058, %r6063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6069, %r908, %r2804, %r6072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6073, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6074, %r6072, %r6073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6077, %r6069, %r6074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6080, %r897, %r2826, %r6061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6084, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6085, %r6061, %r6084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6088, %r6080, %r6085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6091, %r908, %r2826, %r6072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6096, %r6072, %r6095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6099, %r6091, %r6096;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6102, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6104, %r6102, %r5744, %r5606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6108, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6110, %r6108, %r5755, %r5610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6114, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6116, %r6114, %r5766, %r5614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6120, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6122, %r6120, %r5777, %r5618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6126, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6128, %r6126, %r5790, %r5622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6132, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6134, %r6132, %r5801, %r5626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6138, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6140, %r6138, %r5812, %r5630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6144, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6146, %r6144, %r5823, %r5634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6150, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6152, %r6150, %r5836, %r5638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6156, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6158, %r6156, %r5847, %r5642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6162, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6164, %r6162, %r5858, %r5646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6168, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6170, %r6168, %r5869, %r5650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6174, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6176, %r6174, %r5882, %r5654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6180, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6182, %r6180, %r5893, %r5658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6186, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6188, %r6186, %r5904, %r5662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6192, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6194, %r6192, %r5915, %r5666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6198, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6200, %r6198, %r5928, %r5670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6204, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6206, %r6204, %r5939, %r5674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6210, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6212, %r6210, %r5950, %r5678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6216, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6218, %r6216, %r5961, %r5682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6222, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6224, %r6222, %r5974, %r5686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6228, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6230, %r6228, %r5985, %r5690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6234, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6236, %r6234, %r5996, %r5694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6240, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6242, %r6240, %r6007, %r5698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6246, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6248, %r6246, %r6020, %r5702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6252, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6254, %r6252, %r6031, %r5706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6258, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6260, %r6258, %r6042, %r5710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6264, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6266, %r6264, %r6053, %r5714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6270, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6272, %r6270, %r6066, %r5718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6276, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6278, %r6276, %r6077, %r5722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6282, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6284, %r6282, %r6088, %r5726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6288, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6290, %r6288, %r6099, %r5730;
	// end inline asm
	// begin inline asm
	mov.b32 %r6299, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6310, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6296, %r897, %r898, %r6299, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6300, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6301, %r6299, %r6300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6304, %r6296, %r6301;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6307, %r908, %r898, %r6310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6311, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6312, %r6310, %r6311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6315, %r6307, %r6312;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6318, %r897, %r920, %r6299, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6322, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6323, %r6299, %r6322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6326, %r6318, %r6323;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6329, %r908, %r920, %r6310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6333, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6334, %r6310, %r6333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6337, %r6329, %r6334;
	// end inline asm
	// begin inline asm
	mov.b32 %r6345, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6356, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6342, %r897, %r944, %r6345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6347, %r6345, %r6346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6350, %r6342, %r6347;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6353, %r908, %r944, %r6356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6357, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6358, %r6356, %r6357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6361, %r6353, %r6358;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6364, %r897, %r966, %r6345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6368, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6369, %r6345, %r6368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6372, %r6364, %r6369;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6375, %r908, %r966, %r6356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6379, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6380, %r6356, %r6379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6383, %r6375, %r6380;
	// end inline asm
	// begin inline asm
	mov.b32 %r6391, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6402, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6388, %r897, %r990, %r6391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6392, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6393, %r6391, %r6392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6396, %r6388, %r6393;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6399, %r908, %r990, %r6402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6403, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6404, %r6402, %r6403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6407, %r6399, %r6404;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6410, %r897, %r1012, %r6391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6414, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6415, %r6391, %r6414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6418, %r6410, %r6415;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6421, %r908, %r1012, %r6402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6425, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6426, %r6402, %r6425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6429, %r6421, %r6426;
	// end inline asm
	// begin inline asm
	mov.b32 %r6437, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6448, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6434, %r897, %r1036, %r6437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6438, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6439, %r6437, %r6438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6442, %r6434, %r6439;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6445, %r908, %r1036, %r6448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6449, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6450, %r6448, %r6449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6453, %r6445, %r6450;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6456, %r897, %r1058, %r6437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6460, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6461, %r6437, %r6460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6464, %r6456, %r6461;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6467, %r908, %r1058, %r6448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6472, %r6448, %r6471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6475, %r6467, %r6472;
	// end inline asm
	// begin inline asm
	mov.b32 %r6483, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6494, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6480, %r897, %r1082, %r6483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6484, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6485, %r6483, %r6484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6488, %r6480, %r6485;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6491, %r908, %r1082, %r6494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6495, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6496, %r6494, %r6495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6499, %r6491, %r6496;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6502, %r897, %r1104, %r6483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6506, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6507, %r6483, %r6506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6510, %r6502, %r6507;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6513, %r908, %r1104, %r6494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6518, %r6494, %r6517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6521, %r6513, %r6518;
	// end inline asm
	// begin inline asm
	mov.b32 %r6529, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6540, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6526, %r897, %r1128, %r6529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6530, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6531, %r6529, %r6530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6534, %r6526, %r6531;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6537, %r908, %r1128, %r6540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6541, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6542, %r6540, %r6541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6545, %r6537, %r6542;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6548, %r897, %r1150, %r6529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6552, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6553, %r6529, %r6552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6556, %r6548, %r6553;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6559, %r908, %r1150, %r6540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6563, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6564, %r6540, %r6563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6567, %r6559, %r6564;
	// end inline asm
	// begin inline asm
	mov.b32 %r6575, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6586, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6572, %r897, %r1174, %r6575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6576, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6577, %r6575, %r6576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6580, %r6572, %r6577;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6583, %r908, %r1174, %r6586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6587, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6588, %r6586, %r6587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6591, %r6583, %r6588;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6594, %r897, %r1196, %r6575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6598, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6599, %r6575, %r6598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6602, %r6594, %r6599;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6605, %r908, %r1196, %r6586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6609, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6610, %r6586, %r6609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6613, %r6605, %r6610;
	// end inline asm
	// begin inline asm
	mov.b32 %r6621, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6632, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6618, %r897, %r1220, %r6621, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6622, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6623, %r6621, %r6622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6626, %r6618, %r6623;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6629, %r908, %r1220, %r6632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6633, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6634, %r6632, %r6633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6637, %r6629, %r6634;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6640, %r897, %r1242, %r6621, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6644, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6645, %r6621, %r6644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6648, %r6640, %r6645;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6651, %r908, %r1242, %r6632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6655, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6656, %r6632, %r6655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6659, %r6651, %r6656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6797, %r376, %r6304, %r6104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6794, %r376, %r6315, %r6110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6806, %r376, %r6326, %r6116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6803, %r376, %r6337, %r6122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6815, %r376, %r6350, %r6128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6812, %r376, %r6361, %r6134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6824, %r376, %r6372, %r6140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6821, %r376, %r6383, %r6146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6833, %r376, %r6396, %r6152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6830, %r376, %r6407, %r6158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6842, %r376, %r6418, %r6164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6839, %r376, %r6429, %r6170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6851, %r376, %r6442, %r6176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6848, %r376, %r6453, %r6182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6860, %r376, %r6464, %r6188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6857, %r376, %r6475, %r6194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6869, %r394, %r6488, %r6200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6866, %r394, %r6499, %r6206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6878, %r394, %r6510, %r6212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6875, %r394, %r6521, %r6218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6887, %r394, %r6534, %r6224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6884, %r394, %r6545, %r6230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6896, %r394, %r6556, %r6236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6893, %r394, %r6567, %r6242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6905, %r394, %r6580, %r6248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6902, %r394, %r6591, %r6254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6914, %r394, %r6602, %r6260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6911, %r394, %r6613, %r6266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6923, %r394, %r6626, %r6272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6920, %r394, %r6637, %r6278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6932, %r394, %r6648, %r6284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6929, %r394, %r6659, %r6290;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6790, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6792, %r6790, %r6794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6795, %r458, %r6797, %r6792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6799, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6801, %r6799, %r6803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6804, %r458, %r6806, %r6801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6808, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6810, %r6808, %r6812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6813, %r458, %r6815, %r6810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6817, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6819, %r6817, %r6821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6822, %r458, %r6824, %r6819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6826, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6828, %r6826, %r6830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6831, %r458, %r6833, %r6828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6835, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6837, %r6835, %r6839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6840, %r458, %r6842, %r6837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6844, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6846, %r6844, %r6848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6849, %r458, %r6851, %r6846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6853, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6855, %r6853, %r6857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6858, %r458, %r6860, %r6855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6862, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6864, %r6862, %r6866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6867, %r461, %r6869, %r6864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6871, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6873, %r6871, %r6875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6876, %r461, %r6878, %r6873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6880, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6882, %r6880, %r6884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6885, %r461, %r6887, %r6882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6889, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6891, %r6889, %r6893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6894, %r461, %r6896, %r6891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6898, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6900, %r6898, %r6902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6903, %r461, %r6905, %r6900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6907, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6909, %r6907, %r6911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6912, %r461, %r6914, %r6909;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6916, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6918, %r6916, %r6920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6921, %r461, %r6923, %r6918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6925, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6927, %r6925, %r6929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6930, %r461, %r6932, %r6927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6934, %r464, %r6797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6937, %r458, %r6794, %r6934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6941, %r464, %r6806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6944, %r458, %r6803, %r6941;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6948, %r464, %r6815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6951, %r458, %r6812, %r6948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6955, %r464, %r6824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6958, %r458, %r6821, %r6955;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6962, %r464, %r6833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6965, %r458, %r6830, %r6962;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6969, %r464, %r6842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6972, %r458, %r6839, %r6969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6976, %r464, %r6851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6979, %r458, %r6848, %r6976;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6983, %r464, %r6860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6986, %r458, %r6857, %r6983;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6990, %r467, %r6869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6993, %r461, %r6866, %r6990;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6997, %r467, %r6878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7000, %r461, %r6875, %r6997;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7004, %r467, %r6887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7007, %r461, %r6884, %r7004;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7011, %r467, %r6896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7014, %r461, %r6893, %r7011;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7018, %r467, %r6905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7021, %r461, %r6902, %r7018;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7025, %r467, %r6914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7028, %r461, %r6911, %r7025;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7032, %r467, %r6923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7035, %r461, %r6920, %r7032;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7039, %r467, %r6932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7042, %r461, %r6929, %r7039;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7213, %r7210}, {%r513, %r519, %r516, %r522}, {%r6795, %r6937}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7222, %r7219}, {%r513, %r519, %r516, %r522}, {%r6804, %r6944}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7231, %r7228}, {%r513, %r519, %r516, %r522}, {%r6813, %r6951}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7240, %r7237}, {%r513, %r519, %r516, %r522}, {%r6822, %r6958}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7249, %r7246}, {%r513, %r519, %r516, %r522}, {%r6831, %r6965}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7258, %r7255}, {%r513, %r519, %r516, %r522}, {%r6840, %r6972}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7267, %r7264}, {%r513, %r519, %r516, %r522}, {%r6849, %r6979}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7276, %r7273}, {%r513, %r519, %r516, %r522}, {%r6858, %r6986}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7285, %r7282}, {%r513, %r519, %r516, %r522}, {%r6867, %r6993}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7294, %r7291}, {%r513, %r519, %r516, %r522}, {%r6876, %r7000}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7303, %r7300}, {%r513, %r519, %r516, %r522}, {%r6885, %r7007}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7312, %r7309}, {%r513, %r519, %r516, %r522}, {%r6894, %r7014}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7321, %r7318}, {%r513, %r519, %r516, %r522}, {%r6903, %r7021}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7330, %r7327}, {%r513, %r519, %r516, %r522}, {%r6912, %r7028}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7339, %r7336}, {%r513, %r519, %r516, %r522}, {%r6921, %r7035}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7348, %r7345}, {%r513, %r519, %r516, %r522}, {%r6930, %r7042}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7206, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7208, %r7206, %r7210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7211, %r563, %r7213, %r7208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7215, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7217, %r7215, %r7219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7220, %r563, %r7222, %r7217;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7224, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7226, %r7224, %r7228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7229, %r563, %r7231, %r7226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7233, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7235, %r7233, %r7237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7238, %r563, %r7240, %r7235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7242, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7244, %r7242, %r7246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7247, %r563, %r7249, %r7244;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7251, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7253, %r7251, %r7255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7256, %r563, %r7258, %r7253;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7260, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7262, %r7260, %r7264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7265, %r563, %r7267, %r7262;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7269, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7271, %r7269, %r7273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7274, %r563, %r7276, %r7271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7278, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7280, %r7278, %r7282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7283, %r563, %r7285, %r7280;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7287, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7289, %r7287, %r7291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7292, %r563, %r7294, %r7289;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7296, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7298, %r7296, %r7300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7301, %r563, %r7303, %r7298;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7305, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7307, %r7305, %r7309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7310, %r563, %r7312, %r7307;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7314, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7316, %r7314, %r7318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7319, %r563, %r7321, %r7316;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7323, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7325, %r7323, %r7327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7328, %r563, %r7330, %r7325;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7332, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7334, %r7332, %r7336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7337, %r563, %r7339, %r7334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7341, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7343, %r7341, %r7345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7346, %r563, %r7348, %r7343;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7350, %r566, %r7213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7353, %r563, %r7210, %r7350;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7357, %r566, %r7222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7360, %r563, %r7219, %r7357;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7364, %r566, %r7231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7367, %r563, %r7228, %r7364;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7371, %r566, %r7240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7374, %r563, %r7237, %r7371;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7378, %r566, %r7249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7381, %r563, %r7246, %r7378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7385, %r566, %r7258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7388, %r563, %r7255, %r7385;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7392, %r566, %r7267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7395, %r563, %r7264, %r7392;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7399, %r566, %r7276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7402, %r563, %r7273, %r7399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7406, %r566, %r7285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7409, %r563, %r7282, %r7406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7413, %r566, %r7294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7416, %r563, %r7291, %r7413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7420, %r566, %r7303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7423, %r563, %r7300, %r7420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7427, %r566, %r7312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7430, %r563, %r7309, %r7427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7434, %r566, %r7321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7437, %r563, %r7318, %r7434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7441, %r566, %r7330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7444, %r563, %r7327, %r7441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7448, %r566, %r7339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7451, %r563, %r7336, %r7448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7455, %r566, %r7348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7458, %r563, %r7345, %r7455;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7751, %r7754}, {%r601, %r607, %r604, %r610}, {%r7211, %r7353}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7757, %r7760}, {%r601, %r607, %r604, %r610}, {%r7220, %r7360}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7763, %r7766}, {%r601, %r607, %r604, %r610}, {%r7229, %r7367}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7769, %r7772}, {%r601, %r607, %r604, %r610}, {%r7238, %r7374}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7775, %r7778}, {%r601, %r607, %r604, %r610}, {%r7247, %r7381}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7781, %r7784}, {%r601, %r607, %r604, %r610}, {%r7256, %r7388}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7787, %r7790}, {%r601, %r607, %r604, %r610}, {%r7265, %r7395}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7793, %r7796}, {%r601, %r607, %r604, %r610}, {%r7274, %r7402}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7752, %r7755}, {%r601, %r607, %r604, %r610}, {%r7283, %r7409}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7758, %r7761}, {%r601, %r607, %r604, %r610}, {%r7292, %r7416}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7764, %r7767}, {%r601, %r607, %r604, %r610}, {%r7301, %r7423}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7770, %r7773}, {%r601, %r607, %r604, %r610}, {%r7310, %r7430}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7776, %r7779}, {%r601, %r607, %r604, %r610}, {%r7319, %r7437}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7782, %r7785}, {%r601, %r607, %r604, %r610}, {%r7328, %r7444}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7788, %r7791}, {%r601, %r607, %r604, %r610}, {%r7337, %r7451}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7794, %r7797}, {%r601, %r607, %r604, %r610}, {%r7346, %r7458}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7750, %r7751, %r7752;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7753, %r7754, %r7755;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7756, %r7757, %r7758;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7759, %r7760, %r7761;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7762, %r7763, %r7764;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7765, %r7766, %r7767;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7768, %r7769, %r7770;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7771, %r7772, %r7773;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7774, %r7775, %r7776;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7777, %r7778, %r7779;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7780, %r7781, %r7782;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7783, %r7784, %r7785;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7786, %r7787, %r7788;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7789, %r7790, %r7791;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7792, %r7793, %r7794;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7795, %r7796, %r7797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7798, %r7751, %r7752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7801, %r7754, %r7755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7804, %r7757, %r7758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7807, %r7760, %r7761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7810, %r7763, %r7764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7813, %r7766, %r7767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7816, %r7769, %r7770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7819, %r7772, %r7773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7822, %r7775, %r7776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7825, %r7778, %r7779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7828, %r7781, %r7782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7831, %r7784, %r7785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7834, %r7787, %r7788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7837, %r7790, %r7791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7840, %r7793, %r7794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7843, %r7796, %r7797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7846, %r180, %r7750;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7849, %r180, %r7753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7852, %r180, %r7756;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7855, %r180, %r7759;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7858, %r180, %r7762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7861, %r180, %r7765;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7864, %r180, %r7768;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7867, %r180, %r7771;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7870, %r180, %r7774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7873, %r180, %r7777;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7876, %r180, %r7780;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7879, %r180, %r7783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7882, %r180, %r7786;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7885, %r180, %r7789;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7888, %r180, %r7792;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7891, %r180, %r7795;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7894, %r181, %r7798;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7897, %r181, %r7801;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7900, %r181, %r7804;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7903, %r181, %r7807;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7906, %r181, %r7810;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7909, %r181, %r7813;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7912, %r181, %r7816;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7915, %r181, %r7819;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7918, %r181, %r7822;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7921, %r181, %r7825;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7924, %r181, %r7828;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7927, %r181, %r7831;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7930, %r181, %r7834;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7933, %r181, %r7837;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7936, %r181, %r7840;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7939, %r181, %r7843;
	// end inline asm
	// begin inline asm
	mov.b32 %r7942, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7943, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7944, %r7846, %r7942;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7947, %r7944, %r7943;
	// end inline asm
	// begin inline asm
	mov.b32 %r7950, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7951, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7952, %r7849, %r7950;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7955, %r7952, %r7951;
	// end inline asm
	// begin inline asm
	mov.b32 %r7958, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7959, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7960, %r7852, %r7958;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7963, %r7960, %r7959;
	// end inline asm
	// begin inline asm
	mov.b32 %r7966, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7967, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7968, %r7855, %r7966;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7971, %r7968, %r7967;
	// end inline asm
	// begin inline asm
	mov.b32 %r7974, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7975, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7976, %r7858, %r7974;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7979, %r7976, %r7975;
	// end inline asm
	// begin inline asm
	mov.b32 %r7982, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7983, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7984, %r7861, %r7982;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7987, %r7984, %r7983;
	// end inline asm
	// begin inline asm
	mov.b32 %r7990, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7991, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7992, %r7864, %r7990;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7995, %r7992, %r7991;
	// end inline asm
	// begin inline asm
	mov.b32 %r7998, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7999, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8000, %r7867, %r7998;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8003, %r8000, %r7999;
	// end inline asm
	// begin inline asm
	mov.b32 %r8006, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8007, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8008, %r7870, %r8006;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8011, %r8008, %r8007;
	// end inline asm
	// begin inline asm
	mov.b32 %r8014, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8015, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8016, %r7873, %r8014;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8019, %r8016, %r8015;
	// end inline asm
	// begin inline asm
	mov.b32 %r8022, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8023, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8024, %r7876, %r8022;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8027, %r8024, %r8023;
	// end inline asm
	// begin inline asm
	mov.b32 %r8030, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8031, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8032, %r7879, %r8030;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8035, %r8032, %r8031;
	// end inline asm
	// begin inline asm
	mov.b32 %r8038, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8039, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8040, %r7882, %r8038;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8043, %r8040, %r8039;
	// end inline asm
	// begin inline asm
	mov.b32 %r8046, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8047, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8048, %r7885, %r8046;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8051, %r8048, %r8047;
	// end inline asm
	// begin inline asm
	mov.b32 %r8054, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8055, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8056, %r7888, %r8054;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8059, %r8056, %r8055;
	// end inline asm
	// begin inline asm
	mov.b32 %r8062, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8063, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8064, %r7891, %r8062;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8067, %r8064, %r8063;
	// end inline asm
	// begin inline asm
	mov.b32 %r8070, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8071, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8072, %r7894, %r8070;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8075, %r8072, %r8071;
	// end inline asm
	// begin inline asm
	mov.b32 %r8078, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8079, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8080, %r7897, %r8078;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8083, %r8080, %r8079;
	// end inline asm
	// begin inline asm
	mov.b32 %r8086, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8087, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8088, %r7900, %r8086;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8091, %r8088, %r8087;
	// end inline asm
	// begin inline asm
	mov.b32 %r8094, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8095, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8096, %r7903, %r8094;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8099, %r8096, %r8095;
	// end inline asm
	// begin inline asm
	mov.b32 %r8102, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8103, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8104, %r7906, %r8102;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8107, %r8104, %r8103;
	// end inline asm
	// begin inline asm
	mov.b32 %r8110, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8111, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8112, %r7909, %r8110;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8115, %r8112, %r8111;
	// end inline asm
	// begin inline asm
	mov.b32 %r8118, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8119, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8120, %r7912, %r8118;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8123, %r8120, %r8119;
	// end inline asm
	// begin inline asm
	mov.b32 %r8126, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8127, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8128, %r7915, %r8126;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8131, %r8128, %r8127;
	// end inline asm
	// begin inline asm
	mov.b32 %r8134, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8135, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8136, %r7918, %r8134;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8139, %r8136, %r8135;
	// end inline asm
	// begin inline asm
	mov.b32 %r8142, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8143, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8144, %r7921, %r8142;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8147, %r8144, %r8143;
	// end inline asm
	// begin inline asm
	mov.b32 %r8150, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8151, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8152, %r7924, %r8150;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8155, %r8152, %r8151;
	// end inline asm
	// begin inline asm
	mov.b32 %r8158, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8159, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8160, %r7927, %r8158;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8163, %r8160, %r8159;
	// end inline asm
	// begin inline asm
	mov.b32 %r8166, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8167, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8168, %r7930, %r8166;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8171, %r8168, %r8167;
	// end inline asm
	// begin inline asm
	mov.b32 %r8174, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8175, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8176, %r7933, %r8174;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8179, %r8176, %r8175;
	// end inline asm
	// begin inline asm
	mov.b32 %r8182, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8183, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8184, %r7936, %r8182;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8187, %r8184, %r8183;
	// end inline asm
	// begin inline asm
	mov.b32 %r8190, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8191, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8192, %r7939, %r8190;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8195, %r8192, %r8191;
	// end inline asm
	// begin inline asm
	mov.b32 %r8201, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8199, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8200, %r8201, %r8199;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8203, %r7947, %r8200;
	// end inline asm
	// begin inline asm
	mov.b32 %r8206, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8207, %r8201, %r8206;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8210, %r7955, %r8207;
	// end inline asm
	// begin inline asm
	mov.b32 %r8213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8214, %r8201, %r8213;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8217, %r7963, %r8214;
	// end inline asm
	// begin inline asm
	mov.b32 %r8220, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8221, %r8201, %r8220;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8224, %r7971, %r8221;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8227, %r8203, %r8217, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8231, %r8210, %r8224, %r4414;
	// end inline asm
	shl.b32 	%r8238, %r8231, 4;
	// begin inline asm
	lop3.b32 %r8235, %r4420, %r8227, %r8238, 202;
	// end inline asm
	xor.b32  	%r16234, %r8235, -2004318072;
	// begin inline asm
	mov.b32 %r8242, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8240, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8241, %r8242, %r8240;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8244, %r7979, %r8241;
	// end inline asm
	// begin inline asm
	mov.b32 %r8247, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8248, %r8242, %r8247;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8251, %r7987, %r8248;
	// end inline asm
	// begin inline asm
	mov.b32 %r8254, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8255, %r8242, %r8254;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8258, %r7995, %r8255;
	// end inline asm
	// begin inline asm
	mov.b32 %r8261, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8262, %r8242, %r8261;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8265, %r8003, %r8262;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8268, %r8244, %r8258, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8272, %r8251, %r8265, %r4414;
	// end inline asm
	shl.b32 	%r8279, %r8272, 4;
	// begin inline asm
	lop3.b32 %r8276, %r4420, %r8268, %r8279, 202;
	// end inline asm
	xor.b32  	%r16235, %r8276, -2004318072;
	// begin inline asm
	mov.b32 %r8283, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8281, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8282, %r8283, %r8281;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8285, %r8011, %r8282;
	// end inline asm
	// begin inline asm
	mov.b32 %r8288, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8289, %r8283, %r8288;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8292, %r8019, %r8289;
	// end inline asm
	// begin inline asm
	mov.b32 %r8295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8296, %r8283, %r8295;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8299, %r8027, %r8296;
	// end inline asm
	// begin inline asm
	mov.b32 %r8302, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8303, %r8283, %r8302;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8306, %r8035, %r8303;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8309, %r8285, %r8299, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8313, %r8292, %r8306, %r4414;
	// end inline asm
	shl.b32 	%r8320, %r8313, 4;
	// begin inline asm
	lop3.b32 %r8317, %r4420, %r8309, %r8320, 202;
	// end inline asm
	xor.b32  	%r16236, %r8317, -2004318072;
	// begin inline asm
	mov.b32 %r8324, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8322, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8323, %r8324, %r8322;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8326, %r8043, %r8323;
	// end inline asm
	// begin inline asm
	mov.b32 %r8329, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8330, %r8324, %r8329;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8333, %r8051, %r8330;
	// end inline asm
	// begin inline asm
	mov.b32 %r8336, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8337, %r8324, %r8336;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8340, %r8059, %r8337;
	// end inline asm
	// begin inline asm
	mov.b32 %r8343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8344, %r8324, %r8343;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8347, %r8067, %r8344;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8350, %r8326, %r8340, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8354, %r8333, %r8347, %r4414;
	// end inline asm
	shl.b32 	%r8361, %r8354, 4;
	// begin inline asm
	lop3.b32 %r8358, %r4420, %r8350, %r8361, 202;
	// end inline asm
	xor.b32  	%r16237, %r8358, -2004318072;
	// begin inline asm
	mov.b32 %r8365, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8364, %r8365, %r8363;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8367, %r8075, %r8364;
	// end inline asm
	// begin inline asm
	mov.b32 %r8370, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8371, %r8365, %r8370;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8374, %r8083, %r8371;
	// end inline asm
	// begin inline asm
	mov.b32 %r8377, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8378, %r8365, %r8377;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8381, %r8091, %r8378;
	// end inline asm
	// begin inline asm
	mov.b32 %r8384, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8385, %r8365, %r8384;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8388, %r8099, %r8385;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8391, %r8367, %r8381, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8395, %r8374, %r8388, %r4414;
	// end inline asm
	shl.b32 	%r8402, %r8395, 4;
	// begin inline asm
	lop3.b32 %r8399, %r4420, %r8391, %r8402, 202;
	// end inline asm
	xor.b32  	%r16238, %r8399, -2004318072;
	// begin inline asm
	mov.b32 %r8406, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8404, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8405, %r8406, %r8404;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8408, %r8107, %r8405;
	// end inline asm
	// begin inline asm
	mov.b32 %r8411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8412, %r8406, %r8411;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8415, %r8115, %r8412;
	// end inline asm
	// begin inline asm
	mov.b32 %r8418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8419, %r8406, %r8418;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8422, %r8123, %r8419;
	// end inline asm
	// begin inline asm
	mov.b32 %r8425, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8426, %r8406, %r8425;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8429, %r8131, %r8426;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8432, %r8408, %r8422, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8436, %r8415, %r8429, %r4414;
	// end inline asm
	shl.b32 	%r8443, %r8436, 4;
	// begin inline asm
	lop3.b32 %r8440, %r4420, %r8432, %r8443, 202;
	// end inline asm
	xor.b32  	%r16239, %r8440, -2004318072;
	// begin inline asm
	mov.b32 %r8447, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8446, %r8447, %r8445;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8449, %r8139, %r8446;
	// end inline asm
	// begin inline asm
	mov.b32 %r8452, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8453, %r8447, %r8452;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8456, %r8147, %r8453;
	// end inline asm
	// begin inline asm
	mov.b32 %r8459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8460, %r8447, %r8459;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8463, %r8155, %r8460;
	// end inline asm
	// begin inline asm
	mov.b32 %r8466, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8467, %r8447, %r8466;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8470, %r8163, %r8467;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8473, %r8449, %r8463, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8477, %r8456, %r8470, %r4414;
	// end inline asm
	shl.b32 	%r8484, %r8477, 4;
	// begin inline asm
	lop3.b32 %r8481, %r4420, %r8473, %r8484, 202;
	// end inline asm
	xor.b32  	%r16240, %r8481, -2004318072;
	// begin inline asm
	mov.b32 %r8488, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8486, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8487, %r8488, %r8486;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8490, %r8171, %r8487;
	// end inline asm
	// begin inline asm
	mov.b32 %r8493, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8494, %r8488, %r8493;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8497, %r8179, %r8494;
	// end inline asm
	// begin inline asm
	mov.b32 %r8500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8501, %r8488, %r8500;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8504, %r8187, %r8501;
	// end inline asm
	// begin inline asm
	mov.b32 %r8507, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8508, %r8488, %r8507;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8511, %r8195, %r8508;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8514, %r8490, %r8504, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8518, %r8497, %r8511, %r4414;
	// end inline asm
	shl.b32 	%r8525, %r8518, 4;
	// begin inline asm
	lop3.b32 %r8522, %r4420, %r8514, %r8525, 202;
	// end inline asm
	xor.b32  	%r16241, %r8522, -2004318072;
	st.shared.u32 	[%rd100], %r16234;
	st.shared.u32 	[%rd102], %r16235;
	st.shared.u32 	[%rd104], %r16236;
	st.shared.u32 	[%rd106], %r16237;
	st.shared.u32 	[%rd108], %r16238;
	st.shared.u32 	[%rd110], %r16239;
	st.shared.u32 	[%rd112], %r16240;
	st.shared.u32 	[%rd114], %r16241;
	ld.shared.u32 	%r16379, [%rd84];
	ld.shared.u32 	%r16380, [%rd86];
	ld.shared.u32 	%r16381, [%rd88];
	ld.shared.u32 	%r16382, [%rd90];
	ld.shared.u32 	%r16391, [%rd92];
	ld.shared.u32 	%r16392, [%rd94];
	ld.shared.u32 	%r16393, [%rd96];
	ld.shared.u32 	%r16394, [%rd98];
	// begin inline asm
	mov.b32 %r8531, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8542, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8530, %r16379, -2004318072;
	// begin inline asm
	lop3.b32 %r8528, %r897, %r8530, %r8531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8533, %r8531, %r8532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8536, %r8528, %r8533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8539, %r908, %r8530, %r8542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8543, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8544, %r8542, %r8543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8547, %r8539, %r8544;
	// end inline asm
	shr.u32 	%r8552, %r8530, 8;
	// begin inline asm
	lop3.b32 %r8550, %r897, %r8552, %r8531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8554, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8555, %r8531, %r8554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8558, %r8550, %r8555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8561, %r908, %r8552, %r8542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8565, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8566, %r8542, %r8565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8569, %r8561, %r8566;
	// end inline asm
	// begin inline asm
	mov.b32 %r8577, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8588, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8576, %r16380, -2004318072;
	// begin inline asm
	lop3.b32 %r8574, %r897, %r8576, %r8577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8579, %r8577, %r8578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8582, %r8574, %r8579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8585, %r908, %r8576, %r8588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8589, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8590, %r8588, %r8589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8593, %r8585, %r8590;
	// end inline asm
	shr.u32 	%r8598, %r8576, 8;
	// begin inline asm
	lop3.b32 %r8596, %r897, %r8598, %r8577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8600, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8601, %r8577, %r8600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8604, %r8596, %r8601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8607, %r908, %r8598, %r8588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8611, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8612, %r8588, %r8611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8615, %r8607, %r8612;
	// end inline asm
	// begin inline asm
	mov.b32 %r8623, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8634, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8622, %r16381, -2004318072;
	// begin inline asm
	lop3.b32 %r8620, %r897, %r8622, %r8623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8625, %r8623, %r8624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8628, %r8620, %r8625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8631, %r908, %r8622, %r8634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8635, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8636, %r8634, %r8635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8639, %r8631, %r8636;
	// end inline asm
	shr.u32 	%r8644, %r8622, 8;
	// begin inline asm
	lop3.b32 %r8642, %r897, %r8644, %r8623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8646, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8647, %r8623, %r8646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8650, %r8642, %r8647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8653, %r908, %r8644, %r8634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8657, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8658, %r8634, %r8657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8661, %r8653, %r8658;
	// end inline asm
	// begin inline asm
	mov.b32 %r8669, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8680, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8668, %r16382, -2004318072;
	// begin inline asm
	lop3.b32 %r8666, %r897, %r8668, %r8669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8670, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8671, %r8669, %r8670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8674, %r8666, %r8671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8677, %r908, %r8668, %r8680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8681, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8682, %r8680, %r8681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8685, %r8677, %r8682;
	// end inline asm
	shr.u32 	%r8690, %r8668, 8;
	// begin inline asm
	lop3.b32 %r8688, %r897, %r8690, %r8669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8692, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8693, %r8669, %r8692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8696, %r8688, %r8693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8699, %r908, %r8690, %r8680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8703, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8704, %r8680, %r8703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8707, %r8699, %r8704;
	// end inline asm
	// begin inline asm
	mov.b32 %r8715, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8726, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8714, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r8712, %r897, %r8714, %r8715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8716, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8717, %r8715, %r8716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8720, %r8712, %r8717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8723, %r908, %r8714, %r8726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8727, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8728, %r8726, %r8727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8731, %r8723, %r8728;
	// end inline asm
	shr.u32 	%r8736, %r8714, 8;
	// begin inline asm
	lop3.b32 %r8734, %r897, %r8736, %r8715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8738, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8739, %r8715, %r8738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8742, %r8734, %r8739;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8745, %r908, %r8736, %r8726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8749, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8750, %r8726, %r8749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8753, %r8745, %r8750;
	// end inline asm
	// begin inline asm
	mov.b32 %r8761, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8772, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8760, %r16392, -2004318072;
	// begin inline asm
	lop3.b32 %r8758, %r897, %r8760, %r8761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8762, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8763, %r8761, %r8762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8766, %r8758, %r8763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8769, %r908, %r8760, %r8772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8773, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8774, %r8772, %r8773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8777, %r8769, %r8774;
	// end inline asm
	shr.u32 	%r8782, %r8760, 8;
	// begin inline asm
	lop3.b32 %r8780, %r897, %r8782, %r8761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8784, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8785, %r8761, %r8784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8788, %r8780, %r8785;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8791, %r908, %r8782, %r8772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8795, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8796, %r8772, %r8795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8799, %r8791, %r8796;
	// end inline asm
	// begin inline asm
	mov.b32 %r8807, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8818, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8806, %r16393, -2004318072;
	// begin inline asm
	lop3.b32 %r8804, %r897, %r8806, %r8807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8808, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8809, %r8807, %r8808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8812, %r8804, %r8809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8815, %r908, %r8806, %r8818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8819, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8820, %r8818, %r8819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8823, %r8815, %r8820;
	// end inline asm
	shr.u32 	%r8828, %r8806, 8;
	// begin inline asm
	lop3.b32 %r8826, %r897, %r8828, %r8807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8830, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8831, %r8807, %r8830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8834, %r8826, %r8831;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8837, %r908, %r8828, %r8818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8841, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8842, %r8818, %r8841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8845, %r8837, %r8842;
	// end inline asm
	// begin inline asm
	mov.b32 %r8853, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8864, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8852, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r8850, %r897, %r8852, %r8853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8854, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8855, %r8853, %r8854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8858, %r8850, %r8855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8861, %r908, %r8852, %r8864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8865, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8866, %r8864, %r8865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8869, %r8861, %r8866;
	// end inline asm
	shr.u32 	%r8874, %r8852, 8;
	// begin inline asm
	lop3.b32 %r8872, %r897, %r8874, %r8853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8876, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8877, %r8853, %r8876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8880, %r8872, %r8877;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8883, %r908, %r8874, %r8864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8887, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8888, %r8864, %r8887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8891, %r8883, %r8888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8894, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8896, %r8894, %r8536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8899, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8901, %r8899, %r8547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8904, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8906, %r8904, %r8558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8909, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8911, %r8909, %r8569;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8914, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8916, %r8914, %r8582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8919, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8921, %r8919, %r8593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8924, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8926, %r8924, %r8604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8929, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8931, %r8929, %r8615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8934, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8936, %r8934, %r8628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8939, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8941, %r8939, %r8639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8944, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8946, %r8944, %r8650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8949, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8951, %r8949, %r8661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8954, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8956, %r8954, %r8674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8959, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8961, %r8959, %r8685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8964, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8966, %r8964, %r8696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8969, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8971, %r8969, %r8707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8974, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8976, %r8974, %r8720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8979, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8981, %r8979, %r8731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8984, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8986, %r8984, %r8742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8989, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8991, %r8989, %r8753;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8994, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8996, %r8994, %r8766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8999, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9001, %r8999, %r8777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9004, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9006, %r9004, %r8788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9009, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9011, %r9009, %r8799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9014, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9016, %r9014, %r8812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9019, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9021, %r9019, %r8823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9024, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9026, %r9024, %r8834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9029, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9031, %r9029, %r8845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9034, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9036, %r9034, %r8858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9039, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9041, %r9039, %r8869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9044, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9046, %r9044, %r8880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9049, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9051, %r9049, %r8891;
	// end inline asm
	// begin inline asm
	mov.b32 %r9059, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9070, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9056, %r897, %r2482, %r9059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9061, %r9059, %r9060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9064, %r9056, %r9061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9067, %r908, %r2482, %r9070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9071, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9072, %r9070, %r9071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9075, %r9067, %r9072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9078, %r897, %r2504, %r9059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9082, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9083, %r9059, %r9082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9086, %r9078, %r9083;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9089, %r908, %r2504, %r9070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9093, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9094, %r9070, %r9093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9097, %r9089, %r9094;
	// end inline asm
	// begin inline asm
	mov.b32 %r9105, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9116, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9102, %r897, %r2528, %r9105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9107, %r9105, %r9106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9110, %r9102, %r9107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9113, %r908, %r2528, %r9116, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9117, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9118, %r9116, %r9117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9121, %r9113, %r9118;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9124, %r897, %r2550, %r9105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9128, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9129, %r9105, %r9128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9132, %r9124, %r9129;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9135, %r908, %r2550, %r9116, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9139, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9140, %r9116, %r9139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9143, %r9135, %r9140;
	// end inline asm
	// begin inline asm
	mov.b32 %r9151, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9162, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9148, %r897, %r2574, %r9151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9152, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9153, %r9151, %r9152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9156, %r9148, %r9153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9159, %r908, %r2574, %r9162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9163, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9164, %r9162, %r9163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9167, %r9159, %r9164;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9170, %r897, %r2596, %r9151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9174, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9175, %r9151, %r9174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9178, %r9170, %r9175;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9181, %r908, %r2596, %r9162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9185, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9186, %r9162, %r9185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9189, %r9181, %r9186;
	// end inline asm
	// begin inline asm
	mov.b32 %r9197, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9208, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9194, %r897, %r2620, %r9197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9198, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9199, %r9197, %r9198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9202, %r9194, %r9199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9205, %r908, %r2620, %r9208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9209, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9210, %r9208, %r9209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9213, %r9205, %r9210;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9216, %r897, %r2642, %r9197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9220, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9221, %r9197, %r9220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9224, %r9216, %r9221;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9227, %r908, %r2642, %r9208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9231, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9232, %r9208, %r9231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9235, %r9227, %r9232;
	// end inline asm
	// begin inline asm
	mov.b32 %r9243, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9254, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9240, %r897, %r2666, %r9243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9245, %r9243, %r9244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9248, %r9240, %r9245;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9251, %r908, %r2666, %r9254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9255, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9256, %r9254, %r9255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9259, %r9251, %r9256;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9262, %r897, %r2688, %r9243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9266, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9267, %r9243, %r9266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9270, %r9262, %r9267;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9273, %r908, %r2688, %r9254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9277, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9278, %r9254, %r9277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9281, %r9273, %r9278;
	// end inline asm
	// begin inline asm
	mov.b32 %r9289, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9300, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9286, %r897, %r2712, %r9289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9291, %r9289, %r9290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9294, %r9286, %r9291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9297, %r908, %r2712, %r9300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9301, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9302, %r9300, %r9301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9305, %r9297, %r9302;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9308, %r897, %r2734, %r9289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9313, %r9289, %r9312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9316, %r9308, %r9313;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9319, %r908, %r2734, %r9300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9323, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9324, %r9300, %r9323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9327, %r9319, %r9324;
	// end inline asm
	// begin inline asm
	mov.b32 %r9335, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9346, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9332, %r897, %r2758, %r9335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9336, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9337, %r9335, %r9336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9340, %r9332, %r9337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9343, %r908, %r2758, %r9346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9347, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9348, %r9346, %r9347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9351, %r9343, %r9348;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9354, %r897, %r2780, %r9335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9358, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9359, %r9335, %r9358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9362, %r9354, %r9359;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9365, %r908, %r2780, %r9346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9369, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9370, %r9346, %r9369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9373, %r9365, %r9370;
	// end inline asm
	// begin inline asm
	mov.b32 %r9381, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9392, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9378, %r897, %r2804, %r9381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9382, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9383, %r9381, %r9382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9386, %r9378, %r9383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9389, %r908, %r2804, %r9392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9393, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9394, %r9392, %r9393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9397, %r9389, %r9394;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9400, %r897, %r2826, %r9381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9404, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9405, %r9381, %r9404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9408, %r9400, %r9405;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9411, %r908, %r2826, %r9392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9415, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9416, %r9392, %r9415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9419, %r9411, %r9416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9422, %r304, %r9064, %r8896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9426, %r304, %r9075, %r8901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9430, %r304, %r9086, %r8906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9434, %r304, %r9097, %r8911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9438, %r304, %r9110, %r8916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9442, %r304, %r9121, %r8921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9446, %r304, %r9132, %r8926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9450, %r304, %r9143, %r8931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9454, %r304, %r9156, %r8936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9458, %r304, %r9167, %r8941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9462, %r304, %r9178, %r8946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9466, %r304, %r9189, %r8951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9470, %r304, %r9202, %r8956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9474, %r304, %r9213, %r8961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9478, %r304, %r9224, %r8966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9482, %r304, %r9235, %r8971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9486, %r322, %r9248, %r8976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9490, %r322, %r9259, %r8981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9494, %r322, %r9270, %r8986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9498, %r322, %r9281, %r8991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9502, %r322, %r9294, %r8996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9506, %r322, %r9305, %r9001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9510, %r322, %r9316, %r9006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9514, %r322, %r9327, %r9011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9518, %r322, %r9340, %r9016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9522, %r322, %r9351, %r9021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9526, %r322, %r9362, %r9026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9530, %r322, %r9373, %r9031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9534, %r322, %r9386, %r9036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9538, %r322, %r9397, %r9041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9542, %r322, %r9408, %r9046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9546, %r322, %r9419, %r9051;
	// end inline asm
	// begin inline asm
	mov.b32 %r9555, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9566, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9552, %r897, %r898, %r9555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9557, %r9555, %r9556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9560, %r9552, %r9557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9563, %r908, %r898, %r9566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9568, %r9566, %r9567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9571, %r9563, %r9568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9574, %r897, %r920, %r9555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9579, %r9555, %r9578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9582, %r9574, %r9579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9585, %r908, %r920, %r9566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9589, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9590, %r9566, %r9589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9593, %r9585, %r9590;
	// end inline asm
	// begin inline asm
	mov.b32 %r9601, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9612, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9598, %r897, %r944, %r9601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9603, %r9601, %r9602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9606, %r9598, %r9603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9609, %r908, %r944, %r9612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9614, %r9612, %r9613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9617, %r9609, %r9614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9620, %r897, %r966, %r9601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9625, %r9601, %r9624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9628, %r9620, %r9625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9631, %r908, %r966, %r9612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9635, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9636, %r9612, %r9635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9639, %r9631, %r9636;
	// end inline asm
	// begin inline asm
	mov.b32 %r9647, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9658, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9644, %r897, %r990, %r9647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9649, %r9647, %r9648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9652, %r9644, %r9649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9655, %r908, %r990, %r9658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9659, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9660, %r9658, %r9659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9663, %r9655, %r9660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9666, %r897, %r1012, %r9647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9670, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9671, %r9647, %r9670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9674, %r9666, %r9671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9677, %r908, %r1012, %r9658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9681, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9682, %r9658, %r9681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9685, %r9677, %r9682;
	// end inline asm
	// begin inline asm
	mov.b32 %r9693, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9704, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9690, %r897, %r1036, %r9693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9694, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9695, %r9693, %r9694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9698, %r9690, %r9695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9701, %r908, %r1036, %r9704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9705, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9706, %r9704, %r9705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9709, %r9701, %r9706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9712, %r897, %r1058, %r9693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9716, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9717, %r9693, %r9716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9720, %r9712, %r9717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9723, %r908, %r1058, %r9704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9727, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9728, %r9704, %r9727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9731, %r9723, %r9728;
	// end inline asm
	// begin inline asm
	mov.b32 %r9739, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9750, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9736, %r897, %r1082, %r9739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9740, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9741, %r9739, %r9740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9744, %r9736, %r9741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9747, %r908, %r1082, %r9750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9751, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9752, %r9750, %r9751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9755, %r9747, %r9752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9758, %r897, %r1104, %r9739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9762, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9763, %r9739, %r9762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9766, %r9758, %r9763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9769, %r908, %r1104, %r9750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9773, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9774, %r9750, %r9773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9777, %r9769, %r9774;
	// end inline asm
	// begin inline asm
	mov.b32 %r9785, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9796, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9782, %r897, %r1128, %r9785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9786, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9787, %r9785, %r9786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9790, %r9782, %r9787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9793, %r908, %r1128, %r9796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9797, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9798, %r9796, %r9797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9801, %r9793, %r9798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9804, %r897, %r1150, %r9785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9808, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9809, %r9785, %r9808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9812, %r9804, %r9809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9815, %r908, %r1150, %r9796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9819, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9820, %r9796, %r9819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9823, %r9815, %r9820;
	// end inline asm
	// begin inline asm
	mov.b32 %r9831, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9842, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9828, %r897, %r1174, %r9831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9832, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9833, %r9831, %r9832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9836, %r9828, %r9833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9839, %r908, %r1174, %r9842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9843, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9844, %r9842, %r9843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9847, %r9839, %r9844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9850, %r897, %r1196, %r9831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9854, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9855, %r9831, %r9854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9858, %r9850, %r9855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9861, %r908, %r1196, %r9842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9865, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9866, %r9842, %r9865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9869, %r9861, %r9866;
	// end inline asm
	// begin inline asm
	mov.b32 %r9877, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9888, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9874, %r897, %r1220, %r9877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9878, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9879, %r9877, %r9878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9882, %r9874, %r9879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9885, %r908, %r1220, %r9888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9889, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9890, %r9888, %r9889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9893, %r9885, %r9890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9896, %r897, %r1242, %r9877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9900, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9901, %r9877, %r9900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9904, %r9896, %r9901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9907, %r908, %r1242, %r9888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9911, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9912, %r9888, %r9911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9915, %r9907, %r9912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9918, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9920, %r9918, %r9560, %r9422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9924, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9926, %r9924, %r9571, %r9426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9930, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9932, %r9930, %r9582, %r9430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9936, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9938, %r9936, %r9593, %r9434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9942, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9944, %r9942, %r9606, %r9438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9948, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9950, %r9948, %r9617, %r9442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9954, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9956, %r9954, %r9628, %r9446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9960, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9962, %r9960, %r9639, %r9450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9966, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9968, %r9966, %r9652, %r9454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9972, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9974, %r9972, %r9663, %r9458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9978, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9980, %r9978, %r9674, %r9462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9984, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9986, %r9984, %r9685, %r9466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9990, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9992, %r9990, %r9698, %r9470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9996, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9998, %r9996, %r9709, %r9474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10002, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10004, %r10002, %r9720, %r9478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10008, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10010, %r10008, %r9731, %r9482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10014, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10016, %r10014, %r9744, %r9486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10020, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10022, %r10020, %r9755, %r9490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10026, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10028, %r10026, %r9766, %r9494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10032, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10034, %r10032, %r9777, %r9498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10038, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10040, %r10038, %r9790, %r9502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10044, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10046, %r10044, %r9801, %r9506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10050, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10052, %r10050, %r9812, %r9510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10056, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10058, %r10056, %r9823, %r9514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10062, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10064, %r10062, %r9836, %r9518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10068, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10070, %r10068, %r9847, %r9522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10074, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10076, %r10074, %r9858, %r9526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10080, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10082, %r10080, %r9869, %r9530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10086, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10088, %r10086, %r9882, %r9534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10092, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10094, %r10092, %r9893, %r9538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10098, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10100, %r10098, %r9904, %r9542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10104, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10106, %r10104, %r9915, %r9546;
	// end inline asm
	// begin inline asm
	mov.b32 %r10115, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10126, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10112, %r897, %r4714, %r10115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10116, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10117, %r10115, %r10116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10120, %r10112, %r10117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10123, %r908, %r4714, %r10126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10128, %r10126, %r10127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10131, %r10123, %r10128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10134, %r897, %r4736, %r10115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10139, %r10115, %r10138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10142, %r10134, %r10139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10145, %r908, %r4736, %r10126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10150, %r10126, %r10149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10153, %r10145, %r10150;
	// end inline asm
	// begin inline asm
	mov.b32 %r10161, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10172, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10158, %r897, %r4760, %r10161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10163, %r10161, %r10162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10166, %r10158, %r10163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10169, %r908, %r4760, %r10172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10174, %r10172, %r10173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10177, %r10169, %r10174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10180, %r897, %r4782, %r10161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10185, %r10161, %r10184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10188, %r10180, %r10185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10191, %r908, %r4782, %r10172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10196, %r10172, %r10195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10199, %r10191, %r10196;
	// end inline asm
	// begin inline asm
	mov.b32 %r10207, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10218, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10204, %r897, %r4806, %r10207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10209, %r10207, %r10208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10212, %r10204, %r10209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10215, %r908, %r4806, %r10218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10219, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10220, %r10218, %r10219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10223, %r10215, %r10220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10226, %r897, %r4828, %r10207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10231, %r10207, %r10230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10234, %r10226, %r10231;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10237, %r908, %r4828, %r10218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10241, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10242, %r10218, %r10241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10245, %r10237, %r10242;
	// end inline asm
	// begin inline asm
	mov.b32 %r10253, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10264, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10250, %r897, %r4852, %r10253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10254, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10255, %r10253, %r10254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10258, %r10250, %r10255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10261, %r908, %r4852, %r10264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10265, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10266, %r10264, %r10265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10269, %r10261, %r10266;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10272, %r897, %r4874, %r10253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10276, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10277, %r10253, %r10276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10280, %r10272, %r10277;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10283, %r908, %r4874, %r10264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10287, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10288, %r10264, %r10287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10291, %r10283, %r10288;
	// end inline asm
	// begin inline asm
	mov.b32 %r10299, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10310, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10296, %r897, %r4898, %r10299, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10300, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10301, %r10299, %r10300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10304, %r10296, %r10301;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10307, %r908, %r4898, %r10310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10311, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10312, %r10310, %r10311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10315, %r10307, %r10312;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10318, %r897, %r4920, %r10299, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10322, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10323, %r10299, %r10322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10326, %r10318, %r10323;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10329, %r908, %r4920, %r10310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10333, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10334, %r10310, %r10333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10337, %r10329, %r10334;
	// end inline asm
	// begin inline asm
	mov.b32 %r10345, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10356, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10342, %r897, %r4944, %r10345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10347, %r10345, %r10346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10350, %r10342, %r10347;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10353, %r908, %r4944, %r10356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10357, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10358, %r10356, %r10357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10361, %r10353, %r10358;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10364, %r897, %r4966, %r10345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10368, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10369, %r10345, %r10368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10372, %r10364, %r10369;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10375, %r908, %r4966, %r10356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10379, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10380, %r10356, %r10379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10383, %r10375, %r10380;
	// end inline asm
	// begin inline asm
	mov.b32 %r10391, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10402, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10388, %r897, %r4990, %r10391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10392, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10393, %r10391, %r10392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10396, %r10388, %r10393;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10399, %r908, %r4990, %r10402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10403, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10404, %r10402, %r10403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10407, %r10399, %r10404;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10410, %r897, %r5012, %r10391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10414, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10415, %r10391, %r10414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10418, %r10410, %r10415;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10421, %r908, %r5012, %r10402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10425, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10426, %r10402, %r10425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10429, %r10421, %r10426;
	// end inline asm
	// begin inline asm
	mov.b32 %r10437, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10448, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10434, %r897, %r5036, %r10437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10438, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10439, %r10437, %r10438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10442, %r10434, %r10439;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10445, %r908, %r5036, %r10448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10449, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10450, %r10448, %r10449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10453, %r10445, %r10450;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10456, %r897, %r5058, %r10437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10460, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10461, %r10437, %r10460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10464, %r10456, %r10461;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10467, %r908, %r5058, %r10448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10472, %r10448, %r10471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10475, %r10467, %r10472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10613, %r376, %r10120, %r9920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10610, %r376, %r10131, %r9926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10622, %r376, %r10142, %r9932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10619, %r376, %r10153, %r9938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10631, %r376, %r10166, %r9944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10628, %r376, %r10177, %r9950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10640, %r376, %r10188, %r9956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10637, %r376, %r10199, %r9962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10649, %r376, %r10212, %r9968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10646, %r376, %r10223, %r9974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10658, %r376, %r10234, %r9980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10655, %r376, %r10245, %r9986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10667, %r376, %r10258, %r9992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10664, %r376, %r10269, %r9998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10676, %r376, %r10280, %r10004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10673, %r376, %r10291, %r10010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10685, %r394, %r10304, %r10016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10682, %r394, %r10315, %r10022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10694, %r394, %r10326, %r10028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10691, %r394, %r10337, %r10034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10703, %r394, %r10350, %r10040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10700, %r394, %r10361, %r10046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10712, %r394, %r10372, %r10052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10709, %r394, %r10383, %r10058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10721, %r394, %r10396, %r10064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10718, %r394, %r10407, %r10070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10730, %r394, %r10418, %r10076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10727, %r394, %r10429, %r10082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10739, %r394, %r10442, %r10088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10736, %r394, %r10453, %r10094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10748, %r394, %r10464, %r10100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10745, %r394, %r10475, %r10106;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10606, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10608, %r10606, %r10610;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10611, %r458, %r10613, %r10608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10615, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10617, %r10615, %r10619;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10620, %r458, %r10622, %r10617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10624, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10626, %r10624, %r10628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10629, %r458, %r10631, %r10626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10633, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10635, %r10633, %r10637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10638, %r458, %r10640, %r10635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10642, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10644, %r10642, %r10646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10647, %r458, %r10649, %r10644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10651, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10653, %r10651, %r10655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10656, %r458, %r10658, %r10653;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10660, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10662, %r10660, %r10664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10665, %r458, %r10667, %r10662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10669, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10671, %r10669, %r10673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10674, %r458, %r10676, %r10671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10678, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10680, %r10678, %r10682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10683, %r461, %r10685, %r10680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10687, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10689, %r10687, %r10691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10692, %r461, %r10694, %r10689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10696, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10698, %r10696, %r10700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10701, %r461, %r10703, %r10698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10705, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10707, %r10705, %r10709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10710, %r461, %r10712, %r10707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10714, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10716, %r10714, %r10718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10719, %r461, %r10721, %r10716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10723, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10725, %r10723, %r10727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10728, %r461, %r10730, %r10725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10732, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10734, %r10732, %r10736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10737, %r461, %r10739, %r10734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10741, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10743, %r10741, %r10745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10746, %r461, %r10748, %r10743;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10750, %r464, %r10613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10753, %r458, %r10610, %r10750;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10757, %r464, %r10622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10760, %r458, %r10619, %r10757;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10764, %r464, %r10631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10767, %r458, %r10628, %r10764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10771, %r464, %r10640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10774, %r458, %r10637, %r10771;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10778, %r464, %r10649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10781, %r458, %r10646, %r10778;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10785, %r464, %r10658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10788, %r458, %r10655, %r10785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10792, %r464, %r10667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10795, %r458, %r10664, %r10792;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10799, %r464, %r10676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10802, %r458, %r10673, %r10799;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10806, %r467, %r10685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10809, %r461, %r10682, %r10806;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10813, %r467, %r10694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10816, %r461, %r10691, %r10813;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10820, %r467, %r10703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10823, %r461, %r10700, %r10820;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10827, %r467, %r10712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10830, %r461, %r10709, %r10827;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10834, %r467, %r10721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10837, %r461, %r10718, %r10834;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10841, %r467, %r10730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10844, %r461, %r10727, %r10841;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10848, %r467, %r10739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10851, %r461, %r10736, %r10848;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10855, %r467, %r10748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10858, %r461, %r10745, %r10855;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11029, %r11026}, {%r513, %r519, %r516, %r522}, {%r10611, %r10753}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11038, %r11035}, {%r513, %r519, %r516, %r522}, {%r10620, %r10760}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11047, %r11044}, {%r513, %r519, %r516, %r522}, {%r10629, %r10767}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11056, %r11053}, {%r513, %r519, %r516, %r522}, {%r10638, %r10774}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11065, %r11062}, {%r513, %r519, %r516, %r522}, {%r10647, %r10781}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11074, %r11071}, {%r513, %r519, %r516, %r522}, {%r10656, %r10788}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11083, %r11080}, {%r513, %r519, %r516, %r522}, {%r10665, %r10795}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11092, %r11089}, {%r513, %r519, %r516, %r522}, {%r10674, %r10802}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11101, %r11098}, {%r513, %r519, %r516, %r522}, {%r10683, %r10809}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11110, %r11107}, {%r513, %r519, %r516, %r522}, {%r10692, %r10816}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11119, %r11116}, {%r513, %r519, %r516, %r522}, {%r10701, %r10823}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11128, %r11125}, {%r513, %r519, %r516, %r522}, {%r10710, %r10830}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11137, %r11134}, {%r513, %r519, %r516, %r522}, {%r10719, %r10837}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11146, %r11143}, {%r513, %r519, %r516, %r522}, {%r10728, %r10844}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11155, %r11152}, {%r513, %r519, %r516, %r522}, {%r10737, %r10851}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11164, %r11161}, {%r513, %r519, %r516, %r522}, {%r10746, %r10858}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11022, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11024, %r11022, %r11026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11027, %r563, %r11029, %r11024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11031, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11033, %r11031, %r11035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11036, %r563, %r11038, %r11033;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11040, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11042, %r11040, %r11044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11045, %r563, %r11047, %r11042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11049, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11051, %r11049, %r11053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11054, %r563, %r11056, %r11051;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11058, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11060, %r11058, %r11062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11063, %r563, %r11065, %r11060;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11067, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11069, %r11067, %r11071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11072, %r563, %r11074, %r11069;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11076, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11078, %r11076, %r11080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11081, %r563, %r11083, %r11078;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11085, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11087, %r11085, %r11089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11090, %r563, %r11092, %r11087;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11094, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11096, %r11094, %r11098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11099, %r563, %r11101, %r11096;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11103, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11105, %r11103, %r11107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11108, %r563, %r11110, %r11105;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11112, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11114, %r11112, %r11116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11117, %r563, %r11119, %r11114;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11121, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11123, %r11121, %r11125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11126, %r563, %r11128, %r11123;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11130, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11132, %r11130, %r11134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11135, %r563, %r11137, %r11132;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11139, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11141, %r11139, %r11143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11144, %r563, %r11146, %r11141;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11148, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11150, %r11148, %r11152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11153, %r563, %r11155, %r11150;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11157, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11159, %r11157, %r11161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11162, %r563, %r11164, %r11159;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11166, %r566, %r11029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11169, %r563, %r11026, %r11166;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11173, %r566, %r11038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11176, %r563, %r11035, %r11173;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11180, %r566, %r11047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11183, %r563, %r11044, %r11180;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11187, %r566, %r11056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11190, %r563, %r11053, %r11187;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11194, %r566, %r11065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11197, %r563, %r11062, %r11194;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11201, %r566, %r11074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11204, %r563, %r11071, %r11201;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11208, %r566, %r11083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11211, %r563, %r11080, %r11208;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11215, %r566, %r11092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11218, %r563, %r11089, %r11215;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11222, %r566, %r11101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11225, %r563, %r11098, %r11222;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11229, %r566, %r11110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11232, %r563, %r11107, %r11229;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11236, %r566, %r11119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11239, %r563, %r11116, %r11236;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11243, %r566, %r11128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11246, %r563, %r11125, %r11243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11250, %r566, %r11137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11253, %r563, %r11134, %r11250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11257, %r566, %r11146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11260, %r563, %r11143, %r11257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11264, %r566, %r11155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11267, %r563, %r11152, %r11264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11271, %r566, %r11164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11274, %r563, %r11161, %r11271;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11567, %r11570}, {%r601, %r607, %r604, %r610}, {%r11027, %r11169}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11573, %r11576}, {%r601, %r607, %r604, %r610}, {%r11036, %r11176}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11579, %r11582}, {%r601, %r607, %r604, %r610}, {%r11045, %r11183}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11585, %r11588}, {%r601, %r607, %r604, %r610}, {%r11054, %r11190}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11591, %r11594}, {%r601, %r607, %r604, %r610}, {%r11063, %r11197}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11597, %r11600}, {%r601, %r607, %r604, %r610}, {%r11072, %r11204}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11603, %r11606}, {%r601, %r607, %r604, %r610}, {%r11081, %r11211}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11609, %r11612}, {%r601, %r607, %r604, %r610}, {%r11090, %r11218}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11568, %r11571}, {%r601, %r607, %r604, %r610}, {%r11099, %r11225}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11574, %r11577}, {%r601, %r607, %r604, %r610}, {%r11108, %r11232}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11580, %r11583}, {%r601, %r607, %r604, %r610}, {%r11117, %r11239}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11586, %r11589}, {%r601, %r607, %r604, %r610}, {%r11126, %r11246}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11592, %r11595}, {%r601, %r607, %r604, %r610}, {%r11135, %r11253}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11598, %r11601}, {%r601, %r607, %r604, %r610}, {%r11144, %r11260}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11604, %r11607}, {%r601, %r607, %r604, %r610}, {%r11153, %r11267}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11610, %r11613}, {%r601, %r607, %r604, %r610}, {%r11162, %r11274}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11566, %r11567, %r11568;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11569, %r11570, %r11571;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11572, %r11573, %r11574;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11575, %r11576, %r11577;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11578, %r11579, %r11580;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11581, %r11582, %r11583;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11584, %r11585, %r11586;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11587, %r11588, %r11589;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11590, %r11591, %r11592;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11593, %r11594, %r11595;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11596, %r11597, %r11598;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11599, %r11600, %r11601;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11602, %r11603, %r11604;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11605, %r11606, %r11607;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11608, %r11609, %r11610;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11611, %r11612, %r11613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11614, %r11567, %r11568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11617, %r11570, %r11571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11620, %r11573, %r11574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11623, %r11576, %r11577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11626, %r11579, %r11580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11629, %r11582, %r11583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11632, %r11585, %r11586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11635, %r11588, %r11589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11638, %r11591, %r11592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11641, %r11594, %r11595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11644, %r11597, %r11598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11647, %r11600, %r11601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11650, %r11603, %r11604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11653, %r11606, %r11607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11656, %r11609, %r11610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11659, %r11612, %r11613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11662, %r180, %r11566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11665, %r180, %r11569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11668, %r180, %r11572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11671, %r180, %r11575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11674, %r180, %r11578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11677, %r180, %r11581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11680, %r180, %r11584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11683, %r180, %r11587;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11686, %r180, %r11590;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11689, %r180, %r11593;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11692, %r180, %r11596;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11695, %r180, %r11599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11698, %r180, %r11602;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11701, %r180, %r11605;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11704, %r180, %r11608;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11707, %r180, %r11611;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11710, %r181, %r11614;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11713, %r181, %r11617;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11716, %r181, %r11620;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11719, %r181, %r11623;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11722, %r181, %r11626;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11725, %r181, %r11629;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11728, %r181, %r11632;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11731, %r181, %r11635;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11734, %r181, %r11638;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11737, %r181, %r11641;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11740, %r181, %r11644;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11743, %r181, %r11647;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11746, %r181, %r11650;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11749, %r181, %r11653;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11752, %r181, %r11656;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11755, %r181, %r11659;
	// end inline asm
	// begin inline asm
	mov.b32 %r11758, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11759, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11760, %r11662, %r11758;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11763, %r11760, %r11759;
	// end inline asm
	// begin inline asm
	mov.b32 %r11766, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11767, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11768, %r11665, %r11766;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11771, %r11768, %r11767;
	// end inline asm
	// begin inline asm
	mov.b32 %r11774, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11775, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11776, %r11668, %r11774;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11779, %r11776, %r11775;
	// end inline asm
	// begin inline asm
	mov.b32 %r11782, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11783, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11784, %r11671, %r11782;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11787, %r11784, %r11783;
	// end inline asm
	// begin inline asm
	mov.b32 %r11790, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11791, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11792, %r11674, %r11790;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11795, %r11792, %r11791;
	// end inline asm
	// begin inline asm
	mov.b32 %r11798, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11799, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11800, %r11677, %r11798;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11803, %r11800, %r11799;
	// end inline asm
	// begin inline asm
	mov.b32 %r11806, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11807, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11808, %r11680, %r11806;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11811, %r11808, %r11807;
	// end inline asm
	// begin inline asm
	mov.b32 %r11814, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11815, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11816, %r11683, %r11814;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11819, %r11816, %r11815;
	// end inline asm
	// begin inline asm
	mov.b32 %r11822, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11823, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11824, %r11686, %r11822;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11827, %r11824, %r11823;
	// end inline asm
	// begin inline asm
	mov.b32 %r11830, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11831, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11832, %r11689, %r11830;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11835, %r11832, %r11831;
	// end inline asm
	// begin inline asm
	mov.b32 %r11838, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11839, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11840, %r11692, %r11838;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11843, %r11840, %r11839;
	// end inline asm
	// begin inline asm
	mov.b32 %r11846, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11847, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11848, %r11695, %r11846;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11851, %r11848, %r11847;
	// end inline asm
	// begin inline asm
	mov.b32 %r11854, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11855, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11856, %r11698, %r11854;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11859, %r11856, %r11855;
	// end inline asm
	// begin inline asm
	mov.b32 %r11862, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11863, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11864, %r11701, %r11862;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11867, %r11864, %r11863;
	// end inline asm
	// begin inline asm
	mov.b32 %r11870, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11871, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11872, %r11704, %r11870;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11875, %r11872, %r11871;
	// end inline asm
	// begin inline asm
	mov.b32 %r11878, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11879, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11880, %r11707, %r11878;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11883, %r11880, %r11879;
	// end inline asm
	// begin inline asm
	mov.b32 %r11886, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11887, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11888, %r11710, %r11886;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11891, %r11888, %r11887;
	// end inline asm
	// begin inline asm
	mov.b32 %r11894, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11895, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11896, %r11713, %r11894;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11899, %r11896, %r11895;
	// end inline asm
	// begin inline asm
	mov.b32 %r11902, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11903, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11904, %r11716, %r11902;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11907, %r11904, %r11903;
	// end inline asm
	// begin inline asm
	mov.b32 %r11910, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11911, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11912, %r11719, %r11910;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11915, %r11912, %r11911;
	// end inline asm
	// begin inline asm
	mov.b32 %r11918, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11919, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11920, %r11722, %r11918;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11923, %r11920, %r11919;
	// end inline asm
	// begin inline asm
	mov.b32 %r11926, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11927, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11928, %r11725, %r11926;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11931, %r11928, %r11927;
	// end inline asm
	// begin inline asm
	mov.b32 %r11934, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11935, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11936, %r11728, %r11934;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11939, %r11936, %r11935;
	// end inline asm
	// begin inline asm
	mov.b32 %r11942, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11943, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11944, %r11731, %r11942;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11947, %r11944, %r11943;
	// end inline asm
	// begin inline asm
	mov.b32 %r11950, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11951, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11952, %r11734, %r11950;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11955, %r11952, %r11951;
	// end inline asm
	// begin inline asm
	mov.b32 %r11958, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11959, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11960, %r11737, %r11958;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11963, %r11960, %r11959;
	// end inline asm
	// begin inline asm
	mov.b32 %r11966, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11967, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11968, %r11740, %r11966;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11971, %r11968, %r11967;
	// end inline asm
	// begin inline asm
	mov.b32 %r11974, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11975, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11976, %r11743, %r11974;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11979, %r11976, %r11975;
	// end inline asm
	// begin inline asm
	mov.b32 %r11982, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11983, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11984, %r11746, %r11982;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11987, %r11984, %r11983;
	// end inline asm
	// begin inline asm
	mov.b32 %r11990, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11991, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11992, %r11749, %r11990;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11995, %r11992, %r11991;
	// end inline asm
	// begin inline asm
	mov.b32 %r11998, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11999, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12000, %r11752, %r11998;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12003, %r12000, %r11999;
	// end inline asm
	// begin inline asm
	mov.b32 %r12006, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r12007, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12008, %r11755, %r12006;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12011, %r12008, %r12007;
	// end inline asm
	// begin inline asm
	mov.b32 %r12017, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12015, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12016, %r12017, %r12015;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12019, %r11763, %r12016;
	// end inline asm
	// begin inline asm
	mov.b32 %r12022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12023, %r12017, %r12022;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12026, %r11771, %r12023;
	// end inline asm
	// begin inline asm
	mov.b32 %r12029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12030, %r12017, %r12029;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12033, %r11779, %r12030;
	// end inline asm
	// begin inline asm
	mov.b32 %r12036, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12037, %r12017, %r12036;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12040, %r11787, %r12037;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12043, %r12019, %r12033, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12047, %r12026, %r12040, %r4414;
	// end inline asm
	shl.b32 	%r12054, %r12047, 4;
	// begin inline asm
	lop3.b32 %r12051, %r4420, %r12043, %r12054, 202;
	// end inline asm
	xor.b32  	%r16242, %r12051, -2004318072;
	// begin inline asm
	mov.b32 %r12058, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12057, %r12058, %r12056;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12060, %r11795, %r12057;
	// end inline asm
	// begin inline asm
	mov.b32 %r12063, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12064, %r12058, %r12063;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12067, %r11803, %r12064;
	// end inline asm
	// begin inline asm
	mov.b32 %r12070, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12071, %r12058, %r12070;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12074, %r11811, %r12071;
	// end inline asm
	// begin inline asm
	mov.b32 %r12077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12078, %r12058, %r12077;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12081, %r11819, %r12078;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12084, %r12060, %r12074, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12088, %r12067, %r12081, %r4414;
	// end inline asm
	shl.b32 	%r12095, %r12088, 4;
	// begin inline asm
	lop3.b32 %r12092, %r4420, %r12084, %r12095, 202;
	// end inline asm
	xor.b32  	%r16243, %r12092, -2004318072;
	// begin inline asm
	mov.b32 %r12099, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12098, %r12099, %r12097;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12101, %r11827, %r12098;
	// end inline asm
	// begin inline asm
	mov.b32 %r12104, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12105, %r12099, %r12104;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12108, %r11835, %r12105;
	// end inline asm
	// begin inline asm
	mov.b32 %r12111, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12112, %r12099, %r12111;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12115, %r11843, %r12112;
	// end inline asm
	// begin inline asm
	mov.b32 %r12118, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12119, %r12099, %r12118;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12122, %r11851, %r12119;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12125, %r12101, %r12115, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12129, %r12108, %r12122, %r4414;
	// end inline asm
	shl.b32 	%r12136, %r12129, 4;
	// begin inline asm
	lop3.b32 %r12133, %r4420, %r12125, %r12136, 202;
	// end inline asm
	xor.b32  	%r16244, %r12133, -2004318072;
	// begin inline asm
	mov.b32 %r12140, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12139, %r12140, %r12138;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12142, %r11859, %r12139;
	// end inline asm
	// begin inline asm
	mov.b32 %r12145, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12146, %r12140, %r12145;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12149, %r11867, %r12146;
	// end inline asm
	// begin inline asm
	mov.b32 %r12152, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12153, %r12140, %r12152;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12156, %r11875, %r12153;
	// end inline asm
	// begin inline asm
	mov.b32 %r12159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12160, %r12140, %r12159;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12163, %r11883, %r12160;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12166, %r12142, %r12156, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12170, %r12149, %r12163, %r4414;
	// end inline asm
	shl.b32 	%r12177, %r12170, 4;
	// begin inline asm
	lop3.b32 %r12174, %r4420, %r12166, %r12177, 202;
	// end inline asm
	xor.b32  	%r16245, %r12174, -2004318072;
	// begin inline asm
	mov.b32 %r12181, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12179, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12180, %r12181, %r12179;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12183, %r11891, %r12180;
	// end inline asm
	// begin inline asm
	mov.b32 %r12186, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12187, %r12181, %r12186;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12190, %r11899, %r12187;
	// end inline asm
	// begin inline asm
	mov.b32 %r12193, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12194, %r12181, %r12193;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12197, %r11907, %r12194;
	// end inline asm
	// begin inline asm
	mov.b32 %r12200, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12201, %r12181, %r12200;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12204, %r11915, %r12201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12207, %r12183, %r12197, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12211, %r12190, %r12204, %r4414;
	// end inline asm
	shl.b32 	%r12218, %r12211, 4;
	// begin inline asm
	lop3.b32 %r12215, %r4420, %r12207, %r12218, 202;
	// end inline asm
	xor.b32  	%r16246, %r12215, -2004318072;
	// begin inline asm
	mov.b32 %r12222, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12220, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12221, %r12222, %r12220;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12224, %r11923, %r12221;
	// end inline asm
	// begin inline asm
	mov.b32 %r12227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12228, %r12222, %r12227;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12231, %r11931, %r12228;
	// end inline asm
	// begin inline asm
	mov.b32 %r12234, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12235, %r12222, %r12234;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12238, %r11939, %r12235;
	// end inline asm
	// begin inline asm
	mov.b32 %r12241, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12242, %r12222, %r12241;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12245, %r11947, %r12242;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12248, %r12224, %r12238, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12252, %r12231, %r12245, %r4414;
	// end inline asm
	shl.b32 	%r12259, %r12252, 4;
	// begin inline asm
	lop3.b32 %r12256, %r4420, %r12248, %r12259, 202;
	// end inline asm
	xor.b32  	%r16247, %r12256, -2004318072;
	// begin inline asm
	mov.b32 %r12263, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12261, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12262, %r12263, %r12261;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12265, %r11955, %r12262;
	// end inline asm
	// begin inline asm
	mov.b32 %r12268, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12269, %r12263, %r12268;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12272, %r11963, %r12269;
	// end inline asm
	// begin inline asm
	mov.b32 %r12275, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12276, %r12263, %r12275;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12279, %r11971, %r12276;
	// end inline asm
	// begin inline asm
	mov.b32 %r12282, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12283, %r12263, %r12282;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12286, %r11979, %r12283;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12289, %r12265, %r12279, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12293, %r12272, %r12286, %r4414;
	// end inline asm
	shl.b32 	%r12300, %r12293, 4;
	// begin inline asm
	lop3.b32 %r12297, %r4420, %r12289, %r12300, 202;
	// end inline asm
	xor.b32  	%r16248, %r12297, -2004318072;
	// begin inline asm
	mov.b32 %r12304, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12302, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12303, %r12304, %r12302;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12306, %r11987, %r12303;
	// end inline asm
	// begin inline asm
	mov.b32 %r12309, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12310, %r12304, %r12309;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12313, %r11995, %r12310;
	// end inline asm
	// begin inline asm
	mov.b32 %r12316, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12317, %r12304, %r12316;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12320, %r12003, %r12317;
	// end inline asm
	// begin inline asm
	mov.b32 %r12323, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12324, %r12304, %r12323;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12327, %r12011, %r12324;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12330, %r12306, %r12320, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12334, %r12313, %r12327, %r4414;
	// end inline asm
	shl.b32 	%r12341, %r12334, 4;
	// begin inline asm
	lop3.b32 %r12338, %r4420, %r12330, %r12341, 202;
	// end inline asm
	xor.b32  	%r16249, %r12338, -2004318072;
	st.shared.u32 	[%rd100], %r16242;
	st.shared.u32 	[%rd102], %r16243;
	st.shared.u32 	[%rd104], %r16244;
	st.shared.u32 	[%rd106], %r16245;
	st.shared.u32 	[%rd108], %r16246;
	st.shared.u32 	[%rd110], %r16247;
	st.shared.u32 	[%rd112], %r16248;
	st.shared.u32 	[%rd114], %r16249;
	ld.shared.u32 	%r16383, [%rd84];
	ld.shared.u32 	%r16384, [%rd86];
	ld.shared.u32 	%r16385, [%rd88];
	ld.shared.u32 	%r16386, [%rd90];
	ld.shared.u32 	%r16395, [%rd92];
	ld.shared.u32 	%r16396, [%rd94];
	ld.shared.u32 	%r16397, [%rd96];
	ld.shared.u32 	%r16398, [%rd98];
	// begin inline asm
	mov.b32 %r12347, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12358, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12346, %r16383, -2004318072;
	// begin inline asm
	lop3.b32 %r12344, %r897, %r12346, %r12347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12348, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12349, %r12347, %r12348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12352, %r12344, %r12349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12355, %r908, %r12346, %r12358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12359, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12360, %r12358, %r12359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12363, %r12355, %r12360;
	// end inline asm
	shr.u32 	%r12368, %r12346, 8;
	// begin inline asm
	lop3.b32 %r12366, %r897, %r12368, %r12347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12370, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12371, %r12347, %r12370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12374, %r12366, %r12371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12377, %r908, %r12368, %r12358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12381, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12382, %r12358, %r12381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12385, %r12377, %r12382;
	// end inline asm
	// begin inline asm
	mov.b32 %r12393, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12404, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12392, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r12390, %r897, %r12392, %r12393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12395, %r12393, %r12394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12398, %r12390, %r12395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12401, %r908, %r12392, %r12404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12405, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12406, %r12404, %r12405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12409, %r12401, %r12406;
	// end inline asm
	shr.u32 	%r12414, %r12392, 8;
	// begin inline asm
	lop3.b32 %r12412, %r897, %r12414, %r12393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12416, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12417, %r12393, %r12416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12420, %r12412, %r12417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12423, %r908, %r12414, %r12404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12427, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12428, %r12404, %r12427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12431, %r12423, %r12428;
	// end inline asm
	// begin inline asm
	mov.b32 %r12439, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12450, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12438, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r12436, %r897, %r12438, %r12439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12440, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12441, %r12439, %r12440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12444, %r12436, %r12441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12447, %r908, %r12438, %r12450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12451, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12452, %r12450, %r12451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12455, %r12447, %r12452;
	// end inline asm
	shr.u32 	%r12460, %r12438, 8;
	// begin inline asm
	lop3.b32 %r12458, %r897, %r12460, %r12439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12462, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12463, %r12439, %r12462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12466, %r12458, %r12463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12469, %r908, %r12460, %r12450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12473, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12474, %r12450, %r12473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12477, %r12469, %r12474;
	// end inline asm
	// begin inline asm
	mov.b32 %r12485, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12496, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12484, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r12482, %r897, %r12484, %r12485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12486, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12487, %r12485, %r12486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12490, %r12482, %r12487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12493, %r908, %r12484, %r12496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12497, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12498, %r12496, %r12497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12501, %r12493, %r12498;
	// end inline asm
	shr.u32 	%r12506, %r12484, 8;
	// begin inline asm
	lop3.b32 %r12504, %r897, %r12506, %r12485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12508, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12509, %r12485, %r12508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12512, %r12504, %r12509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12515, %r908, %r12506, %r12496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12519, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12520, %r12496, %r12519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12523, %r12515, %r12520;
	// end inline asm
	// begin inline asm
	mov.b32 %r12531, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12542, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12530, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r12528, %r897, %r12530, %r12531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12533, %r12531, %r12532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12536, %r12528, %r12533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12539, %r908, %r12530, %r12542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12543, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12544, %r12542, %r12543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12547, %r12539, %r12544;
	// end inline asm
	shr.u32 	%r12552, %r12530, 8;
	// begin inline asm
	lop3.b32 %r12550, %r897, %r12552, %r12531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12554, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12555, %r12531, %r12554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12558, %r12550, %r12555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12561, %r908, %r12552, %r12542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12565, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12566, %r12542, %r12565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12569, %r12561, %r12566;
	// end inline asm
	// begin inline asm
	mov.b32 %r12577, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12588, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12576, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r12574, %r897, %r12576, %r12577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12579, %r12577, %r12578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12582, %r12574, %r12579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12585, %r908, %r12576, %r12588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12589, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12590, %r12588, %r12589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12593, %r12585, %r12590;
	// end inline asm
	shr.u32 	%r12598, %r12576, 8;
	// begin inline asm
	lop3.b32 %r12596, %r897, %r12598, %r12577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12600, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12601, %r12577, %r12600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12604, %r12596, %r12601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12607, %r908, %r12598, %r12588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12611, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12612, %r12588, %r12611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12615, %r12607, %r12612;
	// end inline asm
	// begin inline asm
	mov.b32 %r12623, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12634, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12622, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r12620, %r897, %r12622, %r12623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12625, %r12623, %r12624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12628, %r12620, %r12625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12631, %r908, %r12622, %r12634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12635, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12636, %r12634, %r12635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12639, %r12631, %r12636;
	// end inline asm
	shr.u32 	%r12644, %r12622, 8;
	// begin inline asm
	lop3.b32 %r12642, %r897, %r12644, %r12623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12646, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12647, %r12623, %r12646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12650, %r12642, %r12647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12653, %r908, %r12644, %r12634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12657, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12658, %r12634, %r12657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12661, %r12653, %r12658;
	// end inline asm
	// begin inline asm
	mov.b32 %r12669, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12680, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12668, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r12666, %r897, %r12668, %r12669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12670, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12671, %r12669, %r12670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12674, %r12666, %r12671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12677, %r908, %r12668, %r12680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12681, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12682, %r12680, %r12681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12685, %r12677, %r12682;
	// end inline asm
	shr.u32 	%r12690, %r12668, 8;
	// begin inline asm
	lop3.b32 %r12688, %r897, %r12690, %r12669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12692, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12693, %r12669, %r12692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12696, %r12688, %r12693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12699, %r908, %r12690, %r12680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12703, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12704, %r12680, %r12703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12707, %r12699, %r12704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12710, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12712, %r12710, %r12352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12715, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12717, %r12715, %r12363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12720, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12722, %r12720, %r12374;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12725, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12727, %r12725, %r12385;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12730, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12732, %r12730, %r12398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12735, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12737, %r12735, %r12409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12740, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12742, %r12740, %r12420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12745, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12747, %r12745, %r12431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12750, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12752, %r12750, %r12444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12755, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12757, %r12755, %r12455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12760, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12762, %r12760, %r12466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12765, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12767, %r12765, %r12477;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12770, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12772, %r12770, %r12490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12775, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12777, %r12775, %r12501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12780, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12782, %r12780, %r12512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12785, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12787, %r12785, %r12523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12790, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12792, %r12790, %r12536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12795, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12797, %r12795, %r12547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12800, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12802, %r12800, %r12558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12805, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12807, %r12805, %r12569;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12810, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12812, %r12810, %r12582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12815, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12817, %r12815, %r12593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12820, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12822, %r12820, %r12604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12825, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12827, %r12825, %r12615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12830, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12832, %r12830, %r12628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12835, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12837, %r12835, %r12639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12840, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12842, %r12840, %r12650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12845, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12847, %r12845, %r12661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12850, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12852, %r12850, %r12674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12855, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12857, %r12855, %r12685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12860, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12862, %r12860, %r12696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12865, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12867, %r12865, %r12707;
	// end inline asm
	// begin inline asm
	mov.b32 %r12875, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12886, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12872, %r897, %r898, %r12875, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12876, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12877, %r12875, %r12876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12880, %r12872, %r12877;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12883, %r908, %r898, %r12886, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12887, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12888, %r12886, %r12887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12891, %r12883, %r12888;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12894, %r897, %r920, %r12875, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12898, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12899, %r12875, %r12898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12902, %r12894, %r12899;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12905, %r908, %r920, %r12886, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12909, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12910, %r12886, %r12909;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12913, %r12905, %r12910;
	// end inline asm
	// begin inline asm
	mov.b32 %r12921, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12932, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12918, %r897, %r944, %r12921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12922, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12923, %r12921, %r12922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12926, %r12918, %r12923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12929, %r908, %r944, %r12932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12933, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12934, %r12932, %r12933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12937, %r12929, %r12934;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12940, %r897, %r966, %r12921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12944, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12945, %r12921, %r12944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12948, %r12940, %r12945;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12951, %r908, %r966, %r12932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12955, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12956, %r12932, %r12955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12959, %r12951, %r12956;
	// end inline asm
	// begin inline asm
	mov.b32 %r12967, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12978, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12964, %r897, %r990, %r12967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12968, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12969, %r12967, %r12968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12972, %r12964, %r12969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12975, %r908, %r990, %r12978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12979, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12980, %r12978, %r12979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12983, %r12975, %r12980;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12986, %r897, %r1012, %r12967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12990, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12991, %r12967, %r12990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12994, %r12986, %r12991;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12997, %r908, %r1012, %r12978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13001, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13002, %r12978, %r13001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13005, %r12997, %r13002;
	// end inline asm
	// begin inline asm
	mov.b32 %r13013, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13024, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13010, %r897, %r1036, %r13013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13014, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13015, %r13013, %r13014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13018, %r13010, %r13015;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13021, %r908, %r1036, %r13024, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13025, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13026, %r13024, %r13025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13029, %r13021, %r13026;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13032, %r897, %r1058, %r13013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13036, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13037, %r13013, %r13036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13040, %r13032, %r13037;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13043, %r908, %r1058, %r13024, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13047, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13048, %r13024, %r13047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13051, %r13043, %r13048;
	// end inline asm
	// begin inline asm
	mov.b32 %r13059, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13070, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13056, %r897, %r1082, %r13059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13061, %r13059, %r13060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13064, %r13056, %r13061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13067, %r908, %r1082, %r13070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13071, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13072, %r13070, %r13071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13075, %r13067, %r13072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13078, %r897, %r1104, %r13059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13082, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13083, %r13059, %r13082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13086, %r13078, %r13083;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13089, %r908, %r1104, %r13070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13093, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13094, %r13070, %r13093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13097, %r13089, %r13094;
	// end inline asm
	// begin inline asm
	mov.b32 %r13105, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13116, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13102, %r897, %r1128, %r13105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13107, %r13105, %r13106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13110, %r13102, %r13107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13113, %r908, %r1128, %r13116, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13117, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13118, %r13116, %r13117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13121, %r13113, %r13118;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13124, %r897, %r1150, %r13105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13128, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13129, %r13105, %r13128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13132, %r13124, %r13129;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13135, %r908, %r1150, %r13116, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13139, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13140, %r13116, %r13139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13143, %r13135, %r13140;
	// end inline asm
	// begin inline asm
	mov.b32 %r13151, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13162, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13148, %r897, %r1174, %r13151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13152, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13153, %r13151, %r13152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13156, %r13148, %r13153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13159, %r908, %r1174, %r13162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13163, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13164, %r13162, %r13163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13167, %r13159, %r13164;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13170, %r897, %r1196, %r13151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13174, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13175, %r13151, %r13174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13178, %r13170, %r13175;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13181, %r908, %r1196, %r13162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13185, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13186, %r13162, %r13185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13189, %r13181, %r13186;
	// end inline asm
	// begin inline asm
	mov.b32 %r13197, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13208, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13194, %r897, %r1220, %r13197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13198, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13199, %r13197, %r13198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13202, %r13194, %r13199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13205, %r908, %r1220, %r13208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13209, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13210, %r13208, %r13209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13213, %r13205, %r13210;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13216, %r897, %r1242, %r13197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13220, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13221, %r13197, %r13220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13224, %r13216, %r13221;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13227, %r908, %r1242, %r13208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13231, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13232, %r13208, %r13231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13235, %r13227, %r13232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13238, %r304, %r12880, %r12712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13242, %r304, %r12891, %r12717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13246, %r304, %r12902, %r12722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13250, %r304, %r12913, %r12727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13254, %r304, %r12926, %r12732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13258, %r304, %r12937, %r12737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13262, %r304, %r12948, %r12742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13266, %r304, %r12959, %r12747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13270, %r304, %r12972, %r12752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13274, %r304, %r12983, %r12757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13278, %r304, %r12994, %r12762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13282, %r304, %r13005, %r12767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13286, %r304, %r13018, %r12772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13290, %r304, %r13029, %r12777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13294, %r304, %r13040, %r12782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13298, %r304, %r13051, %r12787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13302, %r322, %r13064, %r12792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13306, %r322, %r13075, %r12797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13310, %r322, %r13086, %r12802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13314, %r322, %r13097, %r12807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13318, %r322, %r13110, %r12812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13322, %r322, %r13121, %r12817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13326, %r322, %r13132, %r12822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13330, %r322, %r13143, %r12827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13334, %r322, %r13156, %r12832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13338, %r322, %r13167, %r12837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13342, %r322, %r13178, %r12842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13346, %r322, %r13189, %r12847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13350, %r322, %r13202, %r12852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13354, %r322, %r13213, %r12857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13358, %r322, %r13224, %r12862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13362, %r322, %r13235, %r12867;
	// end inline asm
	// begin inline asm
	mov.b32 %r13371, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13382, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13368, %r897, %r4714, %r13371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13373, %r13371, %r13372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13376, %r13368, %r13373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13379, %r908, %r4714, %r13382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13384, %r13382, %r13383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13387, %r13379, %r13384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13390, %r897, %r4736, %r13371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13395, %r13371, %r13394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13398, %r13390, %r13395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13401, %r908, %r4736, %r13382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13405, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13406, %r13382, %r13405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13409, %r13401, %r13406;
	// end inline asm
	// begin inline asm
	mov.b32 %r13417, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13428, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13414, %r897, %r4760, %r13417, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13419, %r13417, %r13418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13422, %r13414, %r13419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13425, %r908, %r4760, %r13428, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13429, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13430, %r13428, %r13429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13433, %r13425, %r13430;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13436, %r897, %r4782, %r13417, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13440, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13441, %r13417, %r13440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13444, %r13436, %r13441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13447, %r908, %r4782, %r13428, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13451, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13452, %r13428, %r13451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13455, %r13447, %r13452;
	// end inline asm
	// begin inline asm
	mov.b32 %r13463, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13474, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13460, %r897, %r4806, %r13463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13465, %r13463, %r13464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13468, %r13460, %r13465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13471, %r908, %r4806, %r13474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13476, %r13474, %r13475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13479, %r13471, %r13476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13482, %r897, %r4828, %r13463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13486, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13487, %r13463, %r13486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13490, %r13482, %r13487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13493, %r908, %r4828, %r13474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13497, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13498, %r13474, %r13497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13501, %r13493, %r13498;
	// end inline asm
	// begin inline asm
	mov.b32 %r13509, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13520, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13506, %r897, %r4852, %r13509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13511, %r13509, %r13510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13514, %r13506, %r13511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13517, %r908, %r4852, %r13520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13522, %r13520, %r13521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13525, %r13517, %r13522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13528, %r897, %r4874, %r13509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13533, %r13509, %r13532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13536, %r13528, %r13533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13539, %r908, %r4874, %r13520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13543, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13544, %r13520, %r13543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13547, %r13539, %r13544;
	// end inline asm
	// begin inline asm
	mov.b32 %r13555, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13566, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13552, %r897, %r4898, %r13555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13557, %r13555, %r13556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13560, %r13552, %r13557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13563, %r908, %r4898, %r13566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13568, %r13566, %r13567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13571, %r13563, %r13568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13574, %r897, %r4920, %r13555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13579, %r13555, %r13578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13582, %r13574, %r13579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13585, %r908, %r4920, %r13566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13589, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13590, %r13566, %r13589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13593, %r13585, %r13590;
	// end inline asm
	// begin inline asm
	mov.b32 %r13601, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13612, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13598, %r897, %r4944, %r13601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13603, %r13601, %r13602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13606, %r13598, %r13603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13609, %r908, %r4944, %r13612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13614, %r13612, %r13613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13617, %r13609, %r13614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13620, %r897, %r4966, %r13601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13625, %r13601, %r13624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13628, %r13620, %r13625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13631, %r908, %r4966, %r13612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13635, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13636, %r13612, %r13635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13639, %r13631, %r13636;
	// end inline asm
	// begin inline asm
	mov.b32 %r13647, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13658, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13644, %r897, %r4990, %r13647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13649, %r13647, %r13648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13652, %r13644, %r13649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13655, %r908, %r4990, %r13658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13659, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13660, %r13658, %r13659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13663, %r13655, %r13660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13666, %r897, %r5012, %r13647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13670, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13671, %r13647, %r13670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13674, %r13666, %r13671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13677, %r908, %r5012, %r13658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13681, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13682, %r13658, %r13681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13685, %r13677, %r13682;
	// end inline asm
	// begin inline asm
	mov.b32 %r13693, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13704, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13690, %r897, %r5036, %r13693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13694, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13695, %r13693, %r13694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13698, %r13690, %r13695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13701, %r908, %r5036, %r13704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13705, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13706, %r13704, %r13705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13709, %r13701, %r13706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13712, %r897, %r5058, %r13693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13716, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13717, %r13693, %r13716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13720, %r13712, %r13717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13723, %r908, %r5058, %r13704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13727, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13728, %r13704, %r13727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13731, %r13723, %r13728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13734, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13736, %r13734, %r13376, %r13238;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13740, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13742, %r13740, %r13387, %r13242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13746, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13748, %r13746, %r13398, %r13246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13752, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13754, %r13752, %r13409, %r13250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13758, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13760, %r13758, %r13422, %r13254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13764, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13766, %r13764, %r13433, %r13258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13770, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13772, %r13770, %r13444, %r13262;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13776, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13778, %r13776, %r13455, %r13266;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13782, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13784, %r13782, %r13468, %r13270;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13788, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13790, %r13788, %r13479, %r13274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13794, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13796, %r13794, %r13490, %r13278;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13800, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13802, %r13800, %r13501, %r13282;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13806, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13808, %r13806, %r13514, %r13286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13812, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13814, %r13812, %r13525, %r13290;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13818, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13820, %r13818, %r13536, %r13294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13824, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13826, %r13824, %r13547, %r13298;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13830, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13832, %r13830, %r13560, %r13302;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13836, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13838, %r13836, %r13571, %r13306;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13842, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13844, %r13842, %r13582, %r13310;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13848, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13850, %r13848, %r13593, %r13314;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13854, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13856, %r13854, %r13606, %r13318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13860, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13862, %r13860, %r13617, %r13322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13866, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13868, %r13866, %r13628, %r13326;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13872, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13874, %r13872, %r13639, %r13330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13878, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13880, %r13878, %r13652, %r13334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13884, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13886, %r13884, %r13663, %r13338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13890, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13892, %r13890, %r13674, %r13342;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13896, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13898, %r13896, %r13685, %r13346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13902, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13904, %r13902, %r13698, %r13350;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13908, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13910, %r13908, %r13709, %r13354;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13914, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13916, %r13914, %r13720, %r13358;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13920, %r358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13922, %r13920, %r13731, %r13362;
	// end inline asm
	// begin inline asm
	mov.b32 %r13931, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13942, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13928, %r897, %r8530, %r13931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13932, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13933, %r13931, %r13932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13936, %r13928, %r13933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13939, %r908, %r8530, %r13942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13944, %r13942, %r13943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13947, %r13939, %r13944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13950, %r897, %r8552, %r13931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13955, %r13931, %r13954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13958, %r13950, %r13955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13961, %r908, %r8552, %r13942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13966, %r13942, %r13965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13969, %r13961, %r13966;
	// end inline asm
	// begin inline asm
	mov.b32 %r13977, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13988, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13974, %r897, %r8576, %r13977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13979, %r13977, %r13978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13982, %r13974, %r13979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13985, %r908, %r8576, %r13988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13990, %r13988, %r13989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13993, %r13985, %r13990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13996, %r897, %r8598, %r13977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14001, %r13977, %r14000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14004, %r13996, %r14001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14007, %r908, %r8598, %r13988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14012, %r13988, %r14011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14015, %r14007, %r14012;
	// end inline asm
	// begin inline asm
	mov.b32 %r14023, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14034, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14020, %r897, %r8622, %r14023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14025, %r14023, %r14024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14028, %r14020, %r14025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14031, %r908, %r8622, %r14034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14036, %r14034, %r14035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14039, %r14031, %r14036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14042, %r897, %r8644, %r14023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14047, %r14023, %r14046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14050, %r14042, %r14047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14053, %r908, %r8644, %r14034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14058, %r14034, %r14057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14061, %r14053, %r14058;
	// end inline asm
	// begin inline asm
	mov.b32 %r14069, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14080, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14066, %r897, %r8668, %r14069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14070, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14071, %r14069, %r14070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14074, %r14066, %r14071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14077, %r908, %r8668, %r14080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14082, %r14080, %r14081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14085, %r14077, %r14082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14088, %r897, %r8690, %r14069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14093, %r14069, %r14092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14096, %r14088, %r14093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14099, %r908, %r8690, %r14080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14104, %r14080, %r14103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14107, %r14099, %r14104;
	// end inline asm
	// begin inline asm
	mov.b32 %r14115, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14126, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14112, %r897, %r8714, %r14115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14116, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14117, %r14115, %r14116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14120, %r14112, %r14117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14123, %r908, %r8714, %r14126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14128, %r14126, %r14127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14131, %r14123, %r14128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14134, %r897, %r8736, %r14115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14139, %r14115, %r14138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14142, %r14134, %r14139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14145, %r908, %r8736, %r14126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14150, %r14126, %r14149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14153, %r14145, %r14150;
	// end inline asm
	// begin inline asm
	mov.b32 %r14161, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14172, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14158, %r897, %r8760, %r14161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14163, %r14161, %r14162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14166, %r14158, %r14163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14169, %r908, %r8760, %r14172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14174, %r14172, %r14173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14177, %r14169, %r14174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14180, %r897, %r8782, %r14161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14185, %r14161, %r14184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14188, %r14180, %r14185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14191, %r908, %r8782, %r14172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14196, %r14172, %r14195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14199, %r14191, %r14196;
	// end inline asm
	// begin inline asm
	mov.b32 %r14207, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14218, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14204, %r897, %r8806, %r14207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14209, %r14207, %r14208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14212, %r14204, %r14209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14215, %r908, %r8806, %r14218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14219, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14220, %r14218, %r14219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14223, %r14215, %r14220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14226, %r897, %r8828, %r14207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14231, %r14207, %r14230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14234, %r14226, %r14231;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14237, %r908, %r8828, %r14218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14241, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14242, %r14218, %r14241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14245, %r14237, %r14242;
	// end inline asm
	// begin inline asm
	mov.b32 %r14253, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14264, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14250, %r897, %r8852, %r14253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14254, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14255, %r14253, %r14254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14258, %r14250, %r14255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14261, %r908, %r8852, %r14264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14265, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14266, %r14264, %r14265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14269, %r14261, %r14266;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14272, %r897, %r8874, %r14253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14276, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14277, %r14253, %r14276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14280, %r14272, %r14277;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14283, %r908, %r8874, %r14264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14287, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14288, %r14264, %r14287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14291, %r14283, %r14288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14429, %r376, %r13936, %r13736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14426, %r376, %r13947, %r13742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14438, %r376, %r13958, %r13748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14435, %r376, %r13969, %r13754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14447, %r376, %r13982, %r13760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14444, %r376, %r13993, %r13766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14456, %r376, %r14004, %r13772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14453, %r376, %r14015, %r13778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14465, %r376, %r14028, %r13784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14462, %r376, %r14039, %r13790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14474, %r376, %r14050, %r13796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14471, %r376, %r14061, %r13802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14483, %r376, %r14074, %r13808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14480, %r376, %r14085, %r13814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14492, %r376, %r14096, %r13820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14489, %r376, %r14107, %r13826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14501, %r394, %r14120, %r13832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14498, %r394, %r14131, %r13838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14510, %r394, %r14142, %r13844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14507, %r394, %r14153, %r13850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14519, %r394, %r14166, %r13856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14516, %r394, %r14177, %r13862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14528, %r394, %r14188, %r13868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14525, %r394, %r14199, %r13874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14537, %r394, %r14212, %r13880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14534, %r394, %r14223, %r13886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14546, %r394, %r14234, %r13892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14543, %r394, %r14245, %r13898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14555, %r394, %r14258, %r13904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14552, %r394, %r14269, %r13910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14564, %r394, %r14280, %r13916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14561, %r394, %r14291, %r13922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14422, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14424, %r14422, %r14426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14427, %r458, %r14429, %r14424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14431, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14433, %r14431, %r14435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14436, %r458, %r14438, %r14433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14440, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14442, %r14440, %r14444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14445, %r458, %r14447, %r14442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14449, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14451, %r14449, %r14453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14454, %r458, %r14456, %r14451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14458, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14460, %r14458, %r14462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14463, %r458, %r14465, %r14460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14467, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14469, %r14467, %r14471;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14472, %r458, %r14474, %r14469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14476, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14478, %r14476, %r14480;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14481, %r458, %r14483, %r14478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14485, %r464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14487, %r14485, %r14489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14490, %r458, %r14492, %r14487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14494, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14496, %r14494, %r14498;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14499, %r461, %r14501, %r14496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14503, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14505, %r14503, %r14507;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14508, %r461, %r14510, %r14505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14512, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14514, %r14512, %r14516;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14517, %r461, %r14519, %r14514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14521, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14523, %r14521, %r14525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14526, %r461, %r14528, %r14523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14530, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14532, %r14530, %r14534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14535, %r461, %r14537, %r14532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14539, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14541, %r14539, %r14543;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14544, %r461, %r14546, %r14541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14548, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14550, %r14548, %r14552;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14553, %r461, %r14555, %r14550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14557, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14559, %r14557, %r14561;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14562, %r461, %r14564, %r14559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14566, %r464, %r14429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14569, %r458, %r14426, %r14566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14573, %r464, %r14438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14576, %r458, %r14435, %r14573;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14580, %r464, %r14447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14583, %r458, %r14444, %r14580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14587, %r464, %r14456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14590, %r458, %r14453, %r14587;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14594, %r464, %r14465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14597, %r458, %r14462, %r14594;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14601, %r464, %r14474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14604, %r458, %r14471, %r14601;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14608, %r464, %r14483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14611, %r458, %r14480, %r14608;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14615, %r464, %r14492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14618, %r458, %r14489, %r14615;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14622, %r467, %r14501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14625, %r461, %r14498, %r14622;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14629, %r467, %r14510;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14632, %r461, %r14507, %r14629;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14636, %r467, %r14519;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14639, %r461, %r14516, %r14636;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14643, %r467, %r14528;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14646, %r461, %r14525, %r14643;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14650, %r467, %r14537;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14653, %r461, %r14534, %r14650;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14657, %r467, %r14546;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14660, %r461, %r14543, %r14657;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14664, %r467, %r14555;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14667, %r461, %r14552, %r14664;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14671, %r467, %r14564;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14674, %r461, %r14561, %r14671;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14845, %r14842}, {%r513, %r519, %r516, %r522}, {%r14427, %r14569}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14854, %r14851}, {%r513, %r519, %r516, %r522}, {%r14436, %r14576}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14863, %r14860}, {%r513, %r519, %r516, %r522}, {%r14445, %r14583}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14872, %r14869}, {%r513, %r519, %r516, %r522}, {%r14454, %r14590}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14881, %r14878}, {%r513, %r519, %r516, %r522}, {%r14463, %r14597}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14890, %r14887}, {%r513, %r519, %r516, %r522}, {%r14472, %r14604}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14899, %r14896}, {%r513, %r519, %r516, %r522}, {%r14481, %r14611}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14908, %r14905}, {%r513, %r519, %r516, %r522}, {%r14490, %r14618}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14917, %r14914}, {%r513, %r519, %r516, %r522}, {%r14499, %r14625}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14926, %r14923}, {%r513, %r519, %r516, %r522}, {%r14508, %r14632}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14935, %r14932}, {%r513, %r519, %r516, %r522}, {%r14517, %r14639}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14944, %r14941}, {%r513, %r519, %r516, %r522}, {%r14526, %r14646}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14953, %r14950}, {%r513, %r519, %r516, %r522}, {%r14535, %r14653}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14962, %r14959}, {%r513, %r519, %r516, %r522}, {%r14544, %r14660}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14971, %r14968}, {%r513, %r519, %r516, %r522}, {%r14553, %r14667}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14980, %r14977}, {%r513, %r519, %r516, %r522}, {%r14562, %r14674}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14838, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14840, %r14838, %r14842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14843, %r563, %r14845, %r14840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14847, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14849, %r14847, %r14851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14852, %r563, %r14854, %r14849;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14856, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14858, %r14856, %r14860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14861, %r563, %r14863, %r14858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14865, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14867, %r14865, %r14869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14870, %r563, %r14872, %r14867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14874, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14876, %r14874, %r14878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14879, %r563, %r14881, %r14876;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14883, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14885, %r14883, %r14887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14888, %r563, %r14890, %r14885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14892, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14894, %r14892, %r14896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14897, %r563, %r14899, %r14894;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14901, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14903, %r14901, %r14905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14906, %r563, %r14908, %r14903;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14910, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14912, %r14910, %r14914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14915, %r563, %r14917, %r14912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14919, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14921, %r14919, %r14923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14924, %r563, %r14926, %r14921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14928, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14930, %r14928, %r14932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14933, %r563, %r14935, %r14930;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14937, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14939, %r14937, %r14941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14942, %r563, %r14944, %r14939;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14946, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14948, %r14946, %r14950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14951, %r563, %r14953, %r14948;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14955, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14957, %r14955, %r14959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14960, %r563, %r14962, %r14957;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14964, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14966, %r14964, %r14968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14969, %r563, %r14971, %r14966;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14973, %r566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14975, %r14973, %r14977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14978, %r563, %r14980, %r14975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14982, %r566, %r14845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14985, %r563, %r14842, %r14982;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14989, %r566, %r14854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14992, %r563, %r14851, %r14989;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14996, %r566, %r14863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14999, %r563, %r14860, %r14996;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15003, %r566, %r14872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15006, %r563, %r14869, %r15003;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15010, %r566, %r14881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15013, %r563, %r14878, %r15010;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15017, %r566, %r14890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15020, %r563, %r14887, %r15017;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15024, %r566, %r14899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15027, %r563, %r14896, %r15024;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15031, %r566, %r14908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15034, %r563, %r14905, %r15031;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15038, %r566, %r14917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15041, %r563, %r14914, %r15038;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15045, %r566, %r14926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15048, %r563, %r14923, %r15045;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15052, %r566, %r14935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15055, %r563, %r14932, %r15052;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15059, %r566, %r14944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15062, %r563, %r14941, %r15059;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15066, %r566, %r14953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15069, %r563, %r14950, %r15066;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15073, %r566, %r14962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15076, %r563, %r14959, %r15073;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15080, %r566, %r14971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15083, %r563, %r14968, %r15080;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15087, %r566, %r14980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15090, %r563, %r14977, %r15087;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15383, %r15386}, {%r601, %r607, %r604, %r610}, {%r14843, %r14985}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15389, %r15392}, {%r601, %r607, %r604, %r610}, {%r14852, %r14992}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15395, %r15398}, {%r601, %r607, %r604, %r610}, {%r14861, %r14999}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15401, %r15404}, {%r601, %r607, %r604, %r610}, {%r14870, %r15006}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15407, %r15410}, {%r601, %r607, %r604, %r610}, {%r14879, %r15013}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15413, %r15416}, {%r601, %r607, %r604, %r610}, {%r14888, %r15020}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15419, %r15422}, {%r601, %r607, %r604, %r610}, {%r14897, %r15027}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15425, %r15428}, {%r601, %r607, %r604, %r610}, {%r14906, %r15034}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15384, %r15387}, {%r601, %r607, %r604, %r610}, {%r14915, %r15041}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15390, %r15393}, {%r601, %r607, %r604, %r610}, {%r14924, %r15048}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15396, %r15399}, {%r601, %r607, %r604, %r610}, {%r14933, %r15055}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15402, %r15405}, {%r601, %r607, %r604, %r610}, {%r14942, %r15062}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15408, %r15411}, {%r601, %r607, %r604, %r610}, {%r14951, %r15069}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15414, %r15417}, {%r601, %r607, %r604, %r610}, {%r14960, %r15076}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15420, %r15423}, {%r601, %r607, %r604, %r610}, {%r14969, %r15083}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15426, %r15429}, {%r601, %r607, %r604, %r610}, {%r14978, %r15090}, {%r3238, %r3238};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15382, %r15383, %r15384;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15385, %r15386, %r15387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15388, %r15389, %r15390;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15391, %r15392, %r15393;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15394, %r15395, %r15396;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15397, %r15398, %r15399;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15400, %r15401, %r15402;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15403, %r15404, %r15405;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15406, %r15407, %r15408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15409, %r15410, %r15411;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15412, %r15413, %r15414;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15415, %r15416, %r15417;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15418, %r15419, %r15420;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15421, %r15422, %r15423;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15424, %r15425, %r15426;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15427, %r15428, %r15429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15430, %r15383, %r15384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15433, %r15386, %r15387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15436, %r15389, %r15390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15439, %r15392, %r15393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15442, %r15395, %r15396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15445, %r15398, %r15399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15448, %r15401, %r15402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15451, %r15404, %r15405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15454, %r15407, %r15408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15457, %r15410, %r15411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15460, %r15413, %r15414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15463, %r15416, %r15417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15466, %r15419, %r15420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15469, %r15422, %r15423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15472, %r15425, %r15426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15475, %r15428, %r15429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15478, %r180, %r15382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15481, %r180, %r15385;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15484, %r180, %r15388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15487, %r180, %r15391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15490, %r180, %r15394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15493, %r180, %r15397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15496, %r180, %r15400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15499, %r180, %r15403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15502, %r180, %r15406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15505, %r180, %r15409;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15508, %r180, %r15412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15511, %r180, %r15415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15514, %r180, %r15418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15517, %r180, %r15421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15520, %r180, %r15424;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15523, %r180, %r15427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15526, %r181, %r15430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15529, %r181, %r15433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15532, %r181, %r15436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15535, %r181, %r15439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15538, %r181, %r15442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15541, %r181, %r15445;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15544, %r181, %r15448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15547, %r181, %r15451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15550, %r181, %r15454;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15553, %r181, %r15457;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15556, %r181, %r15460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15559, %r181, %r15463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15562, %r181, %r15466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15565, %r181, %r15469;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15568, %r181, %r15472;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15571, %r181, %r15475;
	// end inline asm
	// begin inline asm
	mov.b32 %r15574, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15575, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15576, %r15478, %r15574;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15579, %r15576, %r15575;
	// end inline asm
	// begin inline asm
	mov.b32 %r15582, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15583, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15584, %r15481, %r15582;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15587, %r15584, %r15583;
	// end inline asm
	// begin inline asm
	mov.b32 %r15590, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15591, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15592, %r15484, %r15590;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15595, %r15592, %r15591;
	// end inline asm
	// begin inline asm
	mov.b32 %r15598, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15599, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15600, %r15487, %r15598;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15603, %r15600, %r15599;
	// end inline asm
	// begin inline asm
	mov.b32 %r15606, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15607, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15608, %r15490, %r15606;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15611, %r15608, %r15607;
	// end inline asm
	// begin inline asm
	mov.b32 %r15614, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15615, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15616, %r15493, %r15614;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15619, %r15616, %r15615;
	// end inline asm
	// begin inline asm
	mov.b32 %r15622, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15623, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15624, %r15496, %r15622;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15627, %r15624, %r15623;
	// end inline asm
	// begin inline asm
	mov.b32 %r15630, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15631, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15632, %r15499, %r15630;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15635, %r15632, %r15631;
	// end inline asm
	// begin inline asm
	mov.b32 %r15638, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15639, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15640, %r15502, %r15638;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15643, %r15640, %r15639;
	// end inline asm
	// begin inline asm
	mov.b32 %r15646, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15647, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15648, %r15505, %r15646;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15651, %r15648, %r15647;
	// end inline asm
	// begin inline asm
	mov.b32 %r15654, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15655, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15656, %r15508, %r15654;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15659, %r15656, %r15655;
	// end inline asm
	// begin inline asm
	mov.b32 %r15662, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15663, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15664, %r15511, %r15662;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15667, %r15664, %r15663;
	// end inline asm
	// begin inline asm
	mov.b32 %r15670, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15671, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15672, %r15514, %r15670;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15675, %r15672, %r15671;
	// end inline asm
	// begin inline asm
	mov.b32 %r15678, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15679, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15680, %r15517, %r15678;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15683, %r15680, %r15679;
	// end inline asm
	// begin inline asm
	mov.b32 %r15686, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15687, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15688, %r15520, %r15686;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15691, %r15688, %r15687;
	// end inline asm
	// begin inline asm
	mov.b32 %r15694, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15695, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15696, %r15523, %r15694;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15699, %r15696, %r15695;
	// end inline asm
	// begin inline asm
	mov.b32 %r15702, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15703, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15704, %r15526, %r15702;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15707, %r15704, %r15703;
	// end inline asm
	// begin inline asm
	mov.b32 %r15710, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15711, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15712, %r15529, %r15710;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15715, %r15712, %r15711;
	// end inline asm
	// begin inline asm
	mov.b32 %r15718, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15719, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15720, %r15532, %r15718;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15723, %r15720, %r15719;
	// end inline asm
	// begin inline asm
	mov.b32 %r15726, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15727, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15728, %r15535, %r15726;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15731, %r15728, %r15727;
	// end inline asm
	// begin inline asm
	mov.b32 %r15734, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15735, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15736, %r15538, %r15734;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15739, %r15736, %r15735;
	// end inline asm
	// begin inline asm
	mov.b32 %r15742, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15743, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15744, %r15541, %r15742;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15747, %r15744, %r15743;
	// end inline asm
	// begin inline asm
	mov.b32 %r15750, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15751, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15752, %r15544, %r15750;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15755, %r15752, %r15751;
	// end inline asm
	// begin inline asm
	mov.b32 %r15758, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15759, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15760, %r15547, %r15758;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15763, %r15760, %r15759;
	// end inline asm
	// begin inline asm
	mov.b32 %r15766, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15767, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15768, %r15550, %r15766;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15771, %r15768, %r15767;
	// end inline asm
	// begin inline asm
	mov.b32 %r15774, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15775, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15776, %r15553, %r15774;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15779, %r15776, %r15775;
	// end inline asm
	// begin inline asm
	mov.b32 %r15782, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15783, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15784, %r15556, %r15782;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15787, %r15784, %r15783;
	// end inline asm
	// begin inline asm
	mov.b32 %r15790, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15791, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15792, %r15559, %r15790;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15795, %r15792, %r15791;
	// end inline asm
	// begin inline asm
	mov.b32 %r15798, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15799, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15800, %r15562, %r15798;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15803, %r15800, %r15799;
	// end inline asm
	// begin inline asm
	mov.b32 %r15806, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15807, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15808, %r15565, %r15806;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15811, %r15808, %r15807;
	// end inline asm
	// begin inline asm
	mov.b32 %r15814, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15815, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15816, %r15568, %r15814;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15819, %r15816, %r15815;
	// end inline asm
	// begin inline asm
	mov.b32 %r15822, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15823, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15824, %r15571, %r15822;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15827, %r15824, %r15823;
	// end inline asm
	// begin inline asm
	mov.b32 %r15833, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15831, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15832, %r15833, %r15831;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15835, %r15579, %r15832;
	// end inline asm
	// begin inline asm
	mov.b32 %r15838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15839, %r15833, %r15838;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15842, %r15587, %r15839;
	// end inline asm
	// begin inline asm
	mov.b32 %r15845, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15846, %r15833, %r15845;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15849, %r15595, %r15846;
	// end inline asm
	// begin inline asm
	mov.b32 %r15852, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15853, %r15833, %r15852;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15856, %r15603, %r15853;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15859, %r15835, %r15849, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15863, %r15842, %r15856, %r4414;
	// end inline asm
	shl.b32 	%r15870, %r15863, 4;
	// begin inline asm
	lop3.b32 %r15867, %r4420, %r15859, %r15870, 202;
	// end inline asm
	xor.b32  	%r16250, %r15867, -2004318072;
	// begin inline asm
	mov.b32 %r15874, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15872, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15873, %r15874, %r15872;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15876, %r15611, %r15873;
	// end inline asm
	// begin inline asm
	mov.b32 %r15879, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15880, %r15874, %r15879;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15883, %r15619, %r15880;
	// end inline asm
	// begin inline asm
	mov.b32 %r15886, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15887, %r15874, %r15886;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15890, %r15627, %r15887;
	// end inline asm
	// begin inline asm
	mov.b32 %r15893, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15894, %r15874, %r15893;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15897, %r15635, %r15894;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15900, %r15876, %r15890, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15904, %r15883, %r15897, %r4414;
	// end inline asm
	shl.b32 	%r15911, %r15904, 4;
	// begin inline asm
	lop3.b32 %r15908, %r4420, %r15900, %r15911, 202;
	// end inline asm
	xor.b32  	%r16251, %r15908, -2004318072;
	// begin inline asm
	mov.b32 %r15915, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15913, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15914, %r15915, %r15913;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15917, %r15643, %r15914;
	// end inline asm
	// begin inline asm
	mov.b32 %r15920, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15921, %r15915, %r15920;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15924, %r15651, %r15921;
	// end inline asm
	// begin inline asm
	mov.b32 %r15927, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15928, %r15915, %r15927;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15931, %r15659, %r15928;
	// end inline asm
	// begin inline asm
	mov.b32 %r15934, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15935, %r15915, %r15934;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15938, %r15667, %r15935;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15941, %r15917, %r15931, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15945, %r15924, %r15938, %r4414;
	// end inline asm
	shl.b32 	%r15952, %r15945, 4;
	// begin inline asm
	lop3.b32 %r15949, %r4420, %r15941, %r15952, 202;
	// end inline asm
	xor.b32  	%r16252, %r15949, -2004318072;
	// begin inline asm
	mov.b32 %r15956, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15955, %r15956, %r15954;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15958, %r15675, %r15955;
	// end inline asm
	// begin inline asm
	mov.b32 %r15961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15962, %r15956, %r15961;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15965, %r15683, %r15962;
	// end inline asm
	// begin inline asm
	mov.b32 %r15968, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15969, %r15956, %r15968;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15972, %r15691, %r15969;
	// end inline asm
	// begin inline asm
	mov.b32 %r15975, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15976, %r15956, %r15975;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15979, %r15699, %r15976;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15982, %r15958, %r15972, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15986, %r15965, %r15979, %r4414;
	// end inline asm
	shl.b32 	%r15993, %r15986, 4;
	// begin inline asm
	lop3.b32 %r15990, %r4420, %r15982, %r15993, 202;
	// end inline asm
	xor.b32  	%r16253, %r15990, -2004318072;
	// begin inline asm
	mov.b32 %r15997, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15995, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15996, %r15997, %r15995;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15999, %r15707, %r15996;
	// end inline asm
	// begin inline asm
	mov.b32 %r16002, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16003, %r15997, %r16002;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16006, %r15715, %r16003;
	// end inline asm
	// begin inline asm
	mov.b32 %r16009, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16010, %r15997, %r16009;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16013, %r15723, %r16010;
	// end inline asm
	// begin inline asm
	mov.b32 %r16016, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16017, %r15997, %r16016;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16020, %r15731, %r16017;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16023, %r15999, %r16013, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16027, %r16006, %r16020, %r4414;
	// end inline asm
	shl.b32 	%r16034, %r16027, 4;
	// begin inline asm
	lop3.b32 %r16031, %r4420, %r16023, %r16034, 202;
	// end inline asm
	xor.b32  	%r16254, %r16031, -2004318072;
	// begin inline asm
	mov.b32 %r16038, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16036, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16037, %r16038, %r16036;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16040, %r15739, %r16037;
	// end inline asm
	// begin inline asm
	mov.b32 %r16043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16044, %r16038, %r16043;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16047, %r15747, %r16044;
	// end inline asm
	// begin inline asm
	mov.b32 %r16050, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16051, %r16038, %r16050;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16054, %r15755, %r16051;
	// end inline asm
	// begin inline asm
	mov.b32 %r16057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16058, %r16038, %r16057;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16061, %r15763, %r16058;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16064, %r16040, %r16054, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16068, %r16047, %r16061, %r4414;
	// end inline asm
	shl.b32 	%r16075, %r16068, 4;
	// begin inline asm
	lop3.b32 %r16072, %r4420, %r16064, %r16075, 202;
	// end inline asm
	xor.b32  	%r16255, %r16072, -2004318072;
	// begin inline asm
	mov.b32 %r16079, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16078, %r16079, %r16077;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16081, %r15771, %r16078;
	// end inline asm
	// begin inline asm
	mov.b32 %r16084, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16085, %r16079, %r16084;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16088, %r15779, %r16085;
	// end inline asm
	// begin inline asm
	mov.b32 %r16091, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16092, %r16079, %r16091;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16095, %r15787, %r16092;
	// end inline asm
	// begin inline asm
	mov.b32 %r16098, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16099, %r16079, %r16098;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16102, %r15795, %r16099;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16105, %r16081, %r16095, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16109, %r16088, %r16102, %r4414;
	// end inline asm
	shl.b32 	%r16116, %r16109, 4;
	// begin inline asm
	lop3.b32 %r16113, %r4420, %r16105, %r16116, 202;
	// end inline asm
	xor.b32  	%r16256, %r16113, -2004318072;
	// begin inline asm
	mov.b32 %r16120, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16118, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16119, %r16120, %r16118;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16122, %r15803, %r16119;
	// end inline asm
	// begin inline asm
	mov.b32 %r16125, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16126, %r16120, %r16125;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16129, %r15811, %r16126;
	// end inline asm
	// begin inline asm
	mov.b32 %r16132, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16133, %r16120, %r16132;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16136, %r15819, %r16133;
	// end inline asm
	// begin inline asm
	mov.b32 %r16139, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16140, %r16120, %r16139;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16143, %r15827, %r16140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16146, %r16122, %r16136, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16150, %r16129, %r16143, %r4414;
	// end inline asm
	shl.b32 	%r16157, %r16150, 4;
	// begin inline asm
	lop3.b32 %r16154, %r4420, %r16146, %r16157, 202;
	// end inline asm
	xor.b32  	%r16257, %r16154, -2004318072;
	st.shared.u32 	[%rd100], %r16250;
	st.shared.u32 	[%rd102], %r16251;
	st.shared.u32 	[%rd104], %r16252;
	st.shared.u32 	[%rd106], %r16253;
	st.shared.u32 	[%rd108], %r16254;
	st.shared.u32 	[%rd110], %r16255;
	st.shared.u32 	[%rd112], %r16256;
	st.shared.u32 	[%rd114], %r16257;
	add.s32 	%r16400, %r16400, 128;
	setp.eq.s32 	%p330, %r16400, 256;
	@%p330 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;
$L__BB0_184:                            // %guard_exit29771
                                        //   in Loop: Header=BB0_181 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16263, [%rd5];
	ld.shared.u32 	%r16264, [%rd6+128];
	ld.shared.u32 	%r16271, [%rd6+4];
	ld.shared.u32 	%r16272, [%rd6+132];
	ld.shared.u32 	%r16279, [%rd7];
	ld.shared.u32 	%r16280, [%rd8+128];
	ld.shared.u32 	%r16287, [%rd8+4];
	ld.shared.u32 	%r16288, [%rd8+132];
	ld.shared.u32 	%r16295, [%rd5+16644];
	ld.shared.u32 	%r16296, [%rd6+16772];
	ld.shared.u32 	%r16303, [%rd6+16648];
	ld.shared.u32 	%r16304, [%rd6+16776];
	ld.shared.u32 	%r16311, [%rd7+16644];
	ld.shared.u32 	%r16312, [%rd8+16772];
	ld.shared.u32 	%r16319, [%rd8+16648];
	ld.shared.u32 	%r16320, [%rd8+16776];
	// begin inline asm
	prmt.b32 %r16258, %r16263, %r16264, %r810;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16262, %r16263, %r16264, %r814;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16266, %r16271, %r16272, %r810;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16270, %r16271, %r16272, %r814;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16274, %r16279, %r16280, %r810;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16278, %r16279, %r16280, %r814;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16282, %r16287, %r16288, %r810;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16286, %r16287, %r16288, %r814;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16290, %r16295, %r16296, %r810;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16294, %r16295, %r16296, %r814;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16298, %r16303, %r16304, %r810;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16302, %r16303, %r16304, %r814;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16306, %r16311, %r16312, %r810;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16310, %r16311, %r16312, %r814;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16314, %r16319, %r16320, %r810;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16318, %r16319, %r16320, %r814;
	// end inline asm
	selp.b32 	%r16322, %r16262, %r16258, %p316;
	shfl.sync.bfly.b32	%r250, %r16322, 8, 31, -1;
	selp.b32 	%r16323, %r16270, %r16266, %p316;
	shfl.sync.bfly.b32	%r251, %r16323, 8, 31, -1;
	selp.b32 	%r16324, %r16278, %r16274, %p316;
	shfl.sync.bfly.b32	%r252, %r16324, 8, 31, -1;
	selp.b32 	%r16325, %r16286, %r16282, %p316;
	shfl.sync.bfly.b32	%r253, %r16325, 8, 31, -1;
	selp.b32 	%r16326, %r16294, %r16290, %p316;
	shfl.sync.bfly.b32	%r16327, %r16326, 8, 31, -1;
	selp.b32 	%r16328, %r16302, %r16298, %p316;
	shfl.sync.bfly.b32	%r16329, %r16328, 8, 31, -1;
	selp.b32 	%r16330, %r16310, %r16306, %p316;
	shfl.sync.bfly.b32	%r16331, %r16330, 8, 31, -1;
	selp.b32 	%r16332, %r16318, %r16314, %p316;
	shfl.sync.bfly.b32	%r16333, %r16332, 8, 31, -1;
	and.b32  	%r262, %r16399, 768;
	setp.lt.u32 	%p332, %r262, 384;
	shl.b32 	%r16354, %r16399, 13;
	@%p332 bra 	$L__BB0_186;
// %bb.185:                             // %pass28475
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r16334, %r253, %r16286, %p316;
	selp.b32 	%r16335, %r16282, %r253, %p316;
	selp.b32 	%r16336, %r252, %r16278, %p316;
	selp.b32 	%r16337, %r16274, %r252, %p316;
	selp.b32 	%r16338, %r251, %r16270, %p316;
	selp.b32 	%r16339, %r16266, %r251, %p316;
	selp.b32 	%r16340, %r250, %r16262, %p316;
	selp.b32 	%r16341, %r16258, %r250, %p316;
	or.b32  	%r16343, %r16354, %r133;
	or.b32  	%r16344, %r16343, %r120;
	cvt.s64.s32 	%rd115, %r16344;
	add.s64 	%rd116, %rd115, %rd9;
	shr.u64 	%rd117, %rd116, 35;
	add.s64 	%rd118, %rd116, %rd117;
	shr.s64 	%rd119, %rd118, 29;
	setp.lt.s64 	%p334, %rd116, 0;
	and.b64  	%rd120, %rd118, -536870912;
	setp.ne.s64 	%p335, %rd120, %rd116;
	and.pred  	%p336, %p334, %p335;
	selp.u64 	%rd121, 1, 0, %p336;
	sub.s64 	%rd122, %rd121, %rd119;
	shl.b64 	%rd123, %rd122, 29;
	add.s64 	%rd124, %rd123, %rd116;
	shl.b64 	%rd125, %rd124, 2;
	add.s64 	%rd126, %rd3, %rd125;
	st.global.v4.u32 	[%rd126], {%r16341, %r16339, %r16340, %r16338};
	add.s32 	%r16345, %r134, %r16354;
	cvt.s64.s32 	%rd127, %r16345;
	add.s64 	%rd128, %rd127, %rd9;
	shr.u64 	%rd129, %rd128, 35;
	add.s64 	%rd130, %rd128, %rd129;
	shr.u64 	%rd131, %rd130, 29;
	shr.u64 	%rd132, %rd128, 63;
	sub.s64 	%rd133, %rd132, %rd131;
	shl.b64 	%rd134, %rd133, 29;
	add.s64 	%rd135, %rd134, %rd128;
	shl.b64 	%rd136, %rd135, 2;
	add.s64 	%rd137, %rd3, %rd136;
	st.global.v4.u32 	[%rd137], {%r16337, %r16335, %r16336, %r16334};
$L__BB0_186:                            // %pass28597
                                        //   in Loop: Header=BB0_181 Depth=1
	or.b32  	%r16346, %r262, 128;
	setp.lt.u32 	%p337, %r16346, 384;
	@%p337 bra 	$L__BB0_187;
// %bb.189:                             // %pass28691
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r254, %r16290, %r16327, %p316;
	selp.b32 	%r255, %r16327, %r16294, %p316;
	selp.b32 	%r256, %r16298, %r16329, %p316;
	selp.b32 	%r257, %r16329, %r16302, %p316;
	selp.b32 	%r258, %r16306, %r16331, %p316;
	selp.b32 	%r259, %r16331, %r16310, %p316;
	selp.b32 	%r260, %r16314, %r16333, %p316;
	selp.b32 	%r261, %r16333, %r16318, %p316;
	or.b32  	%r16348, %r16354, 1048576;
	or.b32  	%r16349, %r16348, %r133;
	or.b32  	%r16350, %r16349, %r120;
	cvt.s64.s32 	%rd138, %r16350;
	add.s64 	%rd139, %rd138, %rd9;
	shr.u64 	%rd140, %rd139, 35;
	add.s64 	%rd141, %rd139, %rd140;
	shr.s64 	%rd142, %rd141, 29;
	setp.lt.s64 	%p338, %rd139, 0;
	and.b64  	%rd143, %rd141, -536870912;
	setp.ne.s64 	%p339, %rd143, %rd139;
	and.pred  	%p340, %p338, %p339;
	selp.u64 	%rd144, 1, 0, %p340;
	sub.s64 	%rd145, %rd144, %rd142;
	shl.b64 	%rd146, %rd145, 29;
	add.s64 	%rd147, %rd146, %rd139;
	shl.b64 	%rd148, %rd147, 2;
	add.s64 	%rd149, %rd3, %rd148;
	st.global.v4.u32 	[%rd149], {%r254, %r256, %r255, %r257};
	add.s32 	%r16351, %r134, %r16348;
	cvt.s64.s32 	%rd150, %r16351;
	add.s64 	%rd151, %rd150, %rd9;
	shr.u64 	%rd152, %rd151, 35;
	add.s64 	%rd153, %rd151, %rd152;
	shr.u64 	%rd154, %rd153, 29;
	shr.u64 	%rd155, %rd151, 63;
	sub.s64 	%rd156, %rd155, %rd154;
	shl.b64 	%rd157, %rd156, 29;
	add.s64 	%rd158, %rd157, %rd151;
	shl.b64 	%rd159, %rd158, 2;
	add.s64 	%rd160, %rd3, %rd159;
	st.global.v4.u32 	[%rd160], {%r258, %r260, %r259, %r261};
	bra.uni 	$L__BB0_187;
$L__BB0_188:                            // %L70659
	mov.u32 	%r16352, 0;
	st.global.u32 	[%rd4], %r16352;
	ret;
$L__BB0_7:                              // %L157
	mov.u32 	%r16353, 2;
	st.global.u32 	[%rd4], %r16353;
	mov.u64 	%rd161, exception5807;
	cvta.global.u64 	%rd162, %rd161;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd162;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd24;
	st.param.b32 	[param0+8], %r263;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd29, exception15832;
	cvta.global.u64 	%rd30, %rd29;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd24;
	st.param.b32 	[param0+8], %r263;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
