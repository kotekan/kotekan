// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5788[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception15812[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<339>;
	.reg .b16 	%rs<2389>;
	.reg .f32 	%f<1392>;
	.reg .b32 	%r<16407>;
	.reg .b64 	%rd<174>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r250, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd46, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r251, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r251, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L11
	ld.param.u64 	%rd63, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd47, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r252, %r2, 9;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r253, %r252, %r1;
	or.b32  	%r254, %r253, %r4;
	mul.wide.u32 	%rd69, %r254, 4;
	add.s64 	%rd4, %rd63, %rd69;
	mov.u32 	%r255, 1;
	st.global.u32 	[%rd4], %r255;
	ld.global.u32 	%r5, [%rd47];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L231
	ld.param.u64 	%rd51, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd51];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 16384;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L241
	ld.param.u64 	%rd55, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd55];
	sub.s32 	%r256, %r6, %r5;
	and.b32  	%r257, %r256, 255;
	setp.ne.s32 	%p6, %r257, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L247
	ld.param.u64 	%rd59, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd59];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 128;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L257
	sub.s32 	%r258, %r8, %r7;
	and.b32  	%r259, %r258, 1;
	setp.eq.b32 	%p12, %r259, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %pass81
	bfe.u32 	%r221, %r1, 1, 1;
	and.b32  	%r222, %r1, 1;
	bfe.u32 	%r223, %r1, 2, 1;
	shr.u32 	%r224, %r1, 4;
	shl.b32 	%r266, %r224, 2;
	shl.b32 	%r267, %r223, 3;
	shl.b32 	%r268, %r222, 4;
	shl.b32 	%r269, %r221, 5;
	or.b32  	%r270, %r268, %r269;
	or.b32  	%r271, %r267, %r270;
	or.b32  	%r272, %r266, %r271;
	bfe.u32 	%r226, %r1, 3, 1;
	shl.b32 	%r273, %r226, 1;
	or.b32  	%r227, %r273, %r272;
	or.b32  	%r228, %r227, 64;
	mov.f32 	%f257, 0f40000000;
	mov.f32 	%f258, 0f43FF8000;
	div.approx.f32 	%f253, %f258, %f257;
	cvt.rn.f32.s32 	%f259, %r227;
	sub.f32 	%f260, %f259, %f253;
	mov.f32 	%f289, 0f43000000;
	div.approx.f32 	%f255, %f260, %f289;
	setp.ne.f32 	%p20, %f255, 0f00000000;
	mov.f32 	%f1351, 0f3F800000;
	mov.f32 	%f1336, %f1351;
	@%p20 bra 	LBB0_9;
	bra.uni 	LBB0_10;
LBB0_9:                                 // %L823
	sin.approx.f32 	%f290, %f255;
	div.approx.f32 	%f1336, %f290, %f255;
LBB0_10:                                // %L826
	cvt.rn.f32.s32 	%f293, %r228;
	sub.f32 	%f294, %f293, %f253;
	div.approx.f32 	%f5, %f294, %f289;
	setp.eq.f32 	%p26, %f5, 0f00000000;
	mov.f32 	%f1337, %f1351;
	@%p26 bra 	LBB0_12;
// %bb.11:                              // %L843
	sin.approx.f32 	%f324, %f5;
	div.approx.f32 	%f1337, %f324, %f5;
LBB0_12:                                // %L846
	or.b32  	%r291, %r227, 1;
	or.b32  	%r10, %r227, 65;
	cvt.rn.f32.s32 	%f328, %r291;
	sub.f32 	%f329, %f328, %f253;
	div.approx.f32 	%f9, %f329, %f289;
	setp.eq.f32 	%p32, %f9, 0f00000000;
	mov.f32 	%f1338, %f1351;
	@%p32 bra 	LBB0_14;
// %bb.13:                              // %L932
	sin.approx.f32 	%f359, %f9;
	div.approx.f32 	%f1338, %f359, %f9;
LBB0_14:                                // %L935
	cvt.rn.f32.s32 	%f362, %r10;
	sub.f32 	%f363, %f362, %f253;
	div.approx.f32 	%f14, %f363, %f289;
	setp.eq.f32 	%p38, %f14, 0f00000000;
	mov.f32 	%f1339, %f1351;
	@%p38 bra 	LBB0_16;
// %bb.15:                              // %L952
	sin.approx.f32 	%f393, %f14;
	div.approx.f32 	%f1339, %f393, %f14;
LBB0_16:                                // %L955
	or.b32  	%r309, %r227, 128;
	or.b32  	%r12, %r227, 192;
	cvt.rn.f32.s32 	%f397, %r309;
	sub.f32 	%f398, %f397, %f253;
	div.approx.f32 	%f18, %f398, %f289;
	setp.eq.f32 	%p44, %f18, 0f00000000;
	mov.f32 	%f1340, %f1351;
	@%p44 bra 	LBB0_18;
// %bb.17:                              // %L1041
	sin.approx.f32 	%f428, %f18;
	div.approx.f32 	%f1340, %f428, %f18;
LBB0_18:                                // %L1044
	cvt.rn.f32.s32 	%f431, %r12;
	sub.f32 	%f432, %f431, %f253;
	div.approx.f32 	%f23, %f432, %f289;
	setp.eq.f32 	%p50, %f23, 0f00000000;
	mov.f32 	%f1341, %f1351;
	@%p50 bra 	LBB0_20;
// %bb.19:                              // %L1061
	sin.approx.f32 	%f462, %f23;
	div.approx.f32 	%f1341, %f462, %f23;
LBB0_20:                                // %L1064
	or.b32  	%r327, %r227, 129;
	or.b32  	%r14, %r227, 193;
	cvt.rn.f32.s32 	%f466, %r327;
	sub.f32 	%f467, %f466, %f253;
	div.approx.f32 	%f27, %f467, %f289;
	setp.eq.f32 	%p56, %f27, 0f00000000;
	mov.f32 	%f1342, %f1351;
	@%p56 bra 	LBB0_22;
// %bb.21:                              // %L1150
	sin.approx.f32 	%f497, %f27;
	div.approx.f32 	%f1342, %f497, %f27;
LBB0_22:                                // %L1153
	cvt.rn.f32.s32 	%f500, %r14;
	sub.f32 	%f501, %f500, %f253;
	div.approx.f32 	%f32, %f501, %f289;
	setp.eq.f32 	%p62, %f32, 0f00000000;
	mov.f32 	%f1343, %f1351;
	@%p62 bra 	LBB0_24;
// %bb.23:                              // %L1170
	sin.approx.f32 	%f531, %f32;
	div.approx.f32 	%f1343, %f531, %f32;
LBB0_24:                                // %L1173
	or.b32  	%r345, %r227, 256;
	or.b32  	%r16, %r227, 320;
	cvt.rn.f32.s32 	%f535, %r345;
	sub.f32 	%f536, %f535, %f253;
	div.approx.f32 	%f36, %f536, %f289;
	setp.eq.f32 	%p68, %f36, 0f00000000;
	mov.f32 	%f1344, %f1351;
	@%p68 bra 	LBB0_26;
// %bb.25:                              // %L1259
	sin.approx.f32 	%f566, %f36;
	div.approx.f32 	%f1344, %f566, %f36;
LBB0_26:                                // %L1262
	cvt.rn.f32.s32 	%f569, %r16;
	sub.f32 	%f570, %f569, %f253;
	div.approx.f32 	%f41, %f570, %f289;
	setp.eq.f32 	%p74, %f41, 0f00000000;
	mov.f32 	%f1345, %f1351;
	@%p74 bra 	LBB0_28;
// %bb.27:                              // %L1279
	sin.approx.f32 	%f600, %f41;
	div.approx.f32 	%f1345, %f600, %f41;
LBB0_28:                                // %L1282
	or.b32  	%r363, %r227, 257;
	or.b32  	%r18, %r227, 321;
	cvt.rn.f32.s32 	%f604, %r363;
	sub.f32 	%f605, %f604, %f253;
	div.approx.f32 	%f45, %f605, %f289;
	setp.eq.f32 	%p80, %f45, 0f00000000;
	mov.f32 	%f1346, %f1351;
	@%p80 bra 	LBB0_30;
// %bb.29:                              // %L1368
	sin.approx.f32 	%f635, %f45;
	div.approx.f32 	%f1346, %f635, %f45;
LBB0_30:                                // %L1371
	cvt.rn.f32.s32 	%f638, %r18;
	sub.f32 	%f639, %f638, %f253;
	div.approx.f32 	%f50, %f639, %f289;
	setp.eq.f32 	%p86, %f50, 0f00000000;
	mov.f32 	%f1347, %f1351;
	@%p86 bra 	LBB0_32;
// %bb.31:                              // %L1388
	sin.approx.f32 	%f669, %f50;
	div.approx.f32 	%f1347, %f669, %f50;
LBB0_32:                                // %L1391
	or.b32  	%r381, %r227, 384;
	or.b32  	%r20, %r227, 448;
	cvt.rn.f32.s32 	%f673, %r381;
	sub.f32 	%f674, %f673, %f253;
	div.approx.f32 	%f54, %f674, %f289;
	setp.eq.f32 	%p92, %f54, 0f00000000;
	mov.f32 	%f1348, %f1351;
	@%p92 bra 	LBB0_34;
// %bb.33:                              // %L1477
	sin.approx.f32 	%f704, %f54;
	div.approx.f32 	%f1348, %f704, %f54;
LBB0_34:                                // %L1480
	cvt.rn.f32.s32 	%f707, %r20;
	sub.f32 	%f708, %f707, %f253;
	div.approx.f32 	%f59, %f708, %f289;
	setp.eq.f32 	%p98, %f59, 0f00000000;
	mov.f32 	%f1349, %f1351;
	@%p98 bra 	LBB0_36;
// %bb.35:                              // %L1497
	sin.approx.f32 	%f738, %f59;
	div.approx.f32 	%f1349, %f738, %f59;
LBB0_36:                                // %L1500
	or.b32  	%r399, %r227, 385;
	or.b32  	%r22, %r227, 449;
	cvt.rn.f32.s32 	%f742, %r399;
	sub.f32 	%f743, %f742, %f253;
	div.approx.f32 	%f63, %f743, %f289;
	setp.eq.f32 	%p104, %f63, 0f00000000;
	mov.f32 	%f1350, %f1351;
	@%p104 bra 	LBB0_38;
// %bb.37:                              // %L1586
	sin.approx.f32 	%f773, %f63;
	div.approx.f32 	%f1350, %f773, %f63;
LBB0_38:                                // %L1589
	cvt.rn.f32.s32 	%f776, %r22;
	sub.f32 	%f777, %f776, %f253;
	div.approx.f32 	%f68, %f777, %f289;
	setp.eq.f32 	%p110, %f68, 0f00000000;
	@%p110 bra 	LBB0_40;
// %bb.39:                              // %L1606
	sin.approx.f32 	%f807, %f68;
	div.approx.f32 	%f1351, %f807, %f68;
LBB0_40:                                // %L1609
	mul.lo.s32 	%r24, %r227, 127;
	cvt.rn.f32.s32 	%f810, %r24;
	div.approx.f32 	%f71, %f810, %f289;
	abs.f32 	%f1354, %f71;
	setp.lt.f32 	%p111, %f1354, 0f40000000;
	@%p111 bra 	LBB0_52;
// %bb.41:
	setp.gtu.f32 	%p112, %f1354, 0f4B800000;
	@%p112 bra 	LBB0_48;
	bra.uni 	LBB0_42;
LBB0_48:
	mov.b32 	%r26, %f1354;
	and.b32  	%r417, %r26, 8388607;
	or.b32  	%r16337, %r417, 1065353216;
	mov.b32 	%f1353, %r16337;
	add.s32 	%r418, %r26, -1073741824;
	and.b32  	%r16338, %r418, -8388608;
	setp.eq.s32 	%p118, %r16338, 0;
	@%p118 bra 	LBB0_51;
// %bb.49:                              // %.lr.ph4107.preheader
	mov.f32 	%f821, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f820,%f821;
	// end inline asm
LBB0_50:                                // %.lr.ph4107
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r419, %r16338, 192937984;
	add.s32 	%r420, %r419, %r16337;
	mov.b32 	%f822, %r420;
	mul.f32 	%f823, %f820, %f822;
	sub.f32 	%f824, %f822, %f823;
	fma.rn.f32 	%f825, %f824, %f820, %f823;
	sub.f32 	%f826, %f822, %f825;
	fma.rz.f32 	%f827, %f826, %f820, %f825;
	cvt.rzi.f32.f32 	%f828, %f827;
	sub.f32 	%f1353, %f822, %f828;
	sub.s32 	%r16338, %r16338, %r419;
	mov.b32 	%r16337, %f1353;
	setp.ne.s32 	%p119, %r16338, 0;
	setp.ne.s32 	%p120, %r16337, 0;
	and.pred  	%p121, %p119, %p120;
	@%p121 bra 	LBB0_50;
LBB0_51:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p122, %r26, 2139095039;
	selp.f32 	%f829, 0f7FFFFFFF, 0f4B800000, %p122;
	mul.f32 	%f830, %f1353, 0f34000000;
	mul.f32 	%f1354, %f829, %f830;
	bra.uni 	LBB0_52;
LBB0_42:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f813, %f1354, %f257;
	cvt.rzi.f32.f32 	%f73, %f813;
	fma.rn.f32 	%f74, %f73, 0fC0000000, %f1354;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p113, %r25, 1073741824;
	mov.f32 	%f1352, %f73;
	@%p113 bra 	LBB0_47;
// %bb.43:
	setp.lt.u32 	%p114, %r25, -2147483647;
	@%p114 bra 	LBB0_45;
// %bb.44:
	add.f32 	%f818, %f73, 0fBF800000;
	setp.lt.f32 	%p117, %f74, 0fC0000000;
	selp.f32 	%f819, %f818, %f73, %p117;
	add.f32 	%f1352, %f819, 0fBF800000;
	bra.uni 	LBB0_47;
LBB0_45:
	add.f32 	%f1352, %f73, 0f3F800000;
	setp.ltu.f32 	%p115, %f74, 0f40800000;
	@%p115 bra 	LBB0_47;
// %bb.46:                              // %__nv_fmaf_rn.exit.i.i.i
	fma.rn.f32 	%f815, %f257, 0fC0400000, %f74;
	setp.ge.f32 	%p116, %f815, 0f00000000;
	selp.f32 	%f816, %f1352, %f73, %p116;
	add.f32 	%f817, %f816, 0f3F800000;
	add.f32 	%f1352, %f817, 0f3F800000;
LBB0_47:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1354, %f1352, 0fC0000000, %f1354;
LBB0_52:                                // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f831, %f1354;
	setp.gtu.f32 	%p123, %f831, 0f7F800000;
	@%p123 bra 	LBB0_54;
// %bb.53:
	mov.b32 	%r421, %f71;
	and.b32  	%r422, %r421, -2147483648;
	mov.b32 	%r423, %f1354;
	or.b32  	%r424, %r422, %r423;
	mov.b32 	%f1354, %r424;
LBB0_54:                                // %__nv_fmodf.exit
	add.s32 	%r433, %r24, 8128;
	cvt.rn.f32.s32 	%f862, %r433;
	div.approx.f32 	%f90, %f862, %f289;
	abs.f32 	%f1358, %f90;
	setp.lt.f32 	%p131, %f1358, 0f40000000;
	@%p131 bra 	LBB0_66;
// %bb.55:
	setp.gtu.f32 	%p132, %f1358, 0f4B800000;
	@%p132 bra 	LBB0_62;
	bra.uni 	LBB0_56;
LBB0_62:
	mov.b32 	%r34, %f1358;
	and.b32  	%r434, %r34, 8388607;
	or.b32  	%r16339, %r434, 1065353216;
	mov.b32 	%f1357, %r16339;
	add.s32 	%r435, %r34, -1073741824;
	and.b32  	%r16340, %r435, -8388608;
	setp.eq.s32 	%p138, %r16340, 0;
	@%p138 bra 	LBB0_65;
// %bb.63:                              // %.lr.ph4102.preheader
	mov.f32 	%f873, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f872,%f873;
	// end inline asm
LBB0_64:                                // %.lr.ph4102
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r436, %r16340, 192937984;
	add.s32 	%r437, %r436, %r16339;
	mov.b32 	%f874, %r437;
	mul.f32 	%f875, %f872, %f874;
	sub.f32 	%f876, %f874, %f875;
	fma.rn.f32 	%f877, %f876, %f872, %f875;
	sub.f32 	%f878, %f874, %f877;
	fma.rz.f32 	%f879, %f878, %f872, %f877;
	cvt.rzi.f32.f32 	%f880, %f879;
	sub.f32 	%f1357, %f874, %f880;
	sub.s32 	%r16340, %r16340, %r436;
	mov.b32 	%r16339, %f1357;
	setp.ne.s32 	%p139, %r16340, 0;
	setp.ne.s32 	%p140, %r16339, 0;
	and.pred  	%p141, %p139, %p140;
	@%p141 bra 	LBB0_64;
LBB0_65:                                // %__internal_fmodf_slowpath_mod.exit.i.i2500
	setp.gt.u32 	%p142, %r34, 2139095039;
	selp.f32 	%f881, 0f7FFFFFFF, 0f4B800000, %p142;
	mul.f32 	%f882, %f1357, 0f34000000;
	mul.f32 	%f1358, %f881, %f882;
	bra.uni 	LBB0_66;
LBB0_56:                                // %__nv_fast_fdividef.exit.i.i.i2466
	div.approx.f32 	%f865, %f1358, %f257;
	cvt.rzi.f32.f32 	%f92, %f865;
	fma.rn.f32 	%f93, %f92, 0fC0000000, %f1358;
	mov.b32 	%r33, %f93;
	setp.lt.u32 	%p133, %r33, 1073741824;
	mov.f32 	%f1356, %f92;
	@%p133 bra 	LBB0_61;
// %bb.57:
	setp.lt.u32 	%p134, %r33, -2147483647;
	@%p134 bra 	LBB0_59;
// %bb.58:
	add.f32 	%f870, %f92, 0fBF800000;
	setp.lt.f32 	%p137, %f93, 0fC0000000;
	selp.f32 	%f871, %f870, %f92, %p137;
	add.f32 	%f1356, %f871, 0fBF800000;
	bra.uni 	LBB0_61;
LBB0_59:
	add.f32 	%f1356, %f92, 0f3F800000;
	setp.ltu.f32 	%p135, %f93, 0f40800000;
	@%p135 bra 	LBB0_61;
// %bb.60:                              // %__nv_fmaf_rn.exit.i.i.i2471
	fma.rn.f32 	%f867, %f257, 0fC0400000, %f93;
	setp.ge.f32 	%p136, %f867, 0f00000000;
	selp.f32 	%f868, %f1356, %f92, %p136;
	add.f32 	%f869, %f868, 0f3F800000;
	add.f32 	%f1356, %f869, 0f3F800000;
LBB0_61:                                // %__internal_fmodf_fastpath_quot.exit.i.i2474
	fma.rn.f32 	%f1358, %f1356, 0fC0000000, %f1358;
LBB0_66:                                // %__internal_fmodf_kernel.exit.i2503
	shr.u32 	%r220, %r1, 1;
	shr.u32 	%r225, %r1, 3;
	abs.f32 	%f883, %f1358;
	setp.gtu.f32 	%p143, %f883, 0f7F800000;
	@%p143 bra 	LBB0_68;
// %bb.67:
	mov.b32 	%r438, %f90;
	and.b32  	%r439, %r438, -2147483648;
	mov.b32 	%r440, %f1358;
	or.b32  	%r441, %r439, %r440;
	mov.b32 	%f1358, %r441;
LBB0_68:                                // %__nv_fmodf.exit2506
	and.b32  	%r462, %r225, 2;
	or.b32  	%r463, %r223, %r462;
	and.b32  	%r464, %r220, 4;
	or.b32  	%r45, %r463, %r464;
	and.b32  	%r465, %r1, 3;
	mul.lo.s32 	%r466, %r465, %r45;
	shl.b32 	%r467, %r466, 1;
	neg.s32 	%r468, %r467;
	cvt.rn.f32.s32 	%f916, %r468;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f107, %f916, %f917;
	abs.f32 	%f1362, %f107;
	setp.lt.f32 	%p151, %f1362, 0f40000000;
	@%p151 bra 	LBB0_80;
// %bb.69:
	setp.gtu.f32 	%p152, %f1362, 0f4B800000;
	@%p152 bra 	LBB0_76;
	bra.uni 	LBB0_70;
LBB0_76:
	mov.b32 	%r47, %f1362;
	and.b32  	%r469, %r47, 8388607;
	or.b32  	%r16341, %r469, 1065353216;
	mov.b32 	%f1361, %r16341;
	add.s32 	%r470, %r47, -1073741824;
	and.b32  	%r16342, %r470, -8388608;
	setp.eq.s32 	%p158, %r16342, 0;
	@%p158 bra 	LBB0_79;
// %bb.77:                              // %.lr.ph4087.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
LBB0_78:                                // %.lr.ph4087
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r471, %r16342, 192937984;
	add.s32 	%r472, %r471, %r16341;
	mov.b32 	%f928, %r472;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1361, %f928, %f934;
	sub.s32 	%r16342, %r16342, %r471;
	mov.b32 	%r16341, %f1361;
	setp.ne.s32 	%p159, %r16342, 0;
	setp.ne.s32 	%p160, %r16341, 0;
	and.pred  	%p161, %p159, %p160;
	@%p161 bra 	LBB0_78;
LBB0_79:                                // %__internal_fmodf_slowpath_mod.exit.i.i2553
	setp.gt.u32 	%p162, %r47, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p162;
	mul.f32 	%f936, %f1361, 0f34000000;
	mul.f32 	%f1362, %f935, %f936;
	bra.uni 	LBB0_80;
LBB0_70:                                // %__nv_fast_fdividef.exit.i.i.i2519
	div.approx.f32 	%f919, %f1362, %f257;
	cvt.rzi.f32.f32 	%f109, %f919;
	fma.rn.f32 	%f110, %f109, 0fC0000000, %f1362;
	mov.b32 	%r46, %f110;
	setp.lt.u32 	%p153, %r46, 1073741824;
	mov.f32 	%f1360, %f109;
	@%p153 bra 	LBB0_75;
// %bb.71:
	setp.lt.u32 	%p154, %r46, -2147483647;
	@%p154 bra 	LBB0_73;
// %bb.72:
	add.f32 	%f924, %f109, 0fBF800000;
	setp.lt.f32 	%p157, %f110, 0fC0000000;
	selp.f32 	%f925, %f924, %f109, %p157;
	add.f32 	%f1360, %f925, 0fBF800000;
	bra.uni 	LBB0_75;
LBB0_73:
	add.f32 	%f1360, %f109, 0f3F800000;
	setp.ltu.f32 	%p155, %f110, 0f40800000;
	@%p155 bra 	LBB0_75;
// %bb.74:                              // %__nv_fmaf_rn.exit.i.i.i2524
	fma.rn.f32 	%f921, %f257, 0fC0400000, %f110;
	setp.ge.f32 	%p156, %f921, 0f00000000;
	selp.f32 	%f922, %f1360, %f109, %p156;
	add.f32 	%f923, %f922, 0f3F800000;
	add.f32 	%f1360, %f923, 0f3F800000;
LBB0_75:                                // %__internal_fmodf_fastpath_quot.exit.i.i2527
	fma.rn.f32 	%f1362, %f1360, 0fC0000000, %f1362;
LBB0_80:                                // %__internal_fmodf_kernel.exit.i2556
	shl.b32 	%r216, %r1, 1;
	abs.f32 	%f937, %f1362;
	setp.gtu.f32 	%p163, %f937, 0f7F800000;
	@%p163 bra 	LBB0_82;
// %bb.81:
	mov.b32 	%r473, %f107;
	and.b32  	%r474, %r473, -2147483648;
	mov.b32 	%r475, %f1362;
	or.b32  	%r476, %r474, %r475;
	mov.b32 	%f1362, %r476;
LBB0_82:                                // %__nv_fmodf.exit2559
	and.b32  	%r485, %r216, 6;
	mov.u32 	%r486, -8;
	sub.s32 	%r487, %r486, %r485;
	mul.lo.s32 	%r488, %r45, %r487;
	cvt.rn.f32.s32 	%f968, %r488;
	div.approx.f32 	%f126, %f968, %f917;
	abs.f32 	%f1366, %f126;
	setp.lt.f32 	%p171, %f1366, 0f40000000;
	@%p171 bra 	LBB0_94;
// %bb.83:
	setp.gtu.f32 	%p172, %f1366, 0f4B800000;
	@%p172 bra 	LBB0_90;
	bra.uni 	LBB0_84;
LBB0_90:
	mov.b32 	%r55, %f1366;
	and.b32  	%r489, %r55, 8388607;
	or.b32  	%r16343, %r489, 1065353216;
	mov.b32 	%f1365, %r16343;
	add.s32 	%r490, %r55, -1073741824;
	and.b32  	%r16344, %r490, -8388608;
	setp.eq.s32 	%p178, %r16344, 0;
	@%p178 bra 	LBB0_93;
// %bb.91:                              // %.lr.ph4077.preheader
	mov.f32 	%f979, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f978,%f979;
	// end inline asm
LBB0_92:                                // %.lr.ph4077
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r491, %r16344, 192937984;
	add.s32 	%r492, %r491, %r16343;
	mov.b32 	%f980, %r492;
	mul.f32 	%f981, %f978, %f980;
	sub.f32 	%f982, %f980, %f981;
	fma.rn.f32 	%f983, %f982, %f978, %f981;
	sub.f32 	%f984, %f980, %f983;
	fma.rz.f32 	%f985, %f984, %f978, %f983;
	cvt.rzi.f32.f32 	%f986, %f985;
	sub.f32 	%f1365, %f980, %f986;
	sub.s32 	%r16344, %r16344, %r491;
	mov.b32 	%r16343, %f1365;
	setp.ne.s32 	%p179, %r16344, 0;
	setp.ne.s32 	%p180, %r16343, 0;
	and.pred  	%p181, %p179, %p180;
	@%p181 bra 	LBB0_92;
LBB0_93:                                // %__internal_fmodf_slowpath_mod.exit.i.i2606
	setp.gt.u32 	%p182, %r55, 2139095039;
	selp.f32 	%f987, 0f7FFFFFFF, 0f4B800000, %p182;
	mul.f32 	%f988, %f1365, 0f34000000;
	mul.f32 	%f1366, %f987, %f988;
	bra.uni 	LBB0_94;
LBB0_84:                                // %__nv_fast_fdividef.exit.i.i.i2572
	div.approx.f32 	%f971, %f1366, %f257;
	cvt.rzi.f32.f32 	%f128, %f971;
	fma.rn.f32 	%f129, %f128, 0fC0000000, %f1366;
	mov.b32 	%r54, %f129;
	setp.lt.u32 	%p173, %r54, 1073741824;
	mov.f32 	%f1364, %f128;
	@%p173 bra 	LBB0_89;
// %bb.85:
	setp.lt.u32 	%p174, %r54, -2147483647;
	@%p174 bra 	LBB0_87;
// %bb.86:
	add.f32 	%f976, %f128, 0fBF800000;
	setp.lt.f32 	%p177, %f129, 0fC0000000;
	selp.f32 	%f977, %f976, %f128, %p177;
	add.f32 	%f1364, %f977, 0fBF800000;
	bra.uni 	LBB0_89;
LBB0_87:
	add.f32 	%f1364, %f128, 0f3F800000;
	setp.ltu.f32 	%p175, %f129, 0f40800000;
	@%p175 bra 	LBB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i2577
	fma.rn.f32 	%f973, %f257, 0fC0400000, %f129;
	setp.ge.f32 	%p176, %f973, 0f00000000;
	selp.f32 	%f974, %f1364, %f128, %p176;
	add.f32 	%f975, %f974, 0f3F800000;
	add.f32 	%f1364, %f975, 0f3F800000;
LBB0_89:                                // %__internal_fmodf_fastpath_quot.exit.i.i2580
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
LBB0_94:                                // %__internal_fmodf_kernel.exit.i2609
	abs.f32 	%f989, %f1366;
	setp.gtu.f32 	%p183, %f989, 0f7F800000;
	@%p183 bra 	LBB0_96;
// %bb.95:
	mov.b32 	%r493, %f126;
	and.b32  	%r494, %r493, -2147483648;
	mov.b32 	%r495, %f1366;
	or.b32  	%r496, %r494, %r495;
	mov.b32 	%f1366, %r496;
LBB0_96:                                // %__nv_fmodf.exit2612
	shl.b32 	%r517, %r222, 1;
	neg.s32 	%r518, %r517;
	mad.lo.s32 	%r519, %r221, -4, %r518;
	mul.lo.s32 	%r520, %r519, %r45;
	shl.b32 	%r66, %r520, 1;
	cvt.rn.f32.s32 	%f143, %r66;
	div.approx.f32 	%f144, %f143, %f289;
	abs.f32 	%f1370, %f144;
	setp.lt.f32 	%p191, %f1370, 0f40000000;
	@%p191 bra 	LBB0_108;
// %bb.97:
	setp.gtu.f32 	%p192, %f1370, 0f4B800000;
	@%p192 bra 	LBB0_104;
	bra.uni 	LBB0_98;
LBB0_104:
	mov.b32 	%r68, %f1370;
	and.b32  	%r521, %r68, 8388607;
	or.b32  	%r16345, %r521, 1065353216;
	mov.b32 	%f1369, %r16345;
	add.s32 	%r522, %r68, -1073741824;
	and.b32  	%r16346, %r522, -8388608;
	setp.eq.s32 	%p198, %r16346, 0;
	@%p198 bra 	LBB0_107;
// %bb.105:                             // %.lr.ph4062.preheader
	mov.f32 	%f1032, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1031,%f1032;
	// end inline asm
LBB0_106:                               // %.lr.ph4062
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r523, %r16346, 192937984;
	add.s32 	%r524, %r523, %r16345;
	mov.b32 	%f1033, %r524;
	mul.f32 	%f1034, %f1031, %f1033;
	sub.f32 	%f1035, %f1033, %f1034;
	fma.rn.f32 	%f1036, %f1035, %f1031, %f1034;
	sub.f32 	%f1037, %f1033, %f1036;
	fma.rz.f32 	%f1038, %f1037, %f1031, %f1036;
	cvt.rzi.f32.f32 	%f1039, %f1038;
	sub.f32 	%f1369, %f1033, %f1039;
	sub.s32 	%r16346, %r16346, %r523;
	mov.b32 	%r16345, %f1369;
	setp.ne.s32 	%p199, %r16346, 0;
	setp.ne.s32 	%p200, %r16345, 0;
	and.pred  	%p201, %p199, %p200;
	@%p201 bra 	LBB0_106;
LBB0_107:                               // %__internal_fmodf_slowpath_mod.exit.i.i2659
	setp.gt.u32 	%p202, %r68, 2139095039;
	selp.f32 	%f1040, 0f7FFFFFFF, 0f4B800000, %p202;
	mul.f32 	%f1041, %f1369, 0f34000000;
	mul.f32 	%f1370, %f1040, %f1041;
	bra.uni 	LBB0_108;
LBB0_98:                                // %__nv_fast_fdividef.exit.i.i.i2625
	div.approx.f32 	%f1024, %f1370, %f257;
	cvt.rzi.f32.f32 	%f146, %f1024;
	fma.rn.f32 	%f147, %f146, 0fC0000000, %f1370;
	mov.b32 	%r67, %f147;
	setp.lt.u32 	%p193, %r67, 1073741824;
	mov.f32 	%f1368, %f146;
	@%p193 bra 	LBB0_103;
// %bb.99:
	setp.lt.u32 	%p194, %r67, -2147483647;
	@%p194 bra 	LBB0_101;
// %bb.100:
	add.f32 	%f1029, %f146, 0fBF800000;
	setp.lt.f32 	%p197, %f147, 0fC0000000;
	selp.f32 	%f1030, %f1029, %f146, %p197;
	add.f32 	%f1368, %f1030, 0fBF800000;
	bra.uni 	LBB0_103;
LBB0_101:
	add.f32 	%f1368, %f146, 0f3F800000;
	setp.ltu.f32 	%p195, %f147, 0f40800000;
	@%p195 bra 	LBB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i2630
	fma.rn.f32 	%f1026, %f257, 0fC0400000, %f147;
	setp.ge.f32 	%p196, %f1026, 0f00000000;
	selp.f32 	%f1027, %f1368, %f146, %p196;
	add.f32 	%f1028, %f1027, 0f3F800000;
	add.f32 	%f1368, %f1028, 0f3F800000;
LBB0_103:                               // %__internal_fmodf_fastpath_quot.exit.i.i2633
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
LBB0_108:                               // %__internal_fmodf_kernel.exit.i2662
	abs.f32 	%f1042, %f1370;
	setp.gtu.f32 	%p203, %f1042, 0f7F800000;
	@%p203 bra 	LBB0_110;
// %bb.109:
	mov.b32 	%r525, %f144;
	and.b32  	%r526, %r525, -2147483648;
	mov.b32 	%r527, %f1370;
	or.b32  	%r528, %r526, %r527;
	mov.b32 	%f1370, %r528;
LBB0_110:                               // %__nv_fmodf.exit2665
	shl.b32 	%r537, %r45, 4;
	sub.s32 	%r538, %r66, %r537;
	cvt.rn.f32.s32 	%f163, %r538;
	div.approx.f32 	%f164, %f163, %f289;
	abs.f32 	%f1374, %f164;
	setp.lt.f32 	%p211, %f1374, 0f40000000;
	@%p211 bra 	LBB0_122;
// %bb.111:
	setp.gtu.f32 	%p212, %f1374, 0f4B800000;
	@%p212 bra 	LBB0_118;
	bra.uni 	LBB0_112;
LBB0_118:
	mov.b32 	%r76, %f1374;
	and.b32  	%r539, %r76, 8388607;
	or.b32  	%r16347, %r539, 1065353216;
	mov.b32 	%f1373, %r16347;
	add.s32 	%r540, %r76, -1073741824;
	and.b32  	%r16348, %r540, -8388608;
	setp.eq.s32 	%p218, %r16348, 0;
	@%p218 bra 	LBB0_121;
// %bb.119:                             // %.lr.ph4052.preheader
	mov.f32 	%f1083, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1082,%f1083;
	// end inline asm
LBB0_120:                               // %.lr.ph4052
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r541, %r16348, 192937984;
	add.s32 	%r542, %r541, %r16347;
	mov.b32 	%f1084, %r542;
	mul.f32 	%f1085, %f1082, %f1084;
	sub.f32 	%f1086, %f1084, %f1085;
	fma.rn.f32 	%f1087, %f1086, %f1082, %f1085;
	sub.f32 	%f1088, %f1084, %f1087;
	fma.rz.f32 	%f1089, %f1088, %f1082, %f1087;
	cvt.rzi.f32.f32 	%f1090, %f1089;
	sub.f32 	%f1373, %f1084, %f1090;
	sub.s32 	%r16348, %r16348, %r541;
	mov.b32 	%r16347, %f1373;
	setp.ne.s32 	%p219, %r16348, 0;
	setp.ne.s32 	%p220, %r16347, 0;
	and.pred  	%p221, %p219, %p220;
	@%p221 bra 	LBB0_120;
LBB0_121:                               // %__internal_fmodf_slowpath_mod.exit.i.i2712
	setp.gt.u32 	%p222, %r76, 2139095039;
	selp.f32 	%f1091, 0f7FFFFFFF, 0f4B800000, %p222;
	mul.f32 	%f1092, %f1373, 0f34000000;
	mul.f32 	%f1374, %f1091, %f1092;
	bra.uni 	LBB0_122;
LBB0_112:                               // %__nv_fast_fdividef.exit.i.i.i2678
	div.approx.f32 	%f1075, %f1374, %f257;
	cvt.rzi.f32.f32 	%f166, %f1075;
	fma.rn.f32 	%f167, %f166, 0fC0000000, %f1374;
	mov.b32 	%r75, %f167;
	setp.lt.u32 	%p213, %r75, 1073741824;
	mov.f32 	%f1372, %f166;
	@%p213 bra 	LBB0_117;
// %bb.113:
	setp.lt.u32 	%p214, %r75, -2147483647;
	@%p214 bra 	LBB0_115;
// %bb.114:
	add.f32 	%f1080, %f166, 0fBF800000;
	setp.lt.f32 	%p217, %f167, 0fC0000000;
	selp.f32 	%f1081, %f1080, %f166, %p217;
	add.f32 	%f1372, %f1081, 0fBF800000;
	bra.uni 	LBB0_117;
LBB0_115:
	add.f32 	%f1372, %f166, 0f3F800000;
	setp.ltu.f32 	%p215, %f167, 0f40800000;
	@%p215 bra 	LBB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i2683
	fma.rn.f32 	%f1077, %f257, 0fC0400000, %f167;
	setp.ge.f32 	%p216, %f1077, 0f00000000;
	selp.f32 	%f1078, %f1372, %f166, %p216;
	add.f32 	%f1079, %f1078, 0f3F800000;
	add.f32 	%f1372, %f1079, 0f3F800000;
LBB0_117:                               // %__internal_fmodf_fastpath_quot.exit.i.i2686
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
LBB0_122:                               // %__internal_fmodf_kernel.exit.i2715
	abs.f32 	%f1093, %f1374;
	setp.gtu.f32 	%p223, %f1093, 0f7F800000;
	@%p223 bra 	LBB0_124;
// %bb.123:
	mov.b32 	%r543, %f164;
	and.b32  	%r544, %r543, -2147483648;
	mov.b32 	%r545, %f1374;
	or.b32  	%r546, %r544, %r545;
	mov.b32 	%f1374, %r546;
LBB0_124:                               // %__nv_fmodf.exit2718
	mov.f32 	%f1126, 0f41800000;
	div.approx.f32 	%f181, %f143, %f1126;
	abs.f32 	%f1378, %f181;
	setp.lt.f32 	%p231, %f1378, 0f40000000;
	@%p231 bra 	LBB0_136;
// %bb.125:
	setp.gtu.f32 	%p232, %f1378, 0f4B800000;
	@%p232 bra 	LBB0_132;
	bra.uni 	LBB0_126;
LBB0_132:
	mov.b32 	%r86, %f1378;
	and.b32  	%r561, %r86, 8388607;
	or.b32  	%r16349, %r561, 1065353216;
	mov.b32 	%f1377, %r16349;
	add.s32 	%r562, %r86, -1073741824;
	and.b32  	%r16350, %r562, -8388608;
	setp.eq.s32 	%p238, %r16350, 0;
	@%p238 bra 	LBB0_135;
// %bb.133:                             // %.lr.ph4041.preheader
	mov.f32 	%f1136, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1135,%f1136;
	// end inline asm
LBB0_134:                               // %.lr.ph4041
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r563, %r16350, 192937984;
	add.s32 	%r564, %r563, %r16349;
	mov.b32 	%f1137, %r564;
	mul.f32 	%f1138, %f1135, %f1137;
	sub.f32 	%f1139, %f1137, %f1138;
	fma.rn.f32 	%f1140, %f1139, %f1135, %f1138;
	sub.f32 	%f1141, %f1137, %f1140;
	fma.rz.f32 	%f1142, %f1141, %f1135, %f1140;
	cvt.rzi.f32.f32 	%f1143, %f1142;
	sub.f32 	%f1377, %f1137, %f1143;
	sub.s32 	%r16350, %r16350, %r563;
	mov.b32 	%r16349, %f1377;
	setp.ne.s32 	%p239, %r16350, 0;
	setp.ne.s32 	%p240, %r16349, 0;
	and.pred  	%p241, %p239, %p240;
	@%p241 bra 	LBB0_134;
LBB0_135:                               // %__internal_fmodf_slowpath_mod.exit.i.i2765
	setp.gt.u32 	%p242, %r86, 2139095039;
	selp.f32 	%f1144, 0f7FFFFFFF, 0f4B800000, %p242;
	mul.f32 	%f1145, %f1377, 0f34000000;
	mul.f32 	%f1378, %f1144, %f1145;
	bra.uni 	LBB0_136;
LBB0_126:                               // %__nv_fast_fdividef.exit.i.i.i2731
	div.approx.f32 	%f1128, %f1378, %f257;
	cvt.rzi.f32.f32 	%f183, %f1128;
	fma.rn.f32 	%f184, %f183, 0fC0000000, %f1378;
	mov.b32 	%r85, %f184;
	setp.lt.u32 	%p233, %r85, 1073741824;
	mov.f32 	%f1376, %f183;
	@%p233 bra 	LBB0_131;
// %bb.127:
	setp.lt.u32 	%p234, %r85, -2147483647;
	@%p234 bra 	LBB0_129;
// %bb.128:
	add.f32 	%f1133, %f183, 0fBF800000;
	setp.lt.f32 	%p237, %f184, 0fC0000000;
	selp.f32 	%f1134, %f1133, %f183, %p237;
	add.f32 	%f1376, %f1134, 0fBF800000;
	bra.uni 	LBB0_131;
LBB0_129:
	add.f32 	%f1376, %f183, 0f3F800000;
	setp.ltu.f32 	%p235, %f184, 0f40800000;
	@%p235 bra 	LBB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i2736
	fma.rn.f32 	%f1130, %f257, 0fC0400000, %f184;
	setp.ge.f32 	%p236, %f1130, 0f00000000;
	selp.f32 	%f1131, %f1376, %f183, %p236;
	add.f32 	%f1132, %f1131, 0f3F800000;
	add.f32 	%f1376, %f1132, 0f3F800000;
LBB0_131:                               // %__internal_fmodf_fastpath_quot.exit.i.i2739
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
LBB0_136:                               // %__internal_fmodf_kernel.exit.i2768
	abs.f32 	%f1146, %f1378;
	setp.gtu.f32 	%p243, %f1146, 0f7F800000;
	@%p243 bra 	LBB0_138;
// %bb.137:
	mov.b32 	%r565, %f181;
	and.b32  	%r566, %r565, -2147483648;
	mov.b32 	%r567, %f1378;
	or.b32  	%r568, %r566, %r567;
	mov.b32 	%f1378, %r568;
LBB0_138:                               // %__nv_fmodf.exit2771
	div.approx.f32 	%f200, %f163, %f1126;
	abs.f32 	%f1382, %f200;
	setp.lt.f32 	%p251, %f1382, 0f40000000;
	@%p251 bra 	LBB0_150;
// %bb.139:
	setp.gtu.f32 	%p252, %f1382, 0f4B800000;
	@%p252 bra 	LBB0_146;
	bra.uni 	LBB0_140;
LBB0_146:
	mov.b32 	%r94, %f1382;
	and.b32  	%r577, %r94, 8388607;
	or.b32  	%r16351, %r577, 1065353216;
	mov.b32 	%f1381, %r16351;
	add.s32 	%r578, %r94, -1073741824;
	and.b32  	%r16352, %r578, -8388608;
	setp.eq.s32 	%p258, %r16352, 0;
	@%p258 bra 	LBB0_149;
// %bb.147:                             // %.lr.ph4035.preheader
	mov.f32 	%f1187, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1186,%f1187;
	// end inline asm
LBB0_148:                               // %.lr.ph4035
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r579, %r16352, 192937984;
	add.s32 	%r580, %r579, %r16351;
	mov.b32 	%f1188, %r580;
	mul.f32 	%f1189, %f1186, %f1188;
	sub.f32 	%f1190, %f1188, %f1189;
	fma.rn.f32 	%f1191, %f1190, %f1186, %f1189;
	sub.f32 	%f1192, %f1188, %f1191;
	fma.rz.f32 	%f1193, %f1192, %f1186, %f1191;
	cvt.rzi.f32.f32 	%f1194, %f1193;
	sub.f32 	%f1381, %f1188, %f1194;
	sub.s32 	%r16352, %r16352, %r579;
	mov.b32 	%r16351, %f1381;
	setp.ne.s32 	%p259, %r16352, 0;
	setp.ne.s32 	%p260, %r16351, 0;
	and.pred  	%p261, %p259, %p260;
	@%p261 bra 	LBB0_148;
LBB0_149:                               // %__internal_fmodf_slowpath_mod.exit.i.i2818
	setp.gt.u32 	%p262, %r94, 2139095039;
	selp.f32 	%f1195, 0f7FFFFFFF, 0f4B800000, %p262;
	mul.f32 	%f1196, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1195, %f1196;
	bra.uni 	LBB0_150;
LBB0_140:                               // %__nv_fast_fdividef.exit.i.i.i2784
	div.approx.f32 	%f1179, %f1382, %f257;
	cvt.rzi.f32.f32 	%f202, %f1179;
	fma.rn.f32 	%f203, %f202, 0fC0000000, %f1382;
	mov.b32 	%r93, %f203;
	setp.lt.u32 	%p253, %r93, 1073741824;
	mov.f32 	%f1380, %f202;
	@%p253 bra 	LBB0_145;
// %bb.141:
	setp.lt.u32 	%p254, %r93, -2147483647;
	@%p254 bra 	LBB0_143;
// %bb.142:
	add.f32 	%f1184, %f202, 0fBF800000;
	setp.lt.f32 	%p257, %f203, 0fC0000000;
	selp.f32 	%f1185, %f1184, %f202, %p257;
	add.f32 	%f1380, %f1185, 0fBF800000;
	bra.uni 	LBB0_145;
LBB0_143:
	add.f32 	%f1380, %f202, 0f3F800000;
	setp.ltu.f32 	%p255, %f203, 0f40800000;
	@%p255 bra 	LBB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i2789
	fma.rn.f32 	%f1181, %f257, 0fC0400000, %f203;
	setp.ge.f32 	%p256, %f1181, 0f00000000;
	selp.f32 	%f1182, %f1380, %f202, %p256;
	add.f32 	%f1183, %f1182, 0f3F800000;
	add.f32 	%f1380, %f1183, 0f3F800000;
LBB0_145:                               // %__internal_fmodf_fastpath_quot.exit.i.i2792
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
LBB0_150:                               // %__internal_fmodf_kernel.exit.i2821
	and.b32  	%r212, %r1, 16;
	abs.f32 	%f1197, %f1382;
	setp.gtu.f32 	%p263, %f1197, 0f7F800000;
	@%p263 bra 	LBB0_152;
// %bb.151:
	mov.b32 	%r581, %f200;
	and.b32  	%r582, %r581, -2147483648;
	mov.b32 	%r583, %f1382;
	or.b32  	%r584, %r582, %r583;
	mov.b32 	%f1382, %r584;
LBB0_152:                               // %__nv_fmodf.exit2824
	cvt.u16.u32 	%rs1, %r1;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shl.b16 	%rs6, %rs1, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	shr.u16 	%rs9, %rs8, 2;
	and.b16  	%rs10, %rs8, 13104;
	shl.b16 	%rs11, %rs10, 2;
	or.b16  	%rs12, %rs9, %rs11;
	and.b16  	%rs13, %rs12, 20480;
	shl.b16 	%rs14, %rs13, 1;
	shl.b16 	%rs15, %rs10, 1;
	and.b16  	%rs16, %rs15, 16384;
	or.b16  	%rs17, %rs16, %rs14;
	shr.u16 	%rs18, %rs17, 13;
	add.s32 	%r606, %r267, %r212;
	neg.s32 	%r607, %r606;
	mad.lo.s32 	%r608, %r226, -32, %r607;
	or.b16  	%rs19, %rs18, 1;
	cvt.u32.u16 	%r609, %rs19;
	and.b16  	%rs20, %rs18, 6;
	cvt.u32.u16 	%r610, %rs20;
	sub.s32 	%r611, %r608, %r610;
	shl.b32 	%r612, %r611, 1;
	cvt.rn.f32.s32 	%f1230, %r612;
	div.approx.f32 	%f217, %f1230, %f289;
	abs.f32 	%f1386, %f217;
	setp.lt.f32 	%p271, %f1386, 0f40000000;
	@%p271 bra 	LBB0_164;
// %bb.153:
	setp.gtu.f32 	%p272, %f1386, 0f4B800000;
	@%p272 bra 	LBB0_160;
	bra.uni 	LBB0_154;
LBB0_160:
	mov.b32 	%r107, %f1386;
	and.b32  	%r613, %r107, 8388607;
	or.b32  	%r16353, %r613, 1065353216;
	mov.b32 	%f1385, %r16353;
	add.s32 	%r614, %r107, -1073741824;
	and.b32  	%r16354, %r614, -8388608;
	setp.eq.s32 	%p278, %r16354, 0;
	@%p278 bra 	LBB0_163;
// %bb.161:                             // %.lr.ph4020.preheader
	mov.f32 	%f1241, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1240,%f1241;
	// end inline asm
LBB0_162:                               // %.lr.ph4020
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r615, %r16354, 192937984;
	add.s32 	%r616, %r615, %r16353;
	mov.b32 	%f1242, %r616;
	mul.f32 	%f1243, %f1240, %f1242;
	sub.f32 	%f1244, %f1242, %f1243;
	fma.rn.f32 	%f1245, %f1244, %f1240, %f1243;
	sub.f32 	%f1246, %f1242, %f1245;
	fma.rz.f32 	%f1247, %f1246, %f1240, %f1245;
	cvt.rzi.f32.f32 	%f1248, %f1247;
	sub.f32 	%f1385, %f1242, %f1248;
	sub.s32 	%r16354, %r16354, %r615;
	mov.b32 	%r16353, %f1385;
	setp.ne.s32 	%p279, %r16354, 0;
	setp.ne.s32 	%p280, %r16353, 0;
	and.pred  	%p281, %p279, %p280;
	@%p281 bra 	LBB0_162;
LBB0_163:                               // %__internal_fmodf_slowpath_mod.exit.i.i2871
	setp.gt.u32 	%p282, %r107, 2139095039;
	selp.f32 	%f1249, 0f7FFFFFFF, 0f4B800000, %p282;
	mul.f32 	%f1250, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1249, %f1250;
	bra.uni 	LBB0_164;
LBB0_154:                               // %__nv_fast_fdividef.exit.i.i.i2837
	div.approx.f32 	%f1233, %f1386, %f257;
	cvt.rzi.f32.f32 	%f219, %f1233;
	fma.rn.f32 	%f220, %f219, 0fC0000000, %f1386;
	mov.b32 	%r106, %f220;
	setp.lt.u32 	%p273, %r106, 1073741824;
	mov.f32 	%f1384, %f219;
	@%p273 bra 	LBB0_159;
// %bb.155:
	setp.lt.u32 	%p274, %r106, -2147483647;
	@%p274 bra 	LBB0_157;
// %bb.156:
	add.f32 	%f1238, %f219, 0fBF800000;
	setp.lt.f32 	%p277, %f220, 0fC0000000;
	selp.f32 	%f1239, %f1238, %f219, %p277;
	add.f32 	%f1384, %f1239, 0fBF800000;
	bra.uni 	LBB0_159;
LBB0_157:
	add.f32 	%f1384, %f219, 0f3F800000;
	setp.ltu.f32 	%p275, %f220, 0f40800000;
	@%p275 bra 	LBB0_159;
// %bb.158:                             // %__nv_fmaf_rn.exit.i.i.i2842
	fma.rn.f32 	%f1235, %f257, 0fC0400000, %f220;
	setp.ge.f32 	%p276, %f1235, 0f00000000;
	selp.f32 	%f1236, %f1384, %f219, %p276;
	add.f32 	%f1237, %f1236, 0f3F800000;
	add.f32 	%f1384, %f1237, 0f3F800000;
LBB0_159:                               // %__internal_fmodf_fastpath_quot.exit.i.i2845
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
LBB0_164:                               // %__internal_fmodf_kernel.exit.i2874
	sub.s32 	%r105, %r608, %r609;
	abs.f32 	%f1251, %f1386;
	setp.gtu.f32 	%p283, %f1251, 0f7F800000;
	@%p283 bra 	LBB0_166;
// %bb.165:
	mov.b32 	%r617, %f217;
	and.b32  	%r618, %r617, -2147483648;
	mov.b32 	%r619, %f1386;
	or.b32  	%r620, %r618, %r619;
	mov.b32 	%f1386, %r620;
LBB0_166:                               // %__nv_fmodf.exit2877
	shl.b32 	%r629, %r105, 1;
	cvt.rn.f32.s32 	%f1282, %r629;
	div.approx.f32 	%f236, %f1282, %f289;
	abs.f32 	%f1390, %f236;
	setp.lt.f32 	%p291, %f1390, 0f40000000;
	@%p291 bra 	LBB0_178;
// %bb.167:
	setp.gtu.f32 	%p292, %f1390, 0f4B800000;
	@%p292 bra 	LBB0_174;
	bra.uni 	LBB0_168;
LBB0_174:
	mov.b32 	%r115, %f1390;
	and.b32  	%r630, %r115, 8388607;
	or.b32  	%r16355, %r630, 1065353216;
	mov.b32 	%f1389, %r16355;
	add.s32 	%r631, %r115, -1073741824;
	and.b32  	%r16356, %r631, -8388608;
	setp.eq.s32 	%p298, %r16356, 0;
	@%p298 bra 	LBB0_177;
// %bb.175:                             // %.lr.ph.preheader
	mov.f32 	%f1293, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1292,%f1293;
	// end inline asm
LBB0_176:                               // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r632, %r16356, 192937984;
	add.s32 	%r633, %r632, %r16355;
	mov.b32 	%f1294, %r633;
	mul.f32 	%f1295, %f1292, %f1294;
	sub.f32 	%f1296, %f1294, %f1295;
	fma.rn.f32 	%f1297, %f1296, %f1292, %f1295;
	sub.f32 	%f1298, %f1294, %f1297;
	fma.rz.f32 	%f1299, %f1298, %f1292, %f1297;
	cvt.rzi.f32.f32 	%f1300, %f1299;
	sub.f32 	%f1389, %f1294, %f1300;
	sub.s32 	%r16356, %r16356, %r632;
	mov.b32 	%r16355, %f1389;
	setp.ne.s32 	%p299, %r16356, 0;
	setp.ne.s32 	%p300, %r16355, 0;
	and.pred  	%p301, %p299, %p300;
	@%p301 bra 	LBB0_176;
LBB0_177:                               // %__internal_fmodf_slowpath_mod.exit.i.i2924
	setp.gt.u32 	%p302, %r115, 2139095039;
	selp.f32 	%f1301, 0f7FFFFFFF, 0f4B800000, %p302;
	mul.f32 	%f1302, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1301, %f1302;
	bra.uni 	LBB0_178;
LBB0_168:                               // %__nv_fast_fdividef.exit.i.i.i2890
	div.approx.f32 	%f1285, %f1390, %f257;
	cvt.rzi.f32.f32 	%f238, %f1285;
	fma.rn.f32 	%f239, %f238, 0fC0000000, %f1390;
	mov.b32 	%r114, %f239;
	setp.lt.u32 	%p293, %r114, 1073741824;
	mov.f32 	%f1388, %f238;
	@%p293 bra 	LBB0_173;
// %bb.169:
	setp.lt.u32 	%p294, %r114, -2147483647;
	@%p294 bra 	LBB0_171;
// %bb.170:
	add.f32 	%f1290, %f238, 0fBF800000;
	setp.lt.f32 	%p297, %f239, 0fC0000000;
	selp.f32 	%f1291, %f1290, %f238, %p297;
	add.f32 	%f1388, %f1291, 0fBF800000;
	bra.uni 	LBB0_173;
LBB0_171:
	add.f32 	%f1388, %f238, 0f3F800000;
	setp.ltu.f32 	%p295, %f239, 0f40800000;
	@%p295 bra 	LBB0_173;
// %bb.172:                             // %__nv_fmaf_rn.exit.i.i.i2895
	fma.rn.f32 	%f1287, %f257, 0fC0400000, %f239;
	setp.ge.f32 	%p296, %f1287, 0f00000000;
	selp.f32 	%f1288, %f1388, %f238, %p296;
	add.f32 	%f1289, %f1288, 0f3F800000;
	add.f32 	%f1388, %f1289, 0f3F800000;
LBB0_173:                               // %__internal_fmodf_fastpath_quot.exit.i.i2898
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
LBB0_178:                               // %__internal_fmodf_kernel.exit.i2927
	abs.f32 	%f1303, %f1390;
	setp.gtu.f32 	%p303, %f1303, 0f7F800000;
	@%p303 bra 	LBB0_180;
// %bb.179:
	mov.b32 	%r634, %f236;
	and.b32  	%r635, %r634, -2147483648;
	mov.b32 	%r636, %f1390;
	or.b32  	%r637, %r635, %r636;
	mov.b32 	%f1390, %r637;
LBB0_180:                               // %__nv_fmodf.exit2930
	setp.le.s32 	%p311, %r6, %r5;
	mov.u32 	%r16335, 0;
	@%p311 bra 	LBB0_189;
// %bb.181:                             // %L2449.lr.ph
	mov.f32 	%f261, 0f44004000;
	div.approx.f32 	%f262, %f260, %f261;
	div.approx.f32 	%f296, %f294, %f261;
	div.approx.f32 	%f331, %f329, %f261;
	div.approx.f32 	%f365, %f363, %f261;
	div.approx.f32 	%f400, %f398, %f261;
	div.approx.f32 	%f434, %f432, %f261;
	div.approx.f32 	%f469, %f467, %f261;
	div.approx.f32 	%f503, %f501, %f261;
	div.approx.f32 	%f538, %f536, %f261;
	div.approx.f32 	%f572, %f570, %f261;
	div.approx.f32 	%f607, %f605, %f261;
	div.approx.f32 	%f641, %f639, %f261;
	div.approx.f32 	%f676, %f674, %f261;
	div.approx.f32 	%f710, %f708, %f261;
	div.approx.f32 	%f745, %f743, %f261;
	div.approx.f32 	%f779, %f777, %f261;
	abs.f32 	%f263, %f262;
	abs.f32 	%f297, %f296;
	abs.f32 	%f332, %f331;
	abs.f32 	%f366, %f365;
	abs.f32 	%f401, %f400;
	abs.f32 	%f435, %f434;
	abs.f32 	%f470, %f469;
	abs.f32 	%f504, %f503;
	abs.f32 	%f539, %f538;
	abs.f32 	%f573, %f572;
	abs.f32 	%f608, %f607;
	abs.f32 	%f642, %f641;
	abs.f32 	%f677, %f676;
	abs.f32 	%f711, %f710;
	abs.f32 	%f746, %f745;
	abs.f32 	%f780, %f779;
	setp.gt.f32 	%p15, %f263, 0f4B800000;
	mul.f32 	%f264, %f262, 0f00000000;
	setp.gt.f32 	%p21, %f297, 0f4B800000;
	mul.f32 	%f298, %f296, 0f00000000;
	setp.gt.f32 	%p27, %f332, 0f4B800000;
	mul.f32 	%f333, %f331, 0f00000000;
	setp.gt.f32 	%p33, %f366, 0f4B800000;
	mul.f32 	%f367, %f365, 0f00000000;
	setp.gt.f32 	%p39, %f401, 0f4B800000;
	mul.f32 	%f402, %f400, 0f00000000;
	setp.gt.f32 	%p45, %f435, 0f4B800000;
	mul.f32 	%f436, %f434, 0f00000000;
	setp.gt.f32 	%p51, %f470, 0f4B800000;
	mul.f32 	%f471, %f469, 0f00000000;
	setp.gt.f32 	%p57, %f504, 0f4B800000;
	mul.f32 	%f505, %f503, 0f00000000;
	setp.gt.f32 	%p63, %f539, 0f4B800000;
	mul.f32 	%f540, %f538, 0f00000000;
	setp.gt.f32 	%p69, %f573, 0f4B800000;
	mul.f32 	%f574, %f572, 0f00000000;
	setp.gt.f32 	%p75, %f608, 0f4B800000;
	mul.f32 	%f609, %f607, 0f00000000;
	setp.gt.f32 	%p81, %f642, 0f4B800000;
	mul.f32 	%f643, %f641, 0f00000000;
	setp.gt.f32 	%p87, %f677, 0f4B800000;
	mul.f32 	%f678, %f676, 0f00000000;
	setp.gt.f32 	%p93, %f711, 0f4B800000;
	mul.f32 	%f712, %f710, 0f00000000;
	setp.gt.f32 	%p99, %f746, 0f4B800000;
	mul.f32 	%f747, %f745, 0f00000000;
	setp.gt.f32 	%p105, %f780, 0f4B800000;
	mul.f32 	%f781, %f779, 0f00000000;
	selp.f32 	%f265, %f264, %f262, %p15;
	selp.f32 	%f299, %f298, %f296, %p21;
	selp.f32 	%f334, %f333, %f331, %p27;
	selp.f32 	%f368, %f367, %f365, %p33;
	selp.f32 	%f403, %f402, %f400, %p39;
	selp.f32 	%f437, %f436, %f434, %p45;
	selp.f32 	%f472, %f471, %f469, %p51;
	selp.f32 	%f506, %f505, %f503, %p57;
	selp.f32 	%f541, %f540, %f538, %p63;
	selp.f32 	%f575, %f574, %f572, %p69;
	selp.f32 	%f610, %f609, %f607, %p75;
	selp.f32 	%f644, %f643, %f641, %p81;
	selp.f32 	%f679, %f678, %f676, %p87;
	selp.f32 	%f713, %f712, %f710, %p93;
	selp.f32 	%f748, %f747, %f745, %p99;
	selp.f32 	%f782, %f781, %f779, %p105;
	add.f32 	%f832, %f1354, %f1354;
	add.f32 	%f884, %f1358, %f1358;
	add.f32 	%f938, %f1362, %f1362;
	add.f32 	%f990, %f1366, %f1366;
	add.f32 	%f1147, %f1378, %f1378;
	add.f32 	%f1198, %f1382, %f1382;
	add.f32 	%f266, %f265, %f265;
	add.f32 	%f300, %f299, %f299;
	add.f32 	%f335, %f334, %f334;
	add.f32 	%f369, %f368, %f368;
	add.f32 	%f404, %f403, %f403;
	add.f32 	%f438, %f437, %f437;
	add.f32 	%f473, %f472, %f472;
	add.f32 	%f507, %f506, %f506;
	add.f32 	%f542, %f541, %f541;
	add.f32 	%f576, %f575, %f575;
	add.f32 	%f611, %f610, %f610;
	add.f32 	%f645, %f644, %f644;
	add.f32 	%f680, %f679, %f679;
	add.f32 	%f714, %f713, %f713;
	add.f32 	%f749, %f748, %f748;
	add.f32 	%f783, %f782, %f782;
	mov.b32 	%r425, %f832;
	mov.b32 	%r454, %f884;
	mov.b32 	%r477, %f938;
	mov.b32 	%r509, %f990;
	add.f32 	%f1043, %f1370, %f1370;
	add.f32 	%f1094, %f1374, %f1374;
	mov.b32 	%r569, %f1147;
	mov.b32 	%r597, %f1198;
	mov.b32 	%r274, %f266;
	mov.b32 	%r281, %f300;
	mov.b32 	%r292, %f335;
	mov.b32 	%r299, %f369;
	mov.b32 	%r310, %f404;
	mov.b32 	%r317, %f438;
	mov.b32 	%r328, %f473;
	mov.b32 	%r335, %f507;
	mov.b32 	%r346, %f542;
	mov.b32 	%r353, %f576;
	mov.b32 	%r364, %f611;
	mov.b32 	%r371, %f645;
	mov.b32 	%r382, %f680;
	mov.b32 	%r389, %f714;
	mov.b32 	%r400, %f749;
	mov.b32 	%r407, %f783;
	and.b32  	%r426, %r425, -2147483648;
	and.b32  	%r455, %r454, -2147483648;
	and.b32  	%r478, %r477, -2147483648;
	and.b32  	%r510, %r509, -2147483648;
	mov.b32 	%r529, %f1043;
	mov.b32 	%r553, %f1094;
	and.b32  	%r570, %r569, -2147483648;
	and.b32  	%r598, %r597, -2147483648;
	add.f32 	%f1252, %f1386, %f1386;
	and.b32  	%r275, %r274, -2147483648;
	and.b32  	%r282, %r281, -2147483648;
	and.b32  	%r293, %r292, -2147483648;
	and.b32  	%r300, %r299, -2147483648;
	and.b32  	%r311, %r310, -2147483648;
	and.b32  	%r318, %r317, -2147483648;
	and.b32  	%r329, %r328, -2147483648;
	and.b32  	%r336, %r335, -2147483648;
	and.b32  	%r347, %r346, -2147483648;
	and.b32  	%r354, %r353, -2147483648;
	and.b32  	%r365, %r364, -2147483648;
	and.b32  	%r372, %r371, -2147483648;
	and.b32  	%r383, %r382, -2147483648;
	and.b32  	%r390, %r389, -2147483648;
	and.b32  	%r401, %r400, -2147483648;
	and.b32  	%r408, %r407, -2147483648;
	or.b32  	%r427, %r426, 1056964608;
	or.b32  	%r456, %r455, 1056964608;
	or.b32  	%r479, %r478, 1056964608;
	or.b32  	%r511, %r510, 1056964608;
	and.b32  	%r530, %r529, -2147483648;
	and.b32  	%r554, %r553, -2147483648;
	or.b32  	%r571, %r570, 1056964608;
	or.b32  	%r599, %r598, 1056964608;
	mov.b32 	%r621, %f1252;
	or.b32  	%r276, %r275, 1056964608;
	or.b32  	%r283, %r282, 1056964608;
	or.b32  	%r294, %r293, 1056964608;
	or.b32  	%r301, %r300, 1056964608;
	or.b32  	%r312, %r311, 1056964608;
	or.b32  	%r319, %r318, 1056964608;
	or.b32  	%r330, %r329, 1056964608;
	or.b32  	%r337, %r336, 1056964608;
	or.b32  	%r348, %r347, 1056964608;
	or.b32  	%r355, %r354, 1056964608;
	or.b32  	%r366, %r365, 1056964608;
	or.b32  	%r373, %r372, 1056964608;
	or.b32  	%r384, %r383, 1056964608;
	or.b32  	%r391, %r390, 1056964608;
	or.b32  	%r402, %r401, 1056964608;
	or.b32  	%r409, %r408, 1056964608;
	mov.b32 	%f833, %r427;
	mov.b32 	%f885, %r456;
	mov.b32 	%f939, %r479;
	mov.b32 	%f991, %r511;
	or.b32  	%r531, %r530, 1056964608;
	or.b32  	%r555, %r554, 1056964608;
	mov.b32 	%f1148, %r571;
	mov.b32 	%f1199, %r599;
	and.b32  	%r622, %r621, -2147483648;
	mov.b32 	%f267, %r276;
	mov.b32 	%f301, %r283;
	mov.b32 	%f336, %r294;
	mov.b32 	%f370, %r301;
	mov.b32 	%f405, %r312;
	mov.b32 	%f439, %r319;
	mov.b32 	%f474, %r330;
	mov.b32 	%f508, %r337;
	mov.b32 	%f543, %r348;
	mov.b32 	%f577, %r355;
	mov.b32 	%f612, %r366;
	mov.b32 	%f646, %r373;
	mov.b32 	%f681, %r384;
	mov.b32 	%f715, %r391;
	mov.b32 	%f750, %r402;
	mov.b32 	%f784, %r409;
	add.f32 	%f834, %f832, %f833;
	abs.f32 	%f836, %f832;
	add.f32 	%f886, %f884, %f885;
	abs.f32 	%f888, %f884;
	add.f32 	%f940, %f938, %f939;
	abs.f32 	%f942, %f938;
	add.f32 	%f992, %f990, %f991;
	abs.f32 	%f994, %f990;
	mov.b32 	%f1044, %r531;
	mov.b32 	%f1095, %r555;
	add.f32 	%f1149, %f1147, %f1148;
	abs.f32 	%f1151, %f1147;
	add.f32 	%f1200, %f1198, %f1199;
	abs.f32 	%f1202, %f1198;
	or.b32  	%r623, %r622, 1056964608;
	add.f32 	%f268, %f266, %f267;
	abs.f32 	%f270, %f266;
	add.f32 	%f302, %f300, %f301;
	abs.f32 	%f304, %f300;
	add.f32 	%f337, %f335, %f336;
	abs.f32 	%f339, %f335;
	add.f32 	%f371, %f369, %f370;
	abs.f32 	%f373, %f369;
	add.f32 	%f406, %f404, %f405;
	abs.f32 	%f408, %f404;
	add.f32 	%f440, %f438, %f439;
	abs.f32 	%f442, %f438;
	add.f32 	%f475, %f473, %f474;
	abs.f32 	%f477, %f473;
	add.f32 	%f509, %f507, %f508;
	abs.f32 	%f511, %f507;
	add.f32 	%f544, %f542, %f543;
	abs.f32 	%f546, %f542;
	add.f32 	%f578, %f576, %f577;
	abs.f32 	%f580, %f576;
	add.f32 	%f613, %f611, %f612;
	abs.f32 	%f615, %f611;
	add.f32 	%f647, %f645, %f646;
	abs.f32 	%f649, %f645;
	add.f32 	%f682, %f680, %f681;
	abs.f32 	%f684, %f680;
	add.f32 	%f716, %f714, %f715;
	abs.f32 	%f718, %f714;
	add.f32 	%f751, %f749, %f750;
	abs.f32 	%f753, %f749;
	add.f32 	%f785, %f783, %f784;
	abs.f32 	%f787, %f783;
	cvt.rzi.f32.f32 	%f835, %f834;
	setp.gt.f32 	%p124, %f836, 0f4B000000;
	cvt.rzi.f32.f32 	%f887, %f886;
	setp.gt.f32 	%p144, %f888, 0f4B000000;
	cvt.rzi.f32.f32 	%f941, %f940;
	setp.gt.f32 	%p164, %f942, 0f4B000000;
	cvt.rzi.f32.f32 	%f993, %f992;
	setp.gt.f32 	%p184, %f994, 0f4B000000;
	add.f32 	%f1045, %f1043, %f1044;
	abs.f32 	%f1047, %f1043;
	add.f32 	%f1096, %f1094, %f1095;
	abs.f32 	%f1098, %f1094;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	setp.gt.f32 	%p244, %f1151, 0f4B000000;
	cvt.rzi.f32.f32 	%f1201, %f1200;
	setp.gt.f32 	%p264, %f1202, 0f4B000000;
	mov.b32 	%f1253, %r623;
	cvt.rzi.f32.f32 	%f269, %f268;
	setp.gt.f32 	%p16, %f270, 0f4B000000;
	cvt.rzi.f32.f32 	%f303, %f302;
	setp.gt.f32 	%p22, %f304, 0f4B000000;
	cvt.rzi.f32.f32 	%f338, %f337;
	setp.gt.f32 	%p28, %f339, 0f4B000000;
	cvt.rzi.f32.f32 	%f372, %f371;
	setp.gt.f32 	%p34, %f373, 0f4B000000;
	cvt.rzi.f32.f32 	%f407, %f406;
	setp.gt.f32 	%p40, %f408, 0f4B000000;
	cvt.rzi.f32.f32 	%f441, %f440;
	setp.gt.f32 	%p46, %f442, 0f4B000000;
	cvt.rzi.f32.f32 	%f476, %f475;
	setp.gt.f32 	%p52, %f477, 0f4B000000;
	cvt.rzi.f32.f32 	%f510, %f509;
	setp.gt.f32 	%p58, %f511, 0f4B000000;
	cvt.rzi.f32.f32 	%f545, %f544;
	setp.gt.f32 	%p64, %f546, 0f4B000000;
	cvt.rzi.f32.f32 	%f579, %f578;
	setp.gt.f32 	%p70, %f580, 0f4B000000;
	cvt.rzi.f32.f32 	%f614, %f613;
	setp.gt.f32 	%p76, %f615, 0f4B000000;
	cvt.rzi.f32.f32 	%f648, %f647;
	setp.gt.f32 	%p82, %f649, 0f4B000000;
	cvt.rzi.f32.f32 	%f683, %f682;
	setp.gt.f32 	%p88, %f684, 0f4B000000;
	cvt.rzi.f32.f32 	%f717, %f716;
	setp.gt.f32 	%p94, %f718, 0f4B000000;
	cvt.rzi.f32.f32 	%f752, %f751;
	setp.gt.f32 	%p100, %f753, 0f4B000000;
	cvt.rzi.f32.f32 	%f786, %f785;
	setp.gt.f32 	%p106, %f787, 0f4B000000;
	selp.f32 	%f837, %f832, %f835, %p124;
	cvt.rzi.f32.f32 	%f838, %f832;
	setp.lt.f32 	%p125, %f836, 0f3F000000;
	selp.f32 	%f889, %f884, %f887, %p144;
	cvt.rzi.f32.f32 	%f890, %f884;
	setp.lt.f32 	%p145, %f888, 0f3F000000;
	selp.f32 	%f943, %f938, %f941, %p164;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p165, %f942, 0f3F000000;
	selp.f32 	%f995, %f990, %f993, %p184;
	cvt.rzi.f32.f32 	%f996, %f990;
	setp.lt.f32 	%p185, %f994, 0f3F000000;
	cvt.rzi.f32.f32 	%f1046, %f1045;
	setp.gt.f32 	%p204, %f1047, 0f4B000000;
	cvt.rzi.f32.f32 	%f1097, %f1096;
	setp.gt.f32 	%p224, %f1098, 0f4B000000;
	selp.f32 	%f1152, %f1147, %f1150, %p244;
	cvt.rzi.f32.f32 	%f1153, %f1147;
	setp.lt.f32 	%p245, %f1151, 0f3F000000;
	selp.f32 	%f1203, %f1198, %f1201, %p264;
	cvt.rzi.f32.f32 	%f1204, %f1198;
	setp.lt.f32 	%p265, %f1202, 0f3F000000;
	add.f32 	%f1254, %f1252, %f1253;
	abs.f32 	%f1256, %f1252;
	selp.f32 	%f271, %f266, %f269, %p16;
	cvt.rzi.f32.f32 	%f272, %f266;
	setp.lt.f32 	%p17, %f270, 0f3F000000;
	selp.f32 	%f305, %f300, %f303, %p22;
	cvt.rzi.f32.f32 	%f306, %f300;
	setp.lt.f32 	%p23, %f304, 0f3F000000;
	selp.f32 	%f340, %f335, %f338, %p28;
	cvt.rzi.f32.f32 	%f341, %f335;
	setp.lt.f32 	%p29, %f339, 0f3F000000;
	selp.f32 	%f374, %f369, %f372, %p34;
	cvt.rzi.f32.f32 	%f375, %f369;
	setp.lt.f32 	%p35, %f373, 0f3F000000;
	selp.f32 	%f409, %f404, %f407, %p40;
	cvt.rzi.f32.f32 	%f410, %f404;
	setp.lt.f32 	%p41, %f408, 0f3F000000;
	selp.f32 	%f443, %f438, %f441, %p46;
	cvt.rzi.f32.f32 	%f444, %f438;
	setp.lt.f32 	%p47, %f442, 0f3F000000;
	selp.f32 	%f478, %f473, %f476, %p52;
	cvt.rzi.f32.f32 	%f479, %f473;
	setp.lt.f32 	%p53, %f477, 0f3F000000;
	selp.f32 	%f512, %f507, %f510, %p58;
	cvt.rzi.f32.f32 	%f513, %f507;
	setp.lt.f32 	%p59, %f511, 0f3F000000;
	selp.f32 	%f547, %f542, %f545, %p64;
	cvt.rzi.f32.f32 	%f548, %f542;
	setp.lt.f32 	%p65, %f546, 0f3F000000;
	selp.f32 	%f581, %f576, %f579, %p70;
	cvt.rzi.f32.f32 	%f582, %f576;
	setp.lt.f32 	%p71, %f580, 0f3F000000;
	selp.f32 	%f616, %f611, %f614, %p76;
	cvt.rzi.f32.f32 	%f617, %f611;
	setp.lt.f32 	%p77, %f615, 0f3F000000;
	selp.f32 	%f650, %f645, %f648, %p82;
	cvt.rzi.f32.f32 	%f651, %f645;
	setp.lt.f32 	%p83, %f649, 0f3F000000;
	selp.f32 	%f685, %f680, %f683, %p88;
	cvt.rzi.f32.f32 	%f686, %f680;
	setp.lt.f32 	%p89, %f684, 0f3F000000;
	selp.f32 	%f719, %f714, %f717, %p94;
	cvt.rzi.f32.f32 	%f720, %f714;
	setp.lt.f32 	%p95, %f718, 0f3F000000;
	selp.f32 	%f754, %f749, %f752, %p100;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p101, %f753, 0f3F000000;
	selp.f32 	%f788, %f783, %f786, %p106;
	cvt.rzi.f32.f32 	%f789, %f783;
	setp.lt.f32 	%p107, %f787, 0f3F000000;
	selp.f32 	%f839, %f838, %f837, %p125;
	selp.f32 	%f891, %f890, %f889, %p145;
	selp.f32 	%f945, %f944, %f943, %p165;
	selp.f32 	%f997, %f996, %f995, %p185;
	selp.f32 	%f1048, %f1043, %f1046, %p204;
	cvt.rzi.f32.f32 	%f1049, %f1043;
	setp.lt.f32 	%p205, %f1047, 0f3F000000;
	selp.f32 	%f1099, %f1094, %f1097, %p224;
	cvt.rzi.f32.f32 	%f1100, %f1094;
	setp.lt.f32 	%p225, %f1098, 0f3F000000;
	selp.f32 	%f1154, %f1153, %f1152, %p245;
	selp.f32 	%f1205, %f1204, %f1203, %p265;
	cvt.rzi.f32.f32 	%f1255, %f1254;
	setp.gt.f32 	%p284, %f1256, 0f4B000000;
	selp.f32 	%f273, %f272, %f271, %p17;
	selp.f32 	%f307, %f306, %f305, %p23;
	selp.f32 	%f342, %f341, %f340, %p29;
	selp.f32 	%f376, %f375, %f374, %p35;
	selp.f32 	%f411, %f410, %f409, %p41;
	selp.f32 	%f445, %f444, %f443, %p47;
	selp.f32 	%f480, %f479, %f478, %p53;
	selp.f32 	%f514, %f513, %f512, %p59;
	selp.f32 	%f549, %f548, %f547, %p65;
	selp.f32 	%f583, %f582, %f581, %p71;
	selp.f32 	%f618, %f617, %f616, %p77;
	selp.f32 	%f652, %f651, %f650, %p83;
	selp.f32 	%f687, %f686, %f685, %p89;
	selp.f32 	%f721, %f720, %f719, %p95;
	selp.f32 	%f756, %f755, %f754, %p101;
	selp.f32 	%f790, %f789, %f788, %p107;
	fma.rn.f32 	%f840, %f839, 0fBF000000, %f1354;
	fma.rn.f32 	%f892, %f891, 0fBF000000, %f1358;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1362;
	fma.rn.f32 	%f998, %f997, 0fBF000000, %f1366;
	selp.f32 	%f1050, %f1049, %f1048, %p205;
	selp.f32 	%f1101, %f1100, %f1099, %p225;
	fma.rn.f32 	%f1155, %f1154, 0fBF000000, %f1378;
	fma.rn.f32 	%f1206, %f1205, 0fBF000000, %f1382;
	selp.f32 	%f1257, %f1252, %f1255, %p284;
	cvt.rzi.f32.f32 	%f1258, %f1252;
	setp.lt.f32 	%p285, %f1256, 0f3F000000;
	fma.rn.f32 	%f274, %f273, 0fBF000000, %f265;
	fma.rn.f32 	%f308, %f307, 0fBF000000, %f299;
	fma.rn.f32 	%f343, %f342, 0fBF000000, %f334;
	fma.rn.f32 	%f377, %f376, 0fBF000000, %f368;
	fma.rn.f32 	%f412, %f411, 0fBF000000, %f403;
	fma.rn.f32 	%f446, %f445, 0fBF000000, %f437;
	fma.rn.f32 	%f481, %f480, 0fBF000000, %f472;
	fma.rn.f32 	%f515, %f514, 0fBF000000, %f506;
	fma.rn.f32 	%f550, %f549, 0fBF000000, %f541;
	fma.rn.f32 	%f584, %f583, 0fBF000000, %f575;
	fma.rn.f32 	%f619, %f618, 0fBF000000, %f610;
	fma.rn.f32 	%f653, %f652, 0fBF000000, %f644;
	fma.rn.f32 	%f688, %f687, 0fBF000000, %f679;
	fma.rn.f32 	%f722, %f721, 0fBF000000, %f713;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f748;
	fma.rn.f32 	%f791, %f790, 0fBF000000, %f782;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f893, %f892, %f892;
	mul.f32 	%f947, %f946, %f946;
	mul.f32 	%f999, %f998, %f998;
	fma.rn.f32 	%f1051, %f1050, 0fBF000000, %f1370;
	fma.rn.f32 	%f1102, %f1101, 0fBF000000, %f1374;
	mul.f32 	%f1156, %f1155, %f1155;
	mul.f32 	%f1207, %f1206, %f1206;
	selp.f32 	%f1259, %f1258, %f1257, %p285;
	mul.f32 	%f275, %f274, %f274;
	mul.f32 	%f309, %f308, %f308;
	mul.f32 	%f344, %f343, %f343;
	mul.f32 	%f378, %f377, %f377;
	mul.f32 	%f413, %f412, %f412;
	mul.f32 	%f447, %f446, %f446;
	mul.f32 	%f482, %f481, %f481;
	mul.f32 	%f516, %f515, %f515;
	mul.f32 	%f551, %f550, %f550;
	mul.f32 	%f585, %f584, %f584;
	mul.f32 	%f620, %f619, %f619;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f689, %f688, %f688;
	mul.f32 	%f723, %f722, %f722;
	mul.f32 	%f758, %f757, %f757;
	mul.f32 	%f792, %f791, %f791;
	fma.rn.f32 	%f842, %f841, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f843, %f841, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f894, %f893, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f895, %f893, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f948, %f947, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f949, %f947, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1000, %f999, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1001, %f999, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f1052, %f1051, %f1051;
	mul.f32 	%f1103, %f1102, %f1102;
	fma.rn.f32 	%f1157, %f1156, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1158, %f1156, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1208, %f1207, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1209, %f1207, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1260, %f1259, 0fBF000000, %f1386;
	cvt.rzi.s32.f32 	%r277, %f273;
	fma.rn.f32 	%f276, %f275, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f277, %f275, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r284, %f307;
	fma.rn.f32 	%f310, %f309, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f311, %f309, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r295, %f342;
	fma.rn.f32 	%f345, %f344, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f346, %f344, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r302, %f376;
	fma.rn.f32 	%f379, %f378, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f380, %f378, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r313, %f411;
	fma.rn.f32 	%f414, %f413, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f415, %f413, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r320, %f445;
	fma.rn.f32 	%f448, %f447, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f449, %f447, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r331, %f480;
	fma.rn.f32 	%f483, %f482, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f484, %f482, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r338, %f514;
	fma.rn.f32 	%f517, %f516, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f518, %f516, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r349, %f549;
	fma.rn.f32 	%f552, %f551, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f553, %f551, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r356, %f583;
	fma.rn.f32 	%f586, %f585, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f587, %f585, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r367, %f618;
	fma.rn.f32 	%f621, %f620, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f622, %f620, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r374, %f652;
	fma.rn.f32 	%f655, %f654, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f656, %f654, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r385, %f687;
	fma.rn.f32 	%f690, %f689, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f691, %f689, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r392, %f721;
	fma.rn.f32 	%f724, %f723, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f725, %f723, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r403, %f756;
	fma.rn.f32 	%f759, %f758, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f760, %f758, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r410, %f790;
	fma.rn.f32 	%f793, %f792, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f794, %f792, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r428, %f839;
	fma.rn.f32 	%f844, %f842, %f841, 0fC0A55DF6;
	fma.rn.f32 	%f845, %f843, %f841, 0f4081E0CF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	cvt.rzi.s32.f32 	%r457, %f891;
	fma.rn.f32 	%f896, %f894, %f893, 0fC0A55DF6;
	fma.rn.f32 	%f897, %f895, %f893, 0f4081E0CF;
	fma.rn.f32 	%f898, %f893, %f892, 0f00000000;
	cvt.rzi.s32.f32 	%r480, %f945;
	fma.rn.f32 	%f950, %f948, %f947, 0fC0A55DF6;
	fma.rn.f32 	%f951, %f949, %f947, 0f4081E0CF;
	fma.rn.f32 	%f952, %f947, %f946, 0f00000000;
	cvt.rzi.s32.f32 	%r512, %f997;
	fma.rn.f32 	%f1002, %f1000, %f999, 0fC0A55DF6;
	fma.rn.f32 	%f1003, %f1001, %f999, 0f4081E0CF;
	fma.rn.f32 	%f1004, %f999, %f998, 0f00000000;
	fma.rn.f32 	%f1053, %f1052, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1054, %f1052, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1104, %f1103, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1105, %f1103, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r572, %f1154;
	fma.rn.f32 	%f1159, %f1157, %f1156, 0fC0A55DF6;
	fma.rn.f32 	%f1160, %f1158, %f1156, 0f4081E0CF;
	fma.rn.f32 	%f1161, %f1156, %f1155, 0f00000000;
	cvt.rzi.s32.f32 	%r600, %f1205;
	fma.rn.f32 	%f1210, %f1208, %f1207, 0fC0A55DF6;
	fma.rn.f32 	%f1211, %f1209, %f1207, 0f4081E0CF;
	fma.rn.f32 	%f1212, %f1207, %f1206, 0f00000000;
	mul.f32 	%f1261, %f1260, %f1260;
	shl.b32 	%r209, %r1, 2;
	add.s32 	%r278, %r277, 1;
	fma.rn.f32 	%f278, %f276, %f275, 0fC0A55DF6;
	fma.rn.f32 	%f279, %f277, %f275, 0f4081E0CF;
	fma.rn.f32 	%f280, %f275, %f274, 0f00000000;
	add.s32 	%r285, %r284, 1;
	fma.rn.f32 	%f312, %f310, %f309, 0fC0A55DF6;
	fma.rn.f32 	%f313, %f311, %f309, 0f4081E0CF;
	fma.rn.f32 	%f314, %f309, %f308, 0f00000000;
	add.s32 	%r296, %r295, 1;
	fma.rn.f32 	%f347, %f345, %f344, 0fC0A55DF6;
	fma.rn.f32 	%f348, %f346, %f344, 0f4081E0CF;
	fma.rn.f32 	%f349, %f344, %f343, 0f00000000;
	add.s32 	%r303, %r302, 1;
	fma.rn.f32 	%f381, %f379, %f378, 0fC0A55DF6;
	fma.rn.f32 	%f382, %f380, %f378, 0f4081E0CF;
	fma.rn.f32 	%f383, %f378, %f377, 0f00000000;
	add.s32 	%r314, %r313, 1;
	fma.rn.f32 	%f416, %f414, %f413, 0fC0A55DF6;
	fma.rn.f32 	%f417, %f415, %f413, 0f4081E0CF;
	fma.rn.f32 	%f418, %f413, %f412, 0f00000000;
	add.s32 	%r321, %r320, 1;
	fma.rn.f32 	%f450, %f448, %f447, 0fC0A55DF6;
	fma.rn.f32 	%f451, %f449, %f447, 0f4081E0CF;
	fma.rn.f32 	%f452, %f447, %f446, 0f00000000;
	add.s32 	%r332, %r331, 1;
	fma.rn.f32 	%f485, %f483, %f482, 0fC0A55DF6;
	fma.rn.f32 	%f486, %f484, %f482, 0f4081E0CF;
	fma.rn.f32 	%f487, %f482, %f481, 0f00000000;
	add.s32 	%r339, %r338, 1;
	fma.rn.f32 	%f519, %f517, %f516, 0fC0A55DF6;
	fma.rn.f32 	%f520, %f518, %f516, 0f4081E0CF;
	fma.rn.f32 	%f521, %f516, %f515, 0f00000000;
	add.s32 	%r350, %r349, 1;
	fma.rn.f32 	%f554, %f552, %f551, 0fC0A55DF6;
	fma.rn.f32 	%f555, %f553, %f551, 0f4081E0CF;
	fma.rn.f32 	%f556, %f551, %f550, 0f00000000;
	add.s32 	%r357, %r356, 1;
	fma.rn.f32 	%f588, %f586, %f585, 0fC0A55DF6;
	fma.rn.f32 	%f589, %f587, %f585, 0f4081E0CF;
	fma.rn.f32 	%f590, %f585, %f584, 0f00000000;
	add.s32 	%r368, %r367, 1;
	fma.rn.f32 	%f623, %f621, %f620, 0fC0A55DF6;
	fma.rn.f32 	%f624, %f622, %f620, 0f4081E0CF;
	fma.rn.f32 	%f625, %f620, %f619, 0f00000000;
	add.s32 	%r375, %r374, 1;
	fma.rn.f32 	%f657, %f655, %f654, 0fC0A55DF6;
	fma.rn.f32 	%f658, %f656, %f654, 0f4081E0CF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	add.s32 	%r386, %r385, 1;
	fma.rn.f32 	%f692, %f690, %f689, 0fC0A55DF6;
	fma.rn.f32 	%f693, %f691, %f689, 0f4081E0CF;
	fma.rn.f32 	%f694, %f689, %f688, 0f00000000;
	add.s32 	%r393, %r392, 1;
	fma.rn.f32 	%f726, %f724, %f723, 0fC0A55DF6;
	fma.rn.f32 	%f727, %f725, %f723, 0f4081E0CF;
	fma.rn.f32 	%f728, %f723, %f722, 0f00000000;
	add.s32 	%r404, %r403, 1;
	fma.rn.f32 	%f761, %f759, %f758, 0fC0A55DF6;
	fma.rn.f32 	%f762, %f760, %f758, 0f4081E0CF;
	fma.rn.f32 	%f763, %f758, %f757, 0f00000000;
	add.s32 	%r411, %r410, 1;
	fma.rn.f32 	%f795, %f793, %f792, 0fC0A55DF6;
	fma.rn.f32 	%f796, %f794, %f792, 0f4081E0CF;
	fma.rn.f32 	%f797, %f792, %f791, 0f00000000;
	fma.rn.f32 	%f847, %f845, %f841, 0fC09DE9E6;
	fma.rn.f32 	%f848, %f844, %f846, 0f00000000;
	and.b32  	%r429, %r428, 1;
	fma.rn.f32 	%f899, %f897, %f893, 0fC09DE9E6;
	fma.rn.f32 	%f900, %f896, %f898, 0f00000000;
	and.b32  	%r458, %r457, 1;
	fma.rn.f32 	%f953, %f951, %f947, 0fC09DE9E6;
	fma.rn.f32 	%f954, %f950, %f952, 0f00000000;
	and.b32  	%r481, %r480, 1;
	fma.rn.f32 	%f1005, %f1003, %f999, 0fC09DE9E6;
	fma.rn.f32 	%f1006, %f1002, %f1004, 0f00000000;
	and.b32  	%r513, %r512, 1;
	cvt.rzi.s32.f32 	%r532, %f1050;
	fma.rn.f32 	%f1055, %f1053, %f1052, 0fC0A55DF6;
	fma.rn.f32 	%f1056, %f1054, %f1052, 0f4081E0CF;
	fma.rn.f32 	%f1057, %f1052, %f1051, 0f00000000;
	cvt.rzi.s32.f32 	%r556, %f1101;
	fma.rn.f32 	%f1106, %f1104, %f1103, 0fC0A55DF6;
	fma.rn.f32 	%f1107, %f1105, %f1103, 0f4081E0CF;
	fma.rn.f32 	%f1108, %f1103, %f1102, 0f00000000;
	fma.rn.f32 	%f1162, %f1160, %f1156, 0fC09DE9E6;
	fma.rn.f32 	%f1163, %f1159, %f1161, 0f00000000;
	and.b32  	%r573, %r572, 1;
	fma.rn.f32 	%f1213, %f1211, %f1207, 0fC09DE9E6;
	fma.rn.f32 	%f1214, %f1210, %f1212, 0f00000000;
	and.b32  	%r601, %r600, 1;
	fma.rn.f32 	%f1262, %f1261, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1263, %f1261, 0f3E684E12, 0fBFAAD2E0;
	and.b32  	%r260, %r209, 36;
	fma.rn.f32 	%f281, %f279, %f275, 0fC09DE9E6;
	fma.rn.f32 	%f282, %f278, %f280, 0f00000000;
	and.b32  	%r279, %r278, 1;
	fma.rn.f32 	%f315, %f313, %f309, 0fC09DE9E6;
	fma.rn.f32 	%f316, %f312, %f314, 0f00000000;
	and.b32  	%r286, %r285, 1;
	fma.rn.f32 	%f350, %f348, %f344, 0fC09DE9E6;
	fma.rn.f32 	%f351, %f347, %f349, 0f00000000;
	and.b32  	%r297, %r296, 1;
	fma.rn.f32 	%f384, %f382, %f378, 0fC09DE9E6;
	fma.rn.f32 	%f385, %f381, %f383, 0f00000000;
	and.b32  	%r304, %r303, 1;
	fma.rn.f32 	%f419, %f417, %f413, 0fC09DE9E6;
	fma.rn.f32 	%f420, %f416, %f418, 0f00000000;
	and.b32  	%r315, %r314, 1;
	fma.rn.f32 	%f453, %f451, %f447, 0fC09DE9E6;
	fma.rn.f32 	%f454, %f450, %f452, 0f00000000;
	and.b32  	%r322, %r321, 1;
	fma.rn.f32 	%f488, %f486, %f482, 0fC09DE9E6;
	fma.rn.f32 	%f489, %f485, %f487, 0f00000000;
	and.b32  	%r333, %r332, 1;
	fma.rn.f32 	%f522, %f520, %f516, 0fC09DE9E6;
	fma.rn.f32 	%f523, %f519, %f521, 0f00000000;
	and.b32  	%r340, %r339, 1;
	fma.rn.f32 	%f557, %f555, %f551, 0fC09DE9E6;
	fma.rn.f32 	%f558, %f554, %f556, 0f00000000;
	and.b32  	%r351, %r350, 1;
	fma.rn.f32 	%f591, %f589, %f585, 0fC09DE9E6;
	fma.rn.f32 	%f592, %f588, %f590, 0f00000000;
	and.b32  	%r358, %r357, 1;
	fma.rn.f32 	%f626, %f624, %f620, 0fC09DE9E6;
	fma.rn.f32 	%f627, %f623, %f625, 0f00000000;
	and.b32  	%r369, %r368, 1;
	fma.rn.f32 	%f660, %f658, %f654, 0fC09DE9E6;
	fma.rn.f32 	%f661, %f657, %f659, 0f00000000;
	and.b32  	%r376, %r375, 1;
	fma.rn.f32 	%f695, %f693, %f689, 0fC09DE9E6;
	fma.rn.f32 	%f696, %f692, %f694, 0f00000000;
	and.b32  	%r387, %r386, 1;
	fma.rn.f32 	%f729, %f727, %f723, 0fC09DE9E6;
	fma.rn.f32 	%f730, %f726, %f728, 0f00000000;
	and.b32  	%r394, %r393, 1;
	fma.rn.f32 	%f764, %f762, %f758, 0fC09DE9E6;
	fma.rn.f32 	%f765, %f761, %f763, 0f00000000;
	and.b32  	%r405, %r404, 1;
	fma.rn.f32 	%f798, %f796, %f792, 0fC09DE9E6;
	fma.rn.f32 	%f799, %f795, %f797, 0f00000000;
	and.b32  	%r412, %r411, 1;
	fma.rn.f32 	%f849, %f847, %f841, 0f3F800000;
	fma.rn.f32 	%f850, %f840, 0f40490FDB, %f848;
	setp.eq.b32 	%p126, %r429, 1;
	fma.rn.f32 	%f901, %f899, %f893, 0f3F800000;
	fma.rn.f32 	%f902, %f892, 0f40490FDB, %f900;
	setp.eq.b32 	%p146, %r458, 1;
	fma.rn.f32 	%f955, %f953, %f947, 0f3F800000;
	fma.rn.f32 	%f956, %f946, 0f40490FDB, %f954;
	setp.eq.b32 	%p166, %r481, 1;
	fma.rn.f32 	%f1007, %f1005, %f999, 0f3F800000;
	fma.rn.f32 	%f1008, %f998, 0f40490FDB, %f1006;
	setp.eq.b32 	%p186, %r513, 1;
	fma.rn.f32 	%f1058, %f1056, %f1052, 0fC09DE9E6;
	fma.rn.f32 	%f1059, %f1055, %f1057, 0f00000000;
	and.b32  	%r533, %r532, 1;
	fma.rn.f32 	%f1109, %f1107, %f1103, 0fC09DE9E6;
	fma.rn.f32 	%f1110, %f1106, %f1108, 0f00000000;
	and.b32  	%r557, %r556, 1;
	fma.rn.f32 	%f1164, %f1162, %f1156, 0f3F800000;
	fma.rn.f32 	%f1165, %f1155, 0f40490FDB, %f1163;
	setp.eq.b32 	%p246, %r573, 1;
	fma.rn.f32 	%f1215, %f1213, %f1207, 0f3F800000;
	fma.rn.f32 	%f1216, %f1206, 0f40490FDB, %f1214;
	setp.eq.b32 	%p266, %r601, 1;
	cvt.rzi.s32.f32 	%r624, %f1259;
	fma.rn.f32 	%f1264, %f1262, %f1261, 0fC0A55DF6;
	fma.rn.f32 	%f1265, %f1263, %f1261, 0f4081E0CF;
	fma.rn.f32 	%f1266, %f1261, %f1260, 0f00000000;
	or.b32  	%r261, %r260, %r212;
	and.b32  	%r213, %r1, 2;
	shl.b32 	%r214, %r2, 5;
	fma.rn.f32 	%f283, %f281, %f275, 0f3F800000;
	fma.rn.f32 	%f284, %f274, 0f40490FDB, %f282;
	setp.eq.b32 	%p18, %r279, 1;
	fma.rn.f32 	%f317, %f315, %f309, 0f3F800000;
	fma.rn.f32 	%f318, %f308, 0f40490FDB, %f316;
	setp.eq.b32 	%p24, %r286, 1;
	fma.rn.f32 	%f352, %f350, %f344, 0f3F800000;
	fma.rn.f32 	%f353, %f343, 0f40490FDB, %f351;
	setp.eq.b32 	%p30, %r297, 1;
	fma.rn.f32 	%f386, %f384, %f378, 0f3F800000;
	fma.rn.f32 	%f387, %f377, 0f40490FDB, %f385;
	setp.eq.b32 	%p36, %r304, 1;
	fma.rn.f32 	%f421, %f419, %f413, 0f3F800000;
	fma.rn.f32 	%f422, %f412, 0f40490FDB, %f420;
	setp.eq.b32 	%p42, %r315, 1;
	fma.rn.f32 	%f455, %f453, %f447, 0f3F800000;
	fma.rn.f32 	%f456, %f446, 0f40490FDB, %f454;
	setp.eq.b32 	%p48, %r322, 1;
	fma.rn.f32 	%f490, %f488, %f482, 0f3F800000;
	fma.rn.f32 	%f491, %f481, 0f40490FDB, %f489;
	setp.eq.b32 	%p54, %r333, 1;
	fma.rn.f32 	%f524, %f522, %f516, 0f3F800000;
	fma.rn.f32 	%f525, %f515, 0f40490FDB, %f523;
	setp.eq.b32 	%p60, %r340, 1;
	fma.rn.f32 	%f559, %f557, %f551, 0f3F800000;
	fma.rn.f32 	%f560, %f550, 0f40490FDB, %f558;
	setp.eq.b32 	%p66, %r351, 1;
	fma.rn.f32 	%f593, %f591, %f585, 0f3F800000;
	fma.rn.f32 	%f594, %f584, 0f40490FDB, %f592;
	setp.eq.b32 	%p72, %r358, 1;
	fma.rn.f32 	%f628, %f626, %f620, 0f3F800000;
	fma.rn.f32 	%f629, %f619, 0f40490FDB, %f627;
	setp.eq.b32 	%p78, %r369, 1;
	fma.rn.f32 	%f662, %f660, %f654, 0f3F800000;
	fma.rn.f32 	%f663, %f653, 0f40490FDB, %f661;
	setp.eq.b32 	%p84, %r376, 1;
	fma.rn.f32 	%f697, %f695, %f689, 0f3F800000;
	fma.rn.f32 	%f698, %f688, 0f40490FDB, %f696;
	setp.eq.b32 	%p90, %r387, 1;
	fma.rn.f32 	%f731, %f729, %f723, 0f3F800000;
	fma.rn.f32 	%f732, %f722, 0f40490FDB, %f730;
	setp.eq.b32 	%p96, %r394, 1;
	fma.rn.f32 	%f766, %f764, %f758, 0f3F800000;
	fma.rn.f32 	%f767, %f757, 0f40490FDB, %f765;
	setp.eq.b32 	%p102, %r405, 1;
	fma.rn.f32 	%f800, %f798, %f792, 0f3F800000;
	fma.rn.f32 	%f801, %f791, 0f40490FDB, %f799;
	setp.eq.b32 	%p108, %r412, 1;
	selp.f32 	%f851, %f849, %f850, %p126;
	and.b32  	%r430, %r428, 2;
	selp.f32 	%f903, %f901, %f902, %p146;
	and.b32  	%r459, %r457, 2;
	selp.f32 	%f957, %f955, %f956, %p166;
	and.b32  	%r482, %r480, 2;
	selp.f32 	%f1009, %f1007, %f1008, %p186;
	and.b32  	%r514, %r512, 2;
	fma.rn.f32 	%f1060, %f1058, %f1052, 0f3F800000;
	fma.rn.f32 	%f1061, %f1051, 0f40490FDB, %f1059;
	setp.eq.b32 	%p206, %r533, 1;
	fma.rn.f32 	%f1111, %f1109, %f1103, 0f3F800000;
	fma.rn.f32 	%f1112, %f1102, 0f40490FDB, %f1110;
	setp.eq.b32 	%p226, %r557, 1;
	selp.f32 	%f1166, %f1164, %f1165, %p246;
	and.b32  	%r574, %r572, 2;
	selp.f32 	%f1217, %f1215, %f1216, %p266;
	and.b32  	%r602, %r600, 2;
	fma.rn.f32 	%f1267, %f1265, %f1261, 0fC09DE9E6;
	fma.rn.f32 	%f1268, %f1264, %f1266, 0f00000000;
	and.b32  	%r625, %r624, 1;
	or.b32  	%r262, %r261, %r213;
	and.b32  	%r215, %r214, 8064;
	selp.f32 	%f285, %f283, %f284, %p18;
	and.b32  	%r280, %r278, 2;
	mov.f32 	%f286, 0f00000000;
	selp.f32 	%f319, %f317, %f318, %p24;
	and.b32  	%r287, %r285, 2;
	selp.f32 	%f354, %f352, %f353, %p30;
	and.b32  	%r298, %r296, 2;
	selp.f32 	%f388, %f386, %f387, %p36;
	and.b32  	%r305, %r303, 2;
	selp.f32 	%f423, %f421, %f422, %p42;
	and.b32  	%r316, %r314, 2;
	selp.f32 	%f457, %f455, %f456, %p48;
	and.b32  	%r323, %r321, 2;
	selp.f32 	%f492, %f490, %f491, %p54;
	and.b32  	%r334, %r332, 2;
	selp.f32 	%f526, %f524, %f525, %p60;
	and.b32  	%r341, %r339, 2;
	selp.f32 	%f561, %f559, %f560, %p66;
	and.b32  	%r352, %r350, 2;
	selp.f32 	%f595, %f593, %f594, %p72;
	and.b32  	%r359, %r357, 2;
	selp.f32 	%f630, %f628, %f629, %p78;
	and.b32  	%r370, %r368, 2;
	selp.f32 	%f664, %f662, %f663, %p84;
	and.b32  	%r377, %r375, 2;
	selp.f32 	%f699, %f697, %f698, %p90;
	and.b32  	%r388, %r386, 2;
	selp.f32 	%f733, %f731, %f732, %p96;
	and.b32  	%r395, %r393, 2;
	selp.f32 	%f768, %f766, %f767, %p102;
	and.b32  	%r406, %r404, 2;
	selp.f32 	%f802, %f800, %f801, %p108;
	and.b32  	%r413, %r411, 2;
	setp.eq.s32 	%p127, %r430, 0;
	neg.f32 	%f853, %f851;
	add.s32 	%r431, %r428, 1;
	cvt.rzi.f32.f32 	%f858, %f1354;
	setp.eq.s32 	%p147, %r459, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r460, %r457, 1;
	cvt.rzi.f32.f32 	%f910, %f1358;
	setp.eq.s32 	%p167, %r482, 0;
	neg.f32 	%f959, %f957;
	add.s32 	%r483, %r480, 1;
	cvt.rzi.f32.f32 	%f964, %f1362;
	setp.eq.s32 	%p187, %r514, 0;
	neg.f32 	%f1011, %f1009;
	add.s32 	%r515, %r512, 1;
	cvt.rzi.f32.f32 	%f1016, %f1366;
	selp.f32 	%f1062, %f1060, %f1061, %p206;
	and.b32  	%r534, %r532, 2;
	selp.f32 	%f1113, %f1111, %f1112, %p226;
	and.b32  	%r558, %r556, 2;
	setp.eq.s32 	%p247, %r574, 0;
	neg.f32 	%f1168, %f1166;
	add.s32 	%r575, %r572, 1;
	cvt.rzi.f32.f32 	%f1173, %f1378;
	setp.eq.s32 	%p267, %r602, 0;
	neg.f32 	%f1219, %f1217;
	add.s32 	%r603, %r600, 1;
	cvt.rzi.f32.f32 	%f1224, %f1382;
	fma.rn.f32 	%f1269, %f1267, %f1261, 0f3F800000;
	fma.rn.f32 	%f1270, %f1260, 0f40490FDB, %f1268;
	setp.eq.b32 	%p286, %r625, 1;
	or.b32  	%r263, %r262, %r215;
	and.b32  	%r217, %r216, 8;
	setp.eq.s32 	%p19, %r280, 0;
	sub.f32 	%f287, %f286, %f285;
	setp.eq.s32 	%p25, %r287, 0;
	sub.f32 	%f321, %f286, %f319;
	setp.eq.s32 	%p31, %r298, 0;
	sub.f32 	%f356, %f286, %f354;
	setp.eq.s32 	%p37, %r305, 0;
	sub.f32 	%f390, %f286, %f388;
	setp.eq.s32 	%p43, %r316, 0;
	sub.f32 	%f425, %f286, %f423;
	setp.eq.s32 	%p49, %r323, 0;
	sub.f32 	%f459, %f286, %f457;
	setp.eq.s32 	%p55, %r334, 0;
	sub.f32 	%f494, %f286, %f492;
	setp.eq.s32 	%p61, %r341, 0;
	sub.f32 	%f528, %f286, %f526;
	setp.eq.s32 	%p67, %r352, 0;
	sub.f32 	%f563, %f286, %f561;
	setp.eq.s32 	%p73, %r359, 0;
	sub.f32 	%f597, %f286, %f595;
	setp.eq.s32 	%p79, %r370, 0;
	sub.f32 	%f632, %f286, %f630;
	setp.eq.s32 	%p85, %r377, 0;
	sub.f32 	%f666, %f286, %f664;
	setp.eq.s32 	%p91, %r388, 0;
	sub.f32 	%f701, %f286, %f699;
	setp.eq.s32 	%p97, %r395, 0;
	sub.f32 	%f735, %f286, %f733;
	setp.eq.s32 	%p103, %r406, 0;
	sub.f32 	%f770, %f286, %f768;
	setp.eq.s32 	%p109, %r413, 0;
	sub.f32 	%f804, %f286, %f802;
	selp.f32 	%f852, %f850, %f849, %p126;
	selp.f32 	%f854, %f851, %f853, %p127;
	and.b32  	%r432, %r431, 2;
	setp.eq.f32 	%p129, %f858, %f1354;
	mul.f32 	%f859, %f1354, 0f00000000;
	selp.f32 	%f904, %f902, %f901, %p146;
	selp.f32 	%f906, %f903, %f905, %p147;
	and.b32  	%r461, %r460, 2;
	setp.eq.f32 	%p149, %f910, %f1358;
	mul.f32 	%f911, %f1358, 0f00000000;
	selp.f32 	%f958, %f956, %f955, %p166;
	selp.f32 	%f960, %f957, %f959, %p167;
	and.b32  	%r484, %r483, 2;
	setp.eq.f32 	%p169, %f964, %f1362;
	mul.f32 	%f965, %f1362, 0f00000000;
	selp.f32 	%f1010, %f1008, %f1007, %p186;
	selp.f32 	%f1012, %f1009, %f1011, %p187;
	and.b32  	%r516, %r515, 2;
	setp.eq.f32 	%p189, %f1016, %f1366;
	mul.f32 	%f1017, %f1366, 0f00000000;
	setp.eq.s32 	%p207, %r534, 0;
	neg.f32 	%f1064, %f1062;
	add.s32 	%r535, %r532, 1;
	cvt.rzi.f32.f32 	%f1069, %f1370;
	setp.eq.s32 	%p227, %r558, 0;
	neg.f32 	%f1115, %f1113;
	add.s32 	%r559, %r556, 1;
	cvt.rzi.f32.f32 	%f1120, %f1374;
	selp.f32 	%f1167, %f1165, %f1164, %p246;
	selp.f32 	%f1169, %f1166, %f1168, %p247;
	and.b32  	%r576, %r575, 2;
	setp.eq.f32 	%p249, %f1173, %f1378;
	mul.f32 	%f1174, %f1378, 0f00000000;
	selp.f32 	%f1218, %f1216, %f1215, %p266;
	selp.f32 	%f1220, %f1217, %f1219, %p267;
	and.b32  	%r604, %r603, 2;
	setp.eq.f32 	%p269, %f1224, %f1382;
	mul.f32 	%f1225, %f1382, 0f00000000;
	selp.f32 	%f1271, %f1269, %f1270, %p286;
	and.b32  	%r626, %r624, 2;
	or.b32  	%r264, %r263, %r217;
	selp.f32 	%f288, %f285, %f287, %p19;
	selp.f32 	%f322, %f319, %f321, %p25;
	selp.f32 	%f357, %f354, %f356, %p31;
	selp.f32 	%f391, %f388, %f390, %p37;
	selp.f32 	%f426, %f423, %f425, %p43;
	selp.f32 	%f460, %f457, %f459, %p49;
	selp.f32 	%f495, %f492, %f494, %p55;
	selp.f32 	%f529, %f526, %f528, %p61;
	selp.f32 	%f564, %f561, %f563, %p67;
	selp.f32 	%f598, %f595, %f597, %p73;
	selp.f32 	%f633, %f630, %f632, %p79;
	selp.f32 	%f667, %f664, %f666, %p85;
	selp.f32 	%f702, %f699, %f701, %p91;
	selp.f32 	%f736, %f733, %f735, %p97;
	selp.f32 	%f771, %f768, %f770, %p103;
	selp.f32 	%f805, %f802, %f804, %p109;
	setp.eq.s32 	%p128, %r432, 0;
	sub.f32 	%f856, %f286, %f852;
	selp.f32 	%f88, %f859, %f854, %p129;
	abs.f32 	%f860, %f1354;
	setp.eq.s32 	%p148, %r461, 0;
	sub.f32 	%f908, %f286, %f904;
	selp.f32 	%f912, %f911, %f906, %p149;
	abs.f32 	%f913, %f1358;
	setp.eq.s32 	%p168, %r484, 0;
	sub.f32 	%f962, %f286, %f958;
	selp.f32 	%f124, %f965, %f960, %p169;
	abs.f32 	%f966, %f1362;
	setp.eq.s32 	%p188, %r516, 0;
	sub.f32 	%f1014, %f286, %f1010;
	selp.f32 	%f1018, %f1017, %f1012, %p189;
	abs.f32 	%f1019, %f1366;
	selp.f32 	%f1063, %f1061, %f1060, %p206;
	selp.f32 	%f1065, %f1062, %f1064, %p207;
	and.b32  	%r536, %r535, 2;
	setp.eq.f32 	%p209, %f1069, %f1370;
	mul.f32 	%f1070, %f1370, 0f00000000;
	selp.f32 	%f1114, %f1112, %f1111, %p226;
	selp.f32 	%f1116, %f1113, %f1115, %p227;
	and.b32  	%r560, %r559, 2;
	setp.eq.f32 	%p229, %f1120, %f1374;
	mul.f32 	%f1121, %f1374, 0f00000000;
	setp.eq.s32 	%p248, %r576, 0;
	sub.f32 	%f1171, %f286, %f1167;
	selp.f32 	%f198, %f1174, %f1169, %p249;
	abs.f32 	%f1175, %f1378;
	setp.eq.s32 	%p268, %r604, 0;
	sub.f32 	%f1222, %f286, %f1218;
	selp.f32 	%f1226, %f1225, %f1220, %p269;
	abs.f32 	%f1227, %f1382;
	setp.eq.s32 	%p287, %r626, 0;
	neg.f32 	%f1273, %f1271;
	add.s32 	%r627, %r624, 1;
	cvt.rzi.f32.f32 	%f1278, %f1386;
	shr.u32 	%r265, %r264, 1;
	mul.f32 	%f254, %f288, %f288;
	mul.f32 	%f4, %f322, %f322;
	mul.f32 	%f8, %f357, %f357;
	mul.f32 	%f13, %f391, %f391;
	mul.f32 	%f17, %f426, %f426;
	mul.f32 	%f22, %f460, %f460;
	mul.f32 	%f26, %f495, %f495;
	mul.f32 	%f31, %f529, %f529;
	mul.f32 	%f35, %f564, %f564;
	mul.f32 	%f40, %f598, %f598;
	mul.f32 	%f44, %f633, %f633;
	mul.f32 	%f49, %f667, %f667;
	mul.f32 	%f53, %f702, %f702;
	mul.f32 	%f58, %f736, %f736;
	mul.f32 	%f62, %f771, %f771;
	mul.f32 	%f67, %f805, %f805;
	selp.f32 	%f857, %f852, %f856, %p128;
	setp.gt.f32 	%p130, %f860, 0f4B800000;
	add.f32 	%f861, %f88, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p148;
	setp.gt.f32 	%p150, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f963, %f958, %f962, %p168;
	setp.gt.f32 	%p170, %f966, 0f4B800000;
	add.f32 	%f967, %f124, 0f3F800000;
	selp.f32 	%f1015, %f1010, %f1014, %p188;
	setp.gt.f32 	%p190, %f1019, 0f4B800000;
	add.f32 	%f1020, %f1018, 0f3F800000;
	setp.eq.s32 	%p208, %r536, 0;
	sub.f32 	%f1067, %f286, %f1063;
	selp.f32 	%f161, %f1070, %f1065, %p209;
	abs.f32 	%f1071, %f1370;
	setp.eq.s32 	%p228, %r560, 0;
	sub.f32 	%f1118, %f286, %f1114;
	selp.f32 	%f1122, %f1121, %f1116, %p229;
	abs.f32 	%f1123, %f1374;
	selp.f32 	%f1172, %f1167, %f1171, %p248;
	setp.gt.f32 	%p250, %f1175, 0f4B800000;
	add.f32 	%f1176, %f198, 0f3F800000;
	selp.f32 	%f1223, %f1218, %f1222, %p268;
	setp.gt.f32 	%p270, %f1227, 0f4B800000;
	add.f32 	%f1228, %f1226, 0f3F800000;
	selp.f32 	%f1272, %f1270, %f1269, %p286;
	selp.f32 	%f1274, %f1271, %f1273, %p287;
	and.b32  	%r628, %r627, 2;
	setp.eq.f32 	%p289, %f1278, %f1386;
	mul.f32 	%f1279, %f1386, 0f00000000;
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd70, %r265, 4;
	mul.f32 	%f292, %f254, 0f3B8B2FF9;
	mul.f32 	%f326, %f4, 0f3B8B2FF9;
	mul.f32 	%f361, %f8, 0f3B8B2FF9;
	mul.f32 	%f395, %f13, 0f3B8B2FF9;
	mul.f32 	%f430, %f17, 0f3B8B2FF9;
	mul.f32 	%f464, %f22, 0f3B8B2FF9;
	mul.f32 	%f499, %f26, 0f3B8B2FF9;
	mul.f32 	%f533, %f31, 0f3B8B2FF9;
	mul.f32 	%f568, %f35, 0f3B8B2FF9;
	mul.f32 	%f602, %f40, 0f3B8B2FF9;
	mul.f32 	%f637, %f44, 0f3B8B2FF9;
	mul.f32 	%f671, %f49, 0f3B8B2FF9;
	mul.f32 	%f706, %f53, 0f3B8B2FF9;
	mul.f32 	%f740, %f58, 0f3B8B2FF9;
	mul.f32 	%f775, %f62, 0f3B8B2FF9;
	mul.f32 	%f808, %f67, 0f3B8B2FF9;
	selp.f32 	%f89, %f861, %f857, %p130;
	selp.f32 	%f915, %f914, %f909, %p150;
	selp.f32 	%f125, %f967, %f963, %p170;
	selp.f32 	%f1021, %f1020, %f1015, %p190;
	selp.f32 	%f1068, %f1063, %f1067, %p208;
	setp.gt.f32 	%p210, %f1071, 0f4B800000;
	add.f32 	%f1072, %f161, 0f3F800000;
	selp.f32 	%f1119, %f1114, %f1118, %p228;
	setp.gt.f32 	%p230, %f1123, 0f4B800000;
	add.f32 	%f1124, %f1122, 0f3F800000;
	selp.f32 	%f199, %f1176, %f1172, %p250;
	selp.f32 	%f1229, %f1228, %f1223, %p270;
	setp.eq.s32 	%p288, %r628, 0;
	sub.f32 	%f1276, %f286, %f1272;
	selp.f32 	%f234, %f1279, %f1274, %p289;
	abs.f32 	%f1280, %f1386;
	add.s64 	%rd71, %rd1, %rd70;
	mul.f32 	%f3, %f292, %f1336;
	mul.f32 	%f327, %f326, %f1337;
	mul.f32 	%f12, %f361, %f1338;
	mul.f32 	%f396, %f395, %f1339;
	mul.f32 	%f21, %f430, %f1340;
	mul.f32 	%f465, %f464, %f1341;
	mul.f32 	%f30, %f499, %f1342;
	mul.f32 	%f534, %f533, %f1343;
	mul.f32 	%f39, %f568, %f1344;
	mul.f32 	%f603, %f602, %f1345;
	mul.f32 	%f48, %f637, %f1346;
	mul.f32 	%f672, %f671, %f1347;
	mul.f32 	%f57, %f706, %f1348;
	mul.f32 	%f741, %f740, %f1349;
	mul.f32 	%f66, %f775, %f1350;
	mul.f32 	%f809, %f808, %f1351;
	mov.b32 	%r444, %f915;
	mov.b32 	%r443, %f89;
	mov.b32 	%r450, %f912;
	mov.b32 	%r449, %f88;
	mov.b32 	%r499, %f1021;
	mov.b32 	%r498, %f125;
	mov.b32 	%r505, %f1018;
	mov.b32 	%r504, %f124;
	selp.f32 	%f162, %f1072, %f1068, %p210;
	selp.f32 	%f1125, %f1124, %f1119, %p230;
	mov.b32 	%r587, %f1229;
	mov.b32 	%r586, %f199;
	mov.b32 	%r593, %f1226;
	mov.b32 	%r592, %f198;
	selp.f32 	%f1277, %f1272, %f1276, %p288;
	setp.gt.f32 	%p290, %f1280, 0f4B800000;
	add.f32 	%f1281, %f234, 0f3F800000;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	and.b32  	%r210, %r209, 32;
	and.b32  	%r211, %r209, 4;
	ld.global.u32 	%r218, [%rd71];
	ld.global.u32 	%r219, [%rd71+128];
	mov.b32 	%r290, %f327;
	mov.b32 	%r289, %f3;
	mov.b32 	%r308, %f396;
	mov.b32 	%r307, %f12;
	mov.b32 	%r326, %f465;
	mov.b32 	%r325, %f21;
	mov.b32 	%r344, %f534;
	mov.b32 	%r343, %f30;
	mov.b32 	%r362, %f603;
	mov.b32 	%r361, %f39;
	mov.b32 	%r380, %f672;
	mov.b32 	%r379, %f48;
	mov.b32 	%r398, %f741;
	mov.b32 	%r397, %f57;
	mov.b32 	%r416, %f809;
	mov.b32 	%r415, %f66;
	xor.b32  	%r502, %r505, -2147483648;
	xor.b32  	%r501, %r504, -2147483648;
	mov.b32 	%r549, %f1125;
	mov.b32 	%r548, %f162;
	mov.b32 	%r552, %f1122;
	mov.b32 	%r551, %f161;
	xor.b32  	%r590, %r593, -2147483648;
	xor.b32  	%r589, %r592, -2147483648;
	selp.f32 	%f235, %f1281, %f1277, %p290;
	// begin inline asm
	cvt.rn.f16x2.f32 %r288, %r290, %r289;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r306, %r308, %r307;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r324, %r326, %r325;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r342, %r344, %r343;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r360, %r362, %r361;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r378, %r380, %r379;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r396, %r398, %r397;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r414, %r416, %r415;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r442, %r444, %r443;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r445, %r444, %r443;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r448, %r450, %r449;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r451, %r450, %r449;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r497, %r499, %r498;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r500, %r502, %r501;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r503, %r505, %r504;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r506, %r499, %r498;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r547, %r549, %r548;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r550, %r552, %r551;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r585, %r587, %r586;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r588, %r590, %r589;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r591, %r593, %r592;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r594, %r587, %r586;
	// end inline asm
	add.f32 	%f1304, %f1390, %f1390;
	mov.b32 	%r644, %f1304;
	and.b32  	%r645, %r644, -2147483648;
	or.b32  	%r646, %r645, 1056964608;
	mov.b32 	%f1305, %r646;
	add.f32 	%f1306, %f1304, %f1305;
	cvt.rzi.f32.f32 	%f1307, %f1306;
	abs.f32 	%f1308, %f1304;
	setp.gt.f32 	%p304, %f1308, 0f4B000000;
	selp.f32 	%f1309, %f1304, %f1307, %p304;
	cvt.rzi.f32.f32 	%f1310, %f1304;
	setp.lt.f32 	%p305, %f1308, 0f3F000000;
	selp.f32 	%f1311, %f1310, %f1309, %p305;
	cvt.rzi.s32.f32 	%r647, %f1311;
	fma.rn.f32 	%f1312, %f1311, 0fBF000000, %f1390;
	mul.f32 	%f1313, %f1312, %f1312;
	fma.rn.f32 	%f1314, %f1313, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1315, %f1313, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1316, %f1314, %f1313, 0fC0A55DF6;
	fma.rn.f32 	%f1317, %f1315, %f1313, 0f4081E0CF;
	fma.rn.f32 	%f1318, %f1313, %f1312, 0f00000000;
	fma.rn.f32 	%f1319, %f1317, %f1313, 0fC09DE9E6;
	fma.rn.f32 	%f1320, %f1316, %f1318, 0f00000000;
	fma.rn.f32 	%f1321, %f1319, %f1313, 0f3F800000;
	fma.rn.f32 	%f1322, %f1312, 0f40490FDB, %f1320;
	and.b32  	%r648, %r647, 1;
	setp.eq.b32 	%p306, %r648, 1;
	selp.f32 	%f1323, %f1321, %f1322, %p306;
	selp.f32 	%f1324, %f1322, %f1321, %p306;
	and.b32  	%r649, %r647, 2;
	setp.eq.s32 	%p307, %r649, 0;
	neg.f32 	%f1325, %f1323;
	selp.f32 	%f1326, %f1323, %f1325, %p307;
	add.s32 	%r650, %r647, 1;
	and.b32  	%r651, %r650, 2;
	setp.eq.s32 	%p308, %r651, 0;
	sub.f32 	%f1328, %f286, %f1324;
	selp.f32 	%f1329, %f1324, %f1328, %p308;
	cvt.rzi.f32.f32 	%f1330, %f1390;
	setp.eq.f32 	%p309, %f1330, %f1390;
	mul.f32 	%f1331, %f1390, 0f00000000;
	selp.f32 	%f1332, %f1331, %f1326, %p309;
	abs.f32 	%f1333, %f1390;
	setp.gt.f32 	%p310, %f1333, 0f4B800000;
	add.f32 	%f1334, %f1332, 0f3F800000;
	selp.f32 	%f1335, %f1334, %f1329, %p310;
	mov.b32 	%r640, %f1335;
	mov.b32 	%r639, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r638, %r640, %r639;
	// end inline asm
	mov.b32 	%r643, %f1332;
	mov.b32 	%r642, %f234;
	// begin inline asm
	cvt.rn.f16x2.f32 %r641, %r643, %r642;
	// end inline asm
	shl.b32 	%r124, %r5, 13;
	and.b32  	%r125, %r214, 64;
	and.b32  	%r653, %r209, 28;
	and.b32  	%r654, %r214, 32;
	shl.b32 	%r655, %r1, 3;
	and.b32  	%r126, %r655, 64;
	and.b32  	%r127, %r216, 32;
	or.b32  	%r656, %r125, %r124;
	or.b32  	%r657, %r656, %r654;
	or.b32  	%r128, %r657, %r653;
	and.b32  	%r658, %r214, 96;
	or.b32  	%r129, %r658, %r653;
	and.b32  	%r130, %r1, 8;
	shl.b32 	%r659, %r1, 4;
	or.b32  	%r660, %r659, %r130;
	shr.u32 	%r661, %r660, 2;
	and.b32  	%r662, %r661, 30;
	and.b32  	%r663, %r3, 1;
	mul.lo.s32 	%r664, %r663, 2080;
	shr.u32 	%r665, %r3, 1;
	bfe.u32 	%r666, %r3, 1, 1;
	shr.u32 	%r667, %r3, 3;
	bfe.u32 	%r668, %r3, 2, 1;
	or.b32  	%r669, %r662, %r664;
	mad.lo.s32 	%r670, %r224, 65, %r669;
	mad.lo.s32 	%r671, %r666, 1040, %r670;
	mad.lo.s32 	%r672, %r667, 260, %r671;
	mad.lo.s32 	%r673, %r668, 520, %r672;
	mul.wide.u32 	%rd72, %r673, 4;
	mov.u64 	%rd73, shmem;
	add.s64 	%rd5, %rd73, %rd72;
	add.s32 	%r674, %r673, 32;
	mul.wide.u32 	%rd74, %r674, 4;
	add.s64 	%rd6, %rd73, %rd74;
	add.s32 	%r675, %r673, 1;
	mul.wide.u32 	%rd75, %r675, 4;
	add.s64 	%rd7, %rd73, %rd75;
	add.s32 	%r676, %r673, 33;
	mul.wide.u32 	%rd76, %r676, 4;
	add.s64 	%rd8, %rd73, %rd76;
	add.s32 	%r677, %r673, 130;
	mul.wide.u32 	%rd77, %r677, 4;
	add.s64 	%rd9, %rd73, %rd77;
	add.s32 	%r678, %r673, 162;
	mul.wide.u32 	%rd78, %r678, 4;
	add.s64 	%rd10, %rd73, %rd78;
	add.s32 	%r679, %r673, 131;
	mul.wide.u32 	%rd79, %r679, 4;
	add.s64 	%rd11, %rd73, %rd79;
	add.s32 	%r680, %r673, 163;
	mul.wide.u32 	%rd80, %r680, 4;
	add.s64 	%rd12, %rd73, %rd80;
	add.s32 	%r681, %r673, 4161;
	mul.wide.u32 	%rd81, %r681, 4;
	add.s64 	%rd13, %rd73, %rd81;
	add.s32 	%r682, %r673, 4193;
	mul.wide.u32 	%rd82, %r682, 4;
	add.s64 	%rd14, %rd73, %rd82;
	add.s32 	%r683, %r673, 4162;
	mul.wide.u32 	%rd83, %r683, 4;
	add.s64 	%rd15, %rd73, %rd83;
	add.s32 	%r684, %r673, 4194;
	mul.wide.u32 	%rd84, %r684, 4;
	add.s64 	%rd16, %rd73, %rd84;
	add.s32 	%r685, %r673, 4291;
	mul.wide.u32 	%rd85, %r685, 4;
	add.s64 	%rd17, %rd73, %rd85;
	add.s32 	%r686, %r673, 4323;
	mul.wide.u32 	%rd86, %r686, 4;
	add.s64 	%rd18, %rd73, %rd86;
	add.s32 	%r687, %r673, 4292;
	mul.wide.u32 	%rd87, %r687, 4;
	add.s64 	%rd19, %rd73, %rd87;
	add.s32 	%r688, %r673, 4324;
	mul.wide.u32 	%rd88, %r688, 4;
	add.s64 	%rd20, %rd73, %rd88;
	and.b32  	%r689, %r4, 32;
	mul.lo.s32 	%r690, %r222, 130;
	mul.lo.s32 	%r691, %r221, 65;
	mul.lo.s32 	%r692, %r226, 1040;
	mul.lo.s32 	%r693, %r223, 260;
	mul.lo.s32 	%r694, %r224, 520;
	or.b32  	%r695, %r689, %r665;
	or.b32  	%r696, %r695, 8;
	or.b32  	%r697, %r695, 16;
	or.b32  	%r698, %r695, 24;
	or.b32  	%r699, %r665, 2080;
	or.b32  	%r700, %r665, 2088;
	or.b32  	%r701, %r665, 2096;
	or.b32  	%r702, %r665, 2104;
	or.b32  	%r703, %r215, %r211;
	or.b32  	%r704, %r703, %r210;
	or.b32  	%r705, %r704, %r212;
	or.b32  	%r706, %r705, %r213;
	or.b32  	%r707, %r706, %r217;
	bfe.u32 	%r708, %r707, 1, 6;
	mul.lo.s32 	%r709, %r708, 65;
	or.b32  	%r710, %r707, 64;
	shr.u32 	%r711, %r710, 31;
	add.s32 	%r712, %r710, %r711;
	shr.s32 	%r713, %r712, 1;
	shr.s32 	%r714, %r712, 31;
	shr.u32 	%r715, %r714, 26;
	add.s32 	%r716, %r713, %r715;
	and.b32  	%r717, %r716, -64;
	sub.s32 	%r718, %r713, %r717;
	mul.lo.s32 	%r719, %r718, 65;
	shl.b32 	%r720, %r3, 1;
	or.b32  	%r721, %r720, %r224;
	mul.lo.s32 	%r722, %r721, 65;
	add.s32 	%r723, %r722, %r662;
	mul.wide.u32 	%rd89, %r723, 4;
	add.s64 	%rd21, %rd73, %rd89;
	cvt.u64.u32 	%rd90, %r722;
	cvt.u64.u32 	%rd91, %r662;
	add.s64 	%rd92, %rd91, %rd90;
	shl.b64 	%rd93, %rd92, 2;
	add.s64 	%rd22, %rd73, %rd93;
	or.b32  	%r724, %r721, 32;
	mul.lo.s32 	%r725, %r724, 65;
	add.s32 	%r726, %r725, %r662;
	mul.wide.u32 	%rd94, %r726, 4;
	add.s64 	%rd23, %rd73, %rd94;
	cvt.u64.u32 	%rd95, %r725;
	add.s64 	%rd96, %rd91, %rd95;
	shl.b64 	%rd97, %rd96, 2;
	add.s64 	%rd24, %rd73, %rd97;
	or.b32  	%r727, %r661, 4193;
	add.s32 	%r728, %r727, %r722;
	mul.wide.u32 	%rd98, %r728, 4;
	add.s64 	%rd25, %rd73, %rd98;
	add.s32 	%r729, %r727, %r725;
	mul.wide.u32 	%rd99, %r729, 4;
	add.s64 	%rd26, %rd73, %rd99;
	shl.b32 	%r730, %r7, 20;
	add.s32 	%r731, %r730, -3145728;
	or.b32  	%r732, %r225, %r215;
	shl.b32 	%r733, %r3, 9;
	shl.b32 	%r734, %r732, 7;
	or.b32  	%r131, %r733, %r734;
	or.b32  	%r132, %r654, %r653;
	cvt.s64.s32 	%rd27, %r731;
	add.s32 	%r735, %r702, %r692;
	add.s32 	%r736, %r735, %r694;
	add.s32 	%r737, %r736, %r693;
	add.s32 	%r738, %r737, %r690;
	add.s32 	%r739, %r738, %r691;
	add.s32 	%r740, %r739, %r689;
	mul.wide.u32 	%rd28, %r740, 4;
	add.s32 	%r741, %r701, %r692;
	add.s32 	%r742, %r741, %r694;
	add.s32 	%r743, %r742, %r693;
	add.s32 	%r744, %r743, %r690;
	add.s32 	%r745, %r744, %r691;
	add.s32 	%r746, %r745, %r689;
	mul.wide.u32 	%rd29, %r746, 4;
	add.s32 	%r747, %r700, %r692;
	add.s32 	%r748, %r747, %r694;
	add.s32 	%r749, %r748, %r693;
	add.s32 	%r750, %r749, %r690;
	add.s32 	%r751, %r750, %r691;
	add.s32 	%r752, %r751, %r689;
	mul.wide.u32 	%rd30, %r752, 4;
	add.s32 	%r753, %r699, %r692;
	add.s32 	%r754, %r753, %r694;
	add.s32 	%r755, %r754, %r693;
	add.s32 	%r756, %r755, %r690;
	add.s32 	%r757, %r756, %r691;
	add.s32 	%r758, %r757, %r689;
	mul.wide.u32 	%rd31, %r758, 4;
	add.s32 	%r759, %r698, %r719;
	mul.wide.s32 	%rd32, %r759, 4;
	add.s32 	%r760, %r698, %r709;
	mul.wide.u32 	%rd33, %r760, 4;
	add.s32 	%r761, %r698, %r692;
	add.s32 	%r762, %r761, %r694;
	add.s32 	%r763, %r762, %r693;
	add.s32 	%r764, %r763, %r690;
	add.s32 	%r765, %r764, %r691;
	mul.wide.u32 	%rd34, %r765, 4;
	add.s32 	%r766, %r697, %r719;
	mul.wide.s32 	%rd35, %r766, 4;
	add.s32 	%r767, %r697, %r709;
	mul.wide.u32 	%rd36, %r767, 4;
	add.s32 	%r768, %r697, %r692;
	add.s32 	%r769, %r768, %r694;
	add.s32 	%r770, %r769, %r693;
	add.s32 	%r771, %r770, %r690;
	add.s32 	%r772, %r771, %r691;
	mul.wide.u32 	%rd37, %r772, 4;
	add.s32 	%r773, %r696, %r719;
	mul.wide.s32 	%rd38, %r773, 4;
	add.s32 	%r774, %r696, %r709;
	mul.wide.u32 	%rd39, %r774, 4;
	add.s32 	%r775, %r696, %r692;
	add.s32 	%r776, %r775, %r694;
	add.s32 	%r777, %r776, %r693;
	add.s32 	%r778, %r777, %r690;
	add.s32 	%r779, %r778, %r691;
	mul.wide.u32 	%rd40, %r779, 4;
	add.s32 	%r780, %r695, %r719;
	mul.wide.s32 	%rd41, %r780, 4;
	add.s32 	%r781, %r695, %r709;
	mul.wide.u32 	%rd42, %r781, 4;
	add.s32 	%r782, %r695, %r692;
	add.s32 	%r783, %r782, %r694;
	add.s32 	%r784, %r783, %r693;
	add.s32 	%r785, %r784, %r690;
	add.s32 	%r786, %r785, %r691;
	mul.wide.u32 	%rd43, %r786, 4;
	setp.eq.s32 	%p312, %r130, 0;
	mov.u16 	%rs2380, 25600;
	mov.u16 	%rs2172, 21504;
	mov.u16 	%rs2388, 18432;
	mov.u16 	%rs2306, -14592;
	mov.u32 	%r16357, %r16335;
	mov.u32 	%r16406, %r16335;
	mov.u32 	%r16405, %r16335;
	mov.u32 	%r16404, %r16335;
	mov.u32 	%r16403, %r16335;
	mov.u32 	%r16402, %r16335;
	mov.u32 	%r16401, %r16335;
	mov.u32 	%r16400, %r16335;
	mov.u32 	%r16399, %r16335;
	mov.u32 	%r16398, %r16335;
	mov.u32 	%r16397, %r16335;
	mov.u32 	%r16396, %r16335;
	mov.u32 	%r16395, %r16335;
	mov.u32 	%r16394, %r16335;
	mov.u32 	%r16393, %r16335;
	mov.u32 	%r16392, %r16335;
	mov.u32 	%r16391, %r16335;
	mov.u32 	%r16390, %r16335;
	mov.u32 	%r16389, %r16335;
	mov.u32 	%r16388, %r16335;
	mov.u32 	%r16387, %r16335;
	mov.u32 	%r16386, %r16335;
	mov.u32 	%r16385, %r16335;
	mov.u32 	%r16384, %r16335;
	mov.u32 	%r16383, %r16335;
	bra.uni 	LBB0_182;
LBB0_188:                               // %L81483
                                        //   in Loop: Header=BB0_182 Depth=1
	setp.ne.s32 	%p336, %r16357, 7936;
	add.s32 	%r16357, %r16357, 256;
	add.s32 	%r16332, %r16357, %r5;
	setp.gt.s32 	%p337, %r6, %r16332;
	and.pred  	%p338, %p336, %p337;
	@%p338 bra 	LBB0_182;
	bra.uni 	LBB0_189;
LBB0_182:                               // %L2449
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_183 Depth 2
	or.b32  	%r852, %r3, %r16357;
	or.b32  	%r853, %r852, %r126;
	or.b32  	%r854, %r853, %r127;
	shl.b32 	%r855, %r854, 13;
	add.s32 	%r856, %r128, %r855;
	shr.s32 	%r857, %r856, 31;
	shr.u32 	%r858, %r857, 6;
	add.s32 	%r859, %r856, %r858;
	shr.s32 	%r860, %r859, 26;
	and.b32  	%r861, %r859, -67108864;
	setp.ne.s32 	%p313, %r861, %r856;
	setp.lt.s32 	%p314, %r856, 0;
	and.pred  	%p315, %p314, %p313;
	selp.u32 	%r862, 1, 0, %p315;
	sub.s32 	%r863, %r862, %r860;
	shl.b32 	%r864, %r863, 26;
	add.s32 	%r865, %r864, %r856;
	mul.wide.s32 	%rd101, %r865, 4;
	add.s64 	%rd102, %rd2, %rd101;
	ld.global.v4.u32 	{%r866, %r867, %r868, %r869}, [%rd102];
	or.b32  	%r870, %r129, %r855;
	or.b32  	%r871, %r870, 131072;
	add.s32 	%r872, %r871, %r124;
	shr.s32 	%r873, %r872, 31;
	shr.u32 	%r874, %r873, 6;
	add.s32 	%r875, %r872, %r874;
	shr.s32 	%r876, %r875, 26;
	and.b32  	%r877, %r875, -67108864;
	setp.ne.s32 	%p316, %r877, %r872;
	setp.lt.s32 	%p317, %r872, 0;
	and.pred  	%p318, %p317, %p316;
	selp.u32 	%r878, 1, 0, %p318;
	sub.s32 	%r879, %r878, %r876;
	shl.b32 	%r880, %r879, 26;
	add.s32 	%r881, %r880, %r872;
	mul.wide.s32 	%rd103, %r881, 4;
	add.s64 	%rd104, %rd2, %rd103;
	ld.global.v4.u32 	{%r882, %r883, %r884, %r885}, [%rd104];
	or.b32  	%r886, %r870, 1048576;
	add.s32 	%r887, %r886, %r124;
	shr.s32 	%r888, %r887, 31;
	shr.u32 	%r889, %r888, 6;
	add.s32 	%r890, %r887, %r889;
	shr.s32 	%r891, %r890, 26;
	and.b32  	%r892, %r890, -67108864;
	setp.ne.s32 	%p319, %r892, %r887;
	setp.lt.s32 	%p320, %r887, 0;
	and.pred  	%p321, %p320, %p319;
	selp.u32 	%r893, 1, 0, %p321;
	sub.s32 	%r894, %r893, %r891;
	shl.b32 	%r895, %r894, 26;
	add.s32 	%r896, %r895, %r887;
	mul.wide.s32 	%rd105, %r896, 4;
	add.s64 	%rd106, %rd2, %rd105;
	ld.global.v4.u32 	{%r897, %r898, %r899, %r900}, [%rd106];
	or.b32  	%r901, %r870, 1179648;
	add.s32 	%r902, %r901, %r124;
	shr.s32 	%r903, %r902, 31;
	shr.u32 	%r904, %r903, 6;
	add.s32 	%r905, %r902, %r904;
	shr.s32 	%r906, %r905, 26;
	and.b32  	%r907, %r905, -67108864;
	setp.ne.s32 	%p322, %r907, %r902;
	setp.lt.s32 	%p323, %r902, 0;
	and.pred  	%p324, %p323, %p322;
	selp.u32 	%r908, 1, 0, %p324;
	sub.s32 	%r909, %r908, %r906;
	shl.b32 	%r910, %r909, 26;
	add.s32 	%r911, %r910, %r902;
	mul.wide.s32 	%rd107, %r911, 4;
	add.s64 	%rd108, %rd2, %rd107;
	ld.global.v4.u32 	{%r912, %r913, %r914, %r915}, [%rd108];
	selp.b32 	%r916, %r868, %r866, %p312;
	shfl.sync.bfly.b32	%r917, %r916, 8, 31, -1;
	selp.b32 	%r788, %r866, %r917, %p312;
	selp.b32 	%r789, %r917, %r868, %p312;
	selp.b32 	%r918, %r869, %r867, %p312;
	shfl.sync.bfly.b32	%r919, %r918, 8, 31, -1;
	selp.b32 	%r796, %r867, %r919, %p312;
	selp.b32 	%r797, %r919, %r869, %p312;
	selp.b32 	%r920, %r884, %r882, %p312;
	shfl.sync.bfly.b32	%r921, %r920, 8, 31, -1;
	selp.b32 	%r804, %r882, %r921, %p312;
	selp.b32 	%r805, %r921, %r884, %p312;
	selp.b32 	%r922, %r885, %r883, %p312;
	shfl.sync.bfly.b32	%r923, %r922, 8, 31, -1;
	selp.b32 	%r812, %r883, %r923, %p312;
	selp.b32 	%r813, %r923, %r885, %p312;
	selp.b32 	%r924, %r899, %r897, %p312;
	shfl.sync.bfly.b32	%r925, %r924, 8, 31, -1;
	selp.b32 	%r820, %r897, %r925, %p312;
	selp.b32 	%r821, %r925, %r899, %p312;
	selp.b32 	%r926, %r900, %r898, %p312;
	shfl.sync.bfly.b32	%r927, %r926, 8, 31, -1;
	selp.b32 	%r828, %r898, %r927, %p312;
	selp.b32 	%r829, %r927, %r900, %p312;
	selp.b32 	%r928, %r914, %r912, %p312;
	shfl.sync.bfly.b32	%r929, %r928, 8, 31, -1;
	selp.b32 	%r836, %r912, %r929, %p312;
	selp.b32 	%r837, %r929, %r914, %p312;
	selp.b32 	%r930, %r915, %r913, %p312;
	shfl.sync.bfly.b32	%r931, %r930, 8, 31, -1;
	selp.b32 	%r844, %r913, %r931, %p312;
	selp.b32 	%r845, %r931, %r915, %p312;
	mov.u32 	%r846, 21520;
	// begin inline asm
	prmt.b32 %r787, %r788, %r789, %r846;
	// end inline asm
	mov.u32 	%r850, 30258;
	// begin inline asm
	prmt.b32 %r791, %r788, %r789, %r850;
	// end inline asm
	// begin inline asm
	prmt.b32 %r795, %r796, %r797, %r846;
	// end inline asm
	// begin inline asm
	prmt.b32 %r799, %r796, %r797, %r850;
	// end inline asm
	// begin inline asm
	prmt.b32 %r803, %r804, %r805, %r846;
	// end inline asm
	// begin inline asm
	prmt.b32 %r807, %r804, %r805, %r850;
	// end inline asm
	// begin inline asm
	prmt.b32 %r811, %r812, %r813, %r846;
	// end inline asm
	// begin inline asm
	prmt.b32 %r815, %r812, %r813, %r850;
	// end inline asm
	// begin inline asm
	prmt.b32 %r819, %r820, %r821, %r846;
	// end inline asm
	// begin inline asm
	prmt.b32 %r823, %r820, %r821, %r850;
	// end inline asm
	// begin inline asm
	prmt.b32 %r827, %r828, %r829, %r846;
	// end inline asm
	// begin inline asm
	prmt.b32 %r831, %r828, %r829, %r850;
	// end inline asm
	// begin inline asm
	prmt.b32 %r835, %r836, %r837, %r846;
	// end inline asm
	// begin inline asm
	prmt.b32 %r839, %r836, %r837, %r850;
	// end inline asm
	// begin inline asm
	prmt.b32 %r843, %r844, %r845, %r846;
	// end inline asm
	// begin inline asm
	prmt.b32 %r847, %r844, %r845, %r850;
	// end inline asm
	st.shared.u32 	[%rd5], %r787;
	st.shared.u32 	[%rd6], %r791;
	st.shared.u32 	[%rd7], %r795;
	st.shared.u32 	[%rd8], %r799;
	st.shared.u32 	[%rd9], %r803;
	st.shared.u32 	[%rd10], %r807;
	st.shared.u32 	[%rd11], %r811;
	st.shared.u32 	[%rd12], %r815;
	st.shared.u32 	[%rd13], %r819;
	st.shared.u32 	[%rd14], %r823;
	st.shared.u32 	[%rd15], %r827;
	st.shared.u32 	[%rd16], %r831;
	st.shared.u32 	[%rd17], %r835;
	st.shared.u32 	[%rd18], %r839;
	st.shared.u32 	[%rd19], %r843;
	st.shared.u32 	[%rd20], %r847;
	bar.sync 	0;
	mov.u32 	%r16382, 256;
	mov.u64 	%rd173, %rd73;
LBB0_183:                               // %L15017
                                        //   Parent Loop BB0_182 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd109, %rd173, %rd43;
	ld.shared.u32 	%r16196, [%rd109];
	add.s64 	%rd110, %rd173, %rd40;
	ld.shared.u32 	%r16197, [%rd110];
	add.s64 	%rd111, %rd173, %rd37;
	ld.shared.u32 	%r16198, [%rd111];
	add.s64 	%rd112, %rd173, %rd34;
	ld.shared.u32 	%r16199, [%rd112];
	add.s64 	%rd113, %rd173, %rd31;
	ld.shared.u32 	%r16200, [%rd113];
	add.s64 	%rd114, %rd173, %rd30;
	ld.shared.u32 	%r16201, [%rd114];
	add.s64 	%rd115, %rd173, %rd29;
	ld.shared.u32 	%r16202, [%rd115];
	add.s64 	%rd116, %rd173, %rd28;
	ld.shared.u32 	%r16203, [%rd116];
	// begin inline asm
	mov.b32 %r937, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r948, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r936, %r16196, -2004318072;
	mov.u32 	%r935, 983055;
	// begin inline asm
	lop3.b32 %r934, %r935, %r936, %r937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r938, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r939, %r937, %r938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r942, %r934, %r939;
	// end inline asm
	mov.u32 	%r946, 15728880;
	// begin inline asm
	lop3.b32 %r945, %r946, %r936, %r948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r949, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r950, %r948, %r949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r953, %r945, %r950;
	// end inline asm
	shr.u32 	%r958, %r936, 8;
	// begin inline asm
	lop3.b32 %r956, %r935, %r958, %r937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r960, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r961, %r937, %r960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r964, %r956, %r961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r967, %r946, %r958, %r948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r971, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r972, %r948, %r971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r975, %r967, %r972;
	// end inline asm
	// begin inline asm
	mov.b32 %r983, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r994, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r982, %r16197, -2004318072;
	// begin inline asm
	lop3.b32 %r980, %r935, %r982, %r983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r984, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r985, %r983, %r984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r988, %r980, %r985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r991, %r946, %r982, %r994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r995, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r996, %r994, %r995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r999, %r991, %r996;
	// end inline asm
	shr.u32 	%r1004, %r982, 8;
	// begin inline asm
	lop3.b32 %r1002, %r935, %r1004, %r983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1006, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1007, %r983, %r1006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1010, %r1002, %r1007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1013, %r946, %r1004, %r994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1017, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1018, %r994, %r1017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1021, %r1013, %r1018;
	// end inline asm
	// begin inline asm
	mov.b32 %r1029, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1040, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1028, %r16198, -2004318072;
	// begin inline asm
	lop3.b32 %r1026, %r935, %r1028, %r1029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1030, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1031, %r1029, %r1030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1034, %r1026, %r1031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1037, %r946, %r1028, %r1040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1041, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1042, %r1040, %r1041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1045, %r1037, %r1042;
	// end inline asm
	shr.u32 	%r1050, %r1028, 8;
	// begin inline asm
	lop3.b32 %r1048, %r935, %r1050, %r1029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1052, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1053, %r1029, %r1052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1056, %r1048, %r1053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1059, %r946, %r1050, %r1040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1063, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1064, %r1040, %r1063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1067, %r1059, %r1064;
	// end inline asm
	// begin inline asm
	mov.b32 %r1075, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1086, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1074, %r16199, -2004318072;
	// begin inline asm
	lop3.b32 %r1072, %r935, %r1074, %r1075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1076, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1077, %r1075, %r1076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1080, %r1072, %r1077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1083, %r946, %r1074, %r1086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1087, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1088, %r1086, %r1087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1091, %r1083, %r1088;
	// end inline asm
	shr.u32 	%r1096, %r1074, 8;
	// begin inline asm
	lop3.b32 %r1094, %r935, %r1096, %r1075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1098, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1099, %r1075, %r1098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1102, %r1094, %r1099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1105, %r946, %r1096, %r1086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1109, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1110, %r1086, %r1109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1113, %r1105, %r1110;
	// end inline asm
	// begin inline asm
	mov.b32 %r1121, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1132, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1120, %r16200, -2004318072;
	// begin inline asm
	lop3.b32 %r1118, %r935, %r1120, %r1121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1122, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1123, %r1121, %r1122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1126, %r1118, %r1123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1129, %r946, %r1120, %r1132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1133, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1134, %r1132, %r1133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1137, %r1129, %r1134;
	// end inline asm
	shr.u32 	%r1142, %r1120, 8;
	// begin inline asm
	lop3.b32 %r1140, %r935, %r1142, %r1121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1144, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1145, %r1121, %r1144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1148, %r1140, %r1145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1151, %r946, %r1142, %r1132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1155, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1156, %r1132, %r1155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1159, %r1151, %r1156;
	// end inline asm
	// begin inline asm
	mov.b32 %r1167, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1178, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1166, %r16201, -2004318072;
	// begin inline asm
	lop3.b32 %r1164, %r935, %r1166, %r1167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1168, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1169, %r1167, %r1168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1172, %r1164, %r1169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1175, %r946, %r1166, %r1178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1179, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1180, %r1178, %r1179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1183, %r1175, %r1180;
	// end inline asm
	shr.u32 	%r1188, %r1166, 8;
	// begin inline asm
	lop3.b32 %r1186, %r935, %r1188, %r1167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1190, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1191, %r1167, %r1190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1194, %r1186, %r1191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1197, %r946, %r1188, %r1178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1201, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1202, %r1178, %r1201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1205, %r1197, %r1202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1213, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1224, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1212, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r1210, %r935, %r1212, %r1213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1214, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1215, %r1213, %r1214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1218, %r1210, %r1215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1221, %r946, %r1212, %r1224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1225, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1226, %r1224, %r1225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1229, %r1221, %r1226;
	// end inline asm
	shr.u32 	%r1234, %r1212, 8;
	// begin inline asm
	lop3.b32 %r1232, %r935, %r1234, %r1213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1236, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1237, %r1213, %r1236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1240, %r1232, %r1237;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1243, %r946, %r1234, %r1224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1247, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1248, %r1224, %r1247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1251, %r1243, %r1248;
	// end inline asm
	// begin inline asm
	mov.b32 %r1259, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1270, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1258, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r1256, %r935, %r1258, %r1259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1260, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1261, %r1259, %r1260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1264, %r1256, %r1261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1267, %r946, %r1258, %r1270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1271, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1272, %r1270, %r1271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1275, %r1267, %r1272;
	// end inline asm
	shr.u32 	%r1280, %r1258, 8;
	// begin inline asm
	lop3.b32 %r1278, %r935, %r1280, %r1259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1282, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1283, %r1259, %r1282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1286, %r1278, %r1283;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1289, %r946, %r1280, %r1270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1293, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1294, %r1270, %r1293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1297, %r1289, %r1294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1300, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1302, %r1300, %r942;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1305, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1307, %r1305, %r953;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1310, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1312, %r1310, %r964;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1315, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1317, %r1315, %r975;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1320, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1322, %r1320, %r988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1325, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1327, %r1325, %r999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1330, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1332, %r1330, %r1010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1335, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1337, %r1335, %r1021;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1340, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1342, %r1340, %r1034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1345, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1347, %r1345, %r1045;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1350, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1352, %r1350, %r1056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1355, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1357, %r1355, %r1067;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1360, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1362, %r1360, %r1080;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1365, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1367, %r1365, %r1091;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1370, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1372, %r1370, %r1102;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1375, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1377, %r1375, %r1113;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1380, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1382, %r1380, %r1126;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1385, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1387, %r1385, %r1137;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1390, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1392, %r1390, %r1148;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1395, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1397, %r1395, %r1159;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1400, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1402, %r1400, %r1172;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1405, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1407, %r1405, %r1183;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1410, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1412, %r1410, %r1194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1415, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1417, %r1415, %r1205;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1420, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1422, %r1420, %r1218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1425, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1427, %r1425, %r1229;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1430, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1432, %r1430, %r1240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1435, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1437, %r1435, %r1251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1440, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1442, %r1440, %r1264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1445, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1447, %r1445, %r1275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1450, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1452, %r1450, %r1286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1455, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1457, %r1455, %r1297;
	// end inline asm
	// begin inline asm
	mov.b32 %r1465, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1476, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1464, %r16383, -2004318072;
	// begin inline asm
	lop3.b32 %r1462, %r935, %r1464, %r1465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1466, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1467, %r1465, %r1466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1470, %r1462, %r1467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1473, %r946, %r1464, %r1476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1477, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1478, %r1476, %r1477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1481, %r1473, %r1478;
	// end inline asm
	shr.u32 	%r1486, %r1464, 8;
	// begin inline asm
	lop3.b32 %r1484, %r935, %r1486, %r1465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1488, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1489, %r1465, %r1488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1492, %r1484, %r1489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1495, %r946, %r1486, %r1476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1499, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1500, %r1476, %r1499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1503, %r1495, %r1500;
	// end inline asm
	// begin inline asm
	mov.b32 %r1511, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1522, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1510, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r1508, %r935, %r1510, %r1511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1512, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1513, %r1511, %r1512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1516, %r1508, %r1513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1519, %r946, %r1510, %r1522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1523, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1524, %r1522, %r1523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1527, %r1519, %r1524;
	// end inline asm
	shr.u32 	%r1532, %r1510, 8;
	// begin inline asm
	lop3.b32 %r1530, %r935, %r1532, %r1511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1534, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1535, %r1511, %r1534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1538, %r1530, %r1535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1541, %r946, %r1532, %r1522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1545, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1546, %r1522, %r1545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1549, %r1541, %r1546;
	// end inline asm
	// begin inline asm
	mov.b32 %r1557, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1568, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1556, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r1554, %r935, %r1556, %r1557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1558, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1559, %r1557, %r1558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1562, %r1554, %r1559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1565, %r946, %r1556, %r1568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1569, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1570, %r1568, %r1569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1573, %r1565, %r1570;
	// end inline asm
	shr.u32 	%r1578, %r1556, 8;
	// begin inline asm
	lop3.b32 %r1576, %r935, %r1578, %r1557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1580, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1581, %r1557, %r1580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1584, %r1576, %r1581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1587, %r946, %r1578, %r1568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1591, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1592, %r1568, %r1591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1595, %r1587, %r1592;
	// end inline asm
	// begin inline asm
	mov.b32 %r1603, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1614, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1602, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r1600, %r935, %r1602, %r1603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1604, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1605, %r1603, %r1604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1608, %r1600, %r1605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1611, %r946, %r1602, %r1614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1615, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1616, %r1614, %r1615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1619, %r1611, %r1616;
	// end inline asm
	shr.u32 	%r1624, %r1602, 8;
	// begin inline asm
	lop3.b32 %r1622, %r935, %r1624, %r1603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1626, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1627, %r1603, %r1626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1630, %r1622, %r1627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1633, %r946, %r1624, %r1614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1637, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1638, %r1614, %r1637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1641, %r1633, %r1638;
	// end inline asm
	// begin inline asm
	mov.b32 %r1649, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1660, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1648, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r1646, %r935, %r1648, %r1649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1650, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1651, %r1649, %r1650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1654, %r1646, %r1651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1657, %r946, %r1648, %r1660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1661, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1662, %r1660, %r1661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1665, %r1657, %r1662;
	// end inline asm
	shr.u32 	%r1670, %r1648, 8;
	// begin inline asm
	lop3.b32 %r1668, %r935, %r1670, %r1649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1672, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1673, %r1649, %r1672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1676, %r1668, %r1673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1679, %r946, %r1670, %r1660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1683, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1684, %r1660, %r1683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1687, %r1679, %r1684;
	// end inline asm
	// begin inline asm
	mov.b32 %r1695, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1706, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1694, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r1692, %r935, %r1694, %r1695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1696, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1697, %r1695, %r1696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1700, %r1692, %r1697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1703, %r946, %r1694, %r1706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1707, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1708, %r1706, %r1707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1711, %r1703, %r1708;
	// end inline asm
	shr.u32 	%r1716, %r1694, 8;
	// begin inline asm
	lop3.b32 %r1714, %r935, %r1716, %r1695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1718, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1719, %r1695, %r1718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1722, %r1714, %r1719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1725, %r946, %r1716, %r1706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1729, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1730, %r1706, %r1729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1733, %r1725, %r1730;
	// end inline asm
	// begin inline asm
	mov.b32 %r1741, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1752, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1740, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r1738, %r935, %r1740, %r1741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1742, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1743, %r1741, %r1742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1746, %r1738, %r1743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1749, %r946, %r1740, %r1752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1753, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1754, %r1752, %r1753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1757, %r1749, %r1754;
	// end inline asm
	shr.u32 	%r1762, %r1740, 8;
	// begin inline asm
	lop3.b32 %r1760, %r935, %r1762, %r1741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1764, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1765, %r1741, %r1764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1768, %r1760, %r1765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1771, %r946, %r1762, %r1752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1775, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1776, %r1752, %r1775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1779, %r1771, %r1776;
	// end inline asm
	// begin inline asm
	mov.b32 %r1787, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1798, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1786, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r1784, %r935, %r1786, %r1787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1788, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1789, %r1787, %r1788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1792, %r1784, %r1789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1795, %r946, %r1786, %r1798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1799, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1800, %r1798, %r1799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1803, %r1795, %r1800;
	// end inline asm
	shr.u32 	%r1808, %r1786, 8;
	// begin inline asm
	lop3.b32 %r1806, %r935, %r1808, %r1787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1810, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1811, %r1787, %r1810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1814, %r1806, %r1811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1817, %r946, %r1808, %r1798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1821, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1822, %r1798, %r1821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1825, %r1817, %r1822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1828, %r288, %r1470, %r1302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1832, %r288, %r1481, %r1307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1836, %r288, %r1492, %r1312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1840, %r288, %r1503, %r1317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1844, %r288, %r1516, %r1322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1848, %r288, %r1527, %r1327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1852, %r288, %r1538, %r1332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1856, %r288, %r1549, %r1337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1860, %r288, %r1562, %r1342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1864, %r288, %r1573, %r1347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1868, %r288, %r1584, %r1352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1872, %r288, %r1595, %r1357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1876, %r288, %r1608, %r1362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1880, %r288, %r1619, %r1367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1884, %r288, %r1630, %r1372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1888, %r288, %r1641, %r1377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1892, %r306, %r1654, %r1382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1896, %r306, %r1665, %r1387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1900, %r306, %r1676, %r1392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1904, %r306, %r1687, %r1397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1908, %r306, %r1700, %r1402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1912, %r306, %r1711, %r1407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1916, %r306, %r1722, %r1412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1920, %r306, %r1733, %r1417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1924, %r306, %r1746, %r1422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1928, %r306, %r1757, %r1427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1932, %r306, %r1768, %r1432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1936, %r306, %r1779, %r1437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1940, %r306, %r1792, %r1442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1944, %r306, %r1803, %r1447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1948, %r306, %r1814, %r1452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1952, %r306, %r1825, %r1457;
	// end inline asm
	// begin inline asm
	mov.b32 %r1961, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1972, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1960, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r1958, %r935, %r1960, %r1961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1962, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1963, %r1961, %r1962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1966, %r1958, %r1963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1969, %r946, %r1960, %r1972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1973, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1974, %r1972, %r1973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1977, %r1969, %r1974;
	// end inline asm
	shr.u32 	%r1982, %r1960, 8;
	// begin inline asm
	lop3.b32 %r1980, %r935, %r1982, %r1961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1984, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1985, %r1961, %r1984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1988, %r1980, %r1985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1991, %r946, %r1982, %r1972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1995, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1996, %r1972, %r1995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1999, %r1991, %r1996;
	// end inline asm
	// begin inline asm
	mov.b32 %r2007, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2018, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2006, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r2004, %r935, %r2006, %r2007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2008, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2009, %r2007, %r2008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2012, %r2004, %r2009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2015, %r946, %r2006, %r2018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2019, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2020, %r2018, %r2019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2023, %r2015, %r2020;
	// end inline asm
	shr.u32 	%r2028, %r2006, 8;
	// begin inline asm
	lop3.b32 %r2026, %r935, %r2028, %r2007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2030, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2031, %r2007, %r2030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2034, %r2026, %r2031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2037, %r946, %r2028, %r2018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2041, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2042, %r2018, %r2041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2045, %r2037, %r2042;
	// end inline asm
	// begin inline asm
	mov.b32 %r2053, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2064, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2052, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r2050, %r935, %r2052, %r2053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2054, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2055, %r2053, %r2054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2058, %r2050, %r2055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2061, %r946, %r2052, %r2064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2065, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2066, %r2064, %r2065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2069, %r2061, %r2066;
	// end inline asm
	shr.u32 	%r2074, %r2052, 8;
	// begin inline asm
	lop3.b32 %r2072, %r935, %r2074, %r2053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2076, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2077, %r2053, %r2076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2080, %r2072, %r2077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2083, %r946, %r2074, %r2064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2087, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2088, %r2064, %r2087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2091, %r2083, %r2088;
	// end inline asm
	// begin inline asm
	mov.b32 %r2099, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2110, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2098, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r2096, %r935, %r2098, %r2099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2100, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2101, %r2099, %r2100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2104, %r2096, %r2101;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2107, %r946, %r2098, %r2110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2111, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2112, %r2110, %r2111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2115, %r2107, %r2112;
	// end inline asm
	shr.u32 	%r2120, %r2098, 8;
	// begin inline asm
	lop3.b32 %r2118, %r935, %r2120, %r2099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2122, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2123, %r2099, %r2122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2126, %r2118, %r2123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2129, %r946, %r2120, %r2110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2133, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2134, %r2110, %r2133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2137, %r2129, %r2134;
	// end inline asm
	// begin inline asm
	mov.b32 %r2145, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2156, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2144, %r16399, -2004318072;
	// begin inline asm
	lop3.b32 %r2142, %r935, %r2144, %r2145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2146, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2147, %r2145, %r2146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2150, %r2142, %r2147;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2153, %r946, %r2144, %r2156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2157, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2158, %r2156, %r2157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2161, %r2153, %r2158;
	// end inline asm
	shr.u32 	%r2166, %r2144, 8;
	// begin inline asm
	lop3.b32 %r2164, %r935, %r2166, %r2145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2168, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2169, %r2145, %r2168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2172, %r2164, %r2169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2175, %r946, %r2166, %r2156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2179, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2180, %r2156, %r2179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2183, %r2175, %r2180;
	// end inline asm
	// begin inline asm
	mov.b32 %r2191, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2202, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2190, %r16400, -2004318072;
	// begin inline asm
	lop3.b32 %r2188, %r935, %r2190, %r2191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2192, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2193, %r2191, %r2192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2196, %r2188, %r2193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2199, %r946, %r2190, %r2202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2203, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2204, %r2202, %r2203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2207, %r2199, %r2204;
	// end inline asm
	shr.u32 	%r2212, %r2190, 8;
	// begin inline asm
	lop3.b32 %r2210, %r935, %r2212, %r2191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2214, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2215, %r2191, %r2214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2218, %r2210, %r2215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2221, %r946, %r2212, %r2202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2225, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2226, %r2202, %r2225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2229, %r2221, %r2226;
	// end inline asm
	// begin inline asm
	mov.b32 %r2237, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2248, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2236, %r16401, -2004318072;
	// begin inline asm
	lop3.b32 %r2234, %r935, %r2236, %r2237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2238, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2239, %r2237, %r2238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2242, %r2234, %r2239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2245, %r946, %r2236, %r2248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2249, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2250, %r2248, %r2249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2253, %r2245, %r2250;
	// end inline asm
	shr.u32 	%r2258, %r2236, 8;
	// begin inline asm
	lop3.b32 %r2256, %r935, %r2258, %r2237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2260, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2261, %r2237, %r2260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2264, %r2256, %r2261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2267, %r946, %r2258, %r2248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2271, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2272, %r2248, %r2271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2275, %r2267, %r2272;
	// end inline asm
	// begin inline asm
	mov.b32 %r2283, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2294, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2282, %r16402, -2004318072;
	// begin inline asm
	lop3.b32 %r2280, %r935, %r2282, %r2283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2284, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2285, %r2283, %r2284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2288, %r2280, %r2285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2291, %r946, %r2282, %r2294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2295, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2296, %r2294, %r2295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2299, %r2291, %r2296;
	// end inline asm
	shr.u32 	%r2304, %r2282, 8;
	// begin inline asm
	lop3.b32 %r2302, %r935, %r2304, %r2283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2306, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2307, %r2283, %r2306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2310, %r2302, %r2307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2313, %r946, %r2304, %r2294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2317, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2318, %r2294, %r2317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2321, %r2313, %r2318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2324, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2326, %r2324, %r1966, %r1828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2330, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2332, %r2330, %r1977, %r1832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2336, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2338, %r2336, %r1988, %r1836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2342, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2344, %r2342, %r1999, %r1840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2348, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2350, %r2348, %r2012, %r1844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2354, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2356, %r2354, %r2023, %r1848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2360, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2362, %r2360, %r2034, %r1852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2366, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2368, %r2366, %r2045, %r1856;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2372, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2374, %r2372, %r2058, %r1860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2378, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2380, %r2378, %r2069, %r1864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2384, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2386, %r2384, %r2080, %r1868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2390, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2392, %r2390, %r2091, %r1872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2396, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2398, %r2396, %r2104, %r1876;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2402, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2404, %r2402, %r2115, %r1880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2408, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2410, %r2408, %r2126, %r1884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2414, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2416, %r2414, %r2137, %r1888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2420, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2422, %r2420, %r2150, %r1892;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2426, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2428, %r2426, %r2161, %r1896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2432, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2434, %r2432, %r2172, %r1900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2438, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2440, %r2438, %r2183, %r1904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2444, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2446, %r2444, %r2196, %r1908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2450, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2452, %r2450, %r2207, %r1912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2456, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2458, %r2456, %r2218, %r1916;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2462, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2464, %r2462, %r2229, %r1920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2468, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2470, %r2468, %r2242, %r1924;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2474, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2476, %r2474, %r2253, %r1928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2480, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2482, %r2480, %r2264, %r1932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2486, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2488, %r2486, %r2275, %r1936;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2492, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2494, %r2492, %r2288, %r1940;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2498, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2500, %r2498, %r2299, %r1944;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2504, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2506, %r2504, %r2310, %r1948;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2510, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2512, %r2510, %r2321, %r1952;
	// end inline asm
	// begin inline asm
	mov.b32 %r2521, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2532, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2520, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r2518, %r935, %r2520, %r2521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2522, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2523, %r2521, %r2522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2526, %r2518, %r2523;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2529, %r946, %r2520, %r2532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2533, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2534, %r2532, %r2533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2537, %r2529, %r2534;
	// end inline asm
	shr.u32 	%r2542, %r2520, 8;
	// begin inline asm
	lop3.b32 %r2540, %r935, %r2542, %r2521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2544, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2545, %r2521, %r2544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2548, %r2540, %r2545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2551, %r946, %r2542, %r2532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2555, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2556, %r2532, %r2555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2559, %r2551, %r2556;
	// end inline asm
	// begin inline asm
	mov.b32 %r2567, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2578, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2566, %r16392, -2004318072;
	// begin inline asm
	lop3.b32 %r2564, %r935, %r2566, %r2567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2568, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2569, %r2567, %r2568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2572, %r2564, %r2569;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2575, %r946, %r2566, %r2578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2579, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2580, %r2578, %r2579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2583, %r2575, %r2580;
	// end inline asm
	shr.u32 	%r2588, %r2566, 8;
	// begin inline asm
	lop3.b32 %r2586, %r935, %r2588, %r2567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2590, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2591, %r2567, %r2590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2594, %r2586, %r2591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2597, %r946, %r2588, %r2578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2601, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2602, %r2578, %r2601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2605, %r2597, %r2602;
	// end inline asm
	// begin inline asm
	mov.b32 %r2613, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2624, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2612, %r16393, -2004318072;
	// begin inline asm
	lop3.b32 %r2610, %r935, %r2612, %r2613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2614, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2615, %r2613, %r2614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2618, %r2610, %r2615;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2621, %r946, %r2612, %r2624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2625, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2626, %r2624, %r2625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2629, %r2621, %r2626;
	// end inline asm
	shr.u32 	%r2634, %r2612, 8;
	// begin inline asm
	lop3.b32 %r2632, %r935, %r2634, %r2613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2636, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2637, %r2613, %r2636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2640, %r2632, %r2637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2643, %r946, %r2634, %r2624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2647, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2648, %r2624, %r2647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2651, %r2643, %r2648;
	// end inline asm
	// begin inline asm
	mov.b32 %r2659, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2670, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2658, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r2656, %r935, %r2658, %r2659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2660, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2661, %r2659, %r2660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2664, %r2656, %r2661;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2667, %r946, %r2658, %r2670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2671, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2672, %r2670, %r2671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2675, %r2667, %r2672;
	// end inline asm
	shr.u32 	%r2680, %r2658, 8;
	// begin inline asm
	lop3.b32 %r2678, %r935, %r2680, %r2659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2682, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2683, %r2659, %r2682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2686, %r2678, %r2683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2689, %r946, %r2680, %r2670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2693, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2694, %r2670, %r2693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2697, %r2689, %r2694;
	// end inline asm
	// begin inline asm
	mov.b32 %r2705, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2716, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2704, %r16403, -2004318072;
	// begin inline asm
	lop3.b32 %r2702, %r935, %r2704, %r2705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2706, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2707, %r2705, %r2706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2710, %r2702, %r2707;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2713, %r946, %r2704, %r2716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2717, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2718, %r2716, %r2717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2721, %r2713, %r2718;
	// end inline asm
	shr.u32 	%r2726, %r2704, 8;
	// begin inline asm
	lop3.b32 %r2724, %r935, %r2726, %r2705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2728, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2729, %r2705, %r2728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2732, %r2724, %r2729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2735, %r946, %r2726, %r2716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2739, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2740, %r2716, %r2739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2743, %r2735, %r2740;
	// end inline asm
	// begin inline asm
	mov.b32 %r2751, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2762, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2750, %r16404, -2004318072;
	// begin inline asm
	lop3.b32 %r2748, %r935, %r2750, %r2751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2752, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2753, %r2751, %r2752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2756, %r2748, %r2753;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2759, %r946, %r2750, %r2762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2763, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2764, %r2762, %r2763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2767, %r2759, %r2764;
	// end inline asm
	shr.u32 	%r2772, %r2750, 8;
	// begin inline asm
	lop3.b32 %r2770, %r935, %r2772, %r2751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2774, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2775, %r2751, %r2774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2778, %r2770, %r2775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2781, %r946, %r2772, %r2762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2785, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2786, %r2762, %r2785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2789, %r2781, %r2786;
	// end inline asm
	// begin inline asm
	mov.b32 %r2797, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2808, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2796, %r16405, -2004318072;
	// begin inline asm
	lop3.b32 %r2794, %r935, %r2796, %r2797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2798, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2799, %r2797, %r2798;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2802, %r2794, %r2799;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2805, %r946, %r2796, %r2808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2809, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2810, %r2808, %r2809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2813, %r2805, %r2810;
	// end inline asm
	shr.u32 	%r2818, %r2796, 8;
	// begin inline asm
	lop3.b32 %r2816, %r935, %r2818, %r2797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2820, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2821, %r2797, %r2820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2824, %r2816, %r2821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2827, %r946, %r2818, %r2808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2831, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2832, %r2808, %r2831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2835, %r2827, %r2832;
	// end inline asm
	// begin inline asm
	mov.b32 %r2843, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2854, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2842, %r16406, -2004318072;
	// begin inline asm
	lop3.b32 %r2840, %r935, %r2842, %r2843, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2844, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2845, %r2843, %r2844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2848, %r2840, %r2845;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2851, %r946, %r2842, %r2854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2855, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2856, %r2854, %r2855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2859, %r2851, %r2856;
	// end inline asm
	shr.u32 	%r2864, %r2842, 8;
	// begin inline asm
	lop3.b32 %r2862, %r935, %r2864, %r2843, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2866, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2867, %r2843, %r2866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2870, %r2862, %r2867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2873, %r946, %r2864, %r2854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2877, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2878, %r2854, %r2877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2881, %r2873, %r2878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3019, %r360, %r2526, %r2326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3016, %r360, %r2537, %r2332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3028, %r360, %r2548, %r2338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3025, %r360, %r2559, %r2344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3037, %r360, %r2572, %r2350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3034, %r360, %r2583, %r2356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3046, %r360, %r2594, %r2362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3043, %r360, %r2605, %r2368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3055, %r360, %r2618, %r2374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3052, %r360, %r2629, %r2380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3064, %r360, %r2640, %r2386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3061, %r360, %r2651, %r2392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3073, %r360, %r2664, %r2398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3070, %r360, %r2675, %r2404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3082, %r360, %r2686, %r2410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3079, %r360, %r2697, %r2416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3091, %r378, %r2710, %r2422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3088, %r378, %r2721, %r2428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3100, %r378, %r2732, %r2434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3097, %r378, %r2743, %r2440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3109, %r378, %r2756, %r2446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3106, %r378, %r2767, %r2452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3118, %r378, %r2778, %r2458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3115, %r378, %r2789, %r2464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3127, %r378, %r2802, %r2470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3124, %r378, %r2813, %r2476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3136, %r378, %r2824, %r2482;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3133, %r378, %r2835, %r2488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3145, %r378, %r2848, %r2494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3142, %r378, %r2859, %r2500;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3154, %r378, %r2870, %r2506;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3151, %r378, %r2881, %r2512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3012, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3014, %r3012, %r3016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3017, %r442, %r3019, %r3014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3021, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3023, %r3021, %r3025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3026, %r442, %r3028, %r3023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3030, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3032, %r3030, %r3034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3035, %r442, %r3037, %r3032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3039, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3041, %r3039, %r3043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3044, %r442, %r3046, %r3041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3048, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3050, %r3048, %r3052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3053, %r442, %r3055, %r3050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3057, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3059, %r3057, %r3061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3062, %r442, %r3064, %r3059;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3066, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3068, %r3066, %r3070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3071, %r442, %r3073, %r3068;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3075, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3077, %r3075, %r3079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3080, %r442, %r3082, %r3077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3084, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3086, %r3084, %r3088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3089, %r445, %r3091, %r3086;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3093, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3095, %r3093, %r3097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3098, %r445, %r3100, %r3095;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3102, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3104, %r3102, %r3106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3107, %r445, %r3109, %r3104;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3111, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3113, %r3111, %r3115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3116, %r445, %r3118, %r3113;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3120, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3122, %r3120, %r3124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3125, %r445, %r3127, %r3122;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3129, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3131, %r3129, %r3133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3134, %r445, %r3136, %r3131;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3138, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3140, %r3138, %r3142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3143, %r445, %r3145, %r3140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3147, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3149, %r3147, %r3151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3152, %r445, %r3154, %r3149;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3156, %r448, %r3019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3159, %r442, %r3016, %r3156;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3163, %r448, %r3028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3166, %r442, %r3025, %r3163;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3170, %r448, %r3037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3173, %r442, %r3034, %r3170;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3177, %r448, %r3046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3180, %r442, %r3043, %r3177;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3184, %r448, %r3055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3187, %r442, %r3052, %r3184;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3191, %r448, %r3064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3194, %r442, %r3061, %r3191;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3198, %r448, %r3073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3201, %r442, %r3070, %r3198;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3205, %r448, %r3082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3208, %r442, %r3079, %r3205;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3212, %r451, %r3091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3215, %r445, %r3088, %r3212;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3219, %r451, %r3100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3222, %r445, %r3097, %r3219;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3226, %r451, %r3109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3229, %r445, %r3106, %r3226;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3233, %r451, %r3118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3236, %r445, %r3115, %r3233;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3240, %r451, %r3127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3243, %r445, %r3124, %r3240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3247, %r451, %r3136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3250, %r445, %r3133, %r3247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3254, %r451, %r3145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3257, %r445, %r3142, %r3254;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3261, %r451, %r3154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3264, %r445, %r3151, %r3261;
	// end inline asm
	mov.u32 	%r3276, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3435, %r3432}, {%r497, %r503, %r500, %r506}, {%r3017, %r3159}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3444, %r3441}, {%r497, %r503, %r500, %r506}, {%r3026, %r3166}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3453, %r3450}, {%r497, %r503, %r500, %r506}, {%r3035, %r3173}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3462, %r3459}, {%r497, %r503, %r500, %r506}, {%r3044, %r3180}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3471, %r3468}, {%r497, %r503, %r500, %r506}, {%r3053, %r3187}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3480, %r3477}, {%r497, %r503, %r500, %r506}, {%r3062, %r3194}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3489, %r3486}, {%r497, %r503, %r500, %r506}, {%r3071, %r3201}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3498, %r3495}, {%r497, %r503, %r500, %r506}, {%r3080, %r3208}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3507, %r3504}, {%r497, %r503, %r500, %r506}, {%r3089, %r3215}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3516, %r3513}, {%r497, %r503, %r500, %r506}, {%r3098, %r3222}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3525, %r3522}, {%r497, %r503, %r500, %r506}, {%r3107, %r3229}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3534, %r3531}, {%r497, %r503, %r500, %r506}, {%r3116, %r3236}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3543, %r3540}, {%r497, %r503, %r500, %r506}, {%r3125, %r3243}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3552, %r3549}, {%r497, %r503, %r500, %r506}, {%r3134, %r3250}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3561, %r3558}, {%r497, %r503, %r500, %r506}, {%r3143, %r3257}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3570, %r3567}, {%r497, %r503, %r500, %r506}, {%r3152, %r3264}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3428, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3430, %r3428, %r3432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3433, %r547, %r3435, %r3430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3437, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3439, %r3437, %r3441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3442, %r547, %r3444, %r3439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3446, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3448, %r3446, %r3450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3451, %r547, %r3453, %r3448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3455, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3457, %r3455, %r3459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3460, %r547, %r3462, %r3457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3464, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3466, %r3464, %r3468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3469, %r547, %r3471, %r3466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3473, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3475, %r3473, %r3477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3478, %r547, %r3480, %r3475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3482, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3484, %r3482, %r3486;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3487, %r547, %r3489, %r3484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3491, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3493, %r3491, %r3495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3496, %r547, %r3498, %r3493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3500, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3502, %r3500, %r3504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3505, %r547, %r3507, %r3502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3509, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3511, %r3509, %r3513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3514, %r547, %r3516, %r3511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3518, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3520, %r3518, %r3522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3523, %r547, %r3525, %r3520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3527, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3529, %r3527, %r3531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3532, %r547, %r3534, %r3529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3536, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3538, %r3536, %r3540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3541, %r547, %r3543, %r3538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3545, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3547, %r3545, %r3549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3550, %r547, %r3552, %r3547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3554, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3556, %r3554, %r3558;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3559, %r547, %r3561, %r3556;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3563, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3565, %r3563, %r3567;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3568, %r547, %r3570, %r3565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3572, %r550, %r3435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3575, %r547, %r3432, %r3572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3579, %r550, %r3444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3582, %r547, %r3441, %r3579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3586, %r550, %r3453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3589, %r547, %r3450, %r3586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3593, %r550, %r3462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3596, %r547, %r3459, %r3593;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3600, %r550, %r3471;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3603, %r547, %r3468, %r3600;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3607, %r550, %r3480;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3610, %r547, %r3477, %r3607;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3614, %r550, %r3489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3617, %r547, %r3486, %r3614;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3621, %r550, %r3498;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3624, %r547, %r3495, %r3621;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3628, %r550, %r3507;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3631, %r547, %r3504, %r3628;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3635, %r550, %r3516;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3638, %r547, %r3513, %r3635;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3642, %r550, %r3525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3645, %r547, %r3522, %r3642;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3649, %r550, %r3534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3652, %r547, %r3531, %r3649;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3656, %r550, %r3543;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3659, %r547, %r3540, %r3656;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3663, %r550, %r3552;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3666, %r547, %r3549, %r3663;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3670, %r550, %r3561;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3673, %r547, %r3558, %r3670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3677, %r550, %r3570;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3680, %r547, %r3567, %r3677;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3973, %r3976}, {%r585, %r591, %r588, %r594}, {%r3433, %r3575}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3979, %r3982}, {%r585, %r591, %r588, %r594}, {%r3442, %r3582}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3985, %r3988}, {%r585, %r591, %r588, %r594}, {%r3451, %r3589}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3991, %r3994}, {%r585, %r591, %r588, %r594}, {%r3460, %r3596}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3997, %r4000}, {%r585, %r591, %r588, %r594}, {%r3469, %r3603}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r4003, %r4006}, {%r585, %r591, %r588, %r594}, {%r3478, %r3610}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r4009, %r4012}, {%r585, %r591, %r588, %r594}, {%r3487, %r3617}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r4015, %r4018}, {%r585, %r591, %r588, %r594}, {%r3496, %r3624}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3974, %r3977}, {%r585, %r591, %r588, %r594}, {%r3505, %r3631}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3980, %r3983}, {%r585, %r591, %r588, %r594}, {%r3514, %r3638}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3986, %r3989}, {%r585, %r591, %r588, %r594}, {%r3523, %r3645}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3992, %r3995}, {%r585, %r591, %r588, %r594}, {%r3532, %r3652}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3998, %r4001}, {%r585, %r591, %r588, %r594}, {%r3541, %r3659}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r4004, %r4007}, {%r585, %r591, %r588, %r594}, {%r3550, %r3666}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r4010, %r4013}, {%r585, %r591, %r588, %r594}, {%r3559, %r3673}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r4016, %r4019}, {%r585, %r591, %r588, %r594}, {%r3568, %r3680}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3972, %r3973, %r3974;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3975, %r3976, %r3977;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3978, %r3979, %r3980;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3981, %r3982, %r3983;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3984, %r3985, %r3986;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3987, %r3988, %r3989;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3990, %r3991, %r3992;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3993, %r3994, %r3995;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3996, %r3997, %r3998;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3999, %r4000, %r4001;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4002, %r4003, %r4004;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4005, %r4006, %r4007;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4008, %r4009, %r4010;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4011, %r4012, %r4013;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4014, %r4015, %r4016;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4017, %r4018, %r4019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4020, %r3973, %r3974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4023, %r3976, %r3977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4026, %r3979, %r3980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4029, %r3982, %r3983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4032, %r3985, %r3986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4035, %r3988, %r3989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4038, %r3991, %r3992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4041, %r3994, %r3995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4044, %r3997, %r3998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4047, %r4000, %r4001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4050, %r4003, %r4004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4053, %r4006, %r4007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4056, %r4009, %r4010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4059, %r4012, %r4013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4062, %r4015, %r4016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4065, %r4018, %r4019;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4068, %r218, %r3972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4071, %r218, %r3975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4074, %r218, %r3978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4077, %r218, %r3981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4080, %r218, %r3984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4083, %r218, %r3987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4086, %r218, %r3990;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4089, %r218, %r3993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4092, %r218, %r3996;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4095, %r218, %r3999;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4098, %r218, %r4002;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4101, %r218, %r4005;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4104, %r218, %r4008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4107, %r218, %r4011;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4110, %r218, %r4014;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4113, %r218, %r4017;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4116, %r219, %r4020;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4119, %r219, %r4023;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4122, %r219, %r4026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4125, %r219, %r4029;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4128, %r219, %r4032;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4131, %r219, %r4035;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4134, %r219, %r4038;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4137, %r219, %r4041;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4140, %r219, %r4044;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4143, %r219, %r4047;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4146, %r219, %r4050;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4149, %r219, %r4053;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4152, %r219, %r4056;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4155, %r219, %r4059;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4158, %r219, %r4062;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4161, %r219, %r4065;
	// end inline asm
	// begin inline asm
	mov.b32 %r4164, {%rs2306, %rs2306};
	// end inline asm
	mov.u16 	%rs407, 18176;
	// begin inline asm
	mov.b32 %r4165, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4166, %r4068, %r4164;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4169, %r4166, %r4165;
	// end inline asm
	// begin inline asm
	mov.b32 %r4172, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4173, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4174, %r4071, %r4172;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4177, %r4174, %r4173;
	// end inline asm
	// begin inline asm
	mov.b32 %r4180, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4181, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4182, %r4074, %r4180;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4185, %r4182, %r4181;
	// end inline asm
	// begin inline asm
	mov.b32 %r4188, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4189, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4190, %r4077, %r4188;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4193, %r4190, %r4189;
	// end inline asm
	// begin inline asm
	mov.b32 %r4196, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4197, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4198, %r4080, %r4196;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4201, %r4198, %r4197;
	// end inline asm
	// begin inline asm
	mov.b32 %r4204, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4205, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4206, %r4083, %r4204;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4209, %r4206, %r4205;
	// end inline asm
	// begin inline asm
	mov.b32 %r4212, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4213, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4214, %r4086, %r4212;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4217, %r4214, %r4213;
	// end inline asm
	// begin inline asm
	mov.b32 %r4220, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4221, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4222, %r4089, %r4220;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4225, %r4222, %r4221;
	// end inline asm
	// begin inline asm
	mov.b32 %r4228, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4229, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4230, %r4092, %r4228;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4233, %r4230, %r4229;
	// end inline asm
	// begin inline asm
	mov.b32 %r4236, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4237, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4238, %r4095, %r4236;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4241, %r4238, %r4237;
	// end inline asm
	// begin inline asm
	mov.b32 %r4244, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4245, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4246, %r4098, %r4244;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4249, %r4246, %r4245;
	// end inline asm
	// begin inline asm
	mov.b32 %r4252, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4253, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4254, %r4101, %r4252;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4257, %r4254, %r4253;
	// end inline asm
	// begin inline asm
	mov.b32 %r4260, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4261, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4262, %r4104, %r4260;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4265, %r4262, %r4261;
	// end inline asm
	// begin inline asm
	mov.b32 %r4268, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4269, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4270, %r4107, %r4268;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4273, %r4270, %r4269;
	// end inline asm
	// begin inline asm
	mov.b32 %r4276, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4277, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4278, %r4110, %r4276;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4281, %r4278, %r4277;
	// end inline asm
	// begin inline asm
	mov.b32 %r4284, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4285, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4286, %r4113, %r4284;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4289, %r4286, %r4285;
	// end inline asm
	// begin inline asm
	mov.b32 %r4292, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4293, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4294, %r4116, %r4292;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4297, %r4294, %r4293;
	// end inline asm
	// begin inline asm
	mov.b32 %r4300, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4301, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4302, %r4119, %r4300;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4305, %r4302, %r4301;
	// end inline asm
	// begin inline asm
	mov.b32 %r4308, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4309, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4310, %r4122, %r4308;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4313, %r4310, %r4309;
	// end inline asm
	// begin inline asm
	mov.b32 %r4316, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4317, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4318, %r4125, %r4316;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4321, %r4318, %r4317;
	// end inline asm
	// begin inline asm
	mov.b32 %r4324, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4325, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4326, %r4128, %r4324;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4329, %r4326, %r4325;
	// end inline asm
	// begin inline asm
	mov.b32 %r4332, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4333, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4334, %r4131, %r4332;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4337, %r4334, %r4333;
	// end inline asm
	// begin inline asm
	mov.b32 %r4340, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4341, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4342, %r4134, %r4340;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4345, %r4342, %r4341;
	// end inline asm
	// begin inline asm
	mov.b32 %r4348, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4349, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4350, %r4137, %r4348;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4353, %r4350, %r4349;
	// end inline asm
	// begin inline asm
	mov.b32 %r4356, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4357, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4358, %r4140, %r4356;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4361, %r4358, %r4357;
	// end inline asm
	// begin inline asm
	mov.b32 %r4364, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4365, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4366, %r4143, %r4364;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4369, %r4366, %r4365;
	// end inline asm
	// begin inline asm
	mov.b32 %r4372, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4373, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4374, %r4146, %r4372;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4377, %r4374, %r4373;
	// end inline asm
	// begin inline asm
	mov.b32 %r4380, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4381, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4382, %r4149, %r4380;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4385, %r4382, %r4381;
	// end inline asm
	// begin inline asm
	mov.b32 %r4388, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4389, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4390, %r4152, %r4388;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4393, %r4390, %r4389;
	// end inline asm
	// begin inline asm
	mov.b32 %r4396, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4397, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4398, %r4155, %r4396;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4401, %r4398, %r4397;
	// end inline asm
	// begin inline asm
	mov.b32 %r4404, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4405, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4406, %r4158, %r4404;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4409, %r4406, %r4405;
	// end inline asm
	// begin inline asm
	mov.b32 %r4412, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4413, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4414, %r4161, %r4412;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4417, %r4414, %r4413;
	// end inline asm
	// begin inline asm
	mov.b32 %r4423, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4421, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4422, %r4423, %r4421;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4425, %r4169, %r4422;
	// end inline asm
	// begin inline asm
	mov.b32 %r4428, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4429, %r4423, %r4428;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4432, %r4177, %r4429;
	// end inline asm
	// begin inline asm
	mov.b32 %r4435, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4436, %r4423, %r4435;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4439, %r4185, %r4436;
	// end inline asm
	// begin inline asm
	mov.b32 %r4442, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4443, %r4423, %r4442;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4446, %r4193, %r4443;
	// end inline asm
	mov.u32 	%r4452, 25152;
	// begin inline asm
	prmt.b32 %r4449, %r4425, %r4439, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4453, %r4432, %r4446, %r4452;
	// end inline asm
	shl.b32 	%r4460, %r4453, 4;
	mov.u32 	%r4458, 252645135;
	// begin inline asm
	lop3.b32 %r4457, %r4458, %r4449, %r4460, 202;
	// end inline asm
	xor.b32  	%r16204, %r4457, -2004318072;
	// begin inline asm
	mov.b32 %r4464, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4462, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4463, %r4464, %r4462;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4466, %r4201, %r4463;
	// end inline asm
	// begin inline asm
	mov.b32 %r4469, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4470, %r4464, %r4469;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4473, %r4209, %r4470;
	// end inline asm
	// begin inline asm
	mov.b32 %r4476, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4477, %r4464, %r4476;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4480, %r4217, %r4477;
	// end inline asm
	// begin inline asm
	mov.b32 %r4483, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4484, %r4464, %r4483;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4487, %r4225, %r4484;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4490, %r4466, %r4480, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4494, %r4473, %r4487, %r4452;
	// end inline asm
	shl.b32 	%r4501, %r4494, 4;
	// begin inline asm
	lop3.b32 %r4498, %r4458, %r4490, %r4501, 202;
	// end inline asm
	xor.b32  	%r16205, %r4498, -2004318072;
	// begin inline asm
	mov.b32 %r4505, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4503, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4504, %r4505, %r4503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4507, %r4233, %r4504;
	// end inline asm
	// begin inline asm
	mov.b32 %r4510, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4511, %r4505, %r4510;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4514, %r4241, %r4511;
	// end inline asm
	// begin inline asm
	mov.b32 %r4517, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4518, %r4505, %r4517;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4521, %r4249, %r4518;
	// end inline asm
	// begin inline asm
	mov.b32 %r4524, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4525, %r4505, %r4524;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4528, %r4257, %r4525;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4531, %r4507, %r4521, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4535, %r4514, %r4528, %r4452;
	// end inline asm
	shl.b32 	%r4542, %r4535, 4;
	// begin inline asm
	lop3.b32 %r4539, %r4458, %r4531, %r4542, 202;
	// end inline asm
	xor.b32  	%r16206, %r4539, -2004318072;
	// begin inline asm
	mov.b32 %r4546, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4544, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4545, %r4546, %r4544;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4548, %r4265, %r4545;
	// end inline asm
	// begin inline asm
	mov.b32 %r4551, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4552, %r4546, %r4551;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4555, %r4273, %r4552;
	// end inline asm
	// begin inline asm
	mov.b32 %r4558, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4559, %r4546, %r4558;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4562, %r4281, %r4559;
	// end inline asm
	// begin inline asm
	mov.b32 %r4565, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4566, %r4546, %r4565;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4569, %r4289, %r4566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4572, %r4548, %r4562, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4576, %r4555, %r4569, %r4452;
	// end inline asm
	shl.b32 	%r4583, %r4576, 4;
	// begin inline asm
	lop3.b32 %r4580, %r4458, %r4572, %r4583, 202;
	// end inline asm
	xor.b32  	%r16207, %r4580, -2004318072;
	// begin inline asm
	mov.b32 %r4587, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4585, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4586, %r4587, %r4585;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4589, %r4297, %r4586;
	// end inline asm
	// begin inline asm
	mov.b32 %r4592, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4593, %r4587, %r4592;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4596, %r4305, %r4593;
	// end inline asm
	// begin inline asm
	mov.b32 %r4599, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4600, %r4587, %r4599;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4603, %r4313, %r4600;
	// end inline asm
	// begin inline asm
	mov.b32 %r4606, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4607, %r4587, %r4606;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4610, %r4321, %r4607;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4613, %r4589, %r4603, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4617, %r4596, %r4610, %r4452;
	// end inline asm
	shl.b32 	%r4624, %r4617, 4;
	// begin inline asm
	lop3.b32 %r4621, %r4458, %r4613, %r4624, 202;
	// end inline asm
	xor.b32  	%r16208, %r4621, -2004318072;
	// begin inline asm
	mov.b32 %r4628, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4626, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4627, %r4628, %r4626;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4630, %r4329, %r4627;
	// end inline asm
	// begin inline asm
	mov.b32 %r4633, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4634, %r4628, %r4633;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4637, %r4337, %r4634;
	// end inline asm
	// begin inline asm
	mov.b32 %r4640, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4641, %r4628, %r4640;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4644, %r4345, %r4641;
	// end inline asm
	// begin inline asm
	mov.b32 %r4647, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4648, %r4628, %r4647;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4651, %r4353, %r4648;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4654, %r4630, %r4644, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4658, %r4637, %r4651, %r4452;
	// end inline asm
	shl.b32 	%r4665, %r4658, 4;
	// begin inline asm
	lop3.b32 %r4662, %r4458, %r4654, %r4665, 202;
	// end inline asm
	xor.b32  	%r16209, %r4662, -2004318072;
	// begin inline asm
	mov.b32 %r4669, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4667, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4668, %r4669, %r4667;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4671, %r4361, %r4668;
	// end inline asm
	// begin inline asm
	mov.b32 %r4674, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4675, %r4669, %r4674;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4678, %r4369, %r4675;
	// end inline asm
	// begin inline asm
	mov.b32 %r4681, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4682, %r4669, %r4681;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4685, %r4377, %r4682;
	// end inline asm
	// begin inline asm
	mov.b32 %r4688, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4689, %r4669, %r4688;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4692, %r4385, %r4689;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4695, %r4671, %r4685, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4699, %r4678, %r4692, %r4452;
	// end inline asm
	shl.b32 	%r4706, %r4699, 4;
	// begin inline asm
	lop3.b32 %r4703, %r4458, %r4695, %r4706, 202;
	// end inline asm
	xor.b32  	%r16210, %r4703, -2004318072;
	// begin inline asm
	mov.b32 %r4710, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4708, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4709, %r4710, %r4708;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4712, %r4393, %r4709;
	// end inline asm
	// begin inline asm
	mov.b32 %r4715, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4716, %r4710, %r4715;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4719, %r4401, %r4716;
	// end inline asm
	// begin inline asm
	mov.b32 %r4722, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4723, %r4710, %r4722;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4726, %r4409, %r4723;
	// end inline asm
	// begin inline asm
	mov.b32 %r4729, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4730, %r4710, %r4729;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4733, %r4417, %r4730;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4736, %r4712, %r4726, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4740, %r4719, %r4733, %r4452;
	// end inline asm
	shl.b32 	%r4747, %r4740, 4;
	// begin inline asm
	lop3.b32 %r4744, %r4458, %r4736, %r4747, 202;
	// end inline asm
	xor.b32  	%r16211, %r4744, -2004318072;
	add.s64 	%rd117, %rd173, %rd42;
	st.shared.u32 	[%rd117], %r16204;
	add.s64 	%rd118, %rd173, %rd39;
	st.shared.u32 	[%rd118], %r16205;
	add.s64 	%rd119, %rd173, %rd36;
	st.shared.u32 	[%rd119], %r16206;
	add.s64 	%rd120, %rd173, %rd33;
	st.shared.u32 	[%rd120], %r16207;
	add.s64 	%rd121, %rd173, %rd41;
	st.shared.u32 	[%rd121], %r16208;
	add.s64 	%rd122, %rd173, %rd38;
	st.shared.u32 	[%rd122], %r16209;
	add.s64 	%rd123, %rd173, %rd35;
	st.shared.u32 	[%rd123], %r16210;
	add.s64 	%rd124, %rd173, %rd32;
	st.shared.u32 	[%rd124], %r16211;
	ld.shared.u32 	%r16383, [%rd109];
	ld.shared.u32 	%r16384, [%rd110];
	ld.shared.u32 	%r16385, [%rd111];
	ld.shared.u32 	%r16386, [%rd112];
	ld.shared.u32 	%r16395, [%rd113];
	ld.shared.u32 	%r16396, [%rd114];
	ld.shared.u32 	%r16397, [%rd115];
	ld.shared.u32 	%r16398, [%rd116];
	// begin inline asm
	mov.b32 %r4753, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4764, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4752, %r16383, -2004318072;
	// begin inline asm
	lop3.b32 %r4750, %r935, %r4752, %r4753, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4754, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4755, %r4753, %r4754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4758, %r4750, %r4755;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4761, %r946, %r4752, %r4764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4765, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4766, %r4764, %r4765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4769, %r4761, %r4766;
	// end inline asm
	shr.u32 	%r4774, %r4752, 8;
	// begin inline asm
	lop3.b32 %r4772, %r935, %r4774, %r4753, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4776, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4777, %r4753, %r4776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4780, %r4772, %r4777;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4783, %r946, %r4774, %r4764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4787, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4788, %r4764, %r4787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4791, %r4783, %r4788;
	// end inline asm
	// begin inline asm
	mov.b32 %r4799, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4810, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4798, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r4796, %r935, %r4798, %r4799, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4800, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4801, %r4799, %r4800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4804, %r4796, %r4801;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4807, %r946, %r4798, %r4810, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4811, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4812, %r4810, %r4811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4815, %r4807, %r4812;
	// end inline asm
	shr.u32 	%r4820, %r4798, 8;
	// begin inline asm
	lop3.b32 %r4818, %r935, %r4820, %r4799, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4822, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4823, %r4799, %r4822;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4826, %r4818, %r4823;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4829, %r946, %r4820, %r4810, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4833, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4834, %r4810, %r4833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4837, %r4829, %r4834;
	// end inline asm
	// begin inline asm
	mov.b32 %r4845, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4856, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4844, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r4842, %r935, %r4844, %r4845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4846, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4847, %r4845, %r4846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4850, %r4842, %r4847;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4853, %r946, %r4844, %r4856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4857, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4858, %r4856, %r4857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4861, %r4853, %r4858;
	// end inline asm
	shr.u32 	%r4866, %r4844, 8;
	// begin inline asm
	lop3.b32 %r4864, %r935, %r4866, %r4845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4868, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4869, %r4845, %r4868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4872, %r4864, %r4869;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4875, %r946, %r4866, %r4856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4879, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4880, %r4856, %r4879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4883, %r4875, %r4880;
	// end inline asm
	// begin inline asm
	mov.b32 %r4891, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4902, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4890, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r4888, %r935, %r4890, %r4891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4892, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4893, %r4891, %r4892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4896, %r4888, %r4893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4899, %r946, %r4890, %r4902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4903, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4904, %r4902, %r4903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4907, %r4899, %r4904;
	// end inline asm
	shr.u32 	%r4912, %r4890, 8;
	// begin inline asm
	lop3.b32 %r4910, %r935, %r4912, %r4891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4914, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4915, %r4891, %r4914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4918, %r4910, %r4915;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4921, %r946, %r4912, %r4902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4925, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4926, %r4902, %r4925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4929, %r4921, %r4926;
	// end inline asm
	// begin inline asm
	mov.b32 %r4937, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4948, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4936, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r4934, %r935, %r4936, %r4937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4938, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4939, %r4937, %r4938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4942, %r4934, %r4939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4945, %r946, %r4936, %r4948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4949, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4950, %r4948, %r4949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4953, %r4945, %r4950;
	// end inline asm
	shr.u32 	%r4958, %r4936, 8;
	// begin inline asm
	lop3.b32 %r4956, %r935, %r4958, %r4937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4960, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4961, %r4937, %r4960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4964, %r4956, %r4961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4967, %r946, %r4958, %r4948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4971, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4972, %r4948, %r4971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4975, %r4967, %r4972;
	// end inline asm
	// begin inline asm
	mov.b32 %r4983, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4994, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4982, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r4980, %r935, %r4982, %r4983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4984, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4985, %r4983, %r4984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4988, %r4980, %r4985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4991, %r946, %r4982, %r4994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4995, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4996, %r4994, %r4995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4999, %r4991, %r4996;
	// end inline asm
	shr.u32 	%r5004, %r4982, 8;
	// begin inline asm
	lop3.b32 %r5002, %r935, %r5004, %r4983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5006, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5007, %r4983, %r5006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5010, %r5002, %r5007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5013, %r946, %r5004, %r4994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5017, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5018, %r4994, %r5017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5021, %r5013, %r5018;
	// end inline asm
	// begin inline asm
	mov.b32 %r5029, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5040, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r5028, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r5026, %r935, %r5028, %r5029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5030, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5031, %r5029, %r5030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5034, %r5026, %r5031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5037, %r946, %r5028, %r5040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5041, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5042, %r5040, %r5041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5045, %r5037, %r5042;
	// end inline asm
	shr.u32 	%r5050, %r5028, 8;
	// begin inline asm
	lop3.b32 %r5048, %r935, %r5050, %r5029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5052, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5053, %r5029, %r5052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5056, %r5048, %r5053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5059, %r946, %r5050, %r5040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5063, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5064, %r5040, %r5063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5067, %r5059, %r5064;
	// end inline asm
	// begin inline asm
	mov.b32 %r5075, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5086, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r5074, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r5072, %r935, %r5074, %r5075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5076, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5077, %r5075, %r5076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5080, %r5072, %r5077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5083, %r946, %r5074, %r5086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5087, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5088, %r5086, %r5087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5091, %r5083, %r5088;
	// end inline asm
	shr.u32 	%r5096, %r5074, 8;
	// begin inline asm
	lop3.b32 %r5094, %r935, %r5096, %r5075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5098, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5099, %r5075, %r5098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5102, %r5094, %r5099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5105, %r946, %r5096, %r5086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5109, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5110, %r5086, %r5109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5113, %r5105, %r5110;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5116, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5118, %r5116, %r4758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5121, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5123, %r5121, %r4769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5126, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5128, %r5126, %r4780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5131, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5133, %r5131, %r4791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5136, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5138, %r5136, %r4804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5141, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5143, %r5141, %r4815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5146, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5148, %r5146, %r4826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5151, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5153, %r5151, %r4837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5156, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5158, %r5156, %r4850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5161, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5163, %r5161, %r4861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5166, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5168, %r5166, %r4872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5171, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5173, %r5171, %r4883;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5176, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5178, %r5176, %r4896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5181, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5183, %r5181, %r4907;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5186, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5188, %r5186, %r4918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5191, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5193, %r5191, %r4929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5196, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5198, %r5196, %r4942;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5201, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5203, %r5201, %r4953;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5206, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5208, %r5206, %r4964;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5211, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5213, %r5211, %r4975;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5216, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5218, %r5216, %r4988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5221, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5223, %r5221, %r4999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5226, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5228, %r5226, %r5010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5231, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5233, %r5231, %r5021;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5236, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5238, %r5236, %r5034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5241, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5243, %r5241, %r5045;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5246, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5248, %r5246, %r5056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5251, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5253, %r5251, %r5067;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5256, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5258, %r5256, %r5080;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5261, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5263, %r5261, %r5091;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5266, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5268, %r5266, %r5102;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5271, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5273, %r5271, %r5113;
	// end inline asm
	// begin inline asm
	mov.b32 %r5281, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5292, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5278, %r935, %r1960, %r5281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5282, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5283, %r5281, %r5282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5286, %r5278, %r5283;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5289, %r946, %r1960, %r5292, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5293, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5294, %r5292, %r5293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5297, %r5289, %r5294;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5300, %r935, %r1982, %r5281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5304, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5305, %r5281, %r5304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5308, %r5300, %r5305;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5311, %r946, %r1982, %r5292, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5315, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5316, %r5292, %r5315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5319, %r5311, %r5316;
	// end inline asm
	// begin inline asm
	mov.b32 %r5327, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5338, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5324, %r935, %r2006, %r5327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5328, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5329, %r5327, %r5328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5332, %r5324, %r5329;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5335, %r946, %r2006, %r5338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5339, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5340, %r5338, %r5339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5343, %r5335, %r5340;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5346, %r935, %r2028, %r5327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5350, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5351, %r5327, %r5350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5354, %r5346, %r5351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5357, %r946, %r2028, %r5338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5361, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5362, %r5338, %r5361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5365, %r5357, %r5362;
	// end inline asm
	// begin inline asm
	mov.b32 %r5373, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5384, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5370, %r935, %r2052, %r5373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5374, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5375, %r5373, %r5374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5378, %r5370, %r5375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5381, %r946, %r2052, %r5384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5385, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5386, %r5384, %r5385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5389, %r5381, %r5386;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5392, %r935, %r2074, %r5373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5396, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5397, %r5373, %r5396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5400, %r5392, %r5397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5403, %r946, %r2074, %r5384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5407, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5408, %r5384, %r5407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5411, %r5403, %r5408;
	// end inline asm
	// begin inline asm
	mov.b32 %r5419, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5430, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5416, %r935, %r2098, %r5419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5420, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5421, %r5419, %r5420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5424, %r5416, %r5421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5427, %r946, %r2098, %r5430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5431, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5432, %r5430, %r5431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5435, %r5427, %r5432;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5438, %r935, %r2120, %r5419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5442, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5443, %r5419, %r5442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5446, %r5438, %r5443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5449, %r946, %r2120, %r5430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5453, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5454, %r5430, %r5453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5457, %r5449, %r5454;
	// end inline asm
	// begin inline asm
	mov.b32 %r5465, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5476, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5462, %r935, %r2144, %r5465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5466, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5467, %r5465, %r5466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5470, %r5462, %r5467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5473, %r946, %r2144, %r5476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5477, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5478, %r5476, %r5477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5481, %r5473, %r5478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5484, %r935, %r2166, %r5465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5488, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5489, %r5465, %r5488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5492, %r5484, %r5489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5495, %r946, %r2166, %r5476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5499, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5500, %r5476, %r5499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5503, %r5495, %r5500;
	// end inline asm
	// begin inline asm
	mov.b32 %r5511, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5522, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5508, %r935, %r2190, %r5511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5512, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5513, %r5511, %r5512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5516, %r5508, %r5513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5519, %r946, %r2190, %r5522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5523, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5524, %r5522, %r5523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5527, %r5519, %r5524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5530, %r935, %r2212, %r5511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5534, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5535, %r5511, %r5534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5538, %r5530, %r5535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5541, %r946, %r2212, %r5522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5545, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5546, %r5522, %r5545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5549, %r5541, %r5546;
	// end inline asm
	// begin inline asm
	mov.b32 %r5557, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5568, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5554, %r935, %r2236, %r5557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5558, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5559, %r5557, %r5558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5562, %r5554, %r5559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5565, %r946, %r2236, %r5568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5569, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5570, %r5568, %r5569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5573, %r5565, %r5570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5576, %r935, %r2258, %r5557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5580, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5581, %r5557, %r5580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5584, %r5576, %r5581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5587, %r946, %r2258, %r5568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5591, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5592, %r5568, %r5591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5595, %r5587, %r5592;
	// end inline asm
	// begin inline asm
	mov.b32 %r5603, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5614, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5600, %r935, %r2282, %r5603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5604, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5605, %r5603, %r5604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5608, %r5600, %r5605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5611, %r946, %r2282, %r5614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5615, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5616, %r5614, %r5615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5619, %r5611, %r5616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5622, %r935, %r2304, %r5603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5626, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5627, %r5603, %r5626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5630, %r5622, %r5627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5633, %r946, %r2304, %r5614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5637, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5638, %r5614, %r5637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5641, %r5633, %r5638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5644, %r288, %r5286, %r5118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5648, %r288, %r5297, %r5123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5652, %r288, %r5308, %r5128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5656, %r288, %r5319, %r5133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5660, %r288, %r5332, %r5138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5664, %r288, %r5343, %r5143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5668, %r288, %r5354, %r5148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5672, %r288, %r5365, %r5153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5676, %r288, %r5378, %r5158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5680, %r288, %r5389, %r5163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5684, %r288, %r5400, %r5168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5688, %r288, %r5411, %r5173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5692, %r288, %r5424, %r5178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5696, %r288, %r5435, %r5183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5700, %r288, %r5446, %r5188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5704, %r288, %r5457, %r5193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5708, %r306, %r5470, %r5198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5712, %r306, %r5481, %r5203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5716, %r306, %r5492, %r5208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5720, %r306, %r5503, %r5213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5724, %r306, %r5516, %r5218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5728, %r306, %r5527, %r5223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5732, %r306, %r5538, %r5228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5736, %r306, %r5549, %r5233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5740, %r306, %r5562, %r5238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5744, %r306, %r5573, %r5243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5748, %r306, %r5584, %r5248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5752, %r306, %r5595, %r5253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5756, %r306, %r5608, %r5258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5760, %r306, %r5619, %r5263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5764, %r306, %r5630, %r5268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5768, %r306, %r5641, %r5273;
	// end inline asm
	// begin inline asm
	mov.b32 %r5777, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5788, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5774, %r935, %r2520, %r5777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5778, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5779, %r5777, %r5778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5782, %r5774, %r5779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5785, %r946, %r2520, %r5788, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5789, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5790, %r5788, %r5789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5793, %r5785, %r5790;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5796, %r935, %r2542, %r5777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5800, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5801, %r5777, %r5800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5804, %r5796, %r5801;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5807, %r946, %r2542, %r5788, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5811, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5812, %r5788, %r5811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5815, %r5807, %r5812;
	// end inline asm
	// begin inline asm
	mov.b32 %r5823, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5834, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5820, %r935, %r2566, %r5823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5824, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5825, %r5823, %r5824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5828, %r5820, %r5825;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5831, %r946, %r2566, %r5834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5835, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5836, %r5834, %r5835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5839, %r5831, %r5836;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5842, %r935, %r2588, %r5823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5846, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5847, %r5823, %r5846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5850, %r5842, %r5847;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5853, %r946, %r2588, %r5834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5857, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5858, %r5834, %r5857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5861, %r5853, %r5858;
	// end inline asm
	// begin inline asm
	mov.b32 %r5869, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5880, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5866, %r935, %r2612, %r5869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5870, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5871, %r5869, %r5870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5874, %r5866, %r5871;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5877, %r946, %r2612, %r5880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5881, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5882, %r5880, %r5881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5885, %r5877, %r5882;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5888, %r935, %r2634, %r5869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5892, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5893, %r5869, %r5892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5896, %r5888, %r5893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5899, %r946, %r2634, %r5880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5903, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5904, %r5880, %r5903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5907, %r5899, %r5904;
	// end inline asm
	// begin inline asm
	mov.b32 %r5915, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5926, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5912, %r935, %r2658, %r5915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5916, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5917, %r5915, %r5916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5920, %r5912, %r5917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5923, %r946, %r2658, %r5926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5927, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5928, %r5926, %r5927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5931, %r5923, %r5928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5934, %r935, %r2680, %r5915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5938, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5939, %r5915, %r5938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5942, %r5934, %r5939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5945, %r946, %r2680, %r5926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5949, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5950, %r5926, %r5949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5953, %r5945, %r5950;
	// end inline asm
	// begin inline asm
	mov.b32 %r5961, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5972, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5958, %r935, %r2704, %r5961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5962, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5963, %r5961, %r5962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5966, %r5958, %r5963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5969, %r946, %r2704, %r5972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5973, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5974, %r5972, %r5973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5977, %r5969, %r5974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5980, %r935, %r2726, %r5961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5984, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5985, %r5961, %r5984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5988, %r5980, %r5985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5991, %r946, %r2726, %r5972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5995, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5996, %r5972, %r5995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5999, %r5991, %r5996;
	// end inline asm
	// begin inline asm
	mov.b32 %r6007, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6018, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6004, %r935, %r2750, %r6007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6008, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6009, %r6007, %r6008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6012, %r6004, %r6009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6015, %r946, %r2750, %r6018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6019, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6020, %r6018, %r6019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6023, %r6015, %r6020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6026, %r935, %r2772, %r6007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6030, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6031, %r6007, %r6030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6034, %r6026, %r6031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6037, %r946, %r2772, %r6018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6041, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6042, %r6018, %r6041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6045, %r6037, %r6042;
	// end inline asm
	// begin inline asm
	mov.b32 %r6053, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6064, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6050, %r935, %r2796, %r6053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6054, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6055, %r6053, %r6054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6058, %r6050, %r6055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6061, %r946, %r2796, %r6064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6065, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6066, %r6064, %r6065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6069, %r6061, %r6066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6072, %r935, %r2818, %r6053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6076, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6077, %r6053, %r6076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6080, %r6072, %r6077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6083, %r946, %r2818, %r6064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6087, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6088, %r6064, %r6087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6091, %r6083, %r6088;
	// end inline asm
	// begin inline asm
	mov.b32 %r6099, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6110, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6096, %r935, %r2842, %r6099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6100, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6101, %r6099, %r6100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6104, %r6096, %r6101;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6107, %r946, %r2842, %r6110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6111, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6112, %r6110, %r6111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6115, %r6107, %r6112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6118, %r935, %r2864, %r6099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6122, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6123, %r6099, %r6122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6126, %r6118, %r6123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6129, %r946, %r2864, %r6110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6133, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6134, %r6110, %r6133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6137, %r6129, %r6134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6140, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6142, %r6140, %r5782, %r5644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6146, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6148, %r6146, %r5793, %r5648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6152, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6154, %r6152, %r5804, %r5652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6158, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6160, %r6158, %r5815, %r5656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6164, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6166, %r6164, %r5828, %r5660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6170, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6172, %r6170, %r5839, %r5664;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6176, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6178, %r6176, %r5850, %r5668;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6182, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6184, %r6182, %r5861, %r5672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6188, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6190, %r6188, %r5874, %r5676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6194, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6196, %r6194, %r5885, %r5680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6200, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6202, %r6200, %r5896, %r5684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6206, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6208, %r6206, %r5907, %r5688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6212, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6214, %r6212, %r5920, %r5692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6218, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6220, %r6218, %r5931, %r5696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6224, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6226, %r6224, %r5942, %r5700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6230, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6232, %r6230, %r5953, %r5704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6236, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6238, %r6236, %r5966, %r5708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6242, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6244, %r6242, %r5977, %r5712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6248, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6250, %r6248, %r5988, %r5716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6254, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6256, %r6254, %r5999, %r5720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6260, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6262, %r6260, %r6012, %r5724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6266, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6268, %r6266, %r6023, %r5728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6272, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6274, %r6272, %r6034, %r5732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6278, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6280, %r6278, %r6045, %r5736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6284, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6286, %r6284, %r6058, %r5740;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6290, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6292, %r6290, %r6069, %r5744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6296, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6298, %r6296, %r6080, %r5748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6302, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6304, %r6302, %r6091, %r5752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6308, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6310, %r6308, %r6104, %r5756;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6314, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6316, %r6314, %r6115, %r5760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6320, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6322, %r6320, %r6126, %r5764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6326, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6328, %r6326, %r6137, %r5768;
	// end inline asm
	// begin inline asm
	mov.b32 %r6337, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6348, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6334, %r935, %r936, %r6337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6338, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6339, %r6337, %r6338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6342, %r6334, %r6339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6345, %r946, %r936, %r6348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6349, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6350, %r6348, %r6349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6353, %r6345, %r6350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6356, %r935, %r958, %r6337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6360, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6361, %r6337, %r6360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6364, %r6356, %r6361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6367, %r946, %r958, %r6348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6371, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6372, %r6348, %r6371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6375, %r6367, %r6372;
	// end inline asm
	// begin inline asm
	mov.b32 %r6383, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6394, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6380, %r935, %r982, %r6383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6384, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6385, %r6383, %r6384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6388, %r6380, %r6385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6391, %r946, %r982, %r6394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6395, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6396, %r6394, %r6395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6399, %r6391, %r6396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6402, %r935, %r1004, %r6383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6406, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6407, %r6383, %r6406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6410, %r6402, %r6407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6413, %r946, %r1004, %r6394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6417, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6418, %r6394, %r6417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6421, %r6413, %r6418;
	// end inline asm
	// begin inline asm
	mov.b32 %r6429, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6440, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6426, %r935, %r1028, %r6429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6430, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6431, %r6429, %r6430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6434, %r6426, %r6431;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6437, %r946, %r1028, %r6440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6441, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6442, %r6440, %r6441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6445, %r6437, %r6442;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6448, %r935, %r1050, %r6429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6452, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6453, %r6429, %r6452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6456, %r6448, %r6453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6459, %r946, %r1050, %r6440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6463, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6464, %r6440, %r6463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6467, %r6459, %r6464;
	// end inline asm
	// begin inline asm
	mov.b32 %r6475, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6486, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6472, %r935, %r1074, %r6475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6476, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6477, %r6475, %r6476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6480, %r6472, %r6477;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6483, %r946, %r1074, %r6486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6487, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6488, %r6486, %r6487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6491, %r6483, %r6488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6494, %r935, %r1096, %r6475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6498, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6499, %r6475, %r6498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6502, %r6494, %r6499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6505, %r946, %r1096, %r6486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6509, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6510, %r6486, %r6509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6513, %r6505, %r6510;
	// end inline asm
	// begin inline asm
	mov.b32 %r6521, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6532, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6518, %r935, %r1120, %r6521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6522, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6523, %r6521, %r6522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6526, %r6518, %r6523;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6529, %r946, %r1120, %r6532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6533, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6534, %r6532, %r6533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6537, %r6529, %r6534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6540, %r935, %r1142, %r6521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6544, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6545, %r6521, %r6544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6548, %r6540, %r6545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6551, %r946, %r1142, %r6532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6555, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6556, %r6532, %r6555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6559, %r6551, %r6556;
	// end inline asm
	// begin inline asm
	mov.b32 %r6567, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6578, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6564, %r935, %r1166, %r6567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6568, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6569, %r6567, %r6568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6572, %r6564, %r6569;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6575, %r946, %r1166, %r6578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6579, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6580, %r6578, %r6579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6583, %r6575, %r6580;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6586, %r935, %r1188, %r6567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6590, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6591, %r6567, %r6590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6594, %r6586, %r6591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6597, %r946, %r1188, %r6578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6601, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6602, %r6578, %r6601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6605, %r6597, %r6602;
	// end inline asm
	// begin inline asm
	mov.b32 %r6613, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6624, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6610, %r935, %r1212, %r6613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6614, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6615, %r6613, %r6614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6618, %r6610, %r6615;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6621, %r946, %r1212, %r6624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6625, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6626, %r6624, %r6625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6629, %r6621, %r6626;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6632, %r935, %r1234, %r6613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6636, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6637, %r6613, %r6636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6640, %r6632, %r6637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6643, %r946, %r1234, %r6624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6647, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6648, %r6624, %r6647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6651, %r6643, %r6648;
	// end inline asm
	// begin inline asm
	mov.b32 %r6659, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6670, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6656, %r935, %r1258, %r6659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6660, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6661, %r6659, %r6660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6664, %r6656, %r6661;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6667, %r946, %r1258, %r6670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6671, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6672, %r6670, %r6671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6675, %r6667, %r6672;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6678, %r935, %r1280, %r6659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6682, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6683, %r6659, %r6682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6686, %r6678, %r6683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6689, %r946, %r1280, %r6670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6693, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6694, %r6670, %r6693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6697, %r6689, %r6694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6835, %r360, %r6342, %r6142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6832, %r360, %r6353, %r6148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6844, %r360, %r6364, %r6154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6841, %r360, %r6375, %r6160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6853, %r360, %r6388, %r6166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6850, %r360, %r6399, %r6172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6862, %r360, %r6410, %r6178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6859, %r360, %r6421, %r6184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6871, %r360, %r6434, %r6190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6868, %r360, %r6445, %r6196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6880, %r360, %r6456, %r6202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6877, %r360, %r6467, %r6208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6889, %r360, %r6480, %r6214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6886, %r360, %r6491, %r6220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6898, %r360, %r6502, %r6226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6895, %r360, %r6513, %r6232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6907, %r378, %r6526, %r6238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6904, %r378, %r6537, %r6244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6916, %r378, %r6548, %r6250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6913, %r378, %r6559, %r6256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6925, %r378, %r6572, %r6262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6922, %r378, %r6583, %r6268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6934, %r378, %r6594, %r6274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6931, %r378, %r6605, %r6280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6943, %r378, %r6618, %r6286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6940, %r378, %r6629, %r6292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6952, %r378, %r6640, %r6298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6949, %r378, %r6651, %r6304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6961, %r378, %r6664, %r6310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6958, %r378, %r6675, %r6316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6970, %r378, %r6686, %r6322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6967, %r378, %r6697, %r6328;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6828, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6830, %r6828, %r6832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6833, %r442, %r6835, %r6830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6837, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6839, %r6837, %r6841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6842, %r442, %r6844, %r6839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6846, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6848, %r6846, %r6850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6851, %r442, %r6853, %r6848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6855, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6857, %r6855, %r6859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6860, %r442, %r6862, %r6857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6864, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6866, %r6864, %r6868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6869, %r442, %r6871, %r6866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6873, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6875, %r6873, %r6877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6878, %r442, %r6880, %r6875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6882, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6884, %r6882, %r6886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6887, %r442, %r6889, %r6884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6891, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6893, %r6891, %r6895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6896, %r442, %r6898, %r6893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6900, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6902, %r6900, %r6904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6905, %r445, %r6907, %r6902;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6909, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6911, %r6909, %r6913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6914, %r445, %r6916, %r6911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6918, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6920, %r6918, %r6922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6923, %r445, %r6925, %r6920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6927, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6929, %r6927, %r6931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6932, %r445, %r6934, %r6929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6936, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6938, %r6936, %r6940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6941, %r445, %r6943, %r6938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6945, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6947, %r6945, %r6949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6950, %r445, %r6952, %r6947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6954, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6956, %r6954, %r6958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6959, %r445, %r6961, %r6956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6963, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6965, %r6963, %r6967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6968, %r445, %r6970, %r6965;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6972, %r448, %r6835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6975, %r442, %r6832, %r6972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6979, %r448, %r6844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6982, %r442, %r6841, %r6979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6986, %r448, %r6853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6989, %r442, %r6850, %r6986;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6993, %r448, %r6862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6996, %r442, %r6859, %r6993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7000, %r448, %r6871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7003, %r442, %r6868, %r7000;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7007, %r448, %r6880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7010, %r442, %r6877, %r7007;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7014, %r448, %r6889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7017, %r442, %r6886, %r7014;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7021, %r448, %r6898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7024, %r442, %r6895, %r7021;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7028, %r451, %r6907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7031, %r445, %r6904, %r7028;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7035, %r451, %r6916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7038, %r445, %r6913, %r7035;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7042, %r451, %r6925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7045, %r445, %r6922, %r7042;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7049, %r451, %r6934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7052, %r445, %r6931, %r7049;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7056, %r451, %r6943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7059, %r445, %r6940, %r7056;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7063, %r451, %r6952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7066, %r445, %r6949, %r7063;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7070, %r451, %r6961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7073, %r445, %r6958, %r7070;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7077, %r451, %r6970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7080, %r445, %r6967, %r7077;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7251, %r7248}, {%r497, %r503, %r500, %r506}, {%r6833, %r6975}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7260, %r7257}, {%r497, %r503, %r500, %r506}, {%r6842, %r6982}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7269, %r7266}, {%r497, %r503, %r500, %r506}, {%r6851, %r6989}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7278, %r7275}, {%r497, %r503, %r500, %r506}, {%r6860, %r6996}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7287, %r7284}, {%r497, %r503, %r500, %r506}, {%r6869, %r7003}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7296, %r7293}, {%r497, %r503, %r500, %r506}, {%r6878, %r7010}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7305, %r7302}, {%r497, %r503, %r500, %r506}, {%r6887, %r7017}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7314, %r7311}, {%r497, %r503, %r500, %r506}, {%r6896, %r7024}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7323, %r7320}, {%r497, %r503, %r500, %r506}, {%r6905, %r7031}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7332, %r7329}, {%r497, %r503, %r500, %r506}, {%r6914, %r7038}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7341, %r7338}, {%r497, %r503, %r500, %r506}, {%r6923, %r7045}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7350, %r7347}, {%r497, %r503, %r500, %r506}, {%r6932, %r7052}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7359, %r7356}, {%r497, %r503, %r500, %r506}, {%r6941, %r7059}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7368, %r7365}, {%r497, %r503, %r500, %r506}, {%r6950, %r7066}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7377, %r7374}, {%r497, %r503, %r500, %r506}, {%r6959, %r7073}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7386, %r7383}, {%r497, %r503, %r500, %r506}, {%r6968, %r7080}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7244, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7246, %r7244, %r7248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7249, %r547, %r7251, %r7246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7253, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7255, %r7253, %r7257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7258, %r547, %r7260, %r7255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7262, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7264, %r7262, %r7266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7267, %r547, %r7269, %r7264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7271, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7273, %r7271, %r7275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7276, %r547, %r7278, %r7273;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7280, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7282, %r7280, %r7284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7285, %r547, %r7287, %r7282;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7289, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7291, %r7289, %r7293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7294, %r547, %r7296, %r7291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7298, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7300, %r7298, %r7302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7303, %r547, %r7305, %r7300;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7307, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7309, %r7307, %r7311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7312, %r547, %r7314, %r7309;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7316, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7318, %r7316, %r7320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7321, %r547, %r7323, %r7318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7325, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7327, %r7325, %r7329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7330, %r547, %r7332, %r7327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7334, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7336, %r7334, %r7338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7339, %r547, %r7341, %r7336;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7343, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7345, %r7343, %r7347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7348, %r547, %r7350, %r7345;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7352, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7354, %r7352, %r7356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7357, %r547, %r7359, %r7354;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7361, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7363, %r7361, %r7365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7366, %r547, %r7368, %r7363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7370, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7372, %r7370, %r7374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7375, %r547, %r7377, %r7372;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7379, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7381, %r7379, %r7383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7384, %r547, %r7386, %r7381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7388, %r550, %r7251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7391, %r547, %r7248, %r7388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7395, %r550, %r7260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7398, %r547, %r7257, %r7395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7402, %r550, %r7269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7405, %r547, %r7266, %r7402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7409, %r550, %r7278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7412, %r547, %r7275, %r7409;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7416, %r550, %r7287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7419, %r547, %r7284, %r7416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7423, %r550, %r7296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7426, %r547, %r7293, %r7423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7430, %r550, %r7305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7433, %r547, %r7302, %r7430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7437, %r550, %r7314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7440, %r547, %r7311, %r7437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7444, %r550, %r7323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7447, %r547, %r7320, %r7444;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7451, %r550, %r7332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7454, %r547, %r7329, %r7451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7458, %r550, %r7341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7461, %r547, %r7338, %r7458;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7465, %r550, %r7350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7468, %r547, %r7347, %r7465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7472, %r550, %r7359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7475, %r547, %r7356, %r7472;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7479, %r550, %r7368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7482, %r547, %r7365, %r7479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7486, %r550, %r7377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7489, %r547, %r7374, %r7486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7493, %r550, %r7386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7496, %r547, %r7383, %r7493;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7789, %r7792}, {%r585, %r591, %r588, %r594}, {%r7249, %r7391}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7795, %r7798}, {%r585, %r591, %r588, %r594}, {%r7258, %r7398}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7801, %r7804}, {%r585, %r591, %r588, %r594}, {%r7267, %r7405}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7807, %r7810}, {%r585, %r591, %r588, %r594}, {%r7276, %r7412}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7813, %r7816}, {%r585, %r591, %r588, %r594}, {%r7285, %r7419}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7819, %r7822}, {%r585, %r591, %r588, %r594}, {%r7294, %r7426}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7825, %r7828}, {%r585, %r591, %r588, %r594}, {%r7303, %r7433}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7831, %r7834}, {%r585, %r591, %r588, %r594}, {%r7312, %r7440}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7790, %r7793}, {%r585, %r591, %r588, %r594}, {%r7321, %r7447}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7796, %r7799}, {%r585, %r591, %r588, %r594}, {%r7330, %r7454}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7802, %r7805}, {%r585, %r591, %r588, %r594}, {%r7339, %r7461}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7808, %r7811}, {%r585, %r591, %r588, %r594}, {%r7348, %r7468}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7814, %r7817}, {%r585, %r591, %r588, %r594}, {%r7357, %r7475}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7820, %r7823}, {%r585, %r591, %r588, %r594}, {%r7366, %r7482}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7826, %r7829}, {%r585, %r591, %r588, %r594}, {%r7375, %r7489}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7832, %r7835}, {%r585, %r591, %r588, %r594}, {%r7384, %r7496}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7788, %r7789, %r7790;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7791, %r7792, %r7793;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7794, %r7795, %r7796;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7797, %r7798, %r7799;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7800, %r7801, %r7802;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7803, %r7804, %r7805;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7806, %r7807, %r7808;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7809, %r7810, %r7811;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7812, %r7813, %r7814;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7815, %r7816, %r7817;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7818, %r7819, %r7820;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7821, %r7822, %r7823;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7824, %r7825, %r7826;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7827, %r7828, %r7829;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7830, %r7831, %r7832;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7833, %r7834, %r7835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7836, %r7789, %r7790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7839, %r7792, %r7793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7842, %r7795, %r7796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7845, %r7798, %r7799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7848, %r7801, %r7802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7851, %r7804, %r7805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7854, %r7807, %r7808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7857, %r7810, %r7811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7860, %r7813, %r7814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7863, %r7816, %r7817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7866, %r7819, %r7820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7869, %r7822, %r7823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7872, %r7825, %r7826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7875, %r7828, %r7829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7878, %r7831, %r7832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7881, %r7834, %r7835;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7884, %r218, %r7788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7887, %r218, %r7791;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7890, %r218, %r7794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7893, %r218, %r7797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7896, %r218, %r7800;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7899, %r218, %r7803;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7902, %r218, %r7806;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7905, %r218, %r7809;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7908, %r218, %r7812;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7911, %r218, %r7815;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7914, %r218, %r7818;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7917, %r218, %r7821;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7920, %r218, %r7824;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7923, %r218, %r7827;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7926, %r218, %r7830;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7929, %r218, %r7833;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7932, %r219, %r7836;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7935, %r219, %r7839;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7938, %r219, %r7842;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7941, %r219, %r7845;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7944, %r219, %r7848;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7947, %r219, %r7851;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7950, %r219, %r7854;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7953, %r219, %r7857;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7956, %r219, %r7860;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7959, %r219, %r7863;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7962, %r219, %r7866;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7965, %r219, %r7869;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7968, %r219, %r7872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7971, %r219, %r7875;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7974, %r219, %r7878;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7977, %r219, %r7881;
	// end inline asm
	// begin inline asm
	mov.b32 %r7980, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7981, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7982, %r7884, %r7980;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7985, %r7982, %r7981;
	// end inline asm
	// begin inline asm
	mov.b32 %r7988, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7989, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7990, %r7887, %r7988;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7993, %r7990, %r7989;
	// end inline asm
	// begin inline asm
	mov.b32 %r7996, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7997, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7998, %r7890, %r7996;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8001, %r7998, %r7997;
	// end inline asm
	// begin inline asm
	mov.b32 %r8004, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8005, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8006, %r7893, %r8004;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8009, %r8006, %r8005;
	// end inline asm
	// begin inline asm
	mov.b32 %r8012, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8013, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8014, %r7896, %r8012;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8017, %r8014, %r8013;
	// end inline asm
	// begin inline asm
	mov.b32 %r8020, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8021, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8022, %r7899, %r8020;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8025, %r8022, %r8021;
	// end inline asm
	// begin inline asm
	mov.b32 %r8028, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8029, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8030, %r7902, %r8028;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8033, %r8030, %r8029;
	// end inline asm
	// begin inline asm
	mov.b32 %r8036, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8037, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8038, %r7905, %r8036;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8041, %r8038, %r8037;
	// end inline asm
	// begin inline asm
	mov.b32 %r8044, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8045, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8046, %r7908, %r8044;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8049, %r8046, %r8045;
	// end inline asm
	// begin inline asm
	mov.b32 %r8052, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8053, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8054, %r7911, %r8052;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8057, %r8054, %r8053;
	// end inline asm
	// begin inline asm
	mov.b32 %r8060, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8061, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8062, %r7914, %r8060;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8065, %r8062, %r8061;
	// end inline asm
	// begin inline asm
	mov.b32 %r8068, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8069, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8070, %r7917, %r8068;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8073, %r8070, %r8069;
	// end inline asm
	// begin inline asm
	mov.b32 %r8076, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8077, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8078, %r7920, %r8076;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8081, %r8078, %r8077;
	// end inline asm
	// begin inline asm
	mov.b32 %r8084, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8085, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8086, %r7923, %r8084;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8089, %r8086, %r8085;
	// end inline asm
	// begin inline asm
	mov.b32 %r8092, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8093, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8094, %r7926, %r8092;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8097, %r8094, %r8093;
	// end inline asm
	// begin inline asm
	mov.b32 %r8100, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8101, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8102, %r7929, %r8100;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8105, %r8102, %r8101;
	// end inline asm
	// begin inline asm
	mov.b32 %r8108, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8109, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8110, %r7932, %r8108;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8113, %r8110, %r8109;
	// end inline asm
	// begin inline asm
	mov.b32 %r8116, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8117, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8118, %r7935, %r8116;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8121, %r8118, %r8117;
	// end inline asm
	// begin inline asm
	mov.b32 %r8124, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8125, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8126, %r7938, %r8124;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8129, %r8126, %r8125;
	// end inline asm
	// begin inline asm
	mov.b32 %r8132, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8133, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8134, %r7941, %r8132;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8137, %r8134, %r8133;
	// end inline asm
	// begin inline asm
	mov.b32 %r8140, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8141, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8142, %r7944, %r8140;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8145, %r8142, %r8141;
	// end inline asm
	// begin inline asm
	mov.b32 %r8148, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8149, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8150, %r7947, %r8148;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8153, %r8150, %r8149;
	// end inline asm
	// begin inline asm
	mov.b32 %r8156, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8157, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8158, %r7950, %r8156;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8161, %r8158, %r8157;
	// end inline asm
	// begin inline asm
	mov.b32 %r8164, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8165, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8166, %r7953, %r8164;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8169, %r8166, %r8165;
	// end inline asm
	// begin inline asm
	mov.b32 %r8172, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8173, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8174, %r7956, %r8172;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8177, %r8174, %r8173;
	// end inline asm
	// begin inline asm
	mov.b32 %r8180, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8181, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8182, %r7959, %r8180;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8185, %r8182, %r8181;
	// end inline asm
	// begin inline asm
	mov.b32 %r8188, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8189, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8190, %r7962, %r8188;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8193, %r8190, %r8189;
	// end inline asm
	// begin inline asm
	mov.b32 %r8196, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8197, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8198, %r7965, %r8196;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8201, %r8198, %r8197;
	// end inline asm
	// begin inline asm
	mov.b32 %r8204, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8205, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8206, %r7968, %r8204;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8209, %r8206, %r8205;
	// end inline asm
	// begin inline asm
	mov.b32 %r8212, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8213, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8214, %r7971, %r8212;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8217, %r8214, %r8213;
	// end inline asm
	// begin inline asm
	mov.b32 %r8220, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8221, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8222, %r7974, %r8220;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8225, %r8222, %r8221;
	// end inline asm
	// begin inline asm
	mov.b32 %r8228, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8229, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8230, %r7977, %r8228;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8233, %r8230, %r8229;
	// end inline asm
	// begin inline asm
	mov.b32 %r8239, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8237, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8238, %r8239, %r8237;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8241, %r7985, %r8238;
	// end inline asm
	// begin inline asm
	mov.b32 %r8244, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8245, %r8239, %r8244;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8248, %r7993, %r8245;
	// end inline asm
	// begin inline asm
	mov.b32 %r8251, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8252, %r8239, %r8251;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8255, %r8001, %r8252;
	// end inline asm
	// begin inline asm
	mov.b32 %r8258, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8259, %r8239, %r8258;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8262, %r8009, %r8259;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8265, %r8241, %r8255, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8269, %r8248, %r8262, %r4452;
	// end inline asm
	shl.b32 	%r8276, %r8269, 4;
	// begin inline asm
	lop3.b32 %r8273, %r4458, %r8265, %r8276, 202;
	// end inline asm
	xor.b32  	%r16212, %r8273, -2004318072;
	// begin inline asm
	mov.b32 %r8280, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8278, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8279, %r8280, %r8278;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8282, %r8017, %r8279;
	// end inline asm
	// begin inline asm
	mov.b32 %r8285, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8286, %r8280, %r8285;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8289, %r8025, %r8286;
	// end inline asm
	// begin inline asm
	mov.b32 %r8292, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8293, %r8280, %r8292;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8296, %r8033, %r8293;
	// end inline asm
	// begin inline asm
	mov.b32 %r8299, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8300, %r8280, %r8299;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8303, %r8041, %r8300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8306, %r8282, %r8296, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8310, %r8289, %r8303, %r4452;
	// end inline asm
	shl.b32 	%r8317, %r8310, 4;
	// begin inline asm
	lop3.b32 %r8314, %r4458, %r8306, %r8317, 202;
	// end inline asm
	xor.b32  	%r16213, %r8314, -2004318072;
	// begin inline asm
	mov.b32 %r8321, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8319, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8320, %r8321, %r8319;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8323, %r8049, %r8320;
	// end inline asm
	// begin inline asm
	mov.b32 %r8326, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8327, %r8321, %r8326;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8330, %r8057, %r8327;
	// end inline asm
	// begin inline asm
	mov.b32 %r8333, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8334, %r8321, %r8333;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8337, %r8065, %r8334;
	// end inline asm
	// begin inline asm
	mov.b32 %r8340, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8341, %r8321, %r8340;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8344, %r8073, %r8341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8347, %r8323, %r8337, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8351, %r8330, %r8344, %r4452;
	// end inline asm
	shl.b32 	%r8358, %r8351, 4;
	// begin inline asm
	lop3.b32 %r8355, %r4458, %r8347, %r8358, 202;
	// end inline asm
	xor.b32  	%r16214, %r8355, -2004318072;
	// begin inline asm
	mov.b32 %r8362, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8360, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8361, %r8362, %r8360;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8364, %r8081, %r8361;
	// end inline asm
	// begin inline asm
	mov.b32 %r8367, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8368, %r8362, %r8367;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8371, %r8089, %r8368;
	// end inline asm
	// begin inline asm
	mov.b32 %r8374, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8375, %r8362, %r8374;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8378, %r8097, %r8375;
	// end inline asm
	// begin inline asm
	mov.b32 %r8381, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8382, %r8362, %r8381;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8385, %r8105, %r8382;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8388, %r8364, %r8378, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8392, %r8371, %r8385, %r4452;
	// end inline asm
	shl.b32 	%r8399, %r8392, 4;
	// begin inline asm
	lop3.b32 %r8396, %r4458, %r8388, %r8399, 202;
	// end inline asm
	xor.b32  	%r16215, %r8396, -2004318072;
	// begin inline asm
	mov.b32 %r8403, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8401, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8402, %r8403, %r8401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8405, %r8113, %r8402;
	// end inline asm
	// begin inline asm
	mov.b32 %r8408, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8409, %r8403, %r8408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8412, %r8121, %r8409;
	// end inline asm
	// begin inline asm
	mov.b32 %r8415, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8416, %r8403, %r8415;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8419, %r8129, %r8416;
	// end inline asm
	// begin inline asm
	mov.b32 %r8422, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8423, %r8403, %r8422;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8426, %r8137, %r8423;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8429, %r8405, %r8419, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8433, %r8412, %r8426, %r4452;
	// end inline asm
	shl.b32 	%r8440, %r8433, 4;
	// begin inline asm
	lop3.b32 %r8437, %r4458, %r8429, %r8440, 202;
	// end inline asm
	xor.b32  	%r16216, %r8437, -2004318072;
	// begin inline asm
	mov.b32 %r8444, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8442, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8443, %r8444, %r8442;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8446, %r8145, %r8443;
	// end inline asm
	// begin inline asm
	mov.b32 %r8449, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8450, %r8444, %r8449;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8453, %r8153, %r8450;
	// end inline asm
	// begin inline asm
	mov.b32 %r8456, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8457, %r8444, %r8456;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8460, %r8161, %r8457;
	// end inline asm
	// begin inline asm
	mov.b32 %r8463, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8464, %r8444, %r8463;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8467, %r8169, %r8464;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8470, %r8446, %r8460, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8474, %r8453, %r8467, %r4452;
	// end inline asm
	shl.b32 	%r8481, %r8474, 4;
	// begin inline asm
	lop3.b32 %r8478, %r4458, %r8470, %r8481, 202;
	// end inline asm
	xor.b32  	%r16217, %r8478, -2004318072;
	// begin inline asm
	mov.b32 %r8485, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8483, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8484, %r8485, %r8483;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8487, %r8177, %r8484;
	// end inline asm
	// begin inline asm
	mov.b32 %r8490, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8491, %r8485, %r8490;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8494, %r8185, %r8491;
	// end inline asm
	// begin inline asm
	mov.b32 %r8497, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8498, %r8485, %r8497;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8501, %r8193, %r8498;
	// end inline asm
	// begin inline asm
	mov.b32 %r8504, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8505, %r8485, %r8504;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8508, %r8201, %r8505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8511, %r8487, %r8501, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8515, %r8494, %r8508, %r4452;
	// end inline asm
	shl.b32 	%r8522, %r8515, 4;
	// begin inline asm
	lop3.b32 %r8519, %r4458, %r8511, %r8522, 202;
	// end inline asm
	xor.b32  	%r16218, %r8519, -2004318072;
	// begin inline asm
	mov.b32 %r8526, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8524, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8525, %r8526, %r8524;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8528, %r8209, %r8525;
	// end inline asm
	// begin inline asm
	mov.b32 %r8531, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8532, %r8526, %r8531;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8535, %r8217, %r8532;
	// end inline asm
	// begin inline asm
	mov.b32 %r8538, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8539, %r8526, %r8538;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8542, %r8225, %r8539;
	// end inline asm
	// begin inline asm
	mov.b32 %r8545, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8546, %r8526, %r8545;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8549, %r8233, %r8546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8552, %r8528, %r8542, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8556, %r8535, %r8549, %r4452;
	// end inline asm
	shl.b32 	%r8563, %r8556, 4;
	// begin inline asm
	lop3.b32 %r8560, %r4458, %r8552, %r8563, 202;
	// end inline asm
	xor.b32  	%r16219, %r8560, -2004318072;
	st.shared.u32 	[%rd117], %r16212;
	st.shared.u32 	[%rd118], %r16213;
	st.shared.u32 	[%rd119], %r16214;
	st.shared.u32 	[%rd120], %r16215;
	st.shared.u32 	[%rd121], %r16216;
	st.shared.u32 	[%rd122], %r16217;
	st.shared.u32 	[%rd123], %r16218;
	st.shared.u32 	[%rd124], %r16219;
	ld.shared.u32 	%r16387, [%rd109];
	ld.shared.u32 	%r16388, [%rd110];
	ld.shared.u32 	%r16389, [%rd111];
	ld.shared.u32 	%r16390, [%rd112];
	ld.shared.u32 	%r16399, [%rd113];
	ld.shared.u32 	%r16400, [%rd114];
	ld.shared.u32 	%r16401, [%rd115];
	ld.shared.u32 	%r16402, [%rd116];
	// begin inline asm
	mov.b32 %r8569, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8580, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8568, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r8566, %r935, %r8568, %r8569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8570, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8571, %r8569, %r8570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8574, %r8566, %r8571;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8577, %r946, %r8568, %r8580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8581, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8582, %r8580, %r8581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8585, %r8577, %r8582;
	// end inline asm
	shr.u32 	%r8590, %r8568, 8;
	// begin inline asm
	lop3.b32 %r8588, %r935, %r8590, %r8569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8592, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8593, %r8569, %r8592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8596, %r8588, %r8593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8599, %r946, %r8590, %r8580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8603, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8604, %r8580, %r8603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8607, %r8599, %r8604;
	// end inline asm
	// begin inline asm
	mov.b32 %r8615, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8626, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8614, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r8612, %r935, %r8614, %r8615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8616, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8617, %r8615, %r8616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8620, %r8612, %r8617;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8623, %r946, %r8614, %r8626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8627, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8628, %r8626, %r8627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8631, %r8623, %r8628;
	// end inline asm
	shr.u32 	%r8636, %r8614, 8;
	// begin inline asm
	lop3.b32 %r8634, %r935, %r8636, %r8615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8638, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8639, %r8615, %r8638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8642, %r8634, %r8639;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8645, %r946, %r8636, %r8626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8649, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8650, %r8626, %r8649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8653, %r8645, %r8650;
	// end inline asm
	// begin inline asm
	mov.b32 %r8661, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8672, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8660, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r8658, %r935, %r8660, %r8661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8662, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8663, %r8661, %r8662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8666, %r8658, %r8663;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8669, %r946, %r8660, %r8672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8673, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8674, %r8672, %r8673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8677, %r8669, %r8674;
	// end inline asm
	shr.u32 	%r8682, %r8660, 8;
	// begin inline asm
	lop3.b32 %r8680, %r935, %r8682, %r8661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8684, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8685, %r8661, %r8684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8688, %r8680, %r8685;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8691, %r946, %r8682, %r8672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8695, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8696, %r8672, %r8695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8699, %r8691, %r8696;
	// end inline asm
	// begin inline asm
	mov.b32 %r8707, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8718, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8706, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r8704, %r935, %r8706, %r8707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8708, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8709, %r8707, %r8708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8712, %r8704, %r8709;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8715, %r946, %r8706, %r8718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8719, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8720, %r8718, %r8719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8723, %r8715, %r8720;
	// end inline asm
	shr.u32 	%r8728, %r8706, 8;
	// begin inline asm
	lop3.b32 %r8726, %r935, %r8728, %r8707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8730, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8731, %r8707, %r8730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8734, %r8726, %r8731;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8737, %r946, %r8728, %r8718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8741, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8742, %r8718, %r8741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8745, %r8737, %r8742;
	// end inline asm
	// begin inline asm
	mov.b32 %r8753, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8764, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8752, %r16399, -2004318072;
	// begin inline asm
	lop3.b32 %r8750, %r935, %r8752, %r8753, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8754, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8755, %r8753, %r8754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8758, %r8750, %r8755;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8761, %r946, %r8752, %r8764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8765, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8766, %r8764, %r8765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8769, %r8761, %r8766;
	// end inline asm
	shr.u32 	%r8774, %r8752, 8;
	// begin inline asm
	lop3.b32 %r8772, %r935, %r8774, %r8753, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8776, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8777, %r8753, %r8776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8780, %r8772, %r8777;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8783, %r946, %r8774, %r8764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8787, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8788, %r8764, %r8787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8791, %r8783, %r8788;
	// end inline asm
	// begin inline asm
	mov.b32 %r8799, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8810, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8798, %r16400, -2004318072;
	// begin inline asm
	lop3.b32 %r8796, %r935, %r8798, %r8799, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8800, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8801, %r8799, %r8800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8804, %r8796, %r8801;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8807, %r946, %r8798, %r8810, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8811, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8812, %r8810, %r8811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8815, %r8807, %r8812;
	// end inline asm
	shr.u32 	%r8820, %r8798, 8;
	// begin inline asm
	lop3.b32 %r8818, %r935, %r8820, %r8799, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8822, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8823, %r8799, %r8822;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8826, %r8818, %r8823;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8829, %r946, %r8820, %r8810, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8833, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8834, %r8810, %r8833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8837, %r8829, %r8834;
	// end inline asm
	// begin inline asm
	mov.b32 %r8845, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8856, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8844, %r16401, -2004318072;
	// begin inline asm
	lop3.b32 %r8842, %r935, %r8844, %r8845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8846, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8847, %r8845, %r8846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8850, %r8842, %r8847;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8853, %r946, %r8844, %r8856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8857, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8858, %r8856, %r8857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8861, %r8853, %r8858;
	// end inline asm
	shr.u32 	%r8866, %r8844, 8;
	// begin inline asm
	lop3.b32 %r8864, %r935, %r8866, %r8845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8868, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8869, %r8845, %r8868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8872, %r8864, %r8869;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8875, %r946, %r8866, %r8856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8879, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8880, %r8856, %r8879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8883, %r8875, %r8880;
	// end inline asm
	// begin inline asm
	mov.b32 %r8891, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8902, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8890, %r16402, -2004318072;
	// begin inline asm
	lop3.b32 %r8888, %r935, %r8890, %r8891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8892, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8893, %r8891, %r8892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8896, %r8888, %r8893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8899, %r946, %r8890, %r8902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8903, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8904, %r8902, %r8903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8907, %r8899, %r8904;
	// end inline asm
	shr.u32 	%r8912, %r8890, 8;
	// begin inline asm
	lop3.b32 %r8910, %r935, %r8912, %r8891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8914, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8915, %r8891, %r8914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8918, %r8910, %r8915;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8921, %r946, %r8912, %r8902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8925, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8926, %r8902, %r8925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8929, %r8921, %r8926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8932, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8934, %r8932, %r8574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8937, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8939, %r8937, %r8585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8942, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8944, %r8942, %r8596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8947, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8949, %r8947, %r8607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8952, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8954, %r8952, %r8620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8957, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8959, %r8957, %r8631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8962, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8964, %r8962, %r8642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8967, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8969, %r8967, %r8653;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8972, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8974, %r8972, %r8666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8977, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8979, %r8977, %r8677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8982, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8984, %r8982, %r8688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8987, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8989, %r8987, %r8699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8992, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8994, %r8992, %r8712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8997, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8999, %r8997, %r8723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9002, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9004, %r9002, %r8734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9007, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9009, %r9007, %r8745;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9012, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9014, %r9012, %r8758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9017, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9019, %r9017, %r8769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9022, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9024, %r9022, %r8780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9027, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9029, %r9027, %r8791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9032, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9034, %r9032, %r8804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9037, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9039, %r9037, %r8815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9042, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9044, %r9042, %r8826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9047, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9049, %r9047, %r8837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9052, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9054, %r9052, %r8850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9057, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9059, %r9057, %r8861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9062, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9064, %r9062, %r8872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9067, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9069, %r9067, %r8883;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9072, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9074, %r9072, %r8896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9077, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9079, %r9077, %r8907;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9082, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9084, %r9082, %r8918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9087, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9089, %r9087, %r8929;
	// end inline asm
	// begin inline asm
	mov.b32 %r9097, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9108, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9094, %r935, %r2520, %r9097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9098, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9099, %r9097, %r9098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9102, %r9094, %r9099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9105, %r946, %r2520, %r9108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9109, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9110, %r9108, %r9109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9113, %r9105, %r9110;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9116, %r935, %r2542, %r9097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9120, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9121, %r9097, %r9120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9124, %r9116, %r9121;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9127, %r946, %r2542, %r9108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9131, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9132, %r9108, %r9131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9135, %r9127, %r9132;
	// end inline asm
	// begin inline asm
	mov.b32 %r9143, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9154, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9140, %r935, %r2566, %r9143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9144, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9145, %r9143, %r9144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9148, %r9140, %r9145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9151, %r946, %r2566, %r9154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9155, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9156, %r9154, %r9155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9159, %r9151, %r9156;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9162, %r935, %r2588, %r9143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9166, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9167, %r9143, %r9166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9170, %r9162, %r9167;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9173, %r946, %r2588, %r9154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9177, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9178, %r9154, %r9177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9181, %r9173, %r9178;
	// end inline asm
	// begin inline asm
	mov.b32 %r9189, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9200, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9186, %r935, %r2612, %r9189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9190, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9191, %r9189, %r9190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9194, %r9186, %r9191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9197, %r946, %r2612, %r9200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9201, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9202, %r9200, %r9201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9205, %r9197, %r9202;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9208, %r935, %r2634, %r9189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9212, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9213, %r9189, %r9212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9216, %r9208, %r9213;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9219, %r946, %r2634, %r9200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9223, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9224, %r9200, %r9223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9227, %r9219, %r9224;
	// end inline asm
	// begin inline asm
	mov.b32 %r9235, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9246, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9232, %r935, %r2658, %r9235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9236, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9237, %r9235, %r9236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9240, %r9232, %r9237;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9243, %r946, %r2658, %r9246, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9247, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9248, %r9246, %r9247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9251, %r9243, %r9248;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9254, %r935, %r2680, %r9235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9258, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9259, %r9235, %r9258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9262, %r9254, %r9259;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9265, %r946, %r2680, %r9246, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9269, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9270, %r9246, %r9269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9273, %r9265, %r9270;
	// end inline asm
	// begin inline asm
	mov.b32 %r9281, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9292, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9278, %r935, %r2704, %r9281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9282, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9283, %r9281, %r9282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9286, %r9278, %r9283;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9289, %r946, %r2704, %r9292, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9293, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9294, %r9292, %r9293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9297, %r9289, %r9294;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9300, %r935, %r2726, %r9281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9304, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9305, %r9281, %r9304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9308, %r9300, %r9305;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9311, %r946, %r2726, %r9292, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9315, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9316, %r9292, %r9315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9319, %r9311, %r9316;
	// end inline asm
	// begin inline asm
	mov.b32 %r9327, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9338, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9324, %r935, %r2750, %r9327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9328, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9329, %r9327, %r9328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9332, %r9324, %r9329;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9335, %r946, %r2750, %r9338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9339, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9340, %r9338, %r9339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9343, %r9335, %r9340;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9346, %r935, %r2772, %r9327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9350, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9351, %r9327, %r9350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9354, %r9346, %r9351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9357, %r946, %r2772, %r9338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9361, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9362, %r9338, %r9361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9365, %r9357, %r9362;
	// end inline asm
	// begin inline asm
	mov.b32 %r9373, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9384, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9370, %r935, %r2796, %r9373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9374, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9375, %r9373, %r9374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9378, %r9370, %r9375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9381, %r946, %r2796, %r9384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9385, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9386, %r9384, %r9385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9389, %r9381, %r9386;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9392, %r935, %r2818, %r9373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9396, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9397, %r9373, %r9396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9400, %r9392, %r9397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9403, %r946, %r2818, %r9384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9407, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9408, %r9384, %r9407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9411, %r9403, %r9408;
	// end inline asm
	// begin inline asm
	mov.b32 %r9419, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9430, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9416, %r935, %r2842, %r9419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9420, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9421, %r9419, %r9420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9424, %r9416, %r9421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9427, %r946, %r2842, %r9430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9431, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9432, %r9430, %r9431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9435, %r9427, %r9432;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9438, %r935, %r2864, %r9419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9442, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9443, %r9419, %r9442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9446, %r9438, %r9443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9449, %r946, %r2864, %r9430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9453, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9454, %r9430, %r9453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9457, %r9449, %r9454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9460, %r288, %r9102, %r8934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9464, %r288, %r9113, %r8939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9468, %r288, %r9124, %r8944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9472, %r288, %r9135, %r8949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9476, %r288, %r9148, %r8954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9480, %r288, %r9159, %r8959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9484, %r288, %r9170, %r8964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9488, %r288, %r9181, %r8969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9492, %r288, %r9194, %r8974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9496, %r288, %r9205, %r8979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9500, %r288, %r9216, %r8984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9504, %r288, %r9227, %r8989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9508, %r288, %r9240, %r8994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9512, %r288, %r9251, %r8999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9516, %r288, %r9262, %r9004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9520, %r288, %r9273, %r9009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9524, %r306, %r9286, %r9014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9528, %r306, %r9297, %r9019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9532, %r306, %r9308, %r9024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9536, %r306, %r9319, %r9029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9540, %r306, %r9332, %r9034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9544, %r306, %r9343, %r9039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9548, %r306, %r9354, %r9044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9552, %r306, %r9365, %r9049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9556, %r306, %r9378, %r9054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9560, %r306, %r9389, %r9059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9564, %r306, %r9400, %r9064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9568, %r306, %r9411, %r9069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9572, %r306, %r9424, %r9074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9576, %r306, %r9435, %r9079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9580, %r306, %r9446, %r9084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9584, %r306, %r9457, %r9089;
	// end inline asm
	// begin inline asm
	mov.b32 %r9593, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9604, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9590, %r935, %r936, %r9593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9594, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9595, %r9593, %r9594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9598, %r9590, %r9595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9601, %r946, %r936, %r9604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9605, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9606, %r9604, %r9605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9609, %r9601, %r9606;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9612, %r935, %r958, %r9593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9616, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9617, %r9593, %r9616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9620, %r9612, %r9617;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9623, %r946, %r958, %r9604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9627, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9628, %r9604, %r9627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9631, %r9623, %r9628;
	// end inline asm
	// begin inline asm
	mov.b32 %r9639, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9650, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9636, %r935, %r982, %r9639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9640, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9641, %r9639, %r9640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9644, %r9636, %r9641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9647, %r946, %r982, %r9650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9651, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9652, %r9650, %r9651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9655, %r9647, %r9652;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9658, %r935, %r1004, %r9639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9662, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9663, %r9639, %r9662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9666, %r9658, %r9663;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9669, %r946, %r1004, %r9650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9673, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9674, %r9650, %r9673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9677, %r9669, %r9674;
	// end inline asm
	// begin inline asm
	mov.b32 %r9685, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9696, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9682, %r935, %r1028, %r9685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9686, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9687, %r9685, %r9686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9690, %r9682, %r9687;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9693, %r946, %r1028, %r9696, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9697, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9698, %r9696, %r9697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9701, %r9693, %r9698;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9704, %r935, %r1050, %r9685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9708, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9709, %r9685, %r9708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9712, %r9704, %r9709;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9715, %r946, %r1050, %r9696, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9719, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9720, %r9696, %r9719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9723, %r9715, %r9720;
	// end inline asm
	// begin inline asm
	mov.b32 %r9731, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9742, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9728, %r935, %r1074, %r9731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9732, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9733, %r9731, %r9732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9736, %r9728, %r9733;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9739, %r946, %r1074, %r9742, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9743, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9744, %r9742, %r9743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9747, %r9739, %r9744;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9750, %r935, %r1096, %r9731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9754, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9755, %r9731, %r9754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9758, %r9750, %r9755;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9761, %r946, %r1096, %r9742, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9765, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9766, %r9742, %r9765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9769, %r9761, %r9766;
	// end inline asm
	// begin inline asm
	mov.b32 %r9777, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9788, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9774, %r935, %r1120, %r9777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9778, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9779, %r9777, %r9778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9782, %r9774, %r9779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9785, %r946, %r1120, %r9788, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9789, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9790, %r9788, %r9789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9793, %r9785, %r9790;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9796, %r935, %r1142, %r9777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9800, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9801, %r9777, %r9800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9804, %r9796, %r9801;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9807, %r946, %r1142, %r9788, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9811, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9812, %r9788, %r9811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9815, %r9807, %r9812;
	// end inline asm
	// begin inline asm
	mov.b32 %r9823, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9834, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9820, %r935, %r1166, %r9823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9824, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9825, %r9823, %r9824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9828, %r9820, %r9825;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9831, %r946, %r1166, %r9834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9835, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9836, %r9834, %r9835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9839, %r9831, %r9836;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9842, %r935, %r1188, %r9823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9846, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9847, %r9823, %r9846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9850, %r9842, %r9847;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9853, %r946, %r1188, %r9834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9857, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9858, %r9834, %r9857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9861, %r9853, %r9858;
	// end inline asm
	// begin inline asm
	mov.b32 %r9869, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9880, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9866, %r935, %r1212, %r9869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9870, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9871, %r9869, %r9870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9874, %r9866, %r9871;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9877, %r946, %r1212, %r9880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9881, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9882, %r9880, %r9881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9885, %r9877, %r9882;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9888, %r935, %r1234, %r9869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9892, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9893, %r9869, %r9892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9896, %r9888, %r9893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9899, %r946, %r1234, %r9880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9903, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9904, %r9880, %r9903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9907, %r9899, %r9904;
	// end inline asm
	// begin inline asm
	mov.b32 %r9915, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9926, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9912, %r935, %r1258, %r9915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9916, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9917, %r9915, %r9916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9920, %r9912, %r9917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9923, %r946, %r1258, %r9926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9927, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9928, %r9926, %r9927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9931, %r9923, %r9928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9934, %r935, %r1280, %r9915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9938, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9939, %r9915, %r9938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9942, %r9934, %r9939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9945, %r946, %r1280, %r9926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9949, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9950, %r9926, %r9949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9953, %r9945, %r9950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9956, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9958, %r9956, %r9598, %r9460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9962, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9964, %r9962, %r9609, %r9464;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9968, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9970, %r9968, %r9620, %r9468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9974, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9976, %r9974, %r9631, %r9472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9980, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9982, %r9980, %r9644, %r9476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9986, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9988, %r9986, %r9655, %r9480;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9992, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9994, %r9992, %r9666, %r9484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9998, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10000, %r9998, %r9677, %r9488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10004, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10006, %r10004, %r9690, %r9492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10010, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10012, %r10010, %r9701, %r9496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10016, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10018, %r10016, %r9712, %r9500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10022, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10024, %r10022, %r9723, %r9504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10028, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10030, %r10028, %r9736, %r9508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10034, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10036, %r10034, %r9747, %r9512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10040, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10042, %r10040, %r9758, %r9516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10046, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10048, %r10046, %r9769, %r9520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10052, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10054, %r10052, %r9782, %r9524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10058, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10060, %r10058, %r9793, %r9528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10064, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10066, %r10064, %r9804, %r9532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10070, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10072, %r10070, %r9815, %r9536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10076, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10078, %r10076, %r9828, %r9540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10082, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10084, %r10082, %r9839, %r9544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10088, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10090, %r10088, %r9850, %r9548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10094, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10096, %r10094, %r9861, %r9552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10100, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10102, %r10100, %r9874, %r9556;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10106, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10108, %r10106, %r9885, %r9560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10112, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10114, %r10112, %r9896, %r9564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10118, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10120, %r10118, %r9907, %r9568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10124, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10126, %r10124, %r9920, %r9572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10130, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10132, %r10130, %r9931, %r9576;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10136, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10138, %r10136, %r9942, %r9580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10142, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10144, %r10142, %r9953, %r9584;
	// end inline asm
	// begin inline asm
	mov.b32 %r10153, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10164, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10150, %r935, %r4752, %r10153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10154, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10155, %r10153, %r10154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10158, %r10150, %r10155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10161, %r946, %r4752, %r10164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10165, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10166, %r10164, %r10165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10169, %r10161, %r10166;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10172, %r935, %r4774, %r10153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10176, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10177, %r10153, %r10176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10180, %r10172, %r10177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10183, %r946, %r4774, %r10164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10187, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10188, %r10164, %r10187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10191, %r10183, %r10188;
	// end inline asm
	// begin inline asm
	mov.b32 %r10199, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10210, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10196, %r935, %r4798, %r10199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10200, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10201, %r10199, %r10200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10204, %r10196, %r10201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10207, %r946, %r4798, %r10210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10211, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10212, %r10210, %r10211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10215, %r10207, %r10212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10218, %r935, %r4820, %r10199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10222, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10223, %r10199, %r10222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10226, %r10218, %r10223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10229, %r946, %r4820, %r10210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10233, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10234, %r10210, %r10233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10237, %r10229, %r10234;
	// end inline asm
	// begin inline asm
	mov.b32 %r10245, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10256, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10242, %r935, %r4844, %r10245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10246, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10247, %r10245, %r10246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10250, %r10242, %r10247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10253, %r946, %r4844, %r10256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10257, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10258, %r10256, %r10257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10261, %r10253, %r10258;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10264, %r935, %r4866, %r10245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10268, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10269, %r10245, %r10268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10272, %r10264, %r10269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10275, %r946, %r4866, %r10256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10279, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10280, %r10256, %r10279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10283, %r10275, %r10280;
	// end inline asm
	// begin inline asm
	mov.b32 %r10291, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10302, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10288, %r935, %r4890, %r10291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10292, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10293, %r10291, %r10292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10296, %r10288, %r10293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10299, %r946, %r4890, %r10302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10303, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10304, %r10302, %r10303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10307, %r10299, %r10304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10310, %r935, %r4912, %r10291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10314, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10315, %r10291, %r10314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10318, %r10310, %r10315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10321, %r946, %r4912, %r10302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10325, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10326, %r10302, %r10325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10329, %r10321, %r10326;
	// end inline asm
	// begin inline asm
	mov.b32 %r10337, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10348, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10334, %r935, %r4936, %r10337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10338, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10339, %r10337, %r10338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10342, %r10334, %r10339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10345, %r946, %r4936, %r10348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10349, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10350, %r10348, %r10349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10353, %r10345, %r10350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10356, %r935, %r4958, %r10337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10360, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10361, %r10337, %r10360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10364, %r10356, %r10361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10367, %r946, %r4958, %r10348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10371, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10372, %r10348, %r10371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10375, %r10367, %r10372;
	// end inline asm
	// begin inline asm
	mov.b32 %r10383, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10394, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10380, %r935, %r4982, %r10383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10384, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10385, %r10383, %r10384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10388, %r10380, %r10385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10391, %r946, %r4982, %r10394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10395, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10396, %r10394, %r10395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10399, %r10391, %r10396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10402, %r935, %r5004, %r10383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10406, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10407, %r10383, %r10406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10410, %r10402, %r10407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10413, %r946, %r5004, %r10394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10417, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10418, %r10394, %r10417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10421, %r10413, %r10418;
	// end inline asm
	// begin inline asm
	mov.b32 %r10429, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10440, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10426, %r935, %r5028, %r10429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10430, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10431, %r10429, %r10430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10434, %r10426, %r10431;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10437, %r946, %r5028, %r10440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10441, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10442, %r10440, %r10441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10445, %r10437, %r10442;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10448, %r935, %r5050, %r10429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10452, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10453, %r10429, %r10452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10456, %r10448, %r10453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10459, %r946, %r5050, %r10440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10463, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10464, %r10440, %r10463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10467, %r10459, %r10464;
	// end inline asm
	// begin inline asm
	mov.b32 %r10475, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10486, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10472, %r935, %r5074, %r10475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10476, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10477, %r10475, %r10476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10480, %r10472, %r10477;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10483, %r946, %r5074, %r10486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10487, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10488, %r10486, %r10487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10491, %r10483, %r10488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10494, %r935, %r5096, %r10475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10498, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10499, %r10475, %r10498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10502, %r10494, %r10499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10505, %r946, %r5096, %r10486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10509, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10510, %r10486, %r10509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10513, %r10505, %r10510;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10651, %r360, %r10158, %r9958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10648, %r360, %r10169, %r9964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10660, %r360, %r10180, %r9970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10657, %r360, %r10191, %r9976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10669, %r360, %r10204, %r9982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10666, %r360, %r10215, %r9988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10678, %r360, %r10226, %r9994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10675, %r360, %r10237, %r10000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10687, %r360, %r10250, %r10006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10684, %r360, %r10261, %r10012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10696, %r360, %r10272, %r10018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10693, %r360, %r10283, %r10024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10705, %r360, %r10296, %r10030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10702, %r360, %r10307, %r10036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10714, %r360, %r10318, %r10042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10711, %r360, %r10329, %r10048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10723, %r378, %r10342, %r10054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10720, %r378, %r10353, %r10060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10732, %r378, %r10364, %r10066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10729, %r378, %r10375, %r10072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10741, %r378, %r10388, %r10078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10738, %r378, %r10399, %r10084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10750, %r378, %r10410, %r10090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10747, %r378, %r10421, %r10096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10759, %r378, %r10434, %r10102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10756, %r378, %r10445, %r10108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10768, %r378, %r10456, %r10114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10765, %r378, %r10467, %r10120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10777, %r378, %r10480, %r10126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10774, %r378, %r10491, %r10132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10786, %r378, %r10502, %r10138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10783, %r378, %r10513, %r10144;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10644, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10646, %r10644, %r10648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10649, %r442, %r10651, %r10646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10653, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10655, %r10653, %r10657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10658, %r442, %r10660, %r10655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10662, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10664, %r10662, %r10666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10667, %r442, %r10669, %r10664;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10671, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10673, %r10671, %r10675;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10676, %r442, %r10678, %r10673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10680, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10682, %r10680, %r10684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10685, %r442, %r10687, %r10682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10689, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10691, %r10689, %r10693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10694, %r442, %r10696, %r10691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10698, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10700, %r10698, %r10702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10703, %r442, %r10705, %r10700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10707, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10709, %r10707, %r10711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10712, %r442, %r10714, %r10709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10716, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10718, %r10716, %r10720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10721, %r445, %r10723, %r10718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10725, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10727, %r10725, %r10729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10730, %r445, %r10732, %r10727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10734, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10736, %r10734, %r10738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10739, %r445, %r10741, %r10736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10743, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10745, %r10743, %r10747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10748, %r445, %r10750, %r10745;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10752, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10754, %r10752, %r10756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10757, %r445, %r10759, %r10754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10761, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10763, %r10761, %r10765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10766, %r445, %r10768, %r10763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10770, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10772, %r10770, %r10774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10775, %r445, %r10777, %r10772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10779, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10781, %r10779, %r10783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10784, %r445, %r10786, %r10781;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10788, %r448, %r10651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10791, %r442, %r10648, %r10788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10795, %r448, %r10660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10798, %r442, %r10657, %r10795;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10802, %r448, %r10669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10805, %r442, %r10666, %r10802;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10809, %r448, %r10678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10812, %r442, %r10675, %r10809;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10816, %r448, %r10687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10819, %r442, %r10684, %r10816;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10823, %r448, %r10696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10826, %r442, %r10693, %r10823;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10830, %r448, %r10705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10833, %r442, %r10702, %r10830;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10837, %r448, %r10714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10840, %r442, %r10711, %r10837;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10844, %r451, %r10723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10847, %r445, %r10720, %r10844;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10851, %r451, %r10732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10854, %r445, %r10729, %r10851;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10858, %r451, %r10741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10861, %r445, %r10738, %r10858;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10865, %r451, %r10750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10868, %r445, %r10747, %r10865;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10872, %r451, %r10759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10875, %r445, %r10756, %r10872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10879, %r451, %r10768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10882, %r445, %r10765, %r10879;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10886, %r451, %r10777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10889, %r445, %r10774, %r10886;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10893, %r451, %r10786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10896, %r445, %r10783, %r10893;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11067, %r11064}, {%r497, %r503, %r500, %r506}, {%r10649, %r10791}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11076, %r11073}, {%r497, %r503, %r500, %r506}, {%r10658, %r10798}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11085, %r11082}, {%r497, %r503, %r500, %r506}, {%r10667, %r10805}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11094, %r11091}, {%r497, %r503, %r500, %r506}, {%r10676, %r10812}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11103, %r11100}, {%r497, %r503, %r500, %r506}, {%r10685, %r10819}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11112, %r11109}, {%r497, %r503, %r500, %r506}, {%r10694, %r10826}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11121, %r11118}, {%r497, %r503, %r500, %r506}, {%r10703, %r10833}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11130, %r11127}, {%r497, %r503, %r500, %r506}, {%r10712, %r10840}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11139, %r11136}, {%r497, %r503, %r500, %r506}, {%r10721, %r10847}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11148, %r11145}, {%r497, %r503, %r500, %r506}, {%r10730, %r10854}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11157, %r11154}, {%r497, %r503, %r500, %r506}, {%r10739, %r10861}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11166, %r11163}, {%r497, %r503, %r500, %r506}, {%r10748, %r10868}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11175, %r11172}, {%r497, %r503, %r500, %r506}, {%r10757, %r10875}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11184, %r11181}, {%r497, %r503, %r500, %r506}, {%r10766, %r10882}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11193, %r11190}, {%r497, %r503, %r500, %r506}, {%r10775, %r10889}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11202, %r11199}, {%r497, %r503, %r500, %r506}, {%r10784, %r10896}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11060, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11062, %r11060, %r11064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11065, %r547, %r11067, %r11062;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11069, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11071, %r11069, %r11073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11074, %r547, %r11076, %r11071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11078, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11080, %r11078, %r11082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11083, %r547, %r11085, %r11080;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11087, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11089, %r11087, %r11091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11092, %r547, %r11094, %r11089;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11096, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11098, %r11096, %r11100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11101, %r547, %r11103, %r11098;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11105, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11107, %r11105, %r11109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11110, %r547, %r11112, %r11107;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11114, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11116, %r11114, %r11118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11119, %r547, %r11121, %r11116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11123, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11125, %r11123, %r11127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11128, %r547, %r11130, %r11125;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11132, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11134, %r11132, %r11136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11137, %r547, %r11139, %r11134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11141, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11143, %r11141, %r11145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11146, %r547, %r11148, %r11143;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11150, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11152, %r11150, %r11154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11155, %r547, %r11157, %r11152;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11159, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11161, %r11159, %r11163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11164, %r547, %r11166, %r11161;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11168, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11170, %r11168, %r11172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11173, %r547, %r11175, %r11170;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11177, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11179, %r11177, %r11181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11182, %r547, %r11184, %r11179;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11186, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11188, %r11186, %r11190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11191, %r547, %r11193, %r11188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11195, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11197, %r11195, %r11199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11200, %r547, %r11202, %r11197;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11204, %r550, %r11067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11207, %r547, %r11064, %r11204;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11211, %r550, %r11076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11214, %r547, %r11073, %r11211;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11218, %r550, %r11085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11221, %r547, %r11082, %r11218;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11225, %r550, %r11094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11228, %r547, %r11091, %r11225;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11232, %r550, %r11103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11235, %r547, %r11100, %r11232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11239, %r550, %r11112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11242, %r547, %r11109, %r11239;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11246, %r550, %r11121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11249, %r547, %r11118, %r11246;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11253, %r550, %r11130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11256, %r547, %r11127, %r11253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11260, %r550, %r11139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11263, %r547, %r11136, %r11260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11267, %r550, %r11148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11270, %r547, %r11145, %r11267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11274, %r550, %r11157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11277, %r547, %r11154, %r11274;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11281, %r550, %r11166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11284, %r547, %r11163, %r11281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11288, %r550, %r11175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11291, %r547, %r11172, %r11288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11295, %r550, %r11184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11298, %r547, %r11181, %r11295;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11302, %r550, %r11193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11305, %r547, %r11190, %r11302;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11309, %r550, %r11202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11312, %r547, %r11199, %r11309;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11605, %r11608}, {%r585, %r591, %r588, %r594}, {%r11065, %r11207}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11611, %r11614}, {%r585, %r591, %r588, %r594}, {%r11074, %r11214}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11617, %r11620}, {%r585, %r591, %r588, %r594}, {%r11083, %r11221}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11623, %r11626}, {%r585, %r591, %r588, %r594}, {%r11092, %r11228}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11629, %r11632}, {%r585, %r591, %r588, %r594}, {%r11101, %r11235}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11635, %r11638}, {%r585, %r591, %r588, %r594}, {%r11110, %r11242}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11641, %r11644}, {%r585, %r591, %r588, %r594}, {%r11119, %r11249}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11647, %r11650}, {%r585, %r591, %r588, %r594}, {%r11128, %r11256}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11606, %r11609}, {%r585, %r591, %r588, %r594}, {%r11137, %r11263}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11612, %r11615}, {%r585, %r591, %r588, %r594}, {%r11146, %r11270}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11618, %r11621}, {%r585, %r591, %r588, %r594}, {%r11155, %r11277}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11624, %r11627}, {%r585, %r591, %r588, %r594}, {%r11164, %r11284}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11630, %r11633}, {%r585, %r591, %r588, %r594}, {%r11173, %r11291}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11636, %r11639}, {%r585, %r591, %r588, %r594}, {%r11182, %r11298}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11642, %r11645}, {%r585, %r591, %r588, %r594}, {%r11191, %r11305}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11648, %r11651}, {%r585, %r591, %r588, %r594}, {%r11200, %r11312}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11604, %r11605, %r11606;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11607, %r11608, %r11609;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11610, %r11611, %r11612;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11613, %r11614, %r11615;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11616, %r11617, %r11618;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11619, %r11620, %r11621;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11622, %r11623, %r11624;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11625, %r11626, %r11627;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11628, %r11629, %r11630;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11631, %r11632, %r11633;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11634, %r11635, %r11636;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11637, %r11638, %r11639;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11640, %r11641, %r11642;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11643, %r11644, %r11645;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11646, %r11647, %r11648;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11649, %r11650, %r11651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11652, %r11605, %r11606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11655, %r11608, %r11609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11658, %r11611, %r11612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11661, %r11614, %r11615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11664, %r11617, %r11618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11667, %r11620, %r11621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11670, %r11623, %r11624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11673, %r11626, %r11627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11676, %r11629, %r11630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11679, %r11632, %r11633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11682, %r11635, %r11636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11685, %r11638, %r11639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11688, %r11641, %r11642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11691, %r11644, %r11645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11694, %r11647, %r11648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11697, %r11650, %r11651;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11700, %r218, %r11604;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11703, %r218, %r11607;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11706, %r218, %r11610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11709, %r218, %r11613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11712, %r218, %r11616;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11715, %r218, %r11619;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11718, %r218, %r11622;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11721, %r218, %r11625;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11724, %r218, %r11628;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11727, %r218, %r11631;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11730, %r218, %r11634;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11733, %r218, %r11637;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11736, %r218, %r11640;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11739, %r218, %r11643;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11742, %r218, %r11646;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11745, %r218, %r11649;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11748, %r219, %r11652;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11751, %r219, %r11655;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11754, %r219, %r11658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11757, %r219, %r11661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11760, %r219, %r11664;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11763, %r219, %r11667;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11766, %r219, %r11670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11769, %r219, %r11673;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11772, %r219, %r11676;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11775, %r219, %r11679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11778, %r219, %r11682;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11781, %r219, %r11685;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11784, %r219, %r11688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11787, %r219, %r11691;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11790, %r219, %r11694;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11793, %r219, %r11697;
	// end inline asm
	// begin inline asm
	mov.b32 %r11796, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11797, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11798, %r11700, %r11796;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11801, %r11798, %r11797;
	// end inline asm
	// begin inline asm
	mov.b32 %r11804, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11805, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11806, %r11703, %r11804;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11809, %r11806, %r11805;
	// end inline asm
	// begin inline asm
	mov.b32 %r11812, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11813, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11814, %r11706, %r11812;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11817, %r11814, %r11813;
	// end inline asm
	// begin inline asm
	mov.b32 %r11820, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11821, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11822, %r11709, %r11820;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11825, %r11822, %r11821;
	// end inline asm
	// begin inline asm
	mov.b32 %r11828, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11829, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11830, %r11712, %r11828;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11833, %r11830, %r11829;
	// end inline asm
	// begin inline asm
	mov.b32 %r11836, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11837, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11838, %r11715, %r11836;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11841, %r11838, %r11837;
	// end inline asm
	// begin inline asm
	mov.b32 %r11844, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11845, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11846, %r11718, %r11844;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11849, %r11846, %r11845;
	// end inline asm
	// begin inline asm
	mov.b32 %r11852, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11853, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11854, %r11721, %r11852;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11857, %r11854, %r11853;
	// end inline asm
	// begin inline asm
	mov.b32 %r11860, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11861, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11862, %r11724, %r11860;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11865, %r11862, %r11861;
	// end inline asm
	// begin inline asm
	mov.b32 %r11868, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11869, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11870, %r11727, %r11868;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11873, %r11870, %r11869;
	// end inline asm
	// begin inline asm
	mov.b32 %r11876, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11877, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11878, %r11730, %r11876;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11881, %r11878, %r11877;
	// end inline asm
	// begin inline asm
	mov.b32 %r11884, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11885, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11886, %r11733, %r11884;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11889, %r11886, %r11885;
	// end inline asm
	// begin inline asm
	mov.b32 %r11892, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11893, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11894, %r11736, %r11892;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11897, %r11894, %r11893;
	// end inline asm
	// begin inline asm
	mov.b32 %r11900, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11901, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11902, %r11739, %r11900;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11905, %r11902, %r11901;
	// end inline asm
	// begin inline asm
	mov.b32 %r11908, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11909, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11910, %r11742, %r11908;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11913, %r11910, %r11909;
	// end inline asm
	// begin inline asm
	mov.b32 %r11916, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11917, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11918, %r11745, %r11916;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11921, %r11918, %r11917;
	// end inline asm
	// begin inline asm
	mov.b32 %r11924, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11925, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11926, %r11748, %r11924;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11929, %r11926, %r11925;
	// end inline asm
	// begin inline asm
	mov.b32 %r11932, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11933, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11934, %r11751, %r11932;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11937, %r11934, %r11933;
	// end inline asm
	// begin inline asm
	mov.b32 %r11940, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11941, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11942, %r11754, %r11940;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11945, %r11942, %r11941;
	// end inline asm
	// begin inline asm
	mov.b32 %r11948, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11949, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11950, %r11757, %r11948;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11953, %r11950, %r11949;
	// end inline asm
	// begin inline asm
	mov.b32 %r11956, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11957, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11958, %r11760, %r11956;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11961, %r11958, %r11957;
	// end inline asm
	// begin inline asm
	mov.b32 %r11964, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11965, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11966, %r11763, %r11964;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11969, %r11966, %r11965;
	// end inline asm
	// begin inline asm
	mov.b32 %r11972, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11973, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11974, %r11766, %r11972;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11977, %r11974, %r11973;
	// end inline asm
	// begin inline asm
	mov.b32 %r11980, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11981, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11982, %r11769, %r11980;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11985, %r11982, %r11981;
	// end inline asm
	// begin inline asm
	mov.b32 %r11988, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11989, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11990, %r11772, %r11988;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11993, %r11990, %r11989;
	// end inline asm
	// begin inline asm
	mov.b32 %r11996, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11997, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11998, %r11775, %r11996;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12001, %r11998, %r11997;
	// end inline asm
	// begin inline asm
	mov.b32 %r12004, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r12005, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12006, %r11778, %r12004;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12009, %r12006, %r12005;
	// end inline asm
	// begin inline asm
	mov.b32 %r12012, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r12013, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12014, %r11781, %r12012;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12017, %r12014, %r12013;
	// end inline asm
	// begin inline asm
	mov.b32 %r12020, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r12021, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12022, %r11784, %r12020;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12025, %r12022, %r12021;
	// end inline asm
	// begin inline asm
	mov.b32 %r12028, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r12029, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12030, %r11787, %r12028;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12033, %r12030, %r12029;
	// end inline asm
	// begin inline asm
	mov.b32 %r12036, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r12037, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12038, %r11790, %r12036;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12041, %r12038, %r12037;
	// end inline asm
	// begin inline asm
	mov.b32 %r12044, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r12045, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12046, %r11793, %r12044;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12049, %r12046, %r12045;
	// end inline asm
	// begin inline asm
	mov.b32 %r12055, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12053, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12054, %r12055, %r12053;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12057, %r11801, %r12054;
	// end inline asm
	// begin inline asm
	mov.b32 %r12060, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12061, %r12055, %r12060;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12064, %r11809, %r12061;
	// end inline asm
	// begin inline asm
	mov.b32 %r12067, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12068, %r12055, %r12067;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12071, %r11817, %r12068;
	// end inline asm
	// begin inline asm
	mov.b32 %r12074, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12075, %r12055, %r12074;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12078, %r11825, %r12075;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12081, %r12057, %r12071, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12085, %r12064, %r12078, %r4452;
	// end inline asm
	shl.b32 	%r12092, %r12085, 4;
	// begin inline asm
	lop3.b32 %r12089, %r4458, %r12081, %r12092, 202;
	// end inline asm
	xor.b32  	%r16220, %r12089, -2004318072;
	// begin inline asm
	mov.b32 %r12096, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12094, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12095, %r12096, %r12094;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12098, %r11833, %r12095;
	// end inline asm
	// begin inline asm
	mov.b32 %r12101, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12102, %r12096, %r12101;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12105, %r11841, %r12102;
	// end inline asm
	// begin inline asm
	mov.b32 %r12108, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12109, %r12096, %r12108;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12112, %r11849, %r12109;
	// end inline asm
	// begin inline asm
	mov.b32 %r12115, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12116, %r12096, %r12115;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12119, %r11857, %r12116;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12122, %r12098, %r12112, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12126, %r12105, %r12119, %r4452;
	// end inline asm
	shl.b32 	%r12133, %r12126, 4;
	// begin inline asm
	lop3.b32 %r12130, %r4458, %r12122, %r12133, 202;
	// end inline asm
	xor.b32  	%r16221, %r12130, -2004318072;
	// begin inline asm
	mov.b32 %r12137, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12135, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12136, %r12137, %r12135;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12139, %r11865, %r12136;
	// end inline asm
	// begin inline asm
	mov.b32 %r12142, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12143, %r12137, %r12142;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12146, %r11873, %r12143;
	// end inline asm
	// begin inline asm
	mov.b32 %r12149, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12150, %r12137, %r12149;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12153, %r11881, %r12150;
	// end inline asm
	// begin inline asm
	mov.b32 %r12156, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12157, %r12137, %r12156;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12160, %r11889, %r12157;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12163, %r12139, %r12153, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12167, %r12146, %r12160, %r4452;
	// end inline asm
	shl.b32 	%r12174, %r12167, 4;
	// begin inline asm
	lop3.b32 %r12171, %r4458, %r12163, %r12174, 202;
	// end inline asm
	xor.b32  	%r16222, %r12171, -2004318072;
	// begin inline asm
	mov.b32 %r12178, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12176, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12177, %r12178, %r12176;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12180, %r11897, %r12177;
	// end inline asm
	// begin inline asm
	mov.b32 %r12183, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12184, %r12178, %r12183;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12187, %r11905, %r12184;
	// end inline asm
	// begin inline asm
	mov.b32 %r12190, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12191, %r12178, %r12190;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12194, %r11913, %r12191;
	// end inline asm
	// begin inline asm
	mov.b32 %r12197, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12198, %r12178, %r12197;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12201, %r11921, %r12198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12204, %r12180, %r12194, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12208, %r12187, %r12201, %r4452;
	// end inline asm
	shl.b32 	%r12215, %r12208, 4;
	// begin inline asm
	lop3.b32 %r12212, %r4458, %r12204, %r12215, 202;
	// end inline asm
	xor.b32  	%r16223, %r12212, -2004318072;
	// begin inline asm
	mov.b32 %r12219, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12217, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12218, %r12219, %r12217;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12221, %r11929, %r12218;
	// end inline asm
	// begin inline asm
	mov.b32 %r12224, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12225, %r12219, %r12224;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12228, %r11937, %r12225;
	// end inline asm
	// begin inline asm
	mov.b32 %r12231, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12232, %r12219, %r12231;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12235, %r11945, %r12232;
	// end inline asm
	// begin inline asm
	mov.b32 %r12238, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12239, %r12219, %r12238;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12242, %r11953, %r12239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12245, %r12221, %r12235, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12249, %r12228, %r12242, %r4452;
	// end inline asm
	shl.b32 	%r12256, %r12249, 4;
	// begin inline asm
	lop3.b32 %r12253, %r4458, %r12245, %r12256, 202;
	// end inline asm
	xor.b32  	%r16224, %r12253, -2004318072;
	// begin inline asm
	mov.b32 %r12260, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12258, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12259, %r12260, %r12258;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12262, %r11961, %r12259;
	// end inline asm
	// begin inline asm
	mov.b32 %r12265, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12266, %r12260, %r12265;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12269, %r11969, %r12266;
	// end inline asm
	// begin inline asm
	mov.b32 %r12272, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12273, %r12260, %r12272;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12276, %r11977, %r12273;
	// end inline asm
	// begin inline asm
	mov.b32 %r12279, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12280, %r12260, %r12279;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12283, %r11985, %r12280;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12286, %r12262, %r12276, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12290, %r12269, %r12283, %r4452;
	// end inline asm
	shl.b32 	%r12297, %r12290, 4;
	// begin inline asm
	lop3.b32 %r12294, %r4458, %r12286, %r12297, 202;
	// end inline asm
	xor.b32  	%r16225, %r12294, -2004318072;
	// begin inline asm
	mov.b32 %r12301, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12299, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12300, %r12301, %r12299;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12303, %r11993, %r12300;
	// end inline asm
	// begin inline asm
	mov.b32 %r12306, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12307, %r12301, %r12306;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12310, %r12001, %r12307;
	// end inline asm
	// begin inline asm
	mov.b32 %r12313, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12314, %r12301, %r12313;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12317, %r12009, %r12314;
	// end inline asm
	// begin inline asm
	mov.b32 %r12320, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12321, %r12301, %r12320;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12324, %r12017, %r12321;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12327, %r12303, %r12317, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12331, %r12310, %r12324, %r4452;
	// end inline asm
	shl.b32 	%r12338, %r12331, 4;
	// begin inline asm
	lop3.b32 %r12335, %r4458, %r12327, %r12338, 202;
	// end inline asm
	xor.b32  	%r16226, %r12335, -2004318072;
	// begin inline asm
	mov.b32 %r12342, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12340, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12341, %r12342, %r12340;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12344, %r12025, %r12341;
	// end inline asm
	// begin inline asm
	mov.b32 %r12347, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12348, %r12342, %r12347;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12351, %r12033, %r12348;
	// end inline asm
	// begin inline asm
	mov.b32 %r12354, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12355, %r12342, %r12354;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12358, %r12041, %r12355;
	// end inline asm
	// begin inline asm
	mov.b32 %r12361, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12362, %r12342, %r12361;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12365, %r12049, %r12362;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12368, %r12344, %r12358, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12372, %r12351, %r12365, %r4452;
	// end inline asm
	shl.b32 	%r12379, %r12372, 4;
	// begin inline asm
	lop3.b32 %r12376, %r4458, %r12368, %r12379, 202;
	// end inline asm
	xor.b32  	%r16227, %r12376, -2004318072;
	st.shared.u32 	[%rd117], %r16220;
	st.shared.u32 	[%rd118], %r16221;
	st.shared.u32 	[%rd119], %r16222;
	st.shared.u32 	[%rd120], %r16223;
	st.shared.u32 	[%rd121], %r16224;
	st.shared.u32 	[%rd122], %r16225;
	st.shared.u32 	[%rd123], %r16226;
	st.shared.u32 	[%rd124], %r16227;
	ld.shared.u32 	%r16391, [%rd109];
	ld.shared.u32 	%r16392, [%rd110];
	ld.shared.u32 	%r16393, [%rd111];
	ld.shared.u32 	%r16394, [%rd112];
	ld.shared.u32 	%r16403, [%rd113];
	ld.shared.u32 	%r16404, [%rd114];
	ld.shared.u32 	%r16405, [%rd115];
	ld.shared.u32 	%r16406, [%rd116];
	// begin inline asm
	mov.b32 %r12385, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12396, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12384, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r12382, %r935, %r12384, %r12385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12386, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12387, %r12385, %r12386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12390, %r12382, %r12387;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12393, %r946, %r12384, %r12396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12397, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12398, %r12396, %r12397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12401, %r12393, %r12398;
	// end inline asm
	shr.u32 	%r12406, %r12384, 8;
	// begin inline asm
	lop3.b32 %r12404, %r935, %r12406, %r12385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12408, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12409, %r12385, %r12408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12412, %r12404, %r12409;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12415, %r946, %r12406, %r12396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12419, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12420, %r12396, %r12419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12423, %r12415, %r12420;
	// end inline asm
	// begin inline asm
	mov.b32 %r12431, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12442, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12430, %r16392, -2004318072;
	// begin inline asm
	lop3.b32 %r12428, %r935, %r12430, %r12431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12432, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12433, %r12431, %r12432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12436, %r12428, %r12433;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12439, %r946, %r12430, %r12442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12443, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12444, %r12442, %r12443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12447, %r12439, %r12444;
	// end inline asm
	shr.u32 	%r12452, %r12430, 8;
	// begin inline asm
	lop3.b32 %r12450, %r935, %r12452, %r12431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12454, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12455, %r12431, %r12454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12458, %r12450, %r12455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12461, %r946, %r12452, %r12442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12465, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12466, %r12442, %r12465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12469, %r12461, %r12466;
	// end inline asm
	// begin inline asm
	mov.b32 %r12477, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12488, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12476, %r16393, -2004318072;
	// begin inline asm
	lop3.b32 %r12474, %r935, %r12476, %r12477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12478, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12479, %r12477, %r12478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12482, %r12474, %r12479;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12485, %r946, %r12476, %r12488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12489, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12490, %r12488, %r12489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12493, %r12485, %r12490;
	// end inline asm
	shr.u32 	%r12498, %r12476, 8;
	// begin inline asm
	lop3.b32 %r12496, %r935, %r12498, %r12477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12500, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12501, %r12477, %r12500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12504, %r12496, %r12501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12507, %r946, %r12498, %r12488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12511, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12512, %r12488, %r12511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12515, %r12507, %r12512;
	// end inline asm
	// begin inline asm
	mov.b32 %r12523, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12534, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12522, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r12520, %r935, %r12522, %r12523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12524, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12525, %r12523, %r12524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12528, %r12520, %r12525;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12531, %r946, %r12522, %r12534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12535, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12536, %r12534, %r12535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12539, %r12531, %r12536;
	// end inline asm
	shr.u32 	%r12544, %r12522, 8;
	// begin inline asm
	lop3.b32 %r12542, %r935, %r12544, %r12523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12546, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12547, %r12523, %r12546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12550, %r12542, %r12547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12553, %r946, %r12544, %r12534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12557, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12558, %r12534, %r12557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12561, %r12553, %r12558;
	// end inline asm
	// begin inline asm
	mov.b32 %r12569, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12580, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12568, %r16403, -2004318072;
	// begin inline asm
	lop3.b32 %r12566, %r935, %r12568, %r12569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12570, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12571, %r12569, %r12570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12574, %r12566, %r12571;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12577, %r946, %r12568, %r12580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12581, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12582, %r12580, %r12581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12585, %r12577, %r12582;
	// end inline asm
	shr.u32 	%r12590, %r12568, 8;
	// begin inline asm
	lop3.b32 %r12588, %r935, %r12590, %r12569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12592, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12593, %r12569, %r12592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12596, %r12588, %r12593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12599, %r946, %r12590, %r12580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12603, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12604, %r12580, %r12603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12607, %r12599, %r12604;
	// end inline asm
	// begin inline asm
	mov.b32 %r12615, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12626, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12614, %r16404, -2004318072;
	// begin inline asm
	lop3.b32 %r12612, %r935, %r12614, %r12615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12616, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12617, %r12615, %r12616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12620, %r12612, %r12617;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12623, %r946, %r12614, %r12626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12627, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12628, %r12626, %r12627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12631, %r12623, %r12628;
	// end inline asm
	shr.u32 	%r12636, %r12614, 8;
	// begin inline asm
	lop3.b32 %r12634, %r935, %r12636, %r12615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12638, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12639, %r12615, %r12638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12642, %r12634, %r12639;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12645, %r946, %r12636, %r12626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12649, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12650, %r12626, %r12649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12653, %r12645, %r12650;
	// end inline asm
	// begin inline asm
	mov.b32 %r12661, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12672, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12660, %r16405, -2004318072;
	// begin inline asm
	lop3.b32 %r12658, %r935, %r12660, %r12661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12662, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12663, %r12661, %r12662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12666, %r12658, %r12663;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12669, %r946, %r12660, %r12672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12673, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12674, %r12672, %r12673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12677, %r12669, %r12674;
	// end inline asm
	shr.u32 	%r12682, %r12660, 8;
	// begin inline asm
	lop3.b32 %r12680, %r935, %r12682, %r12661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12684, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12685, %r12661, %r12684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12688, %r12680, %r12685;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12691, %r946, %r12682, %r12672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12695, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12696, %r12672, %r12695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12699, %r12691, %r12696;
	// end inline asm
	// begin inline asm
	mov.b32 %r12707, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12718, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12706, %r16406, -2004318072;
	// begin inline asm
	lop3.b32 %r12704, %r935, %r12706, %r12707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12708, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12709, %r12707, %r12708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12712, %r12704, %r12709;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12715, %r946, %r12706, %r12718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12719, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12720, %r12718, %r12719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12723, %r12715, %r12720;
	// end inline asm
	shr.u32 	%r12728, %r12706, 8;
	// begin inline asm
	lop3.b32 %r12726, %r935, %r12728, %r12707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12730, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12731, %r12707, %r12730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12734, %r12726, %r12731;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12737, %r946, %r12728, %r12718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12741, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12742, %r12718, %r12741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12745, %r12737, %r12742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12748, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12750, %r12748, %r12390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12753, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12755, %r12753, %r12401;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12758, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12760, %r12758, %r12412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12763, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12765, %r12763, %r12423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12768, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12770, %r12768, %r12436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12773, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12775, %r12773, %r12447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12778, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12780, %r12778, %r12458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12783, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12785, %r12783, %r12469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12788, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12790, %r12788, %r12482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12793, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12795, %r12793, %r12493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12798, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12800, %r12798, %r12504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12803, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12805, %r12803, %r12515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12808, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12810, %r12808, %r12528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12813, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12815, %r12813, %r12539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12818, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12820, %r12818, %r12550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12823, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12825, %r12823, %r12561;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12828, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12830, %r12828, %r12574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12833, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12835, %r12833, %r12585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12838, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12840, %r12838, %r12596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12843, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12845, %r12843, %r12607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12848, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12850, %r12848, %r12620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12853, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12855, %r12853, %r12631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12858, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12860, %r12858, %r12642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12863, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12865, %r12863, %r12653;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12868, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12870, %r12868, %r12666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12873, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12875, %r12873, %r12677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12878, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12880, %r12878, %r12688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12883, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12885, %r12883, %r12699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12888, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12890, %r12888, %r12712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12893, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12895, %r12893, %r12723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12898, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12900, %r12898, %r12734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12903, %r414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12905, %r12903, %r12745;
	// end inline asm
	// begin inline asm
	mov.b32 %r12913, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12924, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12910, %r935, %r936, %r12913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12914, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12915, %r12913, %r12914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12918, %r12910, %r12915;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12921, %r946, %r936, %r12924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12925, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12926, %r12924, %r12925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12929, %r12921, %r12926;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12932, %r935, %r958, %r12913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12936, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12937, %r12913, %r12936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12940, %r12932, %r12937;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12943, %r946, %r958, %r12924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12947, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12948, %r12924, %r12947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12951, %r12943, %r12948;
	// end inline asm
	// begin inline asm
	mov.b32 %r12959, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12970, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12956, %r935, %r982, %r12959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12960, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12961, %r12959, %r12960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12964, %r12956, %r12961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12967, %r946, %r982, %r12970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12971, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12972, %r12970, %r12971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12975, %r12967, %r12972;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12978, %r935, %r1004, %r12959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12982, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12983, %r12959, %r12982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12986, %r12978, %r12983;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12989, %r946, %r1004, %r12970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12993, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12994, %r12970, %r12993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12997, %r12989, %r12994;
	// end inline asm
	// begin inline asm
	mov.b32 %r13005, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13016, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13002, %r935, %r1028, %r13005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13006, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13007, %r13005, %r13006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13010, %r13002, %r13007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13013, %r946, %r1028, %r13016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13017, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13018, %r13016, %r13017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13021, %r13013, %r13018;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13024, %r935, %r1050, %r13005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13028, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13029, %r13005, %r13028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13032, %r13024, %r13029;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13035, %r946, %r1050, %r13016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13039, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13040, %r13016, %r13039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13043, %r13035, %r13040;
	// end inline asm
	// begin inline asm
	mov.b32 %r13051, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13062, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13048, %r935, %r1074, %r13051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13052, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13053, %r13051, %r13052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13056, %r13048, %r13053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13059, %r946, %r1074, %r13062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13063, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13064, %r13062, %r13063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13067, %r13059, %r13064;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13070, %r935, %r1096, %r13051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13074, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13075, %r13051, %r13074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13078, %r13070, %r13075;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13081, %r946, %r1096, %r13062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13085, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13086, %r13062, %r13085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13089, %r13081, %r13086;
	// end inline asm
	// begin inline asm
	mov.b32 %r13097, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13108, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13094, %r935, %r1120, %r13097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13098, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13099, %r13097, %r13098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13102, %r13094, %r13099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13105, %r946, %r1120, %r13108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13109, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13110, %r13108, %r13109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13113, %r13105, %r13110;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13116, %r935, %r1142, %r13097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13120, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13121, %r13097, %r13120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13124, %r13116, %r13121;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13127, %r946, %r1142, %r13108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13131, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13132, %r13108, %r13131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13135, %r13127, %r13132;
	// end inline asm
	// begin inline asm
	mov.b32 %r13143, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13154, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13140, %r935, %r1166, %r13143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13144, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13145, %r13143, %r13144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13148, %r13140, %r13145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13151, %r946, %r1166, %r13154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13155, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13156, %r13154, %r13155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13159, %r13151, %r13156;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13162, %r935, %r1188, %r13143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13166, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13167, %r13143, %r13166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13170, %r13162, %r13167;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13173, %r946, %r1188, %r13154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13177, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13178, %r13154, %r13177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13181, %r13173, %r13178;
	// end inline asm
	// begin inline asm
	mov.b32 %r13189, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13200, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13186, %r935, %r1212, %r13189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13190, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13191, %r13189, %r13190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13194, %r13186, %r13191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13197, %r946, %r1212, %r13200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13201, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13202, %r13200, %r13201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13205, %r13197, %r13202;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13208, %r935, %r1234, %r13189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13212, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13213, %r13189, %r13212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13216, %r13208, %r13213;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13219, %r946, %r1234, %r13200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13223, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13224, %r13200, %r13223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13227, %r13219, %r13224;
	// end inline asm
	// begin inline asm
	mov.b32 %r13235, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13246, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13232, %r935, %r1258, %r13235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13236, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13237, %r13235, %r13236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13240, %r13232, %r13237;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13243, %r946, %r1258, %r13246, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13247, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13248, %r13246, %r13247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13251, %r13243, %r13248;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13254, %r935, %r1280, %r13235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13258, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13259, %r13235, %r13258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13262, %r13254, %r13259;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13265, %r946, %r1280, %r13246, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13269, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13270, %r13246, %r13269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13273, %r13265, %r13270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13276, %r288, %r12918, %r12750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13280, %r288, %r12929, %r12755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13284, %r288, %r12940, %r12760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13288, %r288, %r12951, %r12765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13292, %r288, %r12964, %r12770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13296, %r288, %r12975, %r12775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13300, %r288, %r12986, %r12780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13304, %r288, %r12997, %r12785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13308, %r288, %r13010, %r12790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13312, %r288, %r13021, %r12795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13316, %r288, %r13032, %r12800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13320, %r288, %r13043, %r12805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13324, %r288, %r13056, %r12810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13328, %r288, %r13067, %r12815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13332, %r288, %r13078, %r12820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13336, %r288, %r13089, %r12825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13340, %r306, %r13102, %r12830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13344, %r306, %r13113, %r12835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13348, %r306, %r13124, %r12840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13352, %r306, %r13135, %r12845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13356, %r306, %r13148, %r12850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13360, %r306, %r13159, %r12855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13364, %r306, %r13170, %r12860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13368, %r306, %r13181, %r12865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13372, %r306, %r13194, %r12870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13376, %r306, %r13205, %r12875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13380, %r306, %r13216, %r12880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13384, %r306, %r13227, %r12885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13388, %r306, %r13240, %r12890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13392, %r306, %r13251, %r12895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13396, %r306, %r13262, %r12900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13400, %r306, %r13273, %r12905;
	// end inline asm
	// begin inline asm
	mov.b32 %r13409, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13420, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13406, %r935, %r4752, %r13409, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13410, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13411, %r13409, %r13410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13414, %r13406, %r13411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13417, %r946, %r4752, %r13420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13421, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13422, %r13420, %r13421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13425, %r13417, %r13422;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13428, %r935, %r4774, %r13409, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13432, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13433, %r13409, %r13432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13436, %r13428, %r13433;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13439, %r946, %r4774, %r13420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13443, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13444, %r13420, %r13443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13447, %r13439, %r13444;
	// end inline asm
	// begin inline asm
	mov.b32 %r13455, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13466, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13452, %r935, %r4798, %r13455, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13456, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13457, %r13455, %r13456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13460, %r13452, %r13457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13463, %r946, %r4798, %r13466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13467, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13468, %r13466, %r13467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13471, %r13463, %r13468;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13474, %r935, %r4820, %r13455, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13478, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13479, %r13455, %r13478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13482, %r13474, %r13479;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13485, %r946, %r4820, %r13466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13489, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13490, %r13466, %r13489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13493, %r13485, %r13490;
	// end inline asm
	// begin inline asm
	mov.b32 %r13501, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13512, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13498, %r935, %r4844, %r13501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13502, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13503, %r13501, %r13502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13506, %r13498, %r13503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13509, %r946, %r4844, %r13512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13513, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13514, %r13512, %r13513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13517, %r13509, %r13514;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13520, %r935, %r4866, %r13501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13524, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13525, %r13501, %r13524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13528, %r13520, %r13525;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13531, %r946, %r4866, %r13512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13535, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13536, %r13512, %r13535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13539, %r13531, %r13536;
	// end inline asm
	// begin inline asm
	mov.b32 %r13547, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13558, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13544, %r935, %r4890, %r13547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13548, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13549, %r13547, %r13548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13552, %r13544, %r13549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13555, %r946, %r4890, %r13558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13559, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13560, %r13558, %r13559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13563, %r13555, %r13560;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13566, %r935, %r4912, %r13547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13570, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13571, %r13547, %r13570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13574, %r13566, %r13571;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13577, %r946, %r4912, %r13558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13581, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13582, %r13558, %r13581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13585, %r13577, %r13582;
	// end inline asm
	// begin inline asm
	mov.b32 %r13593, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13604, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13590, %r935, %r4936, %r13593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13594, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13595, %r13593, %r13594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13598, %r13590, %r13595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13601, %r946, %r4936, %r13604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13605, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13606, %r13604, %r13605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13609, %r13601, %r13606;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13612, %r935, %r4958, %r13593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13616, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13617, %r13593, %r13616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13620, %r13612, %r13617;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13623, %r946, %r4958, %r13604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13627, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13628, %r13604, %r13627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13631, %r13623, %r13628;
	// end inline asm
	// begin inline asm
	mov.b32 %r13639, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13650, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13636, %r935, %r4982, %r13639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13640, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13641, %r13639, %r13640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13644, %r13636, %r13641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13647, %r946, %r4982, %r13650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13651, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13652, %r13650, %r13651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13655, %r13647, %r13652;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13658, %r935, %r5004, %r13639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13662, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13663, %r13639, %r13662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13666, %r13658, %r13663;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13669, %r946, %r5004, %r13650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13673, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13674, %r13650, %r13673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13677, %r13669, %r13674;
	// end inline asm
	// begin inline asm
	mov.b32 %r13685, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13696, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13682, %r935, %r5028, %r13685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13686, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13687, %r13685, %r13686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13690, %r13682, %r13687;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13693, %r946, %r5028, %r13696, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13697, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13698, %r13696, %r13697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13701, %r13693, %r13698;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13704, %r935, %r5050, %r13685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13708, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13709, %r13685, %r13708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13712, %r13704, %r13709;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13715, %r946, %r5050, %r13696, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13719, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13720, %r13696, %r13719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13723, %r13715, %r13720;
	// end inline asm
	// begin inline asm
	mov.b32 %r13731, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13742, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13728, %r935, %r5074, %r13731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13732, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13733, %r13731, %r13732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13736, %r13728, %r13733;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13739, %r946, %r5074, %r13742, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13743, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13744, %r13742, %r13743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13747, %r13739, %r13744;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13750, %r935, %r5096, %r13731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13754, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13755, %r13731, %r13754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13758, %r13750, %r13755;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13761, %r946, %r5096, %r13742, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13765, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13766, %r13742, %r13765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13769, %r13761, %r13766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13772, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13774, %r13772, %r13414, %r13276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13778, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13780, %r13778, %r13425, %r13280;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13784, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13786, %r13784, %r13436, %r13284;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13790, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13792, %r13790, %r13447, %r13288;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13796, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13798, %r13796, %r13460, %r13292;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13802, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13804, %r13802, %r13471, %r13296;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13808, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13810, %r13808, %r13482, %r13300;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13814, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13816, %r13814, %r13493, %r13304;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13820, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13822, %r13820, %r13506, %r13308;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13826, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13828, %r13826, %r13517, %r13312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13832, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13834, %r13832, %r13528, %r13316;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13838, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13840, %r13838, %r13539, %r13320;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13844, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13846, %r13844, %r13552, %r13324;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13850, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13852, %r13850, %r13563, %r13328;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13856, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13858, %r13856, %r13574, %r13332;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13862, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13864, %r13862, %r13585, %r13336;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13868, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13870, %r13868, %r13598, %r13340;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13874, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13876, %r13874, %r13609, %r13344;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13880, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13882, %r13880, %r13620, %r13348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13886, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13888, %r13886, %r13631, %r13352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13892, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13894, %r13892, %r13644, %r13356;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13898, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13900, %r13898, %r13655, %r13360;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13904, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13906, %r13904, %r13666, %r13364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13910, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13912, %r13910, %r13677, %r13368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13916, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13918, %r13916, %r13690, %r13372;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13922, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13924, %r13922, %r13701, %r13376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13928, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13930, %r13928, %r13712, %r13380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13934, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13936, %r13934, %r13723, %r13384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13940, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13942, %r13940, %r13736, %r13388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13946, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13948, %r13946, %r13747, %r13392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13952, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13954, %r13952, %r13758, %r13396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13958, %r342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13960, %r13958, %r13769, %r13400;
	// end inline asm
	// begin inline asm
	mov.b32 %r13969, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13980, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13966, %r935, %r8568, %r13969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13970, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13971, %r13969, %r13970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13974, %r13966, %r13971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13977, %r946, %r8568, %r13980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13981, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13982, %r13980, %r13981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13985, %r13977, %r13982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13988, %r935, %r8590, %r13969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13992, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13993, %r13969, %r13992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13996, %r13988, %r13993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13999, %r946, %r8590, %r13980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14003, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14004, %r13980, %r14003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14007, %r13999, %r14004;
	// end inline asm
	// begin inline asm
	mov.b32 %r14015, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14026, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14012, %r935, %r8614, %r14015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14016, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14017, %r14015, %r14016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14020, %r14012, %r14017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14023, %r946, %r8614, %r14026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14027, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14028, %r14026, %r14027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14031, %r14023, %r14028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14034, %r935, %r8636, %r14015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14038, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14039, %r14015, %r14038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14042, %r14034, %r14039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14045, %r946, %r8636, %r14026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14049, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14050, %r14026, %r14049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14053, %r14045, %r14050;
	// end inline asm
	// begin inline asm
	mov.b32 %r14061, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14072, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14058, %r935, %r8660, %r14061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14062, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14063, %r14061, %r14062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14066, %r14058, %r14063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14069, %r946, %r8660, %r14072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14073, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14074, %r14072, %r14073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14077, %r14069, %r14074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14080, %r935, %r8682, %r14061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14084, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14085, %r14061, %r14084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14088, %r14080, %r14085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14091, %r946, %r8682, %r14072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14095, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14096, %r14072, %r14095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14099, %r14091, %r14096;
	// end inline asm
	// begin inline asm
	mov.b32 %r14107, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14118, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14104, %r935, %r8706, %r14107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14108, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14109, %r14107, %r14108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14112, %r14104, %r14109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14115, %r946, %r8706, %r14118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14119, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14120, %r14118, %r14119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14123, %r14115, %r14120;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14126, %r935, %r8728, %r14107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14130, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14131, %r14107, %r14130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14134, %r14126, %r14131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14137, %r946, %r8728, %r14118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14141, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14142, %r14118, %r14141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14145, %r14137, %r14142;
	// end inline asm
	// begin inline asm
	mov.b32 %r14153, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14164, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14150, %r935, %r8752, %r14153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14154, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14155, %r14153, %r14154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14158, %r14150, %r14155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14161, %r946, %r8752, %r14164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14165, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14166, %r14164, %r14165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14169, %r14161, %r14166;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14172, %r935, %r8774, %r14153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14176, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14177, %r14153, %r14176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14180, %r14172, %r14177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14183, %r946, %r8774, %r14164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14187, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14188, %r14164, %r14187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14191, %r14183, %r14188;
	// end inline asm
	// begin inline asm
	mov.b32 %r14199, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14210, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14196, %r935, %r8798, %r14199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14200, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14201, %r14199, %r14200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14204, %r14196, %r14201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14207, %r946, %r8798, %r14210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14211, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14212, %r14210, %r14211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14215, %r14207, %r14212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14218, %r935, %r8820, %r14199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14222, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14223, %r14199, %r14222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14226, %r14218, %r14223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14229, %r946, %r8820, %r14210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14233, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14234, %r14210, %r14233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14237, %r14229, %r14234;
	// end inline asm
	// begin inline asm
	mov.b32 %r14245, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14256, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14242, %r935, %r8844, %r14245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14246, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14247, %r14245, %r14246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14250, %r14242, %r14247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14253, %r946, %r8844, %r14256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14257, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14258, %r14256, %r14257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14261, %r14253, %r14258;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14264, %r935, %r8866, %r14245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14268, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14269, %r14245, %r14268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14272, %r14264, %r14269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14275, %r946, %r8866, %r14256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14279, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14280, %r14256, %r14279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14283, %r14275, %r14280;
	// end inline asm
	// begin inline asm
	mov.b32 %r14291, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14302, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14288, %r935, %r8890, %r14291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14292, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14293, %r14291, %r14292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14296, %r14288, %r14293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14299, %r946, %r8890, %r14302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14303, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14304, %r14302, %r14303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14307, %r14299, %r14304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14310, %r935, %r8912, %r14291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14314, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14315, %r14291, %r14314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14318, %r14310, %r14315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14321, %r946, %r8912, %r14302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14325, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14326, %r14302, %r14325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14329, %r14321, %r14326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14467, %r360, %r13974, %r13774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14464, %r360, %r13985, %r13780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14476, %r360, %r13996, %r13786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14473, %r360, %r14007, %r13792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14485, %r360, %r14020, %r13798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14482, %r360, %r14031, %r13804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14494, %r360, %r14042, %r13810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14491, %r360, %r14053, %r13816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14503, %r360, %r14066, %r13822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14500, %r360, %r14077, %r13828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14512, %r360, %r14088, %r13834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14509, %r360, %r14099, %r13840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14521, %r360, %r14112, %r13846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14518, %r360, %r14123, %r13852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14530, %r360, %r14134, %r13858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14527, %r360, %r14145, %r13864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14539, %r378, %r14158, %r13870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14536, %r378, %r14169, %r13876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14548, %r378, %r14180, %r13882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14545, %r378, %r14191, %r13888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14557, %r378, %r14204, %r13894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14554, %r378, %r14215, %r13900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14566, %r378, %r14226, %r13906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14563, %r378, %r14237, %r13912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14575, %r378, %r14250, %r13918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14572, %r378, %r14261, %r13924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14584, %r378, %r14272, %r13930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14581, %r378, %r14283, %r13936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14593, %r378, %r14296, %r13942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14590, %r378, %r14307, %r13948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14602, %r378, %r14318, %r13954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14599, %r378, %r14329, %r13960;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14460, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14462, %r14460, %r14464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14465, %r442, %r14467, %r14462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14469, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14471, %r14469, %r14473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14474, %r442, %r14476, %r14471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14478, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14480, %r14478, %r14482;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14483, %r442, %r14485, %r14480;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14487, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14489, %r14487, %r14491;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14492, %r442, %r14494, %r14489;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14496, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14498, %r14496, %r14500;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14501, %r442, %r14503, %r14498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14505, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14507, %r14505, %r14509;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14510, %r442, %r14512, %r14507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14514, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14516, %r14514, %r14518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14519, %r442, %r14521, %r14516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14523, %r448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14525, %r14523, %r14527;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14528, %r442, %r14530, %r14525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14532, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14534, %r14532, %r14536;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14537, %r445, %r14539, %r14534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14541, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14543, %r14541, %r14545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14546, %r445, %r14548, %r14543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14550, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14552, %r14550, %r14554;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14555, %r445, %r14557, %r14552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14559, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14561, %r14559, %r14563;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14564, %r445, %r14566, %r14561;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14568, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14570, %r14568, %r14572;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14573, %r445, %r14575, %r14570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14577, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14579, %r14577, %r14581;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14582, %r445, %r14584, %r14579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14586, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14588, %r14586, %r14590;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14591, %r445, %r14593, %r14588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14595, %r451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14597, %r14595, %r14599;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14600, %r445, %r14602, %r14597;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14604, %r448, %r14467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14607, %r442, %r14464, %r14604;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14611, %r448, %r14476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14614, %r442, %r14473, %r14611;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14618, %r448, %r14485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14621, %r442, %r14482, %r14618;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14625, %r448, %r14494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14628, %r442, %r14491, %r14625;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14632, %r448, %r14503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14635, %r442, %r14500, %r14632;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14639, %r448, %r14512;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14642, %r442, %r14509, %r14639;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14646, %r448, %r14521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14649, %r442, %r14518, %r14646;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14653, %r448, %r14530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14656, %r442, %r14527, %r14653;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14660, %r451, %r14539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14663, %r445, %r14536, %r14660;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14667, %r451, %r14548;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14670, %r445, %r14545, %r14667;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14674, %r451, %r14557;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14677, %r445, %r14554, %r14674;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14681, %r451, %r14566;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14684, %r445, %r14563, %r14681;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14688, %r451, %r14575;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14691, %r445, %r14572, %r14688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14695, %r451, %r14584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14698, %r445, %r14581, %r14695;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14702, %r451, %r14593;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14705, %r445, %r14590, %r14702;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14709, %r451, %r14602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14712, %r445, %r14599, %r14709;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14883, %r14880}, {%r497, %r503, %r500, %r506}, {%r14465, %r14607}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14892, %r14889}, {%r497, %r503, %r500, %r506}, {%r14474, %r14614}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14901, %r14898}, {%r497, %r503, %r500, %r506}, {%r14483, %r14621}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14910, %r14907}, {%r497, %r503, %r500, %r506}, {%r14492, %r14628}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14919, %r14916}, {%r497, %r503, %r500, %r506}, {%r14501, %r14635}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14928, %r14925}, {%r497, %r503, %r500, %r506}, {%r14510, %r14642}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14937, %r14934}, {%r497, %r503, %r500, %r506}, {%r14519, %r14649}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14946, %r14943}, {%r497, %r503, %r500, %r506}, {%r14528, %r14656}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14955, %r14952}, {%r497, %r503, %r500, %r506}, {%r14537, %r14663}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14964, %r14961}, {%r497, %r503, %r500, %r506}, {%r14546, %r14670}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14973, %r14970}, {%r497, %r503, %r500, %r506}, {%r14555, %r14677}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14982, %r14979}, {%r497, %r503, %r500, %r506}, {%r14564, %r14684}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14991, %r14988}, {%r497, %r503, %r500, %r506}, {%r14573, %r14691}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15000, %r14997}, {%r497, %r503, %r500, %r506}, {%r14582, %r14698}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15009, %r15006}, {%r497, %r503, %r500, %r506}, {%r14591, %r14705}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15018, %r15015}, {%r497, %r503, %r500, %r506}, {%r14600, %r14712}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14876, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14878, %r14876, %r14880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14881, %r547, %r14883, %r14878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14885, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14887, %r14885, %r14889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14890, %r547, %r14892, %r14887;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14894, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14896, %r14894, %r14898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14899, %r547, %r14901, %r14896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14903, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14905, %r14903, %r14907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14908, %r547, %r14910, %r14905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14912, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14914, %r14912, %r14916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14917, %r547, %r14919, %r14914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14921, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14923, %r14921, %r14925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14926, %r547, %r14928, %r14923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14930, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14932, %r14930, %r14934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14935, %r547, %r14937, %r14932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14939, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14941, %r14939, %r14943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14944, %r547, %r14946, %r14941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14948, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14950, %r14948, %r14952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14953, %r547, %r14955, %r14950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14957, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14959, %r14957, %r14961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14962, %r547, %r14964, %r14959;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14966, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14968, %r14966, %r14970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14971, %r547, %r14973, %r14968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14975, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14977, %r14975, %r14979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14980, %r547, %r14982, %r14977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14984, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14986, %r14984, %r14988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14989, %r547, %r14991, %r14986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14993, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14995, %r14993, %r14997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14998, %r547, %r15000, %r14995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r15002, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15004, %r15002, %r15006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15007, %r547, %r15009, %r15004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r15011, %r550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15013, %r15011, %r15015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15016, %r547, %r15018, %r15013;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15020, %r550, %r14883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15023, %r547, %r14880, %r15020;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15027, %r550, %r14892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15030, %r547, %r14889, %r15027;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15034, %r550, %r14901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15037, %r547, %r14898, %r15034;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15041, %r550, %r14910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15044, %r547, %r14907, %r15041;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15048, %r550, %r14919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15051, %r547, %r14916, %r15048;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15055, %r550, %r14928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15058, %r547, %r14925, %r15055;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15062, %r550, %r14937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15065, %r547, %r14934, %r15062;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15069, %r550, %r14946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15072, %r547, %r14943, %r15069;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15076, %r550, %r14955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15079, %r547, %r14952, %r15076;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15083, %r550, %r14964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15086, %r547, %r14961, %r15083;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15090, %r550, %r14973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15093, %r547, %r14970, %r15090;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15097, %r550, %r14982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15100, %r547, %r14979, %r15097;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15104, %r550, %r14991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15107, %r547, %r14988, %r15104;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15111, %r550, %r15000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15114, %r547, %r14997, %r15111;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15118, %r550, %r15009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15121, %r547, %r15006, %r15118;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15125, %r550, %r15018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15128, %r547, %r15015, %r15125;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15421, %r15424}, {%r585, %r591, %r588, %r594}, {%r14881, %r15023}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15427, %r15430}, {%r585, %r591, %r588, %r594}, {%r14890, %r15030}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15433, %r15436}, {%r585, %r591, %r588, %r594}, {%r14899, %r15037}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15439, %r15442}, {%r585, %r591, %r588, %r594}, {%r14908, %r15044}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15445, %r15448}, {%r585, %r591, %r588, %r594}, {%r14917, %r15051}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15451, %r15454}, {%r585, %r591, %r588, %r594}, {%r14926, %r15058}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15457, %r15460}, {%r585, %r591, %r588, %r594}, {%r14935, %r15065}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15463, %r15466}, {%r585, %r591, %r588, %r594}, {%r14944, %r15072}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15422, %r15425}, {%r585, %r591, %r588, %r594}, {%r14953, %r15079}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15428, %r15431}, {%r585, %r591, %r588, %r594}, {%r14962, %r15086}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15434, %r15437}, {%r585, %r591, %r588, %r594}, {%r14971, %r15093}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15440, %r15443}, {%r585, %r591, %r588, %r594}, {%r14980, %r15100}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15446, %r15449}, {%r585, %r591, %r588, %r594}, {%r14989, %r15107}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15452, %r15455}, {%r585, %r591, %r588, %r594}, {%r14998, %r15114}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15458, %r15461}, {%r585, %r591, %r588, %r594}, {%r15007, %r15121}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15464, %r15467}, {%r585, %r591, %r588, %r594}, {%r15016, %r15128}, {%r3276, %r3276};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15420, %r15421, %r15422;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15423, %r15424, %r15425;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15426, %r15427, %r15428;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15429, %r15430, %r15431;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15432, %r15433, %r15434;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15435, %r15436, %r15437;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15438, %r15439, %r15440;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15441, %r15442, %r15443;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15444, %r15445, %r15446;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15447, %r15448, %r15449;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15450, %r15451, %r15452;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15453, %r15454, %r15455;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15456, %r15457, %r15458;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15459, %r15460, %r15461;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15462, %r15463, %r15464;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15465, %r15466, %r15467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15468, %r15421, %r15422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15471, %r15424, %r15425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15474, %r15427, %r15428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15477, %r15430, %r15431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15480, %r15433, %r15434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15483, %r15436, %r15437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15486, %r15439, %r15440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15489, %r15442, %r15443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15492, %r15445, %r15446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15495, %r15448, %r15449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15498, %r15451, %r15452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15501, %r15454, %r15455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15504, %r15457, %r15458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15507, %r15460, %r15461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15510, %r15463, %r15464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15513, %r15466, %r15467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15516, %r218, %r15420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15519, %r218, %r15423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15522, %r218, %r15426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15525, %r218, %r15429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15528, %r218, %r15432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15531, %r218, %r15435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15534, %r218, %r15438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15537, %r218, %r15441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15540, %r218, %r15444;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15543, %r218, %r15447;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15546, %r218, %r15450;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15549, %r218, %r15453;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15552, %r218, %r15456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15555, %r218, %r15459;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15558, %r218, %r15462;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15561, %r218, %r15465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15564, %r219, %r15468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15567, %r219, %r15471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15570, %r219, %r15474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15573, %r219, %r15477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15576, %r219, %r15480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15579, %r219, %r15483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15582, %r219, %r15486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15585, %r219, %r15489;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15588, %r219, %r15492;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15591, %r219, %r15495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15594, %r219, %r15498;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15597, %r219, %r15501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15600, %r219, %r15504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15603, %r219, %r15507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15606, %r219, %r15510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15609, %r219, %r15513;
	// end inline asm
	// begin inline asm
	mov.b32 %r15612, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15613, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15614, %r15516, %r15612;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15617, %r15614, %r15613;
	// end inline asm
	// begin inline asm
	mov.b32 %r15620, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15621, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15622, %r15519, %r15620;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15625, %r15622, %r15621;
	// end inline asm
	// begin inline asm
	mov.b32 %r15628, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15629, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15630, %r15522, %r15628;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15633, %r15630, %r15629;
	// end inline asm
	// begin inline asm
	mov.b32 %r15636, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15637, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15638, %r15525, %r15636;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15641, %r15638, %r15637;
	// end inline asm
	// begin inline asm
	mov.b32 %r15644, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15645, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15646, %r15528, %r15644;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15649, %r15646, %r15645;
	// end inline asm
	// begin inline asm
	mov.b32 %r15652, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15653, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15654, %r15531, %r15652;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15657, %r15654, %r15653;
	// end inline asm
	// begin inline asm
	mov.b32 %r15660, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15661, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15662, %r15534, %r15660;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15665, %r15662, %r15661;
	// end inline asm
	// begin inline asm
	mov.b32 %r15668, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15669, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15670, %r15537, %r15668;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15673, %r15670, %r15669;
	// end inline asm
	// begin inline asm
	mov.b32 %r15676, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15677, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15678, %r15540, %r15676;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15681, %r15678, %r15677;
	// end inline asm
	// begin inline asm
	mov.b32 %r15684, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15685, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15686, %r15543, %r15684;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15689, %r15686, %r15685;
	// end inline asm
	// begin inline asm
	mov.b32 %r15692, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15693, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15694, %r15546, %r15692;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15697, %r15694, %r15693;
	// end inline asm
	// begin inline asm
	mov.b32 %r15700, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15701, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15702, %r15549, %r15700;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15705, %r15702, %r15701;
	// end inline asm
	// begin inline asm
	mov.b32 %r15708, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15709, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15710, %r15552, %r15708;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15713, %r15710, %r15709;
	// end inline asm
	// begin inline asm
	mov.b32 %r15716, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15717, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15718, %r15555, %r15716;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15721, %r15718, %r15717;
	// end inline asm
	// begin inline asm
	mov.b32 %r15724, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15725, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15726, %r15558, %r15724;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15729, %r15726, %r15725;
	// end inline asm
	// begin inline asm
	mov.b32 %r15732, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15733, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15734, %r15561, %r15732;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15737, %r15734, %r15733;
	// end inline asm
	// begin inline asm
	mov.b32 %r15740, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15741, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15742, %r15564, %r15740;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15745, %r15742, %r15741;
	// end inline asm
	// begin inline asm
	mov.b32 %r15748, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15749, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15750, %r15567, %r15748;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15753, %r15750, %r15749;
	// end inline asm
	// begin inline asm
	mov.b32 %r15756, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15757, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15758, %r15570, %r15756;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15761, %r15758, %r15757;
	// end inline asm
	// begin inline asm
	mov.b32 %r15764, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15765, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15766, %r15573, %r15764;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15769, %r15766, %r15765;
	// end inline asm
	// begin inline asm
	mov.b32 %r15772, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15773, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15774, %r15576, %r15772;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15777, %r15774, %r15773;
	// end inline asm
	// begin inline asm
	mov.b32 %r15780, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15781, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15782, %r15579, %r15780;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15785, %r15782, %r15781;
	// end inline asm
	// begin inline asm
	mov.b32 %r15788, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15789, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15790, %r15582, %r15788;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15793, %r15790, %r15789;
	// end inline asm
	// begin inline asm
	mov.b32 %r15796, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15797, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15798, %r15585, %r15796;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15801, %r15798, %r15797;
	// end inline asm
	// begin inline asm
	mov.b32 %r15804, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15805, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15806, %r15588, %r15804;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15809, %r15806, %r15805;
	// end inline asm
	// begin inline asm
	mov.b32 %r15812, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15813, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15814, %r15591, %r15812;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15817, %r15814, %r15813;
	// end inline asm
	// begin inline asm
	mov.b32 %r15820, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15821, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15822, %r15594, %r15820;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15825, %r15822, %r15821;
	// end inline asm
	// begin inline asm
	mov.b32 %r15828, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15829, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15830, %r15597, %r15828;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15833, %r15830, %r15829;
	// end inline asm
	// begin inline asm
	mov.b32 %r15836, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15837, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15838, %r15600, %r15836;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15841, %r15838, %r15837;
	// end inline asm
	// begin inline asm
	mov.b32 %r15844, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15845, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15846, %r15603, %r15844;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15849, %r15846, %r15845;
	// end inline asm
	// begin inline asm
	mov.b32 %r15852, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15853, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15854, %r15606, %r15852;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15857, %r15854, %r15853;
	// end inline asm
	// begin inline asm
	mov.b32 %r15860, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15861, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15862, %r15609, %r15860;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15865, %r15862, %r15861;
	// end inline asm
	// begin inline asm
	mov.b32 %r15871, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15869, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15870, %r15871, %r15869;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15873, %r15617, %r15870;
	// end inline asm
	// begin inline asm
	mov.b32 %r15876, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15877, %r15871, %r15876;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15880, %r15625, %r15877;
	// end inline asm
	// begin inline asm
	mov.b32 %r15883, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15884, %r15871, %r15883;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15887, %r15633, %r15884;
	// end inline asm
	// begin inline asm
	mov.b32 %r15890, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15891, %r15871, %r15890;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15894, %r15641, %r15891;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15897, %r15873, %r15887, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15901, %r15880, %r15894, %r4452;
	// end inline asm
	shl.b32 	%r15908, %r15901, 4;
	// begin inline asm
	lop3.b32 %r15905, %r4458, %r15897, %r15908, 202;
	// end inline asm
	xor.b32  	%r16228, %r15905, -2004318072;
	// begin inline asm
	mov.b32 %r15912, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15910, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15911, %r15912, %r15910;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15914, %r15649, %r15911;
	// end inline asm
	// begin inline asm
	mov.b32 %r15917, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15918, %r15912, %r15917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15921, %r15657, %r15918;
	// end inline asm
	// begin inline asm
	mov.b32 %r15924, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15925, %r15912, %r15924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15928, %r15665, %r15925;
	// end inline asm
	// begin inline asm
	mov.b32 %r15931, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15932, %r15912, %r15931;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15935, %r15673, %r15932;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15938, %r15914, %r15928, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15942, %r15921, %r15935, %r4452;
	// end inline asm
	shl.b32 	%r15949, %r15942, 4;
	// begin inline asm
	lop3.b32 %r15946, %r4458, %r15938, %r15949, 202;
	// end inline asm
	xor.b32  	%r16229, %r15946, -2004318072;
	// begin inline asm
	mov.b32 %r15953, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15951, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15952, %r15953, %r15951;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15955, %r15681, %r15952;
	// end inline asm
	// begin inline asm
	mov.b32 %r15958, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15959, %r15953, %r15958;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15962, %r15689, %r15959;
	// end inline asm
	// begin inline asm
	mov.b32 %r15965, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15966, %r15953, %r15965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15969, %r15697, %r15966;
	// end inline asm
	// begin inline asm
	mov.b32 %r15972, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15973, %r15953, %r15972;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15976, %r15705, %r15973;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15979, %r15955, %r15969, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15983, %r15962, %r15976, %r4452;
	// end inline asm
	shl.b32 	%r15990, %r15983, 4;
	// begin inline asm
	lop3.b32 %r15987, %r4458, %r15979, %r15990, 202;
	// end inline asm
	xor.b32  	%r16230, %r15987, -2004318072;
	// begin inline asm
	mov.b32 %r15994, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15992, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15993, %r15994, %r15992;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15996, %r15713, %r15993;
	// end inline asm
	// begin inline asm
	mov.b32 %r15999, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16000, %r15994, %r15999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16003, %r15721, %r16000;
	// end inline asm
	// begin inline asm
	mov.b32 %r16006, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16007, %r15994, %r16006;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16010, %r15729, %r16007;
	// end inline asm
	// begin inline asm
	mov.b32 %r16013, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16014, %r15994, %r16013;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16017, %r15737, %r16014;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16020, %r15996, %r16010, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16024, %r16003, %r16017, %r4452;
	// end inline asm
	shl.b32 	%r16031, %r16024, 4;
	// begin inline asm
	lop3.b32 %r16028, %r4458, %r16020, %r16031, 202;
	// end inline asm
	xor.b32  	%r16231, %r16028, -2004318072;
	// begin inline asm
	mov.b32 %r16035, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r16033, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16034, %r16035, %r16033;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16037, %r15745, %r16034;
	// end inline asm
	// begin inline asm
	mov.b32 %r16040, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16041, %r16035, %r16040;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16044, %r15753, %r16041;
	// end inline asm
	// begin inline asm
	mov.b32 %r16047, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16048, %r16035, %r16047;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16051, %r15761, %r16048;
	// end inline asm
	// begin inline asm
	mov.b32 %r16054, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16055, %r16035, %r16054;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16058, %r15769, %r16055;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16061, %r16037, %r16051, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16065, %r16044, %r16058, %r4452;
	// end inline asm
	shl.b32 	%r16072, %r16065, 4;
	// begin inline asm
	lop3.b32 %r16069, %r4458, %r16061, %r16072, 202;
	// end inline asm
	xor.b32  	%r16232, %r16069, -2004318072;
	// begin inline asm
	mov.b32 %r16076, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r16074, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16075, %r16076, %r16074;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16078, %r15777, %r16075;
	// end inline asm
	// begin inline asm
	mov.b32 %r16081, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16082, %r16076, %r16081;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16085, %r15785, %r16082;
	// end inline asm
	// begin inline asm
	mov.b32 %r16088, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16089, %r16076, %r16088;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16092, %r15793, %r16089;
	// end inline asm
	// begin inline asm
	mov.b32 %r16095, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16096, %r16076, %r16095;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16099, %r15801, %r16096;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16102, %r16078, %r16092, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16106, %r16085, %r16099, %r4452;
	// end inline asm
	shl.b32 	%r16113, %r16106, 4;
	// begin inline asm
	lop3.b32 %r16110, %r4458, %r16102, %r16113, 202;
	// end inline asm
	xor.b32  	%r16233, %r16110, -2004318072;
	// begin inline asm
	mov.b32 %r16117, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r16115, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16116, %r16117, %r16115;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16119, %r15809, %r16116;
	// end inline asm
	// begin inline asm
	mov.b32 %r16122, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16123, %r16117, %r16122;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16126, %r15817, %r16123;
	// end inline asm
	// begin inline asm
	mov.b32 %r16129, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16130, %r16117, %r16129;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16133, %r15825, %r16130;
	// end inline asm
	// begin inline asm
	mov.b32 %r16136, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16137, %r16117, %r16136;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16140, %r15833, %r16137;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16143, %r16119, %r16133, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16147, %r16126, %r16140, %r4452;
	// end inline asm
	shl.b32 	%r16154, %r16147, 4;
	// begin inline asm
	lop3.b32 %r16151, %r4458, %r16143, %r16154, 202;
	// end inline asm
	xor.b32  	%r16234, %r16151, -2004318072;
	// begin inline asm
	mov.b32 %r16158, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r16156, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16157, %r16158, %r16156;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16160, %r15841, %r16157;
	// end inline asm
	// begin inline asm
	mov.b32 %r16163, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16164, %r16158, %r16163;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16167, %r15849, %r16164;
	// end inline asm
	// begin inline asm
	mov.b32 %r16170, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16171, %r16158, %r16170;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16174, %r15857, %r16171;
	// end inline asm
	// begin inline asm
	mov.b32 %r16177, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16178, %r16158, %r16177;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16181, %r15865, %r16178;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16184, %r16160, %r16174, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16188, %r16167, %r16181, %r4452;
	// end inline asm
	shl.b32 	%r16195, %r16188, 4;
	// begin inline asm
	lop3.b32 %r16192, %r4458, %r16184, %r16195, 202;
	// end inline asm
	xor.b32  	%r16235, %r16192, -2004318072;
	st.shared.u32 	[%rd117], %r16228;
	st.shared.u32 	[%rd118], %r16229;
	st.shared.u32 	[%rd119], %r16230;
	st.shared.u32 	[%rd120], %r16231;
	st.shared.u32 	[%rd121], %r16232;
	st.shared.u32 	[%rd122], %r16233;
	st.shared.u32 	[%rd123], %r16234;
	st.shared.u32 	[%rd124], %r16235;
	add.s32 	%r16382, %r16382, -128;
	add.s64 	%rd173, %rd173, 16644;
	setp.eq.s32 	%p325, %r16382, 0;
	@%p325 bra 	LBB0_184;
	bra.uni 	LBB0_183;
LBB0_184:                               // %guard_pass26125
                                        //   in Loop: Header=BB0_182 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16241, [%rd21];
	ld.shared.u32 	%r16242, [%rd22+128];
	ld.shared.u32 	%r16249, [%rd22+4];
	ld.shared.u32 	%r16250, [%rd22+132];
	ld.shared.u32 	%r16257, [%rd23];
	ld.shared.u32 	%r16258, [%rd24+128];
	ld.shared.u32 	%r16265, [%rd24+4];
	ld.shared.u32 	%r16266, [%rd24+132];
	ld.shared.u32 	%r16273, [%rd22+16644];
	ld.shared.u32 	%r16274, [%rd25];
	ld.shared.u32 	%r16281, [%rd22+16648];
	ld.shared.u32 	%r16282, [%rd22+16776];
	ld.shared.u32 	%r16289, [%rd24+16644];
	ld.shared.u32 	%r16290, [%rd26];
	ld.shared.u32 	%r16297, [%rd24+16648];
	ld.shared.u32 	%r16298, [%rd24+16776];
	// begin inline asm
	prmt.b32 %r16236, %r16241, %r16242, %r846;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16240, %r16241, %r16242, %r850;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16244, %r16249, %r16250, %r846;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16248, %r16249, %r16250, %r850;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16252, %r16257, %r16258, %r846;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16256, %r16257, %r16258, %r850;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16260, %r16265, %r16266, %r846;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16264, %r16265, %r16266, %r850;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16268, %r16273, %r16274, %r846;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16272, %r16273, %r16274, %r850;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16276, %r16281, %r16282, %r846;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16280, %r16281, %r16282, %r850;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16284, %r16289, %r16290, %r846;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16288, %r16289, %r16290, %r850;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16292, %r16297, %r16298, %r846;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16296, %r16297, %r16298, %r850;
	// end inline asm
	selp.b32 	%r16300, %r16240, %r16236, %p312;
	shfl.sync.bfly.b32	%r237, %r16300, 8, 31, -1;
	selp.b32 	%r16301, %r16248, %r16244, %p312;
	shfl.sync.bfly.b32	%r238, %r16301, 8, 31, -1;
	selp.b32 	%r16302, %r16256, %r16252, %p312;
	shfl.sync.bfly.b32	%r239, %r16302, 8, 31, -1;
	selp.b32 	%r16303, %r16264, %r16260, %p312;
	shfl.sync.bfly.b32	%r240, %r16303, 8, 31, -1;
	selp.b32 	%r16304, %r16272, %r16268, %p312;
	shfl.sync.bfly.b32	%r16305, %r16304, 8, 31, -1;
	selp.b32 	%r16306, %r16280, %r16276, %p312;
	shfl.sync.bfly.b32	%r16307, %r16306, 8, 31, -1;
	selp.b32 	%r16308, %r16288, %r16284, %p312;
	shfl.sync.bfly.b32	%r16309, %r16308, 8, 31, -1;
	selp.b32 	%r16310, %r16296, %r16292, %p312;
	shfl.sync.bfly.b32	%r16311, %r16310, 8, 31, -1;
	and.b32  	%r249, %r16357, 768;
	setp.lt.u32 	%p327, %r249, 384;
	shl.b32 	%r16336, %r16357, 13;
	@%p327 bra 	LBB0_186;
// %bb.185:                             // %L80585
                                        //   in Loop: Header=BB0_182 Depth=1
	selp.b32 	%r16312, %r240, %r16264, %p312;
	selp.b32 	%r16313, %r16260, %r240, %p312;
	selp.b32 	%r16314, %r239, %r16256, %p312;
	selp.b32 	%r16315, %r16252, %r239, %p312;
	selp.b32 	%r16316, %r238, %r16248, %p312;
	selp.b32 	%r16317, %r16244, %r238, %p312;
	selp.b32 	%r16318, %r237, %r16240, %p312;
	selp.b32 	%r16319, %r16236, %r237, %p312;
	or.b32  	%r16321, %r125, %r16336;
	or.b32  	%r16322, %r131, %r16321;
	or.b32  	%r16323, %r132, %r16322;
	cvt.u64.u32 	%rd125, %r16323;
	add.s64 	%rd126, %rd125, %rd27;
	shr.u64 	%rd127, %rd126, 38;
	add.s64 	%rd128, %rd126, %rd127;
	shr.s64 	%rd129, %rd128, 26;
	and.b64  	%rd130, %rd128, -67108864;
	setp.ne.s64 	%p329, %rd130, %rd126;
	setp.lt.s64 	%p330, %rd126, 0;
	and.pred  	%p331, %p330, %p329;
	selp.u64 	%rd131, 1, 0, %p331;
	sub.s64 	%rd132, %rd131, %rd129;
	shl.b64 	%rd133, %rd132, 26;
	add.s64 	%rd134, %rd133, %rd126;
	shl.b64 	%rd135, %rd134, 2;
	add.s64 	%rd136, %rd3, %rd135;
	st.global.v4.u32 	[%rd136], {%r16319, %r16317, %r16318, %r16316};
	or.b32  	%r16324, %r16323, 8192;
	cvt.s64.s32 	%rd137, %r16324;
	add.s64 	%rd138, %rd137, %rd27;
	shr.u64 	%rd139, %rd138, 38;
	add.s64 	%rd140, %rd138, %rd139;
	shr.u64 	%rd141, %rd140, 26;
	shr.u64 	%rd142, %rd138, 63;
	sub.s64 	%rd143, %rd142, %rd141;
	shl.b64 	%rd144, %rd143, 26;
	add.s64 	%rd145, %rd144, %rd138;
	shl.b64 	%rd146, %rd145, 2;
	add.s64 	%rd147, %rd3, %rd146;
	st.global.v4.u32 	[%rd147], {%r16315, %r16313, %r16314, %r16312};
LBB0_186:                               // %pass25534
                                        //   in Loop: Header=BB0_182 Depth=1
	or.b32  	%r16325, %r249, 128;
	setp.lt.u32 	%p332, %r16325, 384;
	@%p332 bra 	LBB0_188;
// %bb.187:                             // %L81038
                                        //   in Loop: Header=BB0_182 Depth=1
	selp.b32 	%r241, %r16268, %r16305, %p312;
	selp.b32 	%r242, %r16305, %r16272, %p312;
	selp.b32 	%r243, %r16276, %r16307, %p312;
	selp.b32 	%r244, %r16307, %r16280, %p312;
	selp.b32 	%r245, %r16284, %r16309, %p312;
	selp.b32 	%r246, %r16309, %r16288, %p312;
	selp.b32 	%r247, %r16292, %r16311, %p312;
	selp.b32 	%r248, %r16311, %r16296, %p312;
	or.b32  	%r16327, %r125, %r16336;
	or.b32  	%r16328, %r131, %r16327;
	or.b32  	%r16329, %r132, %r16328;
	or.b32  	%r16330, %r16329, 1048576;
	cvt.s64.s32 	%rd148, %r16330;
	add.s64 	%rd149, %rd148, %rd27;
	shr.u64 	%rd150, %rd149, 38;
	add.s64 	%rd151, %rd149, %rd150;
	shr.s64 	%rd152, %rd151, 26;
	and.b64  	%rd153, %rd151, -67108864;
	setp.ne.s64 	%p333, %rd153, %rd149;
	setp.lt.s64 	%p334, %rd149, 0;
	and.pred  	%p335, %p334, %p333;
	selp.u64 	%rd154, 1, 0, %p335;
	sub.s64 	%rd155, %rd154, %rd152;
	shl.b64 	%rd156, %rd155, 26;
	add.s64 	%rd157, %rd156, %rd149;
	shl.b64 	%rd158, %rd157, 2;
	add.s64 	%rd159, %rd3, %rd158;
	st.global.v4.u32 	[%rd159], {%r241, %r243, %r242, %r244};
	or.b32  	%r16331, %r16329, 1056768;
	cvt.s64.s32 	%rd160, %r16331;
	add.s64 	%rd161, %rd160, %rd27;
	shr.u64 	%rd162, %rd161, 38;
	add.s64 	%rd163, %rd161, %rd162;
	shr.u64 	%rd164, %rd163, 26;
	shr.u64 	%rd165, %rd161, 63;
	sub.s64 	%rd166, %rd165, %rd164;
	shl.b64 	%rd167, %rd166, 26;
	add.s64 	%rd168, %rd167, %rd161;
	shl.b64 	%rd169, %rd168, 2;
	add.s64 	%rd170, %rd3, %rd169;
	st.global.v4.u32 	[%rd170], {%r245, %r247, %r246, %r248};
	bra.uni 	LBB0_188;
LBB0_189:                               // %L81496
	st.global.u32 	[%rd4], %r16335;
	ret;
LBB0_7:                                 // %L291
	mov.u32 	%r16334, 2;
	st.global.u32 	[%rd4], %r16334;
	mov.u64 	%rd171, exception5788;
	cvta.global.u64 	%rd172, %rd171;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd172;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd46;
	st.param.b32 	[param0+8], %r250;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L9
	mov.u64 	%rd67, exception15812;
	cvta.global.u64 	%rd68, %rd67;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd68;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd46;
	st.param.b32 	[param0+8], %r250;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
