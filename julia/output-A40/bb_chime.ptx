// PTX kernel code for CUDA baseband beamformer
// This file has been generated automatically by `bb.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for bb(::Int32, ::Int32, ::CuDeviceVector{Int8x4, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=128, blocks_per_sm=8

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2743[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32]
)
.reqntid 128, 1, 1
.minnctapersm 8
{
	.reg .pred 	%p<70>;
	.reg .b32 	%r<2450>;
	.reg .b64 	%rd<344>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r113, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd32, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r116, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p6, %r116, 32895;
	@%p6 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	// begin inline asm
	mov.u32 %r117, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p7, %r117, 43135;
	@%p7 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:                              // %L26
	ld.param.u32 	%r114, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	ld.param.u64 	%rd5, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r118, %r4, 7;
	or.b32  	%r119, %r2, %r3;
	or.b32  	%r120, %r119, %r118;
	mul.wide.u32 	%rd37, %r120, 4;
	add.s64 	%rd7, %rd5, %rd37;
	mov.u32 	%r121, 1;
	st.global.u32 	[%rd7], %r121;
	setp.gt.u32 	%p8, %r114, 8191;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L133
	ld.param.u32 	%r115, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p9, %r115, %r114;
	setp.gt.s32 	%p10, %r115, 16383;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L140
	sub.s32 	%r122, %r115, %r114;
	and.b32  	%r123, %r122, 127;
	setp.eq.s32 	%p12, %r123, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L245
	ld.param.u64 	%rd3, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	shl.b32 	%r124, %r4, 4;
	shr.u32 	%r5, %r3, 3;
	shl.b32 	%r125, %r1, 2;
	or.b32  	%r6, %r5, %r125;
	or.b32  	%r126, %r6, %r124;
	mul.wide.u32 	%rd38, %r126, 4;
	add.s64 	%rd39, %rd3, %rd38;
	ld.global.u32 	%r127, [%rd39];
	add.s32 	%r8, %r127, -5;
	setp.lt.u32 	%p13, %r8, 31;
	@%p13 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;
$L__BB0_10:                             // %L463
	ld.param.u64 	%rd1, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	ld.param.u64 	%rd6, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	add.s32 	%r7, %r127, -4;
	or.b32  	%r129, %r3, %r1;
	setp.ne.s32 	%p1, %r129, 0;
	mul.wide.u32 	%rd42, %r4, 4;
	add.s64 	%rd8, %rd6, %rd42;
	mov.u32 	%r2441, 0;
	@%p1 bra 	$L__BB0_12;
// %bb.11:                              // %L487
	st.global.u32 	[%rd8], %r2441;
$L__BB0_12:                             // %L533
	ld.param.u64 	%rd2, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	ld.param.u64 	%rd4, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	bar.sync 	0;
	shl.b32 	%r644, %r4, 13;
	shl.b32 	%r645, %r3, 7;
	and.b32  	%r646, %r645, 3584;
	shl.b32 	%r647, %r1, 7;
	shl.b32 	%r648, %r3, 5;
	and.b32  	%r649, %r648, 96;
	or.b32  	%r650, %r649, %r647;
	or.b32  	%r651, %r644, %r646;
	or.b32  	%r652, %r651, %r650;
	mul.wide.u32 	%rd43, %r652, 4;
	add.s64 	%rd44, %rd1, %rd43;
	ld.global.u32 	%r136, [%rd44];
	or.b32  	%r653, %r651, 4096;
	or.b32  	%r654, %r653, %r650;
	mul.wide.u32 	%rd45, %r654, 4;
	add.s64 	%rd46, %rd1, %rd45;
	ld.global.u32 	%r144, [%rd46];
	or.b32  	%r655, %r650, 1;
	or.b32  	%r656, %r651, %r655;
	mul.wide.u32 	%rd47, %r656, 4;
	add.s64 	%rd48, %rd1, %rd47;
	ld.global.u32 	%r137, [%rd48];
	or.b32  	%r657, %r653, %r655;
	mul.wide.u32 	%rd49, %r657, 4;
	add.s64 	%rd50, %rd1, %rd49;
	ld.global.u32 	%r145, [%rd50];
	or.b32  	%r658, %r650, 2;
	or.b32  	%r659, %r651, %r658;
	mul.wide.u32 	%rd51, %r659, 4;
	add.s64 	%rd52, %rd1, %rd51;
	ld.global.u32 	%r152, [%rd52];
	or.b32  	%r660, %r653, %r658;
	mul.wide.u32 	%rd53, %r660, 4;
	add.s64 	%rd54, %rd1, %rd53;
	ld.global.u32 	%r160, [%rd54];
	or.b32  	%r661, %r650, 3;
	or.b32  	%r662, %r651, %r661;
	mul.wide.u32 	%rd55, %r662, 4;
	add.s64 	%rd56, %rd1, %rd55;
	ld.global.u32 	%r153, [%rd56];
	or.b32  	%r663, %r653, %r661;
	mul.wide.u32 	%rd57, %r663, 4;
	add.s64 	%rd58, %rd1, %rd57;
	ld.global.u32 	%r161, [%rd58];
	or.b32  	%r664, %r650, 4;
	or.b32  	%r665, %r651, %r664;
	mul.wide.u32 	%rd59, %r665, 4;
	add.s64 	%rd60, %rd1, %rd59;
	ld.global.u32 	%r168, [%rd60];
	or.b32  	%r666, %r653, %r664;
	mul.wide.u32 	%rd61, %r666, 4;
	add.s64 	%rd62, %rd1, %rd61;
	ld.global.u32 	%r176, [%rd62];
	or.b32  	%r667, %r650, 5;
	or.b32  	%r668, %r651, %r667;
	mul.wide.u32 	%rd63, %r668, 4;
	add.s64 	%rd64, %rd1, %rd63;
	ld.global.u32 	%r169, [%rd64];
	or.b32  	%r669, %r653, %r667;
	mul.wide.u32 	%rd65, %r669, 4;
	add.s64 	%rd66, %rd1, %rd65;
	ld.global.u32 	%r177, [%rd66];
	or.b32  	%r670, %r650, 6;
	or.b32  	%r671, %r651, %r670;
	mul.wide.u32 	%rd67, %r671, 4;
	add.s64 	%rd68, %rd1, %rd67;
	ld.global.u32 	%r184, [%rd68];
	or.b32  	%r672, %r653, %r670;
	mul.wide.u32 	%rd69, %r672, 4;
	add.s64 	%rd70, %rd1, %rd69;
	ld.global.u32 	%r192, [%rd70];
	or.b32  	%r673, %r650, 7;
	or.b32  	%r674, %r651, %r673;
	mul.wide.u32 	%rd71, %r674, 4;
	add.s64 	%rd72, %rd1, %rd71;
	ld.global.u32 	%r185, [%rd72];
	or.b32  	%r675, %r653, %r673;
	mul.wide.u32 	%rd73, %r675, 4;
	add.s64 	%rd74, %rd1, %rd73;
	ld.global.u32 	%r193, [%rd74];
	or.b32  	%r676, %r650, 8;
	or.b32  	%r677, %r651, %r676;
	mul.wide.u32 	%rd75, %r677, 4;
	add.s64 	%rd76, %rd1, %rd75;
	ld.global.u32 	%r200, [%rd76];
	or.b32  	%r678, %r653, %r676;
	mul.wide.u32 	%rd77, %r678, 4;
	add.s64 	%rd78, %rd1, %rd77;
	ld.global.u32 	%r208, [%rd78];
	or.b32  	%r679, %r650, 9;
	or.b32  	%r680, %r651, %r679;
	mul.wide.u32 	%rd79, %r680, 4;
	add.s64 	%rd80, %rd1, %rd79;
	ld.global.u32 	%r201, [%rd80];
	or.b32  	%r681, %r653, %r679;
	mul.wide.u32 	%rd81, %r681, 4;
	add.s64 	%rd82, %rd1, %rd81;
	ld.global.u32 	%r209, [%rd82];
	or.b32  	%r682, %r650, 10;
	or.b32  	%r683, %r651, %r682;
	mul.wide.u32 	%rd83, %r683, 4;
	add.s64 	%rd84, %rd1, %rd83;
	ld.global.u32 	%r216, [%rd84];
	or.b32  	%r684, %r653, %r682;
	mul.wide.u32 	%rd85, %r684, 4;
	add.s64 	%rd86, %rd1, %rd85;
	ld.global.u32 	%r224, [%rd86];
	or.b32  	%r685, %r650, 11;
	or.b32  	%r686, %r651, %r685;
	mul.wide.u32 	%rd87, %r686, 4;
	add.s64 	%rd88, %rd1, %rd87;
	ld.global.u32 	%r217, [%rd88];
	or.b32  	%r687, %r653, %r685;
	mul.wide.u32 	%rd89, %r687, 4;
	add.s64 	%rd90, %rd1, %rd89;
	ld.global.u32 	%r225, [%rd90];
	or.b32  	%r688, %r650, 12;
	or.b32  	%r689, %r651, %r688;
	mul.wide.u32 	%rd91, %r689, 4;
	add.s64 	%rd92, %rd1, %rd91;
	ld.global.u32 	%r232, [%rd92];
	or.b32  	%r690, %r653, %r688;
	mul.wide.u32 	%rd93, %r690, 4;
	add.s64 	%rd94, %rd1, %rd93;
	ld.global.u32 	%r240, [%rd94];
	or.b32  	%r691, %r650, 13;
	or.b32  	%r692, %r651, %r691;
	mul.wide.u32 	%rd95, %r692, 4;
	add.s64 	%rd96, %rd1, %rd95;
	ld.global.u32 	%r233, [%rd96];
	or.b32  	%r693, %r653, %r691;
	mul.wide.u32 	%rd97, %r693, 4;
	add.s64 	%rd98, %rd1, %rd97;
	ld.global.u32 	%r241, [%rd98];
	or.b32  	%r694, %r650, 14;
	or.b32  	%r695, %r651, %r694;
	mul.wide.u32 	%rd99, %r695, 4;
	add.s64 	%rd100, %rd1, %rd99;
	ld.global.u32 	%r248, [%rd100];
	or.b32  	%r696, %r653, %r694;
	mul.wide.u32 	%rd101, %r696, 4;
	add.s64 	%rd102, %rd1, %rd101;
	ld.global.u32 	%r256, [%rd102];
	or.b32  	%r697, %r650, 15;
	or.b32  	%r698, %r651, %r697;
	mul.wide.u32 	%rd103, %r698, 4;
	add.s64 	%rd104, %rd1, %rd103;
	ld.global.u32 	%r249, [%rd104];
	or.b32  	%r699, %r653, %r697;
	mul.wide.u32 	%rd105, %r699, 4;
	add.s64 	%rd106, %rd1, %rd105;
	ld.global.u32 	%r257, [%rd106];
	or.b32  	%r700, %r650, 16;
	or.b32  	%r701, %r651, %r700;
	mul.wide.u32 	%rd107, %r701, 4;
	add.s64 	%rd108, %rd1, %rd107;
	ld.global.u32 	%r264, [%rd108];
	or.b32  	%r702, %r653, %r700;
	mul.wide.u32 	%rd109, %r702, 4;
	add.s64 	%rd110, %rd1, %rd109;
	ld.global.u32 	%r272, [%rd110];
	or.b32  	%r703, %r650, 17;
	or.b32  	%r704, %r651, %r703;
	mul.wide.u32 	%rd111, %r704, 4;
	add.s64 	%rd112, %rd1, %rd111;
	ld.global.u32 	%r265, [%rd112];
	or.b32  	%r705, %r653, %r703;
	mul.wide.u32 	%rd113, %r705, 4;
	add.s64 	%rd114, %rd1, %rd113;
	ld.global.u32 	%r273, [%rd114];
	or.b32  	%r706, %r650, 18;
	or.b32  	%r707, %r651, %r706;
	mul.wide.u32 	%rd115, %r707, 4;
	add.s64 	%rd116, %rd1, %rd115;
	ld.global.u32 	%r280, [%rd116];
	or.b32  	%r708, %r653, %r706;
	mul.wide.u32 	%rd117, %r708, 4;
	add.s64 	%rd118, %rd1, %rd117;
	ld.global.u32 	%r288, [%rd118];
	or.b32  	%r709, %r650, 19;
	or.b32  	%r710, %r651, %r709;
	mul.wide.u32 	%rd119, %r710, 4;
	add.s64 	%rd120, %rd1, %rd119;
	ld.global.u32 	%r281, [%rd120];
	or.b32  	%r711, %r653, %r709;
	mul.wide.u32 	%rd121, %r711, 4;
	add.s64 	%rd122, %rd1, %rd121;
	ld.global.u32 	%r289, [%rd122];
	or.b32  	%r712, %r650, 20;
	or.b32  	%r713, %r651, %r712;
	mul.wide.u32 	%rd123, %r713, 4;
	add.s64 	%rd124, %rd1, %rd123;
	ld.global.u32 	%r296, [%rd124];
	or.b32  	%r714, %r653, %r712;
	mul.wide.u32 	%rd125, %r714, 4;
	add.s64 	%rd126, %rd1, %rd125;
	ld.global.u32 	%r304, [%rd126];
	or.b32  	%r715, %r650, 21;
	or.b32  	%r716, %r651, %r715;
	mul.wide.u32 	%rd127, %r716, 4;
	add.s64 	%rd128, %rd1, %rd127;
	ld.global.u32 	%r297, [%rd128];
	or.b32  	%r717, %r653, %r715;
	mul.wide.u32 	%rd129, %r717, 4;
	add.s64 	%rd130, %rd1, %rd129;
	ld.global.u32 	%r305, [%rd130];
	or.b32  	%r718, %r650, 22;
	or.b32  	%r719, %r651, %r718;
	mul.wide.u32 	%rd131, %r719, 4;
	add.s64 	%rd132, %rd1, %rd131;
	ld.global.u32 	%r312, [%rd132];
	or.b32  	%r720, %r653, %r718;
	mul.wide.u32 	%rd133, %r720, 4;
	add.s64 	%rd134, %rd1, %rd133;
	ld.global.u32 	%r320, [%rd134];
	or.b32  	%r721, %r650, 23;
	or.b32  	%r722, %r651, %r721;
	mul.wide.u32 	%rd135, %r722, 4;
	add.s64 	%rd136, %rd1, %rd135;
	ld.global.u32 	%r313, [%rd136];
	or.b32  	%r723, %r653, %r721;
	mul.wide.u32 	%rd137, %r723, 4;
	add.s64 	%rd138, %rd1, %rd137;
	ld.global.u32 	%r321, [%rd138];
	or.b32  	%r724, %r650, 24;
	or.b32  	%r725, %r651, %r724;
	mul.wide.u32 	%rd139, %r725, 4;
	add.s64 	%rd140, %rd1, %rd139;
	ld.global.u32 	%r328, [%rd140];
	or.b32  	%r726, %r653, %r724;
	mul.wide.u32 	%rd141, %r726, 4;
	add.s64 	%rd142, %rd1, %rd141;
	ld.global.u32 	%r336, [%rd142];
	or.b32  	%r727, %r650, 25;
	or.b32  	%r728, %r651, %r727;
	mul.wide.u32 	%rd143, %r728, 4;
	add.s64 	%rd144, %rd1, %rd143;
	ld.global.u32 	%r329, [%rd144];
	or.b32  	%r729, %r653, %r727;
	mul.wide.u32 	%rd145, %r729, 4;
	add.s64 	%rd146, %rd1, %rd145;
	ld.global.u32 	%r337, [%rd146];
	or.b32  	%r730, %r650, 26;
	or.b32  	%r731, %r651, %r730;
	mul.wide.u32 	%rd147, %r731, 4;
	add.s64 	%rd148, %rd1, %rd147;
	ld.global.u32 	%r344, [%rd148];
	or.b32  	%r732, %r653, %r730;
	mul.wide.u32 	%rd149, %r732, 4;
	add.s64 	%rd150, %rd1, %rd149;
	ld.global.u32 	%r352, [%rd150];
	or.b32  	%r733, %r650, 27;
	or.b32  	%r734, %r651, %r733;
	mul.wide.u32 	%rd151, %r734, 4;
	add.s64 	%rd152, %rd1, %rd151;
	ld.global.u32 	%r345, [%rd152];
	or.b32  	%r735, %r653, %r733;
	mul.wide.u32 	%rd153, %r735, 4;
	add.s64 	%rd154, %rd1, %rd153;
	ld.global.u32 	%r353, [%rd154];
	or.b32  	%r736, %r650, 28;
	or.b32  	%r737, %r651, %r736;
	mul.wide.u32 	%rd155, %r737, 4;
	add.s64 	%rd156, %rd1, %rd155;
	ld.global.u32 	%r360, [%rd156];
	or.b32  	%r738, %r653, %r736;
	mul.wide.u32 	%rd157, %r738, 4;
	add.s64 	%rd158, %rd1, %rd157;
	ld.global.u32 	%r368, [%rd158];
	or.b32  	%r739, %r650, 29;
	or.b32  	%r740, %r651, %r739;
	mul.wide.u32 	%rd159, %r740, 4;
	add.s64 	%rd160, %rd1, %rd159;
	ld.global.u32 	%r361, [%rd160];
	or.b32  	%r741, %r653, %r739;
	mul.wide.u32 	%rd161, %r741, 4;
	add.s64 	%rd162, %rd1, %rd161;
	ld.global.u32 	%r369, [%rd162];
	or.b32  	%r742, %r650, 30;
	or.b32  	%r743, %r651, %r742;
	mul.wide.u32 	%rd163, %r743, 4;
	add.s64 	%rd164, %rd1, %rd163;
	ld.global.u32 	%r376, [%rd164];
	or.b32  	%r744, %r653, %r742;
	mul.wide.u32 	%rd165, %r744, 4;
	add.s64 	%rd166, %rd1, %rd165;
	ld.global.u32 	%r384, [%rd166];
	or.b32  	%r745, %r650, 31;
	or.b32  	%r746, %r651, %r745;
	mul.wide.u32 	%rd167, %r746, 4;
	add.s64 	%rd168, %rd1, %rd167;
	ld.global.u32 	%r377, [%rd168];
	or.b32  	%r747, %r653, %r745;
	mul.wide.u32 	%rd169, %r747, 4;
	add.s64 	%rd170, %rd1, %rd169;
	ld.global.u32 	%r385, [%rd170];
	mov.u32 	%r134, 21520;
	// begin inline asm
	prmt.b32 %r388, %r136, %r137, %r134;
	// end inline asm
	mov.u32 	%r138, 30258;
	// begin inline asm
	prmt.b32 %r389, %r136, %r137, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r396, %r144, %r145, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r397, %r144, %r145, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r404, %r152, %r153, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r405, %r152, %r153, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r412, %r160, %r161, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r413, %r160, %r161, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r420, %r168, %r169, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r421, %r168, %r169, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r428, %r176, %r177, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r429, %r176, %r177, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r436, %r184, %r185, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r437, %r184, %r185, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r444, %r192, %r193, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r445, %r192, %r193, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r452, %r200, %r201, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r453, %r200, %r201, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r460, %r208, %r209, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r461, %r208, %r209, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r468, %r216, %r217, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r469, %r216, %r217, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r476, %r224, %r225, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r477, %r224, %r225, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r484, %r232, %r233, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r485, %r232, %r233, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r492, %r240, %r241, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r493, %r240, %r241, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r500, %r248, %r249, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r501, %r248, %r249, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r508, %r256, %r257, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r509, %r256, %r257, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r516, %r264, %r265, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r517, %r264, %r265, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r524, %r272, %r273, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r525, %r272, %r273, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r532, %r280, %r281, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r533, %r280, %r281, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r540, %r288, %r289, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r541, %r288, %r289, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r548, %r296, %r297, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r549, %r296, %r297, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r556, %r304, %r305, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r557, %r304, %r305, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r564, %r312, %r313, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r565, %r312, %r313, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r572, %r320, %r321, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r573, %r320, %r321, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r580, %r328, %r329, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r581, %r328, %r329, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r588, %r336, %r337, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r589, %r336, %r337, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r596, %r344, %r345, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r597, %r344, %r345, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r604, %r352, %r353, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r605, %r352, %r353, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r612, %r360, %r361, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r613, %r360, %r361, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r620, %r368, %r369, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r621, %r368, %r369, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r628, %r376, %r377, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r629, %r376, %r377, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r636, %r384, %r385, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r637, %r384, %r385, %r138;
	// end inline asm
	mov.u32 	%r390, 25152;
	// begin inline asm
	prmt.b32 %r1133, %r388, %r389, %r390;
	// end inline asm
	mov.u32 	%r394, 29521;
	// begin inline asm
	prmt.b32 %r1139, %r388, %r389, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1651, %r396, %r397, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1657, %r396, %r397, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1165, %r404, %r405, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1171, %r404, %r405, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1683, %r412, %r413, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1689, %r412, %r413, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1197, %r420, %r421, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1203, %r420, %r421, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1715, %r428, %r429, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1721, %r428, %r429, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1229, %r436, %r437, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1235, %r436, %r437, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1747, %r444, %r445, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1753, %r444, %r445, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1261, %r452, %r453, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1267, %r452, %r453, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1779, %r460, %r461, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1785, %r460, %r461, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1293, %r468, %r469, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1299, %r468, %r469, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1811, %r476, %r477, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1817, %r476, %r477, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1325, %r484, %r485, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1331, %r484, %r485, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1843, %r492, %r493, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1849, %r492, %r493, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1357, %r500, %r501, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1363, %r500, %r501, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1875, %r508, %r509, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1881, %r508, %r509, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1389, %r516, %r517, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1395, %r516, %r517, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1907, %r524, %r525, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1913, %r524, %r525, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1421, %r532, %r533, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1427, %r532, %r533, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1939, %r540, %r541, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1945, %r540, %r541, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1453, %r548, %r549, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1459, %r548, %r549, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1971, %r556, %r557, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1977, %r556, %r557, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1485, %r564, %r565, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1491, %r564, %r565, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2003, %r572, %r573, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2009, %r572, %r573, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1517, %r580, %r581, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1523, %r580, %r581, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2035, %r588, %r589, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2041, %r588, %r589, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1549, %r596, %r597, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1555, %r596, %r597, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2067, %r604, %r605, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2073, %r604, %r605, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1581, %r612, %r613, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1587, %r612, %r613, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2099, %r620, %r621, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2105, %r620, %r621, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1613, %r628, %r629, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1619, %r628, %r629, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2131, %r636, %r637, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2137, %r636, %r637, %r394;
	// end inline asm
	shl.b32 	%r73, %r114, 13;
	shl.b32 	%r748, %r4, 8;
	shl.b32 	%r749, %r3, 2;
	and.b32  	%r750, %r749, 28;
	or.b32  	%r751, %r750, %r2;
	or.b32  	%r74, %r748, %r751;
	or.b32  	%r75, %r74, 128;
	or.b32  	%r76, %r751, 128;
	or.b32  	%r77, %r751, 129;
	or.b32  	%r78, %r751, 130;
	or.b32  	%r79, %r751, 131;
	shl.b32 	%r752, %r1, 6;
	shl.b32 	%r753, %r3, 4;
	and.b32  	%r754, %r753, 48;
	or.b32  	%r80, %r754, %r752;
	shr.u32 	%r81, %r3, 2;
	shl.b32 	%r755, %r3, 1;
	and.b32  	%r82, %r755, 6;
	mul.lo.s32 	%r83, %r1, 640;
	or.b32  	%r84, %r83, %r81;
	or.b32  	%r85, %r84, 8;
	and.b32  	%r756, %r3, 7;
	or.b32  	%r757, %r6, 640;
	or.b32  	%r758, %r6, 1280;
	or.b32  	%r759, %r6, 1920;
	shl.b32 	%r761, %r121, %r8;
	setp.gt.u32 	%p15, %r8, 31;
	selp.b32 	%r86, 0, %r761, %p15;
	min.u32 	%r87, %r7, 31;
	and.b32  	%r88, %r3, 1;
	and.b32  	%r89, %r3, 2;
	and.b32  	%r90, %r3, 4;
	shl.b32 	%r762, %r3, 3;
	and.b32  	%r763, %r762, 32;
	and.b32  	%r91, %r648, 64;
	shl.b32 	%r764, %r4, 11;
	shl.b32 	%r765, %r1, 18;
	shl.b32 	%r766, %r3, 13;
	and.b32  	%r767, %r766, 196608;
	or.b32  	%r768, %r767, %r765;
	or.b32  	%r92, %r768, %r764;
	mul.lo.s32 	%r769, %r5, 257;
	add.s32 	%r770, %r751, %r769;
	mul.wide.u32 	%rd171, %r770, 4;
	mov.u64 	%rd172, shmem;
	add.s64 	%rd9, %rd172, %rd171;
	cvt.u64.u32 	%rd173, %r769;
	cvt.u64.u32 	%rd10, %r751;
	add.s64 	%rd174, %rd10, %rd173;
	shl.b64 	%rd175, %rd174, 2;
	add.s64 	%rd11, %rd172, %rd175;
	add.s32 	%r771, %r769, %r76;
	mul.wide.u32 	%rd176, %r771, 4;
	add.s64 	%rd12, %rd172, %rd176;
	add.s32 	%r772, %r769, %r77;
	mul.wide.u32 	%rd177, %r772, 4;
	add.s64 	%rd13, %rd172, %rd177;
	add.s32 	%r773, %r769, %r78;
	mul.wide.u32 	%rd178, %r773, 4;
	add.s64 	%rd14, %rd172, %rd178;
	add.s32 	%r774, %r769, %r79;
	mul.wide.u32 	%rd179, %r774, 4;
	add.s64 	%rd15, %rd172, %rd179;
	mul.lo.s32 	%r775, %r756, 20;
	add.s32 	%r776, %r775, %r6;
	mul.wide.u32 	%rd180, %r776, 4;
	add.s64 	%rd181, %rd172, 32896;
	add.s64 	%rd16, %rd181, %rd180;
	add.s32 	%r777, %r757, %r775;
	mul.wide.u32 	%rd182, %r777, 4;
	add.s64 	%rd17, %rd181, %rd182;
	add.s32 	%r778, %r758, %r775;
	mul.wide.u32 	%rd183, %r778, 4;
	add.s64 	%rd18, %rd181, %rd183;
	add.s32 	%r779, %r759, %r775;
	mul.wide.u32 	%rd184, %r779, 4;
	add.s64 	%rd19, %rd181, %rd184;
	add.s32 	%r780, %r775, 160;
	add.s32 	%r781, %r780, %r6;
	mul.wide.u32 	%rd185, %r781, 4;
	add.s64 	%rd20, %rd181, %rd185;
	add.s32 	%r782, %r757, %r780;
	mul.wide.u32 	%rd186, %r782, 4;
	add.s64 	%rd21, %rd181, %rd186;
	add.s32 	%r783, %r758, %r780;
	mul.wide.u32 	%rd187, %r783, 4;
	add.s64 	%rd22, %rd181, %rd187;
	add.s32 	%r784, %r759, %r780;
	mul.wide.u32 	%rd188, %r784, 4;
	add.s64 	%rd23, %rd181, %rd188;
	add.s32 	%r785, %r775, 320;
	add.s32 	%r786, %r785, %r6;
	mul.wide.u32 	%rd189, %r786, 4;
	add.s64 	%rd24, %rd181, %rd189;
	add.s32 	%r787, %r757, %r785;
	mul.wide.u32 	%rd190, %r787, 4;
	add.s64 	%rd25, %rd181, %rd190;
	add.s32 	%r788, %r758, %r785;
	mul.wide.u32 	%rd191, %r788, 4;
	add.s64 	%rd26, %rd181, %rd191;
	add.s32 	%r789, %r759, %r785;
	mul.wide.u32 	%rd192, %r789, 4;
	add.s64 	%rd27, %rd181, %rd192;
	or.b32  	%r790, %r3, 24;
	mul.lo.s32 	%r791, %r790, 20;
	add.s32 	%r792, %r791, %r6;
	mul.wide.u32 	%rd193, %r792, 4;
	add.s64 	%rd28, %rd181, %rd193;
	add.s32 	%r793, %r757, %r791;
	mul.wide.u32 	%rd194, %r793, 4;
	add.s64 	%rd29, %rd181, %rd194;
	add.s32 	%r794, %r758, %r791;
	mul.wide.u32 	%rd195, %r794, 4;
	add.s64 	%rd30, %rd181, %rd195;
	add.s32 	%r795, %r759, %r791;
	mul.wide.u32 	%rd196, %r795, 4;
	add.s64 	%rd31, %rd181, %rd196;
	and.b32  	%r796, %r753, 16;
	or.b32  	%r93, %r763, %r796;
	mov.pred 	%p69, 0;
$L__BB0_13:                             // %L10007
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_15 Depth 2
                                        //       Child Loop BB0_16 Depth 3
	add.s32 	%r797, %r2441, %r114;
	setp.ge.s32 	%p16, %r797, %r115;
	@%p16 bra 	$L__BB0_19;
// %bb.14:                              // %L10015.preheader
                                        //   in Loop: Header=BB0_13 Depth=1
	mov.u32 	%r1135, 0;
	mov.u32 	%r2442, %r1135;
	mov.u32 	%r2443, %r1135;
	mov.u32 	%r2444, %r1135;
	mov.u32 	%r2445, %r1135;
	mov.u32 	%r2446, %r1135;
	mov.u32 	%r2447, %r1135;
	mov.u32 	%r2448, %r1135;
$L__BB0_15:                             // %L10015
                                        //   Parent Loop BB0_13 Depth=1
                                        // =>  This Loop Header: Depth=2
                                        //       Child Loop BB0_16 Depth 3
	cvt.u32.u64 	%r800, %rd10;
	add.s32 	%r801, %r2442, %r2441;
	or.b32  	%r802, %r801, %r5;
	shl.b32 	%r803, %r802, 13;
	and.b32  	%r804, %r803, 66871296;
	or.b32  	%r805, %r74, %r804;
	add.s32 	%r806, %r805, %r73;
	shr.s32 	%r807, %r806, 31;
	shr.u32 	%r808, %r807, 6;
	add.s32 	%r809, %r806, %r808;
	shr.s32 	%r810, %r809, 26;
	setp.lt.s32 	%p17, %r806, 0;
	and.b32  	%r811, %r809, -67108864;
	setp.ne.s32 	%p18, %r811, %r806;
	and.pred  	%p19, %p17, %p18;
	selp.u32 	%r812, 1, 0, %p19;
	sub.s32 	%r813, %r812, %r810;
	shl.b32 	%r814, %r813, 26;
	or.b32  	%r815, %r806, 1;
	add.s32 	%r816, %r815, %r814;
	mul.wide.s32 	%rd197, %r816, 4;
	add.s64 	%rd198, %rd2, %rd197;
	ld.global.v4.u32 	{%r817, %r818, %r819, %r820}, [%rd198+-4];
	or.b32  	%r821, %r75, %r804;
	add.s32 	%r822, %r821, %r73;
	shr.s32 	%r823, %r822, 31;
	shr.u32 	%r824, %r823, 6;
	add.s32 	%r825, %r822, %r824;
	shr.u32 	%r826, %r825, 26;
	shr.u32 	%r827, %r822, 31;
	sub.s32 	%r828, %r827, %r826;
	shl.b32 	%r829, %r828, 26;
	or.b32  	%r830, %r822, 1;
	add.s32 	%r831, %r830, %r829;
	mul.wide.s32 	%rd199, %r831, 4;
	add.s64 	%rd200, %rd2, %rd199;
	ld.global.v4.u32 	{%r832, %r833, %r834, %r835}, [%rd200+-4];
	or.b32  	%r836, %r802, 4;
	shl.b32 	%r837, %r836, 13;
	and.b32  	%r838, %r837, 66904064;
	or.b32  	%r839, %r74, %r838;
	add.s32 	%r840, %r839, %r73;
	shr.s32 	%r841, %r840, 31;
	shr.u32 	%r842, %r841, 6;
	add.s32 	%r843, %r840, %r842;
	shr.s32 	%r844, %r843, 26;
	setp.lt.s32 	%p20, %r840, 0;
	and.b32  	%r845, %r843, -67108864;
	setp.ne.s32 	%p21, %r845, %r840;
	and.pred  	%p22, %p20, %p21;
	selp.u32 	%r846, 1, 0, %p22;
	sub.s32 	%r847, %r846, %r844;
	shl.b32 	%r848, %r847, 26;
	or.b32  	%r849, %r840, 1;
	add.s32 	%r850, %r849, %r848;
	mul.wide.s32 	%rd201, %r850, 4;
	add.s64 	%rd202, %rd2, %rd201;
	ld.global.v4.u32 	{%r851, %r852, %r853, %r854}, [%rd202+-4];
	or.b32  	%r855, %r75, %r838;
	add.s32 	%r856, %r855, %r73;
	shr.s32 	%r857, %r856, 31;
	shr.u32 	%r858, %r857, 6;
	add.s32 	%r859, %r856, %r858;
	shr.u32 	%r860, %r859, 26;
	shr.u32 	%r861, %r856, 31;
	sub.s32 	%r862, %r861, %r860;
	shl.b32 	%r863, %r862, 26;
	or.b32  	%r864, %r856, 1;
	add.s32 	%r865, %r864, %r863;
	mul.wide.s32 	%rd203, %r865, 4;
	add.s64 	%rd204, %rd2, %rd203;
	ld.global.v4.u32 	{%r866, %r867, %r868, %r869}, [%rd204+-4];
	or.b32  	%r870, %r802, 8;
	shl.b32 	%r871, %r870, 13;
	and.b32  	%r872, %r871, 66936832;
	or.b32  	%r873, %r74, %r872;
	add.s32 	%r874, %r873, %r73;
	shr.s32 	%r875, %r874, 31;
	shr.u32 	%r876, %r875, 6;
	add.s32 	%r877, %r874, %r876;
	shr.s32 	%r878, %r877, 26;
	setp.lt.s32 	%p23, %r874, 0;
	and.b32  	%r879, %r877, -67108864;
	setp.ne.s32 	%p24, %r879, %r874;
	and.pred  	%p25, %p23, %p24;
	selp.u32 	%r880, 1, 0, %p25;
	sub.s32 	%r881, %r880, %r878;
	shl.b32 	%r882, %r881, 26;
	or.b32  	%r883, %r874, 1;
	add.s32 	%r884, %r883, %r882;
	mul.wide.s32 	%rd205, %r884, 4;
	add.s64 	%rd206, %rd2, %rd205;
	ld.global.v4.u32 	{%r885, %r886, %r887, %r888}, [%rd206+-4];
	or.b32  	%r889, %r75, %r872;
	add.s32 	%r890, %r889, %r73;
	shr.s32 	%r891, %r890, 31;
	shr.u32 	%r892, %r891, 6;
	add.s32 	%r893, %r890, %r892;
	shr.u32 	%r894, %r893, 26;
	shr.u32 	%r895, %r890, 31;
	sub.s32 	%r896, %r895, %r894;
	shl.b32 	%r897, %r896, 26;
	or.b32  	%r898, %r890, 1;
	add.s32 	%r899, %r898, %r897;
	mul.wide.s32 	%rd207, %r899, 4;
	add.s64 	%rd208, %rd2, %rd207;
	ld.global.v4.u32 	{%r900, %r901, %r902, %r903}, [%rd208+-4];
	or.b32  	%r904, %r802, 12;
	shl.b32 	%r905, %r904, 13;
	and.b32  	%r906, %r905, 66969600;
	or.b32  	%r907, %r74, %r906;
	add.s32 	%r908, %r907, %r73;
	shr.s32 	%r909, %r908, 31;
	shr.u32 	%r910, %r909, 6;
	add.s32 	%r911, %r908, %r910;
	shr.s32 	%r912, %r911, 26;
	setp.lt.s32 	%p26, %r908, 0;
	and.b32  	%r913, %r911, -67108864;
	setp.ne.s32 	%p27, %r913, %r908;
	and.pred  	%p28, %p26, %p27;
	selp.u32 	%r914, 1, 0, %p28;
	sub.s32 	%r915, %r914, %r912;
	shl.b32 	%r916, %r915, 26;
	or.b32  	%r917, %r908, 1;
	add.s32 	%r918, %r917, %r916;
	mul.wide.s32 	%rd209, %r918, 4;
	add.s64 	%rd210, %rd2, %rd209;
	ld.global.v4.u32 	{%r919, %r920, %r921, %r922}, [%rd210+-4];
	or.b32  	%r923, %r75, %r906;
	add.s32 	%r924, %r923, %r73;
	shr.s32 	%r925, %r924, 31;
	shr.u32 	%r926, %r925, 6;
	add.s32 	%r927, %r924, %r926;
	shr.u32 	%r928, %r927, 26;
	shr.u32 	%r929, %r924, 31;
	sub.s32 	%r930, %r929, %r928;
	shl.b32 	%r931, %r930, 26;
	or.b32  	%r932, %r924, 1;
	add.s32 	%r933, %r932, %r931;
	mul.wide.s32 	%rd211, %r933, 4;
	add.s64 	%rd212, %rd2, %rd211;
	ld.global.v4.u32 	{%r934, %r935, %r936, %r937}, [%rd212+-4];
	or.b32  	%r938, %r802, 16;
	shl.b32 	%r939, %r938, 13;
	and.b32  	%r940, %r939, 67002368;
	or.b32  	%r941, %r74, %r940;
	add.s32 	%r942, %r941, %r73;
	shr.s32 	%r943, %r942, 31;
	shr.u32 	%r944, %r943, 6;
	add.s32 	%r945, %r942, %r944;
	shr.s32 	%r946, %r945, 26;
	setp.lt.s32 	%p29, %r942, 0;
	and.b32  	%r947, %r945, -67108864;
	setp.ne.s32 	%p30, %r947, %r942;
	and.pred  	%p31, %p29, %p30;
	selp.u32 	%r948, 1, 0, %p31;
	sub.s32 	%r949, %r948, %r946;
	shl.b32 	%r950, %r949, 26;
	or.b32  	%r951, %r942, 1;
	add.s32 	%r952, %r951, %r950;
	mul.wide.s32 	%rd213, %r952, 4;
	add.s64 	%rd214, %rd2, %rd213;
	ld.global.v4.u32 	{%r953, %r954, %r955, %r956}, [%rd214+-4];
	or.b32  	%r957, %r75, %r940;
	add.s32 	%r958, %r957, %r73;
	shr.s32 	%r959, %r958, 31;
	shr.u32 	%r960, %r959, 6;
	add.s32 	%r961, %r958, %r960;
	shr.u32 	%r962, %r961, 26;
	shr.u32 	%r963, %r958, 31;
	sub.s32 	%r964, %r963, %r962;
	shl.b32 	%r965, %r964, 26;
	or.b32  	%r966, %r958, 1;
	add.s32 	%r967, %r966, %r965;
	mul.wide.s32 	%rd215, %r967, 4;
	add.s64 	%rd216, %rd2, %rd215;
	ld.global.v4.u32 	{%r968, %r969, %r970, %r971}, [%rd216+-4];
	or.b32  	%r972, %r802, 20;
	shl.b32 	%r973, %r972, 13;
	and.b32  	%r974, %r973, 67035136;
	or.b32  	%r975, %r74, %r974;
	add.s32 	%r976, %r975, %r73;
	shr.s32 	%r977, %r976, 31;
	shr.u32 	%r978, %r977, 6;
	add.s32 	%r979, %r976, %r978;
	shr.s32 	%r980, %r979, 26;
	setp.lt.s32 	%p32, %r976, 0;
	and.b32  	%r981, %r979, -67108864;
	setp.ne.s32 	%p33, %r981, %r976;
	and.pred  	%p34, %p32, %p33;
	selp.u32 	%r982, 1, 0, %p34;
	sub.s32 	%r983, %r982, %r980;
	shl.b32 	%r984, %r983, 26;
	or.b32  	%r985, %r976, 1;
	add.s32 	%r986, %r985, %r984;
	mul.wide.s32 	%rd217, %r986, 4;
	add.s64 	%rd218, %rd2, %rd217;
	ld.global.v4.u32 	{%r987, %r988, %r989, %r990}, [%rd218+-4];
	or.b32  	%r991, %r75, %r974;
	add.s32 	%r992, %r991, %r73;
	shr.s32 	%r993, %r992, 31;
	shr.u32 	%r994, %r993, 6;
	add.s32 	%r995, %r992, %r994;
	shr.u32 	%r996, %r995, 26;
	shr.u32 	%r997, %r992, 31;
	sub.s32 	%r998, %r997, %r996;
	shl.b32 	%r999, %r998, 26;
	or.b32  	%r1000, %r992, 1;
	add.s32 	%r1001, %r1000, %r999;
	mul.wide.s32 	%rd219, %r1001, 4;
	add.s64 	%rd220, %rd2, %rd219;
	ld.global.v4.u32 	{%r1002, %r1003, %r1004, %r1005}, [%rd220+-4];
	or.b32  	%r1006, %r802, 24;
	shl.b32 	%r1007, %r1006, 13;
	and.b32  	%r1008, %r1007, 67067904;
	or.b32  	%r1009, %r74, %r1008;
	add.s32 	%r1010, %r1009, %r73;
	shr.s32 	%r1011, %r1010, 31;
	shr.u32 	%r1012, %r1011, 6;
	add.s32 	%r1013, %r1010, %r1012;
	shr.s32 	%r1014, %r1013, 26;
	setp.lt.s32 	%p35, %r1010, 0;
	and.b32  	%r1015, %r1013, -67108864;
	setp.ne.s32 	%p36, %r1015, %r1010;
	and.pred  	%p37, %p35, %p36;
	selp.u32 	%r1016, 1, 0, %p37;
	sub.s32 	%r1017, %r1016, %r1014;
	shl.b32 	%r1018, %r1017, 26;
	or.b32  	%r1019, %r1010, 1;
	add.s32 	%r1020, %r1019, %r1018;
	mul.wide.s32 	%rd221, %r1020, 4;
	add.s64 	%rd222, %rd2, %rd221;
	ld.global.v4.u32 	{%r1021, %r1022, %r1023, %r1024}, [%rd222+-4];
	or.b32  	%r1025, %r75, %r1008;
	add.s32 	%r1026, %r1025, %r73;
	shr.s32 	%r1027, %r1026, 31;
	shr.u32 	%r1028, %r1027, 6;
	add.s32 	%r1029, %r1026, %r1028;
	shr.u32 	%r1030, %r1029, 26;
	shr.u32 	%r1031, %r1026, 31;
	sub.s32 	%r1032, %r1031, %r1030;
	shl.b32 	%r1033, %r1032, 26;
	or.b32  	%r1034, %r1026, 1;
	add.s32 	%r1035, %r1034, %r1033;
	mul.wide.s32 	%rd223, %r1035, 4;
	add.s64 	%rd224, %rd2, %rd223;
	ld.global.v4.u32 	{%r1036, %r1037, %r1038, %r1039}, [%rd224+-4];
	or.b32  	%r1040, %r802, 28;
	shl.b32 	%r1041, %r1040, 13;
	and.b32  	%r1042, %r1041, 67100672;
	or.b32  	%r1043, %r74, %r1042;
	add.s32 	%r1044, %r1043, %r73;
	shr.s32 	%r1045, %r1044, 31;
	shr.u32 	%r1046, %r1045, 6;
	add.s32 	%r1047, %r1044, %r1046;
	shr.s32 	%r1048, %r1047, 26;
	setp.lt.s32 	%p38, %r1044, 0;
	and.b32  	%r1049, %r1047, -67108864;
	setp.ne.s32 	%p39, %r1049, %r1044;
	and.pred  	%p40, %p38, %p39;
	selp.u32 	%r1050, 1, 0, %p40;
	sub.s32 	%r1051, %r1050, %r1048;
	shl.b32 	%r1052, %r1051, 26;
	or.b32  	%r1053, %r1044, 1;
	add.s32 	%r1054, %r1053, %r1052;
	mul.wide.s32 	%rd225, %r1054, 4;
	add.s64 	%rd226, %rd2, %rd225;
	ld.global.v4.u32 	{%r1055, %r1056, %r1057, %r1058}, [%rd226+-4];
	or.b32  	%r1059, %r75, %r1042;
	add.s32 	%r1060, %r1059, %r73;
	shr.s32 	%r1061, %r1060, 31;
	shr.u32 	%r1062, %r1061, 6;
	add.s32 	%r1063, %r1060, %r1062;
	shr.u32 	%r1064, %r1063, 26;
	shr.u32 	%r1065, %r1060, 31;
	sub.s32 	%r1066, %r1065, %r1064;
	shl.b32 	%r1067, %r1066, 26;
	or.b32  	%r1068, %r1060, 1;
	add.s32 	%r1069, %r1068, %r1067;
	mul.wide.s32 	%rd227, %r1069, 4;
	add.s64 	%rd228, %rd2, %rd227;
	ld.global.v4.u32 	{%r1070, %r1071, %r1072, %r1073}, [%rd228+-4];
	st.shared.u32 	[%rd9], %r817;
	st.shared.u32 	[%rd11+4], %r818;
	st.shared.u32 	[%rd11+8], %r819;
	st.shared.u32 	[%rd11+12], %r820;
	st.shared.u32 	[%rd12], %r832;
	st.shared.u32 	[%rd13], %r833;
	st.shared.u32 	[%rd14], %r834;
	st.shared.u32 	[%rd15], %r835;
	and.b32  	%r1074, %r836, 7;
	mul.lo.s32 	%r1075, %r1074, 257;
	add.s32 	%r1076, %r800, %r1075;
	mul.wide.u32 	%rd229, %r1076, 4;
	add.s64 	%rd231, %rd172, %rd229;
	st.shared.u32 	[%rd231], %r851;
	cvt.u64.u32 	%rd232, %r1075;
	add.s64 	%rd233, %rd10, %rd232;
	shl.b64 	%rd234, %rd233, 2;
	add.s64 	%rd235, %rd172, %rd234;
	st.shared.u32 	[%rd235+4], %r852;
	st.shared.u32 	[%rd235+8], %r853;
	st.shared.u32 	[%rd235+12], %r854;
	add.s32 	%r1077, %r1075, %r76;
	mul.wide.u32 	%rd236, %r1077, 4;
	add.s64 	%rd237, %rd172, %rd236;
	st.shared.u32 	[%rd237], %r866;
	add.s32 	%r1078, %r1075, %r77;
	mul.wide.u32 	%rd238, %r1078, 4;
	add.s64 	%rd239, %rd172, %rd238;
	st.shared.u32 	[%rd239], %r867;
	add.s32 	%r1079, %r1075, %r78;
	mul.wide.u32 	%rd240, %r1079, 4;
	add.s64 	%rd241, %rd172, %rd240;
	st.shared.u32 	[%rd241], %r868;
	add.s32 	%r1080, %r1075, %r79;
	mul.wide.u32 	%rd242, %r1080, 4;
	add.s64 	%rd243, %rd172, %rd242;
	st.shared.u32 	[%rd243], %r869;
	and.b32  	%r1081, %r870, 11;
	mul.lo.s32 	%r1082, %r1081, 257;
	add.s32 	%r1083, %r800, %r1082;
	mul.wide.u32 	%rd244, %r1083, 4;
	add.s64 	%rd245, %rd172, %rd244;
	st.shared.u32 	[%rd245], %r885;
	cvt.u64.u32 	%rd246, %r1082;
	add.s64 	%rd247, %rd10, %rd246;
	shl.b64 	%rd248, %rd247, 2;
	add.s64 	%rd249, %rd172, %rd248;
	st.shared.u32 	[%rd249+4], %r886;
	st.shared.u32 	[%rd249+8], %r887;
	st.shared.u32 	[%rd249+12], %r888;
	add.s32 	%r1084, %r1082, %r76;
	mul.wide.u32 	%rd250, %r1084, 4;
	add.s64 	%rd251, %rd172, %rd250;
	st.shared.u32 	[%rd251], %r900;
	add.s32 	%r1085, %r1082, %r77;
	mul.wide.u32 	%rd252, %r1085, 4;
	add.s64 	%rd253, %rd172, %rd252;
	st.shared.u32 	[%rd253], %r901;
	add.s32 	%r1086, %r1082, %r78;
	mul.wide.u32 	%rd254, %r1086, 4;
	add.s64 	%rd255, %rd172, %rd254;
	st.shared.u32 	[%rd255], %r902;
	add.s32 	%r1087, %r1082, %r79;
	mul.wide.u32 	%rd256, %r1087, 4;
	add.s64 	%rd257, %rd172, %rd256;
	st.shared.u32 	[%rd257], %r903;
	and.b32  	%r1088, %r904, 15;
	mul.lo.s32 	%r1089, %r1088, 257;
	add.s32 	%r1090, %r800, %r1089;
	mul.wide.u32 	%rd258, %r1090, 4;
	add.s64 	%rd259, %rd172, %rd258;
	st.shared.u32 	[%rd259], %r919;
	cvt.u64.u32 	%rd260, %r1089;
	add.s64 	%rd261, %rd10, %rd260;
	shl.b64 	%rd262, %rd261, 2;
	add.s64 	%rd263, %rd172, %rd262;
	st.shared.u32 	[%rd263+4], %r920;
	st.shared.u32 	[%rd263+8], %r921;
	st.shared.u32 	[%rd263+12], %r922;
	add.s32 	%r1091, %r1089, %r76;
	mul.wide.u32 	%rd264, %r1091, 4;
	add.s64 	%rd265, %rd172, %rd264;
	st.shared.u32 	[%rd265], %r934;
	add.s32 	%r1092, %r1089, %r77;
	mul.wide.u32 	%rd266, %r1092, 4;
	add.s64 	%rd267, %rd172, %rd266;
	st.shared.u32 	[%rd267], %r935;
	add.s32 	%r1093, %r1089, %r78;
	mul.wide.u32 	%rd268, %r1093, 4;
	add.s64 	%rd269, %rd172, %rd268;
	st.shared.u32 	[%rd269], %r936;
	add.s32 	%r1094, %r1089, %r79;
	mul.wide.u32 	%rd270, %r1094, 4;
	add.s64 	%rd271, %rd172, %rd270;
	st.shared.u32 	[%rd271], %r937;
	and.b32  	%r1095, %r938, 19;
	mul.lo.s32 	%r1096, %r1095, 257;
	add.s32 	%r1097, %r800, %r1096;
	mul.wide.u32 	%rd272, %r1097, 4;
	add.s64 	%rd273, %rd172, %rd272;
	st.shared.u32 	[%rd273], %r953;
	cvt.u64.u32 	%rd274, %r1096;
	add.s64 	%rd275, %rd10, %rd274;
	shl.b64 	%rd276, %rd275, 2;
	add.s64 	%rd277, %rd172, %rd276;
	st.shared.u32 	[%rd277+4], %r954;
	st.shared.u32 	[%rd277+8], %r955;
	st.shared.u32 	[%rd277+12], %r956;
	add.s32 	%r1098, %r1096, %r76;
	mul.wide.u32 	%rd278, %r1098, 4;
	add.s64 	%rd279, %rd172, %rd278;
	st.shared.u32 	[%rd279], %r968;
	add.s32 	%r1099, %r1096, %r77;
	mul.wide.u32 	%rd280, %r1099, 4;
	add.s64 	%rd281, %rd172, %rd280;
	st.shared.u32 	[%rd281], %r969;
	add.s32 	%r1100, %r1096, %r78;
	mul.wide.u32 	%rd282, %r1100, 4;
	add.s64 	%rd283, %rd172, %rd282;
	st.shared.u32 	[%rd283], %r970;
	add.s32 	%r1101, %r1096, %r79;
	mul.wide.u32 	%rd284, %r1101, 4;
	add.s64 	%rd285, %rd172, %rd284;
	st.shared.u32 	[%rd285], %r971;
	and.b32  	%r1102, %r972, 23;
	mul.lo.s32 	%r1103, %r1102, 257;
	add.s32 	%r1104, %r800, %r1103;
	mul.wide.u32 	%rd286, %r1104, 4;
	add.s64 	%rd287, %rd172, %rd286;
	st.shared.u32 	[%rd287], %r987;
	cvt.u64.u32 	%rd288, %r1103;
	add.s64 	%rd289, %rd10, %rd288;
	shl.b64 	%rd290, %rd289, 2;
	add.s64 	%rd291, %rd172, %rd290;
	st.shared.u32 	[%rd291+4], %r988;
	st.shared.u32 	[%rd291+8], %r989;
	st.shared.u32 	[%rd291+12], %r990;
	add.s32 	%r1105, %r1103, %r76;
	mul.wide.u32 	%rd292, %r1105, 4;
	add.s64 	%rd293, %rd172, %rd292;
	st.shared.u32 	[%rd293], %r1002;
	add.s32 	%r1106, %r1103, %r77;
	mul.wide.u32 	%rd294, %r1106, 4;
	add.s64 	%rd295, %rd172, %rd294;
	st.shared.u32 	[%rd295], %r1003;
	add.s32 	%r1107, %r1103, %r78;
	mul.wide.u32 	%rd296, %r1107, 4;
	add.s64 	%rd297, %rd172, %rd296;
	st.shared.u32 	[%rd297], %r1004;
	add.s32 	%r1108, %r1103, %r79;
	mul.wide.u32 	%rd298, %r1108, 4;
	add.s64 	%rd299, %rd172, %rd298;
	st.shared.u32 	[%rd299], %r1005;
	and.b32  	%r1109, %r1006, 27;
	mul.lo.s32 	%r1110, %r1109, 257;
	add.s32 	%r1111, %r800, %r1110;
	mul.wide.u32 	%rd300, %r1111, 4;
	add.s64 	%rd301, %rd172, %rd300;
	st.shared.u32 	[%rd301], %r1021;
	cvt.u64.u32 	%rd302, %r1110;
	add.s64 	%rd303, %rd10, %rd302;
	shl.b64 	%rd304, %rd303, 2;
	add.s64 	%rd305, %rd172, %rd304;
	st.shared.u32 	[%rd305+4], %r1022;
	st.shared.u32 	[%rd305+8], %r1023;
	st.shared.u32 	[%rd305+12], %r1024;
	add.s32 	%r1112, %r1110, %r76;
	mul.wide.u32 	%rd306, %r1112, 4;
	add.s64 	%rd307, %rd172, %rd306;
	st.shared.u32 	[%rd307], %r1036;
	add.s32 	%r1113, %r1110, %r77;
	mul.wide.u32 	%rd308, %r1113, 4;
	add.s64 	%rd309, %rd172, %rd308;
	st.shared.u32 	[%rd309], %r1037;
	add.s32 	%r1114, %r1110, %r78;
	mul.wide.u32 	%rd310, %r1114, 4;
	add.s64 	%rd311, %rd172, %rd310;
	st.shared.u32 	[%rd311], %r1038;
	add.s32 	%r1115, %r1110, %r79;
	mul.wide.u32 	%rd312, %r1115, 4;
	add.s64 	%rd313, %rd172, %rd312;
	st.shared.u32 	[%rd313], %r1039;
	and.b32  	%r1116, %r1040, 31;
	mul.lo.s32 	%r1117, %r1116, 257;
	add.s32 	%r1118, %r800, %r1117;
	mul.wide.u32 	%rd314, %r1118, 4;
	add.s64 	%rd315, %rd172, %rd314;
	st.shared.u32 	[%rd315], %r1055;
	cvt.u64.u32 	%rd316, %r1117;
	add.s64 	%rd317, %rd10, %rd316;
	shl.b64 	%rd318, %rd317, 2;
	add.s64 	%rd319, %rd172, %rd318;
	st.shared.u32 	[%rd319+4], %r1056;
	st.shared.u32 	[%rd319+8], %r1057;
	st.shared.u32 	[%rd319+12], %r1058;
	add.s32 	%r1119, %r1117, %r76;
	mul.wide.u32 	%rd320, %r1119, 4;
	add.s64 	%rd321, %rd172, %rd320;
	st.shared.u32 	[%rd321], %r1070;
	add.s32 	%r1120, %r1117, %r77;
	mul.wide.u32 	%rd322, %r1120, 4;
	add.s64 	%rd323, %rd172, %rd322;
	st.shared.u32 	[%rd323], %r1071;
	add.s32 	%r1121, %r1117, %r78;
	mul.wide.u32 	%rd324, %r1121, 4;
	add.s64 	%rd325, %rd172, %rd324;
	st.shared.u32 	[%rd325], %r1072;
	add.s32 	%r1122, %r1117, %r79;
	mul.wide.u32 	%rd326, %r1122, 4;
	add.s64 	%rd327, %rd172, %rd326;
	st.shared.u32 	[%rd327], %r1073;
	bar.sync 	0;
	mov.u32 	%r2449, %r1135;
$L__BB0_16:                             // %L21926
                                        //   Parent Loop BB0_13 Depth=1
                                        //     Parent Loop BB0_15 Depth=2
                                        // =>    This Inner Loop Header: Depth=3
	or.b32  	%r2159, %r81, %r2449;
	mad.lo.s32 	%r2160, %r2159, 257, %r80;
	mul.wide.u32 	%rd328, %r2160, 4;
	add.s64 	%rd330, %rd172, %rd328;
	ld.shared.u32 	%r1124, [%rd330];
	mov.u32 	%r1125, 134744072;
	mov.u32 	%r1126, 252645135;
	// begin inline asm
	lop3.b32 %r1123, %r1124, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2161, %r1123, 2021161080;
	xor.b32  	%r1134, %r2161, -2139062144;
	shr.u32 	%r1128, %r1124, 4;
	// begin inline asm
	lop3.b32 %r1127, %r1128, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2162, %r1127, 2021161080;
	xor.b32  	%r1140, %r2162, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1131, %r1132}, {%r1133}, {%r1134}, {%r1135, %r1135};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1137, %r1138}, {%r1139}, {%r1140}, {%r1135, %r1135};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1143, %r1144}, {%r1133}, {%r1140}, {%r1135, %r1135};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1149, %r1150}, {%r1139}, {%r1134}, {%r1143, %r1144};
	// end inline asm
	ld.shared.u32 	%r1156, [%rd330+4];
	// begin inline asm
	lop3.b32 %r1155, %r1156, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2163, %r1155, 2021161080;
	xor.b32  	%r1166, %r2163, -2139062144;
	shr.u32 	%r1160, %r1156, 4;
	// begin inline asm
	lop3.b32 %r1159, %r1160, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2164, %r1159, 2021161080;
	xor.b32  	%r1172, %r2164, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1163, %r1164}, {%r1165}, {%r1166}, {%r1131, %r1132};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1169, %r1170}, {%r1171}, {%r1172}, {%r1137, %r1138};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1175, %r1176}, {%r1165}, {%r1172}, {%r1149, %r1150};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1181, %r1182}, {%r1171}, {%r1166}, {%r1175, %r1176};
	// end inline asm
	ld.shared.u32 	%r1188, [%rd330+8];
	// begin inline asm
	lop3.b32 %r1187, %r1188, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2165, %r1187, 2021161080;
	xor.b32  	%r1198, %r2165, -2139062144;
	shr.u32 	%r1192, %r1188, 4;
	// begin inline asm
	lop3.b32 %r1191, %r1192, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2166, %r1191, 2021161080;
	xor.b32  	%r1204, %r2166, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1195, %r1196}, {%r1197}, {%r1198}, {%r1163, %r1164};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1201, %r1202}, {%r1203}, {%r1204}, {%r1169, %r1170};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1207, %r1208}, {%r1197}, {%r1204}, {%r1181, %r1182};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1213, %r1214}, {%r1203}, {%r1198}, {%r1207, %r1208};
	// end inline asm
	ld.shared.u32 	%r1220, [%rd330+12];
	// begin inline asm
	lop3.b32 %r1219, %r1220, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2167, %r1219, 2021161080;
	xor.b32  	%r1230, %r2167, -2139062144;
	shr.u32 	%r1224, %r1220, 4;
	// begin inline asm
	lop3.b32 %r1223, %r1224, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2168, %r1223, 2021161080;
	xor.b32  	%r1236, %r2168, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1227, %r1228}, {%r1229}, {%r1230}, {%r1195, %r1196};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1233, %r1234}, {%r1235}, {%r1236}, {%r1201, %r1202};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1239, %r1240}, {%r1229}, {%r1236}, {%r1213, %r1214};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1245, %r1246}, {%r1235}, {%r1230}, {%r1239, %r1240};
	// end inline asm
	ld.shared.u32 	%r1252, [%rd330+16];
	// begin inline asm
	lop3.b32 %r1251, %r1252, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2169, %r1251, 2021161080;
	xor.b32  	%r1262, %r2169, -2139062144;
	shr.u32 	%r1256, %r1252, 4;
	// begin inline asm
	lop3.b32 %r1255, %r1256, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2170, %r1255, 2021161080;
	xor.b32  	%r1268, %r2170, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1259, %r1260}, {%r1261}, {%r1262}, {%r1227, %r1228};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1265, %r1266}, {%r1267}, {%r1268}, {%r1233, %r1234};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1271, %r1272}, {%r1261}, {%r1268}, {%r1245, %r1246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1277, %r1278}, {%r1267}, {%r1262}, {%r1271, %r1272};
	// end inline asm
	ld.shared.u32 	%r1284, [%rd330+20];
	// begin inline asm
	lop3.b32 %r1283, %r1284, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2171, %r1283, 2021161080;
	xor.b32  	%r1294, %r2171, -2139062144;
	shr.u32 	%r1288, %r1284, 4;
	// begin inline asm
	lop3.b32 %r1287, %r1288, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2172, %r1287, 2021161080;
	xor.b32  	%r1300, %r2172, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1291, %r1292}, {%r1293}, {%r1294}, {%r1259, %r1260};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1297, %r1298}, {%r1299}, {%r1300}, {%r1265, %r1266};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1303, %r1304}, {%r1293}, {%r1300}, {%r1277, %r1278};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1309, %r1310}, {%r1299}, {%r1294}, {%r1303, %r1304};
	// end inline asm
	ld.shared.u32 	%r1316, [%rd330+24];
	// begin inline asm
	lop3.b32 %r1315, %r1316, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2173, %r1315, 2021161080;
	xor.b32  	%r1326, %r2173, -2139062144;
	shr.u32 	%r1320, %r1316, 4;
	// begin inline asm
	lop3.b32 %r1319, %r1320, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2174, %r1319, 2021161080;
	xor.b32  	%r1332, %r2174, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1323, %r1324}, {%r1325}, {%r1326}, {%r1291, %r1292};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1329, %r1330}, {%r1331}, {%r1332}, {%r1297, %r1298};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1335, %r1336}, {%r1325}, {%r1332}, {%r1309, %r1310};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1341, %r1342}, {%r1331}, {%r1326}, {%r1335, %r1336};
	// end inline asm
	ld.shared.u32 	%r1348, [%rd330+28];
	// begin inline asm
	lop3.b32 %r1347, %r1348, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2175, %r1347, 2021161080;
	xor.b32  	%r1358, %r2175, -2139062144;
	shr.u32 	%r1352, %r1348, 4;
	// begin inline asm
	lop3.b32 %r1351, %r1352, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2176, %r1351, 2021161080;
	xor.b32  	%r1364, %r2176, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1355, %r1356}, {%r1357}, {%r1358}, {%r1323, %r1324};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1361, %r1362}, {%r1363}, {%r1364}, {%r1329, %r1330};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1367, %r1368}, {%r1357}, {%r1364}, {%r1341, %r1342};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1373, %r1374}, {%r1363}, {%r1358}, {%r1367, %r1368};
	// end inline asm
	ld.shared.u32 	%r1380, [%rd330+32];
	// begin inline asm
	lop3.b32 %r1379, %r1380, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2177, %r1379, 2021161080;
	xor.b32  	%r1390, %r2177, -2139062144;
	shr.u32 	%r1384, %r1380, 4;
	// begin inline asm
	lop3.b32 %r1383, %r1384, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2178, %r1383, 2021161080;
	xor.b32  	%r1396, %r2178, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1387, %r1388}, {%r1389}, {%r1390}, {%r1355, %r1356};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1393, %r1394}, {%r1395}, {%r1396}, {%r1361, %r1362};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1399, %r1400}, {%r1389}, {%r1396}, {%r1373, %r1374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1405, %r1406}, {%r1395}, {%r1390}, {%r1399, %r1400};
	// end inline asm
	ld.shared.u32 	%r1412, [%rd330+36];
	// begin inline asm
	lop3.b32 %r1411, %r1412, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2179, %r1411, 2021161080;
	xor.b32  	%r1422, %r2179, -2139062144;
	shr.u32 	%r1416, %r1412, 4;
	// begin inline asm
	lop3.b32 %r1415, %r1416, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2180, %r1415, 2021161080;
	xor.b32  	%r1428, %r2180, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1419, %r1420}, {%r1421}, {%r1422}, {%r1387, %r1388};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1425, %r1426}, {%r1427}, {%r1428}, {%r1393, %r1394};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1431, %r1432}, {%r1421}, {%r1428}, {%r1405, %r1406};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1437, %r1438}, {%r1427}, {%r1422}, {%r1431, %r1432};
	// end inline asm
	ld.shared.u32 	%r1444, [%rd330+40];
	// begin inline asm
	lop3.b32 %r1443, %r1444, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2181, %r1443, 2021161080;
	xor.b32  	%r1454, %r2181, -2139062144;
	shr.u32 	%r1448, %r1444, 4;
	// begin inline asm
	lop3.b32 %r1447, %r1448, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2182, %r1447, 2021161080;
	xor.b32  	%r1460, %r2182, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1451, %r1452}, {%r1453}, {%r1454}, {%r1419, %r1420};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1457, %r1458}, {%r1459}, {%r1460}, {%r1425, %r1426};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1463, %r1464}, {%r1453}, {%r1460}, {%r1437, %r1438};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1469, %r1470}, {%r1459}, {%r1454}, {%r1463, %r1464};
	// end inline asm
	ld.shared.u32 	%r1476, [%rd330+44];
	// begin inline asm
	lop3.b32 %r1475, %r1476, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2183, %r1475, 2021161080;
	xor.b32  	%r1486, %r2183, -2139062144;
	shr.u32 	%r1480, %r1476, 4;
	// begin inline asm
	lop3.b32 %r1479, %r1480, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2184, %r1479, 2021161080;
	xor.b32  	%r1492, %r2184, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1483, %r1484}, {%r1485}, {%r1486}, {%r1451, %r1452};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1489, %r1490}, {%r1491}, {%r1492}, {%r1457, %r1458};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1495, %r1496}, {%r1485}, {%r1492}, {%r1469, %r1470};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1501, %r1502}, {%r1491}, {%r1486}, {%r1495, %r1496};
	// end inline asm
	ld.shared.u32 	%r1508, [%rd330+48];
	// begin inline asm
	lop3.b32 %r1507, %r1508, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2185, %r1507, 2021161080;
	xor.b32  	%r1518, %r2185, -2139062144;
	shr.u32 	%r1512, %r1508, 4;
	// begin inline asm
	lop3.b32 %r1511, %r1512, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2186, %r1511, 2021161080;
	xor.b32  	%r1524, %r2186, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1515, %r1516}, {%r1517}, {%r1518}, {%r1483, %r1484};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1521, %r1522}, {%r1523}, {%r1524}, {%r1489, %r1490};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1527, %r1528}, {%r1517}, {%r1524}, {%r1501, %r1502};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1533, %r1534}, {%r1523}, {%r1518}, {%r1527, %r1528};
	// end inline asm
	ld.shared.u32 	%r1540, [%rd330+52];
	// begin inline asm
	lop3.b32 %r1539, %r1540, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2187, %r1539, 2021161080;
	xor.b32  	%r1550, %r2187, -2139062144;
	shr.u32 	%r1544, %r1540, 4;
	// begin inline asm
	lop3.b32 %r1543, %r1544, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2188, %r1543, 2021161080;
	xor.b32  	%r1556, %r2188, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1547, %r1548}, {%r1549}, {%r1550}, {%r1515, %r1516};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1553, %r1554}, {%r1555}, {%r1556}, {%r1521, %r1522};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1559, %r1560}, {%r1549}, {%r1556}, {%r1533, %r1534};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1565, %r1566}, {%r1555}, {%r1550}, {%r1559, %r1560};
	// end inline asm
	ld.shared.u32 	%r1572, [%rd330+56];
	// begin inline asm
	lop3.b32 %r1571, %r1572, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2189, %r1571, 2021161080;
	xor.b32  	%r1582, %r2189, -2139062144;
	shr.u32 	%r1576, %r1572, 4;
	// begin inline asm
	lop3.b32 %r1575, %r1576, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2190, %r1575, 2021161080;
	xor.b32  	%r1588, %r2190, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1579, %r1580}, {%r1581}, {%r1582}, {%r1547, %r1548};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1585, %r1586}, {%r1587}, {%r1588}, {%r1553, %r1554};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1591, %r1592}, {%r1581}, {%r1588}, {%r1565, %r1566};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1597, %r1598}, {%r1587}, {%r1582}, {%r1591, %r1592};
	// end inline asm
	ld.shared.u32 	%r1604, [%rd330+60];
	// begin inline asm
	lop3.b32 %r1603, %r1604, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2191, %r1603, 2021161080;
	xor.b32  	%r1614, %r2191, -2139062144;
	shr.u32 	%r1608, %r1604, 4;
	// begin inline asm
	lop3.b32 %r1607, %r1608, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2192, %r1607, 2021161080;
	xor.b32  	%r1620, %r2192, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1611, %r1612}, {%r1613}, {%r1614}, {%r1579, %r1580};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1617, %r1618}, {%r1619}, {%r1620}, {%r1585, %r1586};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1623, %r1624}, {%r1613}, {%r1620}, {%r1597, %r1598};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1629, %r1630}, {%r1619}, {%r1614}, {%r1623, %r1624};
	// end inline asm
	sub.s32 	%r2193, %r1611, %r1617;
	add.s32 	%r2194, %r2193, 8;
	shr.s32 	%r1637, %r2194, 4;
	add.s32 	%r2195, %r1629, 8;
	shr.s32 	%r1636, %r2195, 4;
	sub.s32 	%r2196, %r1612, %r1618;
	add.s32 	%r2197, %r2196, 8;
	shr.s32 	%r1640, %r2197, 4;
	add.s32 	%r2198, %r1630, 8;
	shr.s32 	%r1639, %r2198, 4;
	// begin inline asm
	cvt.pack.sat.s16.s32 %r1635, %r1636, %r1637;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s16.s32 %r1638, %r1639, %r1640;
	// end inline asm
	or.b32  	%r2199, %r82, %r2449;
	mul.lo.s32 	%r2200, %r2199, 20;
	or.b32  	%r2201, %r2200, %r81;
	add.s32 	%r2202, %r2201, %r83;
	mul.wide.u32 	%rd331, %r2202, 4;
	add.s64 	%rd333, %rd181, %rd331;
	st.shared.u32 	[%rd333], %r1635;
	add.s32 	%r2203, %r2200, 20;
	add.s32 	%r2204, %r84, %r2203;
	mul.wide.u32 	%rd334, %r2204, 4;
	add.s64 	%rd335, %rd181, %rd334;
	st.shared.u32 	[%rd335], %r1638;
	ld.shared.u32 	%r1642, [%rd330];
	// begin inline asm
	lop3.b32 %r1641, %r1642, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2205, %r1641, 2021161080;
	xor.b32  	%r1652, %r2205, -2139062144;
	shr.u32 	%r1646, %r1642, 4;
	// begin inline asm
	lop3.b32 %r1645, %r1646, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2206, %r1645, 2021161080;
	xor.b32  	%r1658, %r2206, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1649, %r1650}, {%r1651}, {%r1652}, {%r1135, %r1135};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1655, %r1656}, {%r1657}, {%r1658}, {%r1135, %r1135};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1661, %r1662}, {%r1651}, {%r1658}, {%r1135, %r1135};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1667, %r1668}, {%r1657}, {%r1652}, {%r1661, %r1662};
	// end inline asm
	ld.shared.u32 	%r1674, [%rd330+4];
	// begin inline asm
	lop3.b32 %r1673, %r1674, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2207, %r1673, 2021161080;
	xor.b32  	%r1684, %r2207, -2139062144;
	shr.u32 	%r1678, %r1674, 4;
	// begin inline asm
	lop3.b32 %r1677, %r1678, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2208, %r1677, 2021161080;
	xor.b32  	%r1690, %r2208, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1681, %r1682}, {%r1683}, {%r1684}, {%r1649, %r1650};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1687, %r1688}, {%r1689}, {%r1690}, {%r1655, %r1656};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1693, %r1694}, {%r1683}, {%r1690}, {%r1667, %r1668};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1699, %r1700}, {%r1689}, {%r1684}, {%r1693, %r1694};
	// end inline asm
	ld.shared.u32 	%r1706, [%rd330+8];
	// begin inline asm
	lop3.b32 %r1705, %r1706, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2209, %r1705, 2021161080;
	xor.b32  	%r1716, %r2209, -2139062144;
	shr.u32 	%r1710, %r1706, 4;
	// begin inline asm
	lop3.b32 %r1709, %r1710, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2210, %r1709, 2021161080;
	xor.b32  	%r1722, %r2210, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1713, %r1714}, {%r1715}, {%r1716}, {%r1681, %r1682};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1719, %r1720}, {%r1721}, {%r1722}, {%r1687, %r1688};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1725, %r1726}, {%r1715}, {%r1722}, {%r1699, %r1700};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1731, %r1732}, {%r1721}, {%r1716}, {%r1725, %r1726};
	// end inline asm
	ld.shared.u32 	%r1738, [%rd330+12];
	// begin inline asm
	lop3.b32 %r1737, %r1738, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2211, %r1737, 2021161080;
	xor.b32  	%r1748, %r2211, -2139062144;
	shr.u32 	%r1742, %r1738, 4;
	// begin inline asm
	lop3.b32 %r1741, %r1742, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2212, %r1741, 2021161080;
	xor.b32  	%r1754, %r2212, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1745, %r1746}, {%r1747}, {%r1748}, {%r1713, %r1714};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1751, %r1752}, {%r1753}, {%r1754}, {%r1719, %r1720};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1757, %r1758}, {%r1747}, {%r1754}, {%r1731, %r1732};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1763, %r1764}, {%r1753}, {%r1748}, {%r1757, %r1758};
	// end inline asm
	ld.shared.u32 	%r1770, [%rd330+16];
	// begin inline asm
	lop3.b32 %r1769, %r1770, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2213, %r1769, 2021161080;
	xor.b32  	%r1780, %r2213, -2139062144;
	shr.u32 	%r1774, %r1770, 4;
	// begin inline asm
	lop3.b32 %r1773, %r1774, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2214, %r1773, 2021161080;
	xor.b32  	%r1786, %r2214, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1777, %r1778}, {%r1779}, {%r1780}, {%r1745, %r1746};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1783, %r1784}, {%r1785}, {%r1786}, {%r1751, %r1752};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1789, %r1790}, {%r1779}, {%r1786}, {%r1763, %r1764};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1795, %r1796}, {%r1785}, {%r1780}, {%r1789, %r1790};
	// end inline asm
	ld.shared.u32 	%r1802, [%rd330+20];
	// begin inline asm
	lop3.b32 %r1801, %r1802, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2215, %r1801, 2021161080;
	xor.b32  	%r1812, %r2215, -2139062144;
	shr.u32 	%r1806, %r1802, 4;
	// begin inline asm
	lop3.b32 %r1805, %r1806, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2216, %r1805, 2021161080;
	xor.b32  	%r1818, %r2216, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1809, %r1810}, {%r1811}, {%r1812}, {%r1777, %r1778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1815, %r1816}, {%r1817}, {%r1818}, {%r1783, %r1784};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1821, %r1822}, {%r1811}, {%r1818}, {%r1795, %r1796};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1827, %r1828}, {%r1817}, {%r1812}, {%r1821, %r1822};
	// end inline asm
	ld.shared.u32 	%r1834, [%rd330+24];
	// begin inline asm
	lop3.b32 %r1833, %r1834, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2217, %r1833, 2021161080;
	xor.b32  	%r1844, %r2217, -2139062144;
	shr.u32 	%r1838, %r1834, 4;
	// begin inline asm
	lop3.b32 %r1837, %r1838, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2218, %r1837, 2021161080;
	xor.b32  	%r1850, %r2218, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1841, %r1842}, {%r1843}, {%r1844}, {%r1809, %r1810};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1847, %r1848}, {%r1849}, {%r1850}, {%r1815, %r1816};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1853, %r1854}, {%r1843}, {%r1850}, {%r1827, %r1828};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1859, %r1860}, {%r1849}, {%r1844}, {%r1853, %r1854};
	// end inline asm
	ld.shared.u32 	%r1866, [%rd330+28];
	// begin inline asm
	lop3.b32 %r1865, %r1866, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2219, %r1865, 2021161080;
	xor.b32  	%r1876, %r2219, -2139062144;
	shr.u32 	%r1870, %r1866, 4;
	// begin inline asm
	lop3.b32 %r1869, %r1870, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2220, %r1869, 2021161080;
	xor.b32  	%r1882, %r2220, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1873, %r1874}, {%r1875}, {%r1876}, {%r1841, %r1842};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1879, %r1880}, {%r1881}, {%r1882}, {%r1847, %r1848};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1885, %r1886}, {%r1875}, {%r1882}, {%r1859, %r1860};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1891, %r1892}, {%r1881}, {%r1876}, {%r1885, %r1886};
	// end inline asm
	ld.shared.u32 	%r1898, [%rd330+32];
	// begin inline asm
	lop3.b32 %r1897, %r1898, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2221, %r1897, 2021161080;
	xor.b32  	%r1908, %r2221, -2139062144;
	shr.u32 	%r1902, %r1898, 4;
	// begin inline asm
	lop3.b32 %r1901, %r1902, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2222, %r1901, 2021161080;
	xor.b32  	%r1914, %r2222, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1905, %r1906}, {%r1907}, {%r1908}, {%r1873, %r1874};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1911, %r1912}, {%r1913}, {%r1914}, {%r1879, %r1880};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1917, %r1918}, {%r1907}, {%r1914}, {%r1891, %r1892};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1923, %r1924}, {%r1913}, {%r1908}, {%r1917, %r1918};
	// end inline asm
	ld.shared.u32 	%r1930, [%rd330+36];
	// begin inline asm
	lop3.b32 %r1929, %r1930, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2223, %r1929, 2021161080;
	xor.b32  	%r1940, %r2223, -2139062144;
	shr.u32 	%r1934, %r1930, 4;
	// begin inline asm
	lop3.b32 %r1933, %r1934, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2224, %r1933, 2021161080;
	xor.b32  	%r1946, %r2224, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1937, %r1938}, {%r1939}, {%r1940}, {%r1905, %r1906};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1943, %r1944}, {%r1945}, {%r1946}, {%r1911, %r1912};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1949, %r1950}, {%r1939}, {%r1946}, {%r1923, %r1924};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1955, %r1956}, {%r1945}, {%r1940}, {%r1949, %r1950};
	// end inline asm
	ld.shared.u32 	%r1962, [%rd330+40];
	// begin inline asm
	lop3.b32 %r1961, %r1962, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2225, %r1961, 2021161080;
	xor.b32  	%r1972, %r2225, -2139062144;
	shr.u32 	%r1966, %r1962, 4;
	// begin inline asm
	lop3.b32 %r1965, %r1966, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2226, %r1965, 2021161080;
	xor.b32  	%r1978, %r2226, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1969, %r1970}, {%r1971}, {%r1972}, {%r1937, %r1938};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1975, %r1976}, {%r1977}, {%r1978}, {%r1943, %r1944};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1981, %r1982}, {%r1971}, {%r1978}, {%r1955, %r1956};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1987, %r1988}, {%r1977}, {%r1972}, {%r1981, %r1982};
	// end inline asm
	ld.shared.u32 	%r1994, [%rd330+44];
	// begin inline asm
	lop3.b32 %r1993, %r1994, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2227, %r1993, 2021161080;
	xor.b32  	%r2004, %r2227, -2139062144;
	shr.u32 	%r1998, %r1994, 4;
	// begin inline asm
	lop3.b32 %r1997, %r1998, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2228, %r1997, 2021161080;
	xor.b32  	%r2010, %r2228, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2001, %r2002}, {%r2003}, {%r2004}, {%r1969, %r1970};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2007, %r2008}, {%r2009}, {%r2010}, {%r1975, %r1976};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2013, %r2014}, {%r2003}, {%r2010}, {%r1987, %r1988};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2019, %r2020}, {%r2009}, {%r2004}, {%r2013, %r2014};
	// end inline asm
	ld.shared.u32 	%r2026, [%rd330+48];
	// begin inline asm
	lop3.b32 %r2025, %r2026, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2229, %r2025, 2021161080;
	xor.b32  	%r2036, %r2229, -2139062144;
	shr.u32 	%r2030, %r2026, 4;
	// begin inline asm
	lop3.b32 %r2029, %r2030, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2230, %r2029, 2021161080;
	xor.b32  	%r2042, %r2230, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2033, %r2034}, {%r2035}, {%r2036}, {%r2001, %r2002};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2039, %r2040}, {%r2041}, {%r2042}, {%r2007, %r2008};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2045, %r2046}, {%r2035}, {%r2042}, {%r2019, %r2020};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2051, %r2052}, {%r2041}, {%r2036}, {%r2045, %r2046};
	// end inline asm
	ld.shared.u32 	%r2058, [%rd330+52];
	// begin inline asm
	lop3.b32 %r2057, %r2058, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2231, %r2057, 2021161080;
	xor.b32  	%r2068, %r2231, -2139062144;
	shr.u32 	%r2062, %r2058, 4;
	// begin inline asm
	lop3.b32 %r2061, %r2062, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2232, %r2061, 2021161080;
	xor.b32  	%r2074, %r2232, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2065, %r2066}, {%r2067}, {%r2068}, {%r2033, %r2034};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2071, %r2072}, {%r2073}, {%r2074}, {%r2039, %r2040};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2077, %r2078}, {%r2067}, {%r2074}, {%r2051, %r2052};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2083, %r2084}, {%r2073}, {%r2068}, {%r2077, %r2078};
	// end inline asm
	ld.shared.u32 	%r2090, [%rd330+56];
	// begin inline asm
	lop3.b32 %r2089, %r2090, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2233, %r2089, 2021161080;
	xor.b32  	%r2100, %r2233, -2139062144;
	shr.u32 	%r2094, %r2090, 4;
	// begin inline asm
	lop3.b32 %r2093, %r2094, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2234, %r2093, 2021161080;
	xor.b32  	%r2106, %r2234, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2097, %r2098}, {%r2099}, {%r2100}, {%r2065, %r2066};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2103, %r2104}, {%r2105}, {%r2106}, {%r2071, %r2072};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2109, %r2110}, {%r2099}, {%r2106}, {%r2083, %r2084};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2115, %r2116}, {%r2105}, {%r2100}, {%r2109, %r2110};
	// end inline asm
	ld.shared.u32 	%r2122, [%rd330+60];
	// begin inline asm
	lop3.b32 %r2121, %r2122, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2235, %r2121, 2021161080;
	xor.b32  	%r2132, %r2235, -2139062144;
	shr.u32 	%r2126, %r2122, 4;
	// begin inline asm
	lop3.b32 %r2125, %r2126, %r1125, %r1126, 40;
	// end inline asm
	add.s32 	%r2236, %r2125, 2021161080;
	xor.b32  	%r2138, %r2236, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2129, %r2130}, {%r2131}, {%r2132}, {%r2097, %r2098};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2135, %r2136}, {%r2137}, {%r2138}, {%r2103, %r2104};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2141, %r2142}, {%r2131}, {%r2138}, {%r2115, %r2116};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2147, %r2148}, {%r2137}, {%r2132}, {%r2141, %r2142};
	// end inline asm
	sub.s32 	%r2237, %r2129, %r2135;
	add.s32 	%r2238, %r2237, 8;
	shr.s32 	%r2155, %r2238, 4;
	add.s32 	%r2239, %r2147, 8;
	shr.s32 	%r2154, %r2239, 4;
	sub.s32 	%r2240, %r2130, %r2136;
	add.s32 	%r2241, %r2240, 8;
	shr.s32 	%r2158, %r2241, 4;
	add.s32 	%r2242, %r2148, 8;
	shr.s32 	%r2157, %r2242, 4;
	// begin inline asm
	cvt.pack.sat.s16.s32 %r2153, %r2154, %r2155;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s16.s32 %r2156, %r2157, %r2158;
	// end inline asm
	add.s32 	%r2243, %r85, %r2200;
	mul.wide.u32 	%rd336, %r2243, 4;
	add.s64 	%rd337, %rd181, %rd336;
	st.shared.u32 	[%rd337], %r2153;
	add.s32 	%r2244, %r85, %r2203;
	mul.wide.u32 	%rd338, %r2244, 4;
	add.s64 	%rd339, %rd181, %rd338;
	st.shared.u32 	[%rd339], %r2156;
	add.s32 	%r2449, %r2449, 8;
	setp.ne.s32 	%p41, %r2449, 32;
	@%p41 bra 	$L__BB0_16;
// %bb.17:                              // %L28527
                                        //   in Loop: Header=BB0_15 Depth=2
	bar.sync 	0;
	ld.shared.u32 	%r2263, [%rd16];
	ld.shared.u32 	%r2264, [%rd17];
	ld.shared.u32 	%r2265, [%rd18];
	ld.shared.u32 	%r2266, [%rd19];
	ld.shared.u32 	%r2267, [%rd20];
	ld.shared.u32 	%r2268, [%rd21];
	ld.shared.u32 	%r2269, [%rd22];
	ld.shared.u32 	%r2270, [%rd23];
	ld.shared.u32 	%r2271, [%rd24];
	ld.shared.u32 	%r2272, [%rd25];
	ld.shared.u32 	%r2273, [%rd26];
	ld.shared.u32 	%r2274, [%rd27];
	ld.shared.u32 	%r2275, [%rd28];
	ld.shared.u32 	%r2276, [%rd29];
	ld.shared.u32 	%r2277, [%rd30];
	ld.shared.u32 	%r2278, [%rd31];
	cvt.s32.s16 	%r2279, %r2263;
	shr.s32 	%r2280, %r2263, 16;
	cvt.s32.s16 	%r2281, %r2264;
	shr.s32 	%r2282, %r2264, 16;
	cvt.s32.s16 	%r2283, %r2265;
	shr.s32 	%r2284, %r2265, 16;
	cvt.s32.s16 	%r2285, %r2266;
	shr.s32 	%r2286, %r2266, 16;
	cvt.s32.s16 	%r2287, %r2267;
	shr.s32 	%r2288, %r2267, 16;
	cvt.s32.s16 	%r2289, %r2268;
	shr.s32 	%r2290, %r2268, 16;
	cvt.s32.s16 	%r2291, %r2269;
	shr.s32 	%r2292, %r2269, 16;
	cvt.s32.s16 	%r2293, %r2270;
	shr.s32 	%r2294, %r2270, 16;
	cvt.s32.s16 	%r2295, %r2271;
	shr.s32 	%r2296, %r2271, 16;
	cvt.s32.s16 	%r2297, %r2272;
	shr.s32 	%r2298, %r2272, 16;
	cvt.s32.s16 	%r2299, %r2273;
	shr.s32 	%r2300, %r2273, 16;
	cvt.s32.s16 	%r2301, %r2274;
	shr.s32 	%r2302, %r2274, 16;
	cvt.s32.s16 	%r2303, %r2275;
	shr.s32 	%r2304, %r2275, 16;
	cvt.s32.s16 	%r2305, %r2276;
	shr.s32 	%r2306, %r2276, 16;
	cvt.s32.s16 	%r2307, %r2277;
	shr.s32 	%r2308, %r2277, 16;
	cvt.s32.s16 	%r2309, %r2278;
	shr.s32 	%r2310, %r2278, 16;
	add.s32 	%r2311, %r2279, %r86;
	add.s32 	%r2312, %r2311, %r2281;
	add.s32 	%r2313, %r2312, %r2283;
	add.s32 	%r2314, %r2313, %r2285;
	shr.s32 	%r2315, %r2314, %r87;
	add.s32 	%r2316, %r2280, %r86;
	add.s32 	%r2317, %r2316, %r2282;
	add.s32 	%r2318, %r2317, %r2284;
	add.s32 	%r2319, %r2318, %r2286;
	shr.s32 	%r2320, %r2319, %r87;
	add.s32 	%r2321, %r2287, %r86;
	add.s32 	%r2322, %r2321, %r2289;
	add.s32 	%r2323, %r2322, %r2291;
	add.s32 	%r2324, %r2323, %r2293;
	shr.s32 	%r2325, %r2324, %r87;
	add.s32 	%r2326, %r2288, %r86;
	add.s32 	%r2327, %r2326, %r2290;
	add.s32 	%r2328, %r2327, %r2292;
	add.s32 	%r2329, %r2328, %r2294;
	shr.s32 	%r2330, %r2329, %r87;
	add.s32 	%r2331, %r2295, %r86;
	add.s32 	%r2332, %r2331, %r2297;
	add.s32 	%r2333, %r2332, %r2299;
	add.s32 	%r2334, %r2333, %r2301;
	shr.s32 	%r2335, %r2334, %r87;
	add.s32 	%r2336, %r2296, %r86;
	add.s32 	%r2337, %r2336, %r2298;
	add.s32 	%r2338, %r2337, %r2300;
	add.s32 	%r2339, %r2338, %r2302;
	shr.s32 	%r2340, %r2339, %r87;
	add.s32 	%r2341, %r2303, %r86;
	add.s32 	%r2342, %r2341, %r2305;
	add.s32 	%r2343, %r2342, %r2307;
	add.s32 	%r2344, %r2343, %r2309;
	shr.s32 	%r2345, %r2344, %r87;
	add.s32 	%r2346, %r2304, %r86;
	add.s32 	%r2347, %r2346, %r2306;
	add.s32 	%r2348, %r2347, %r2308;
	add.s32 	%r2349, %r2348, %r2310;
	shr.s32 	%r2350, %r2349, %r87;
	max.s32 	%r2351, %r2315, -7;
	min.s32 	%r2250, %r2351, 7;
	setp.ne.s32 	%p42, %r2250, %r2315;
	or.pred  	%p43, %p69, %p42;
	max.s32 	%r2352, %r2320, -7;
	min.s32 	%r2257, %r2352, 7;
	setp.ne.s32 	%p44, %r2257, %r2320;
	or.pred  	%p45, %p44, %p43;
	max.s32 	%r2353, %r2325, -7;
	min.s32 	%r2249, %r2353, 7;
	setp.ne.s32 	%p46, %r2249, %r2325;
	or.pred  	%p47, %p45, %p46;
	max.s32 	%r2354, %r2330, -7;
	min.s32 	%r2256, %r2354, 7;
	setp.ne.s32 	%p48, %r2256, %r2330;
	or.pred  	%p49, %p48, %p47;
	max.s32 	%r2355, %r2335, -7;
	min.s32 	%r2247, %r2355, 7;
	setp.ne.s32 	%p50, %r2247, %r2335;
	or.pred  	%p51, %p49, %p50;
	max.s32 	%r2356, %r2340, -7;
	min.s32 	%r2254, %r2356, 7;
	setp.ne.s32 	%p52, %r2254, %r2340;
	or.pred  	%p53, %p52, %p51;
	max.s32 	%r2357, %r2345, -7;
	min.s32 	%r2246, %r2357, 7;
	setp.ne.s32 	%p54, %r2246, %r2345;
	or.pred  	%p55, %p53, %p54;
	max.s32 	%r2358, %r2350, -7;
	min.s32 	%r2253, %r2358, 7;
	setp.ne.s32 	%p56, %r2253, %r2350;
	or.pred  	%p69, %p56, %p55;
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2245, %r2246, %r2247, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2248, %r2249, %r2250, %r2245;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2252, %r2253, %r2254, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2255, %r2256, %r2257, %r2252;
	// end inline asm
	shl.b32 	%r2262, %r2255, 4;
	// begin inline asm
	lop3.b32 %r2369, %r1126, %r2248, %r2262, 202;
	// end inline asm
	setp.eq.s32 	%p57, %r2442, 0;
	selp.b32 	%r2447, %r2369, %r2447, %p57;
	selp.b32 	%r2448, %r2369, %r2448, %p57;
	setp.eq.s32 	%p58, %r2442, 32;
	selp.b32 	%r2443, %r2369, %r2443, %p58;
	selp.b32 	%r2444, %r2369, %r2444, %p58;
	setp.eq.s32 	%p59, %r2442, 64;
	selp.b32 	%r2445, %r2369, %r2445, %p59;
	selp.b32 	%r2446, %r2369, %r2446, %p59;
	add.s32 	%r111, %r2442, 32;
	setp.ne.s32 	%p60, %r2442, 96;
	mov.u32 	%r2442, %r111;
	@%p60 bra 	$L__BB0_15;
// %bb.18:                              // %L30933.L30939_crit_edge
                                        //   in Loop: Header=BB0_13 Depth=1
	setp.eq.s32 	%p61, %r90, 0;
	setp.eq.s32 	%p62, %r89, 0;
	setp.eq.s32 	%p63, %r88, 0;
	// begin inline asm
	prmt.b32 %r2359, %r2447, %r2443, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2363, %r2448, %r2444, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2367, %r2445, %r2369, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2371, %r2446, %r2369, %r394;
	// end inline asm
	selp.b32 	%r2407, %r2363, %r2359, %p63;
	shfl.sync.bfly.b32	%r2408, %r2407, 1, 31, -1;
	selp.b32 	%r2376, %r2359, %r2408, %p63;
	selp.b32 	%r2377, %r2408, %r2363, %p63;
	selp.b32 	%r2409, %r2371, %r2367, %p63;
	shfl.sync.bfly.b32	%r2410, %r2409, 1, 31, -1;
	selp.b32 	%r2384, %r2367, %r2410, %p63;
	selp.b32 	%r2385, %r2410, %r2371, %p63;
	// begin inline asm
	prmt.b32 %r2375, %r2376, %r2377, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2379, %r2376, %r2377, %r394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2383, %r2384, %r2385, %r390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2387, %r2384, %r2385, %r394;
	// end inline asm
	selp.b32 	%r2411, %r2383, %r2375, %p62;
	shfl.sync.bfly.b32	%r2412, %r2411, 2, 31, -1;
	selp.b32 	%r2392, %r2375, %r2412, %p62;
	selp.b32 	%r2393, %r2412, %r2383, %p62;
	selp.b32 	%r2413, %r2387, %r2379, %p62;
	shfl.sync.bfly.b32	%r2414, %r2413, 2, 31, -1;
	selp.b32 	%r2400, %r2379, %r2414, %p62;
	selp.b32 	%r2401, %r2414, %r2387, %p62;
	// begin inline asm
	prmt.b32 %r2391, %r2392, %r2393, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2395, %r2392, %r2393, %r138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2399, %r2400, %r2401, %r134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2403, %r2400, %r2401, %r138;
	// end inline asm
	selp.b32 	%r2415, %r2399, %r2391, %p61;
	shfl.sync.bfly.b32	%r2416, %r2415, 4, 31, -1;
	selp.b32 	%r2417, %r2391, %r2416, %p61;
	selp.b32 	%r2418, %r2416, %r2399, %p61;
	selp.b32 	%r2419, %r2403, %r2395, %p61;
	shfl.sync.bfly.b32	%r2420, %r2419, 4, 31, -1;
	selp.b32 	%r2421, %r2395, %r2420, %p61;
	selp.b32 	%r2422, %r2420, %r2403, %p61;
	selp.b32 	%r2423, %r2421, %r2417, %p63;
	shfl.sync.bfly.b32	%r2424, %r2423, 1, 31, -1;
	selp.b32 	%r2425, %r2417, %r2424, %p63;
	selp.b32 	%r2426, %r2424, %r2421, %p63;
	selp.b32 	%r2427, %r2422, %r2418, %p63;
	shfl.sync.bfly.b32	%r2428, %r2427, 1, 31, -1;
	selp.b32 	%r2429, %r2418, %r2428, %p63;
	selp.b32 	%r2430, %r2428, %r2422, %p63;
	and.b32  	%r2431, %r2441, 1920;
	or.b32  	%r2432, %r2431, %r93;
	or.b32  	%r2433, %r2432, %r91;
	or.b32  	%r2434, %r92, %r2433;
	cvt.u64.u32 	%rd340, %r2434;
	add.s64 	%rd341, %rd4, %rd340;
	st.global.v4.u32 	[%rd341], {%r2425, %r2429, %r2426, %r2430};
	add.s32 	%r112, %r2441, 128;
	setp.ne.s32 	%p64, %r2441, 8064;
	mov.u32 	%r2441, %r112;
	@%p64 bra 	$L__BB0_13;
$L__BB0_19:                             // %L31320
	selp.u32 	%r2435, 1, 0, %p69;
	{ 
	.reg .pred 	%p1; 
	.reg .pred 	%p2; 
	setp.ne.u32 	%p1, %r2435, 0; 
	bar.red.or.pred 	%p2, 0, %p1; 
	selp.u32 	%r2436, 1, 0, %p2; 
	}
	setp.eq.s32 	%p65, %r2436, 0;
	or.pred  	%p66, %p65, %p1;
	@%p66 bra 	$L__BB0_21;
// %bb.20:                              // %L31351
	st.global.u32 	[%rd8], %r121;
$L__BB0_21:                             // %L31397
	mov.u32 	%r2438, 0;
	st.global.u32 	[%rd7], %r2438;
	ret;
$L__BB0_7:                              // %L152
	mov.u32 	%r2439, 2;
	st.global.u32 	[%rd7], %r2439;
	mov.u64 	%rd342, exception2743;
	cvta.global.u64 	%rd343, %rd342;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd343;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd32;
	st.param.b32 	[param0+8], %r113;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd33, exception1;
	cvta.global.u64 	%rd34, %rd33;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd34;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd32;
	st.param.b32 	[param0+8], %r113;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_3:                              // %L24
	mov.u64 	%rd35, exception1;
	cvta.global.u64 	%rd36, %rd35;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd36;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd32;
	st.param.b32 	[param0+8], %r113;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_9:                              // %L370
	mov.u32 	%r128, 3;
	st.global.u32 	[%rd7], %r128;
	mov.u64 	%rd40, exception2743;
	cvta.global.u64 	%rd41, %rd40;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd41;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd32;
	st.param.b32 	[param0+8], %r113;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
