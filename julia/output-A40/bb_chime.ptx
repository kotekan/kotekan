// PTX kernel code for CUDA baseband beamformer
// This file has been generated automatically by `bb.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for bb(::Int32, ::Int32, ::CuDeviceVector{Int8x4, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=128, blocks_per_sm=8

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2743[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32]
)
.reqntid 128, 1, 1
.minnctapersm 8
{
	.reg .pred 	%p<70>;
	.reg .b32 	%r<2456>;
	.reg .b64 	%rd<344>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r115, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd32, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r118, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p6, %r118, 32895;
	@%p6 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	// begin inline asm
	mov.u32 %r119, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p7, %r119, 43135;
	@%p7 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:                              // %L26
	ld.param.u32 	%r116, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	ld.param.u64 	%rd5, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r120, %r3, 7;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r121, %r120, %r4;
	or.b32  	%r122, %r121, %r2;
	mul.wide.u32 	%rd37, %r122, 4;
	add.s64 	%rd7, %rd5, %rd37;
	mov.u32 	%r123, 1;
	st.global.u32 	[%rd7], %r123;
	setp.gt.u32 	%p8, %r116, 65535;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L133
	ld.param.u32 	%r117, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p9, %r117, %r116;
	setp.gt.s32 	%p10, %r117, 131071;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L140
	sub.s32 	%r124, %r117, %r116;
	and.b32  	%r125, %r124, 127;
	setp.eq.s32 	%p12, %r125, 0;
	@%p12 bra 	$L__BB0_20;
	bra.uni 	$L__BB0_7;
$L__BB0_20:                             // %pass103
	ld.param.u64 	%rd3, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	shl.b32 	%r126, %r3, 4;
	shr.u32 	%r111, %r4, 3;
	shl.b32 	%r127, %r1, 2;
	or.b32  	%r112, %r111, %r127;
	or.b32  	%r128, %r112, %r126;
	mul.wide.u32 	%rd38, %r128, 4;
	add.s64 	%rd39, %rd3, %rd38;
	ld.global.u32 	%r129, [%rd39];
	add.s32 	%r114, %r129, -5;
	setp.lt.u32 	%p13, %r114, 31;
	@%p13 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_21;
$L__BB0_8:                              // %L463
	ld.param.u64 	%rd1, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	ld.param.u64 	%rd6, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	add.s32 	%r113, %r129, -4;
	or.b32  	%r131, %r4, %r1;
	setp.ne.s32 	%p1, %r131, 0;
	mul.wide.u32 	%rd42, %r3, 4;
	add.s64 	%rd8, %rd6, %rd42;
	mov.u32 	%r2447, 0;
	@%p1 bra 	$L__BB0_10;
// %bb.9:                               // %L487
	st.global.u32 	[%rd8], %r2447;
$L__BB0_10:                             // %L533
	ld.param.u64 	%rd2, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	ld.param.u64 	%rd4, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	bar.sync 	0;
	shl.b32 	%r646, %r3, 13;
	shl.b32 	%r647, %r4, 5;
	and.b32  	%r648, %r647, 96;
	shl.b32 	%r649, %r1, 7;
	or.b32  	%r650, %r648, %r649;
	shl.b32 	%r651, %r4, 7;
	and.b32  	%r652, %r651, 3584;
	or.b32  	%r653, %r646, %r652;
	or.b32  	%r654, %r653, %r650;
	mul.wide.u32 	%rd43, %r654, 4;
	add.s64 	%rd44, %rd1, %rd43;
	ld.global.u32 	%r138, [%rd44];
	or.b32  	%r655, %r653, 4096;
	or.b32  	%r656, %r655, %r650;
	mul.wide.u32 	%rd45, %r656, 4;
	add.s64 	%rd46, %rd1, %rd45;
	ld.global.u32 	%r146, [%rd46];
	or.b32  	%r657, %r650, 1;
	or.b32  	%r658, %r653, %r657;
	mul.wide.u32 	%rd47, %r658, 4;
	add.s64 	%rd48, %rd1, %rd47;
	ld.global.u32 	%r139, [%rd48];
	or.b32  	%r659, %r655, %r657;
	mul.wide.u32 	%rd49, %r659, 4;
	add.s64 	%rd50, %rd1, %rd49;
	ld.global.u32 	%r147, [%rd50];
	or.b32  	%r660, %r650, 2;
	or.b32  	%r661, %r653, %r660;
	mul.wide.u32 	%rd51, %r661, 4;
	add.s64 	%rd52, %rd1, %rd51;
	ld.global.u32 	%r154, [%rd52];
	or.b32  	%r662, %r655, %r660;
	mul.wide.u32 	%rd53, %r662, 4;
	add.s64 	%rd54, %rd1, %rd53;
	ld.global.u32 	%r162, [%rd54];
	or.b32  	%r663, %r650, 3;
	or.b32  	%r664, %r653, %r663;
	mul.wide.u32 	%rd55, %r664, 4;
	add.s64 	%rd56, %rd1, %rd55;
	ld.global.u32 	%r155, [%rd56];
	or.b32  	%r665, %r655, %r663;
	mul.wide.u32 	%rd57, %r665, 4;
	add.s64 	%rd58, %rd1, %rd57;
	ld.global.u32 	%r163, [%rd58];
	or.b32  	%r666, %r650, 4;
	or.b32  	%r667, %r653, %r666;
	mul.wide.u32 	%rd59, %r667, 4;
	add.s64 	%rd60, %rd1, %rd59;
	ld.global.u32 	%r170, [%rd60];
	or.b32  	%r668, %r655, %r666;
	mul.wide.u32 	%rd61, %r668, 4;
	add.s64 	%rd62, %rd1, %rd61;
	ld.global.u32 	%r178, [%rd62];
	or.b32  	%r669, %r650, 5;
	or.b32  	%r670, %r653, %r669;
	mul.wide.u32 	%rd63, %r670, 4;
	add.s64 	%rd64, %rd1, %rd63;
	ld.global.u32 	%r171, [%rd64];
	or.b32  	%r671, %r655, %r669;
	mul.wide.u32 	%rd65, %r671, 4;
	add.s64 	%rd66, %rd1, %rd65;
	ld.global.u32 	%r179, [%rd66];
	or.b32  	%r672, %r650, 6;
	or.b32  	%r673, %r653, %r672;
	mul.wide.u32 	%rd67, %r673, 4;
	add.s64 	%rd68, %rd1, %rd67;
	ld.global.u32 	%r186, [%rd68];
	or.b32  	%r674, %r655, %r672;
	mul.wide.u32 	%rd69, %r674, 4;
	add.s64 	%rd70, %rd1, %rd69;
	ld.global.u32 	%r194, [%rd70];
	or.b32  	%r675, %r650, 7;
	or.b32  	%r676, %r653, %r675;
	mul.wide.u32 	%rd71, %r676, 4;
	add.s64 	%rd72, %rd1, %rd71;
	ld.global.u32 	%r187, [%rd72];
	or.b32  	%r677, %r655, %r675;
	mul.wide.u32 	%rd73, %r677, 4;
	add.s64 	%rd74, %rd1, %rd73;
	ld.global.u32 	%r195, [%rd74];
	or.b32  	%r678, %r650, 8;
	or.b32  	%r679, %r653, %r678;
	mul.wide.u32 	%rd75, %r679, 4;
	add.s64 	%rd76, %rd1, %rd75;
	ld.global.u32 	%r202, [%rd76];
	or.b32  	%r680, %r655, %r678;
	mul.wide.u32 	%rd77, %r680, 4;
	add.s64 	%rd78, %rd1, %rd77;
	ld.global.u32 	%r210, [%rd78];
	or.b32  	%r681, %r650, 9;
	or.b32  	%r682, %r653, %r681;
	mul.wide.u32 	%rd79, %r682, 4;
	add.s64 	%rd80, %rd1, %rd79;
	ld.global.u32 	%r203, [%rd80];
	or.b32  	%r683, %r655, %r681;
	mul.wide.u32 	%rd81, %r683, 4;
	add.s64 	%rd82, %rd1, %rd81;
	ld.global.u32 	%r211, [%rd82];
	or.b32  	%r684, %r650, 10;
	or.b32  	%r685, %r653, %r684;
	mul.wide.u32 	%rd83, %r685, 4;
	add.s64 	%rd84, %rd1, %rd83;
	ld.global.u32 	%r218, [%rd84];
	or.b32  	%r686, %r655, %r684;
	mul.wide.u32 	%rd85, %r686, 4;
	add.s64 	%rd86, %rd1, %rd85;
	ld.global.u32 	%r226, [%rd86];
	or.b32  	%r687, %r650, 11;
	or.b32  	%r688, %r653, %r687;
	mul.wide.u32 	%rd87, %r688, 4;
	add.s64 	%rd88, %rd1, %rd87;
	ld.global.u32 	%r219, [%rd88];
	or.b32  	%r689, %r655, %r687;
	mul.wide.u32 	%rd89, %r689, 4;
	add.s64 	%rd90, %rd1, %rd89;
	ld.global.u32 	%r227, [%rd90];
	or.b32  	%r690, %r650, 12;
	or.b32  	%r691, %r653, %r690;
	mul.wide.u32 	%rd91, %r691, 4;
	add.s64 	%rd92, %rd1, %rd91;
	ld.global.u32 	%r234, [%rd92];
	or.b32  	%r692, %r655, %r690;
	mul.wide.u32 	%rd93, %r692, 4;
	add.s64 	%rd94, %rd1, %rd93;
	ld.global.u32 	%r242, [%rd94];
	or.b32  	%r693, %r650, 13;
	or.b32  	%r694, %r653, %r693;
	mul.wide.u32 	%rd95, %r694, 4;
	add.s64 	%rd96, %rd1, %rd95;
	ld.global.u32 	%r235, [%rd96];
	or.b32  	%r695, %r655, %r693;
	mul.wide.u32 	%rd97, %r695, 4;
	add.s64 	%rd98, %rd1, %rd97;
	ld.global.u32 	%r243, [%rd98];
	or.b32  	%r696, %r650, 14;
	or.b32  	%r697, %r653, %r696;
	mul.wide.u32 	%rd99, %r697, 4;
	add.s64 	%rd100, %rd1, %rd99;
	ld.global.u32 	%r250, [%rd100];
	or.b32  	%r698, %r655, %r696;
	mul.wide.u32 	%rd101, %r698, 4;
	add.s64 	%rd102, %rd1, %rd101;
	ld.global.u32 	%r258, [%rd102];
	or.b32  	%r699, %r650, 15;
	or.b32  	%r700, %r653, %r699;
	mul.wide.u32 	%rd103, %r700, 4;
	add.s64 	%rd104, %rd1, %rd103;
	ld.global.u32 	%r251, [%rd104];
	or.b32  	%r701, %r655, %r699;
	mul.wide.u32 	%rd105, %r701, 4;
	add.s64 	%rd106, %rd1, %rd105;
	ld.global.u32 	%r259, [%rd106];
	or.b32  	%r702, %r650, 16;
	or.b32  	%r703, %r653, %r702;
	mul.wide.u32 	%rd107, %r703, 4;
	add.s64 	%rd108, %rd1, %rd107;
	ld.global.u32 	%r266, [%rd108];
	or.b32  	%r704, %r655, %r702;
	mul.wide.u32 	%rd109, %r704, 4;
	add.s64 	%rd110, %rd1, %rd109;
	ld.global.u32 	%r274, [%rd110];
	or.b32  	%r705, %r650, 17;
	or.b32  	%r706, %r653, %r705;
	mul.wide.u32 	%rd111, %r706, 4;
	add.s64 	%rd112, %rd1, %rd111;
	ld.global.u32 	%r267, [%rd112];
	or.b32  	%r707, %r655, %r705;
	mul.wide.u32 	%rd113, %r707, 4;
	add.s64 	%rd114, %rd1, %rd113;
	ld.global.u32 	%r275, [%rd114];
	or.b32  	%r708, %r650, 18;
	or.b32  	%r709, %r653, %r708;
	mul.wide.u32 	%rd115, %r709, 4;
	add.s64 	%rd116, %rd1, %rd115;
	ld.global.u32 	%r282, [%rd116];
	or.b32  	%r710, %r655, %r708;
	mul.wide.u32 	%rd117, %r710, 4;
	add.s64 	%rd118, %rd1, %rd117;
	ld.global.u32 	%r290, [%rd118];
	or.b32  	%r711, %r650, 19;
	or.b32  	%r712, %r653, %r711;
	mul.wide.u32 	%rd119, %r712, 4;
	add.s64 	%rd120, %rd1, %rd119;
	ld.global.u32 	%r283, [%rd120];
	or.b32  	%r713, %r655, %r711;
	mul.wide.u32 	%rd121, %r713, 4;
	add.s64 	%rd122, %rd1, %rd121;
	ld.global.u32 	%r291, [%rd122];
	or.b32  	%r714, %r650, 20;
	or.b32  	%r715, %r653, %r714;
	mul.wide.u32 	%rd123, %r715, 4;
	add.s64 	%rd124, %rd1, %rd123;
	ld.global.u32 	%r298, [%rd124];
	or.b32  	%r716, %r655, %r714;
	mul.wide.u32 	%rd125, %r716, 4;
	add.s64 	%rd126, %rd1, %rd125;
	ld.global.u32 	%r306, [%rd126];
	or.b32  	%r717, %r650, 21;
	or.b32  	%r718, %r653, %r717;
	mul.wide.u32 	%rd127, %r718, 4;
	add.s64 	%rd128, %rd1, %rd127;
	ld.global.u32 	%r299, [%rd128];
	or.b32  	%r719, %r655, %r717;
	mul.wide.u32 	%rd129, %r719, 4;
	add.s64 	%rd130, %rd1, %rd129;
	ld.global.u32 	%r307, [%rd130];
	or.b32  	%r720, %r650, 22;
	or.b32  	%r721, %r653, %r720;
	mul.wide.u32 	%rd131, %r721, 4;
	add.s64 	%rd132, %rd1, %rd131;
	ld.global.u32 	%r314, [%rd132];
	or.b32  	%r722, %r655, %r720;
	mul.wide.u32 	%rd133, %r722, 4;
	add.s64 	%rd134, %rd1, %rd133;
	ld.global.u32 	%r322, [%rd134];
	or.b32  	%r723, %r650, 23;
	or.b32  	%r724, %r653, %r723;
	mul.wide.u32 	%rd135, %r724, 4;
	add.s64 	%rd136, %rd1, %rd135;
	ld.global.u32 	%r315, [%rd136];
	or.b32  	%r725, %r655, %r723;
	mul.wide.u32 	%rd137, %r725, 4;
	add.s64 	%rd138, %rd1, %rd137;
	ld.global.u32 	%r323, [%rd138];
	or.b32  	%r726, %r650, 24;
	or.b32  	%r727, %r653, %r726;
	mul.wide.u32 	%rd139, %r727, 4;
	add.s64 	%rd140, %rd1, %rd139;
	ld.global.u32 	%r330, [%rd140];
	or.b32  	%r728, %r655, %r726;
	mul.wide.u32 	%rd141, %r728, 4;
	add.s64 	%rd142, %rd1, %rd141;
	ld.global.u32 	%r338, [%rd142];
	or.b32  	%r729, %r650, 25;
	or.b32  	%r730, %r653, %r729;
	mul.wide.u32 	%rd143, %r730, 4;
	add.s64 	%rd144, %rd1, %rd143;
	ld.global.u32 	%r331, [%rd144];
	or.b32  	%r731, %r655, %r729;
	mul.wide.u32 	%rd145, %r731, 4;
	add.s64 	%rd146, %rd1, %rd145;
	ld.global.u32 	%r339, [%rd146];
	or.b32  	%r732, %r650, 26;
	or.b32  	%r733, %r653, %r732;
	mul.wide.u32 	%rd147, %r733, 4;
	add.s64 	%rd148, %rd1, %rd147;
	ld.global.u32 	%r346, [%rd148];
	or.b32  	%r734, %r655, %r732;
	mul.wide.u32 	%rd149, %r734, 4;
	add.s64 	%rd150, %rd1, %rd149;
	ld.global.u32 	%r354, [%rd150];
	or.b32  	%r735, %r650, 27;
	or.b32  	%r736, %r653, %r735;
	mul.wide.u32 	%rd151, %r736, 4;
	add.s64 	%rd152, %rd1, %rd151;
	ld.global.u32 	%r347, [%rd152];
	or.b32  	%r737, %r655, %r735;
	mul.wide.u32 	%rd153, %r737, 4;
	add.s64 	%rd154, %rd1, %rd153;
	ld.global.u32 	%r355, [%rd154];
	or.b32  	%r738, %r650, 28;
	or.b32  	%r739, %r653, %r738;
	mul.wide.u32 	%rd155, %r739, 4;
	add.s64 	%rd156, %rd1, %rd155;
	ld.global.u32 	%r362, [%rd156];
	or.b32  	%r740, %r655, %r738;
	mul.wide.u32 	%rd157, %r740, 4;
	add.s64 	%rd158, %rd1, %rd157;
	ld.global.u32 	%r370, [%rd158];
	or.b32  	%r741, %r650, 29;
	or.b32  	%r742, %r653, %r741;
	mul.wide.u32 	%rd159, %r742, 4;
	add.s64 	%rd160, %rd1, %rd159;
	ld.global.u32 	%r363, [%rd160];
	or.b32  	%r743, %r655, %r741;
	mul.wide.u32 	%rd161, %r743, 4;
	add.s64 	%rd162, %rd1, %rd161;
	ld.global.u32 	%r371, [%rd162];
	or.b32  	%r744, %r650, 30;
	or.b32  	%r745, %r653, %r744;
	mul.wide.u32 	%rd163, %r745, 4;
	add.s64 	%rd164, %rd1, %rd163;
	ld.global.u32 	%r378, [%rd164];
	or.b32  	%r746, %r655, %r744;
	mul.wide.u32 	%rd165, %r746, 4;
	add.s64 	%rd166, %rd1, %rd165;
	ld.global.u32 	%r386, [%rd166];
	or.b32  	%r747, %r650, 31;
	or.b32  	%r748, %r653, %r747;
	mul.wide.u32 	%rd167, %r748, 4;
	add.s64 	%rd168, %rd1, %rd167;
	ld.global.u32 	%r379, [%rd168];
	or.b32  	%r749, %r655, %r747;
	mul.wide.u32 	%rd169, %r749, 4;
	add.s64 	%rd170, %rd1, %rd169;
	ld.global.u32 	%r387, [%rd170];
	mov.u32 	%r136, 21520;
	// begin inline asm
	prmt.b32 %r390, %r138, %r139, %r136;
	// end inline asm
	mov.u32 	%r140, 30258;
	// begin inline asm
	prmt.b32 %r391, %r138, %r139, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r398, %r146, %r147, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r399, %r146, %r147, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r406, %r154, %r155, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r407, %r154, %r155, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r414, %r162, %r163, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r415, %r162, %r163, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r422, %r170, %r171, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r423, %r170, %r171, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r430, %r178, %r179, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r431, %r178, %r179, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r438, %r186, %r187, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r439, %r186, %r187, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r446, %r194, %r195, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r447, %r194, %r195, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r454, %r202, %r203, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r455, %r202, %r203, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r462, %r210, %r211, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r463, %r210, %r211, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r470, %r218, %r219, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r471, %r218, %r219, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r478, %r226, %r227, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r479, %r226, %r227, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r486, %r234, %r235, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r487, %r234, %r235, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r494, %r242, %r243, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r495, %r242, %r243, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r502, %r250, %r251, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r503, %r250, %r251, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r510, %r258, %r259, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r511, %r258, %r259, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r518, %r266, %r267, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r519, %r266, %r267, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r526, %r274, %r275, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r527, %r274, %r275, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r534, %r282, %r283, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r535, %r282, %r283, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r542, %r290, %r291, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r543, %r290, %r291, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r550, %r298, %r299, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r551, %r298, %r299, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r558, %r306, %r307, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r559, %r306, %r307, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r566, %r314, %r315, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r567, %r314, %r315, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r574, %r322, %r323, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r575, %r322, %r323, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r582, %r330, %r331, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r583, %r330, %r331, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r590, %r338, %r339, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r591, %r338, %r339, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r598, %r346, %r347, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r599, %r346, %r347, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r606, %r354, %r355, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r607, %r354, %r355, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r614, %r362, %r363, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r615, %r362, %r363, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r622, %r370, %r371, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r623, %r370, %r371, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r630, %r378, %r379, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r631, %r378, %r379, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r638, %r386, %r387, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r639, %r386, %r387, %r140;
	// end inline asm
	mov.u32 	%r392, 25152;
	// begin inline asm
	prmt.b32 %r1132, %r390, %r391, %r392;
	// end inline asm
	mov.u32 	%r396, 29521;
	// begin inline asm
	prmt.b32 %r1138, %r390, %r391, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1650, %r398, %r399, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1656, %r398, %r399, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1164, %r406, %r407, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1170, %r406, %r407, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1682, %r414, %r415, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1688, %r414, %r415, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1196, %r422, %r423, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1202, %r422, %r423, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1714, %r430, %r431, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1720, %r430, %r431, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1228, %r438, %r439, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1234, %r438, %r439, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1746, %r446, %r447, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1752, %r446, %r447, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1260, %r454, %r455, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1266, %r454, %r455, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1778, %r462, %r463, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1784, %r462, %r463, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1292, %r470, %r471, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1298, %r470, %r471, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1810, %r478, %r479, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1816, %r478, %r479, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1324, %r486, %r487, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1330, %r486, %r487, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1842, %r494, %r495, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1848, %r494, %r495, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1356, %r502, %r503, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1362, %r502, %r503, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1874, %r510, %r511, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1880, %r510, %r511, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1388, %r518, %r519, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1394, %r518, %r519, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1906, %r526, %r527, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1912, %r526, %r527, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1420, %r534, %r535, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1426, %r534, %r535, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1938, %r542, %r543, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1944, %r542, %r543, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1452, %r550, %r551, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1458, %r550, %r551, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1970, %r558, %r559, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1976, %r558, %r559, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1484, %r566, %r567, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1490, %r566, %r567, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2002, %r574, %r575, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2008, %r574, %r575, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1516, %r582, %r583, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1522, %r582, %r583, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2034, %r590, %r591, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2040, %r590, %r591, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1548, %r598, %r599, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1554, %r598, %r599, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2066, %r606, %r607, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2072, %r606, %r607, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1580, %r614, %r615, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1586, %r614, %r615, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2098, %r622, %r623, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2104, %r622, %r623, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1612, %r630, %r631, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1618, %r630, %r631, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2130, %r638, %r639, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2136, %r638, %r639, %r396;
	// end inline asm
	shl.b32 	%r69, %r116, 13;
	shl.b32 	%r750, %r3, 8;
	shl.b32 	%r751, %r4, 2;
	and.b32  	%r752, %r751, 28;
	or.b32  	%r753, %r752, %r2;
	or.b32  	%r70, %r750, %r753;
	or.b32  	%r71, %r70, 128;
	or.b32  	%r72, %r753, 128;
	or.b32  	%r73, %r753, 129;
	or.b32  	%r74, %r753, 130;
	or.b32  	%r75, %r753, 131;
	shl.b32 	%r754, %r4, 4;
	and.b32  	%r755, %r754, 48;
	shl.b32 	%r756, %r1, 6;
	or.b32  	%r76, %r755, %r756;
	shr.u32 	%r77, %r4, 2;
	shl.b32 	%r757, %r4, 1;
	and.b32  	%r78, %r757, 6;
	mul.lo.s32 	%r79, %r1, 640;
	or.b32  	%r80, %r79, %r77;
	or.b32  	%r81, %r80, 8;
	and.b32  	%r758, %r4, 7;
	or.b32  	%r759, %r112, 640;
	or.b32  	%r760, %r112, 1280;
	or.b32  	%r761, %r112, 1920;
	shl.b32 	%r763, %r123, %r114;
	setp.gt.u32 	%p15, %r114, 31;
	selp.b32 	%r82, 0, %r763, %p15;
	min.u32 	%r83, %r113, 31;
	and.b32  	%r84, %r4, 1;
	and.b32  	%r85, %r4, 2;
	and.b32  	%r86, %r4, 4;
	shl.b32 	%r764, %r3, 14;
	shl.b32 	%r765, %r1, 21;
	shl.b32 	%r766, %r4, 16;
	and.b32  	%r767, %r766, 1572864;
	or.b32  	%r768, %r767, %r765;
	and.b32  	%r87, %r647, 64;
	shl.b32 	%r769, %r4, 3;
	and.b32  	%r88, %r769, 32;
	or.b32  	%r89, %r768, %r764;
	mul.lo.s32 	%r770, %r111, 257;
	add.s32 	%r771, %r753, %r770;
	mul.wide.u32 	%rd171, %r771, 4;
	mov.u64 	%rd172, shmem;
	add.s64 	%rd9, %rd172, %rd171;
	cvt.u64.u32 	%rd173, %r770;
	cvt.u64.u32 	%rd10, %r753;
	add.s64 	%rd174, %rd10, %rd173;
	shl.b64 	%rd175, %rd174, 2;
	add.s64 	%rd11, %rd172, %rd175;
	add.s32 	%r772, %r770, %r72;
	mul.wide.u32 	%rd176, %r772, 4;
	add.s64 	%rd12, %rd172, %rd176;
	add.s32 	%r773, %r770, %r73;
	mul.wide.u32 	%rd177, %r773, 4;
	add.s64 	%rd13, %rd172, %rd177;
	add.s32 	%r774, %r770, %r74;
	mul.wide.u32 	%rd178, %r774, 4;
	add.s64 	%rd14, %rd172, %rd178;
	add.s32 	%r775, %r770, %r75;
	mul.wide.u32 	%rd179, %r775, 4;
	add.s64 	%rd15, %rd172, %rd179;
	mul.lo.s32 	%r776, %r758, 20;
	add.s32 	%r777, %r776, %r112;
	mul.wide.u32 	%rd180, %r777, 4;
	add.s64 	%rd181, %rd172, 32896;
	add.s64 	%rd16, %rd181, %rd180;
	add.s32 	%r778, %r759, %r776;
	mul.wide.u32 	%rd182, %r778, 4;
	add.s64 	%rd17, %rd181, %rd182;
	add.s32 	%r779, %r760, %r776;
	mul.wide.u32 	%rd183, %r779, 4;
	add.s64 	%rd18, %rd181, %rd183;
	add.s32 	%r780, %r761, %r776;
	mul.wide.u32 	%rd184, %r780, 4;
	add.s64 	%rd19, %rd181, %rd184;
	add.s32 	%r781, %r776, 160;
	add.s32 	%r782, %r781, %r112;
	mul.wide.u32 	%rd185, %r782, 4;
	add.s64 	%rd20, %rd181, %rd185;
	add.s32 	%r783, %r759, %r781;
	mul.wide.u32 	%rd186, %r783, 4;
	add.s64 	%rd21, %rd181, %rd186;
	add.s32 	%r784, %r760, %r781;
	mul.wide.u32 	%rd187, %r784, 4;
	add.s64 	%rd22, %rd181, %rd187;
	add.s32 	%r785, %r761, %r781;
	mul.wide.u32 	%rd188, %r785, 4;
	add.s64 	%rd23, %rd181, %rd188;
	add.s32 	%r786, %r776, 320;
	add.s32 	%r787, %r786, %r112;
	mul.wide.u32 	%rd189, %r787, 4;
	add.s64 	%rd24, %rd181, %rd189;
	add.s32 	%r788, %r759, %r786;
	mul.wide.u32 	%rd190, %r788, 4;
	add.s64 	%rd25, %rd181, %rd190;
	add.s32 	%r789, %r760, %r786;
	mul.wide.u32 	%rd191, %r789, 4;
	add.s64 	%rd26, %rd181, %rd191;
	add.s32 	%r790, %r761, %r786;
	mul.wide.u32 	%rd192, %r790, 4;
	add.s64 	%rd27, %rd181, %rd192;
	or.b32  	%r791, %r4, 24;
	mul.lo.s32 	%r792, %r791, 20;
	add.s32 	%r793, %r792, %r112;
	mul.wide.u32 	%rd193, %r793, 4;
	add.s64 	%rd28, %rd181, %rd193;
	add.s32 	%r794, %r759, %r792;
	mul.wide.u32 	%rd194, %r794, 4;
	add.s64 	%rd29, %rd181, %rd194;
	add.s32 	%r795, %r760, %r792;
	mul.wide.u32 	%rd195, %r795, 4;
	add.s64 	%rd30, %rd181, %rd195;
	add.s32 	%r796, %r761, %r792;
	mul.wide.u32 	%rd196, %r796, 4;
	add.s64 	%rd31, %rd181, %rd196;
	and.b32  	%r90, %r754, 16;
	mov.pred 	%p69, 0;
$L__BB0_11:                             // %L10007
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_13 Depth 2
                                        //       Child Loop BB0_14 Depth 3
	add.s32 	%r797, %r2447, %r116;
	setp.ge.s32 	%p16, %r797, %r117;
	@%p16 bra 	$L__BB0_17;
// %bb.12:                              // %L10015.preheader
                                        //   in Loop: Header=BB0_11 Depth=1
	mov.u32 	%r1134, 0;
	mov.u32 	%r2448, %r1134;
	mov.u32 	%r2449, %r1134;
	mov.u32 	%r2450, %r1134;
	mov.u32 	%r2451, %r1134;
	mov.u32 	%r2452, %r1134;
	mov.u32 	%r2453, %r1134;
	mov.u32 	%r2454, %r1134;
$L__BB0_13:                             // %L10015
                                        //   Parent Loop BB0_11 Depth=1
                                        // =>  This Loop Header: Depth=2
                                        //       Child Loop BB0_14 Depth 3
	cvt.u32.u64 	%r800, %rd10;
	add.s32 	%r99, %r2448, %r2447;
	or.b32  	%r801, %r99, %r111;
	shl.b32 	%r802, %r801, 13;
	and.b32  	%r803, %r802, 536633344;
	or.b32  	%r804, %r70, %r803;
	add.s32 	%r805, %r804, %r69;
	shr.s32 	%r806, %r805, 31;
	shr.u32 	%r807, %r806, 3;
	add.s32 	%r808, %r805, %r807;
	shr.s32 	%r809, %r808, 29;
	setp.lt.s32 	%p17, %r805, 0;
	and.b32  	%r810, %r808, -536870912;
	setp.ne.s32 	%p18, %r810, %r805;
	and.pred  	%p19, %p17, %p18;
	selp.u32 	%r811, 1, 0, %p19;
	sub.s32 	%r812, %r811, %r809;
	shl.b32 	%r813, %r812, 29;
	or.b32  	%r814, %r805, 1;
	add.s32 	%r815, %r814, %r813;
	mul.wide.s32 	%rd197, %r815, 4;
	add.s64 	%rd198, %rd2, %rd197;
	ld.global.v4.u32 	{%r816, %r817, %r818, %r819}, [%rd198+-4];
	or.b32  	%r820, %r71, %r803;
	add.s32 	%r821, %r820, %r69;
	shr.s32 	%r822, %r821, 31;
	shr.u32 	%r823, %r822, 3;
	add.s32 	%r824, %r821, %r823;
	shr.u32 	%r825, %r824, 29;
	shr.u32 	%r826, %r821, 31;
	sub.s32 	%r827, %r826, %r825;
	shl.b32 	%r828, %r827, 29;
	or.b32  	%r829, %r821, 1;
	add.s32 	%r830, %r829, %r828;
	mul.wide.s32 	%rd199, %r830, 4;
	add.s64 	%rd200, %rd2, %rd199;
	ld.global.v4.u32 	{%r831, %r832, %r833, %r834}, [%rd200+-4];
	or.b32  	%r835, %r801, 4;
	shl.b32 	%r836, %r835, 13;
	and.b32  	%r837, %r836, 536666112;
	or.b32  	%r838, %r70, %r837;
	add.s32 	%r839, %r838, %r69;
	shr.s32 	%r840, %r839, 31;
	shr.u32 	%r841, %r840, 3;
	add.s32 	%r842, %r839, %r841;
	shr.s32 	%r843, %r842, 29;
	setp.lt.s32 	%p20, %r839, 0;
	and.b32  	%r844, %r842, -536870912;
	setp.ne.s32 	%p21, %r844, %r839;
	and.pred  	%p22, %p20, %p21;
	selp.u32 	%r845, 1, 0, %p22;
	sub.s32 	%r846, %r845, %r843;
	shl.b32 	%r847, %r846, 29;
	or.b32  	%r848, %r839, 1;
	add.s32 	%r849, %r848, %r847;
	mul.wide.s32 	%rd201, %r849, 4;
	add.s64 	%rd202, %rd2, %rd201;
	ld.global.v4.u32 	{%r850, %r851, %r852, %r853}, [%rd202+-4];
	or.b32  	%r854, %r71, %r837;
	add.s32 	%r855, %r854, %r69;
	shr.s32 	%r856, %r855, 31;
	shr.u32 	%r857, %r856, 3;
	add.s32 	%r858, %r855, %r857;
	shr.u32 	%r859, %r858, 29;
	shr.u32 	%r860, %r855, 31;
	sub.s32 	%r861, %r860, %r859;
	shl.b32 	%r862, %r861, 29;
	or.b32  	%r863, %r855, 1;
	add.s32 	%r864, %r863, %r862;
	mul.wide.s32 	%rd203, %r864, 4;
	add.s64 	%rd204, %rd2, %rd203;
	ld.global.v4.u32 	{%r865, %r866, %r867, %r868}, [%rd204+-4];
	or.b32  	%r869, %r801, 8;
	shl.b32 	%r870, %r869, 13;
	and.b32  	%r871, %r870, 536698880;
	or.b32  	%r872, %r70, %r871;
	add.s32 	%r873, %r872, %r69;
	shr.s32 	%r874, %r873, 31;
	shr.u32 	%r875, %r874, 3;
	add.s32 	%r876, %r873, %r875;
	shr.s32 	%r877, %r876, 29;
	setp.lt.s32 	%p23, %r873, 0;
	and.b32  	%r878, %r876, -536870912;
	setp.ne.s32 	%p24, %r878, %r873;
	and.pred  	%p25, %p23, %p24;
	selp.u32 	%r879, 1, 0, %p25;
	sub.s32 	%r880, %r879, %r877;
	shl.b32 	%r881, %r880, 29;
	or.b32  	%r882, %r873, 1;
	add.s32 	%r883, %r882, %r881;
	mul.wide.s32 	%rd205, %r883, 4;
	add.s64 	%rd206, %rd2, %rd205;
	ld.global.v4.u32 	{%r884, %r885, %r886, %r887}, [%rd206+-4];
	or.b32  	%r888, %r71, %r871;
	add.s32 	%r889, %r888, %r69;
	shr.s32 	%r890, %r889, 31;
	shr.u32 	%r891, %r890, 3;
	add.s32 	%r892, %r889, %r891;
	shr.u32 	%r893, %r892, 29;
	shr.u32 	%r894, %r889, 31;
	sub.s32 	%r895, %r894, %r893;
	shl.b32 	%r896, %r895, 29;
	or.b32  	%r897, %r889, 1;
	add.s32 	%r898, %r897, %r896;
	mul.wide.s32 	%rd207, %r898, 4;
	add.s64 	%rd208, %rd2, %rd207;
	ld.global.v4.u32 	{%r899, %r900, %r901, %r902}, [%rd208+-4];
	or.b32  	%r903, %r801, 12;
	shl.b32 	%r904, %r903, 13;
	and.b32  	%r905, %r904, 536731648;
	or.b32  	%r906, %r70, %r905;
	add.s32 	%r907, %r906, %r69;
	shr.s32 	%r908, %r907, 31;
	shr.u32 	%r909, %r908, 3;
	add.s32 	%r910, %r907, %r909;
	shr.s32 	%r911, %r910, 29;
	setp.lt.s32 	%p26, %r907, 0;
	and.b32  	%r912, %r910, -536870912;
	setp.ne.s32 	%p27, %r912, %r907;
	and.pred  	%p28, %p26, %p27;
	selp.u32 	%r913, 1, 0, %p28;
	sub.s32 	%r914, %r913, %r911;
	shl.b32 	%r915, %r914, 29;
	or.b32  	%r916, %r907, 1;
	add.s32 	%r917, %r916, %r915;
	mul.wide.s32 	%rd209, %r917, 4;
	add.s64 	%rd210, %rd2, %rd209;
	ld.global.v4.u32 	{%r918, %r919, %r920, %r921}, [%rd210+-4];
	or.b32  	%r922, %r71, %r905;
	add.s32 	%r923, %r922, %r69;
	shr.s32 	%r924, %r923, 31;
	shr.u32 	%r925, %r924, 3;
	add.s32 	%r926, %r923, %r925;
	shr.u32 	%r927, %r926, 29;
	shr.u32 	%r928, %r923, 31;
	sub.s32 	%r929, %r928, %r927;
	shl.b32 	%r930, %r929, 29;
	or.b32  	%r931, %r923, 1;
	add.s32 	%r932, %r931, %r930;
	mul.wide.s32 	%rd211, %r932, 4;
	add.s64 	%rd212, %rd2, %rd211;
	ld.global.v4.u32 	{%r933, %r934, %r935, %r936}, [%rd212+-4];
	or.b32  	%r937, %r801, 16;
	shl.b32 	%r938, %r937, 13;
	and.b32  	%r939, %r938, 536764416;
	or.b32  	%r940, %r70, %r939;
	add.s32 	%r941, %r940, %r69;
	shr.s32 	%r942, %r941, 31;
	shr.u32 	%r943, %r942, 3;
	add.s32 	%r944, %r941, %r943;
	shr.s32 	%r945, %r944, 29;
	setp.lt.s32 	%p29, %r941, 0;
	and.b32  	%r946, %r944, -536870912;
	setp.ne.s32 	%p30, %r946, %r941;
	and.pred  	%p31, %p29, %p30;
	selp.u32 	%r947, 1, 0, %p31;
	sub.s32 	%r948, %r947, %r945;
	shl.b32 	%r949, %r948, 29;
	or.b32  	%r950, %r941, 1;
	add.s32 	%r951, %r950, %r949;
	mul.wide.s32 	%rd213, %r951, 4;
	add.s64 	%rd214, %rd2, %rd213;
	ld.global.v4.u32 	{%r952, %r953, %r954, %r955}, [%rd214+-4];
	or.b32  	%r956, %r71, %r939;
	add.s32 	%r957, %r956, %r69;
	shr.s32 	%r958, %r957, 31;
	shr.u32 	%r959, %r958, 3;
	add.s32 	%r960, %r957, %r959;
	shr.u32 	%r961, %r960, 29;
	shr.u32 	%r962, %r957, 31;
	sub.s32 	%r963, %r962, %r961;
	shl.b32 	%r964, %r963, 29;
	or.b32  	%r965, %r957, 1;
	add.s32 	%r966, %r965, %r964;
	mul.wide.s32 	%rd215, %r966, 4;
	add.s64 	%rd216, %rd2, %rd215;
	ld.global.v4.u32 	{%r967, %r968, %r969, %r970}, [%rd216+-4];
	or.b32  	%r971, %r801, 20;
	shl.b32 	%r972, %r971, 13;
	and.b32  	%r973, %r972, 536797184;
	or.b32  	%r974, %r70, %r973;
	add.s32 	%r975, %r974, %r69;
	shr.s32 	%r976, %r975, 31;
	shr.u32 	%r977, %r976, 3;
	add.s32 	%r978, %r975, %r977;
	shr.s32 	%r979, %r978, 29;
	setp.lt.s32 	%p32, %r975, 0;
	and.b32  	%r980, %r978, -536870912;
	setp.ne.s32 	%p33, %r980, %r975;
	and.pred  	%p34, %p32, %p33;
	selp.u32 	%r981, 1, 0, %p34;
	sub.s32 	%r982, %r981, %r979;
	shl.b32 	%r983, %r982, 29;
	or.b32  	%r984, %r975, 1;
	add.s32 	%r985, %r984, %r983;
	mul.wide.s32 	%rd217, %r985, 4;
	add.s64 	%rd218, %rd2, %rd217;
	ld.global.v4.u32 	{%r986, %r987, %r988, %r989}, [%rd218+-4];
	or.b32  	%r990, %r71, %r973;
	add.s32 	%r991, %r990, %r69;
	shr.s32 	%r992, %r991, 31;
	shr.u32 	%r993, %r992, 3;
	add.s32 	%r994, %r991, %r993;
	shr.u32 	%r995, %r994, 29;
	shr.u32 	%r996, %r991, 31;
	sub.s32 	%r997, %r996, %r995;
	shl.b32 	%r998, %r997, 29;
	or.b32  	%r999, %r991, 1;
	add.s32 	%r1000, %r999, %r998;
	mul.wide.s32 	%rd219, %r1000, 4;
	add.s64 	%rd220, %rd2, %rd219;
	ld.global.v4.u32 	{%r1001, %r1002, %r1003, %r1004}, [%rd220+-4];
	or.b32  	%r1005, %r801, 24;
	shl.b32 	%r1006, %r1005, 13;
	and.b32  	%r1007, %r1006, 536829952;
	or.b32  	%r1008, %r70, %r1007;
	add.s32 	%r1009, %r1008, %r69;
	shr.s32 	%r1010, %r1009, 31;
	shr.u32 	%r1011, %r1010, 3;
	add.s32 	%r1012, %r1009, %r1011;
	shr.s32 	%r1013, %r1012, 29;
	setp.lt.s32 	%p35, %r1009, 0;
	and.b32  	%r1014, %r1012, -536870912;
	setp.ne.s32 	%p36, %r1014, %r1009;
	and.pred  	%p37, %p35, %p36;
	selp.u32 	%r1015, 1, 0, %p37;
	sub.s32 	%r1016, %r1015, %r1013;
	shl.b32 	%r1017, %r1016, 29;
	or.b32  	%r1018, %r1009, 1;
	add.s32 	%r1019, %r1018, %r1017;
	mul.wide.s32 	%rd221, %r1019, 4;
	add.s64 	%rd222, %rd2, %rd221;
	ld.global.v4.u32 	{%r1020, %r1021, %r1022, %r1023}, [%rd222+-4];
	or.b32  	%r1024, %r71, %r1007;
	add.s32 	%r1025, %r1024, %r69;
	shr.s32 	%r1026, %r1025, 31;
	shr.u32 	%r1027, %r1026, 3;
	add.s32 	%r1028, %r1025, %r1027;
	shr.u32 	%r1029, %r1028, 29;
	shr.u32 	%r1030, %r1025, 31;
	sub.s32 	%r1031, %r1030, %r1029;
	shl.b32 	%r1032, %r1031, 29;
	or.b32  	%r1033, %r1025, 1;
	add.s32 	%r1034, %r1033, %r1032;
	mul.wide.s32 	%rd223, %r1034, 4;
	add.s64 	%rd224, %rd2, %rd223;
	ld.global.v4.u32 	{%r1035, %r1036, %r1037, %r1038}, [%rd224+-4];
	or.b32  	%r1039, %r801, 28;
	shl.b32 	%r1040, %r1039, 13;
	and.b32  	%r1041, %r1040, 536862720;
	or.b32  	%r1042, %r70, %r1041;
	add.s32 	%r1043, %r1042, %r69;
	shr.s32 	%r1044, %r1043, 31;
	shr.u32 	%r1045, %r1044, 3;
	add.s32 	%r1046, %r1043, %r1045;
	shr.s32 	%r1047, %r1046, 29;
	setp.lt.s32 	%p38, %r1043, 0;
	and.b32  	%r1048, %r1046, -536870912;
	setp.ne.s32 	%p39, %r1048, %r1043;
	and.pred  	%p40, %p38, %p39;
	selp.u32 	%r1049, 1, 0, %p40;
	sub.s32 	%r1050, %r1049, %r1047;
	shl.b32 	%r1051, %r1050, 29;
	or.b32  	%r1052, %r1043, 1;
	add.s32 	%r1053, %r1052, %r1051;
	mul.wide.s32 	%rd225, %r1053, 4;
	add.s64 	%rd226, %rd2, %rd225;
	ld.global.v4.u32 	{%r1054, %r1055, %r1056, %r1057}, [%rd226+-4];
	or.b32  	%r1058, %r71, %r1041;
	add.s32 	%r1059, %r1058, %r69;
	shr.s32 	%r1060, %r1059, 31;
	shr.u32 	%r1061, %r1060, 3;
	add.s32 	%r1062, %r1059, %r1061;
	shr.u32 	%r1063, %r1062, 29;
	shr.u32 	%r1064, %r1059, 31;
	sub.s32 	%r1065, %r1064, %r1063;
	shl.b32 	%r1066, %r1065, 29;
	or.b32  	%r1067, %r1059, 1;
	add.s32 	%r1068, %r1067, %r1066;
	mul.wide.s32 	%rd227, %r1068, 4;
	add.s64 	%rd228, %rd2, %rd227;
	ld.global.v4.u32 	{%r1069, %r1070, %r1071, %r1072}, [%rd228+-4];
	st.shared.u32 	[%rd9], %r816;
	st.shared.u32 	[%rd11+4], %r817;
	st.shared.u32 	[%rd11+8], %r818;
	st.shared.u32 	[%rd11+12], %r819;
	st.shared.u32 	[%rd12], %r831;
	st.shared.u32 	[%rd13], %r832;
	st.shared.u32 	[%rd14], %r833;
	st.shared.u32 	[%rd15], %r834;
	and.b32  	%r1073, %r835, 7;
	mul.lo.s32 	%r1074, %r1073, 257;
	add.s32 	%r1075, %r800, %r1074;
	mul.wide.u32 	%rd229, %r1075, 4;
	add.s64 	%rd231, %rd172, %rd229;
	st.shared.u32 	[%rd231], %r850;
	cvt.u64.u32 	%rd232, %r1074;
	add.s64 	%rd233, %rd10, %rd232;
	shl.b64 	%rd234, %rd233, 2;
	add.s64 	%rd235, %rd172, %rd234;
	st.shared.u32 	[%rd235+4], %r851;
	st.shared.u32 	[%rd235+8], %r852;
	st.shared.u32 	[%rd235+12], %r853;
	add.s32 	%r1076, %r1074, %r72;
	mul.wide.u32 	%rd236, %r1076, 4;
	add.s64 	%rd237, %rd172, %rd236;
	st.shared.u32 	[%rd237], %r865;
	add.s32 	%r1077, %r1074, %r73;
	mul.wide.u32 	%rd238, %r1077, 4;
	add.s64 	%rd239, %rd172, %rd238;
	st.shared.u32 	[%rd239], %r866;
	add.s32 	%r1078, %r1074, %r74;
	mul.wide.u32 	%rd240, %r1078, 4;
	add.s64 	%rd241, %rd172, %rd240;
	st.shared.u32 	[%rd241], %r867;
	add.s32 	%r1079, %r1074, %r75;
	mul.wide.u32 	%rd242, %r1079, 4;
	add.s64 	%rd243, %rd172, %rd242;
	st.shared.u32 	[%rd243], %r868;
	and.b32  	%r1080, %r869, 11;
	mul.lo.s32 	%r1081, %r1080, 257;
	add.s32 	%r1082, %r800, %r1081;
	mul.wide.u32 	%rd244, %r1082, 4;
	add.s64 	%rd245, %rd172, %rd244;
	st.shared.u32 	[%rd245], %r884;
	cvt.u64.u32 	%rd246, %r1081;
	add.s64 	%rd247, %rd10, %rd246;
	shl.b64 	%rd248, %rd247, 2;
	add.s64 	%rd249, %rd172, %rd248;
	st.shared.u32 	[%rd249+4], %r885;
	st.shared.u32 	[%rd249+8], %r886;
	st.shared.u32 	[%rd249+12], %r887;
	add.s32 	%r1083, %r1081, %r72;
	mul.wide.u32 	%rd250, %r1083, 4;
	add.s64 	%rd251, %rd172, %rd250;
	st.shared.u32 	[%rd251], %r899;
	add.s32 	%r1084, %r1081, %r73;
	mul.wide.u32 	%rd252, %r1084, 4;
	add.s64 	%rd253, %rd172, %rd252;
	st.shared.u32 	[%rd253], %r900;
	add.s32 	%r1085, %r1081, %r74;
	mul.wide.u32 	%rd254, %r1085, 4;
	add.s64 	%rd255, %rd172, %rd254;
	st.shared.u32 	[%rd255], %r901;
	add.s32 	%r1086, %r1081, %r75;
	mul.wide.u32 	%rd256, %r1086, 4;
	add.s64 	%rd257, %rd172, %rd256;
	st.shared.u32 	[%rd257], %r902;
	and.b32  	%r1087, %r903, 15;
	mul.lo.s32 	%r1088, %r1087, 257;
	add.s32 	%r1089, %r800, %r1088;
	mul.wide.u32 	%rd258, %r1089, 4;
	add.s64 	%rd259, %rd172, %rd258;
	st.shared.u32 	[%rd259], %r918;
	cvt.u64.u32 	%rd260, %r1088;
	add.s64 	%rd261, %rd10, %rd260;
	shl.b64 	%rd262, %rd261, 2;
	add.s64 	%rd263, %rd172, %rd262;
	st.shared.u32 	[%rd263+4], %r919;
	st.shared.u32 	[%rd263+8], %r920;
	st.shared.u32 	[%rd263+12], %r921;
	add.s32 	%r1090, %r1088, %r72;
	mul.wide.u32 	%rd264, %r1090, 4;
	add.s64 	%rd265, %rd172, %rd264;
	st.shared.u32 	[%rd265], %r933;
	add.s32 	%r1091, %r1088, %r73;
	mul.wide.u32 	%rd266, %r1091, 4;
	add.s64 	%rd267, %rd172, %rd266;
	st.shared.u32 	[%rd267], %r934;
	add.s32 	%r1092, %r1088, %r74;
	mul.wide.u32 	%rd268, %r1092, 4;
	add.s64 	%rd269, %rd172, %rd268;
	st.shared.u32 	[%rd269], %r935;
	add.s32 	%r1093, %r1088, %r75;
	mul.wide.u32 	%rd270, %r1093, 4;
	add.s64 	%rd271, %rd172, %rd270;
	st.shared.u32 	[%rd271], %r936;
	and.b32  	%r1094, %r937, 19;
	mul.lo.s32 	%r1095, %r1094, 257;
	add.s32 	%r1096, %r800, %r1095;
	mul.wide.u32 	%rd272, %r1096, 4;
	add.s64 	%rd273, %rd172, %rd272;
	st.shared.u32 	[%rd273], %r952;
	cvt.u64.u32 	%rd274, %r1095;
	add.s64 	%rd275, %rd10, %rd274;
	shl.b64 	%rd276, %rd275, 2;
	add.s64 	%rd277, %rd172, %rd276;
	st.shared.u32 	[%rd277+4], %r953;
	st.shared.u32 	[%rd277+8], %r954;
	st.shared.u32 	[%rd277+12], %r955;
	add.s32 	%r1097, %r1095, %r72;
	mul.wide.u32 	%rd278, %r1097, 4;
	add.s64 	%rd279, %rd172, %rd278;
	st.shared.u32 	[%rd279], %r967;
	add.s32 	%r1098, %r1095, %r73;
	mul.wide.u32 	%rd280, %r1098, 4;
	add.s64 	%rd281, %rd172, %rd280;
	st.shared.u32 	[%rd281], %r968;
	add.s32 	%r1099, %r1095, %r74;
	mul.wide.u32 	%rd282, %r1099, 4;
	add.s64 	%rd283, %rd172, %rd282;
	st.shared.u32 	[%rd283], %r969;
	add.s32 	%r1100, %r1095, %r75;
	mul.wide.u32 	%rd284, %r1100, 4;
	add.s64 	%rd285, %rd172, %rd284;
	st.shared.u32 	[%rd285], %r970;
	and.b32  	%r1101, %r971, 23;
	mul.lo.s32 	%r1102, %r1101, 257;
	add.s32 	%r1103, %r800, %r1102;
	mul.wide.u32 	%rd286, %r1103, 4;
	add.s64 	%rd287, %rd172, %rd286;
	st.shared.u32 	[%rd287], %r986;
	cvt.u64.u32 	%rd288, %r1102;
	add.s64 	%rd289, %rd10, %rd288;
	shl.b64 	%rd290, %rd289, 2;
	add.s64 	%rd291, %rd172, %rd290;
	st.shared.u32 	[%rd291+4], %r987;
	st.shared.u32 	[%rd291+8], %r988;
	st.shared.u32 	[%rd291+12], %r989;
	add.s32 	%r1104, %r1102, %r72;
	mul.wide.u32 	%rd292, %r1104, 4;
	add.s64 	%rd293, %rd172, %rd292;
	st.shared.u32 	[%rd293], %r1001;
	add.s32 	%r1105, %r1102, %r73;
	mul.wide.u32 	%rd294, %r1105, 4;
	add.s64 	%rd295, %rd172, %rd294;
	st.shared.u32 	[%rd295], %r1002;
	add.s32 	%r1106, %r1102, %r74;
	mul.wide.u32 	%rd296, %r1106, 4;
	add.s64 	%rd297, %rd172, %rd296;
	st.shared.u32 	[%rd297], %r1003;
	add.s32 	%r1107, %r1102, %r75;
	mul.wide.u32 	%rd298, %r1107, 4;
	add.s64 	%rd299, %rd172, %rd298;
	st.shared.u32 	[%rd299], %r1004;
	and.b32  	%r1108, %r1005, 27;
	mul.lo.s32 	%r1109, %r1108, 257;
	add.s32 	%r1110, %r800, %r1109;
	mul.wide.u32 	%rd300, %r1110, 4;
	add.s64 	%rd301, %rd172, %rd300;
	st.shared.u32 	[%rd301], %r1020;
	cvt.u64.u32 	%rd302, %r1109;
	add.s64 	%rd303, %rd10, %rd302;
	shl.b64 	%rd304, %rd303, 2;
	add.s64 	%rd305, %rd172, %rd304;
	st.shared.u32 	[%rd305+4], %r1021;
	st.shared.u32 	[%rd305+8], %r1022;
	st.shared.u32 	[%rd305+12], %r1023;
	add.s32 	%r1111, %r1109, %r72;
	mul.wide.u32 	%rd306, %r1111, 4;
	add.s64 	%rd307, %rd172, %rd306;
	st.shared.u32 	[%rd307], %r1035;
	add.s32 	%r1112, %r1109, %r73;
	mul.wide.u32 	%rd308, %r1112, 4;
	add.s64 	%rd309, %rd172, %rd308;
	st.shared.u32 	[%rd309], %r1036;
	add.s32 	%r1113, %r1109, %r74;
	mul.wide.u32 	%rd310, %r1113, 4;
	add.s64 	%rd311, %rd172, %rd310;
	st.shared.u32 	[%rd311], %r1037;
	add.s32 	%r1114, %r1109, %r75;
	mul.wide.u32 	%rd312, %r1114, 4;
	add.s64 	%rd313, %rd172, %rd312;
	st.shared.u32 	[%rd313], %r1038;
	and.b32  	%r1115, %r1039, 31;
	mul.lo.s32 	%r1116, %r1115, 257;
	add.s32 	%r1117, %r800, %r1116;
	mul.wide.u32 	%rd314, %r1117, 4;
	add.s64 	%rd315, %rd172, %rd314;
	st.shared.u32 	[%rd315], %r1054;
	cvt.u64.u32 	%rd316, %r1116;
	add.s64 	%rd317, %rd10, %rd316;
	shl.b64 	%rd318, %rd317, 2;
	add.s64 	%rd319, %rd172, %rd318;
	st.shared.u32 	[%rd319+4], %r1055;
	st.shared.u32 	[%rd319+8], %r1056;
	st.shared.u32 	[%rd319+12], %r1057;
	add.s32 	%r1118, %r1116, %r72;
	mul.wide.u32 	%rd320, %r1118, 4;
	add.s64 	%rd321, %rd172, %rd320;
	st.shared.u32 	[%rd321], %r1069;
	add.s32 	%r1119, %r1116, %r73;
	mul.wide.u32 	%rd322, %r1119, 4;
	add.s64 	%rd323, %rd172, %rd322;
	st.shared.u32 	[%rd323], %r1070;
	add.s32 	%r1120, %r1116, %r74;
	mul.wide.u32 	%rd324, %r1120, 4;
	add.s64 	%rd325, %rd172, %rd324;
	st.shared.u32 	[%rd325], %r1071;
	add.s32 	%r1121, %r1116, %r75;
	mul.wide.u32 	%rd326, %r1121, 4;
	add.s64 	%rd327, %rd172, %rd326;
	st.shared.u32 	[%rd327], %r1072;
	bar.sync 	0;
	mov.u32 	%r2455, %r1134;
$L__BB0_14:                             // %L21846
                                        //   Parent Loop BB0_11 Depth=1
                                        //     Parent Loop BB0_13 Depth=2
                                        // =>    This Inner Loop Header: Depth=3
	or.b32  	%r2158, %r2455, %r77;
	add.s32 	%r2159, %r99, %r2158;
	shr.s32 	%r2160, %r2159, 31;
	shr.u32 	%r2161, %r2160, 27;
	add.s32 	%r2162, %r2159, %r2161;
	and.b32  	%r2163, %r2162, -32;
	sub.s32 	%r2164, %r2159, %r2163;
	mad.lo.s32 	%r2165, %r2164, 257, %r76;
	mul.wide.s32 	%rd328, %r2165, 4;
	add.s64 	%rd330, %rd172, %rd328;
	ld.shared.u32 	%r1123, [%rd330];
	mov.u32 	%r1124, 134744072;
	mov.u32 	%r1125, 252645135;
	// begin inline asm
	lop3.b32 %r1122, %r1123, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2166, %r1122, 2021161080;
	xor.b32  	%r1133, %r2166, -2139062144;
	shr.u32 	%r1127, %r1123, 4;
	// begin inline asm
	lop3.b32 %r1126, %r1127, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2167, %r1126, 2021161080;
	xor.b32  	%r1139, %r2167, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1130, %r1131}, {%r1132}, {%r1133}, {%r1134, %r1134};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1136, %r1137}, {%r1138}, {%r1139}, {%r1134, %r1134};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1142, %r1143}, {%r1132}, {%r1139}, {%r1134, %r1134};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1148, %r1149}, {%r1138}, {%r1133}, {%r1142, %r1143};
	// end inline asm
	ld.shared.u32 	%r1155, [%rd330+4];
	// begin inline asm
	lop3.b32 %r1154, %r1155, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2168, %r1154, 2021161080;
	xor.b32  	%r1165, %r2168, -2139062144;
	shr.u32 	%r1159, %r1155, 4;
	// begin inline asm
	lop3.b32 %r1158, %r1159, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2169, %r1158, 2021161080;
	xor.b32  	%r1171, %r2169, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1162, %r1163}, {%r1164}, {%r1165}, {%r1130, %r1131};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1168, %r1169}, {%r1170}, {%r1171}, {%r1136, %r1137};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1174, %r1175}, {%r1164}, {%r1171}, {%r1148, %r1149};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1180, %r1181}, {%r1170}, {%r1165}, {%r1174, %r1175};
	// end inline asm
	ld.shared.u32 	%r1187, [%rd330+8];
	// begin inline asm
	lop3.b32 %r1186, %r1187, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2170, %r1186, 2021161080;
	xor.b32  	%r1197, %r2170, -2139062144;
	shr.u32 	%r1191, %r1187, 4;
	// begin inline asm
	lop3.b32 %r1190, %r1191, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2171, %r1190, 2021161080;
	xor.b32  	%r1203, %r2171, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1194, %r1195}, {%r1196}, {%r1197}, {%r1162, %r1163};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1200, %r1201}, {%r1202}, {%r1203}, {%r1168, %r1169};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1206, %r1207}, {%r1196}, {%r1203}, {%r1180, %r1181};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1212, %r1213}, {%r1202}, {%r1197}, {%r1206, %r1207};
	// end inline asm
	ld.shared.u32 	%r1219, [%rd330+12];
	// begin inline asm
	lop3.b32 %r1218, %r1219, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2172, %r1218, 2021161080;
	xor.b32  	%r1229, %r2172, -2139062144;
	shr.u32 	%r1223, %r1219, 4;
	// begin inline asm
	lop3.b32 %r1222, %r1223, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2173, %r1222, 2021161080;
	xor.b32  	%r1235, %r2173, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1226, %r1227}, {%r1228}, {%r1229}, {%r1194, %r1195};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1232, %r1233}, {%r1234}, {%r1235}, {%r1200, %r1201};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1238, %r1239}, {%r1228}, {%r1235}, {%r1212, %r1213};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1244, %r1245}, {%r1234}, {%r1229}, {%r1238, %r1239};
	// end inline asm
	ld.shared.u32 	%r1251, [%rd330+16];
	// begin inline asm
	lop3.b32 %r1250, %r1251, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2174, %r1250, 2021161080;
	xor.b32  	%r1261, %r2174, -2139062144;
	shr.u32 	%r1255, %r1251, 4;
	// begin inline asm
	lop3.b32 %r1254, %r1255, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2175, %r1254, 2021161080;
	xor.b32  	%r1267, %r2175, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1258, %r1259}, {%r1260}, {%r1261}, {%r1226, %r1227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1264, %r1265}, {%r1266}, {%r1267}, {%r1232, %r1233};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1270, %r1271}, {%r1260}, {%r1267}, {%r1244, %r1245};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1276, %r1277}, {%r1266}, {%r1261}, {%r1270, %r1271};
	// end inline asm
	ld.shared.u32 	%r1283, [%rd330+20];
	// begin inline asm
	lop3.b32 %r1282, %r1283, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2176, %r1282, 2021161080;
	xor.b32  	%r1293, %r2176, -2139062144;
	shr.u32 	%r1287, %r1283, 4;
	// begin inline asm
	lop3.b32 %r1286, %r1287, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2177, %r1286, 2021161080;
	xor.b32  	%r1299, %r2177, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1290, %r1291}, {%r1292}, {%r1293}, {%r1258, %r1259};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1296, %r1297}, {%r1298}, {%r1299}, {%r1264, %r1265};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1302, %r1303}, {%r1292}, {%r1299}, {%r1276, %r1277};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1308, %r1309}, {%r1298}, {%r1293}, {%r1302, %r1303};
	// end inline asm
	ld.shared.u32 	%r1315, [%rd330+24];
	// begin inline asm
	lop3.b32 %r1314, %r1315, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2178, %r1314, 2021161080;
	xor.b32  	%r1325, %r2178, -2139062144;
	shr.u32 	%r1319, %r1315, 4;
	// begin inline asm
	lop3.b32 %r1318, %r1319, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2179, %r1318, 2021161080;
	xor.b32  	%r1331, %r2179, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1322, %r1323}, {%r1324}, {%r1325}, {%r1290, %r1291};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1328, %r1329}, {%r1330}, {%r1331}, {%r1296, %r1297};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1334, %r1335}, {%r1324}, {%r1331}, {%r1308, %r1309};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1340, %r1341}, {%r1330}, {%r1325}, {%r1334, %r1335};
	// end inline asm
	ld.shared.u32 	%r1347, [%rd330+28];
	// begin inline asm
	lop3.b32 %r1346, %r1347, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2180, %r1346, 2021161080;
	xor.b32  	%r1357, %r2180, -2139062144;
	shr.u32 	%r1351, %r1347, 4;
	// begin inline asm
	lop3.b32 %r1350, %r1351, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2181, %r1350, 2021161080;
	xor.b32  	%r1363, %r2181, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1354, %r1355}, {%r1356}, {%r1357}, {%r1322, %r1323};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1360, %r1361}, {%r1362}, {%r1363}, {%r1328, %r1329};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1366, %r1367}, {%r1356}, {%r1363}, {%r1340, %r1341};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1372, %r1373}, {%r1362}, {%r1357}, {%r1366, %r1367};
	// end inline asm
	ld.shared.u32 	%r1379, [%rd330+32];
	// begin inline asm
	lop3.b32 %r1378, %r1379, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2182, %r1378, 2021161080;
	xor.b32  	%r1389, %r2182, -2139062144;
	shr.u32 	%r1383, %r1379, 4;
	// begin inline asm
	lop3.b32 %r1382, %r1383, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2183, %r1382, 2021161080;
	xor.b32  	%r1395, %r2183, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1386, %r1387}, {%r1388}, {%r1389}, {%r1354, %r1355};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1392, %r1393}, {%r1394}, {%r1395}, {%r1360, %r1361};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1398, %r1399}, {%r1388}, {%r1395}, {%r1372, %r1373};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1404, %r1405}, {%r1394}, {%r1389}, {%r1398, %r1399};
	// end inline asm
	ld.shared.u32 	%r1411, [%rd330+36];
	// begin inline asm
	lop3.b32 %r1410, %r1411, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2184, %r1410, 2021161080;
	xor.b32  	%r1421, %r2184, -2139062144;
	shr.u32 	%r1415, %r1411, 4;
	// begin inline asm
	lop3.b32 %r1414, %r1415, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2185, %r1414, 2021161080;
	xor.b32  	%r1427, %r2185, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1418, %r1419}, {%r1420}, {%r1421}, {%r1386, %r1387};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1424, %r1425}, {%r1426}, {%r1427}, {%r1392, %r1393};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1430, %r1431}, {%r1420}, {%r1427}, {%r1404, %r1405};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1436, %r1437}, {%r1426}, {%r1421}, {%r1430, %r1431};
	// end inline asm
	ld.shared.u32 	%r1443, [%rd330+40];
	// begin inline asm
	lop3.b32 %r1442, %r1443, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2186, %r1442, 2021161080;
	xor.b32  	%r1453, %r2186, -2139062144;
	shr.u32 	%r1447, %r1443, 4;
	// begin inline asm
	lop3.b32 %r1446, %r1447, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2187, %r1446, 2021161080;
	xor.b32  	%r1459, %r2187, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1450, %r1451}, {%r1452}, {%r1453}, {%r1418, %r1419};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1456, %r1457}, {%r1458}, {%r1459}, {%r1424, %r1425};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1462, %r1463}, {%r1452}, {%r1459}, {%r1436, %r1437};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1468, %r1469}, {%r1458}, {%r1453}, {%r1462, %r1463};
	// end inline asm
	ld.shared.u32 	%r1475, [%rd330+44];
	// begin inline asm
	lop3.b32 %r1474, %r1475, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2188, %r1474, 2021161080;
	xor.b32  	%r1485, %r2188, -2139062144;
	shr.u32 	%r1479, %r1475, 4;
	// begin inline asm
	lop3.b32 %r1478, %r1479, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2189, %r1478, 2021161080;
	xor.b32  	%r1491, %r2189, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1482, %r1483}, {%r1484}, {%r1485}, {%r1450, %r1451};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1488, %r1489}, {%r1490}, {%r1491}, {%r1456, %r1457};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1494, %r1495}, {%r1484}, {%r1491}, {%r1468, %r1469};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1500, %r1501}, {%r1490}, {%r1485}, {%r1494, %r1495};
	// end inline asm
	ld.shared.u32 	%r1507, [%rd330+48];
	// begin inline asm
	lop3.b32 %r1506, %r1507, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2190, %r1506, 2021161080;
	xor.b32  	%r1517, %r2190, -2139062144;
	shr.u32 	%r1511, %r1507, 4;
	// begin inline asm
	lop3.b32 %r1510, %r1511, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2191, %r1510, 2021161080;
	xor.b32  	%r1523, %r2191, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1514, %r1515}, {%r1516}, {%r1517}, {%r1482, %r1483};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1520, %r1521}, {%r1522}, {%r1523}, {%r1488, %r1489};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1526, %r1527}, {%r1516}, {%r1523}, {%r1500, %r1501};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1532, %r1533}, {%r1522}, {%r1517}, {%r1526, %r1527};
	// end inline asm
	ld.shared.u32 	%r1539, [%rd330+52];
	// begin inline asm
	lop3.b32 %r1538, %r1539, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2192, %r1538, 2021161080;
	xor.b32  	%r1549, %r2192, -2139062144;
	shr.u32 	%r1543, %r1539, 4;
	// begin inline asm
	lop3.b32 %r1542, %r1543, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2193, %r1542, 2021161080;
	xor.b32  	%r1555, %r2193, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1546, %r1547}, {%r1548}, {%r1549}, {%r1514, %r1515};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1552, %r1553}, {%r1554}, {%r1555}, {%r1520, %r1521};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1558, %r1559}, {%r1548}, {%r1555}, {%r1532, %r1533};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1564, %r1565}, {%r1554}, {%r1549}, {%r1558, %r1559};
	// end inline asm
	ld.shared.u32 	%r1571, [%rd330+56];
	// begin inline asm
	lop3.b32 %r1570, %r1571, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2194, %r1570, 2021161080;
	xor.b32  	%r1581, %r2194, -2139062144;
	shr.u32 	%r1575, %r1571, 4;
	// begin inline asm
	lop3.b32 %r1574, %r1575, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2195, %r1574, 2021161080;
	xor.b32  	%r1587, %r2195, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1578, %r1579}, {%r1580}, {%r1581}, {%r1546, %r1547};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1584, %r1585}, {%r1586}, {%r1587}, {%r1552, %r1553};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1590, %r1591}, {%r1580}, {%r1587}, {%r1564, %r1565};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1596, %r1597}, {%r1586}, {%r1581}, {%r1590, %r1591};
	// end inline asm
	ld.shared.u32 	%r1603, [%rd330+60];
	// begin inline asm
	lop3.b32 %r1602, %r1603, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2196, %r1602, 2021161080;
	xor.b32  	%r1613, %r2196, -2139062144;
	shr.u32 	%r1607, %r1603, 4;
	// begin inline asm
	lop3.b32 %r1606, %r1607, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2197, %r1606, 2021161080;
	xor.b32  	%r1619, %r2197, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1610, %r1611}, {%r1612}, {%r1613}, {%r1578, %r1579};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1616, %r1617}, {%r1618}, {%r1619}, {%r1584, %r1585};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1622, %r1623}, {%r1612}, {%r1619}, {%r1596, %r1597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1628, %r1629}, {%r1618}, {%r1613}, {%r1622, %r1623};
	// end inline asm
	sub.s32 	%r2198, %r1610, %r1616;
	add.s32 	%r2199, %r2198, 8;
	shr.s32 	%r1636, %r2199, 4;
	add.s32 	%r2200, %r1628, 8;
	shr.s32 	%r1635, %r2200, 4;
	sub.s32 	%r2201, %r1611, %r1617;
	add.s32 	%r2202, %r2201, 8;
	shr.s32 	%r1639, %r2202, 4;
	add.s32 	%r2203, %r1629, 8;
	shr.s32 	%r1638, %r2203, 4;
	// begin inline asm
	cvt.pack.sat.s16.s32 %r1634, %r1635, %r1636;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s16.s32 %r1637, %r1638, %r1639;
	// end inline asm
	or.b32  	%r2204, %r2455, %r78;
	mul.lo.s32 	%r2205, %r2204, 20;
	or.b32  	%r2206, %r2205, %r77;
	add.s32 	%r2207, %r2206, %r79;
	mul.wide.u32 	%rd331, %r2207, 4;
	add.s64 	%rd333, %rd181, %rd331;
	st.shared.u32 	[%rd333], %r1634;
	add.s32 	%r2208, %r2205, 20;
	add.s32 	%r2209, %r80, %r2208;
	mul.wide.u32 	%rd334, %r2209, 4;
	add.s64 	%rd335, %rd181, %rd334;
	st.shared.u32 	[%rd335], %r1637;
	ld.shared.u32 	%r1641, [%rd330];
	// begin inline asm
	lop3.b32 %r1640, %r1641, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2210, %r1640, 2021161080;
	xor.b32  	%r1651, %r2210, -2139062144;
	shr.u32 	%r1645, %r1641, 4;
	// begin inline asm
	lop3.b32 %r1644, %r1645, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2211, %r1644, 2021161080;
	xor.b32  	%r1657, %r2211, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1648, %r1649}, {%r1650}, {%r1651}, {%r1134, %r1134};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1654, %r1655}, {%r1656}, {%r1657}, {%r1134, %r1134};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1660, %r1661}, {%r1650}, {%r1657}, {%r1134, %r1134};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1666, %r1667}, {%r1656}, {%r1651}, {%r1660, %r1661};
	// end inline asm
	ld.shared.u32 	%r1673, [%rd330+4];
	// begin inline asm
	lop3.b32 %r1672, %r1673, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2212, %r1672, 2021161080;
	xor.b32  	%r1683, %r2212, -2139062144;
	shr.u32 	%r1677, %r1673, 4;
	// begin inline asm
	lop3.b32 %r1676, %r1677, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2213, %r1676, 2021161080;
	xor.b32  	%r1689, %r2213, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1680, %r1681}, {%r1682}, {%r1683}, {%r1648, %r1649};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1686, %r1687}, {%r1688}, {%r1689}, {%r1654, %r1655};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1692, %r1693}, {%r1682}, {%r1689}, {%r1666, %r1667};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1698, %r1699}, {%r1688}, {%r1683}, {%r1692, %r1693};
	// end inline asm
	ld.shared.u32 	%r1705, [%rd330+8];
	// begin inline asm
	lop3.b32 %r1704, %r1705, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2214, %r1704, 2021161080;
	xor.b32  	%r1715, %r2214, -2139062144;
	shr.u32 	%r1709, %r1705, 4;
	// begin inline asm
	lop3.b32 %r1708, %r1709, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2215, %r1708, 2021161080;
	xor.b32  	%r1721, %r2215, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1712, %r1713}, {%r1714}, {%r1715}, {%r1680, %r1681};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1718, %r1719}, {%r1720}, {%r1721}, {%r1686, %r1687};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1724, %r1725}, {%r1714}, {%r1721}, {%r1698, %r1699};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1730, %r1731}, {%r1720}, {%r1715}, {%r1724, %r1725};
	// end inline asm
	ld.shared.u32 	%r1737, [%rd330+12];
	// begin inline asm
	lop3.b32 %r1736, %r1737, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2216, %r1736, 2021161080;
	xor.b32  	%r1747, %r2216, -2139062144;
	shr.u32 	%r1741, %r1737, 4;
	// begin inline asm
	lop3.b32 %r1740, %r1741, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2217, %r1740, 2021161080;
	xor.b32  	%r1753, %r2217, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1744, %r1745}, {%r1746}, {%r1747}, {%r1712, %r1713};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1750, %r1751}, {%r1752}, {%r1753}, {%r1718, %r1719};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1756, %r1757}, {%r1746}, {%r1753}, {%r1730, %r1731};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1762, %r1763}, {%r1752}, {%r1747}, {%r1756, %r1757};
	// end inline asm
	ld.shared.u32 	%r1769, [%rd330+16];
	// begin inline asm
	lop3.b32 %r1768, %r1769, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2218, %r1768, 2021161080;
	xor.b32  	%r1779, %r2218, -2139062144;
	shr.u32 	%r1773, %r1769, 4;
	// begin inline asm
	lop3.b32 %r1772, %r1773, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2219, %r1772, 2021161080;
	xor.b32  	%r1785, %r2219, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1776, %r1777}, {%r1778}, {%r1779}, {%r1744, %r1745};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1782, %r1783}, {%r1784}, {%r1785}, {%r1750, %r1751};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1788, %r1789}, {%r1778}, {%r1785}, {%r1762, %r1763};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1794, %r1795}, {%r1784}, {%r1779}, {%r1788, %r1789};
	// end inline asm
	ld.shared.u32 	%r1801, [%rd330+20];
	// begin inline asm
	lop3.b32 %r1800, %r1801, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2220, %r1800, 2021161080;
	xor.b32  	%r1811, %r2220, -2139062144;
	shr.u32 	%r1805, %r1801, 4;
	// begin inline asm
	lop3.b32 %r1804, %r1805, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2221, %r1804, 2021161080;
	xor.b32  	%r1817, %r2221, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1808, %r1809}, {%r1810}, {%r1811}, {%r1776, %r1777};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1814, %r1815}, {%r1816}, {%r1817}, {%r1782, %r1783};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1820, %r1821}, {%r1810}, {%r1817}, {%r1794, %r1795};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1826, %r1827}, {%r1816}, {%r1811}, {%r1820, %r1821};
	// end inline asm
	ld.shared.u32 	%r1833, [%rd330+24];
	// begin inline asm
	lop3.b32 %r1832, %r1833, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2222, %r1832, 2021161080;
	xor.b32  	%r1843, %r2222, -2139062144;
	shr.u32 	%r1837, %r1833, 4;
	// begin inline asm
	lop3.b32 %r1836, %r1837, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2223, %r1836, 2021161080;
	xor.b32  	%r1849, %r2223, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1840, %r1841}, {%r1842}, {%r1843}, {%r1808, %r1809};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1846, %r1847}, {%r1848}, {%r1849}, {%r1814, %r1815};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1852, %r1853}, {%r1842}, {%r1849}, {%r1826, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1858, %r1859}, {%r1848}, {%r1843}, {%r1852, %r1853};
	// end inline asm
	ld.shared.u32 	%r1865, [%rd330+28];
	// begin inline asm
	lop3.b32 %r1864, %r1865, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2224, %r1864, 2021161080;
	xor.b32  	%r1875, %r2224, -2139062144;
	shr.u32 	%r1869, %r1865, 4;
	// begin inline asm
	lop3.b32 %r1868, %r1869, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2225, %r1868, 2021161080;
	xor.b32  	%r1881, %r2225, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1872, %r1873}, {%r1874}, {%r1875}, {%r1840, %r1841};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1878, %r1879}, {%r1880}, {%r1881}, {%r1846, %r1847};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1884, %r1885}, {%r1874}, {%r1881}, {%r1858, %r1859};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1890, %r1891}, {%r1880}, {%r1875}, {%r1884, %r1885};
	// end inline asm
	ld.shared.u32 	%r1897, [%rd330+32];
	// begin inline asm
	lop3.b32 %r1896, %r1897, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2226, %r1896, 2021161080;
	xor.b32  	%r1907, %r2226, -2139062144;
	shr.u32 	%r1901, %r1897, 4;
	// begin inline asm
	lop3.b32 %r1900, %r1901, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2227, %r1900, 2021161080;
	xor.b32  	%r1913, %r2227, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1904, %r1905}, {%r1906}, {%r1907}, {%r1872, %r1873};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1910, %r1911}, {%r1912}, {%r1913}, {%r1878, %r1879};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1916, %r1917}, {%r1906}, {%r1913}, {%r1890, %r1891};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1922, %r1923}, {%r1912}, {%r1907}, {%r1916, %r1917};
	// end inline asm
	ld.shared.u32 	%r1929, [%rd330+36];
	// begin inline asm
	lop3.b32 %r1928, %r1929, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2228, %r1928, 2021161080;
	xor.b32  	%r1939, %r2228, -2139062144;
	shr.u32 	%r1933, %r1929, 4;
	// begin inline asm
	lop3.b32 %r1932, %r1933, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2229, %r1932, 2021161080;
	xor.b32  	%r1945, %r2229, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1936, %r1937}, {%r1938}, {%r1939}, {%r1904, %r1905};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1942, %r1943}, {%r1944}, {%r1945}, {%r1910, %r1911};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1948, %r1949}, {%r1938}, {%r1945}, {%r1922, %r1923};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1954, %r1955}, {%r1944}, {%r1939}, {%r1948, %r1949};
	// end inline asm
	ld.shared.u32 	%r1961, [%rd330+40];
	// begin inline asm
	lop3.b32 %r1960, %r1961, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2230, %r1960, 2021161080;
	xor.b32  	%r1971, %r2230, -2139062144;
	shr.u32 	%r1965, %r1961, 4;
	// begin inline asm
	lop3.b32 %r1964, %r1965, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2231, %r1964, 2021161080;
	xor.b32  	%r1977, %r2231, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1968, %r1969}, {%r1970}, {%r1971}, {%r1936, %r1937};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1974, %r1975}, {%r1976}, {%r1977}, {%r1942, %r1943};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1980, %r1981}, {%r1970}, {%r1977}, {%r1954, %r1955};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1986, %r1987}, {%r1976}, {%r1971}, {%r1980, %r1981};
	// end inline asm
	ld.shared.u32 	%r1993, [%rd330+44];
	// begin inline asm
	lop3.b32 %r1992, %r1993, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2232, %r1992, 2021161080;
	xor.b32  	%r2003, %r2232, -2139062144;
	shr.u32 	%r1997, %r1993, 4;
	// begin inline asm
	lop3.b32 %r1996, %r1997, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2233, %r1996, 2021161080;
	xor.b32  	%r2009, %r2233, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2000, %r2001}, {%r2002}, {%r2003}, {%r1968, %r1969};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2006, %r2007}, {%r2008}, {%r2009}, {%r1974, %r1975};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2012, %r2013}, {%r2002}, {%r2009}, {%r1986, %r1987};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2018, %r2019}, {%r2008}, {%r2003}, {%r2012, %r2013};
	// end inline asm
	ld.shared.u32 	%r2025, [%rd330+48];
	// begin inline asm
	lop3.b32 %r2024, %r2025, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2234, %r2024, 2021161080;
	xor.b32  	%r2035, %r2234, -2139062144;
	shr.u32 	%r2029, %r2025, 4;
	// begin inline asm
	lop3.b32 %r2028, %r2029, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2235, %r2028, 2021161080;
	xor.b32  	%r2041, %r2235, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2032, %r2033}, {%r2034}, {%r2035}, {%r2000, %r2001};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2038, %r2039}, {%r2040}, {%r2041}, {%r2006, %r2007};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2044, %r2045}, {%r2034}, {%r2041}, {%r2018, %r2019};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2050, %r2051}, {%r2040}, {%r2035}, {%r2044, %r2045};
	// end inline asm
	ld.shared.u32 	%r2057, [%rd330+52];
	// begin inline asm
	lop3.b32 %r2056, %r2057, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2236, %r2056, 2021161080;
	xor.b32  	%r2067, %r2236, -2139062144;
	shr.u32 	%r2061, %r2057, 4;
	// begin inline asm
	lop3.b32 %r2060, %r2061, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2237, %r2060, 2021161080;
	xor.b32  	%r2073, %r2237, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2064, %r2065}, {%r2066}, {%r2067}, {%r2032, %r2033};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2070, %r2071}, {%r2072}, {%r2073}, {%r2038, %r2039};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2076, %r2077}, {%r2066}, {%r2073}, {%r2050, %r2051};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2082, %r2083}, {%r2072}, {%r2067}, {%r2076, %r2077};
	// end inline asm
	ld.shared.u32 	%r2089, [%rd330+56];
	// begin inline asm
	lop3.b32 %r2088, %r2089, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2238, %r2088, 2021161080;
	xor.b32  	%r2099, %r2238, -2139062144;
	shr.u32 	%r2093, %r2089, 4;
	// begin inline asm
	lop3.b32 %r2092, %r2093, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2239, %r2092, 2021161080;
	xor.b32  	%r2105, %r2239, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2096, %r2097}, {%r2098}, {%r2099}, {%r2064, %r2065};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2102, %r2103}, {%r2104}, {%r2105}, {%r2070, %r2071};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2108, %r2109}, {%r2098}, {%r2105}, {%r2082, %r2083};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2114, %r2115}, {%r2104}, {%r2099}, {%r2108, %r2109};
	// end inline asm
	ld.shared.u32 	%r2121, [%rd330+60];
	// begin inline asm
	lop3.b32 %r2120, %r2121, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2240, %r2120, 2021161080;
	xor.b32  	%r2131, %r2240, -2139062144;
	shr.u32 	%r2125, %r2121, 4;
	// begin inline asm
	lop3.b32 %r2124, %r2125, %r1124, %r1125, 40;
	// end inline asm
	add.s32 	%r2241, %r2124, 2021161080;
	xor.b32  	%r2137, %r2241, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2128, %r2129}, {%r2130}, {%r2131}, {%r2096, %r2097};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2134, %r2135}, {%r2136}, {%r2137}, {%r2102, %r2103};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2140, %r2141}, {%r2130}, {%r2137}, {%r2114, %r2115};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2146, %r2147}, {%r2136}, {%r2131}, {%r2140, %r2141};
	// end inline asm
	sub.s32 	%r2242, %r2128, %r2134;
	add.s32 	%r2243, %r2242, 8;
	shr.s32 	%r2154, %r2243, 4;
	add.s32 	%r2244, %r2146, 8;
	shr.s32 	%r2153, %r2244, 4;
	sub.s32 	%r2245, %r2129, %r2135;
	add.s32 	%r2246, %r2245, 8;
	shr.s32 	%r2157, %r2246, 4;
	add.s32 	%r2247, %r2147, 8;
	shr.s32 	%r2156, %r2247, 4;
	// begin inline asm
	cvt.pack.sat.s16.s32 %r2152, %r2153, %r2154;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s16.s32 %r2155, %r2156, %r2157;
	// end inline asm
	add.s32 	%r2248, %r81, %r2205;
	mul.wide.u32 	%rd336, %r2248, 4;
	add.s64 	%rd337, %rd181, %rd336;
	st.shared.u32 	[%rd337], %r2152;
	add.s32 	%r2249, %r81, %r2208;
	mul.wide.u32 	%rd338, %r2249, 4;
	add.s64 	%rd339, %rd181, %rd338;
	st.shared.u32 	[%rd339], %r2155;
	add.s32 	%r2455, %r2455, 8;
	setp.ne.s32 	%p41, %r2455, 32;
	@%p41 bra 	$L__BB0_14;
// %bb.15:                              // %L28447
                                        //   in Loop: Header=BB0_13 Depth=2
	bar.sync 	0;
	ld.shared.u32 	%r2268, [%rd16];
	ld.shared.u32 	%r2269, [%rd17];
	ld.shared.u32 	%r2270, [%rd18];
	ld.shared.u32 	%r2271, [%rd19];
	ld.shared.u32 	%r2272, [%rd20];
	ld.shared.u32 	%r2273, [%rd21];
	ld.shared.u32 	%r2274, [%rd22];
	ld.shared.u32 	%r2275, [%rd23];
	ld.shared.u32 	%r2276, [%rd24];
	ld.shared.u32 	%r2277, [%rd25];
	ld.shared.u32 	%r2278, [%rd26];
	ld.shared.u32 	%r2279, [%rd27];
	ld.shared.u32 	%r2280, [%rd28];
	ld.shared.u32 	%r2281, [%rd29];
	ld.shared.u32 	%r2282, [%rd30];
	ld.shared.u32 	%r2283, [%rd31];
	cvt.s32.s16 	%r2284, %r2268;
	shr.s32 	%r2285, %r2268, 16;
	cvt.s32.s16 	%r2286, %r2269;
	shr.s32 	%r2287, %r2269, 16;
	cvt.s32.s16 	%r2288, %r2270;
	shr.s32 	%r2289, %r2270, 16;
	cvt.s32.s16 	%r2290, %r2271;
	shr.s32 	%r2291, %r2271, 16;
	cvt.s32.s16 	%r2292, %r2272;
	shr.s32 	%r2293, %r2272, 16;
	cvt.s32.s16 	%r2294, %r2273;
	shr.s32 	%r2295, %r2273, 16;
	cvt.s32.s16 	%r2296, %r2274;
	shr.s32 	%r2297, %r2274, 16;
	cvt.s32.s16 	%r2298, %r2275;
	shr.s32 	%r2299, %r2275, 16;
	cvt.s32.s16 	%r2300, %r2276;
	shr.s32 	%r2301, %r2276, 16;
	cvt.s32.s16 	%r2302, %r2277;
	shr.s32 	%r2303, %r2277, 16;
	cvt.s32.s16 	%r2304, %r2278;
	shr.s32 	%r2305, %r2278, 16;
	cvt.s32.s16 	%r2306, %r2279;
	shr.s32 	%r2307, %r2279, 16;
	cvt.s32.s16 	%r2308, %r2280;
	shr.s32 	%r2309, %r2280, 16;
	cvt.s32.s16 	%r2310, %r2281;
	shr.s32 	%r2311, %r2281, 16;
	cvt.s32.s16 	%r2312, %r2282;
	shr.s32 	%r2313, %r2282, 16;
	cvt.s32.s16 	%r2314, %r2283;
	shr.s32 	%r2315, %r2283, 16;
	add.s32 	%r2316, %r2284, %r82;
	add.s32 	%r2317, %r2316, %r2286;
	add.s32 	%r2318, %r2317, %r2288;
	add.s32 	%r2319, %r2318, %r2290;
	shr.s32 	%r2320, %r2319, %r83;
	add.s32 	%r2321, %r2285, %r82;
	add.s32 	%r2322, %r2321, %r2287;
	add.s32 	%r2323, %r2322, %r2289;
	add.s32 	%r2324, %r2323, %r2291;
	shr.s32 	%r2325, %r2324, %r83;
	add.s32 	%r2326, %r2292, %r82;
	add.s32 	%r2327, %r2326, %r2294;
	add.s32 	%r2328, %r2327, %r2296;
	add.s32 	%r2329, %r2328, %r2298;
	shr.s32 	%r2330, %r2329, %r83;
	add.s32 	%r2331, %r2293, %r82;
	add.s32 	%r2332, %r2331, %r2295;
	add.s32 	%r2333, %r2332, %r2297;
	add.s32 	%r2334, %r2333, %r2299;
	shr.s32 	%r2335, %r2334, %r83;
	add.s32 	%r2336, %r2300, %r82;
	add.s32 	%r2337, %r2336, %r2302;
	add.s32 	%r2338, %r2337, %r2304;
	add.s32 	%r2339, %r2338, %r2306;
	shr.s32 	%r2340, %r2339, %r83;
	add.s32 	%r2341, %r2301, %r82;
	add.s32 	%r2342, %r2341, %r2303;
	add.s32 	%r2343, %r2342, %r2305;
	add.s32 	%r2344, %r2343, %r2307;
	shr.s32 	%r2345, %r2344, %r83;
	add.s32 	%r2346, %r2308, %r82;
	add.s32 	%r2347, %r2346, %r2310;
	add.s32 	%r2348, %r2347, %r2312;
	add.s32 	%r2349, %r2348, %r2314;
	shr.s32 	%r2350, %r2349, %r83;
	add.s32 	%r2351, %r2309, %r82;
	add.s32 	%r2352, %r2351, %r2311;
	add.s32 	%r2353, %r2352, %r2313;
	add.s32 	%r2354, %r2353, %r2315;
	shr.s32 	%r2355, %r2354, %r83;
	max.s32 	%r2356, %r2320, -7;
	min.s32 	%r2255, %r2356, 7;
	setp.ne.s32 	%p42, %r2255, %r2320;
	or.pred  	%p43, %p69, %p42;
	max.s32 	%r2357, %r2325, -7;
	min.s32 	%r2262, %r2357, 7;
	setp.ne.s32 	%p44, %r2262, %r2325;
	or.pred  	%p45, %p44, %p43;
	max.s32 	%r2358, %r2330, -7;
	min.s32 	%r2254, %r2358, 7;
	setp.ne.s32 	%p46, %r2254, %r2330;
	or.pred  	%p47, %p45, %p46;
	max.s32 	%r2359, %r2335, -7;
	min.s32 	%r2261, %r2359, 7;
	setp.ne.s32 	%p48, %r2261, %r2335;
	or.pred  	%p49, %p48, %p47;
	max.s32 	%r2360, %r2340, -7;
	min.s32 	%r2252, %r2360, 7;
	setp.ne.s32 	%p50, %r2252, %r2340;
	or.pred  	%p51, %p49, %p50;
	max.s32 	%r2361, %r2345, -7;
	min.s32 	%r2259, %r2361, 7;
	setp.ne.s32 	%p52, %r2259, %r2345;
	or.pred  	%p53, %p52, %p51;
	max.s32 	%r2362, %r2350, -7;
	min.s32 	%r2251, %r2362, 7;
	setp.ne.s32 	%p54, %r2251, %r2350;
	or.pred  	%p55, %p53, %p54;
	max.s32 	%r2363, %r2355, -7;
	min.s32 	%r2258, %r2363, 7;
	setp.ne.s32 	%p56, %r2258, %r2355;
	or.pred  	%p69, %p56, %p55;
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2250, %r2251, %r2252, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2253, %r2254, %r2255, %r2250;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2257, %r2258, %r2259, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2260, %r2261, %r2262, %r2257;
	// end inline asm
	shl.b32 	%r2267, %r2260, 4;
	// begin inline asm
	lop3.b32 %r2374, %r1125, %r2253, %r2267, 202;
	// end inline asm
	setp.eq.s32 	%p57, %r2448, 0;
	selp.b32 	%r2453, %r2374, %r2453, %p57;
	selp.b32 	%r2454, %r2374, %r2454, %p57;
	setp.eq.s32 	%p58, %r2448, 32;
	selp.b32 	%r2449, %r2374, %r2449, %p58;
	selp.b32 	%r2450, %r2374, %r2450, %p58;
	setp.eq.s32 	%p59, %r2448, 64;
	selp.b32 	%r2451, %r2374, %r2451, %p59;
	selp.b32 	%r2452, %r2374, %r2452, %p59;
	add.s32 	%r109, %r2448, 32;
	setp.ne.s32 	%p60, %r2448, 96;
	mov.u32 	%r2448, %r109;
	@%p60 bra 	$L__BB0_13;
// %bb.16:                              // %L30853.L30859_crit_edge
                                        //   in Loop: Header=BB0_11 Depth=1
	setp.eq.s32 	%p61, %r86, 0;
	setp.eq.s32 	%p62, %r85, 0;
	setp.eq.s32 	%p63, %r84, 0;
	// begin inline asm
	prmt.b32 %r2364, %r2453, %r2449, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2368, %r2454, %r2450, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2372, %r2451, %r2374, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2376, %r2452, %r2374, %r396;
	// end inline asm
	selp.b32 	%r2412, %r2368, %r2364, %p63;
	shfl.sync.bfly.b32	%r2413, %r2412, 1, 31, -1;
	selp.b32 	%r2381, %r2364, %r2413, %p63;
	selp.b32 	%r2382, %r2413, %r2368, %p63;
	selp.b32 	%r2414, %r2376, %r2372, %p63;
	shfl.sync.bfly.b32	%r2415, %r2414, 1, 31, -1;
	selp.b32 	%r2389, %r2372, %r2415, %p63;
	selp.b32 	%r2390, %r2415, %r2376, %p63;
	// begin inline asm
	prmt.b32 %r2380, %r2381, %r2382, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2384, %r2381, %r2382, %r396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2388, %r2389, %r2390, %r392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2392, %r2389, %r2390, %r396;
	// end inline asm
	selp.b32 	%r2416, %r2388, %r2380, %p62;
	shfl.sync.bfly.b32	%r2417, %r2416, 2, 31, -1;
	selp.b32 	%r2397, %r2380, %r2417, %p62;
	selp.b32 	%r2398, %r2417, %r2388, %p62;
	selp.b32 	%r2418, %r2392, %r2384, %p62;
	shfl.sync.bfly.b32	%r2419, %r2418, 2, 31, -1;
	selp.b32 	%r2405, %r2384, %r2419, %p62;
	selp.b32 	%r2406, %r2419, %r2392, %p62;
	// begin inline asm
	prmt.b32 %r2396, %r2397, %r2398, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2400, %r2397, %r2398, %r140;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2404, %r2405, %r2406, %r136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2408, %r2405, %r2406, %r140;
	// end inline asm
	selp.b32 	%r2420, %r2404, %r2396, %p61;
	shfl.sync.bfly.b32	%r2421, %r2420, 4, 31, -1;
	selp.b32 	%r2422, %r2396, %r2421, %p61;
	selp.b32 	%r2423, %r2421, %r2404, %p61;
	selp.b32 	%r2424, %r2408, %r2400, %p61;
	shfl.sync.bfly.b32	%r2425, %r2424, 4, 31, -1;
	selp.b32 	%r2426, %r2400, %r2425, %p61;
	selp.b32 	%r2427, %r2425, %r2408, %p61;
	selp.b32 	%r2428, %r2426, %r2422, %p63;
	shfl.sync.bfly.b32	%r2429, %r2428, 1, 31, -1;
	selp.b32 	%r2430, %r2422, %r2429, %p63;
	selp.b32 	%r2431, %r2429, %r2426, %p63;
	selp.b32 	%r2432, %r2427, %r2423, %p63;
	shfl.sync.bfly.b32	%r2433, %r2432, 1, 31, -1;
	selp.b32 	%r2434, %r2423, %r2433, %p63;
	selp.b32 	%r2435, %r2433, %r2427, %p63;
	and.b32  	%r2436, %r2447, 16256;
	or.b32  	%r2437, %r2436, %r87;
	or.b32  	%r2438, %r2437, %r88;
	or.b32  	%r2439, %r2438, %r90;
	or.b32  	%r2440, %r89, %r2439;
	cvt.u64.u32 	%rd340, %r2440;
	add.s64 	%rd341, %rd4, %rd340;
	st.global.v4.u32 	[%rd341], {%r2430, %r2434, %r2431, %r2435};
	add.s32 	%r110, %r2447, 128;
	setp.ne.s32 	%p64, %r2447, 65408;
	mov.u32 	%r2447, %r110;
	@%p64 bra 	$L__BB0_11;
$L__BB0_17:                             // %L31240
	selp.u32 	%r2441, 1, 0, %p69;
	{ 
	.reg .pred 	%p1; 
	.reg .pred 	%p2; 
	setp.ne.u32 	%p1, %r2441, 0; 
	bar.red.or.pred 	%p2, 0, %p1; 
	selp.u32 	%r2442, 1, 0, %p2; 
	}
	setp.eq.s32 	%p65, %r2442, 0;
	or.pred  	%p66, %p65, %p1;
	@%p66 bra 	$L__BB0_19;
// %bb.18:                              // %L31271
	st.global.u32 	[%rd8], %r123;
$L__BB0_19:                             // %L31317
	mov.u32 	%r2444, 0;
	st.global.u32 	[%rd7], %r2444;
	ret;
$L__BB0_7:                              // %L152
	mov.u32 	%r2445, 2;
	st.global.u32 	[%rd7], %r2445;
	mov.u64 	%rd342, exception2743;
	cvta.global.u64 	%rd343, %rd342;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd343;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd32;
	st.param.b32 	[param0+8], %r115;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd33, exception1;
	cvta.global.u64 	%rd34, %rd33;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd34;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd32;
	st.param.b32 	[param0+8], %r115;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_3:                              // %L24
	mov.u64 	%rd35, exception1;
	cvta.global.u64 	%rd36, %rd35;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd36;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd32;
	st.param.b32 	[param0+8], %r115;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_21:                             // %L370
	mov.u32 	%r130, 3;
	st.global.u32 	[%rd7], %r130;
	mov.u64 	%rd40, exception2743;
	cvta.global.u64 	%rd41, %rd40;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd41;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd32;
	st.param.b32 	[param0+8], %r115;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
