// PTX kernel code for CUDA baseband beamformer
// This file has been generated automatically by `bb.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for bb(::Int32, ::Int32, ::CuDeviceVector{Int8x4, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=128, blocks_per_sm=8

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2743[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32]
)
.reqntid 128, 1, 1
.minnctapersm 8
{
	.reg .pred 	%p<70>;
	.reg .b32 	%r<2392>;
	.reg .b64 	%rd<282>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r121, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd32, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r124, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p6, %r124, 32895;
	@%p6 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	// begin inline asm
	mov.u32 %r125, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p7, %r125, 43135;
	@%p7 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:                              // %L26
	ld.param.u32 	%r122, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	ld.param.u64 	%rd5, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r126, %r2, 7;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r127, %r126, %r1;
	or.b32  	%r128, %r127, %r4;
	mul.wide.u32 	%rd37, %r128, 4;
	add.s64 	%rd7, %rd5, %rd37;
	mov.u32 	%r129, 1;
	st.global.u32 	[%rd7], %r129;
	setp.gt.u32 	%p8, %r122, 65535;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L133
	ld.param.u32 	%r123, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p9, %r123, %r122;
	setp.gt.s32 	%p10, %r123, 131071;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L140
	sub.s32 	%r130, %r123, %r122;
	and.b32  	%r131, %r130, 127;
	setp.eq.s32 	%p12, %r131, 0;
	@%p12 bra 	$L__BB0_20;
	bra.uni 	$L__BB0_7;
$L__BB0_20:                             // %pass109
	ld.param.u64 	%rd3, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	shl.b32 	%r132, %r3, 2;
	shl.b32 	%r133, %r2, 4;
	shr.u32 	%r117, %r1, 3;
	or.b32  	%r118, %r132, %r117;
	or.b32  	%r134, %r118, %r133;
	mul.wide.u32 	%rd38, %r134, 4;
	add.s64 	%rd39, %rd3, %rd38;
	ld.global.u32 	%r135, [%rd39];
	add.s32 	%r120, %r135, -5;
	setp.lt.u32 	%p13, %r120, 31;
	@%p13 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_21;
$L__BB0_8:                              // %L463
	ld.param.u64 	%rd1, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	ld.param.u64 	%rd6, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	add.s32 	%r119, %r135, -4;
	or.b32  	%r137, %r1, %r3;
	setp.ne.s32 	%p1, %r137, 0;
	mul.wide.u32 	%rd42, %r2, 4;
	add.s64 	%rd8, %rd6, %rd42;
	mov.u32 	%r2383, 0;
	@%p1 bra 	$L__BB0_10;
// %bb.9:                               // %L487
	st.global.u32 	[%rd8], %r2383;
$L__BB0_10:                             // %L533
	ld.param.u64 	%rd2, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	ld.param.u64 	%rd4, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	bar.sync 	0;
	shl.b32 	%r652, %r3, 7;
	shl.b32 	%r653, %r1, 5;
	and.b32  	%r654, %r653, 96;
	or.b32  	%r655, %r654, %r652;
	shl.b32 	%r656, %r2, 13;
	shl.b32 	%r657, %r1, 7;
	and.b32  	%r658, %r657, 3584;
	or.b32  	%r659, %r658, %r656;
	or.b32  	%r660, %r659, %r655;
	mul.wide.u32 	%rd43, %r660, 4;
	add.s64 	%rd44, %rd1, %rd43;
	ld.global.u32 	%r144, [%rd44];
	or.b32  	%r661, %r660, 4096;
	mul.wide.u32 	%rd45, %r661, 4;
	add.s64 	%rd46, %rd1, %rd45;
	ld.global.u32 	%r152, [%rd46];
	ld.global.u32 	%r145, [%rd44+4];
	or.b32  	%r662, %r660, 4097;
	mul.wide.u32 	%rd47, %r662, 4;
	add.s64 	%rd48, %rd1, %rd47;
	ld.global.u32 	%r153, [%rd48];
	ld.global.u32 	%r160, [%rd44+8];
	or.b32  	%r663, %r660, 4098;
	mul.wide.u32 	%rd49, %r663, 4;
	add.s64 	%rd50, %rd1, %rd49;
	ld.global.u32 	%r168, [%rd50];
	ld.global.u32 	%r161, [%rd44+12];
	or.b32  	%r664, %r660, 4099;
	mul.wide.u32 	%rd51, %r664, 4;
	add.s64 	%rd52, %rd1, %rd51;
	ld.global.u32 	%r169, [%rd52];
	ld.global.u32 	%r176, [%rd44+16];
	or.b32  	%r665, %r660, 4100;
	mul.wide.u32 	%rd53, %r665, 4;
	add.s64 	%rd54, %rd1, %rd53;
	ld.global.u32 	%r184, [%rd54];
	ld.global.u32 	%r177, [%rd44+20];
	or.b32  	%r666, %r660, 4101;
	mul.wide.u32 	%rd55, %r666, 4;
	add.s64 	%rd56, %rd1, %rd55;
	ld.global.u32 	%r185, [%rd56];
	ld.global.u32 	%r192, [%rd44+24];
	or.b32  	%r667, %r660, 4102;
	mul.wide.u32 	%rd57, %r667, 4;
	add.s64 	%rd58, %rd1, %rd57;
	ld.global.u32 	%r200, [%rd58];
	ld.global.u32 	%r193, [%rd44+28];
	or.b32  	%r668, %r660, 4103;
	mul.wide.u32 	%rd59, %r668, 4;
	add.s64 	%rd60, %rd1, %rd59;
	ld.global.u32 	%r201, [%rd60];
	ld.global.u32 	%r208, [%rd44+32];
	or.b32  	%r669, %r660, 4104;
	mul.wide.u32 	%rd61, %r669, 4;
	add.s64 	%rd62, %rd1, %rd61;
	ld.global.u32 	%r216, [%rd62];
	ld.global.u32 	%r209, [%rd44+36];
	or.b32  	%r670, %r660, 4105;
	mul.wide.u32 	%rd63, %r670, 4;
	add.s64 	%rd64, %rd1, %rd63;
	ld.global.u32 	%r217, [%rd64];
	ld.global.u32 	%r224, [%rd44+40];
	or.b32  	%r671, %r660, 4106;
	mul.wide.u32 	%rd65, %r671, 4;
	add.s64 	%rd66, %rd1, %rd65;
	ld.global.u32 	%r232, [%rd66];
	ld.global.u32 	%r225, [%rd44+44];
	or.b32  	%r672, %r660, 4107;
	mul.wide.u32 	%rd67, %r672, 4;
	add.s64 	%rd68, %rd1, %rd67;
	ld.global.u32 	%r233, [%rd68];
	ld.global.u32 	%r240, [%rd44+48];
	or.b32  	%r673, %r660, 4108;
	mul.wide.u32 	%rd69, %r673, 4;
	add.s64 	%rd70, %rd1, %rd69;
	ld.global.u32 	%r248, [%rd70];
	ld.global.u32 	%r241, [%rd44+52];
	or.b32  	%r674, %r660, 4109;
	mul.wide.u32 	%rd71, %r674, 4;
	add.s64 	%rd72, %rd1, %rd71;
	ld.global.u32 	%r249, [%rd72];
	ld.global.u32 	%r256, [%rd44+56];
	or.b32  	%r675, %r660, 4110;
	mul.wide.u32 	%rd73, %r675, 4;
	add.s64 	%rd74, %rd1, %rd73;
	ld.global.u32 	%r264, [%rd74];
	ld.global.u32 	%r257, [%rd44+60];
	or.b32  	%r676, %r660, 4111;
	mul.wide.u32 	%rd75, %r676, 4;
	add.s64 	%rd76, %rd1, %rd75;
	ld.global.u32 	%r265, [%rd76];
	ld.global.u32 	%r272, [%rd44+64];
	or.b32  	%r677, %r660, 4112;
	mul.wide.u32 	%rd77, %r677, 4;
	add.s64 	%rd78, %rd1, %rd77;
	ld.global.u32 	%r280, [%rd78];
	ld.global.u32 	%r273, [%rd44+68];
	or.b32  	%r678, %r660, 4113;
	mul.wide.u32 	%rd79, %r678, 4;
	add.s64 	%rd80, %rd1, %rd79;
	ld.global.u32 	%r281, [%rd80];
	ld.global.u32 	%r288, [%rd44+72];
	or.b32  	%r679, %r660, 4114;
	mul.wide.u32 	%rd81, %r679, 4;
	add.s64 	%rd82, %rd1, %rd81;
	ld.global.u32 	%r296, [%rd82];
	ld.global.u32 	%r289, [%rd44+76];
	or.b32  	%r680, %r660, 4115;
	mul.wide.u32 	%rd83, %r680, 4;
	add.s64 	%rd84, %rd1, %rd83;
	ld.global.u32 	%r297, [%rd84];
	ld.global.u32 	%r304, [%rd44+80];
	or.b32  	%r681, %r660, 4116;
	mul.wide.u32 	%rd85, %r681, 4;
	add.s64 	%rd86, %rd1, %rd85;
	ld.global.u32 	%r312, [%rd86];
	ld.global.u32 	%r305, [%rd44+84];
	or.b32  	%r682, %r660, 4117;
	mul.wide.u32 	%rd87, %r682, 4;
	add.s64 	%rd88, %rd1, %rd87;
	ld.global.u32 	%r313, [%rd88];
	ld.global.u32 	%r320, [%rd44+88];
	or.b32  	%r683, %r660, 4118;
	mul.wide.u32 	%rd89, %r683, 4;
	add.s64 	%rd90, %rd1, %rd89;
	ld.global.u32 	%r328, [%rd90];
	ld.global.u32 	%r321, [%rd44+92];
	or.b32  	%r684, %r660, 4119;
	mul.wide.u32 	%rd91, %r684, 4;
	add.s64 	%rd92, %rd1, %rd91;
	ld.global.u32 	%r329, [%rd92];
	ld.global.u32 	%r336, [%rd44+96];
	or.b32  	%r685, %r660, 4120;
	mul.wide.u32 	%rd93, %r685, 4;
	add.s64 	%rd94, %rd1, %rd93;
	ld.global.u32 	%r344, [%rd94];
	ld.global.u32 	%r337, [%rd44+100];
	or.b32  	%r686, %r660, 4121;
	mul.wide.u32 	%rd95, %r686, 4;
	add.s64 	%rd96, %rd1, %rd95;
	ld.global.u32 	%r345, [%rd96];
	ld.global.u32 	%r352, [%rd44+104];
	or.b32  	%r687, %r660, 4122;
	mul.wide.u32 	%rd97, %r687, 4;
	add.s64 	%rd98, %rd1, %rd97;
	ld.global.u32 	%r360, [%rd98];
	ld.global.u32 	%r353, [%rd44+108];
	or.b32  	%r688, %r660, 4123;
	mul.wide.u32 	%rd99, %r688, 4;
	add.s64 	%rd100, %rd1, %rd99;
	ld.global.u32 	%r361, [%rd100];
	ld.global.u32 	%r368, [%rd44+112];
	or.b32  	%r689, %r660, 4124;
	mul.wide.u32 	%rd101, %r689, 4;
	add.s64 	%rd102, %rd1, %rd101;
	ld.global.u32 	%r376, [%rd102];
	ld.global.u32 	%r369, [%rd44+116];
	or.b32  	%r690, %r660, 4125;
	mul.wide.u32 	%rd103, %r690, 4;
	add.s64 	%rd104, %rd1, %rd103;
	ld.global.u32 	%r377, [%rd104];
	ld.global.u32 	%r384, [%rd44+120];
	or.b32  	%r691, %r660, 4126;
	mul.wide.u32 	%rd105, %r691, 4;
	add.s64 	%rd106, %rd1, %rd105;
	ld.global.u32 	%r392, [%rd106];
	ld.global.u32 	%r385, [%rd44+124];
	or.b32  	%r692, %r660, 4127;
	mul.wide.u32 	%rd107, %r692, 4;
	add.s64 	%rd108, %rd1, %rd107;
	ld.global.u32 	%r393, [%rd108];
	mov.u32 	%r142, 21520;
	// begin inline asm
	prmt.b32 %r396, %r144, %r145, %r142;
	// end inline asm
	mov.u32 	%r146, 30258;
	// begin inline asm
	prmt.b32 %r397, %r144, %r145, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r404, %r152, %r153, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r405, %r152, %r153, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r412, %r160, %r161, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r413, %r160, %r161, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r420, %r168, %r169, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r421, %r168, %r169, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r428, %r176, %r177, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r429, %r176, %r177, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r436, %r184, %r185, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r437, %r184, %r185, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r444, %r192, %r193, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r445, %r192, %r193, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r452, %r200, %r201, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r453, %r200, %r201, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r460, %r208, %r209, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r461, %r208, %r209, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r468, %r216, %r217, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r469, %r216, %r217, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r476, %r224, %r225, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r477, %r224, %r225, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r484, %r232, %r233, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r485, %r232, %r233, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r492, %r240, %r241, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r493, %r240, %r241, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r500, %r248, %r249, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r501, %r248, %r249, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r508, %r256, %r257, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r509, %r256, %r257, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r516, %r264, %r265, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r517, %r264, %r265, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r524, %r272, %r273, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r525, %r272, %r273, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r532, %r280, %r281, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r533, %r280, %r281, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r540, %r288, %r289, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r541, %r288, %r289, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r548, %r296, %r297, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r549, %r296, %r297, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r556, %r304, %r305, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r557, %r304, %r305, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r564, %r312, %r313, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r565, %r312, %r313, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r572, %r320, %r321, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r573, %r320, %r321, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r580, %r328, %r329, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r581, %r328, %r329, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r588, %r336, %r337, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r589, %r336, %r337, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r596, %r344, %r345, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r597, %r344, %r345, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r604, %r352, %r353, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r605, %r352, %r353, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r612, %r360, %r361, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r613, %r360, %r361, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r620, %r368, %r369, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r621, %r368, %r369, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r628, %r376, %r377, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r629, %r376, %r377, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r636, %r384, %r385, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r637, %r384, %r385, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r644, %r392, %r393, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r645, %r392, %r393, %r146;
	// end inline asm
	mov.u32 	%r398, 25152;
	// begin inline asm
	prmt.b32 %r1075, %r396, %r397, %r398;
	// end inline asm
	mov.u32 	%r402, 29521;
	// begin inline asm
	prmt.b32 %r1081, %r396, %r397, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1593, %r404, %r405, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1599, %r404, %r405, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1107, %r412, %r413, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1113, %r412, %r413, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1625, %r420, %r421, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1631, %r420, %r421, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1139, %r428, %r429, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1145, %r428, %r429, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1657, %r436, %r437, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1663, %r436, %r437, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1171, %r444, %r445, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1177, %r444, %r445, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1689, %r452, %r453, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1695, %r452, %r453, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1203, %r460, %r461, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1209, %r460, %r461, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1721, %r468, %r469, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1727, %r468, %r469, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1235, %r476, %r477, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1241, %r476, %r477, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1753, %r484, %r485, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1759, %r484, %r485, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1267, %r492, %r493, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1273, %r492, %r493, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1785, %r500, %r501, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1791, %r500, %r501, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1299, %r508, %r509, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1305, %r508, %r509, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1817, %r516, %r517, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1823, %r516, %r517, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1331, %r524, %r525, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1337, %r524, %r525, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1849, %r532, %r533, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1855, %r532, %r533, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1363, %r540, %r541, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1369, %r540, %r541, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1881, %r548, %r549, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1887, %r548, %r549, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1395, %r556, %r557, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1401, %r556, %r557, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1913, %r564, %r565, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1919, %r564, %r565, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1427, %r572, %r573, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1433, %r572, %r573, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1945, %r580, %r581, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1951, %r580, %r581, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1459, %r588, %r589, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1465, %r588, %r589, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1977, %r596, %r597, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1983, %r596, %r597, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1491, %r604, %r605, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1497, %r604, %r605, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2009, %r612, %r613, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2015, %r612, %r613, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1523, %r620, %r621, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1529, %r620, %r621, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2041, %r628, %r629, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2047, %r628, %r629, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1555, %r636, %r637, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1561, %r636, %r637, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2073, %r644, %r645, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2079, %r644, %r645, %r402;
	// end inline asm
	shl.b32 	%r69, %r122, 13;
	shl.b32 	%r693, %r1, 2;
	and.b32  	%r694, %r693, 28;
	or.b32  	%r695, %r694, %r4;
	shl.b32 	%r696, %r2, 8;
	or.b32  	%r70, %r696, %r695;
	or.b32  	%r71, %r70, 128;
	or.b32  	%r72, %r695, 128;
	or.b32  	%r73, %r695, 129;
	or.b32  	%r74, %r695, 130;
	or.b32  	%r75, %r695, 131;
	shl.b32 	%r697, %r3, 6;
	shl.b32 	%r698, %r1, 4;
	and.b32  	%r699, %r698, 48;
	or.b32  	%r76, %r699, %r697;
	shr.u32 	%r77, %r1, 2;
	mul.lo.s32 	%r700, %r3, 640;
	shl.b32 	%r701, %r1, 1;
	and.b32  	%r78, %r701, 6;
	or.b32  	%r79, %r77, %r700;
	or.b32  	%r80, %r79, 8;
	and.b32  	%r702, %r1, 7;
	or.b32  	%r703, %r118, 640;
	or.b32  	%r704, %r118, 1280;
	or.b32  	%r705, %r118, 1920;
	shl.b32 	%r707, %r129, %r120;
	setp.gt.u32 	%p15, %r120, 31;
	selp.b32 	%r81, 0, %r707, %p15;
	min.u32 	%r82, %r119, 31;
	and.b32  	%r83, %r1, 1;
	and.b32  	%r84, %r1, 2;
	and.b32  	%r85, %r1, 4;
	shl.b32 	%r708, %r2, 14;
	shl.b32 	%r709, %r3, 21;
	shl.b32 	%r710, %r1, 16;
	and.b32  	%r711, %r710, 1572864;
	and.b32  	%r86, %r653, 64;
	shl.b32 	%r712, %r1, 3;
	and.b32  	%r87, %r712, 32;
	or.b32  	%r713, %r711, %r709;
	or.b32  	%r88, %r713, %r708;
	or.b32  	%r714, %r1, 24;
	and.b32  	%r89, %r698, 16;
	mul.lo.s32 	%r715, %r714, 20;
	add.s32 	%r716, %r715, %r705;
	mul.wide.u32 	%rd109, %r716, 4;
	mov.u64 	%rd110, shmem;
	add.s64 	%rd111, %rd110, 32896;
	add.s64 	%rd9, %rd111, %rd109;
	mul.lo.s32 	%r717, %r117, 257;
	add.s32 	%r718, %r695, %r717;
	mul.wide.u32 	%rd112, %r718, 4;
	add.s64 	%rd10, %rd110, %rd112;
	cvt.u64.u32 	%rd113, %r717;
	cvt.u64.u32 	%rd11, %r695;
	add.s64 	%rd114, %rd11, %rd113;
	shl.b64 	%rd115, %rd114, 2;
	add.s64 	%rd12, %rd110, %rd115;
	add.s32 	%r719, %r717, %r72;
	mul.wide.u32 	%rd116, %r719, 4;
	add.s64 	%rd13, %rd110, %rd116;
	add.s32 	%r720, %r717, %r73;
	mul.wide.u32 	%rd117, %r720, 4;
	add.s64 	%rd14, %rd110, %rd117;
	add.s32 	%r721, %r717, %r74;
	mul.wide.u32 	%rd118, %r721, 4;
	add.s64 	%rd15, %rd110, %rd118;
	add.s32 	%r722, %r717, %r75;
	mul.wide.u32 	%rd119, %r722, 4;
	add.s64 	%rd16, %rd110, %rd119;
	mul.lo.s32 	%r723, %r702, 20;
	add.s32 	%r724, %r723, %r118;
	mul.wide.u32 	%rd120, %r724, 4;
	add.s64 	%rd17, %rd111, %rd120;
	add.s32 	%r725, %r723, %r703;
	mul.wide.u32 	%rd121, %r725, 4;
	add.s64 	%rd18, %rd111, %rd121;
	add.s32 	%r726, %r723, %r704;
	mul.wide.u32 	%rd122, %r726, 4;
	add.s64 	%rd19, %rd111, %rd122;
	add.s32 	%r727, %r723, %r705;
	mul.wide.u32 	%rd123, %r727, 4;
	add.s64 	%rd20, %rd111, %rd123;
	add.s32 	%r728, %r723, 160;
	add.s32 	%r729, %r728, %r118;
	mul.wide.u32 	%rd124, %r729, 4;
	add.s64 	%rd21, %rd111, %rd124;
	add.s32 	%r730, %r728, %r703;
	mul.wide.u32 	%rd125, %r730, 4;
	add.s64 	%rd22, %rd111, %rd125;
	add.s32 	%r731, %r728, %r704;
	mul.wide.u32 	%rd126, %r731, 4;
	add.s64 	%rd23, %rd111, %rd126;
	add.s32 	%r732, %r728, %r705;
	mul.wide.u32 	%rd127, %r732, 4;
	add.s64 	%rd24, %rd111, %rd127;
	add.s32 	%r733, %r723, 320;
	add.s32 	%r734, %r733, %r118;
	mul.wide.u32 	%rd128, %r734, 4;
	add.s64 	%rd25, %rd111, %rd128;
	add.s32 	%r735, %r733, %r703;
	mul.wide.u32 	%rd129, %r735, 4;
	add.s64 	%rd26, %rd111, %rd129;
	add.s32 	%r736, %r733, %r704;
	mul.wide.u32 	%rd130, %r736, 4;
	add.s64 	%rd27, %rd111, %rd130;
	add.s32 	%r737, %r733, %r705;
	mul.wide.u32 	%rd131, %r737, 4;
	add.s64 	%rd28, %rd111, %rd131;
	add.s32 	%r738, %r715, %r118;
	mul.wide.u32 	%rd132, %r738, 4;
	add.s64 	%rd29, %rd111, %rd132;
	add.s32 	%r739, %r715, %r703;
	mul.wide.u32 	%rd133, %r739, 4;
	add.s64 	%rd30, %rd111, %rd133;
	add.s32 	%r740, %r715, %r704;
	mul.wide.u32 	%rd134, %r740, 4;
	add.s64 	%rd31, %rd111, %rd134;
	mov.pred 	%p69, 0;
$L__BB0_11:                             // %L10007
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_13 Depth 2
                                        //       Child Loop BB0_14 Depth 3
	add.s32 	%r741, %r2383, %r122;
	setp.ge.s32 	%p16, %r741, %r123;
	@%p16 bra 	$L__BB0_17;
// %bb.12:                              // %L10015.preheader
                                        //   in Loop: Header=BB0_11 Depth=1
	or.b32  	%r91, %r2383, %r117;
	or.b32  	%r92, %r91, 4;
	or.b32  	%r93, %r91, 8;
	or.b32  	%r94, %r91, 12;
	or.b32  	%r95, %r91, 16;
	or.b32  	%r96, %r91, 20;
	or.b32  	%r97, %r91, 24;
	or.b32  	%r98, %r91, 28;
	mov.u32 	%r1077, 0;
	mov.u32 	%r2384, %r1077;
	mov.u32 	%r2385, %r1077;
	mov.u32 	%r2386, %r1077;
	mov.u32 	%r2387, %r1077;
	mov.u32 	%r2388, %r1077;
	mov.u32 	%r2389, %r1077;
	mov.u32 	%r2390, %r1077;
$L__BB0_13:                             // %L10015
                                        //   Parent Loop BB0_11 Depth=1
                                        // =>  This Loop Header: Depth=2
                                        //       Child Loop BB0_14 Depth 3
	cvt.u32.u64 	%r744, %rd11;
	add.s32 	%r745, %r91, %r2384;
	shl.b32 	%r746, %r745, 13;
	or.b32  	%r747, %r70, %r746;
	add.s32 	%r748, %r747, %r69;
	shr.s32 	%r749, %r748, 31;
	shr.u32 	%r750, %r749, 3;
	add.s32 	%r751, %r748, %r750;
	shr.s32 	%r752, %r751, 29;
	setp.lt.s32 	%p17, %r748, 0;
	and.b32  	%r753, %r751, -536870912;
	setp.ne.s32 	%p18, %r753, %r748;
	and.pred  	%p19, %p17, %p18;
	selp.u32 	%r754, 1, 0, %p19;
	sub.s32 	%r755, %r754, %r752;
	shl.b32 	%r756, %r755, 29;
	or.b32  	%r757, %r748, 1;
	add.s32 	%r758, %r757, %r756;
	mul.wide.s32 	%rd135, %r758, 4;
	add.s64 	%rd136, %rd2, %rd135;
	ld.global.v4.u32 	{%r759, %r760, %r761, %r762}, [%rd136+-4];
	or.b32  	%r763, %r71, %r746;
	add.s32 	%r764, %r763, %r69;
	shr.s32 	%r765, %r764, 31;
	shr.u32 	%r766, %r765, 3;
	add.s32 	%r767, %r764, %r766;
	shr.u32 	%r768, %r767, 29;
	shr.u32 	%r769, %r764, 31;
	sub.s32 	%r770, %r769, %r768;
	shl.b32 	%r771, %r770, 29;
	or.b32  	%r772, %r764, 1;
	add.s32 	%r773, %r772, %r771;
	mul.wide.s32 	%rd137, %r773, 4;
	add.s64 	%rd138, %rd2, %rd137;
	ld.global.v4.u32 	{%r774, %r775, %r776, %r777}, [%rd138+-4];
	add.s32 	%r778, %r2384, %r92;
	shl.b32 	%r779, %r778, 13;
	and.b32  	%r780, %r779, 536666112;
	or.b32  	%r781, %r70, %r780;
	add.s32 	%r782, %r781, %r69;
	shr.s32 	%r783, %r782, 31;
	shr.u32 	%r784, %r783, 3;
	add.s32 	%r785, %r782, %r784;
	shr.s32 	%r786, %r785, 29;
	setp.lt.s32 	%p20, %r782, 0;
	and.b32  	%r787, %r785, -536870912;
	setp.ne.s32 	%p21, %r787, %r782;
	and.pred  	%p22, %p20, %p21;
	selp.u32 	%r788, 1, 0, %p22;
	sub.s32 	%r789, %r788, %r786;
	shl.b32 	%r790, %r789, 29;
	or.b32  	%r791, %r782, 1;
	add.s32 	%r792, %r791, %r790;
	mul.wide.s32 	%rd139, %r792, 4;
	add.s64 	%rd140, %rd2, %rd139;
	ld.global.v4.u32 	{%r793, %r794, %r795, %r796}, [%rd140+-4];
	or.b32  	%r797, %r71, %r780;
	add.s32 	%r798, %r797, %r69;
	shr.s32 	%r799, %r798, 31;
	shr.u32 	%r800, %r799, 3;
	add.s32 	%r801, %r798, %r800;
	shr.u32 	%r802, %r801, 29;
	shr.u32 	%r803, %r798, 31;
	sub.s32 	%r804, %r803, %r802;
	shl.b32 	%r805, %r804, 29;
	or.b32  	%r806, %r798, 1;
	add.s32 	%r807, %r806, %r805;
	mul.wide.s32 	%rd141, %r807, 4;
	add.s64 	%rd142, %rd2, %rd141;
	ld.global.v4.u32 	{%r808, %r809, %r810, %r811}, [%rd142+-4];
	add.s32 	%r812, %r2384, %r93;
	shl.b32 	%r813, %r812, 13;
	and.b32  	%r814, %r813, 536698880;
	or.b32  	%r815, %r70, %r814;
	add.s32 	%r816, %r815, %r69;
	shr.s32 	%r817, %r816, 31;
	shr.u32 	%r818, %r817, 3;
	add.s32 	%r819, %r816, %r818;
	shr.s32 	%r820, %r819, 29;
	setp.lt.s32 	%p23, %r816, 0;
	and.b32  	%r821, %r819, -536870912;
	setp.ne.s32 	%p24, %r821, %r816;
	and.pred  	%p25, %p23, %p24;
	selp.u32 	%r822, 1, 0, %p25;
	sub.s32 	%r823, %r822, %r820;
	shl.b32 	%r824, %r823, 29;
	or.b32  	%r825, %r816, 1;
	add.s32 	%r826, %r825, %r824;
	mul.wide.s32 	%rd143, %r826, 4;
	add.s64 	%rd144, %rd2, %rd143;
	ld.global.v4.u32 	{%r827, %r828, %r829, %r830}, [%rd144+-4];
	or.b32  	%r831, %r71, %r814;
	add.s32 	%r832, %r831, %r69;
	shr.s32 	%r833, %r832, 31;
	shr.u32 	%r834, %r833, 3;
	add.s32 	%r835, %r832, %r834;
	shr.u32 	%r836, %r835, 29;
	shr.u32 	%r837, %r832, 31;
	sub.s32 	%r838, %r837, %r836;
	shl.b32 	%r839, %r838, 29;
	or.b32  	%r840, %r832, 1;
	add.s32 	%r841, %r840, %r839;
	mul.wide.s32 	%rd145, %r841, 4;
	add.s64 	%rd146, %rd2, %rd145;
	ld.global.v4.u32 	{%r842, %r843, %r844, %r845}, [%rd146+-4];
	add.s32 	%r846, %r2384, %r94;
	shl.b32 	%r847, %r846, 13;
	and.b32  	%r848, %r847, 536731648;
	or.b32  	%r849, %r70, %r848;
	add.s32 	%r850, %r849, %r69;
	shr.s32 	%r851, %r850, 31;
	shr.u32 	%r852, %r851, 3;
	add.s32 	%r853, %r850, %r852;
	shr.s32 	%r854, %r853, 29;
	setp.lt.s32 	%p26, %r850, 0;
	and.b32  	%r855, %r853, -536870912;
	setp.ne.s32 	%p27, %r855, %r850;
	and.pred  	%p28, %p26, %p27;
	selp.u32 	%r856, 1, 0, %p28;
	sub.s32 	%r857, %r856, %r854;
	shl.b32 	%r858, %r857, 29;
	or.b32  	%r859, %r850, 1;
	add.s32 	%r860, %r859, %r858;
	mul.wide.s32 	%rd147, %r860, 4;
	add.s64 	%rd148, %rd2, %rd147;
	ld.global.v4.u32 	{%r861, %r862, %r863, %r864}, [%rd148+-4];
	or.b32  	%r865, %r71, %r848;
	add.s32 	%r866, %r865, %r69;
	shr.s32 	%r867, %r866, 31;
	shr.u32 	%r868, %r867, 3;
	add.s32 	%r869, %r866, %r868;
	shr.u32 	%r870, %r869, 29;
	shr.u32 	%r871, %r866, 31;
	sub.s32 	%r872, %r871, %r870;
	shl.b32 	%r873, %r872, 29;
	or.b32  	%r874, %r866, 1;
	add.s32 	%r875, %r874, %r873;
	mul.wide.s32 	%rd149, %r875, 4;
	add.s64 	%rd150, %rd2, %rd149;
	ld.global.v4.u32 	{%r876, %r877, %r878, %r879}, [%rd150+-4];
	add.s32 	%r880, %r2384, %r95;
	shl.b32 	%r881, %r880, 13;
	and.b32  	%r882, %r881, 536764416;
	or.b32  	%r883, %r70, %r882;
	add.s32 	%r884, %r883, %r69;
	shr.s32 	%r885, %r884, 31;
	shr.u32 	%r886, %r885, 3;
	add.s32 	%r887, %r884, %r886;
	shr.s32 	%r888, %r887, 29;
	setp.lt.s32 	%p29, %r884, 0;
	and.b32  	%r889, %r887, -536870912;
	setp.ne.s32 	%p30, %r889, %r884;
	and.pred  	%p31, %p29, %p30;
	selp.u32 	%r890, 1, 0, %p31;
	sub.s32 	%r891, %r890, %r888;
	shl.b32 	%r892, %r891, 29;
	or.b32  	%r893, %r884, 1;
	add.s32 	%r894, %r893, %r892;
	mul.wide.s32 	%rd151, %r894, 4;
	add.s64 	%rd152, %rd2, %rd151;
	ld.global.v4.u32 	{%r895, %r896, %r897, %r898}, [%rd152+-4];
	or.b32  	%r899, %r71, %r882;
	add.s32 	%r900, %r899, %r69;
	shr.s32 	%r901, %r900, 31;
	shr.u32 	%r902, %r901, 3;
	add.s32 	%r903, %r900, %r902;
	shr.u32 	%r904, %r903, 29;
	shr.u32 	%r905, %r900, 31;
	sub.s32 	%r906, %r905, %r904;
	shl.b32 	%r907, %r906, 29;
	or.b32  	%r908, %r900, 1;
	add.s32 	%r909, %r908, %r907;
	mul.wide.s32 	%rd153, %r909, 4;
	add.s64 	%rd154, %rd2, %rd153;
	ld.global.v4.u32 	{%r910, %r911, %r912, %r913}, [%rd154+-4];
	add.s32 	%r914, %r2384, %r96;
	shl.b32 	%r915, %r914, 13;
	and.b32  	%r916, %r915, 536797184;
	or.b32  	%r917, %r70, %r916;
	add.s32 	%r918, %r917, %r69;
	shr.s32 	%r919, %r918, 31;
	shr.u32 	%r920, %r919, 3;
	add.s32 	%r921, %r918, %r920;
	shr.s32 	%r922, %r921, 29;
	setp.lt.s32 	%p32, %r918, 0;
	and.b32  	%r923, %r921, -536870912;
	setp.ne.s32 	%p33, %r923, %r918;
	and.pred  	%p34, %p32, %p33;
	selp.u32 	%r924, 1, 0, %p34;
	sub.s32 	%r925, %r924, %r922;
	shl.b32 	%r926, %r925, 29;
	or.b32  	%r927, %r918, 1;
	add.s32 	%r928, %r927, %r926;
	mul.wide.s32 	%rd155, %r928, 4;
	add.s64 	%rd156, %rd2, %rd155;
	ld.global.v4.u32 	{%r929, %r930, %r931, %r932}, [%rd156+-4];
	or.b32  	%r933, %r71, %r916;
	add.s32 	%r934, %r933, %r69;
	shr.s32 	%r935, %r934, 31;
	shr.u32 	%r936, %r935, 3;
	add.s32 	%r937, %r934, %r936;
	shr.u32 	%r938, %r937, 29;
	shr.u32 	%r939, %r934, 31;
	sub.s32 	%r940, %r939, %r938;
	shl.b32 	%r941, %r940, 29;
	or.b32  	%r942, %r934, 1;
	add.s32 	%r943, %r942, %r941;
	mul.wide.s32 	%rd157, %r943, 4;
	add.s64 	%rd158, %rd2, %rd157;
	ld.global.v4.u32 	{%r944, %r945, %r946, %r947}, [%rd158+-4];
	add.s32 	%r948, %r2384, %r97;
	shl.b32 	%r949, %r948, 13;
	and.b32  	%r950, %r949, 536829952;
	or.b32  	%r951, %r70, %r950;
	add.s32 	%r952, %r951, %r69;
	shr.s32 	%r953, %r952, 31;
	shr.u32 	%r954, %r953, 3;
	add.s32 	%r955, %r952, %r954;
	shr.s32 	%r956, %r955, 29;
	setp.lt.s32 	%p35, %r952, 0;
	and.b32  	%r957, %r955, -536870912;
	setp.ne.s32 	%p36, %r957, %r952;
	and.pred  	%p37, %p35, %p36;
	selp.u32 	%r958, 1, 0, %p37;
	sub.s32 	%r959, %r958, %r956;
	shl.b32 	%r960, %r959, 29;
	or.b32  	%r961, %r952, 1;
	add.s32 	%r962, %r961, %r960;
	mul.wide.s32 	%rd159, %r962, 4;
	add.s64 	%rd160, %rd2, %rd159;
	ld.global.v4.u32 	{%r963, %r964, %r965, %r966}, [%rd160+-4];
	or.b32  	%r967, %r71, %r950;
	add.s32 	%r968, %r967, %r69;
	shr.s32 	%r969, %r968, 31;
	shr.u32 	%r970, %r969, 3;
	add.s32 	%r971, %r968, %r970;
	shr.u32 	%r972, %r971, 29;
	shr.u32 	%r973, %r968, 31;
	sub.s32 	%r974, %r973, %r972;
	shl.b32 	%r975, %r974, 29;
	or.b32  	%r976, %r968, 1;
	add.s32 	%r977, %r976, %r975;
	mul.wide.s32 	%rd161, %r977, 4;
	add.s64 	%rd162, %rd2, %rd161;
	ld.global.v4.u32 	{%r978, %r979, %r980, %r981}, [%rd162+-4];
	add.s32 	%r982, %r2384, %r98;
	shl.b32 	%r983, %r982, 13;
	and.b32  	%r984, %r983, 536862720;
	or.b32  	%r985, %r70, %r984;
	add.s32 	%r986, %r985, %r69;
	shr.s32 	%r987, %r986, 31;
	shr.u32 	%r988, %r987, 3;
	add.s32 	%r989, %r986, %r988;
	shr.s32 	%r990, %r989, 29;
	setp.lt.s32 	%p38, %r986, 0;
	and.b32  	%r991, %r989, -536870912;
	setp.ne.s32 	%p39, %r991, %r986;
	and.pred  	%p40, %p38, %p39;
	selp.u32 	%r992, 1, 0, %p40;
	sub.s32 	%r993, %r992, %r990;
	shl.b32 	%r994, %r993, 29;
	or.b32  	%r995, %r986, 1;
	add.s32 	%r996, %r995, %r994;
	mul.wide.s32 	%rd163, %r996, 4;
	add.s64 	%rd164, %rd2, %rd163;
	ld.global.v4.u32 	{%r997, %r998, %r999, %r1000}, [%rd164+-4];
	or.b32  	%r1001, %r71, %r984;
	add.s32 	%r1002, %r1001, %r69;
	shr.s32 	%r1003, %r1002, 31;
	shr.u32 	%r1004, %r1003, 3;
	add.s32 	%r1005, %r1002, %r1004;
	shr.u32 	%r1006, %r1005, 29;
	shr.u32 	%r1007, %r1002, 31;
	sub.s32 	%r1008, %r1007, %r1006;
	shl.b32 	%r1009, %r1008, 29;
	or.b32  	%r1010, %r1002, 1;
	add.s32 	%r1011, %r1010, %r1009;
	mul.wide.s32 	%rd165, %r1011, 4;
	add.s64 	%rd166, %rd2, %rd165;
	ld.global.v4.u32 	{%r1012, %r1013, %r1014, %r1015}, [%rd166+-4];
	st.shared.u32 	[%rd10], %r759;
	st.shared.u32 	[%rd12+4], %r760;
	st.shared.u32 	[%rd12+8], %r761;
	st.shared.u32 	[%rd12+12], %r762;
	st.shared.u32 	[%rd13], %r774;
	st.shared.u32 	[%rd14], %r775;
	st.shared.u32 	[%rd15], %r776;
	st.shared.u32 	[%rd16], %r777;
	and.b32  	%r1016, %r778, 7;
	mul.lo.s32 	%r1017, %r1016, 257;
	add.s32 	%r1018, %r744, %r1017;
	mul.wide.u32 	%rd167, %r1018, 4;
	add.s64 	%rd169, %rd110, %rd167;
	st.shared.u32 	[%rd169], %r793;
	cvt.u64.u32 	%rd170, %r1017;
	add.s64 	%rd171, %rd11, %rd170;
	shl.b64 	%rd172, %rd171, 2;
	add.s64 	%rd173, %rd110, %rd172;
	st.shared.u32 	[%rd173+4], %r794;
	st.shared.u32 	[%rd173+8], %r795;
	st.shared.u32 	[%rd173+12], %r796;
	add.s32 	%r1019, %r1017, %r72;
	mul.wide.u32 	%rd174, %r1019, 4;
	add.s64 	%rd175, %rd110, %rd174;
	st.shared.u32 	[%rd175], %r808;
	add.s32 	%r1020, %r1017, %r73;
	mul.wide.u32 	%rd176, %r1020, 4;
	add.s64 	%rd177, %rd110, %rd176;
	st.shared.u32 	[%rd177], %r809;
	add.s32 	%r1021, %r1017, %r74;
	mul.wide.u32 	%rd178, %r1021, 4;
	add.s64 	%rd179, %rd110, %rd178;
	st.shared.u32 	[%rd179], %r810;
	add.s32 	%r1022, %r1017, %r75;
	mul.wide.u32 	%rd180, %r1022, 4;
	add.s64 	%rd181, %rd110, %rd180;
	st.shared.u32 	[%rd181], %r811;
	and.b32  	%r1023, %r812, 11;
	mul.lo.s32 	%r1024, %r1023, 257;
	add.s32 	%r1025, %r744, %r1024;
	mul.wide.u32 	%rd182, %r1025, 4;
	add.s64 	%rd183, %rd110, %rd182;
	st.shared.u32 	[%rd183], %r827;
	cvt.u64.u32 	%rd184, %r1024;
	add.s64 	%rd185, %rd11, %rd184;
	shl.b64 	%rd186, %rd185, 2;
	add.s64 	%rd187, %rd110, %rd186;
	st.shared.u32 	[%rd187+4], %r828;
	st.shared.u32 	[%rd187+8], %r829;
	st.shared.u32 	[%rd187+12], %r830;
	add.s32 	%r1026, %r1024, %r72;
	mul.wide.u32 	%rd188, %r1026, 4;
	add.s64 	%rd189, %rd110, %rd188;
	st.shared.u32 	[%rd189], %r842;
	add.s32 	%r1027, %r1024, %r73;
	mul.wide.u32 	%rd190, %r1027, 4;
	add.s64 	%rd191, %rd110, %rd190;
	st.shared.u32 	[%rd191], %r843;
	add.s32 	%r1028, %r1024, %r74;
	mul.wide.u32 	%rd192, %r1028, 4;
	add.s64 	%rd193, %rd110, %rd192;
	st.shared.u32 	[%rd193], %r844;
	add.s32 	%r1029, %r1024, %r75;
	mul.wide.u32 	%rd194, %r1029, 4;
	add.s64 	%rd195, %rd110, %rd194;
	st.shared.u32 	[%rd195], %r845;
	and.b32  	%r1030, %r846, 15;
	mul.lo.s32 	%r1031, %r1030, 257;
	add.s32 	%r1032, %r744, %r1031;
	mul.wide.u32 	%rd196, %r1032, 4;
	add.s64 	%rd197, %rd110, %rd196;
	st.shared.u32 	[%rd197], %r861;
	cvt.u64.u32 	%rd198, %r1031;
	add.s64 	%rd199, %rd11, %rd198;
	shl.b64 	%rd200, %rd199, 2;
	add.s64 	%rd201, %rd110, %rd200;
	st.shared.u32 	[%rd201+4], %r862;
	st.shared.u32 	[%rd201+8], %r863;
	st.shared.u32 	[%rd201+12], %r864;
	add.s32 	%r1033, %r1031, %r72;
	mul.wide.u32 	%rd202, %r1033, 4;
	add.s64 	%rd203, %rd110, %rd202;
	st.shared.u32 	[%rd203], %r876;
	add.s32 	%r1034, %r1031, %r73;
	mul.wide.u32 	%rd204, %r1034, 4;
	add.s64 	%rd205, %rd110, %rd204;
	st.shared.u32 	[%rd205], %r877;
	add.s32 	%r1035, %r1031, %r74;
	mul.wide.u32 	%rd206, %r1035, 4;
	add.s64 	%rd207, %rd110, %rd206;
	st.shared.u32 	[%rd207], %r878;
	add.s32 	%r1036, %r1031, %r75;
	mul.wide.u32 	%rd208, %r1036, 4;
	add.s64 	%rd209, %rd110, %rd208;
	st.shared.u32 	[%rd209], %r879;
	and.b32  	%r1037, %r880, 19;
	mul.lo.s32 	%r1038, %r1037, 257;
	add.s32 	%r1039, %r744, %r1038;
	mul.wide.u32 	%rd210, %r1039, 4;
	add.s64 	%rd211, %rd110, %rd210;
	st.shared.u32 	[%rd211], %r895;
	cvt.u64.u32 	%rd212, %r1038;
	add.s64 	%rd213, %rd11, %rd212;
	shl.b64 	%rd214, %rd213, 2;
	add.s64 	%rd215, %rd110, %rd214;
	st.shared.u32 	[%rd215+4], %r896;
	st.shared.u32 	[%rd215+8], %r897;
	st.shared.u32 	[%rd215+12], %r898;
	add.s32 	%r1040, %r1038, %r72;
	mul.wide.u32 	%rd216, %r1040, 4;
	add.s64 	%rd217, %rd110, %rd216;
	st.shared.u32 	[%rd217], %r910;
	add.s32 	%r1041, %r1038, %r73;
	mul.wide.u32 	%rd218, %r1041, 4;
	add.s64 	%rd219, %rd110, %rd218;
	st.shared.u32 	[%rd219], %r911;
	add.s32 	%r1042, %r1038, %r74;
	mul.wide.u32 	%rd220, %r1042, 4;
	add.s64 	%rd221, %rd110, %rd220;
	st.shared.u32 	[%rd221], %r912;
	add.s32 	%r1043, %r1038, %r75;
	mul.wide.u32 	%rd222, %r1043, 4;
	add.s64 	%rd223, %rd110, %rd222;
	st.shared.u32 	[%rd223], %r913;
	and.b32  	%r1044, %r914, 23;
	mul.lo.s32 	%r1045, %r1044, 257;
	add.s32 	%r1046, %r744, %r1045;
	mul.wide.u32 	%rd224, %r1046, 4;
	add.s64 	%rd225, %rd110, %rd224;
	st.shared.u32 	[%rd225], %r929;
	cvt.u64.u32 	%rd226, %r1045;
	add.s64 	%rd227, %rd11, %rd226;
	shl.b64 	%rd228, %rd227, 2;
	add.s64 	%rd229, %rd110, %rd228;
	st.shared.u32 	[%rd229+4], %r930;
	st.shared.u32 	[%rd229+8], %r931;
	st.shared.u32 	[%rd229+12], %r932;
	add.s32 	%r1047, %r1045, %r72;
	mul.wide.u32 	%rd230, %r1047, 4;
	add.s64 	%rd231, %rd110, %rd230;
	st.shared.u32 	[%rd231], %r944;
	add.s32 	%r1048, %r1045, %r73;
	mul.wide.u32 	%rd232, %r1048, 4;
	add.s64 	%rd233, %rd110, %rd232;
	st.shared.u32 	[%rd233], %r945;
	add.s32 	%r1049, %r1045, %r74;
	mul.wide.u32 	%rd234, %r1049, 4;
	add.s64 	%rd235, %rd110, %rd234;
	st.shared.u32 	[%rd235], %r946;
	add.s32 	%r1050, %r1045, %r75;
	mul.wide.u32 	%rd236, %r1050, 4;
	add.s64 	%rd237, %rd110, %rd236;
	st.shared.u32 	[%rd237], %r947;
	and.b32  	%r1051, %r948, 27;
	mul.lo.s32 	%r1052, %r1051, 257;
	add.s32 	%r1053, %r744, %r1052;
	mul.wide.u32 	%rd238, %r1053, 4;
	add.s64 	%rd239, %rd110, %rd238;
	st.shared.u32 	[%rd239], %r963;
	cvt.u64.u32 	%rd240, %r1052;
	add.s64 	%rd241, %rd11, %rd240;
	shl.b64 	%rd242, %rd241, 2;
	add.s64 	%rd243, %rd110, %rd242;
	st.shared.u32 	[%rd243+4], %r964;
	st.shared.u32 	[%rd243+8], %r965;
	st.shared.u32 	[%rd243+12], %r966;
	add.s32 	%r1054, %r1052, %r72;
	mul.wide.u32 	%rd244, %r1054, 4;
	add.s64 	%rd245, %rd110, %rd244;
	st.shared.u32 	[%rd245], %r978;
	add.s32 	%r1055, %r1052, %r73;
	mul.wide.u32 	%rd246, %r1055, 4;
	add.s64 	%rd247, %rd110, %rd246;
	st.shared.u32 	[%rd247], %r979;
	add.s32 	%r1056, %r1052, %r74;
	mul.wide.u32 	%rd248, %r1056, 4;
	add.s64 	%rd249, %rd110, %rd248;
	st.shared.u32 	[%rd249], %r980;
	add.s32 	%r1057, %r1052, %r75;
	mul.wide.u32 	%rd250, %r1057, 4;
	add.s64 	%rd251, %rd110, %rd250;
	st.shared.u32 	[%rd251], %r981;
	and.b32  	%r1058, %r982, 31;
	mul.lo.s32 	%r1059, %r1058, 257;
	add.s32 	%r1060, %r744, %r1059;
	mul.wide.u32 	%rd252, %r1060, 4;
	add.s64 	%rd253, %rd110, %rd252;
	st.shared.u32 	[%rd253], %r997;
	cvt.u64.u32 	%rd254, %r1059;
	add.s64 	%rd255, %rd11, %rd254;
	shl.b64 	%rd256, %rd255, 2;
	add.s64 	%rd257, %rd110, %rd256;
	st.shared.u32 	[%rd257+4], %r998;
	st.shared.u32 	[%rd257+8], %r999;
	st.shared.u32 	[%rd257+12], %r1000;
	add.s32 	%r1061, %r1059, %r72;
	mul.wide.u32 	%rd258, %r1061, 4;
	add.s64 	%rd259, %rd110, %rd258;
	st.shared.u32 	[%rd259], %r1012;
	add.s32 	%r1062, %r1059, %r73;
	mul.wide.u32 	%rd260, %r1062, 4;
	add.s64 	%rd261, %rd110, %rd260;
	st.shared.u32 	[%rd261], %r1013;
	add.s32 	%r1063, %r1059, %r74;
	mul.wide.u32 	%rd262, %r1063, 4;
	add.s64 	%rd263, %rd110, %rd262;
	st.shared.u32 	[%rd263], %r1014;
	add.s32 	%r1064, %r1059, %r75;
	mul.wide.u32 	%rd264, %r1064, 4;
	add.s64 	%rd265, %rd110, %rd264;
	st.shared.u32 	[%rd265], %r1015;
	bar.sync 	0;
	mov.u32 	%r2391, %r1077;
$L__BB0_14:                             // %L21926
                                        //   Parent Loop BB0_11 Depth=1
                                        //     Parent Loop BB0_13 Depth=2
                                        // =>    This Inner Loop Header: Depth=3
	or.b32  	%r2101, %r77, %r2391;
	mad.lo.s32 	%r2102, %r2101, 257, %r76;
	mul.wide.u32 	%rd266, %r2102, 4;
	add.s64 	%rd268, %rd110, %rd266;
	ld.shared.u32 	%r1066, [%rd268];
	mov.u32 	%r1067, 134744072;
	mov.u32 	%r1068, 252645135;
	// begin inline asm
	lop3.b32 %r1065, %r1066, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2103, %r1065, 2021161080;
	xor.b32  	%r1076, %r2103, -2139062144;
	shr.u32 	%r1070, %r1066, 4;
	// begin inline asm
	lop3.b32 %r1069, %r1070, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2104, %r1069, 2021161080;
	xor.b32  	%r1082, %r2104, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1073, %r1074}, {%r1075}, {%r1076}, {%r1077, %r1077};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1079, %r1080}, {%r1081}, {%r1082}, {%r1077, %r1077};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1085, %r1086}, {%r1075}, {%r1082}, {%r1077, %r1077};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1091, %r1092}, {%r1081}, {%r1076}, {%r1085, %r1086};
	// end inline asm
	ld.shared.u32 	%r1098, [%rd268+4];
	// begin inline asm
	lop3.b32 %r1097, %r1098, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2105, %r1097, 2021161080;
	xor.b32  	%r1108, %r2105, -2139062144;
	shr.u32 	%r1102, %r1098, 4;
	// begin inline asm
	lop3.b32 %r1101, %r1102, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2106, %r1101, 2021161080;
	xor.b32  	%r1114, %r2106, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1105, %r1106}, {%r1107}, {%r1108}, {%r1073, %r1074};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1111, %r1112}, {%r1113}, {%r1114}, {%r1079, %r1080};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1117, %r1118}, {%r1107}, {%r1114}, {%r1091, %r1092};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1123, %r1124}, {%r1113}, {%r1108}, {%r1117, %r1118};
	// end inline asm
	ld.shared.u32 	%r1130, [%rd268+8];
	// begin inline asm
	lop3.b32 %r1129, %r1130, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2107, %r1129, 2021161080;
	xor.b32  	%r1140, %r2107, -2139062144;
	shr.u32 	%r1134, %r1130, 4;
	// begin inline asm
	lop3.b32 %r1133, %r1134, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2108, %r1133, 2021161080;
	xor.b32  	%r1146, %r2108, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1137, %r1138}, {%r1139}, {%r1140}, {%r1105, %r1106};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1143, %r1144}, {%r1145}, {%r1146}, {%r1111, %r1112};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1149, %r1150}, {%r1139}, {%r1146}, {%r1123, %r1124};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1155, %r1156}, {%r1145}, {%r1140}, {%r1149, %r1150};
	// end inline asm
	ld.shared.u32 	%r1162, [%rd268+12];
	// begin inline asm
	lop3.b32 %r1161, %r1162, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2109, %r1161, 2021161080;
	xor.b32  	%r1172, %r2109, -2139062144;
	shr.u32 	%r1166, %r1162, 4;
	// begin inline asm
	lop3.b32 %r1165, %r1166, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2110, %r1165, 2021161080;
	xor.b32  	%r1178, %r2110, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1169, %r1170}, {%r1171}, {%r1172}, {%r1137, %r1138};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1175, %r1176}, {%r1177}, {%r1178}, {%r1143, %r1144};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1181, %r1182}, {%r1171}, {%r1178}, {%r1155, %r1156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1187, %r1188}, {%r1177}, {%r1172}, {%r1181, %r1182};
	// end inline asm
	ld.shared.u32 	%r1194, [%rd268+16];
	// begin inline asm
	lop3.b32 %r1193, %r1194, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2111, %r1193, 2021161080;
	xor.b32  	%r1204, %r2111, -2139062144;
	shr.u32 	%r1198, %r1194, 4;
	// begin inline asm
	lop3.b32 %r1197, %r1198, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2112, %r1197, 2021161080;
	xor.b32  	%r1210, %r2112, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1201, %r1202}, {%r1203}, {%r1204}, {%r1169, %r1170};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1207, %r1208}, {%r1209}, {%r1210}, {%r1175, %r1176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1213, %r1214}, {%r1203}, {%r1210}, {%r1187, %r1188};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1219, %r1220}, {%r1209}, {%r1204}, {%r1213, %r1214};
	// end inline asm
	ld.shared.u32 	%r1226, [%rd268+20];
	// begin inline asm
	lop3.b32 %r1225, %r1226, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2113, %r1225, 2021161080;
	xor.b32  	%r1236, %r2113, -2139062144;
	shr.u32 	%r1230, %r1226, 4;
	// begin inline asm
	lop3.b32 %r1229, %r1230, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2114, %r1229, 2021161080;
	xor.b32  	%r1242, %r2114, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1233, %r1234}, {%r1235}, {%r1236}, {%r1201, %r1202};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1239, %r1240}, {%r1241}, {%r1242}, {%r1207, %r1208};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1245, %r1246}, {%r1235}, {%r1242}, {%r1219, %r1220};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1251, %r1252}, {%r1241}, {%r1236}, {%r1245, %r1246};
	// end inline asm
	ld.shared.u32 	%r1258, [%rd268+24];
	// begin inline asm
	lop3.b32 %r1257, %r1258, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2115, %r1257, 2021161080;
	xor.b32  	%r1268, %r2115, -2139062144;
	shr.u32 	%r1262, %r1258, 4;
	// begin inline asm
	lop3.b32 %r1261, %r1262, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2116, %r1261, 2021161080;
	xor.b32  	%r1274, %r2116, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1265, %r1266}, {%r1267}, {%r1268}, {%r1233, %r1234};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1271, %r1272}, {%r1273}, {%r1274}, {%r1239, %r1240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1277, %r1278}, {%r1267}, {%r1274}, {%r1251, %r1252};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1283, %r1284}, {%r1273}, {%r1268}, {%r1277, %r1278};
	// end inline asm
	ld.shared.u32 	%r1290, [%rd268+28];
	// begin inline asm
	lop3.b32 %r1289, %r1290, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2117, %r1289, 2021161080;
	xor.b32  	%r1300, %r2117, -2139062144;
	shr.u32 	%r1294, %r1290, 4;
	// begin inline asm
	lop3.b32 %r1293, %r1294, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2118, %r1293, 2021161080;
	xor.b32  	%r1306, %r2118, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1297, %r1298}, {%r1299}, {%r1300}, {%r1265, %r1266};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1303, %r1304}, {%r1305}, {%r1306}, {%r1271, %r1272};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1309, %r1310}, {%r1299}, {%r1306}, {%r1283, %r1284};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1315, %r1316}, {%r1305}, {%r1300}, {%r1309, %r1310};
	// end inline asm
	ld.shared.u32 	%r1322, [%rd268+32];
	// begin inline asm
	lop3.b32 %r1321, %r1322, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2119, %r1321, 2021161080;
	xor.b32  	%r1332, %r2119, -2139062144;
	shr.u32 	%r1326, %r1322, 4;
	// begin inline asm
	lop3.b32 %r1325, %r1326, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2120, %r1325, 2021161080;
	xor.b32  	%r1338, %r2120, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1329, %r1330}, {%r1331}, {%r1332}, {%r1297, %r1298};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1335, %r1336}, {%r1337}, {%r1338}, {%r1303, %r1304};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1341, %r1342}, {%r1331}, {%r1338}, {%r1315, %r1316};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1347, %r1348}, {%r1337}, {%r1332}, {%r1341, %r1342};
	// end inline asm
	ld.shared.u32 	%r1354, [%rd268+36];
	// begin inline asm
	lop3.b32 %r1353, %r1354, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2121, %r1353, 2021161080;
	xor.b32  	%r1364, %r2121, -2139062144;
	shr.u32 	%r1358, %r1354, 4;
	// begin inline asm
	lop3.b32 %r1357, %r1358, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2122, %r1357, 2021161080;
	xor.b32  	%r1370, %r2122, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1361, %r1362}, {%r1363}, {%r1364}, {%r1329, %r1330};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1367, %r1368}, {%r1369}, {%r1370}, {%r1335, %r1336};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1373, %r1374}, {%r1363}, {%r1370}, {%r1347, %r1348};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1379, %r1380}, {%r1369}, {%r1364}, {%r1373, %r1374};
	// end inline asm
	ld.shared.u32 	%r1386, [%rd268+40];
	// begin inline asm
	lop3.b32 %r1385, %r1386, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2123, %r1385, 2021161080;
	xor.b32  	%r1396, %r2123, -2139062144;
	shr.u32 	%r1390, %r1386, 4;
	// begin inline asm
	lop3.b32 %r1389, %r1390, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2124, %r1389, 2021161080;
	xor.b32  	%r1402, %r2124, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1393, %r1394}, {%r1395}, {%r1396}, {%r1361, %r1362};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1399, %r1400}, {%r1401}, {%r1402}, {%r1367, %r1368};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1405, %r1406}, {%r1395}, {%r1402}, {%r1379, %r1380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1411, %r1412}, {%r1401}, {%r1396}, {%r1405, %r1406};
	// end inline asm
	ld.shared.u32 	%r1418, [%rd268+44];
	// begin inline asm
	lop3.b32 %r1417, %r1418, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2125, %r1417, 2021161080;
	xor.b32  	%r1428, %r2125, -2139062144;
	shr.u32 	%r1422, %r1418, 4;
	// begin inline asm
	lop3.b32 %r1421, %r1422, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2126, %r1421, 2021161080;
	xor.b32  	%r1434, %r2126, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1425, %r1426}, {%r1427}, {%r1428}, {%r1393, %r1394};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1431, %r1432}, {%r1433}, {%r1434}, {%r1399, %r1400};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1437, %r1438}, {%r1427}, {%r1434}, {%r1411, %r1412};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1443, %r1444}, {%r1433}, {%r1428}, {%r1437, %r1438};
	// end inline asm
	ld.shared.u32 	%r1450, [%rd268+48];
	// begin inline asm
	lop3.b32 %r1449, %r1450, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2127, %r1449, 2021161080;
	xor.b32  	%r1460, %r2127, -2139062144;
	shr.u32 	%r1454, %r1450, 4;
	// begin inline asm
	lop3.b32 %r1453, %r1454, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2128, %r1453, 2021161080;
	xor.b32  	%r1466, %r2128, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1457, %r1458}, {%r1459}, {%r1460}, {%r1425, %r1426};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1463, %r1464}, {%r1465}, {%r1466}, {%r1431, %r1432};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1469, %r1470}, {%r1459}, {%r1466}, {%r1443, %r1444};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1475, %r1476}, {%r1465}, {%r1460}, {%r1469, %r1470};
	// end inline asm
	ld.shared.u32 	%r1482, [%rd268+52];
	// begin inline asm
	lop3.b32 %r1481, %r1482, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2129, %r1481, 2021161080;
	xor.b32  	%r1492, %r2129, -2139062144;
	shr.u32 	%r1486, %r1482, 4;
	// begin inline asm
	lop3.b32 %r1485, %r1486, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2130, %r1485, 2021161080;
	xor.b32  	%r1498, %r2130, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1489, %r1490}, {%r1491}, {%r1492}, {%r1457, %r1458};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1495, %r1496}, {%r1497}, {%r1498}, {%r1463, %r1464};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1501, %r1502}, {%r1491}, {%r1498}, {%r1475, %r1476};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1507, %r1508}, {%r1497}, {%r1492}, {%r1501, %r1502};
	// end inline asm
	ld.shared.u32 	%r1514, [%rd268+56];
	// begin inline asm
	lop3.b32 %r1513, %r1514, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2131, %r1513, 2021161080;
	xor.b32  	%r1524, %r2131, -2139062144;
	shr.u32 	%r1518, %r1514, 4;
	// begin inline asm
	lop3.b32 %r1517, %r1518, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2132, %r1517, 2021161080;
	xor.b32  	%r1530, %r2132, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1521, %r1522}, {%r1523}, {%r1524}, {%r1489, %r1490};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1527, %r1528}, {%r1529}, {%r1530}, {%r1495, %r1496};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1533, %r1534}, {%r1523}, {%r1530}, {%r1507, %r1508};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1539, %r1540}, {%r1529}, {%r1524}, {%r1533, %r1534};
	// end inline asm
	ld.shared.u32 	%r1546, [%rd268+60];
	// begin inline asm
	lop3.b32 %r1545, %r1546, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2133, %r1545, 2021161080;
	xor.b32  	%r1556, %r2133, -2139062144;
	shr.u32 	%r1550, %r1546, 4;
	// begin inline asm
	lop3.b32 %r1549, %r1550, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2134, %r1549, 2021161080;
	xor.b32  	%r1562, %r2134, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1553, %r1554}, {%r1555}, {%r1556}, {%r1521, %r1522};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1559, %r1560}, {%r1561}, {%r1562}, {%r1527, %r1528};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1565, %r1566}, {%r1555}, {%r1562}, {%r1539, %r1540};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1571, %r1572}, {%r1561}, {%r1556}, {%r1565, %r1566};
	// end inline asm
	sub.s32 	%r2135, %r1553, %r1559;
	add.s32 	%r2136, %r2135, 8;
	shr.s32 	%r1579, %r2136, 4;
	add.s32 	%r2137, %r1571, 8;
	shr.s32 	%r1578, %r2137, 4;
	sub.s32 	%r2138, %r1554, %r1560;
	add.s32 	%r2139, %r2138, 8;
	shr.s32 	%r1582, %r2139, 4;
	add.s32 	%r2140, %r1572, 8;
	shr.s32 	%r1581, %r2140, 4;
	// begin inline asm
	cvt.pack.sat.s16.s32 %r1577, %r1578, %r1579;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s16.s32 %r1580, %r1581, %r1582;
	// end inline asm
	or.b32  	%r2141, %r2391, %r78;
	mul.lo.s32 	%r2142, %r2141, 20;
	add.s32 	%r2143, %r2142, %r79;
	mul.wide.u32 	%rd269, %r2143, 4;
	add.s64 	%rd271, %rd111, %rd269;
	st.shared.u32 	[%rd271], %r1577;
	add.s32 	%r2144, %r2142, 20;
	add.s32 	%r2145, %r2144, %r79;
	mul.wide.u32 	%rd272, %r2145, 4;
	add.s64 	%rd273, %rd111, %rd272;
	st.shared.u32 	[%rd273], %r1580;
	ld.shared.u32 	%r1584, [%rd268];
	// begin inline asm
	lop3.b32 %r1583, %r1584, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2146, %r1583, 2021161080;
	xor.b32  	%r1594, %r2146, -2139062144;
	shr.u32 	%r1588, %r1584, 4;
	// begin inline asm
	lop3.b32 %r1587, %r1588, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2147, %r1587, 2021161080;
	xor.b32  	%r1600, %r2147, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1591, %r1592}, {%r1593}, {%r1594}, {%r1077, %r1077};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1597, %r1598}, {%r1599}, {%r1600}, {%r1077, %r1077};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1603, %r1604}, {%r1593}, {%r1600}, {%r1077, %r1077};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1609, %r1610}, {%r1599}, {%r1594}, {%r1603, %r1604};
	// end inline asm
	ld.shared.u32 	%r1616, [%rd268+4];
	// begin inline asm
	lop3.b32 %r1615, %r1616, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2148, %r1615, 2021161080;
	xor.b32  	%r1626, %r2148, -2139062144;
	shr.u32 	%r1620, %r1616, 4;
	// begin inline asm
	lop3.b32 %r1619, %r1620, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2149, %r1619, 2021161080;
	xor.b32  	%r1632, %r2149, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1623, %r1624}, {%r1625}, {%r1626}, {%r1591, %r1592};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1629, %r1630}, {%r1631}, {%r1632}, {%r1597, %r1598};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1635, %r1636}, {%r1625}, {%r1632}, {%r1609, %r1610};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1641, %r1642}, {%r1631}, {%r1626}, {%r1635, %r1636};
	// end inline asm
	ld.shared.u32 	%r1648, [%rd268+8];
	// begin inline asm
	lop3.b32 %r1647, %r1648, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2150, %r1647, 2021161080;
	xor.b32  	%r1658, %r2150, -2139062144;
	shr.u32 	%r1652, %r1648, 4;
	// begin inline asm
	lop3.b32 %r1651, %r1652, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2151, %r1651, 2021161080;
	xor.b32  	%r1664, %r2151, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1655, %r1656}, {%r1657}, {%r1658}, {%r1623, %r1624};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1661, %r1662}, {%r1663}, {%r1664}, {%r1629, %r1630};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1667, %r1668}, {%r1657}, {%r1664}, {%r1641, %r1642};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1673, %r1674}, {%r1663}, {%r1658}, {%r1667, %r1668};
	// end inline asm
	ld.shared.u32 	%r1680, [%rd268+12];
	// begin inline asm
	lop3.b32 %r1679, %r1680, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2152, %r1679, 2021161080;
	xor.b32  	%r1690, %r2152, -2139062144;
	shr.u32 	%r1684, %r1680, 4;
	// begin inline asm
	lop3.b32 %r1683, %r1684, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2153, %r1683, 2021161080;
	xor.b32  	%r1696, %r2153, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1687, %r1688}, {%r1689}, {%r1690}, {%r1655, %r1656};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1693, %r1694}, {%r1695}, {%r1696}, {%r1661, %r1662};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1699, %r1700}, {%r1689}, {%r1696}, {%r1673, %r1674};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1705, %r1706}, {%r1695}, {%r1690}, {%r1699, %r1700};
	// end inline asm
	ld.shared.u32 	%r1712, [%rd268+16];
	// begin inline asm
	lop3.b32 %r1711, %r1712, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2154, %r1711, 2021161080;
	xor.b32  	%r1722, %r2154, -2139062144;
	shr.u32 	%r1716, %r1712, 4;
	// begin inline asm
	lop3.b32 %r1715, %r1716, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2155, %r1715, 2021161080;
	xor.b32  	%r1728, %r2155, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1719, %r1720}, {%r1721}, {%r1722}, {%r1687, %r1688};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1725, %r1726}, {%r1727}, {%r1728}, {%r1693, %r1694};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1731, %r1732}, {%r1721}, {%r1728}, {%r1705, %r1706};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1737, %r1738}, {%r1727}, {%r1722}, {%r1731, %r1732};
	// end inline asm
	ld.shared.u32 	%r1744, [%rd268+20];
	// begin inline asm
	lop3.b32 %r1743, %r1744, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2156, %r1743, 2021161080;
	xor.b32  	%r1754, %r2156, -2139062144;
	shr.u32 	%r1748, %r1744, 4;
	// begin inline asm
	lop3.b32 %r1747, %r1748, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2157, %r1747, 2021161080;
	xor.b32  	%r1760, %r2157, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1751, %r1752}, {%r1753}, {%r1754}, {%r1719, %r1720};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1757, %r1758}, {%r1759}, {%r1760}, {%r1725, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1763, %r1764}, {%r1753}, {%r1760}, {%r1737, %r1738};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1769, %r1770}, {%r1759}, {%r1754}, {%r1763, %r1764};
	// end inline asm
	ld.shared.u32 	%r1776, [%rd268+24];
	// begin inline asm
	lop3.b32 %r1775, %r1776, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2158, %r1775, 2021161080;
	xor.b32  	%r1786, %r2158, -2139062144;
	shr.u32 	%r1780, %r1776, 4;
	// begin inline asm
	lop3.b32 %r1779, %r1780, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2159, %r1779, 2021161080;
	xor.b32  	%r1792, %r2159, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1783, %r1784}, {%r1785}, {%r1786}, {%r1751, %r1752};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1789, %r1790}, {%r1791}, {%r1792}, {%r1757, %r1758};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1795, %r1796}, {%r1785}, {%r1792}, {%r1769, %r1770};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1801, %r1802}, {%r1791}, {%r1786}, {%r1795, %r1796};
	// end inline asm
	ld.shared.u32 	%r1808, [%rd268+28];
	// begin inline asm
	lop3.b32 %r1807, %r1808, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2160, %r1807, 2021161080;
	xor.b32  	%r1818, %r2160, -2139062144;
	shr.u32 	%r1812, %r1808, 4;
	// begin inline asm
	lop3.b32 %r1811, %r1812, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2161, %r1811, 2021161080;
	xor.b32  	%r1824, %r2161, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1815, %r1816}, {%r1817}, {%r1818}, {%r1783, %r1784};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1821, %r1822}, {%r1823}, {%r1824}, {%r1789, %r1790};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1827, %r1828}, {%r1817}, {%r1824}, {%r1801, %r1802};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1833, %r1834}, {%r1823}, {%r1818}, {%r1827, %r1828};
	// end inline asm
	ld.shared.u32 	%r1840, [%rd268+32];
	// begin inline asm
	lop3.b32 %r1839, %r1840, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2162, %r1839, 2021161080;
	xor.b32  	%r1850, %r2162, -2139062144;
	shr.u32 	%r1844, %r1840, 4;
	// begin inline asm
	lop3.b32 %r1843, %r1844, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2163, %r1843, 2021161080;
	xor.b32  	%r1856, %r2163, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1847, %r1848}, {%r1849}, {%r1850}, {%r1815, %r1816};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1853, %r1854}, {%r1855}, {%r1856}, {%r1821, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1859, %r1860}, {%r1849}, {%r1856}, {%r1833, %r1834};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1865, %r1866}, {%r1855}, {%r1850}, {%r1859, %r1860};
	// end inline asm
	ld.shared.u32 	%r1872, [%rd268+36];
	// begin inline asm
	lop3.b32 %r1871, %r1872, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2164, %r1871, 2021161080;
	xor.b32  	%r1882, %r2164, -2139062144;
	shr.u32 	%r1876, %r1872, 4;
	// begin inline asm
	lop3.b32 %r1875, %r1876, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2165, %r1875, 2021161080;
	xor.b32  	%r1888, %r2165, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1879, %r1880}, {%r1881}, {%r1882}, {%r1847, %r1848};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1885, %r1886}, {%r1887}, {%r1888}, {%r1853, %r1854};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1891, %r1892}, {%r1881}, {%r1888}, {%r1865, %r1866};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1897, %r1898}, {%r1887}, {%r1882}, {%r1891, %r1892};
	// end inline asm
	ld.shared.u32 	%r1904, [%rd268+40];
	// begin inline asm
	lop3.b32 %r1903, %r1904, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2166, %r1903, 2021161080;
	xor.b32  	%r1914, %r2166, -2139062144;
	shr.u32 	%r1908, %r1904, 4;
	// begin inline asm
	lop3.b32 %r1907, %r1908, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2167, %r1907, 2021161080;
	xor.b32  	%r1920, %r2167, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1911, %r1912}, {%r1913}, {%r1914}, {%r1879, %r1880};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1917, %r1918}, {%r1919}, {%r1920}, {%r1885, %r1886};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1923, %r1924}, {%r1913}, {%r1920}, {%r1897, %r1898};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1929, %r1930}, {%r1919}, {%r1914}, {%r1923, %r1924};
	// end inline asm
	ld.shared.u32 	%r1936, [%rd268+44];
	// begin inline asm
	lop3.b32 %r1935, %r1936, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2168, %r1935, 2021161080;
	xor.b32  	%r1946, %r2168, -2139062144;
	shr.u32 	%r1940, %r1936, 4;
	// begin inline asm
	lop3.b32 %r1939, %r1940, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2169, %r1939, 2021161080;
	xor.b32  	%r1952, %r2169, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1943, %r1944}, {%r1945}, {%r1946}, {%r1911, %r1912};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1949, %r1950}, {%r1951}, {%r1952}, {%r1917, %r1918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1955, %r1956}, {%r1945}, {%r1952}, {%r1929, %r1930};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1961, %r1962}, {%r1951}, {%r1946}, {%r1955, %r1956};
	// end inline asm
	ld.shared.u32 	%r1968, [%rd268+48];
	// begin inline asm
	lop3.b32 %r1967, %r1968, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2170, %r1967, 2021161080;
	xor.b32  	%r1978, %r2170, -2139062144;
	shr.u32 	%r1972, %r1968, 4;
	// begin inline asm
	lop3.b32 %r1971, %r1972, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2171, %r1971, 2021161080;
	xor.b32  	%r1984, %r2171, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1975, %r1976}, {%r1977}, {%r1978}, {%r1943, %r1944};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1981, %r1982}, {%r1983}, {%r1984}, {%r1949, %r1950};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1987, %r1988}, {%r1977}, {%r1984}, {%r1961, %r1962};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1993, %r1994}, {%r1983}, {%r1978}, {%r1987, %r1988};
	// end inline asm
	ld.shared.u32 	%r2000, [%rd268+52];
	// begin inline asm
	lop3.b32 %r1999, %r2000, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2172, %r1999, 2021161080;
	xor.b32  	%r2010, %r2172, -2139062144;
	shr.u32 	%r2004, %r2000, 4;
	// begin inline asm
	lop3.b32 %r2003, %r2004, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2173, %r2003, 2021161080;
	xor.b32  	%r2016, %r2173, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2007, %r2008}, {%r2009}, {%r2010}, {%r1975, %r1976};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2013, %r2014}, {%r2015}, {%r2016}, {%r1981, %r1982};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2019, %r2020}, {%r2009}, {%r2016}, {%r1993, %r1994};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2025, %r2026}, {%r2015}, {%r2010}, {%r2019, %r2020};
	// end inline asm
	ld.shared.u32 	%r2032, [%rd268+56];
	// begin inline asm
	lop3.b32 %r2031, %r2032, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2174, %r2031, 2021161080;
	xor.b32  	%r2042, %r2174, -2139062144;
	shr.u32 	%r2036, %r2032, 4;
	// begin inline asm
	lop3.b32 %r2035, %r2036, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2175, %r2035, 2021161080;
	xor.b32  	%r2048, %r2175, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2039, %r2040}, {%r2041}, {%r2042}, {%r2007, %r2008};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2045, %r2046}, {%r2047}, {%r2048}, {%r2013, %r2014};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2051, %r2052}, {%r2041}, {%r2048}, {%r2025, %r2026};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2057, %r2058}, {%r2047}, {%r2042}, {%r2051, %r2052};
	// end inline asm
	ld.shared.u32 	%r2064, [%rd268+60];
	// begin inline asm
	lop3.b32 %r2063, %r2064, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2176, %r2063, 2021161080;
	xor.b32  	%r2074, %r2176, -2139062144;
	shr.u32 	%r2068, %r2064, 4;
	// begin inline asm
	lop3.b32 %r2067, %r2068, %r1067, %r1068, 40;
	// end inline asm
	add.s32 	%r2177, %r2067, 2021161080;
	xor.b32  	%r2080, %r2177, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2071, %r2072}, {%r2073}, {%r2074}, {%r2039, %r2040};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2077, %r2078}, {%r2079}, {%r2080}, {%r2045, %r2046};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2083, %r2084}, {%r2073}, {%r2080}, {%r2057, %r2058};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2089, %r2090}, {%r2079}, {%r2074}, {%r2083, %r2084};
	// end inline asm
	sub.s32 	%r2178, %r2071, %r2077;
	add.s32 	%r2179, %r2178, 8;
	shr.s32 	%r2097, %r2179, 4;
	add.s32 	%r2180, %r2089, 8;
	shr.s32 	%r2096, %r2180, 4;
	sub.s32 	%r2181, %r2072, %r2078;
	add.s32 	%r2182, %r2181, 8;
	shr.s32 	%r2100, %r2182, 4;
	add.s32 	%r2183, %r2090, 8;
	shr.s32 	%r2099, %r2183, 4;
	// begin inline asm
	cvt.pack.sat.s16.s32 %r2095, %r2096, %r2097;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s16.s32 %r2098, %r2099, %r2100;
	// end inline asm
	add.s32 	%r2184, %r2142, %r80;
	mul.wide.u32 	%rd274, %r2184, 4;
	add.s64 	%rd275, %rd111, %rd274;
	st.shared.u32 	[%rd275], %r2095;
	add.s32 	%r2185, %r2144, %r80;
	mul.wide.u32 	%rd276, %r2185, 4;
	add.s64 	%rd277, %rd111, %rd276;
	st.shared.u32 	[%rd277], %r2098;
	add.s32 	%r2391, %r2391, 8;
	setp.ne.s32 	%p41, %r2391, 32;
	@%p41 bra 	$L__BB0_14;
// %bb.15:                              // %L28527
                                        //   in Loop: Header=BB0_13 Depth=2
	bar.sync 	0;
	ld.shared.u32 	%r2204, [%rd17];
	ld.shared.u32 	%r2205, [%rd18];
	ld.shared.u32 	%r2206, [%rd19];
	ld.shared.u32 	%r2207, [%rd20];
	ld.shared.u32 	%r2208, [%rd21];
	ld.shared.u32 	%r2209, [%rd22];
	ld.shared.u32 	%r2210, [%rd23];
	ld.shared.u32 	%r2211, [%rd24];
	ld.shared.u32 	%r2212, [%rd25];
	ld.shared.u32 	%r2213, [%rd26];
	ld.shared.u32 	%r2214, [%rd27];
	ld.shared.u32 	%r2215, [%rd28];
	ld.shared.u32 	%r2216, [%rd29];
	ld.shared.u32 	%r2217, [%rd30];
	ld.shared.u32 	%r2218, [%rd31];
	ld.shared.u32 	%r2219, [%rd9];
	cvt.s32.s16 	%r2220, %r2204;
	shr.s32 	%r2221, %r2204, 16;
	cvt.s32.s16 	%r2222, %r2205;
	shr.s32 	%r2223, %r2205, 16;
	cvt.s32.s16 	%r2224, %r2206;
	shr.s32 	%r2225, %r2206, 16;
	cvt.s32.s16 	%r2226, %r2207;
	shr.s32 	%r2227, %r2207, 16;
	cvt.s32.s16 	%r2228, %r2208;
	shr.s32 	%r2229, %r2208, 16;
	cvt.s32.s16 	%r2230, %r2209;
	shr.s32 	%r2231, %r2209, 16;
	cvt.s32.s16 	%r2232, %r2210;
	shr.s32 	%r2233, %r2210, 16;
	cvt.s32.s16 	%r2234, %r2211;
	shr.s32 	%r2235, %r2211, 16;
	cvt.s32.s16 	%r2236, %r2212;
	shr.s32 	%r2237, %r2212, 16;
	cvt.s32.s16 	%r2238, %r2213;
	shr.s32 	%r2239, %r2213, 16;
	cvt.s32.s16 	%r2240, %r2214;
	shr.s32 	%r2241, %r2214, 16;
	cvt.s32.s16 	%r2242, %r2215;
	shr.s32 	%r2243, %r2215, 16;
	cvt.s32.s16 	%r2244, %r2216;
	shr.s32 	%r2245, %r2216, 16;
	cvt.s32.s16 	%r2246, %r2217;
	shr.s32 	%r2247, %r2217, 16;
	cvt.s32.s16 	%r2248, %r2218;
	shr.s32 	%r2249, %r2218, 16;
	cvt.s32.s16 	%r2250, %r2219;
	shr.s32 	%r2251, %r2219, 16;
	add.s32 	%r2252, %r2220, %r81;
	add.s32 	%r2253, %r2252, %r2222;
	add.s32 	%r2254, %r2253, %r2224;
	add.s32 	%r2255, %r2254, %r2226;
	shr.s32 	%r2256, %r2255, %r82;
	add.s32 	%r2257, %r2221, %r81;
	add.s32 	%r2258, %r2257, %r2223;
	add.s32 	%r2259, %r2258, %r2225;
	add.s32 	%r2260, %r2259, %r2227;
	shr.s32 	%r2261, %r2260, %r82;
	add.s32 	%r2262, %r2228, %r81;
	add.s32 	%r2263, %r2262, %r2230;
	add.s32 	%r2264, %r2263, %r2232;
	add.s32 	%r2265, %r2264, %r2234;
	shr.s32 	%r2266, %r2265, %r82;
	add.s32 	%r2267, %r2229, %r81;
	add.s32 	%r2268, %r2267, %r2231;
	add.s32 	%r2269, %r2268, %r2233;
	add.s32 	%r2270, %r2269, %r2235;
	shr.s32 	%r2271, %r2270, %r82;
	add.s32 	%r2272, %r2236, %r81;
	add.s32 	%r2273, %r2272, %r2238;
	add.s32 	%r2274, %r2273, %r2240;
	add.s32 	%r2275, %r2274, %r2242;
	shr.s32 	%r2276, %r2275, %r82;
	add.s32 	%r2277, %r2237, %r81;
	add.s32 	%r2278, %r2277, %r2239;
	add.s32 	%r2279, %r2278, %r2241;
	add.s32 	%r2280, %r2279, %r2243;
	shr.s32 	%r2281, %r2280, %r82;
	add.s32 	%r2282, %r2244, %r81;
	add.s32 	%r2283, %r2282, %r2246;
	add.s32 	%r2284, %r2283, %r2248;
	add.s32 	%r2285, %r2284, %r2250;
	shr.s32 	%r2286, %r2285, %r82;
	add.s32 	%r2287, %r2245, %r81;
	add.s32 	%r2288, %r2287, %r2247;
	add.s32 	%r2289, %r2288, %r2249;
	add.s32 	%r2290, %r2289, %r2251;
	shr.s32 	%r2291, %r2290, %r82;
	max.s32 	%r2292, %r2256, -7;
	min.s32 	%r2191, %r2292, 7;
	setp.ne.s32 	%p42, %r2191, %r2256;
	or.pred  	%p43, %p69, %p42;
	max.s32 	%r2293, %r2261, -7;
	min.s32 	%r2198, %r2293, 7;
	setp.ne.s32 	%p44, %r2198, %r2261;
	or.pred  	%p45, %p44, %p43;
	max.s32 	%r2294, %r2266, -7;
	min.s32 	%r2190, %r2294, 7;
	setp.ne.s32 	%p46, %r2190, %r2266;
	or.pred  	%p47, %p45, %p46;
	max.s32 	%r2295, %r2271, -7;
	min.s32 	%r2197, %r2295, 7;
	setp.ne.s32 	%p48, %r2197, %r2271;
	or.pred  	%p49, %p48, %p47;
	max.s32 	%r2296, %r2276, -7;
	min.s32 	%r2188, %r2296, 7;
	setp.ne.s32 	%p50, %r2188, %r2276;
	or.pred  	%p51, %p49, %p50;
	max.s32 	%r2297, %r2281, -7;
	min.s32 	%r2195, %r2297, 7;
	setp.ne.s32 	%p52, %r2195, %r2281;
	or.pred  	%p53, %p52, %p51;
	max.s32 	%r2298, %r2286, -7;
	min.s32 	%r2187, %r2298, 7;
	setp.ne.s32 	%p54, %r2187, %r2286;
	or.pred  	%p55, %p53, %p54;
	max.s32 	%r2299, %r2291, -7;
	min.s32 	%r2194, %r2299, 7;
	setp.ne.s32 	%p56, %r2194, %r2291;
	or.pred  	%p69, %p56, %p55;
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2186, %r2187, %r2188, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2189, %r2190, %r2191, %r2186;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2193, %r2194, %r2195, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2196, %r2197, %r2198, %r2193;
	// end inline asm
	shl.b32 	%r2203, %r2196, 4;
	// begin inline asm
	lop3.b32 %r2310, %r1068, %r2189, %r2203, 202;
	// end inline asm
	setp.eq.s32 	%p57, %r2384, 0;
	selp.b32 	%r2389, %r2310, %r2389, %p57;
	selp.b32 	%r2390, %r2310, %r2390, %p57;
	setp.eq.s32 	%p58, %r2384, 32;
	selp.b32 	%r2385, %r2310, %r2385, %p58;
	selp.b32 	%r2386, %r2310, %r2386, %p58;
	setp.eq.s32 	%p59, %r2384, 64;
	selp.b32 	%r2387, %r2310, %r2387, %p59;
	selp.b32 	%r2388, %r2310, %r2388, %p59;
	add.s32 	%r115, %r2384, 32;
	setp.ne.s32 	%p60, %r2384, 96;
	mov.u32 	%r2384, %r115;
	@%p60 bra 	$L__BB0_13;
// %bb.16:                              // %L30933.L30939_crit_edge
                                        //   in Loop: Header=BB0_11 Depth=1
	setp.eq.s32 	%p61, %r85, 0;
	setp.eq.s32 	%p62, %r84, 0;
	setp.eq.s32 	%p63, %r83, 0;
	// begin inline asm
	prmt.b32 %r2300, %r2389, %r2385, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2304, %r2390, %r2386, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2308, %r2387, %r2310, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2312, %r2388, %r2310, %r402;
	// end inline asm
	selp.b32 	%r2348, %r2304, %r2300, %p63;
	shfl.sync.bfly.b32	%r2349, %r2348, 1, 31, -1;
	selp.b32 	%r2317, %r2300, %r2349, %p63;
	selp.b32 	%r2318, %r2349, %r2304, %p63;
	selp.b32 	%r2350, %r2312, %r2308, %p63;
	shfl.sync.bfly.b32	%r2351, %r2350, 1, 31, -1;
	selp.b32 	%r2325, %r2308, %r2351, %p63;
	selp.b32 	%r2326, %r2351, %r2312, %p63;
	// begin inline asm
	prmt.b32 %r2316, %r2317, %r2318, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2320, %r2317, %r2318, %r402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2324, %r2325, %r2326, %r398;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2328, %r2325, %r2326, %r402;
	// end inline asm
	selp.b32 	%r2352, %r2324, %r2316, %p62;
	shfl.sync.bfly.b32	%r2353, %r2352, 2, 31, -1;
	selp.b32 	%r2333, %r2316, %r2353, %p62;
	selp.b32 	%r2334, %r2353, %r2324, %p62;
	selp.b32 	%r2354, %r2328, %r2320, %p62;
	shfl.sync.bfly.b32	%r2355, %r2354, 2, 31, -1;
	selp.b32 	%r2341, %r2320, %r2355, %p62;
	selp.b32 	%r2342, %r2355, %r2328, %p62;
	// begin inline asm
	prmt.b32 %r2332, %r2333, %r2334, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2336, %r2333, %r2334, %r146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2340, %r2341, %r2342, %r142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2344, %r2341, %r2342, %r146;
	// end inline asm
	selp.b32 	%r2356, %r2340, %r2332, %p61;
	shfl.sync.bfly.b32	%r2357, %r2356, 4, 31, -1;
	selp.b32 	%r2358, %r2332, %r2357, %p61;
	selp.b32 	%r2359, %r2357, %r2340, %p61;
	selp.b32 	%r2360, %r2344, %r2336, %p61;
	shfl.sync.bfly.b32	%r2361, %r2360, 4, 31, -1;
	selp.b32 	%r2362, %r2336, %r2361, %p61;
	selp.b32 	%r2363, %r2361, %r2344, %p61;
	selp.b32 	%r2364, %r2362, %r2358, %p63;
	shfl.sync.bfly.b32	%r2365, %r2364, 1, 31, -1;
	selp.b32 	%r2366, %r2358, %r2365, %p63;
	selp.b32 	%r2367, %r2365, %r2362, %p63;
	selp.b32 	%r2368, %r2363, %r2359, %p63;
	shfl.sync.bfly.b32	%r2369, %r2368, 1, 31, -1;
	selp.b32 	%r2370, %r2359, %r2369, %p63;
	selp.b32 	%r2371, %r2369, %r2363, %p63;
	and.b32  	%r2372, %r2383, 16256;
	or.b32  	%r2373, %r2372, %r89;
	or.b32  	%r2374, %r2373, %r86;
	or.b32  	%r2375, %r2374, %r87;
	or.b32  	%r2376, %r88, %r2375;
	cvt.u64.u32 	%rd278, %r2376;
	add.s64 	%rd279, %rd4, %rd278;
	st.global.v4.u32 	[%rd279], {%r2366, %r2370, %r2367, %r2371};
	add.s32 	%r116, %r2383, 128;
	setp.ne.s32 	%p64, %r2383, 65408;
	mov.u32 	%r2383, %r116;
	@%p64 bra 	$L__BB0_11;
$L__BB0_17:                             // %L31320
	selp.u32 	%r2377, 1, 0, %p69;
	{ 
	.reg .pred 	%p1; 
	.reg .pred 	%p2; 
	setp.ne.u32 	%p1, %r2377, 0; 
	bar.red.or.pred 	%p2, 0, %p1; 
	selp.u32 	%r2378, 1, 0, %p2; 
	}
	setp.eq.s32 	%p65, %r2378, 0;
	or.pred  	%p66, %p65, %p1;
	@%p66 bra 	$L__BB0_19;
// %bb.18:                              // %L31351
	st.global.u32 	[%rd8], %r129;
$L__BB0_19:                             // %L31397
	mov.u32 	%r2380, 0;
	st.global.u32 	[%rd7], %r2380;
	ret;
$L__BB0_7:                              // %L152
	mov.u32 	%r2381, 2;
	st.global.u32 	[%rd7], %r2381;
	mov.u64 	%rd280, exception2743;
	cvta.global.u64 	%rd281, %rd280;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd281;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd32;
	st.param.b32 	[param0+8], %r121;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd33, exception1;
	cvta.global.u64 	%rd34, %rd33;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd34;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd32;
	st.param.b32 	[param0+8], %r121;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_3:                              // %L24
	mov.u64 	%rd35, exception1;
	cvta.global.u64 	%rd36, %rd35;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd36;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd32;
	st.param.b32 	[param0+8], %r121;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_21:                             // %L370
	mov.u32 	%r136, 3;
	st.global.u32 	[%rd7], %r136;
	mov.u64 	%rd40, exception2743;
	cvta.global.u64 	%rd41, %rd40;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd41;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd32;
	st.param.b32 	[param0+8], %r121;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
