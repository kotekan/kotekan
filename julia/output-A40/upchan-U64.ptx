// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_11569
(
	.param .align 8 .b8 julia_power_by_squaring_11569_param_0[16],
	.param .b64 julia_power_by_squaring_11569_param_1,
	.param .b64 julia_power_by_squaring_11569_param_2
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2324[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<224>;
	.reg .b16 	%rs<1185>;
	.reg .f32 	%f<922>;
	.reg .b32 	%r<7805>;
	.reg .b64 	%rd<93>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r161, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd19, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r162, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r162, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L11
	ld.param.u64 	%rd24, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd20, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r163, %r1, 9;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r164, %r2, %r163;
	or.b32  	%r165, %r164, %r4;
	mul.wide.u32 	%rd30, %r165, 4;
	add.s64 	%rd4, %rd24, %rd30;
	mov.u32 	%r166, 1;
	st.global.u32 	[%rd4], %r166;
	ld.global.u32 	%r5, [%rd20];
	setp.lt.u32 	%p2, %r5, 32769;
	and.b32  	%r167, %r5, 255;
	setp.eq.s32 	%p3, %r167, 0;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %L271
	bfe.u32 	%r14, %r2, 1, 1;
	and.b32  	%r15, %r2, 1;
	bfe.u32 	%r17, %r2, 2, 1;
	shr.u32 	%r18, %r2, 4;
	shl.b32 	%r175, %r18, 1;
	shl.b32 	%r176, %r17, 2;
	shl.b32 	%r177, %r15, 3;
	shl.b32 	%r178, %r14, 4;
	or.b32  	%r179, %r177, %r178;
	or.b32  	%r180, %r176, %r179;
	or.b32  	%r181, %r175, %r180;
	bfe.u32 	%r20, %r2, 3, 1;
	or.b32  	%r21, %r20, %r181;
	or.b32  	%r22, %r21, 32;
	mov.f32 	%f185, 0f40000000;
	mov.f32 	%f186, 0f437F0000;
	div.approx.f32 	%f1, %f186, %f185;
	cvt.rn.f32.s32 	%f187, %r21;
	sub.f32 	%f188, %f187, %f1;
	mov.f32 	%f217, 0f42800000;
	div.approx.f32 	%f3, %f188, %f217;
	setp.eq.f32 	%p10, %f3, 0f00000000;
	mov.f32 	%f889, 0f3F800000;
	mov.f32 	%f882, %f889;
	@%p10 bra 	LBB0_6;
// %bb.5:                               // %L505
	sin.approx.f32 	%f218, %f3;
	div.approx.f32 	%f882, %f218, %f3;
LBB0_6:                                 // %L508
	cvt.rn.f32.s32 	%f221, %r22;
	sub.f32 	%f222, %f221, %f1;
	div.approx.f32 	%f8, %f222, %f217;
	setp.eq.f32 	%p16, %f8, 0f00000000;
	mov.f32 	%f883, %f889;
	@%p16 bra 	LBB0_8;
// %bb.7:                               // %L525
	sin.approx.f32 	%f252, %f8;
	div.approx.f32 	%f883, %f252, %f8;
LBB0_8:                                 // %L528
	or.b32  	%r199, %r21, 64;
	or.b32  	%r24, %r21, 96;
	cvt.rn.f32.s32 	%f256, %r199;
	sub.f32 	%f257, %f256, %f1;
	div.approx.f32 	%f12, %f257, %f217;
	setp.eq.f32 	%p22, %f12, 0f00000000;
	mov.f32 	%f884, %f889;
	@%p22 bra 	LBB0_10;
// %bb.9:                               // %L613
	sin.approx.f32 	%f287, %f12;
	div.approx.f32 	%f884, %f287, %f12;
LBB0_10:                                // %L616
	shl.b32 	%r169, %r2, 1;
	shl.b32 	%r7, %r2, 2;
	cvt.rn.f32.s32 	%f290, %r24;
	sub.f32 	%f291, %f290, %f1;
	div.approx.f32 	%f17, %f291, %f217;
	setp.eq.f32 	%p28, %f17, 0f00000000;
	mov.f32 	%f885, %f889;
	@%p28 bra 	LBB0_12;
// %bb.11:                              // %L633
	sin.approx.f32 	%f321, %f17;
	div.approx.f32 	%f885, %f321, %f17;
LBB0_12:                                // %L636
	and.b32  	%r6, %r169, 8;
	and.b32  	%r8, %r7, 32;
	or.b32  	%r217, %r21, 128;
	or.b32  	%r26, %r21, 160;
	cvt.rn.f32.s32 	%f325, %r217;
	sub.f32 	%f326, %f325, %f1;
	div.approx.f32 	%f21, %f326, %f217;
	setp.eq.f32 	%p34, %f21, 0f00000000;
	mov.f32 	%f886, %f889;
	@%p34 bra 	LBB0_14;
// %bb.13:                              // %L721
	sin.approx.f32 	%f356, %f21;
	div.approx.f32 	%f886, %f356, %f21;
LBB0_14:                                // %L724
	or.b32  	%r170, %r8, %r6;
	and.b32  	%r9, %r2, 16;
	cvt.rn.f32.s32 	%f359, %r26;
	sub.f32 	%f360, %f359, %f1;
	div.approx.f32 	%f26, %f360, %f217;
	setp.eq.f32 	%p40, %f26, 0f00000000;
	mov.f32 	%f887, %f889;
	@%p40 bra 	LBB0_16;
// %bb.15:                              // %L741
	sin.approx.f32 	%f390, %f26;
	div.approx.f32 	%f887, %f390, %f26;
LBB0_16:                                // %L744
	or.b32  	%r171, %r170, %r9;
	and.b32  	%r10, %r2, 2;
	or.b32  	%r235, %r21, 192;
	or.b32  	%r28, %r21, 224;
	cvt.rn.f32.s32 	%f394, %r235;
	sub.f32 	%f395, %f394, %f1;
	div.approx.f32 	%f30, %f395, %f217;
	setp.eq.f32 	%p46, %f30, 0f00000000;
	mov.f32 	%f888, %f889;
	@%p46 bra 	LBB0_18;
// %bb.17:                              // %L829
	sin.approx.f32 	%f425, %f30;
	div.approx.f32 	%f888, %f425, %f30;
LBB0_18:                                // %L832
	or.b32  	%r172, %r171, %r10;
	and.b32  	%r11, %r7, 4;
	cvt.rn.f32.s32 	%f428, %r28;
	sub.f32 	%f429, %f428, %f1;
	div.approx.f32 	%f35, %f429, %f217;
	setp.eq.f32 	%p52, %f35, 0f00000000;
	@%p52 bra 	LBB0_20;
// %bb.19:                              // %L849
	sin.approx.f32 	%f459, %f35;
	div.approx.f32 	%f889, %f459, %f35;
LBB0_20:                                // %L852
	or.b32  	%r173, %r172, %r11;
	mul.lo.s32 	%r30, %r21, 63;
	cvt.rn.f32.s32 	%f462, %r30;
	div.approx.f32 	%f38, %f462, %f217;
	abs.f32 	%f892, %f38;
	setp.lt.f32 	%p53, %f892, 0f40000000;
	@%p53 bra 	LBB0_32;
// %bb.21:
	setp.gtu.f32 	%p54, %f892, 0f4B800000;
	@%p54 bra 	LBB0_28;
	bra.uni 	LBB0_22;
LBB0_28:
	mov.b32 	%r32, %f892;
	and.b32  	%r253, %r32, 8388607;
	or.b32  	%r7763, %r253, 1065353216;
	mov.b32 	%f891, %r7763;
	add.s32 	%r254, %r32, -1073741824;
	and.b32  	%r7764, %r254, -8388608;
	setp.eq.s32 	%p60, %r7764, 0;
	@%p60 bra 	LBB0_31;
// %bb.29:                              // %.lr.ph1724.preheader
	mov.f32 	%f473, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f472,%f473;
	// end inline asm
LBB0_30:                                // %.lr.ph1724
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r255, %r7764, 192937984;
	add.s32 	%r256, %r255, %r7763;
	mov.b32 	%f474, %r256;
	mul.f32 	%f475, %f472, %f474;
	sub.f32 	%f476, %f474, %f475;
	fma.rn.f32 	%f477, %f476, %f472, %f475;
	sub.f32 	%f478, %f474, %f477;
	fma.rz.f32 	%f479, %f478, %f472, %f477;
	cvt.rzi.f32.f32 	%f480, %f479;
	sub.f32 	%f891, %f474, %f480;
	sub.s32 	%r7764, %r7764, %r255;
	mov.b32 	%r7763, %f891;
	setp.ne.s32 	%p61, %r7764, 0;
	setp.ne.s32 	%p62, %r7763, 0;
	and.pred  	%p63, %p61, %p62;
	@%p63 bra 	LBB0_30;
LBB0_31:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p64, %r32, 2139095039;
	selp.f32 	%f481, 0f7FFFFFFF, 0f4B800000, %p64;
	mul.f32 	%f482, %f891, 0f34000000;
	mul.f32 	%f892, %f481, %f482;
	bra.uni 	LBB0_32;
LBB0_22:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f465, %f892, %f185;
	cvt.rzi.f32.f32 	%f40, %f465;
	fma.rn.f32 	%f41, %f40, 0fC0000000, %f892;
	mov.b32 	%r31, %f41;
	setp.lt.u32 	%p55, %r31, 1073741824;
	mov.f32 	%f890, %f40;
	@%p55 bra 	LBB0_27;
// %bb.23:
	setp.lt.u32 	%p56, %r31, -2147483647;
	@%p56 bra 	LBB0_25;
// %bb.24:
	add.f32 	%f470, %f40, 0fBF800000;
	setp.lt.f32 	%p59, %f41, 0fC0000000;
	selp.f32 	%f471, %f470, %f40, %p59;
	add.f32 	%f890, %f471, 0fBF800000;
	bra.uni 	LBB0_27;
LBB0_25:
	add.f32 	%f890, %f40, 0f3F800000;
	setp.ltu.f32 	%p57, %f41, 0f40800000;
	@%p57 bra 	LBB0_27;
// %bb.26:                              // %__nv_fmaf_rn.exit.i.i.i
	fma.rn.f32 	%f467, %f185, 0fC0400000, %f41;
	setp.ge.f32 	%p58, %f467, 0f00000000;
	selp.f32 	%f468, %f890, %f40, %p58;
	add.f32 	%f469, %f468, 0f3F800000;
	add.f32 	%f890, %f469, 0f3F800000;
LBB0_27:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f892, %f890, 0fC0000000, %f892;
LBB0_32:                                // %__internal_fmodf_kernel.exit.i
	shr.u32 	%r174, %r173, 1;
	abs.f32 	%f483, %f892;
	setp.gtu.f32 	%p65, %f483, 0f7F800000;
	@%p65 bra 	LBB0_34;
// %bb.33:
	mov.b32 	%r257, %f38;
	and.b32  	%r258, %r257, -2147483648;
	mov.b32 	%r259, %f892;
	or.b32  	%r260, %r258, %r259;
	mov.b32 	%f892, %r260;
LBB0_34:                                // %__nv_fmodf.exit
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd33, %r174, 4;
	add.s32 	%r269, %r30, 2016;
	cvt.rn.f32.s32 	%f514, %r269;
	div.approx.f32 	%f57, %f514, %f217;
	abs.f32 	%f896, %f57;
	setp.lt.f32 	%p73, %f896, 0f40000000;
	@%p73 bra 	LBB0_46;
// %bb.35:
	setp.gtu.f32 	%p74, %f896, 0f4B800000;
	@%p74 bra 	LBB0_42;
	bra.uni 	LBB0_36;
LBB0_42:
	mov.b32 	%r40, %f896;
	and.b32  	%r270, %r40, 8388607;
	or.b32  	%r7765, %r270, 1065353216;
	mov.b32 	%f895, %r7765;
	add.s32 	%r271, %r40, -1073741824;
	and.b32  	%r7766, %r271, -8388608;
	setp.eq.s32 	%p80, %r7766, 0;
	@%p80 bra 	LBB0_45;
// %bb.43:                              // %.lr.ph1719.preheader
	mov.f32 	%f525, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f524,%f525;
	// end inline asm
LBB0_44:                                // %.lr.ph1719
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r272, %r7766, 192937984;
	add.s32 	%r273, %r272, %r7765;
	mov.b32 	%f526, %r273;
	mul.f32 	%f527, %f524, %f526;
	sub.f32 	%f528, %f526, %f527;
	fma.rn.f32 	%f529, %f528, %f524, %f527;
	sub.f32 	%f530, %f526, %f529;
	fma.rz.f32 	%f531, %f530, %f524, %f529;
	cvt.rzi.f32.f32 	%f532, %f531;
	sub.f32 	%f895, %f526, %f532;
	sub.s32 	%r7766, %r7766, %r272;
	mov.b32 	%r7765, %f895;
	setp.ne.s32 	%p81, %r7766, 0;
	setp.ne.s32 	%p82, %r7765, 0;
	and.pred  	%p83, %p81, %p82;
	@%p83 bra 	LBB0_44;
LBB0_45:                                // %__internal_fmodf_slowpath_mod.exit.i.i1213
	setp.gt.u32 	%p84, %r40, 2139095039;
	selp.f32 	%f533, 0f7FFFFFFF, 0f4B800000, %p84;
	mul.f32 	%f534, %f895, 0f34000000;
	mul.f32 	%f896, %f533, %f534;
	bra.uni 	LBB0_46;
LBB0_36:                                // %__nv_fast_fdividef.exit.i.i.i1179
	div.approx.f32 	%f517, %f896, %f185;
	cvt.rzi.f32.f32 	%f59, %f517;
	fma.rn.f32 	%f60, %f59, 0fC0000000, %f896;
	mov.b32 	%r39, %f60;
	setp.lt.u32 	%p75, %r39, 1073741824;
	mov.f32 	%f894, %f59;
	@%p75 bra 	LBB0_41;
// %bb.37:
	setp.lt.u32 	%p76, %r39, -2147483647;
	@%p76 bra 	LBB0_39;
// %bb.38:
	add.f32 	%f522, %f59, 0fBF800000;
	setp.lt.f32 	%p79, %f60, 0fC0000000;
	selp.f32 	%f523, %f522, %f59, %p79;
	add.f32 	%f894, %f523, 0fBF800000;
	bra.uni 	LBB0_41;
LBB0_39:
	add.f32 	%f894, %f59, 0f3F800000;
	setp.ltu.f32 	%p77, %f60, 0f40800000;
	@%p77 bra 	LBB0_41;
// %bb.40:                              // %__nv_fmaf_rn.exit.i.i.i1184
	fma.rn.f32 	%f519, %f185, 0fC0400000, %f60;
	setp.ge.f32 	%p78, %f519, 0f00000000;
	selp.f32 	%f520, %f894, %f59, %p78;
	add.f32 	%f521, %f520, 0f3F800000;
	add.f32 	%f894, %f521, 0f3F800000;
LBB0_41:                                // %__internal_fmodf_fastpath_quot.exit.i.i1187
	fma.rn.f32 	%f896, %f894, 0fC0000000, %f896;
LBB0_46:                                // %__internal_fmodf_kernel.exit.i1216
	add.s64 	%rd34, %rd1, %rd33;
	abs.f32 	%f535, %f896;
	setp.gtu.f32 	%p85, %f535, 0f7F800000;
	@%p85 bra 	LBB0_48;
// %bb.47:
	mov.b32 	%r274, %f57;
	and.b32  	%r275, %r274, -2147483648;
	mov.b32 	%r276, %f896;
	or.b32  	%r277, %r275, %r276;
	mov.b32 	%f896, %r277;
LBB0_48:                                // %__nv_fmodf.exit1219
	ld.global.u32 	%r12, [%rd34];
	mov.u64 	%rd35, 2;
	mov.u64 	%rd36, 6;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd19;
	st.param.b32 	[param0+8], %r161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd35;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd36;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_11569, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd37, [retval0+0];
	} // callseq 4
	setp.ne.s64 	%p93, %rd37, 64;
	@%p93 bra 	LBB0_119;
// %bb.49:                              // %L958
	shr.u32 	%r16, %r2, 2;
	and.b32  	%r292, %r2, 3;
	shl.b32 	%r293, %r292, 1;
	neg.s32 	%r49, %r293;
	mul.lo.s32 	%r50, %r49, %r16;
	cvt.rn.f32.s32 	%f74, %r50;
	mov.f32 	%f568, 0f41000000;
	div.approx.f32 	%f75, %f74, %f568;
	abs.f32 	%f900, %f75;
	setp.lt.f32 	%p94, %f900, 0f40000000;
	@%p94 bra 	LBB0_61;
// %bb.50:
	setp.gtu.f32 	%p95, %f900, 0f4B800000;
	@%p95 bra 	LBB0_57;
	bra.uni 	LBB0_51;
LBB0_57:
	mov.b32 	%r52, %f900;
	and.b32  	%r294, %r52, 8388607;
	or.b32  	%r7767, %r294, 1065353216;
	mov.b32 	%f899, %r7767;
	add.s32 	%r295, %r52, -1073741824;
	and.b32  	%r7768, %r295, -8388608;
	setp.eq.s32 	%p101, %r7768, 0;
	@%p101 bra 	LBB0_60;
// %bb.58:                              // %.lr.ph1709.preheader
	mov.f32 	%f578, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f577,%f578;
	// end inline asm
LBB0_59:                                // %.lr.ph1709
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r296, %r7768, 192937984;
	add.s32 	%r297, %r296, %r7767;
	mov.b32 	%f579, %r297;
	mul.f32 	%f580, %f577, %f579;
	sub.f32 	%f581, %f579, %f580;
	fma.rn.f32 	%f582, %f581, %f577, %f580;
	sub.f32 	%f583, %f579, %f582;
	fma.rz.f32 	%f584, %f583, %f577, %f582;
	cvt.rzi.f32.f32 	%f585, %f584;
	sub.f32 	%f899, %f579, %f585;
	sub.s32 	%r7768, %r7768, %r296;
	mov.b32 	%r7767, %f899;
	setp.ne.s32 	%p102, %r7768, 0;
	setp.ne.s32 	%p103, %r7767, 0;
	and.pred  	%p104, %p102, %p103;
	@%p104 bra 	LBB0_59;
LBB0_60:                                // %__internal_fmodf_slowpath_mod.exit.i.i1266
	setp.gt.u32 	%p105, %r52, 2139095039;
	selp.f32 	%f586, 0f7FFFFFFF, 0f4B800000, %p105;
	mul.f32 	%f587, %f899, 0f34000000;
	mul.f32 	%f900, %f586, %f587;
	bra.uni 	LBB0_61;
LBB0_51:                                // %__nv_fast_fdividef.exit.i.i.i1232
	div.approx.f32 	%f570, %f900, %f185;
	cvt.rzi.f32.f32 	%f77, %f570;
	fma.rn.f32 	%f78, %f77, 0fC0000000, %f900;
	mov.b32 	%r51, %f78;
	setp.lt.u32 	%p96, %r51, 1073741824;
	mov.f32 	%f898, %f77;
	@%p96 bra 	LBB0_56;
// %bb.52:
	setp.lt.u32 	%p97, %r51, -2147483647;
	@%p97 bra 	LBB0_54;
// %bb.53:
	add.f32 	%f575, %f77, 0fBF800000;
	setp.lt.f32 	%p100, %f78, 0fC0000000;
	selp.f32 	%f576, %f575, %f77, %p100;
	add.f32 	%f898, %f576, 0fBF800000;
	bra.uni 	LBB0_56;
LBB0_54:
	add.f32 	%f898, %f77, 0f3F800000;
	setp.ltu.f32 	%p98, %f78, 0f40800000;
	@%p98 bra 	LBB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i1237
	fma.rn.f32 	%f572, %f185, 0fC0400000, %f78;
	setp.ge.f32 	%p99, %f572, 0f00000000;
	selp.f32 	%f573, %f898, %f77, %p99;
	add.f32 	%f574, %f573, 0f3F800000;
	add.f32 	%f898, %f574, 0f3F800000;
LBB0_56:                                // %__internal_fmodf_fastpath_quot.exit.i.i1240
	fma.rn.f32 	%f900, %f898, 0fC0000000, %f900;
LBB0_61:                                // %__internal_fmodf_kernel.exit.i1269
	abs.f32 	%f588, %f900;
	setp.gtu.f32 	%p106, %f588, 0f7F800000;
	@%p106 bra 	LBB0_63;
// %bb.62:
	mov.b32 	%r298, %f75;
	and.b32  	%r299, %r298, -2147483648;
	mov.b32 	%r300, %f900;
	or.b32  	%r301, %r299, %r300;
	mov.b32 	%f900, %r301;
LBB0_63:                                // %__nv_fmodf.exit1272
	shl.b32 	%r310, %r16, 3;
	sub.s32 	%r311, %r50, %r310;
	cvt.rn.f32.s32 	%f94, %r311;
	div.approx.f32 	%f95, %f94, %f568;
	abs.f32 	%f904, %f95;
	setp.lt.f32 	%p114, %f904, 0f40000000;
	@%p114 bra 	LBB0_75;
// %bb.64:
	setp.gtu.f32 	%p115, %f904, 0f4B800000;
	@%p115 bra 	LBB0_71;
	bra.uni 	LBB0_65;
LBB0_71:
	mov.b32 	%r60, %f904;
	and.b32  	%r312, %r60, 8388607;
	or.b32  	%r7769, %r312, 1065353216;
	mov.b32 	%f903, %r7769;
	add.s32 	%r313, %r60, -1073741824;
	and.b32  	%r7770, %r313, -8388608;
	setp.eq.s32 	%p121, %r7770, 0;
	@%p121 bra 	LBB0_74;
// %bb.72:                              // %.lr.ph1699.preheader
	mov.f32 	%f629, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f628,%f629;
	// end inline asm
LBB0_73:                                // %.lr.ph1699
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r314, %r7770, 192937984;
	add.s32 	%r315, %r314, %r7769;
	mov.b32 	%f630, %r315;
	mul.f32 	%f631, %f628, %f630;
	sub.f32 	%f632, %f630, %f631;
	fma.rn.f32 	%f633, %f632, %f628, %f631;
	sub.f32 	%f634, %f630, %f633;
	fma.rz.f32 	%f635, %f634, %f628, %f633;
	cvt.rzi.f32.f32 	%f636, %f635;
	sub.f32 	%f903, %f630, %f636;
	sub.s32 	%r7770, %r7770, %r314;
	mov.b32 	%r7769, %f903;
	setp.ne.s32 	%p122, %r7770, 0;
	setp.ne.s32 	%p123, %r7769, 0;
	and.pred  	%p124, %p122, %p123;
	@%p124 bra 	LBB0_73;
LBB0_74:                                // %__internal_fmodf_slowpath_mod.exit.i.i1319
	setp.gt.u32 	%p125, %r60, 2139095039;
	selp.f32 	%f637, 0f7FFFFFFF, 0f4B800000, %p125;
	mul.f32 	%f638, %f903, 0f34000000;
	mul.f32 	%f904, %f637, %f638;
	bra.uni 	LBB0_75;
LBB0_65:                                // %__nv_fast_fdividef.exit.i.i.i1285
	div.approx.f32 	%f621, %f904, %f185;
	cvt.rzi.f32.f32 	%f97, %f621;
	fma.rn.f32 	%f98, %f97, 0fC0000000, %f904;
	mov.b32 	%r59, %f98;
	setp.lt.u32 	%p116, %r59, 1073741824;
	mov.f32 	%f902, %f97;
	@%p116 bra 	LBB0_70;
// %bb.66:
	setp.lt.u32 	%p117, %r59, -2147483647;
	@%p117 bra 	LBB0_68;
// %bb.67:
	add.f32 	%f626, %f97, 0fBF800000;
	setp.lt.f32 	%p120, %f98, 0fC0000000;
	selp.f32 	%f627, %f626, %f97, %p120;
	add.f32 	%f902, %f627, 0fBF800000;
	bra.uni 	LBB0_70;
LBB0_68:
	add.f32 	%f902, %f97, 0f3F800000;
	setp.ltu.f32 	%p118, %f98, 0f40800000;
	@%p118 bra 	LBB0_70;
// %bb.69:                              // %__nv_fmaf_rn.exit.i.i.i1290
	fma.rn.f32 	%f623, %f185, 0fC0400000, %f98;
	setp.ge.f32 	%p119, %f623, 0f00000000;
	selp.f32 	%f624, %f902, %f97, %p119;
	add.f32 	%f625, %f624, 0f3F800000;
	add.f32 	%f902, %f625, 0f3F800000;
LBB0_70:                                // %__internal_fmodf_fastpath_quot.exit.i.i1293
	fma.rn.f32 	%f904, %f902, 0fC0000000, %f904;
LBB0_75:                                // %__internal_fmodf_kernel.exit.i1322
	abs.f32 	%f639, %f904;
	setp.gtu.f32 	%p126, %f639, 0f7F800000;
	@%p126 bra 	LBB0_77;
// %bb.76:
	mov.b32 	%r316, %f95;
	and.b32  	%r317, %r316, -2147483648;
	mov.b32 	%r318, %f904;
	or.b32  	%r319, %r317, %r318;
	mov.b32 	%f904, %r319;
LBB0_77:                                // %__nv_fmodf.exit1325
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd19;
	st.param.b32 	[param0+8], %r161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd35;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd36;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_11569, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd43, [retval0+0];
	} // callseq 7
	setp.ne.s64 	%p134, %rd43, 64;
	@%p134 bra 	LBB0_118;
// %bb.78:                              // %L1105
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd19;
	st.param.b32 	[param0+8], %r161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd35;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd36;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_11569, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd49, [retval0+0];
	} // callseq 10
	cvt.rn.f32.s64 	%f672, %rd49;
	div.approx.f32 	%f112, %f74, %f672;
	abs.f32 	%f916, %f112;
	setp.lt.f32 	%p135, %f916, 0f40000000;
	@%p135 bra 	LBB0_127;
// %bb.79:
	setp.gtu.f32 	%p136, %f916, 0f4B800000;
	@%p136 bra 	LBB0_123;
	bra.uni 	LBB0_80;
LBB0_123:
	mov.b32 	%r138, %f916;
	and.b32  	%r340, %r138, 8388607;
	or.b32  	%r7801, %r340, 1065353216;
	mov.b32 	%f915, %r7801;
	add.s32 	%r341, %r138, -1073741824;
	and.b32  	%r7802, %r341, -8388608;
	setp.eq.s32 	%p142, %r7802, 0;
	@%p142 bra 	LBB0_126;
// %bb.124:                             // %.lr.ph1694.preheader
	mov.f32 	%f682, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f681,%f682;
	// end inline asm
LBB0_125:                               // %.lr.ph1694
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r342, %r7802, 192937984;
	add.s32 	%r343, %r342, %r7801;
	mov.b32 	%f683, %r343;
	mul.f32 	%f684, %f681, %f683;
	sub.f32 	%f685, %f683, %f684;
	fma.rn.f32 	%f686, %f685, %f681, %f684;
	sub.f32 	%f687, %f683, %f686;
	fma.rz.f32 	%f688, %f687, %f681, %f686;
	cvt.rzi.f32.f32 	%f689, %f688;
	sub.f32 	%f915, %f683, %f689;
	sub.s32 	%r7802, %r7802, %r342;
	mov.b32 	%r7801, %f915;
	setp.ne.s32 	%p143, %r7802, 0;
	setp.ne.s32 	%p144, %r7801, 0;
	and.pred  	%p145, %p143, %p144;
	@%p145 bra 	LBB0_125;
LBB0_126:                               // %__internal_fmodf_slowpath_mod.exit.i.i1478
	setp.gt.u32 	%p146, %r138, 2139095039;
	selp.f32 	%f690, 0f7FFFFFFF, 0f4B800000, %p146;
	mul.f32 	%f691, %f915, 0f34000000;
	mul.f32 	%f916, %f690, %f691;
	bra.uni 	LBB0_127;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i1444
	div.approx.f32 	%f674, %f916, %f185;
	cvt.rzi.f32.f32 	%f150, %f674;
	fma.rn.f32 	%f151, %f150, 0fC0000000, %f916;
	mov.b32 	%r137, %f151;
	setp.lt.u32 	%p137, %r137, 1073741824;
	mov.f32 	%f914, %f150;
	@%p137 bra 	LBB0_122;
// %bb.81:
	setp.lt.u32 	%p138, %r137, -2147483647;
	@%p138 bra 	LBB0_120;
// %bb.82:
	add.f32 	%f679, %f150, 0fBF800000;
	setp.lt.f32 	%p141, %f151, 0fC0000000;
	selp.f32 	%f680, %f679, %f150, %p141;
	add.f32 	%f914, %f680, 0fBF800000;
	bra.uni 	LBB0_122;
LBB0_120:
	add.f32 	%f914, %f150, 0f3F800000;
	setp.ltu.f32 	%p139, %f151, 0f40800000;
	@%p139 bra 	LBB0_122;
// %bb.121:                             // %__nv_fmaf_rn.exit.i.i.i1449
	fma.rn.f32 	%f676, %f185, 0fC0400000, %f151;
	setp.ge.f32 	%p140, %f676, 0f00000000;
	selp.f32 	%f677, %f914, %f150, %p140;
	add.f32 	%f678, %f677, 0f3F800000;
	add.f32 	%f914, %f678, 0f3F800000;
LBB0_122:                               // %__internal_fmodf_fastpath_quot.exit.i.i1452
	fma.rn.f32 	%f916, %f914, 0fC0000000, %f916;
LBB0_127:                               // %__internal_fmodf_kernel.exit.i1481
	abs.f32 	%f692, %f916;
	setp.gtu.f32 	%p147, %f692, 0f7F800000;
	@%p147 bra 	LBB0_129;
// %bb.128:
	mov.b32 	%r344, %f112;
	and.b32  	%r345, %r344, -2147483648;
	mov.b32 	%r346, %f916;
	or.b32  	%r347, %r345, %r346;
	mov.b32 	%f916, %r347;
LBB0_129:                               // %__nv_fmodf.exit1484
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd19;
	st.param.b32 	[param0+8], %r161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd35;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd36;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_11569, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd53, [retval0+0];
	} // callseq 11
	cvt.rn.f32.s64 	%f723, %rd53;
	div.approx.f32 	%f167, %f94, %f723;
	abs.f32 	%f920, %f167;
	setp.lt.f32 	%p155, %f920, 0f40000000;
	@%p155 bra 	LBB0_141;
// %bb.130:
	setp.gtu.f32 	%p156, %f920, 0f4B800000;
	@%p156 bra 	LBB0_137;
	bra.uni 	LBB0_131;
LBB0_137:
	mov.b32 	%r146, %f920;
	and.b32  	%r356, %r146, 8388607;
	or.b32  	%r7803, %r356, 1065353216;
	mov.b32 	%f919, %r7803;
	add.s32 	%r357, %r146, -1073741824;
	and.b32  	%r7804, %r357, -8388608;
	setp.eq.s32 	%p162, %r7804, 0;
	@%p162 bra 	LBB0_140;
// %bb.138:                             // %.lr.ph1689.preheader
	mov.f32 	%f733, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f732,%f733;
	// end inline asm
LBB0_139:                               // %.lr.ph1689
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r358, %r7804, 192937984;
	add.s32 	%r359, %r358, %r7803;
	mov.b32 	%f734, %r359;
	mul.f32 	%f735, %f732, %f734;
	sub.f32 	%f736, %f734, %f735;
	fma.rn.f32 	%f737, %f736, %f732, %f735;
	sub.f32 	%f738, %f734, %f737;
	fma.rz.f32 	%f739, %f738, %f732, %f737;
	cvt.rzi.f32.f32 	%f740, %f739;
	sub.f32 	%f919, %f734, %f740;
	sub.s32 	%r7804, %r7804, %r358;
	mov.b32 	%r7803, %f919;
	setp.ne.s32 	%p163, %r7804, 0;
	setp.ne.s32 	%p164, %r7803, 0;
	and.pred  	%p165, %p163, %p164;
	@%p165 bra 	LBB0_139;
LBB0_140:                               // %__internal_fmodf_slowpath_mod.exit.i.i1531
	setp.gt.u32 	%p166, %r146, 2139095039;
	selp.f32 	%f741, 0f7FFFFFFF, 0f4B800000, %p166;
	mul.f32 	%f742, %f919, 0f34000000;
	mul.f32 	%f920, %f741, %f742;
	bra.uni 	LBB0_141;
LBB0_131:                               // %__nv_fast_fdividef.exit.i.i.i1497
	div.approx.f32 	%f725, %f920, %f185;
	cvt.rzi.f32.f32 	%f169, %f725;
	fma.rn.f32 	%f170, %f169, 0fC0000000, %f920;
	mov.b32 	%r145, %f170;
	setp.lt.u32 	%p157, %r145, 1073741824;
	mov.f32 	%f918, %f169;
	@%p157 bra 	LBB0_136;
// %bb.132:
	setp.lt.u32 	%p158, %r145, -2147483647;
	@%p158 bra 	LBB0_134;
// %bb.133:
	add.f32 	%f730, %f169, 0fBF800000;
	setp.lt.f32 	%p161, %f170, 0fC0000000;
	selp.f32 	%f731, %f730, %f169, %p161;
	add.f32 	%f918, %f731, 0fBF800000;
	bra.uni 	LBB0_136;
LBB0_134:
	add.f32 	%f918, %f169, 0f3F800000;
	setp.ltu.f32 	%p159, %f170, 0f40800000;
	@%p159 bra 	LBB0_136;
// %bb.135:                             // %__nv_fmaf_rn.exit.i.i.i1502
	fma.rn.f32 	%f727, %f185, 0fC0400000, %f170;
	setp.ge.f32 	%p160, %f727, 0f00000000;
	selp.f32 	%f728, %f918, %f169, %p160;
	add.f32 	%f729, %f728, 0f3F800000;
	add.f32 	%f918, %f729, 0f3F800000;
LBB0_136:                               // %__internal_fmodf_fastpath_quot.exit.i.i1505
	fma.rn.f32 	%f920, %f918, 0fC0000000, %f920;
LBB0_141:                               // %__internal_fmodf_kernel.exit.i1534
	abs.f32 	%f743, %f920;
	setp.gtu.f32 	%p167, %f743, 0f7F800000;
	@%p167 bra 	LBB0_143;
// %bb.142:
	mov.b32 	%r360, %f167;
	and.b32  	%r361, %r360, -2147483648;
	mov.b32 	%r362, %f920;
	or.b32  	%r363, %r361, %r362;
	mov.b32 	%f920, %r363;
LBB0_143:                               // %__nv_fmodf.exit1537
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd19;
	st.param.b32 	[param0+8], %r161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd35;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd36;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_11569, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd57, [retval0+0];
	} // callseq 12
	setp.eq.s64 	%p175, %rd57, 64;
	@%p175 bra 	LBB0_83;
	bra.uni 	LBB0_144;
LBB0_83:                                // %L1193
	mov.f32 	%f189, 0f43808000;
	div.approx.f32 	%f190, %f188, %f189;
	div.approx.f32 	%f224, %f222, %f189;
	div.approx.f32 	%f259, %f257, %f189;
	div.approx.f32 	%f293, %f291, %f189;
	div.approx.f32 	%f328, %f326, %f189;
	div.approx.f32 	%f362, %f360, %f189;
	div.approx.f32 	%f397, %f395, %f189;
	div.approx.f32 	%f431, %f429, %f189;
	abs.f32 	%f191, %f190;
	abs.f32 	%f225, %f224;
	abs.f32 	%f260, %f259;
	abs.f32 	%f294, %f293;
	abs.f32 	%f329, %f328;
	abs.f32 	%f363, %f362;
	abs.f32 	%f398, %f397;
	abs.f32 	%f432, %f431;
	setp.gt.f32 	%p5, %f191, 0f4B800000;
	mul.f32 	%f192, %f190, 0f00000000;
	setp.gt.f32 	%p11, %f225, 0f4B800000;
	mul.f32 	%f226, %f224, 0f00000000;
	setp.gt.f32 	%p17, %f260, 0f4B800000;
	mul.f32 	%f261, %f259, 0f00000000;
	setp.gt.f32 	%p23, %f294, 0f4B800000;
	mul.f32 	%f295, %f293, 0f00000000;
	setp.gt.f32 	%p29, %f329, 0f4B800000;
	mul.f32 	%f330, %f328, 0f00000000;
	setp.gt.f32 	%p35, %f363, 0f4B800000;
	mul.f32 	%f364, %f362, 0f00000000;
	setp.gt.f32 	%p41, %f398, 0f4B800000;
	mul.f32 	%f399, %f397, 0f00000000;
	setp.gt.f32 	%p47, %f432, 0f4B800000;
	mul.f32 	%f433, %f431, 0f00000000;
	selp.f32 	%f193, %f192, %f190, %p5;
	selp.f32 	%f227, %f226, %f224, %p11;
	selp.f32 	%f262, %f261, %f259, %p17;
	selp.f32 	%f296, %f295, %f293, %p23;
	selp.f32 	%f331, %f330, %f328, %p29;
	selp.f32 	%f365, %f364, %f362, %p35;
	selp.f32 	%f400, %f399, %f397, %p41;
	selp.f32 	%f434, %f433, %f431, %p47;
	add.f32 	%f589, %f900, %f900;
	add.f32 	%f640, %f904, %f904;
	add.f32 	%f194, %f193, %f193;
	add.f32 	%f228, %f227, %f227;
	add.f32 	%f263, %f262, %f262;
	add.f32 	%f297, %f296, %f296;
	add.f32 	%f332, %f331, %f331;
	add.f32 	%f366, %f365, %f365;
	add.f32 	%f401, %f400, %f400;
	add.f32 	%f435, %f434, %f434;
	add.f32 	%f484, %f892, %f892;
	add.f32 	%f536, %f896, %f896;
	mov.b32 	%r302, %f589;
	mov.b32 	%r332, %f640;
	mov.b32 	%r182, %f194;
	mov.b32 	%r189, %f228;
	mov.b32 	%r200, %f263;
	mov.b32 	%r207, %f297;
	mov.b32 	%r218, %f332;
	mov.b32 	%r225, %f366;
	mov.b32 	%r236, %f401;
	mov.b32 	%r243, %f435;
	mov.b32 	%r261, %f484;
	mov.b32 	%r284, %f536;
	and.b32  	%r303, %r302, -2147483648;
	and.b32  	%r333, %r332, -2147483648;
	add.f32 	%f693, %f916, %f916;
	and.b32  	%r183, %r182, -2147483648;
	and.b32  	%r190, %r189, -2147483648;
	and.b32  	%r201, %r200, -2147483648;
	and.b32  	%r208, %r207, -2147483648;
	and.b32  	%r219, %r218, -2147483648;
	and.b32  	%r226, %r225, -2147483648;
	and.b32  	%r237, %r236, -2147483648;
	and.b32  	%r244, %r243, -2147483648;
	and.b32  	%r262, %r261, -2147483648;
	and.b32  	%r285, %r284, -2147483648;
	or.b32  	%r304, %r303, 1056964608;
	or.b32  	%r334, %r333, 1056964608;
	mov.b32 	%r348, %f693;
	or.b32  	%r184, %r183, 1056964608;
	or.b32  	%r191, %r190, 1056964608;
	or.b32  	%r202, %r201, 1056964608;
	or.b32  	%r209, %r208, 1056964608;
	or.b32  	%r220, %r219, 1056964608;
	or.b32  	%r227, %r226, 1056964608;
	or.b32  	%r238, %r237, 1056964608;
	or.b32  	%r245, %r244, 1056964608;
	or.b32  	%r263, %r262, 1056964608;
	or.b32  	%r286, %r285, 1056964608;
	mov.b32 	%f590, %r304;
	mov.b32 	%f641, %r334;
	and.b32  	%r349, %r348, -2147483648;
	mov.b32 	%f195, %r184;
	mov.b32 	%f229, %r191;
	mov.b32 	%f264, %r202;
	mov.b32 	%f298, %r209;
	mov.b32 	%f333, %r220;
	mov.b32 	%f367, %r227;
	mov.b32 	%f402, %r238;
	mov.b32 	%f436, %r245;
	mov.b32 	%f485, %r263;
	mov.b32 	%f537, %r286;
	add.f32 	%f591, %f589, %f590;
	abs.f32 	%f593, %f589;
	add.f32 	%f642, %f640, %f641;
	abs.f32 	%f644, %f640;
	or.b32  	%r350, %r349, 1056964608;
	add.f32 	%f196, %f194, %f195;
	abs.f32 	%f198, %f194;
	add.f32 	%f230, %f228, %f229;
	abs.f32 	%f232, %f228;
	add.f32 	%f265, %f263, %f264;
	abs.f32 	%f267, %f263;
	add.f32 	%f299, %f297, %f298;
	abs.f32 	%f301, %f297;
	add.f32 	%f334, %f332, %f333;
	abs.f32 	%f336, %f332;
	add.f32 	%f368, %f366, %f367;
	abs.f32 	%f370, %f366;
	add.f32 	%f403, %f401, %f402;
	abs.f32 	%f405, %f401;
	add.f32 	%f437, %f435, %f436;
	abs.f32 	%f439, %f435;
	add.f32 	%f486, %f484, %f485;
	abs.f32 	%f488, %f484;
	add.f32 	%f538, %f536, %f537;
	abs.f32 	%f540, %f536;
	cvt.rzi.f32.f32 	%f592, %f591;
	setp.gt.f32 	%p107, %f593, 0f4B000000;
	cvt.rzi.f32.f32 	%f643, %f642;
	setp.gt.f32 	%p127, %f644, 0f4B000000;
	mov.b32 	%f694, %r350;
	cvt.rzi.f32.f32 	%f197, %f196;
	setp.gt.f32 	%p6, %f198, 0f4B000000;
	cvt.rzi.f32.f32 	%f231, %f230;
	setp.gt.f32 	%p12, %f232, 0f4B000000;
	cvt.rzi.f32.f32 	%f266, %f265;
	setp.gt.f32 	%p18, %f267, 0f4B000000;
	cvt.rzi.f32.f32 	%f300, %f299;
	setp.gt.f32 	%p24, %f301, 0f4B000000;
	cvt.rzi.f32.f32 	%f335, %f334;
	setp.gt.f32 	%p30, %f336, 0f4B000000;
	cvt.rzi.f32.f32 	%f369, %f368;
	setp.gt.f32 	%p36, %f370, 0f4B000000;
	cvt.rzi.f32.f32 	%f404, %f403;
	setp.gt.f32 	%p42, %f405, 0f4B000000;
	cvt.rzi.f32.f32 	%f438, %f437;
	setp.gt.f32 	%p48, %f439, 0f4B000000;
	cvt.rzi.f32.f32 	%f487, %f486;
	setp.gt.f32 	%p66, %f488, 0f4B000000;
	cvt.rzi.f32.f32 	%f539, %f538;
	setp.gt.f32 	%p86, %f540, 0f4B000000;
	selp.f32 	%f594, %f589, %f592, %p107;
	cvt.rzi.f32.f32 	%f595, %f589;
	setp.lt.f32 	%p108, %f593, 0f3F000000;
	selp.f32 	%f645, %f640, %f643, %p127;
	cvt.rzi.f32.f32 	%f646, %f640;
	setp.lt.f32 	%p128, %f644, 0f3F000000;
	add.f32 	%f695, %f693, %f694;
	abs.f32 	%f697, %f693;
	selp.f32 	%f199, %f194, %f197, %p6;
	cvt.rzi.f32.f32 	%f200, %f194;
	setp.lt.f32 	%p7, %f198, 0f3F000000;
	selp.f32 	%f233, %f228, %f231, %p12;
	cvt.rzi.f32.f32 	%f234, %f228;
	setp.lt.f32 	%p13, %f232, 0f3F000000;
	selp.f32 	%f268, %f263, %f266, %p18;
	cvt.rzi.f32.f32 	%f269, %f263;
	setp.lt.f32 	%p19, %f267, 0f3F000000;
	selp.f32 	%f302, %f297, %f300, %p24;
	cvt.rzi.f32.f32 	%f303, %f297;
	setp.lt.f32 	%p25, %f301, 0f3F000000;
	selp.f32 	%f337, %f332, %f335, %p30;
	cvt.rzi.f32.f32 	%f338, %f332;
	setp.lt.f32 	%p31, %f336, 0f3F000000;
	selp.f32 	%f371, %f366, %f369, %p36;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p37, %f370, 0f3F000000;
	selp.f32 	%f406, %f401, %f404, %p42;
	cvt.rzi.f32.f32 	%f407, %f401;
	setp.lt.f32 	%p43, %f405, 0f3F000000;
	selp.f32 	%f440, %f435, %f438, %p48;
	cvt.rzi.f32.f32 	%f441, %f435;
	setp.lt.f32 	%p49, %f439, 0f3F000000;
	selp.f32 	%f489, %f484, %f487, %p66;
	cvt.rzi.f32.f32 	%f490, %f484;
	setp.lt.f32 	%p67, %f488, 0f3F000000;
	selp.f32 	%f541, %f536, %f539, %p86;
	cvt.rzi.f32.f32 	%f542, %f536;
	setp.lt.f32 	%p87, %f540, 0f3F000000;
	selp.f32 	%f596, %f595, %f594, %p108;
	selp.f32 	%f647, %f646, %f645, %p128;
	cvt.rzi.f32.f32 	%f696, %f695;
	setp.gt.f32 	%p148, %f697, 0f4B000000;
	selp.f32 	%f201, %f200, %f199, %p7;
	selp.f32 	%f235, %f234, %f233, %p13;
	selp.f32 	%f270, %f269, %f268, %p19;
	selp.f32 	%f304, %f303, %f302, %p25;
	selp.f32 	%f339, %f338, %f337, %p31;
	selp.f32 	%f373, %f372, %f371, %p37;
	selp.f32 	%f408, %f407, %f406, %p43;
	selp.f32 	%f442, %f441, %f440, %p49;
	selp.f32 	%f491, %f490, %f489, %p67;
	selp.f32 	%f543, %f542, %f541, %p87;
	fma.rn.f32 	%f597, %f596, 0fBF000000, %f900;
	fma.rn.f32 	%f648, %f647, 0fBF000000, %f904;
	selp.f32 	%f698, %f693, %f696, %p148;
	cvt.rzi.f32.f32 	%f699, %f693;
	setp.lt.f32 	%p149, %f697, 0f3F000000;
	fma.rn.f32 	%f202, %f201, 0fBF000000, %f193;
	fma.rn.f32 	%f236, %f235, 0fBF000000, %f227;
	fma.rn.f32 	%f271, %f270, 0fBF000000, %f262;
	fma.rn.f32 	%f305, %f304, 0fBF000000, %f296;
	fma.rn.f32 	%f340, %f339, 0fBF000000, %f331;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f365;
	fma.rn.f32 	%f409, %f408, 0fBF000000, %f400;
	fma.rn.f32 	%f443, %f442, 0fBF000000, %f434;
	fma.rn.f32 	%f492, %f491, 0fBF000000, %f892;
	fma.rn.f32 	%f544, %f543, 0fBF000000, %f896;
	mul.f32 	%f598, %f597, %f597;
	mul.f32 	%f649, %f648, %f648;
	selp.f32 	%f700, %f699, %f698, %p149;
	mul.f32 	%f203, %f202, %f202;
	mul.f32 	%f237, %f236, %f236;
	mul.f32 	%f272, %f271, %f271;
	mul.f32 	%f306, %f305, %f305;
	mul.f32 	%f341, %f340, %f340;
	mul.f32 	%f375, %f374, %f374;
	mul.f32 	%f410, %f409, %f409;
	mul.f32 	%f444, %f443, %f443;
	mul.f32 	%f493, %f492, %f492;
	mul.f32 	%f545, %f544, %f544;
	fma.rn.f32 	%f599, %f598, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f600, %f598, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f650, %f649, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f651, %f649, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f701, %f700, 0fBF000000, %f916;
	cvt.rzi.s32.f32 	%r185, %f201;
	fma.rn.f32 	%f204, %f203, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f205, %f203, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r192, %f235;
	fma.rn.f32 	%f238, %f237, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f239, %f237, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r203, %f270;
	fma.rn.f32 	%f273, %f272, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f274, %f272, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r210, %f304;
	fma.rn.f32 	%f307, %f306, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f308, %f306, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r221, %f339;
	fma.rn.f32 	%f342, %f341, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f343, %f341, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r228, %f373;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r239, %f408;
	fma.rn.f32 	%f411, %f410, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f412, %f410, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r246, %f442;
	fma.rn.f32 	%f445, %f444, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f446, %f444, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f494, %f493, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f495, %f493, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f546, %f545, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f547, %f545, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r305, %f596;
	fma.rn.f32 	%f601, %f599, %f598, 0fC0A55DF6;
	fma.rn.f32 	%f602, %f600, %f598, 0f4081E0CF;
	fma.rn.f32 	%f603, %f598, %f597, 0f00000000;
	cvt.rzi.s32.f32 	%r335, %f647;
	fma.rn.f32 	%f652, %f650, %f649, 0fC0A55DF6;
	fma.rn.f32 	%f653, %f651, %f649, 0f4081E0CF;
	fma.rn.f32 	%f654, %f649, %f648, 0f00000000;
	mul.f32 	%f702, %f701, %f701;
	add.s32 	%r186, %r185, 1;
	fma.rn.f32 	%f206, %f204, %f203, 0fC0A55DF6;
	fma.rn.f32 	%f207, %f205, %f203, 0f4081E0CF;
	fma.rn.f32 	%f208, %f203, %f202, 0f00000000;
	add.s32 	%r193, %r192, 1;
	fma.rn.f32 	%f240, %f238, %f237, 0fC0A55DF6;
	fma.rn.f32 	%f241, %f239, %f237, 0f4081E0CF;
	fma.rn.f32 	%f242, %f237, %f236, 0f00000000;
	add.s32 	%r204, %r203, 1;
	fma.rn.f32 	%f275, %f273, %f272, 0fC0A55DF6;
	fma.rn.f32 	%f276, %f274, %f272, 0f4081E0CF;
	fma.rn.f32 	%f277, %f272, %f271, 0f00000000;
	add.s32 	%r211, %r210, 1;
	fma.rn.f32 	%f309, %f307, %f306, 0fC0A55DF6;
	fma.rn.f32 	%f310, %f308, %f306, 0f4081E0CF;
	fma.rn.f32 	%f311, %f306, %f305, 0f00000000;
	add.s32 	%r222, %r221, 1;
	fma.rn.f32 	%f344, %f342, %f341, 0fC0A55DF6;
	fma.rn.f32 	%f345, %f343, %f341, 0f4081E0CF;
	fma.rn.f32 	%f346, %f341, %f340, 0f00000000;
	add.s32 	%r229, %r228, 1;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	add.s32 	%r240, %r239, 1;
	fma.rn.f32 	%f413, %f411, %f410, 0fC0A55DF6;
	fma.rn.f32 	%f414, %f412, %f410, 0f4081E0CF;
	fma.rn.f32 	%f415, %f410, %f409, 0f00000000;
	add.s32 	%r247, %r246, 1;
	fma.rn.f32 	%f447, %f445, %f444, 0fC0A55DF6;
	fma.rn.f32 	%f448, %f446, %f444, 0f4081E0CF;
	fma.rn.f32 	%f449, %f444, %f443, 0f00000000;
	cvt.rzi.s32.f32 	%r264, %f491;
	fma.rn.f32 	%f496, %f494, %f493, 0fC0A55DF6;
	fma.rn.f32 	%f497, %f495, %f493, 0f4081E0CF;
	fma.rn.f32 	%f498, %f493, %f492, 0f00000000;
	cvt.rzi.s32.f32 	%r287, %f543;
	fma.rn.f32 	%f548, %f546, %f545, 0fC0A55DF6;
	fma.rn.f32 	%f549, %f547, %f545, 0f4081E0CF;
	fma.rn.f32 	%f550, %f545, %f544, 0f00000000;
	fma.rn.f32 	%f604, %f602, %f598, 0fC09DE9E6;
	fma.rn.f32 	%f605, %f601, %f603, 0f00000000;
	and.b32  	%r306, %r305, 1;
	fma.rn.f32 	%f655, %f653, %f649, 0fC09DE9E6;
	fma.rn.f32 	%f656, %f652, %f654, 0f00000000;
	and.b32  	%r336, %r335, 1;
	fma.rn.f32 	%f703, %f702, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f704, %f702, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f209, %f207, %f203, 0fC09DE9E6;
	fma.rn.f32 	%f210, %f206, %f208, 0f00000000;
	and.b32  	%r187, %r186, 1;
	fma.rn.f32 	%f243, %f241, %f237, 0fC09DE9E6;
	fma.rn.f32 	%f244, %f240, %f242, 0f00000000;
	and.b32  	%r194, %r193, 1;
	fma.rn.f32 	%f278, %f276, %f272, 0fC09DE9E6;
	fma.rn.f32 	%f279, %f275, %f277, 0f00000000;
	and.b32  	%r205, %r204, 1;
	fma.rn.f32 	%f312, %f310, %f306, 0fC09DE9E6;
	fma.rn.f32 	%f313, %f309, %f311, 0f00000000;
	and.b32  	%r212, %r211, 1;
	fma.rn.f32 	%f347, %f345, %f341, 0fC09DE9E6;
	fma.rn.f32 	%f348, %f344, %f346, 0f00000000;
	and.b32  	%r223, %r222, 1;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	and.b32  	%r230, %r229, 1;
	fma.rn.f32 	%f416, %f414, %f410, 0fC09DE9E6;
	fma.rn.f32 	%f417, %f413, %f415, 0f00000000;
	and.b32  	%r241, %r240, 1;
	fma.rn.f32 	%f450, %f448, %f444, 0fC09DE9E6;
	fma.rn.f32 	%f451, %f447, %f449, 0f00000000;
	and.b32  	%r248, %r247, 1;
	fma.rn.f32 	%f499, %f497, %f493, 0fC09DE9E6;
	fma.rn.f32 	%f500, %f496, %f498, 0f00000000;
	and.b32  	%r265, %r264, 1;
	fma.rn.f32 	%f551, %f549, %f545, 0fC09DE9E6;
	fma.rn.f32 	%f552, %f548, %f550, 0f00000000;
	and.b32  	%r288, %r287, 1;
	fma.rn.f32 	%f606, %f604, %f598, 0f3F800000;
	fma.rn.f32 	%f607, %f597, 0f40490FDB, %f605;
	setp.eq.b32 	%p109, %r306, 1;
	fma.rn.f32 	%f657, %f655, %f649, 0f3F800000;
	fma.rn.f32 	%f658, %f648, 0f40490FDB, %f656;
	setp.eq.b32 	%p129, %r336, 1;
	cvt.rzi.s32.f32 	%r351, %f700;
	fma.rn.f32 	%f705, %f703, %f702, 0fC0A55DF6;
	fma.rn.f32 	%f706, %f704, %f702, 0f4081E0CF;
	fma.rn.f32 	%f707, %f702, %f701, 0f00000000;
	fma.rn.f32 	%f211, %f209, %f203, 0f3F800000;
	fma.rn.f32 	%f212, %f202, 0f40490FDB, %f210;
	setp.eq.b32 	%p8, %r187, 1;
	fma.rn.f32 	%f245, %f243, %f237, 0f3F800000;
	fma.rn.f32 	%f246, %f236, 0f40490FDB, %f244;
	setp.eq.b32 	%p14, %r194, 1;
	fma.rn.f32 	%f280, %f278, %f272, 0f3F800000;
	fma.rn.f32 	%f281, %f271, 0f40490FDB, %f279;
	setp.eq.b32 	%p20, %r205, 1;
	fma.rn.f32 	%f314, %f312, %f306, 0f3F800000;
	fma.rn.f32 	%f315, %f305, 0f40490FDB, %f313;
	setp.eq.b32 	%p26, %r212, 1;
	fma.rn.f32 	%f349, %f347, %f341, 0f3F800000;
	fma.rn.f32 	%f350, %f340, 0f40490FDB, %f348;
	setp.eq.b32 	%p32, %r223, 1;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	setp.eq.b32 	%p38, %r230, 1;
	fma.rn.f32 	%f418, %f416, %f410, 0f3F800000;
	fma.rn.f32 	%f419, %f409, 0f40490FDB, %f417;
	setp.eq.b32 	%p44, %r241, 1;
	fma.rn.f32 	%f452, %f450, %f444, 0f3F800000;
	fma.rn.f32 	%f453, %f443, 0f40490FDB, %f451;
	setp.eq.b32 	%p50, %r248, 1;
	fma.rn.f32 	%f501, %f499, %f493, 0f3F800000;
	fma.rn.f32 	%f502, %f492, 0f40490FDB, %f500;
	setp.eq.b32 	%p68, %r265, 1;
	fma.rn.f32 	%f553, %f551, %f545, 0f3F800000;
	fma.rn.f32 	%f554, %f544, 0f40490FDB, %f552;
	setp.eq.b32 	%p88, %r288, 1;
	selp.f32 	%f608, %f606, %f607, %p109;
	and.b32  	%r307, %r305, 2;
	selp.f32 	%f659, %f657, %f658, %p129;
	and.b32  	%r337, %r335, 2;
	fma.rn.f32 	%f708, %f706, %f702, 0fC09DE9E6;
	fma.rn.f32 	%f709, %f705, %f707, 0f00000000;
	and.b32  	%r352, %r351, 1;
	selp.f32 	%f213, %f211, %f212, %p8;
	and.b32  	%r188, %r186, 2;
	mov.f32 	%f214, 0f00000000;
	selp.f32 	%f247, %f245, %f246, %p14;
	and.b32  	%r195, %r193, 2;
	selp.f32 	%f282, %f280, %f281, %p20;
	and.b32  	%r206, %r204, 2;
	selp.f32 	%f316, %f314, %f315, %p26;
	and.b32  	%r213, %r211, 2;
	selp.f32 	%f351, %f349, %f350, %p32;
	and.b32  	%r224, %r222, 2;
	selp.f32 	%f385, %f383, %f384, %p38;
	and.b32  	%r231, %r229, 2;
	selp.f32 	%f420, %f418, %f419, %p44;
	and.b32  	%r242, %r240, 2;
	selp.f32 	%f454, %f452, %f453, %p50;
	and.b32  	%r249, %r247, 2;
	selp.f32 	%f503, %f501, %f502, %p68;
	and.b32  	%r266, %r264, 2;
	selp.f32 	%f555, %f553, %f554, %p88;
	and.b32  	%r289, %r287, 2;
	setp.eq.s32 	%p110, %r307, 0;
	neg.f32 	%f610, %f608;
	add.s32 	%r308, %r305, 1;
	cvt.rzi.f32.f32 	%f615, %f900;
	setp.eq.s32 	%p130, %r337, 0;
	neg.f32 	%f661, %f659;
	add.s32 	%r338, %r335, 1;
	cvt.rzi.f32.f32 	%f666, %f904;
	fma.rn.f32 	%f710, %f708, %f702, 0f3F800000;
	fma.rn.f32 	%f711, %f701, 0f40490FDB, %f709;
	setp.eq.b32 	%p150, %r352, 1;
	setp.eq.s32 	%p9, %r188, 0;
	sub.f32 	%f215, %f214, %f213;
	setp.eq.s32 	%p15, %r195, 0;
	sub.f32 	%f249, %f214, %f247;
	setp.eq.s32 	%p21, %r206, 0;
	sub.f32 	%f284, %f214, %f282;
	setp.eq.s32 	%p27, %r213, 0;
	sub.f32 	%f318, %f214, %f316;
	setp.eq.s32 	%p33, %r224, 0;
	sub.f32 	%f353, %f214, %f351;
	setp.eq.s32 	%p39, %r231, 0;
	sub.f32 	%f387, %f214, %f385;
	setp.eq.s32 	%p45, %r242, 0;
	sub.f32 	%f422, %f214, %f420;
	setp.eq.s32 	%p51, %r249, 0;
	sub.f32 	%f456, %f214, %f454;
	setp.eq.s32 	%p69, %r266, 0;
	neg.f32 	%f505, %f503;
	add.s32 	%r267, %r264, 1;
	cvt.rzi.f32.f32 	%f510, %f892;
	setp.eq.s32 	%p89, %r289, 0;
	neg.f32 	%f557, %f555;
	add.s32 	%r290, %r287, 1;
	cvt.rzi.f32.f32 	%f562, %f896;
	selp.f32 	%f609, %f607, %f606, %p109;
	selp.f32 	%f611, %f608, %f610, %p110;
	and.b32  	%r309, %r308, 2;
	setp.eq.f32 	%p112, %f615, %f900;
	mul.f32 	%f616, %f900, 0f00000000;
	selp.f32 	%f660, %f658, %f657, %p129;
	selp.f32 	%f662, %f659, %f661, %p130;
	and.b32  	%r339, %r338, 2;
	setp.eq.f32 	%p132, %f666, %f904;
	mul.f32 	%f667, %f904, 0f00000000;
	selp.f32 	%f712, %f710, %f711, %p150;
	and.b32  	%r353, %r351, 2;
	selp.f32 	%f216, %f213, %f215, %p9;
	selp.f32 	%f250, %f247, %f249, %p15;
	selp.f32 	%f285, %f282, %f284, %p21;
	selp.f32 	%f319, %f316, %f318, %p27;
	selp.f32 	%f354, %f351, %f353, %p33;
	selp.f32 	%f388, %f385, %f387, %p39;
	selp.f32 	%f423, %f420, %f422, %p45;
	selp.f32 	%f457, %f454, %f456, %p51;
	selp.f32 	%f504, %f502, %f501, %p68;
	selp.f32 	%f506, %f503, %f505, %p69;
	and.b32  	%r268, %r267, 2;
	setp.eq.f32 	%p71, %f510, %f892;
	mul.f32 	%f511, %f892, 0f00000000;
	selp.f32 	%f556, %f554, %f553, %p88;
	selp.f32 	%f558, %f555, %f557, %p89;
	and.b32  	%r291, %r290, 2;
	setp.eq.f32 	%p91, %f562, %f896;
	mul.f32 	%f563, %f896, 0f00000000;
	setp.eq.s32 	%p111, %r309, 0;
	sub.f32 	%f613, %f214, %f609;
	selp.f32 	%f92, %f616, %f611, %p112;
	abs.f32 	%f617, %f900;
	setp.eq.s32 	%p131, %r339, 0;
	sub.f32 	%f664, %f214, %f660;
	selp.f32 	%f668, %f667, %f662, %p132;
	abs.f32 	%f669, %f904;
	setp.eq.s32 	%p151, %r353, 0;
	neg.f32 	%f714, %f712;
	add.s32 	%r354, %r351, 1;
	cvt.rzi.f32.f32 	%f719, %f916;
	mul.f32 	%f2, %f216, %f216;
	mul.f32 	%f7, %f250, %f250;
	mul.f32 	%f11, %f285, %f285;
	mul.f32 	%f16, %f319, %f319;
	mul.f32 	%f20, %f354, %f354;
	mul.f32 	%f25, %f388, %f388;
	mul.f32 	%f29, %f423, %f423;
	mul.f32 	%f34, %f457, %f457;
	setp.eq.s32 	%p70, %r268, 0;
	sub.f32 	%f508, %f214, %f504;
	selp.f32 	%f55, %f511, %f506, %p71;
	abs.f32 	%f512, %f892;
	setp.eq.s32 	%p90, %r291, 0;
	sub.f32 	%f560, %f214, %f556;
	selp.f32 	%f564, %f563, %f558, %p91;
	abs.f32 	%f565, %f896;
	selp.f32 	%f614, %f609, %f613, %p111;
	setp.gt.f32 	%p113, %f617, 0f4B800000;
	add.f32 	%f618, %f92, 0f3F800000;
	selp.f32 	%f665, %f660, %f664, %p131;
	setp.gt.f32 	%p133, %f669, 0f4B800000;
	add.f32 	%f670, %f668, 0f3F800000;
	selp.f32 	%f713, %f711, %f710, %p150;
	selp.f32 	%f715, %f712, %f714, %p151;
	and.b32  	%r355, %r354, 2;
	setp.eq.f32 	%p153, %f719, %f916;
	mul.f32 	%f720, %f916, 0f00000000;
	setp.eq.s32 	%p152, %r355, 0;
	sub.f32 	%f717, %f214, %f713;
	selp.f32 	%f165, %f720, %f715, %p153;
	abs.f32 	%f721, %f916;
	shr.u32 	%r13, %r2, 1;
	shr.u32 	%r19, %r2, 3;
	add.f32 	%f744, %f920, %f920;
	mov.b32 	%r370, %f744;
	and.b32  	%r371, %r370, -2147483648;
	or.b32  	%r372, %r371, 1056964608;
	mov.b32 	%f745, %r372;
	add.f32 	%f746, %f744, %f745;
	cvt.rzi.f32.f32 	%f747, %f746;
	abs.f32 	%f748, %f744;
	setp.gt.f32 	%p168, %f748, 0f4B000000;
	selp.f32 	%f749, %f744, %f747, %p168;
	cvt.rzi.f32.f32 	%f750, %f744;
	setp.lt.f32 	%p169, %f748, 0f3F000000;
	selp.f32 	%f751, %f750, %f749, %p169;
	cvt.rzi.s32.f32 	%r373, %f751;
	fma.rn.f32 	%f752, %f751, 0fBF000000, %f920;
	mul.f32 	%f753, %f752, %f752;
	fma.rn.f32 	%f754, %f753, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f755, %f753, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f756, %f754, %f753, 0fC0A55DF6;
	fma.rn.f32 	%f757, %f755, %f753, 0f4081E0CF;
	fma.rn.f32 	%f758, %f753, %f752, 0f00000000;
	fma.rn.f32 	%f759, %f757, %f753, 0fC09DE9E6;
	fma.rn.f32 	%f760, %f756, %f758, 0f00000000;
	fma.rn.f32 	%f761, %f759, %f753, 0f3F800000;
	fma.rn.f32 	%f762, %f752, 0f40490FDB, %f760;
	and.b32  	%r374, %r373, 1;
	setp.eq.b32 	%p170, %r374, 1;
	selp.f32 	%f763, %f761, %f762, %p170;
	selp.f32 	%f764, %f762, %f761, %p170;
	and.b32  	%r375, %r373, 2;
	setp.eq.s32 	%p171, %r375, 0;
	neg.f32 	%f765, %f763;
	selp.f32 	%f766, %f763, %f765, %p171;
	add.s32 	%r376, %r373, 1;
	and.b32  	%r377, %r376, 2;
	setp.eq.s32 	%p172, %r377, 0;
	sub.f32 	%f768, %f214, %f764;
	cvt.rzi.f32.f32 	%f770, %f920;
	setp.eq.f32 	%p173, %f770, %f920;
	mul.f32 	%f771, %f920, 0f00000000;
	selp.f32 	%f772, %f771, %f766, %p173;
	abs.f32 	%f773, %f920;
	and.b32  	%r378, %r19, 2;
	and.b32  	%r379, %r13, 4;
	or.b32  	%r380, %r17, %r378;
	or.b32  	%r71, %r380, %r379;
	mul.lo.s32 	%r72, %r49, %r71;
	cvt.rn.f32.s32 	%f776, %r72;
	div.approx.f32 	%f114, %f776, %f568;
	abs.f32 	%f908, %f114;
	setp.lt.f32 	%p176, %f908, 0f40000000;
	@%p176 bra 	LBB0_95;
// %bb.84:
	setp.gtu.f32 	%p177, %f908, 0f4B800000;
	@%p177 bra 	LBB0_91;
	bra.uni 	LBB0_85;
LBB0_91:
	mov.b32 	%r74, %f908;
	and.b32  	%r381, %r74, 8388607;
	or.b32  	%r7771, %r381, 1065353216;
	mov.b32 	%f907, %r7771;
	add.s32 	%r382, %r74, -1073741824;
	and.b32  	%r7772, %r382, -8388608;
	setp.eq.s32 	%p183, %r7772, 0;
	@%p183 bra 	LBB0_94;
// %bb.92:                              // %.lr.ph1679.preheader
	mov.f32 	%f787, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f786,%f787;
	// end inline asm
LBB0_93:                                // %.lr.ph1679
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r383, %r7772, 192937984;
	add.s32 	%r384, %r383, %r7771;
	mov.b32 	%f788, %r384;
	mul.f32 	%f789, %f786, %f788;
	sub.f32 	%f790, %f788, %f789;
	fma.rn.f32 	%f791, %f790, %f786, %f789;
	sub.f32 	%f792, %f788, %f791;
	fma.rz.f32 	%f793, %f792, %f786, %f791;
	cvt.rzi.f32.f32 	%f794, %f793;
	sub.f32 	%f907, %f788, %f794;
	sub.s32 	%r7772, %r7772, %r383;
	mov.b32 	%r7771, %f907;
	setp.ne.s32 	%p184, %r7772, 0;
	setp.ne.s32 	%p185, %r7771, 0;
	and.pred  	%p186, %p184, %p185;
	@%p186 bra 	LBB0_93;
LBB0_94:                                // %__internal_fmodf_slowpath_mod.exit.i.i1372
	setp.gt.u32 	%p187, %r74, 2139095039;
	selp.f32 	%f795, 0f7FFFFFFF, 0f4B800000, %p187;
	mul.f32 	%f796, %f907, 0f34000000;
	mul.f32 	%f908, %f795, %f796;
	bra.uni 	LBB0_95;
LBB0_85:                                // %__nv_fast_fdividef.exit.i.i.i1338
	div.approx.f32 	%f779, %f908, %f185;
	cvt.rzi.f32.f32 	%f116, %f779;
	fma.rn.f32 	%f117, %f116, 0fC0000000, %f908;
	mov.b32 	%r73, %f117;
	setp.lt.u32 	%p178, %r73, 1073741824;
	mov.f32 	%f906, %f116;
	@%p178 bra 	LBB0_90;
// %bb.86:
	setp.lt.u32 	%p179, %r73, -2147483647;
	@%p179 bra 	LBB0_88;
// %bb.87:
	add.f32 	%f784, %f116, 0fBF800000;
	setp.lt.f32 	%p182, %f117, 0fC0000000;
	selp.f32 	%f785, %f784, %f116, %p182;
	add.f32 	%f906, %f785, 0fBF800000;
	bra.uni 	LBB0_90;
LBB0_88:
	add.f32 	%f906, %f116, 0f3F800000;
	setp.ltu.f32 	%p180, %f117, 0f40800000;
	@%p180 bra 	LBB0_90;
// %bb.89:                              // %__nv_fmaf_rn.exit.i.i.i1343
	fma.rn.f32 	%f781, %f185, 0fC0400000, %f117;
	setp.ge.f32 	%p181, %f781, 0f00000000;
	selp.f32 	%f782, %f906, %f116, %p181;
	add.f32 	%f783, %f782, 0f3F800000;
	add.f32 	%f906, %f783, 0f3F800000;
LBB0_90:                                // %__internal_fmodf_fastpath_quot.exit.i.i1346
	fma.rn.f32 	%f908, %f906, 0fC0000000, %f908;
LBB0_95:                                // %__internal_fmodf_kernel.exit.i1375
	mul.f32 	%f220, %f2, 0f3C0AF64E;
	mul.f32 	%f254, %f7, 0f3C0AF64E;
	mul.f32 	%f289, %f11, 0f3C0AF64E;
	mul.f32 	%f323, %f16, 0f3C0AF64E;
	mul.f32 	%f358, %f20, 0f3C0AF64E;
	mul.f32 	%f392, %f25, 0f3C0AF64E;
	mul.f32 	%f427, %f29, 0f3C0AF64E;
	mul.f32 	%f460, %f34, 0f3C0AF64E;
	selp.f32 	%f509, %f504, %f508, %p70;
	setp.gt.f32 	%p72, %f512, 0f4B800000;
	add.f32 	%f513, %f55, 0f3F800000;
	selp.f32 	%f561, %f556, %f560, %p90;
	setp.gt.f32 	%p92, %f565, 0f4B800000;
	add.f32 	%f566, %f564, 0f3F800000;
	selp.f32 	%f93, %f618, %f614, %p113;
	selp.f32 	%f671, %f670, %f665, %p133;
	selp.f32 	%f718, %f713, %f717, %p152;
	setp.gt.f32 	%p154, %f721, 0f4B800000;
	add.f32 	%f722, %f165, 0f3F800000;
	selp.f32 	%f769, %f764, %f768, %p172;
	setp.gt.f32 	%p174, %f773, 0f4B800000;
	add.f32 	%f774, %f772, 0f3F800000;
	abs.f32 	%f797, %f908;
	setp.gtu.f32 	%p188, %f797, 0f7F800000;
	@%p188 bra 	LBB0_97;
// %bb.96:
	mov.b32 	%r385, %f114;
	and.b32  	%r386, %r385, -2147483648;
	mov.b32 	%r387, %f908;
	or.b32  	%r388, %r386, %r387;
	mov.b32 	%f908, %r388;
LBB0_97:                                // %__nv_fmodf.exit1378
	mul.f32 	%f6, %f220, %f882;
	mul.f32 	%f255, %f254, %f883;
	mul.f32 	%f15, %f289, %f884;
	mul.f32 	%f324, %f323, %f885;
	mul.f32 	%f24, %f358, %f886;
	mul.f32 	%f393, %f392, %f887;
	mul.f32 	%f33, %f427, %f888;
	mul.f32 	%f461, %f460, %f889;
	selp.f32 	%f56, %f513, %f509, %p72;
	selp.f32 	%f567, %f566, %f561, %p92;
	mov.b32 	%r322, %f671;
	mov.b32 	%r321, %f93;
	mov.b32 	%r328, %f668;
	mov.b32 	%r327, %f92;
	selp.f32 	%f166, %f722, %f718, %p154;
	selp.f32 	%f775, %f774, %f769, %p174;
	add.f32 	%f798, %f908, %f908;
	mov.b32 	%r389, %f798;
	and.b32  	%r390, %r389, -2147483648;
	or.b32  	%r391, %r390, 1056964608;
	mov.b32 	%f799, %r391;
	add.f32 	%f800, %f798, %f799;
	cvt.rzi.f32.f32 	%f801, %f800;
	abs.f32 	%f802, %f798;
	setp.gt.f32 	%p189, %f802, 0f4B000000;
	selp.f32 	%f803, %f798, %f801, %p189;
	cvt.rzi.f32.f32 	%f804, %f798;
	setp.lt.f32 	%p190, %f802, 0f3F000000;
	selp.f32 	%f805, %f804, %f803, %p190;
	cvt.rzi.s32.f32 	%r392, %f805;
	fma.rn.f32 	%f806, %f805, 0fBF000000, %f908;
	mul.f32 	%f807, %f806, %f806;
	fma.rn.f32 	%f808, %f807, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f809, %f807, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f810, %f808, %f807, 0fC0A55DF6;
	fma.rn.f32 	%f811, %f809, %f807, 0f4081E0CF;
	fma.rn.f32 	%f812, %f807, %f806, 0f00000000;
	fma.rn.f32 	%f813, %f811, %f807, 0fC09DE9E6;
	fma.rn.f32 	%f814, %f810, %f812, 0f00000000;
	fma.rn.f32 	%f815, %f813, %f807, 0f3F800000;
	fma.rn.f32 	%f816, %f806, 0f40490FDB, %f814;
	and.b32  	%r393, %r392, 1;
	setp.eq.b32 	%p191, %r393, 1;
	selp.f32 	%f817, %f815, %f816, %p191;
	selp.f32 	%f818, %f816, %f815, %p191;
	and.b32  	%r394, %r392, 2;
	setp.eq.s32 	%p192, %r394, 0;
	neg.f32 	%f819, %f817;
	selp.f32 	%f820, %f817, %f819, %p192;
	add.s32 	%r395, %r392, 1;
	and.b32  	%r396, %r395, 2;
	setp.eq.s32 	%p193, %r396, 0;
	sub.f32 	%f822, %f214, %f818;
	selp.f32 	%f823, %f818, %f822, %p193;
	cvt.rzi.f32.f32 	%f824, %f908;
	setp.eq.f32 	%p194, %f824, %f908;
	mul.f32 	%f825, %f908, 0f00000000;
	selp.f32 	%f131, %f825, %f820, %p194;
	abs.f32 	%f826, %f908;
	setp.gt.f32 	%p195, %f826, 0f4B800000;
	add.f32 	%f827, %f131, 0f3F800000;
	shl.b32 	%r397, %r71, 3;
	sub.s32 	%r398, %r72, %r397;
	cvt.rn.f32.s32 	%f828, %r398;
	div.approx.f32 	%f133, %f828, %f568;
	abs.f32 	%f912, %f133;
	setp.lt.f32 	%p196, %f912, 0f40000000;
	@%p196 bra 	LBB0_109;
// %bb.98:
	setp.gtu.f32 	%p197, %f912, 0f4B800000;
	@%p197 bra 	LBB0_105;
	bra.uni 	LBB0_99;
LBB0_105:
	mov.b32 	%r82, %f912;
	and.b32  	%r399, %r82, 8388607;
	or.b32  	%r7773, %r399, 1065353216;
	mov.b32 	%f911, %r7773;
	add.s32 	%r400, %r82, -1073741824;
	and.b32  	%r7774, %r400, -8388608;
	setp.eq.s32 	%p203, %r7774, 0;
	@%p203 bra 	LBB0_108;
// %bb.106:                             // %.lr.ph.preheader
	mov.f32 	%f839, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f838,%f839;
	// end inline asm
LBB0_107:                               // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r401, %r7774, 192937984;
	add.s32 	%r402, %r401, %r7773;
	mov.b32 	%f840, %r402;
	mul.f32 	%f841, %f838, %f840;
	sub.f32 	%f842, %f840, %f841;
	fma.rn.f32 	%f843, %f842, %f838, %f841;
	sub.f32 	%f844, %f840, %f843;
	fma.rz.f32 	%f845, %f844, %f838, %f843;
	cvt.rzi.f32.f32 	%f846, %f845;
	sub.f32 	%f911, %f840, %f846;
	sub.s32 	%r7774, %r7774, %r401;
	mov.b32 	%r7773, %f911;
	setp.ne.s32 	%p204, %r7774, 0;
	setp.ne.s32 	%p205, %r7773, 0;
	and.pred  	%p206, %p204, %p205;
	@%p206 bra 	LBB0_107;
LBB0_108:                               // %__internal_fmodf_slowpath_mod.exit.i.i1425
	setp.gt.u32 	%p207, %r82, 2139095039;
	selp.f32 	%f847, 0f7FFFFFFF, 0f4B800000, %p207;
	mul.f32 	%f848, %f911, 0f34000000;
	mul.f32 	%f912, %f847, %f848;
	bra.uni 	LBB0_109;
LBB0_99:                                // %__nv_fast_fdividef.exit.i.i.i1391
	div.approx.f32 	%f831, %f912, %f185;
	cvt.rzi.f32.f32 	%f135, %f831;
	fma.rn.f32 	%f136, %f135, 0fC0000000, %f912;
	mov.b32 	%r81, %f136;
	setp.lt.u32 	%p198, %r81, 1073741824;
	mov.f32 	%f910, %f135;
	@%p198 bra 	LBB0_104;
// %bb.100:
	setp.lt.u32 	%p199, %r81, -2147483647;
	@%p199 bra 	LBB0_102;
// %bb.101:
	add.f32 	%f836, %f135, 0fBF800000;
	setp.lt.f32 	%p202, %f136, 0fC0000000;
	selp.f32 	%f837, %f836, %f135, %p202;
	add.f32 	%f910, %f837, 0fBF800000;
	bra.uni 	LBB0_104;
LBB0_102:
	add.f32 	%f910, %f135, 0f3F800000;
	setp.ltu.f32 	%p200, %f136, 0f40800000;
	@%p200 bra 	LBB0_104;
// %bb.103:                             // %__nv_fmaf_rn.exit.i.i.i1396
	fma.rn.f32 	%f833, %f185, 0fC0400000, %f136;
	setp.ge.f32 	%p201, %f833, 0f00000000;
	selp.f32 	%f834, %f910, %f135, %p201;
	add.f32 	%f835, %f834, 0f3F800000;
	add.f32 	%f910, %f835, 0f3F800000;
LBB0_104:                               // %__internal_fmodf_fastpath_quot.exit.i.i1399
	fma.rn.f32 	%f912, %f910, 0fC0000000, %f912;
LBB0_109:                               // %__internal_fmodf_kernel.exit.i1428
	mov.b32 	%r198, %f255;
	mov.b32 	%r197, %f6;
	mov.b32 	%r216, %f324;
	mov.b32 	%r215, %f15;
	mov.b32 	%r234, %f393;
	mov.b32 	%r233, %f24;
	mov.b32 	%r252, %f461;
	mov.b32 	%r251, %f33;
	mov.b32 	%r280, %f567;
	mov.b32 	%r279, %f56;
	mov.b32 	%r283, %f564;
	mov.b32 	%r282, %f55;
	xor.b32  	%r325, %r328, -2147483648;
	xor.b32  	%r324, %r327, -2147483648;
	mov.b32 	%r366, %f775;
	mov.b32 	%r365, %f166;
	mov.b32 	%r369, %f772;
	mov.b32 	%r368, %f165;
	selp.f32 	%f132, %f827, %f823, %p195;
	abs.f32 	%f849, %f912;
	setp.gtu.f32 	%p208, %f849, 0f7F800000;
	@%p208 bra 	LBB0_111;
// %bb.110:
	mov.b32 	%r403, %f133;
	and.b32  	%r404, %r403, -2147483648;
	mov.b32 	%r405, %f912;
	or.b32  	%r406, %r404, %r405;
	mov.b32 	%f912, %r406;
LBB0_111:                               // %__nv_fmodf.exit1431
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	// begin inline asm
	cvt.rn.f16x2.f32 %r196, %r198, %r197;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r214, %r216, %r215;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r232, %r234, %r233;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r250, %r252, %r251;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r278, %r280, %r279;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r281, %r283, %r282;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r320, %r322, %r321;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r323, %r325, %r324;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r326, %r328, %r327;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r329, %r322, %r321;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r364, %r366, %r365;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r367, %r369, %r368;
	// end inline asm
	add.f32 	%f850, %f912, %f912;
	mov.b32 	%r420, %f850;
	and.b32  	%r421, %r420, -2147483648;
	or.b32  	%r422, %r421, 1056964608;
	mov.b32 	%f851, %r422;
	add.f32 	%f852, %f850, %f851;
	cvt.rzi.f32.f32 	%f853, %f852;
	abs.f32 	%f854, %f850;
	setp.gt.f32 	%p209, %f854, 0f4B000000;
	selp.f32 	%f855, %f850, %f853, %p209;
	cvt.rzi.f32.f32 	%f856, %f850;
	setp.lt.f32 	%p210, %f854, 0f3F000000;
	selp.f32 	%f857, %f856, %f855, %p210;
	cvt.rzi.s32.f32 	%r423, %f857;
	fma.rn.f32 	%f858, %f857, 0fBF000000, %f912;
	mul.f32 	%f859, %f858, %f858;
	fma.rn.f32 	%f860, %f859, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f861, %f859, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f862, %f860, %f859, 0fC0A55DF6;
	fma.rn.f32 	%f863, %f861, %f859, 0f4081E0CF;
	fma.rn.f32 	%f864, %f859, %f858, 0f00000000;
	fma.rn.f32 	%f865, %f863, %f859, 0fC09DE9E6;
	fma.rn.f32 	%f866, %f862, %f864, 0f00000000;
	fma.rn.f32 	%f867, %f865, %f859, 0f3F800000;
	fma.rn.f32 	%f868, %f858, 0f40490FDB, %f866;
	and.b32  	%r424, %r423, 1;
	setp.eq.b32 	%p211, %r424, 1;
	selp.f32 	%f869, %f867, %f868, %p211;
	selp.f32 	%f870, %f868, %f867, %p211;
	and.b32  	%r425, %r423, 2;
	setp.eq.s32 	%p212, %r425, 0;
	neg.f32 	%f871, %f869;
	selp.f32 	%f872, %f869, %f871, %p212;
	add.s32 	%r426, %r423, 1;
	and.b32  	%r427, %r426, 2;
	setp.eq.s32 	%p213, %r427, 0;
	sub.f32 	%f874, %f214, %f870;
	selp.f32 	%f875, %f870, %f874, %p213;
	cvt.rzi.f32.f32 	%f876, %f912;
	setp.eq.f32 	%p214, %f876, %f912;
	mul.f32 	%f877, %f912, 0f00000000;
	selp.f32 	%f878, %f877, %f872, %p214;
	abs.f32 	%f879, %f912;
	setp.gt.f32 	%p215, %f879, 0f4B800000;
	add.f32 	%f880, %f878, 0f3F800000;
	selp.f32 	%f881, %f880, %f875, %p215;
	mov.b32 	%r409, %f881;
	mov.b32 	%r408, %f132;
	// begin inline asm
	cvt.rn.f16x2.f32 %r89, %r409, %r408;
	// end inline asm
	mov.b32 	%r415, %f878;
	xor.b32  	%r412, %r415, -2147483648;
	mov.b32 	%r414, %f131;
	xor.b32  	%r411, %r414, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r90, %r412, %r411;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r91, %r415, %r414;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r92, %r409, %r408;
	// end inline asm
	shl.b32 	%r428, %r1, 5;
	and.b32  	%r93, %r428, 128;
	and.b32  	%r429, %r7, 28;
	and.b32  	%r430, %r428, 96;
	or.b32  	%r94, %r429, %r430;
	and.b32  	%r95, %r2, 8;
	shl.b32 	%r431, %r2, 4;
	or.b32  	%r432, %r431, %r95;
	shr.u32 	%r433, %r432, 2;
	and.b32  	%r434, %r433, 30;
	and.b32  	%r435, %r3, 1;
	mul.lo.s32 	%r436, %r435, 1040;
	shr.u32 	%r437, %r3, 3;
	mul.lo.s32 	%r438, %r437, 130;
	bfe.u32 	%r439, %r3, 2, 1;
	mul.lo.s32 	%r440, %r439, 260;
	shr.u32 	%r441, %r3, 1;
	bfe.u32 	%r442, %r3, 1, 1;
	mul.lo.s32 	%r443, %r442, 520;
	mul.lo.s32 	%r444, %r18, 65;
	add.s32 	%r445, %r436, %r434;
	add.s32 	%r446, %r445, %r438;
	add.s32 	%r447, %r446, %r440;
	add.s32 	%r448, %r447, %r443;
	add.s32 	%r449, %r448, %r444;
	mul.wide.u32 	%rd61, %r449, 4;
	mov.u64 	%rd62, shmem;
	add.s64 	%rd5, %rd62, %rd61;
	cvt.u64.u32 	%rd63, %r444;
	cvt.u64.u32 	%rd64, %r443;
	cvt.u64.u32 	%rd65, %r440;
	cvt.u64.u32 	%rd66, %r438;
	cvt.u64.u32 	%rd67, %r436;
	cvt.u64.u32 	%rd68, %r434;
	add.s64 	%rd69, %rd68, %rd67;
	add.s64 	%rd70, %rd69, %rd66;
	add.s64 	%rd71, %rd70, %rd65;
	add.s64 	%rd72, %rd71, %rd64;
	add.s64 	%rd73, %rd72, %rd63;
	shl.b64 	%rd74, %rd73, 2;
	add.s64 	%rd6, %rd62, %rd74;
	and.b32  	%r450, %r4, 32;
	mul.lo.s32 	%r451, %r20, 1040;
	mul.lo.s32 	%r452, %r15, 130;
	mul.lo.s32 	%r453, %r17, 260;
	mul.lo.s32 	%r454, %r18, 520;
	mul.lo.s32 	%r455, %r14, 65;
	or.b32  	%r456, %r441, %r450;
	or.b32  	%r457, %r456, 8;
	or.b32  	%r458, %r456, 16;
	or.b32  	%r459, %r456, 24;
	shl.b32 	%r460, %r1, 3;
	and.b32  	%r461, %r460, 960;
	or.b32  	%r462, %r461, %r8;
	or.b32  	%r463, %r462, %r10;
	or.b32  	%r464, %r463, %r11;
	or.b32  	%r465, %r464, %r6;
	or.b32  	%r466, %r465, %r9;
	bfe.u32 	%r467, %r466, 1, 5;
	mul.lo.s32 	%r468, %r467, 65;
	shl.b32 	%r469, %r3, 1;
	or.b32  	%r470, %r469, %r18;
	mul.lo.s32 	%r471, %r470, 65;
	add.s32 	%r472, %r471, %r434;
	mul.wide.u32 	%rd75, %r472, 4;
	add.s64 	%rd7, %rd62, %rd75;
	cvt.u64.u32 	%rd76, %r471;
	add.s64 	%rd77, %rd68, %rd76;
	shl.b64 	%rd78, %rd77, 2;
	add.s64 	%rd8, %rd62, %rd78;
	shl.b32 	%r473, %r3, 10;
	or.b32  	%r474, %r19, %r461;
	shl.b32 	%r475, %r474, 8;
	or.b32  	%r96, %r473, %r475;
	add.s32 	%r476, %r459, %r468;
	mul.wide.u32 	%rd9, %r476, 4;
	add.s32 	%r477, %r459, %r451;
	add.s32 	%r478, %r477, %r454;
	add.s32 	%r479, %r478, %r453;
	add.s32 	%r480, %r479, %r452;
	add.s32 	%r481, %r480, %r455;
	mul.wide.u32 	%rd10, %r481, 4;
	add.s32 	%r482, %r458, %r468;
	mul.wide.u32 	%rd11, %r482, 4;
	add.s32 	%r483, %r458, %r451;
	add.s32 	%r484, %r483, %r454;
	add.s32 	%r485, %r484, %r453;
	add.s32 	%r486, %r485, %r452;
	add.s32 	%r487, %r486, %r455;
	mul.wide.u32 	%rd12, %r487, 4;
	add.s32 	%r488, %r457, %r468;
	mul.wide.u32 	%rd13, %r488, 4;
	add.s32 	%r489, %r457, %r451;
	add.s32 	%r490, %r489, %r454;
	add.s32 	%r491, %r490, %r453;
	add.s32 	%r492, %r491, %r452;
	add.s32 	%r493, %r492, %r455;
	mul.wide.u32 	%rd14, %r493, 4;
	add.s32 	%r494, %r456, %r468;
	mul.wide.u32 	%rd15, %r494, 4;
	add.s32 	%r495, %r456, %r451;
	add.s32 	%r496, %r495, %r454;
	add.s32 	%r497, %r496, %r453;
	add.s32 	%r498, %r497, %r452;
	add.s32 	%r499, %r498, %r455;
	mul.wide.u32 	%rd16, %r499, 4;
	mov.u32 	%r7789, 0;
	setp.eq.s32 	%p216, %r95, 0;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r7790, %r7789;
	mov.u32 	%r7791, %r7789;
	mov.u32 	%r7792, %r7789;
	mov.u32 	%r7793, %r7789;
	mov.u32 	%r7794, %r7789;
	mov.u32 	%r7795, %r7789;
	mov.u32 	%r7796, %r7789;
	mov.u32 	%r7797, %r7789;
	mov.u32 	%r7798, %r7789;
	mov.u32 	%r7799, %r7789;
	mov.u32 	%r7800, %r7789;
	mov.u32 	%r7787, %r7789;
	bra.uni 	LBB0_112;
LBB0_116:                               // %L34145
                                        //   in Loop: Header=BB0_112 Depth=1
	add.s32 	%r7787, %r109, 256;
	setp.gt.s32 	%p221, %r5, %r7787;
	setp.ne.s32 	%p222, %r109, 32512;
	and.pred  	%p223, %p222, %p221;
	@%p223 bra 	LBB0_112;
	bra.uni 	LBB0_117;
LBB0_112:                               // %L1352
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_113 Depth 2
	mov.u32 	%r109, %r7787;
	or.b32  	%r517, %r8, %r109;
	or.b32  	%r518, %r517, %r9;
	or.b32  	%r519, %r518, %r3;
	shl.b32 	%r520, %r519, 12;
	or.b32  	%r521, %r520, %r93;
	or.b32  	%r522, %r94, %r521;
	mul.wide.s32 	%rd80, %r522, 4;
	add.s64 	%rd81, %rd2, %rd80;
	ld.global.v4.u32 	{%r523, %r524, %r525, %r526}, [%rd81];
	selp.b32 	%r527, %r525, %r523, %p216;
	shfl.sync.bfly.b32	%r528, %r527, 8, 31, -1;
	selp.b32 	%r501, %r523, %r528, %p216;
	selp.b32 	%r502, %r528, %r525, %p216;
	selp.b32 	%r529, %r526, %r524, %p216;
	shfl.sync.bfly.b32	%r530, %r529, 8, 31, -1;
	selp.b32 	%r509, %r524, %r530, %p216;
	selp.b32 	%r510, %r530, %r526, %p216;
	mov.u32 	%r511, 21520;
	// begin inline asm
	prmt.b32 %r500, %r501, %r502, %r511;
	// end inline asm
	mov.u32 	%r515, 30258;
	// begin inline asm
	prmt.b32 %r504, %r501, %r502, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r508, %r509, %r510, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r512, %r509, %r510, %r515;
	// end inline asm
	st.shared.u32 	[%rd5], %r500;
	st.shared.u32 	[%rd6+128], %r504;
	st.shared.u32 	[%rd6+4], %r508;
	st.shared.u32 	[%rd6+132], %r512;
	bar.sync 	0;
	mov.u32 	%r7788, 256;
	mov.u64 	%rd92, %rd62;
LBB0_113:                               // %L4817
                                        //   Parent Loop BB0_112 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd82, %rd92, %rd16;
	ld.shared.u32 	%r7715, [%rd82];
	add.s64 	%rd83, %rd92, %rd14;
	ld.shared.u32 	%r7716, [%rd83];
	add.s64 	%rd84, %rd92, %rd12;
	ld.shared.u32 	%r7717, [%rd84];
	add.s64 	%rd85, %rd92, %rd10;
	ld.shared.u32 	%r7718, [%rd85];
	// begin inline asm
	mov.b32 %r536, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r547, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r535, %r7715, -2004318072;
	mov.u32 	%r534, 983055;
	// begin inline asm
	lop3.b32 %r533, %r534, %r535, %r536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r537, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r538, %r536, %r537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r541, %r533, %r538;
	// end inline asm
	mov.u32 	%r545, 15728880;
	// begin inline asm
	lop3.b32 %r544, %r545, %r535, %r547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r548, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r549, %r547, %r548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r552, %r544, %r549;
	// end inline asm
	shr.u32 	%r557, %r535, 8;
	// begin inline asm
	lop3.b32 %r555, %r534, %r557, %r536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r559, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r560, %r536, %r559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r563, %r555, %r560;
	// end inline asm
	// begin inline asm
	lop3.b32 %r566, %r545, %r557, %r547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r570, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r571, %r547, %r570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r574, %r566, %r571;
	// end inline asm
	// begin inline asm
	mov.b32 %r582, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r593, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r581, %r7716, -2004318072;
	// begin inline asm
	lop3.b32 %r579, %r534, %r581, %r582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r583, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r584, %r582, %r583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r587, %r579, %r584;
	// end inline asm
	// begin inline asm
	lop3.b32 %r590, %r545, %r581, %r593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r594, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r595, %r593, %r594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r598, %r590, %r595;
	// end inline asm
	shr.u32 	%r603, %r581, 8;
	// begin inline asm
	lop3.b32 %r601, %r534, %r603, %r582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r605, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r606, %r582, %r605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r609, %r601, %r606;
	// end inline asm
	// begin inline asm
	lop3.b32 %r612, %r545, %r603, %r593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r616, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r617, %r593, %r616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r620, %r612, %r617;
	// end inline asm
	// begin inline asm
	mov.b32 %r628, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r639, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r627, %r7717, -2004318072;
	// begin inline asm
	lop3.b32 %r625, %r534, %r627, %r628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r629, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r630, %r628, %r629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r633, %r625, %r630;
	// end inline asm
	// begin inline asm
	lop3.b32 %r636, %r545, %r627, %r639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r640, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r641, %r639, %r640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r644, %r636, %r641;
	// end inline asm
	shr.u32 	%r649, %r627, 8;
	// begin inline asm
	lop3.b32 %r647, %r534, %r649, %r628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r651, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r652, %r628, %r651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r655, %r647, %r652;
	// end inline asm
	// begin inline asm
	lop3.b32 %r658, %r545, %r649, %r639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r662, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r663, %r639, %r662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r666, %r658, %r663;
	// end inline asm
	// begin inline asm
	mov.b32 %r674, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r685, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r673, %r7718, -2004318072;
	// begin inline asm
	lop3.b32 %r671, %r534, %r673, %r674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r675, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r676, %r674, %r675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r679, %r671, %r676;
	// end inline asm
	// begin inline asm
	lop3.b32 %r682, %r545, %r673, %r685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r686, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r687, %r685, %r686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r690, %r682, %r687;
	// end inline asm
	shr.u32 	%r695, %r673, 8;
	// begin inline asm
	lop3.b32 %r693, %r534, %r695, %r674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r697, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r698, %r674, %r697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r701, %r693, %r698;
	// end inline asm
	// begin inline asm
	lop3.b32 %r704, %r545, %r695, %r685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r708, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r709, %r685, %r708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r712, %r704, %r709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r715, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r717, %r715, %r541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r720, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r722, %r720, %r552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r725, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r727, %r725, %r563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r730, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r732, %r730, %r574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r735, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r737, %r735, %r587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r740, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r742, %r740, %r598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r745, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r747, %r745, %r609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r750, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r752, %r750, %r620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r755, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r757, %r755, %r633;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r760, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r762, %r760, %r644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r765, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r767, %r765, %r655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r770, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r772, %r770, %r666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r775, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r777, %r775, %r679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r780, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r782, %r780, %r690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r785, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r787, %r785, %r701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r790, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r792, %r790, %r712;
	// end inline asm
	// begin inline asm
	mov.b32 %r800, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r811, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r799, %r7789, -2004318072;
	// begin inline asm
	lop3.b32 %r797, %r534, %r799, %r800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r801, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r802, %r800, %r801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r805, %r797, %r802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r808, %r545, %r799, %r811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r812, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r813, %r811, %r812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r816, %r808, %r813;
	// end inline asm
	shr.u32 	%r821, %r799, 8;
	// begin inline asm
	lop3.b32 %r819, %r534, %r821, %r800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r823, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r824, %r800, %r823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r827, %r819, %r824;
	// end inline asm
	// begin inline asm
	lop3.b32 %r830, %r545, %r821, %r811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r834, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r835, %r811, %r834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r838, %r830, %r835;
	// end inline asm
	// begin inline asm
	mov.b32 %r846, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r857, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r845, %r7790, -2004318072;
	// begin inline asm
	lop3.b32 %r843, %r534, %r845, %r846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r847, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r848, %r846, %r847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r851, %r843, %r848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r854, %r545, %r845, %r857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r858, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r859, %r857, %r858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r862, %r854, %r859;
	// end inline asm
	shr.u32 	%r867, %r845, 8;
	// begin inline asm
	lop3.b32 %r865, %r534, %r867, %r846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r869, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r870, %r846, %r869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r873, %r865, %r870;
	// end inline asm
	// begin inline asm
	lop3.b32 %r876, %r545, %r867, %r857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r880, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r881, %r857, %r880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r884, %r876, %r881;
	// end inline asm
	// begin inline asm
	mov.b32 %r892, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r903, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r891, %r7791, -2004318072;
	// begin inline asm
	lop3.b32 %r889, %r534, %r891, %r892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r893, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r894, %r892, %r893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r897, %r889, %r894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r900, %r545, %r891, %r903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r904, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r905, %r903, %r904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r908, %r900, %r905;
	// end inline asm
	shr.u32 	%r913, %r891, 8;
	// begin inline asm
	lop3.b32 %r911, %r534, %r913, %r892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r915, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r916, %r892, %r915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r919, %r911, %r916;
	// end inline asm
	// begin inline asm
	lop3.b32 %r922, %r545, %r913, %r903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r926, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r927, %r903, %r926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r930, %r922, %r927;
	// end inline asm
	// begin inline asm
	mov.b32 %r938, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r949, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r937, %r7792, -2004318072;
	// begin inline asm
	lop3.b32 %r935, %r534, %r937, %r938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r939, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r940, %r938, %r939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r943, %r935, %r940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r946, %r545, %r937, %r949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r950, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r951, %r949, %r950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r954, %r946, %r951;
	// end inline asm
	shr.u32 	%r959, %r937, 8;
	// begin inline asm
	lop3.b32 %r957, %r534, %r959, %r938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r961, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r962, %r938, %r961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r965, %r957, %r962;
	// end inline asm
	// begin inline asm
	lop3.b32 %r968, %r545, %r959, %r949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r972, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r973, %r949, %r972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r976, %r968, %r973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r979, %r196, %r805, %r717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r983, %r196, %r816, %r722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r987, %r196, %r827, %r727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r991, %r196, %r838, %r732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r995, %r196, %r851, %r737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r999, %r196, %r862, %r742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1003, %r196, %r873, %r747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1007, %r196, %r884, %r752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1011, %r196, %r897, %r757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1015, %r196, %r908, %r762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1019, %r196, %r919, %r767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1023, %r196, %r930, %r772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1027, %r196, %r943, %r777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1031, %r196, %r954, %r782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1035, %r196, %r965, %r787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1039, %r196, %r976, %r792;
	// end inline asm
	// begin inline asm
	mov.b32 %r1048, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1059, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1047, %r7793, -2004318072;
	// begin inline asm
	lop3.b32 %r1045, %r534, %r1047, %r1048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1049, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1050, %r1048, %r1049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1053, %r1045, %r1050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1056, %r545, %r1047, %r1059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1060, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1061, %r1059, %r1060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1064, %r1056, %r1061;
	// end inline asm
	shr.u32 	%r1069, %r1047, 8;
	// begin inline asm
	lop3.b32 %r1067, %r534, %r1069, %r1048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1071, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1072, %r1048, %r1071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1075, %r1067, %r1072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1078, %r545, %r1069, %r1059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1082, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1083, %r1059, %r1082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1086, %r1078, %r1083;
	// end inline asm
	// begin inline asm
	mov.b32 %r1094, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1105, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1093, %r7794, -2004318072;
	// begin inline asm
	lop3.b32 %r1091, %r534, %r1093, %r1094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1095, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1096, %r1094, %r1095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1099, %r1091, %r1096;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1102, %r545, %r1093, %r1105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1106, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1107, %r1105, %r1106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1110, %r1102, %r1107;
	// end inline asm
	shr.u32 	%r1115, %r1093, 8;
	// begin inline asm
	lop3.b32 %r1113, %r534, %r1115, %r1094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1117, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1118, %r1094, %r1117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1121, %r1113, %r1118;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1124, %r545, %r1115, %r1105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1128, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1129, %r1105, %r1128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1132, %r1124, %r1129;
	// end inline asm
	// begin inline asm
	mov.b32 %r1140, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1151, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1139, %r7795, -2004318072;
	// begin inline asm
	lop3.b32 %r1137, %r534, %r1139, %r1140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1141, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1142, %r1140, %r1141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1145, %r1137, %r1142;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1148, %r545, %r1139, %r1151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1152, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1153, %r1151, %r1152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1156, %r1148, %r1153;
	// end inline asm
	shr.u32 	%r1161, %r1139, 8;
	// begin inline asm
	lop3.b32 %r1159, %r534, %r1161, %r1140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1163, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1164, %r1140, %r1163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1167, %r1159, %r1164;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1170, %r545, %r1161, %r1151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1174, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1175, %r1151, %r1174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1178, %r1170, %r1175;
	// end inline asm
	// begin inline asm
	mov.b32 %r1186, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1197, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1185, %r7796, -2004318072;
	// begin inline asm
	lop3.b32 %r1183, %r534, %r1185, %r1186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1187, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1188, %r1186, %r1187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1191, %r1183, %r1188;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1194, %r545, %r1185, %r1197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1198, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1199, %r1197, %r1198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1202, %r1194, %r1199;
	// end inline asm
	shr.u32 	%r1207, %r1185, 8;
	// begin inline asm
	lop3.b32 %r1205, %r534, %r1207, %r1186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1209, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1210, %r1186, %r1209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1213, %r1205, %r1210;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1216, %r545, %r1207, %r1197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1220, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1221, %r1197, %r1220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1224, %r1216, %r1221;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1227, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1229, %r1227, %r1053, %r979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1233, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1235, %r1233, %r1064, %r983;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1239, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1241, %r1239, %r1075, %r987;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1245, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1247, %r1245, %r1086, %r991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1251, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1253, %r1251, %r1099, %r995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1257, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1259, %r1257, %r1110, %r999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1263, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1265, %r1263, %r1121, %r1003;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1269, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1271, %r1269, %r1132, %r1007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1275, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1277, %r1275, %r1145, %r1011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1281, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1283, %r1281, %r1156, %r1015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1287, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1289, %r1287, %r1167, %r1019;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1293, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1295, %r1293, %r1178, %r1023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1299, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1301, %r1299, %r1191, %r1027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1305, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1307, %r1305, %r1202, %r1031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1311, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1313, %r1311, %r1213, %r1035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1317, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1319, %r1317, %r1224, %r1039;
	// end inline asm
	// begin inline asm
	mov.b32 %r1328, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1339, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1327, %r7797, -2004318072;
	// begin inline asm
	lop3.b32 %r1325, %r534, %r1327, %r1328, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1329, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1330, %r1328, %r1329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1333, %r1325, %r1330;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1336, %r545, %r1327, %r1339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1340, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1341, %r1339, %r1340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1344, %r1336, %r1341;
	// end inline asm
	shr.u32 	%r1349, %r1327, 8;
	// begin inline asm
	lop3.b32 %r1347, %r534, %r1349, %r1328, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1351, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1352, %r1328, %r1351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1355, %r1347, %r1352;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1358, %r545, %r1349, %r1339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1362, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1363, %r1339, %r1362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1366, %r1358, %r1363;
	// end inline asm
	// begin inline asm
	mov.b32 %r1374, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1385, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1373, %r7798, -2004318072;
	// begin inline asm
	lop3.b32 %r1371, %r534, %r1373, %r1374, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1375, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1376, %r1374, %r1375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1379, %r1371, %r1376;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1382, %r545, %r1373, %r1385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1386, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1387, %r1385, %r1386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1390, %r1382, %r1387;
	// end inline asm
	shr.u32 	%r1395, %r1373, 8;
	// begin inline asm
	lop3.b32 %r1393, %r534, %r1395, %r1374, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1397, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1398, %r1374, %r1397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1401, %r1393, %r1398;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1404, %r545, %r1395, %r1385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1408, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1409, %r1385, %r1408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1412, %r1404, %r1409;
	// end inline asm
	// begin inline asm
	mov.b32 %r1420, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1431, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1419, %r7799, -2004318072;
	// begin inline asm
	lop3.b32 %r1417, %r534, %r1419, %r1420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1421, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1422, %r1420, %r1421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1425, %r1417, %r1422;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1428, %r545, %r1419, %r1431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1432, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1433, %r1431, %r1432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1436, %r1428, %r1433;
	// end inline asm
	shr.u32 	%r1441, %r1419, 8;
	// begin inline asm
	lop3.b32 %r1439, %r534, %r1441, %r1420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1443, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1444, %r1420, %r1443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1447, %r1439, %r1444;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1450, %r545, %r1441, %r1431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1454, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1455, %r1431, %r1454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1458, %r1450, %r1455;
	// end inline asm
	// begin inline asm
	mov.b32 %r1466, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1477, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1465, %r7800, -2004318072;
	// begin inline asm
	lop3.b32 %r1463, %r534, %r1465, %r1466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1467, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1468, %r1466, %r1467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1471, %r1463, %r1468;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1474, %r545, %r1465, %r1477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1478, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1479, %r1477, %r1478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1482, %r1474, %r1479;
	// end inline asm
	shr.u32 	%r1487, %r1465, 8;
	// begin inline asm
	lop3.b32 %r1485, %r534, %r1487, %r1466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1489, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1490, %r1466, %r1489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1493, %r1485, %r1490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1496, %r545, %r1487, %r1477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1500, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1501, %r1477, %r1500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1504, %r1496, %r1501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1578, %r232, %r1333, %r1229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1575, %r232, %r1344, %r1235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1587, %r232, %r1355, %r1241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1584, %r232, %r1366, %r1247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1596, %r232, %r1379, %r1253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1593, %r232, %r1390, %r1259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1605, %r232, %r1401, %r1265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1602, %r232, %r1412, %r1271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1614, %r232, %r1425, %r1277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1611, %r232, %r1436, %r1283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1623, %r232, %r1447, %r1289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1620, %r232, %r1458, %r1295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1632, %r232, %r1471, %r1301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1629, %r232, %r1482, %r1307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1641, %r232, %r1493, %r1313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1638, %r232, %r1504, %r1319;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1571, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1573, %r1571, %r1575;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1576, %r278, %r1578, %r1573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1580, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1582, %r1580, %r1584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1585, %r278, %r1587, %r1582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1589, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1591, %r1589, %r1593;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1594, %r278, %r1596, %r1591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1598, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1600, %r1598, %r1602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1603, %r278, %r1605, %r1600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1607, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1609, %r1607, %r1611;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1612, %r278, %r1614, %r1609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1616, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1618, %r1616, %r1620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1621, %r278, %r1623, %r1618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1625, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1627, %r1625, %r1629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1630, %r278, %r1632, %r1627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1634, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1636, %r1634, %r1638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1639, %r278, %r1641, %r1636;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1643, %r281, %r1578;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1646, %r278, %r1575, %r1643;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1650, %r281, %r1587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1653, %r278, %r1584, %r1650;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1657, %r281, %r1596;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1660, %r278, %r1593, %r1657;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1664, %r281, %r1605;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1667, %r278, %r1602, %r1664;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1671, %r281, %r1614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1674, %r278, %r1611, %r1671;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1678, %r281, %r1623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1681, %r278, %r1620, %r1678;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1685, %r281, %r1632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1688, %r278, %r1629, %r1685;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1692, %r281, %r1641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1695, %r278, %r1638, %r1692;
	// end inline asm
	mov.u32 	%r7374, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1786, %r1783}, {%r320, %r326, %r323, %r329}, {%r1576, %r1646}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1795, %r1792}, {%r320, %r326, %r323, %r329}, {%r1585, %r1653}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1804, %r1801}, {%r320, %r326, %r323, %r329}, {%r1594, %r1660}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1813, %r1810}, {%r320, %r326, %r323, %r329}, {%r1603, %r1667}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1822, %r1819}, {%r320, %r326, %r323, %r329}, {%r1612, %r1674}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1831, %r1828}, {%r320, %r326, %r323, %r329}, {%r1621, %r1681}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1840, %r1837}, {%r320, %r326, %r323, %r329}, {%r1630, %r1688}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1849, %r1846}, {%r320, %r326, %r323, %r329}, {%r1639, %r1695}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1779, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1781, %r1779, %r1783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1784, %r364, %r1786, %r1781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1788, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1790, %r1788, %r1792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1793, %r364, %r1795, %r1790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1797, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1799, %r1797, %r1801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1802, %r364, %r1804, %r1799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1806, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1808, %r1806, %r1810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1811, %r364, %r1813, %r1808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1815, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1817, %r1815, %r1819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1820, %r364, %r1822, %r1817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1824, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1826, %r1824, %r1828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1829, %r364, %r1831, %r1826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1833, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1835, %r1833, %r1837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1838, %r364, %r1840, %r1835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1842, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1844, %r1842, %r1846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1847, %r364, %r1849, %r1844;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1851, %r367, %r1786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1854, %r364, %r1783, %r1851;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1858, %r367, %r1795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1861, %r364, %r1792, %r1858;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1865, %r367, %r1804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1868, %r364, %r1801, %r1865;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1872, %r367, %r1813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1875, %r364, %r1810, %r1872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1879, %r367, %r1822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1882, %r364, %r1819, %r1879;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1886, %r367, %r1831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1889, %r364, %r1828, %r1886;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1893, %r367, %r1840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1896, %r364, %r1837, %r1893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1900, %r367, %r1849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1903, %r364, %r1846, %r1900;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1907, %r1908}, {%r89, %r91, %r90, %r92}, {%r1784, %r1854}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1917, %r1918}, {%r89, %r91, %r90, %r92}, {%r1793, %r1861}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1927, %r1928}, {%r89, %r91, %r90, %r92}, {%r1802, %r1868}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1937, %r1938}, {%r89, %r91, %r90, %r92}, {%r1811, %r1875}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1947, %r1948}, {%r89, %r91, %r90, %r92}, {%r1820, %r1882}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1957, %r1958}, {%r89, %r91, %r90, %r92}, {%r1829, %r1889}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1967, %r1968}, {%r89, %r91, %r90, %r92}, {%r1838, %r1896}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1977, %r1978}, {%r89, %r91, %r90, %r92}, {%r1847, %r1903}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1987, %r12, %r1907;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1990, %r12, %r1908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1993, %r12, %r1917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1996, %r12, %r1918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1999, %r12, %r1927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2002, %r12, %r1928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2005, %r12, %r1937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2008, %r12, %r1938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2011, %r12, %r1947;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2014, %r12, %r1948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2017, %r12, %r1957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2020, %r12, %r1958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2023, %r12, %r1967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2026, %r12, %r1968;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2029, %r12, %r1977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2032, %r12, %r1978;
	// end inline asm
	// begin inline asm
	mov.b32 %r2035, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2036, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2037, %r1987, %r2035;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2040, %r2037, %r2036;
	// end inline asm
	// begin inline asm
	mov.b32 %r2043, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2044, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2045, %r1990, %r2043;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2048, %r2045, %r2044;
	// end inline asm
	// begin inline asm
	mov.b32 %r2051, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2052, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2053, %r1993, %r2051;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2056, %r2053, %r2052;
	// end inline asm
	// begin inline asm
	mov.b32 %r2059, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2060, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2061, %r1996, %r2059;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2064, %r2061, %r2060;
	// end inline asm
	// begin inline asm
	mov.b32 %r2067, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2068, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2069, %r1999, %r2067;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2072, %r2069, %r2068;
	// end inline asm
	// begin inline asm
	mov.b32 %r2075, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2076, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2077, %r2002, %r2075;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2080, %r2077, %r2076;
	// end inline asm
	// begin inline asm
	mov.b32 %r2083, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2084, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2085, %r2005, %r2083;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2088, %r2085, %r2084;
	// end inline asm
	// begin inline asm
	mov.b32 %r2091, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2092, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2093, %r2008, %r2091;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2096, %r2093, %r2092;
	// end inline asm
	// begin inline asm
	mov.b32 %r2099, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2100, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2101, %r2011, %r2099;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2104, %r2101, %r2100;
	// end inline asm
	// begin inline asm
	mov.b32 %r2107, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2108, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2109, %r2014, %r2107;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2112, %r2109, %r2108;
	// end inline asm
	// begin inline asm
	mov.b32 %r2115, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2116, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2117, %r2017, %r2115;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2120, %r2117, %r2116;
	// end inline asm
	// begin inline asm
	mov.b32 %r2123, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2124, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2125, %r2020, %r2123;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2128, %r2125, %r2124;
	// end inline asm
	// begin inline asm
	mov.b32 %r2131, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2132, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2133, %r2023, %r2131;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2136, %r2133, %r2132;
	// end inline asm
	// begin inline asm
	mov.b32 %r2139, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2140, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2141, %r2026, %r2139;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2144, %r2141, %r2140;
	// end inline asm
	// begin inline asm
	mov.b32 %r2147, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2148, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2149, %r2029, %r2147;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2152, %r2149, %r2148;
	// end inline asm
	// begin inline asm
	mov.b32 %r2155, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2156, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2157, %r2032, %r2155;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2160, %r2157, %r2156;
	// end inline asm
	// begin inline asm
	mov.b32 %r2166, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2164, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2165, %r2166, %r2164;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2168, %r2040, %r2165;
	// end inline asm
	// begin inline asm
	mov.b32 %r2171, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2172, %r2166, %r2171;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2175, %r2048, %r2172;
	// end inline asm
	// begin inline asm
	mov.b32 %r2178, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2179, %r2166, %r2178;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2182, %r2056, %r2179;
	// end inline asm
	// begin inline asm
	mov.b32 %r2185, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2186, %r2166, %r2185;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2189, %r2064, %r2186;
	// end inline asm
	mov.u32 	%r2195, 25152;
	// begin inline asm
	prmt.b32 %r2192, %r2168, %r2182, %r2195;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2196, %r2175, %r2189, %r2195;
	// end inline asm
	shl.b32 	%r2203, %r2196, 4;
	mov.u32 	%r2201, 252645135;
	// begin inline asm
	lop3.b32 %r2200, %r2201, %r2192, %r2203, 202;
	// end inline asm
	xor.b32  	%r7719, %r2200, -2004318072;
	// begin inline asm
	mov.b32 %r2207, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2205, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2206, %r2207, %r2205;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2209, %r2072, %r2206;
	// end inline asm
	// begin inline asm
	mov.b32 %r2212, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2213, %r2207, %r2212;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2216, %r2080, %r2213;
	// end inline asm
	// begin inline asm
	mov.b32 %r2219, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2220, %r2207, %r2219;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2223, %r2088, %r2220;
	// end inline asm
	// begin inline asm
	mov.b32 %r2226, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2227, %r2207, %r2226;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2230, %r2096, %r2227;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2233, %r2209, %r2223, %r2195;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2237, %r2216, %r2230, %r2195;
	// end inline asm
	shl.b32 	%r2244, %r2237, 4;
	// begin inline asm
	lop3.b32 %r2241, %r2201, %r2233, %r2244, 202;
	// end inline asm
	xor.b32  	%r7720, %r2241, -2004318072;
	// begin inline asm
	mov.b32 %r2248, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2246, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2247, %r2248, %r2246;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2250, %r2104, %r2247;
	// end inline asm
	// begin inline asm
	mov.b32 %r2253, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2254, %r2248, %r2253;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2257, %r2112, %r2254;
	// end inline asm
	// begin inline asm
	mov.b32 %r2260, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2261, %r2248, %r2260;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2264, %r2120, %r2261;
	// end inline asm
	// begin inline asm
	mov.b32 %r2267, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2268, %r2248, %r2267;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2271, %r2128, %r2268;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2274, %r2250, %r2264, %r2195;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2278, %r2257, %r2271, %r2195;
	// end inline asm
	shl.b32 	%r2285, %r2278, 4;
	// begin inline asm
	lop3.b32 %r2282, %r2201, %r2274, %r2285, 202;
	// end inline asm
	xor.b32  	%r7721, %r2282, -2004318072;
	// begin inline asm
	mov.b32 %r2289, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2287, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2288, %r2289, %r2287;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2291, %r2136, %r2288;
	// end inline asm
	// begin inline asm
	mov.b32 %r2294, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2295, %r2289, %r2294;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2298, %r2144, %r2295;
	// end inline asm
	// begin inline asm
	mov.b32 %r2301, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2302, %r2289, %r2301;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2305, %r2152, %r2302;
	// end inline asm
	// begin inline asm
	mov.b32 %r2308, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2309, %r2289, %r2308;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2312, %r2160, %r2309;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2315, %r2291, %r2305, %r2195;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2319, %r2298, %r2312, %r2195;
	// end inline asm
	shl.b32 	%r2326, %r2319, 4;
	// begin inline asm
	lop3.b32 %r2323, %r2201, %r2315, %r2326, 202;
	// end inline asm
	xor.b32  	%r7722, %r2323, -2004318072;
	add.s64 	%rd86, %rd92, %rd15;
	st.shared.u32 	[%rd86], %r7719;
	add.s64 	%rd87, %rd92, %rd13;
	st.shared.u32 	[%rd87], %r7720;
	add.s64 	%rd88, %rd92, %rd11;
	st.shared.u32 	[%rd88], %r7721;
	add.s64 	%rd89, %rd92, %rd9;
	st.shared.u32 	[%rd89], %r7722;
	ld.shared.u32 	%r7789, [%rd82];
	ld.shared.u32 	%r7790, [%rd83];
	ld.shared.u32 	%r7791, [%rd84];
	ld.shared.u32 	%r7792, [%rd85];
	// begin inline asm
	mov.b32 %r2332, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2343, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2331, %r7789, -2004318072;
	// begin inline asm
	lop3.b32 %r2329, %r534, %r2331, %r2332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2333, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2334, %r2332, %r2333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2337, %r2329, %r2334;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2340, %r545, %r2331, %r2343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2344, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2345, %r2343, %r2344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2348, %r2340, %r2345;
	// end inline asm
	shr.u32 	%r2353, %r2331, 8;
	// begin inline asm
	lop3.b32 %r2351, %r534, %r2353, %r2332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2355, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2356, %r2332, %r2355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2359, %r2351, %r2356;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2362, %r545, %r2353, %r2343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2366, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2367, %r2343, %r2366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2370, %r2362, %r2367;
	// end inline asm
	// begin inline asm
	mov.b32 %r2378, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2389, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2377, %r7790, -2004318072;
	// begin inline asm
	lop3.b32 %r2375, %r534, %r2377, %r2378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2379, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2380, %r2378, %r2379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2383, %r2375, %r2380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2386, %r545, %r2377, %r2389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2390, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2391, %r2389, %r2390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2394, %r2386, %r2391;
	// end inline asm
	shr.u32 	%r2399, %r2377, 8;
	// begin inline asm
	lop3.b32 %r2397, %r534, %r2399, %r2378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2401, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2402, %r2378, %r2401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2405, %r2397, %r2402;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2408, %r545, %r2399, %r2389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2412, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2413, %r2389, %r2412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2416, %r2408, %r2413;
	// end inline asm
	// begin inline asm
	mov.b32 %r2424, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2435, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2423, %r7791, -2004318072;
	// begin inline asm
	lop3.b32 %r2421, %r534, %r2423, %r2424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2425, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2426, %r2424, %r2425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2429, %r2421, %r2426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2432, %r545, %r2423, %r2435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2436, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2437, %r2435, %r2436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2440, %r2432, %r2437;
	// end inline asm
	shr.u32 	%r2445, %r2423, 8;
	// begin inline asm
	lop3.b32 %r2443, %r534, %r2445, %r2424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2447, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2448, %r2424, %r2447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2451, %r2443, %r2448;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2454, %r545, %r2445, %r2435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2458, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2459, %r2435, %r2458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2462, %r2454, %r2459;
	// end inline asm
	// begin inline asm
	mov.b32 %r2470, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2481, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2469, %r7792, -2004318072;
	// begin inline asm
	lop3.b32 %r2467, %r534, %r2469, %r2470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2471, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2472, %r2470, %r2471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2475, %r2467, %r2472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2478, %r545, %r2469, %r2481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2482, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2483, %r2481, %r2482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2486, %r2478, %r2483;
	// end inline asm
	shr.u32 	%r2491, %r2469, 8;
	// begin inline asm
	lop3.b32 %r2489, %r534, %r2491, %r2470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2493, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2494, %r2470, %r2493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2497, %r2489, %r2494;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2500, %r545, %r2491, %r2481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2504, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2505, %r2481, %r2504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2508, %r2500, %r2505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2511, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2513, %r2511, %r2337;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2516, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2518, %r2516, %r2348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2521, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2523, %r2521, %r2359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2526, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2528, %r2526, %r2370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2531, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2533, %r2531, %r2383;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2536, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2538, %r2536, %r2394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2541, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2543, %r2541, %r2405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2546, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2548, %r2546, %r2416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2551, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2553, %r2551, %r2429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2556, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2558, %r2556, %r2440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2561, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2563, %r2561, %r2451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2566, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2568, %r2566, %r2462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2571, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2573, %r2571, %r2475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2576, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2578, %r2576, %r2486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2581, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2583, %r2581, %r2497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2586, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2588, %r2586, %r2508;
	// end inline asm
	// begin inline asm
	mov.b32 %r2596, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2607, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2593, %r534, %r1047, %r2596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2597, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2598, %r2596, %r2597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2601, %r2593, %r2598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2604, %r545, %r1047, %r2607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2608, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2609, %r2607, %r2608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2612, %r2604, %r2609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2615, %r534, %r1069, %r2596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2619, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2620, %r2596, %r2619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2623, %r2615, %r2620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2626, %r545, %r1069, %r2607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2630, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2631, %r2607, %r2630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2634, %r2626, %r2631;
	// end inline asm
	// begin inline asm
	mov.b32 %r2642, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2653, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2639, %r534, %r1093, %r2642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2643, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2644, %r2642, %r2643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2647, %r2639, %r2644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2650, %r545, %r1093, %r2653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2654, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2655, %r2653, %r2654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2658, %r2650, %r2655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2661, %r534, %r1115, %r2642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2665, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2666, %r2642, %r2665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2669, %r2661, %r2666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2672, %r545, %r1115, %r2653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2676, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2677, %r2653, %r2676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2680, %r2672, %r2677;
	// end inline asm
	// begin inline asm
	mov.b32 %r2688, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2699, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2685, %r534, %r1139, %r2688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2689, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2690, %r2688, %r2689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2693, %r2685, %r2690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2696, %r545, %r1139, %r2699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2700, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2701, %r2699, %r2700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2704, %r2696, %r2701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2707, %r534, %r1161, %r2688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2711, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2712, %r2688, %r2711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2715, %r2707, %r2712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2718, %r545, %r1161, %r2699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2722, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2723, %r2699, %r2722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2726, %r2718, %r2723;
	// end inline asm
	// begin inline asm
	mov.b32 %r2734, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2745, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2731, %r534, %r1185, %r2734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2735, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2736, %r2734, %r2735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2739, %r2731, %r2736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2742, %r545, %r1185, %r2745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2746, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2747, %r2745, %r2746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2750, %r2742, %r2747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2753, %r534, %r1207, %r2734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2757, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2758, %r2734, %r2757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2761, %r2753, %r2758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2764, %r545, %r1207, %r2745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2768, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2769, %r2745, %r2768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2772, %r2764, %r2769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2775, %r196, %r2601, %r2513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2779, %r196, %r2612, %r2518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2783, %r196, %r2623, %r2523;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2787, %r196, %r2634, %r2528;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2791, %r196, %r2647, %r2533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2795, %r196, %r2658, %r2538;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2799, %r196, %r2669, %r2543;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2803, %r196, %r2680, %r2548;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2807, %r196, %r2693, %r2553;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2811, %r196, %r2704, %r2558;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2815, %r196, %r2715, %r2563;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2819, %r196, %r2726, %r2568;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2823, %r196, %r2739, %r2573;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2827, %r196, %r2750, %r2578;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2831, %r196, %r2761, %r2583;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2835, %r196, %r2772, %r2588;
	// end inline asm
	// begin inline asm
	mov.b32 %r2844, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2855, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2841, %r534, %r1327, %r2844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2845, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2846, %r2844, %r2845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2849, %r2841, %r2846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2852, %r545, %r1327, %r2855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2856, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2857, %r2855, %r2856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2860, %r2852, %r2857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2863, %r534, %r1349, %r2844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2867, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2868, %r2844, %r2867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2871, %r2863, %r2868;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2874, %r545, %r1349, %r2855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2878, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2879, %r2855, %r2878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2882, %r2874, %r2879;
	// end inline asm
	// begin inline asm
	mov.b32 %r2890, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2901, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2887, %r534, %r1373, %r2890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2891, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2892, %r2890, %r2891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2895, %r2887, %r2892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2898, %r545, %r1373, %r2901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2902, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2903, %r2901, %r2902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2906, %r2898, %r2903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2909, %r534, %r1395, %r2890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2913, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2914, %r2890, %r2913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2917, %r2909, %r2914;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2920, %r545, %r1395, %r2901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2924, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2925, %r2901, %r2924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2928, %r2920, %r2925;
	// end inline asm
	// begin inline asm
	mov.b32 %r2936, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2947, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2933, %r534, %r1419, %r2936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2937, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2938, %r2936, %r2937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2941, %r2933, %r2938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2944, %r545, %r1419, %r2947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2948, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2949, %r2947, %r2948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2952, %r2944, %r2949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2955, %r534, %r1441, %r2936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2959, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2960, %r2936, %r2959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2963, %r2955, %r2960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2966, %r545, %r1441, %r2947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2970, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2971, %r2947, %r2970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2974, %r2966, %r2971;
	// end inline asm
	// begin inline asm
	mov.b32 %r2982, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2993, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2979, %r534, %r1465, %r2982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2983, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2984, %r2982, %r2983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2987, %r2979, %r2984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2990, %r545, %r1465, %r2993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2994, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2995, %r2993, %r2994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2998, %r2990, %r2995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3001, %r534, %r1487, %r2982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3005, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3006, %r2982, %r3005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3009, %r3001, %r3006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3012, %r545, %r1487, %r2993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3016, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3017, %r2993, %r3016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3020, %r3012, %r3017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3023, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3025, %r3023, %r2849, %r2775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3029, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3031, %r3029, %r2860, %r2779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3035, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3037, %r3035, %r2871, %r2783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3041, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3043, %r3041, %r2882, %r2787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3047, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3049, %r3047, %r2895, %r2791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3053, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3055, %r3053, %r2906, %r2795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3059, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3061, %r3059, %r2917, %r2799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3065, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3067, %r3065, %r2928, %r2803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3071, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3073, %r3071, %r2941, %r2807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3077, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3079, %r3077, %r2952, %r2811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3083, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3085, %r3083, %r2963, %r2815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3089, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3091, %r3089, %r2974, %r2819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3095, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3097, %r3095, %r2987, %r2823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3101, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3103, %r3101, %r2998, %r2827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3107, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3109, %r3107, %r3009, %r2831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3113, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3115, %r3113, %r3020, %r2835;
	// end inline asm
	// begin inline asm
	mov.b32 %r3124, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3135, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3121, %r534, %r535, %r3124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3125, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3126, %r3124, %r3125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3129, %r3121, %r3126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3132, %r545, %r535, %r3135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3136, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3137, %r3135, %r3136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3140, %r3132, %r3137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3143, %r534, %r557, %r3124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3147, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3148, %r3124, %r3147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3151, %r3143, %r3148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3154, %r545, %r557, %r3135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3158, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3159, %r3135, %r3158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3162, %r3154, %r3159;
	// end inline asm
	// begin inline asm
	mov.b32 %r3170, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3181, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3167, %r534, %r581, %r3170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3171, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3172, %r3170, %r3171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3175, %r3167, %r3172;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3178, %r545, %r581, %r3181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3182, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3183, %r3181, %r3182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3186, %r3178, %r3183;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3189, %r534, %r603, %r3170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3193, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3194, %r3170, %r3193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3197, %r3189, %r3194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3200, %r545, %r603, %r3181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3204, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3205, %r3181, %r3204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3208, %r3200, %r3205;
	// end inline asm
	// begin inline asm
	mov.b32 %r3216, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3227, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3213, %r534, %r627, %r3216, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3217, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3218, %r3216, %r3217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3221, %r3213, %r3218;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3224, %r545, %r627, %r3227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3228, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3229, %r3227, %r3228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3232, %r3224, %r3229;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3235, %r534, %r649, %r3216, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3239, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3240, %r3216, %r3239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3243, %r3235, %r3240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3246, %r545, %r649, %r3227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3250, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3251, %r3227, %r3250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3254, %r3246, %r3251;
	// end inline asm
	// begin inline asm
	mov.b32 %r3262, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3273, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3259, %r534, %r673, %r3262, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3263, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3264, %r3262, %r3263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3267, %r3259, %r3264;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3270, %r545, %r673, %r3273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3274, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3275, %r3273, %r3274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3278, %r3270, %r3275;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3281, %r534, %r695, %r3262, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3285, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3286, %r3262, %r3285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3289, %r3281, %r3286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3292, %r545, %r695, %r3273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3296, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3297, %r3273, %r3296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3300, %r3292, %r3297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3374, %r232, %r3129, %r3025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3371, %r232, %r3140, %r3031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3383, %r232, %r3151, %r3037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3380, %r232, %r3162, %r3043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3392, %r232, %r3175, %r3049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3389, %r232, %r3186, %r3055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3401, %r232, %r3197, %r3061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3398, %r232, %r3208, %r3067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3410, %r232, %r3221, %r3073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3407, %r232, %r3232, %r3079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3419, %r232, %r3243, %r3085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3416, %r232, %r3254, %r3091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3428, %r232, %r3267, %r3097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3425, %r232, %r3278, %r3103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3437, %r232, %r3289, %r3109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3434, %r232, %r3300, %r3115;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3367, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3369, %r3367, %r3371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3372, %r278, %r3374, %r3369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3376, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3378, %r3376, %r3380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3381, %r278, %r3383, %r3378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3385, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3387, %r3385, %r3389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3390, %r278, %r3392, %r3387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3394, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3396, %r3394, %r3398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3399, %r278, %r3401, %r3396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3403, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3405, %r3403, %r3407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3408, %r278, %r3410, %r3405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3412, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3414, %r3412, %r3416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3417, %r278, %r3419, %r3414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3421, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3423, %r3421, %r3425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3426, %r278, %r3428, %r3423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3430, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3432, %r3430, %r3434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3435, %r278, %r3437, %r3432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3439, %r281, %r3374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3442, %r278, %r3371, %r3439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3446, %r281, %r3383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3449, %r278, %r3380, %r3446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3453, %r281, %r3392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3456, %r278, %r3389, %r3453;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3460, %r281, %r3401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3463, %r278, %r3398, %r3460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3467, %r281, %r3410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3470, %r278, %r3407, %r3467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3474, %r281, %r3419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3477, %r278, %r3416, %r3474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3481, %r281, %r3428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3484, %r278, %r3425, %r3481;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3488, %r281, %r3437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3491, %r278, %r3434, %r3488;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3582, %r3579}, {%r320, %r326, %r323, %r329}, {%r3372, %r3442}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3591, %r3588}, {%r320, %r326, %r323, %r329}, {%r3381, %r3449}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3600, %r3597}, {%r320, %r326, %r323, %r329}, {%r3390, %r3456}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3609, %r3606}, {%r320, %r326, %r323, %r329}, {%r3399, %r3463}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3618, %r3615}, {%r320, %r326, %r323, %r329}, {%r3408, %r3470}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3627, %r3624}, {%r320, %r326, %r323, %r329}, {%r3417, %r3477}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3636, %r3633}, {%r320, %r326, %r323, %r329}, {%r3426, %r3484}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3645, %r3642}, {%r320, %r326, %r323, %r329}, {%r3435, %r3491}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3575, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3577, %r3575, %r3579;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3580, %r364, %r3582, %r3577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3584, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3586, %r3584, %r3588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3589, %r364, %r3591, %r3586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3593, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3595, %r3593, %r3597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3598, %r364, %r3600, %r3595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3602, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3604, %r3602, %r3606;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3607, %r364, %r3609, %r3604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3611, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3613, %r3611, %r3615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3616, %r364, %r3618, %r3613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3620, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3622, %r3620, %r3624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3625, %r364, %r3627, %r3622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3629, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3631, %r3629, %r3633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3634, %r364, %r3636, %r3631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3638, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3640, %r3638, %r3642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3643, %r364, %r3645, %r3640;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3647, %r367, %r3582;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3650, %r364, %r3579, %r3647;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3654, %r367, %r3591;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3657, %r364, %r3588, %r3654;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3661, %r367, %r3600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3664, %r364, %r3597, %r3661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3668, %r367, %r3609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3671, %r364, %r3606, %r3668;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3675, %r367, %r3618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3678, %r364, %r3615, %r3675;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3682, %r367, %r3627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3685, %r364, %r3624, %r3682;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3689, %r367, %r3636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3692, %r364, %r3633, %r3689;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3696, %r367, %r3645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3699, %r364, %r3642, %r3696;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3703, %r3704}, {%r89, %r91, %r90, %r92}, {%r3580, %r3650}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3713, %r3714}, {%r89, %r91, %r90, %r92}, {%r3589, %r3657}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3723, %r3724}, {%r89, %r91, %r90, %r92}, {%r3598, %r3664}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3733, %r3734}, {%r89, %r91, %r90, %r92}, {%r3607, %r3671}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3743, %r3744}, {%r89, %r91, %r90, %r92}, {%r3616, %r3678}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3753, %r3754}, {%r89, %r91, %r90, %r92}, {%r3625, %r3685}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3763, %r3764}, {%r89, %r91, %r90, %r92}, {%r3634, %r3692}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3773, %r3774}, {%r89, %r91, %r90, %r92}, {%r3643, %r3699}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3783, %r12, %r3703;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3786, %r12, %r3704;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3789, %r12, %r3713;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3792, %r12, %r3714;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3795, %r12, %r3723;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3798, %r12, %r3724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3801, %r12, %r3733;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3804, %r12, %r3734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3807, %r12, %r3743;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3810, %r12, %r3744;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3813, %r12, %r3753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3816, %r12, %r3754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3819, %r12, %r3763;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3822, %r12, %r3764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3825, %r12, %r3773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3828, %r12, %r3774;
	// end inline asm
	// begin inline asm
	mov.b32 %r3831, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3832, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3833, %r3783, %r3831;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3836, %r3833, %r3832;
	// end inline asm
	// begin inline asm
	mov.b32 %r3839, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3840, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3841, %r3786, %r3839;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3844, %r3841, %r3840;
	// end inline asm
	// begin inline asm
	mov.b32 %r3847, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3848, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3849, %r3789, %r3847;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3852, %r3849, %r3848;
	// end inline asm
	// begin inline asm
	mov.b32 %r3855, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3856, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3857, %r3792, %r3855;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3860, %r3857, %r3856;
	// end inline asm
	// begin inline asm
	mov.b32 %r3863, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3864, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3865, %r3795, %r3863;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3868, %r3865, %r3864;
	// end inline asm
	// begin inline asm
	mov.b32 %r3871, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3872, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3873, %r3798, %r3871;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3876, %r3873, %r3872;
	// end inline asm
	// begin inline asm
	mov.b32 %r3879, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3880, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3881, %r3801, %r3879;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3884, %r3881, %r3880;
	// end inline asm
	// begin inline asm
	mov.b32 %r3887, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3888, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3889, %r3804, %r3887;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3892, %r3889, %r3888;
	// end inline asm
	// begin inline asm
	mov.b32 %r3895, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3896, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3897, %r3807, %r3895;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3900, %r3897, %r3896;
	// end inline asm
	// begin inline asm
	mov.b32 %r3903, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3904, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3905, %r3810, %r3903;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3908, %r3905, %r3904;
	// end inline asm
	// begin inline asm
	mov.b32 %r3911, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3912, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3913, %r3813, %r3911;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3916, %r3913, %r3912;
	// end inline asm
	// begin inline asm
	mov.b32 %r3919, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3920, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3921, %r3816, %r3919;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3924, %r3921, %r3920;
	// end inline asm
	// begin inline asm
	mov.b32 %r3927, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3928, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3929, %r3819, %r3927;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3932, %r3929, %r3928;
	// end inline asm
	// begin inline asm
	mov.b32 %r3935, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3936, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3937, %r3822, %r3935;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3940, %r3937, %r3936;
	// end inline asm
	// begin inline asm
	mov.b32 %r3943, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3944, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3945, %r3825, %r3943;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3948, %r3945, %r3944;
	// end inline asm
	// begin inline asm
	mov.b32 %r3951, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3952, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3953, %r3828, %r3951;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3956, %r3953, %r3952;
	// end inline asm
	// begin inline asm
	mov.b32 %r3962, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3960, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3961, %r3962, %r3960;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3964, %r3836, %r3961;
	// end inline asm
	// begin inline asm
	mov.b32 %r3967, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3968, %r3962, %r3967;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3971, %r3844, %r3968;
	// end inline asm
	// begin inline asm
	mov.b32 %r3974, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3975, %r3962, %r3974;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3978, %r3852, %r3975;
	// end inline asm
	// begin inline asm
	mov.b32 %r3981, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3982, %r3962, %r3981;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3985, %r3860, %r3982;
	// end inline asm
	// begin inline asm
	prmt.b32 %r3988, %r3964, %r3978, %r2195;
	// end inline asm
	// begin inline asm
	prmt.b32 %r3992, %r3971, %r3985, %r2195;
	// end inline asm
	shl.b32 	%r3999, %r3992, 4;
	// begin inline asm
	lop3.b32 %r3996, %r2201, %r3988, %r3999, 202;
	// end inline asm
	xor.b32  	%r7723, %r3996, -2004318072;
	// begin inline asm
	mov.b32 %r4003, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4001, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4002, %r4003, %r4001;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4005, %r3868, %r4002;
	// end inline asm
	// begin inline asm
	mov.b32 %r4008, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4009, %r4003, %r4008;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4012, %r3876, %r4009;
	// end inline asm
	// begin inline asm
	mov.b32 %r4015, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4016, %r4003, %r4015;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4019, %r3884, %r4016;
	// end inline asm
	// begin inline asm
	mov.b32 %r4022, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4023, %r4003, %r4022;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4026, %r3892, %r4023;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4029, %r4005, %r4019, %r2195;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4033, %r4012, %r4026, %r2195;
	// end inline asm
	shl.b32 	%r4040, %r4033, 4;
	// begin inline asm
	lop3.b32 %r4037, %r2201, %r4029, %r4040, 202;
	// end inline asm
	xor.b32  	%r7724, %r4037, -2004318072;
	// begin inline asm
	mov.b32 %r4044, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4042, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4043, %r4044, %r4042;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4046, %r3900, %r4043;
	// end inline asm
	// begin inline asm
	mov.b32 %r4049, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4050, %r4044, %r4049;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4053, %r3908, %r4050;
	// end inline asm
	// begin inline asm
	mov.b32 %r4056, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4057, %r4044, %r4056;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4060, %r3916, %r4057;
	// end inline asm
	// begin inline asm
	mov.b32 %r4063, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4064, %r4044, %r4063;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4067, %r3924, %r4064;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4070, %r4046, %r4060, %r2195;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4074, %r4053, %r4067, %r2195;
	// end inline asm
	shl.b32 	%r4081, %r4074, 4;
	// begin inline asm
	lop3.b32 %r4078, %r2201, %r4070, %r4081, 202;
	// end inline asm
	xor.b32  	%r7725, %r4078, -2004318072;
	// begin inline asm
	mov.b32 %r4085, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4083, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4084, %r4085, %r4083;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4087, %r3932, %r4084;
	// end inline asm
	// begin inline asm
	mov.b32 %r4090, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4091, %r4085, %r4090;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4094, %r3940, %r4091;
	// end inline asm
	// begin inline asm
	mov.b32 %r4097, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4098, %r4085, %r4097;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4101, %r3948, %r4098;
	// end inline asm
	// begin inline asm
	mov.b32 %r4104, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4105, %r4085, %r4104;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4108, %r3956, %r4105;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4111, %r4087, %r4101, %r2195;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4115, %r4094, %r4108, %r2195;
	// end inline asm
	shl.b32 	%r4122, %r4115, 4;
	// begin inline asm
	lop3.b32 %r4119, %r2201, %r4111, %r4122, 202;
	// end inline asm
	xor.b32  	%r7726, %r4119, -2004318072;
	st.shared.u32 	[%rd86], %r7723;
	st.shared.u32 	[%rd87], %r7724;
	st.shared.u32 	[%rd88], %r7725;
	st.shared.u32 	[%rd89], %r7726;
	ld.shared.u32 	%r7793, [%rd82];
	ld.shared.u32 	%r7794, [%rd83];
	ld.shared.u32 	%r7795, [%rd84];
	ld.shared.u32 	%r7796, [%rd85];
	// begin inline asm
	mov.b32 %r4128, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4139, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4127, %r7793, -2004318072;
	// begin inline asm
	lop3.b32 %r4125, %r534, %r4127, %r4128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4129, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4130, %r4128, %r4129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4133, %r4125, %r4130;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4136, %r545, %r4127, %r4139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4140, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4141, %r4139, %r4140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4144, %r4136, %r4141;
	// end inline asm
	shr.u32 	%r4149, %r4127, 8;
	// begin inline asm
	lop3.b32 %r4147, %r534, %r4149, %r4128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4151, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4152, %r4128, %r4151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4155, %r4147, %r4152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4158, %r545, %r4149, %r4139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4162, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4163, %r4139, %r4162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4166, %r4158, %r4163;
	// end inline asm
	// begin inline asm
	mov.b32 %r4174, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4185, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4173, %r7794, -2004318072;
	// begin inline asm
	lop3.b32 %r4171, %r534, %r4173, %r4174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4175, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4176, %r4174, %r4175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4179, %r4171, %r4176;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4182, %r545, %r4173, %r4185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4186, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4187, %r4185, %r4186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4190, %r4182, %r4187;
	// end inline asm
	shr.u32 	%r4195, %r4173, 8;
	// begin inline asm
	lop3.b32 %r4193, %r534, %r4195, %r4174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4197, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4198, %r4174, %r4197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4201, %r4193, %r4198;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4204, %r545, %r4195, %r4185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4208, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4209, %r4185, %r4208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4212, %r4204, %r4209;
	// end inline asm
	// begin inline asm
	mov.b32 %r4220, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4231, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4219, %r7795, -2004318072;
	// begin inline asm
	lop3.b32 %r4217, %r534, %r4219, %r4220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4221, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4222, %r4220, %r4221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4225, %r4217, %r4222;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4228, %r545, %r4219, %r4231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4232, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4233, %r4231, %r4232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4236, %r4228, %r4233;
	// end inline asm
	shr.u32 	%r4241, %r4219, 8;
	// begin inline asm
	lop3.b32 %r4239, %r534, %r4241, %r4220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4243, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4244, %r4220, %r4243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4247, %r4239, %r4244;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4250, %r545, %r4241, %r4231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4254, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4255, %r4231, %r4254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4258, %r4250, %r4255;
	// end inline asm
	// begin inline asm
	mov.b32 %r4266, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4277, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4265, %r7796, -2004318072;
	// begin inline asm
	lop3.b32 %r4263, %r534, %r4265, %r4266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4267, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4268, %r4266, %r4267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4271, %r4263, %r4268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4274, %r545, %r4265, %r4277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4278, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4279, %r4277, %r4278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4282, %r4274, %r4279;
	// end inline asm
	shr.u32 	%r4287, %r4265, 8;
	// begin inline asm
	lop3.b32 %r4285, %r534, %r4287, %r4266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4289, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4290, %r4266, %r4289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4293, %r4285, %r4290;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4296, %r545, %r4287, %r4277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4300, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4301, %r4277, %r4300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4304, %r4296, %r4301;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4307, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4309, %r4307, %r4133;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4312, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4314, %r4312, %r4144;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4317, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4319, %r4317, %r4155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4322, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4324, %r4322, %r4166;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4327, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4329, %r4327, %r4179;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4332, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4334, %r4332, %r4190;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4337, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4339, %r4337, %r4201;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4342, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4344, %r4342, %r4212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4347, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4349, %r4347, %r4225;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4352, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4354, %r4352, %r4236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4357, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4359, %r4357, %r4247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4362, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4364, %r4362, %r4258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4367, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4369, %r4367, %r4271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4372, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4374, %r4372, %r4282;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4377, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4379, %r4377, %r4293;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4382, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4384, %r4382, %r4304;
	// end inline asm
	// begin inline asm
	mov.b32 %r4392, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4403, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4389, %r534, %r1327, %r4392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4393, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4394, %r4392, %r4393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4397, %r4389, %r4394;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4400, %r545, %r1327, %r4403, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4404, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4405, %r4403, %r4404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4408, %r4400, %r4405;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4411, %r534, %r1349, %r4392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4415, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4416, %r4392, %r4415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4419, %r4411, %r4416;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4422, %r545, %r1349, %r4403, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4426, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4427, %r4403, %r4426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4430, %r4422, %r4427;
	// end inline asm
	// begin inline asm
	mov.b32 %r4438, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4449, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4435, %r534, %r1373, %r4438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4439, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4440, %r4438, %r4439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4443, %r4435, %r4440;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4446, %r545, %r1373, %r4449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4450, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4451, %r4449, %r4450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4454, %r4446, %r4451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4457, %r534, %r1395, %r4438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4461, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4462, %r4438, %r4461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4465, %r4457, %r4462;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4468, %r545, %r1395, %r4449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4472, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4473, %r4449, %r4472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4476, %r4468, %r4473;
	// end inline asm
	// begin inline asm
	mov.b32 %r4484, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4495, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4481, %r534, %r1419, %r4484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4485, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4486, %r4484, %r4485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4489, %r4481, %r4486;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4492, %r545, %r1419, %r4495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4496, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4497, %r4495, %r4496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4500, %r4492, %r4497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4503, %r534, %r1441, %r4484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4507, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4508, %r4484, %r4507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4511, %r4503, %r4508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4514, %r545, %r1441, %r4495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4518, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4519, %r4495, %r4518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4522, %r4514, %r4519;
	// end inline asm
	// begin inline asm
	mov.b32 %r4530, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4541, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4527, %r534, %r1465, %r4530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4531, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4532, %r4530, %r4531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4535, %r4527, %r4532;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4538, %r545, %r1465, %r4541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4542, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4543, %r4541, %r4542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4546, %r4538, %r4543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4549, %r534, %r1487, %r4530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4553, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4554, %r4530, %r4553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4557, %r4549, %r4554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4560, %r545, %r1487, %r4541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4564, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4565, %r4541, %r4564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4568, %r4560, %r4565;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4571, %r196, %r4397, %r4309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4575, %r196, %r4408, %r4314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4579, %r196, %r4419, %r4319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4583, %r196, %r4430, %r4324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4587, %r196, %r4443, %r4329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4591, %r196, %r4454, %r4334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4595, %r196, %r4465, %r4339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4599, %r196, %r4476, %r4344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4603, %r196, %r4489, %r4349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4607, %r196, %r4500, %r4354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4611, %r196, %r4511, %r4359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4615, %r196, %r4522, %r4364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4619, %r196, %r4535, %r4369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4623, %r196, %r4546, %r4374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4627, %r196, %r4557, %r4379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4631, %r196, %r4568, %r4384;
	// end inline asm
	// begin inline asm
	mov.b32 %r4640, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4651, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4637, %r534, %r535, %r4640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4641, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4642, %r4640, %r4641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4645, %r4637, %r4642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4648, %r545, %r535, %r4651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4652, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4653, %r4651, %r4652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4656, %r4648, %r4653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4659, %r534, %r557, %r4640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4663, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4664, %r4640, %r4663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4667, %r4659, %r4664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4670, %r545, %r557, %r4651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4674, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4675, %r4651, %r4674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4678, %r4670, %r4675;
	// end inline asm
	// begin inline asm
	mov.b32 %r4686, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4697, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4683, %r534, %r581, %r4686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4687, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4688, %r4686, %r4687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4691, %r4683, %r4688;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4694, %r545, %r581, %r4697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4698, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4699, %r4697, %r4698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4702, %r4694, %r4699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4705, %r534, %r603, %r4686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4709, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4710, %r4686, %r4709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4713, %r4705, %r4710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4716, %r545, %r603, %r4697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4720, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4721, %r4697, %r4720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4724, %r4716, %r4721;
	// end inline asm
	// begin inline asm
	mov.b32 %r4732, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4743, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4729, %r534, %r627, %r4732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4733, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4734, %r4732, %r4733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4737, %r4729, %r4734;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4740, %r545, %r627, %r4743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4744, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4745, %r4743, %r4744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4748, %r4740, %r4745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4751, %r534, %r649, %r4732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4755, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4756, %r4732, %r4755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4759, %r4751, %r4756;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4762, %r545, %r649, %r4743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4766, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4767, %r4743, %r4766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4770, %r4762, %r4767;
	// end inline asm
	// begin inline asm
	mov.b32 %r4778, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4789, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4775, %r534, %r673, %r4778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4779, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4780, %r4778, %r4779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4783, %r4775, %r4780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4786, %r545, %r673, %r4789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4790, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4791, %r4789, %r4790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4794, %r4786, %r4791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4797, %r534, %r695, %r4778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4801, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4802, %r4778, %r4801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4805, %r4797, %r4802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4808, %r545, %r695, %r4789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4812, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4813, %r4789, %r4812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4816, %r4808, %r4813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4819, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4821, %r4819, %r4645, %r4571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4825, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4827, %r4825, %r4656, %r4575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4831, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4833, %r4831, %r4667, %r4579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4837, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4839, %r4837, %r4678, %r4583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4843, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4845, %r4843, %r4691, %r4587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4849, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4851, %r4849, %r4702, %r4591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4855, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4857, %r4855, %r4713, %r4595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4861, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4863, %r4861, %r4724, %r4599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4867, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4869, %r4867, %r4737, %r4603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4873, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4875, %r4873, %r4748, %r4607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4879, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4881, %r4879, %r4759, %r4611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4885, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4887, %r4885, %r4770, %r4615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4891, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4893, %r4891, %r4783, %r4619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4897, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4899, %r4897, %r4794, %r4623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4903, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4905, %r4903, %r4805, %r4627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4909, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4911, %r4909, %r4816, %r4631;
	// end inline asm
	// begin inline asm
	mov.b32 %r4920, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4931, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4917, %r534, %r2331, %r4920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4921, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4922, %r4920, %r4921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4925, %r4917, %r4922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4928, %r545, %r2331, %r4931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4932, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4933, %r4931, %r4932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4936, %r4928, %r4933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4939, %r534, %r2353, %r4920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4943, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4944, %r4920, %r4943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4947, %r4939, %r4944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4950, %r545, %r2353, %r4931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4954, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4955, %r4931, %r4954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4958, %r4950, %r4955;
	// end inline asm
	// begin inline asm
	mov.b32 %r4966, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4977, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4963, %r534, %r2377, %r4966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4967, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4968, %r4966, %r4967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4971, %r4963, %r4968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4974, %r545, %r2377, %r4977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4978, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4979, %r4977, %r4978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4982, %r4974, %r4979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4985, %r534, %r2399, %r4966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4989, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4990, %r4966, %r4989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4993, %r4985, %r4990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4996, %r545, %r2399, %r4977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5000, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5001, %r4977, %r5000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5004, %r4996, %r5001;
	// end inline asm
	// begin inline asm
	mov.b32 %r5012, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5023, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5009, %r534, %r2423, %r5012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5013, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5014, %r5012, %r5013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5017, %r5009, %r5014;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5020, %r545, %r2423, %r5023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5024, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5025, %r5023, %r5024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5028, %r5020, %r5025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5031, %r534, %r2445, %r5012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5035, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5036, %r5012, %r5035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5039, %r5031, %r5036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5042, %r545, %r2445, %r5023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5046, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5047, %r5023, %r5046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5050, %r5042, %r5047;
	// end inline asm
	// begin inline asm
	mov.b32 %r5058, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5069, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5055, %r534, %r2469, %r5058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5059, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5060, %r5058, %r5059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5063, %r5055, %r5060;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5066, %r545, %r2469, %r5069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5070, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5071, %r5069, %r5070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5074, %r5066, %r5071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5077, %r534, %r2491, %r5058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5081, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5082, %r5058, %r5081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5085, %r5077, %r5082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5088, %r545, %r2491, %r5069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5092, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5093, %r5069, %r5092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5096, %r5088, %r5093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5170, %r232, %r4925, %r4821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5167, %r232, %r4936, %r4827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5179, %r232, %r4947, %r4833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5176, %r232, %r4958, %r4839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5188, %r232, %r4971, %r4845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5185, %r232, %r4982, %r4851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5197, %r232, %r4993, %r4857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5194, %r232, %r5004, %r4863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5206, %r232, %r5017, %r4869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5203, %r232, %r5028, %r4875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5215, %r232, %r5039, %r4881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5212, %r232, %r5050, %r4887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5224, %r232, %r5063, %r4893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5221, %r232, %r5074, %r4899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5233, %r232, %r5085, %r4905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5230, %r232, %r5096, %r4911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5163, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5165, %r5163, %r5167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5168, %r278, %r5170, %r5165;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5172, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5174, %r5172, %r5176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5177, %r278, %r5179, %r5174;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5181, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5183, %r5181, %r5185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5186, %r278, %r5188, %r5183;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5190, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5192, %r5190, %r5194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5195, %r278, %r5197, %r5192;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5199, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5201, %r5199, %r5203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5204, %r278, %r5206, %r5201;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5208, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5210, %r5208, %r5212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5213, %r278, %r5215, %r5210;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5217, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5219, %r5217, %r5221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5222, %r278, %r5224, %r5219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5226, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5228, %r5226, %r5230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5231, %r278, %r5233, %r5228;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5235, %r281, %r5170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5238, %r278, %r5167, %r5235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5242, %r281, %r5179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5245, %r278, %r5176, %r5242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5249, %r281, %r5188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5252, %r278, %r5185, %r5249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5256, %r281, %r5197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5259, %r278, %r5194, %r5256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5263, %r281, %r5206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5266, %r278, %r5203, %r5263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5270, %r281, %r5215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5273, %r278, %r5212, %r5270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5277, %r281, %r5224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5280, %r278, %r5221, %r5277;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5284, %r281, %r5233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5287, %r278, %r5230, %r5284;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5378, %r5375}, {%r320, %r326, %r323, %r329}, {%r5168, %r5238}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5387, %r5384}, {%r320, %r326, %r323, %r329}, {%r5177, %r5245}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5396, %r5393}, {%r320, %r326, %r323, %r329}, {%r5186, %r5252}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5405, %r5402}, {%r320, %r326, %r323, %r329}, {%r5195, %r5259}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5414, %r5411}, {%r320, %r326, %r323, %r329}, {%r5204, %r5266}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5423, %r5420}, {%r320, %r326, %r323, %r329}, {%r5213, %r5273}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5432, %r5429}, {%r320, %r326, %r323, %r329}, {%r5222, %r5280}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5441, %r5438}, {%r320, %r326, %r323, %r329}, {%r5231, %r5287}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5371, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5373, %r5371, %r5375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5376, %r364, %r5378, %r5373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5380, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5382, %r5380, %r5384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5385, %r364, %r5387, %r5382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5389, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5391, %r5389, %r5393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5394, %r364, %r5396, %r5391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5398, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5400, %r5398, %r5402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5403, %r364, %r5405, %r5400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5407, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5409, %r5407, %r5411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5412, %r364, %r5414, %r5409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5416, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5418, %r5416, %r5420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5421, %r364, %r5423, %r5418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5425, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5427, %r5425, %r5429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5430, %r364, %r5432, %r5427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5434, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5436, %r5434, %r5438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5439, %r364, %r5441, %r5436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5443, %r367, %r5378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5446, %r364, %r5375, %r5443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5450, %r367, %r5387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5453, %r364, %r5384, %r5450;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5457, %r367, %r5396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5460, %r364, %r5393, %r5457;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5464, %r367, %r5405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5467, %r364, %r5402, %r5464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5471, %r367, %r5414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5474, %r364, %r5411, %r5471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5478, %r367, %r5423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5481, %r364, %r5420, %r5478;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5485, %r367, %r5432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5488, %r364, %r5429, %r5485;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5492, %r367, %r5441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5495, %r364, %r5438, %r5492;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5499, %r5500}, {%r89, %r91, %r90, %r92}, {%r5376, %r5446}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5509, %r5510}, {%r89, %r91, %r90, %r92}, {%r5385, %r5453}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5519, %r5520}, {%r89, %r91, %r90, %r92}, {%r5394, %r5460}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5529, %r5530}, {%r89, %r91, %r90, %r92}, {%r5403, %r5467}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5539, %r5540}, {%r89, %r91, %r90, %r92}, {%r5412, %r5474}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5549, %r5550}, {%r89, %r91, %r90, %r92}, {%r5421, %r5481}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5559, %r5560}, {%r89, %r91, %r90, %r92}, {%r5430, %r5488}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5569, %r5570}, {%r89, %r91, %r90, %r92}, {%r5439, %r5495}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5579, %r12, %r5499;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5582, %r12, %r5500;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5585, %r12, %r5509;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5588, %r12, %r5510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5591, %r12, %r5519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5594, %r12, %r5520;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5597, %r12, %r5529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5600, %r12, %r5530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5603, %r12, %r5539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5606, %r12, %r5540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5609, %r12, %r5549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5612, %r12, %r5550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5615, %r12, %r5559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5618, %r12, %r5560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5621, %r12, %r5569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5624, %r12, %r5570;
	// end inline asm
	// begin inline asm
	mov.b32 %r5627, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5628, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5629, %r5579, %r5627;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5632, %r5629, %r5628;
	// end inline asm
	// begin inline asm
	mov.b32 %r5635, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5636, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5637, %r5582, %r5635;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5640, %r5637, %r5636;
	// end inline asm
	// begin inline asm
	mov.b32 %r5643, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5644, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5645, %r5585, %r5643;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5648, %r5645, %r5644;
	// end inline asm
	// begin inline asm
	mov.b32 %r5651, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5652, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5653, %r5588, %r5651;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5656, %r5653, %r5652;
	// end inline asm
	// begin inline asm
	mov.b32 %r5659, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5660, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5661, %r5591, %r5659;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5664, %r5661, %r5660;
	// end inline asm
	// begin inline asm
	mov.b32 %r5667, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5668, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5669, %r5594, %r5667;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5672, %r5669, %r5668;
	// end inline asm
	// begin inline asm
	mov.b32 %r5675, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5676, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5677, %r5597, %r5675;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5680, %r5677, %r5676;
	// end inline asm
	// begin inline asm
	mov.b32 %r5683, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5684, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5685, %r5600, %r5683;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5688, %r5685, %r5684;
	// end inline asm
	// begin inline asm
	mov.b32 %r5691, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5692, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5693, %r5603, %r5691;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5696, %r5693, %r5692;
	// end inline asm
	// begin inline asm
	mov.b32 %r5699, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5700, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5701, %r5606, %r5699;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5704, %r5701, %r5700;
	// end inline asm
	// begin inline asm
	mov.b32 %r5707, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5708, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5709, %r5609, %r5707;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5712, %r5709, %r5708;
	// end inline asm
	// begin inline asm
	mov.b32 %r5715, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5716, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5717, %r5612, %r5715;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5720, %r5717, %r5716;
	// end inline asm
	// begin inline asm
	mov.b32 %r5723, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5724, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5725, %r5615, %r5723;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5728, %r5725, %r5724;
	// end inline asm
	// begin inline asm
	mov.b32 %r5731, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5732, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5733, %r5618, %r5731;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5736, %r5733, %r5732;
	// end inline asm
	// begin inline asm
	mov.b32 %r5739, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5740, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5741, %r5621, %r5739;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5744, %r5741, %r5740;
	// end inline asm
	// begin inline asm
	mov.b32 %r5747, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5748, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5749, %r5624, %r5747;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5752, %r5749, %r5748;
	// end inline asm
	// begin inline asm
	mov.b32 %r5758, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5756, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5757, %r5758, %r5756;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5760, %r5632, %r5757;
	// end inline asm
	// begin inline asm
	mov.b32 %r5763, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5764, %r5758, %r5763;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5767, %r5640, %r5764;
	// end inline asm
	// begin inline asm
	mov.b32 %r5770, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5771, %r5758, %r5770;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5774, %r5648, %r5771;
	// end inline asm
	// begin inline asm
	mov.b32 %r5777, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5778, %r5758, %r5777;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5781, %r5656, %r5778;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5784, %r5760, %r5774, %r2195;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5788, %r5767, %r5781, %r2195;
	// end inline asm
	shl.b32 	%r5795, %r5788, 4;
	// begin inline asm
	lop3.b32 %r5792, %r2201, %r5784, %r5795, 202;
	// end inline asm
	xor.b32  	%r7727, %r5792, -2004318072;
	// begin inline asm
	mov.b32 %r5799, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5797, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5798, %r5799, %r5797;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5801, %r5664, %r5798;
	// end inline asm
	// begin inline asm
	mov.b32 %r5804, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5805, %r5799, %r5804;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5808, %r5672, %r5805;
	// end inline asm
	// begin inline asm
	mov.b32 %r5811, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5812, %r5799, %r5811;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5815, %r5680, %r5812;
	// end inline asm
	// begin inline asm
	mov.b32 %r5818, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5819, %r5799, %r5818;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5822, %r5688, %r5819;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5825, %r5801, %r5815, %r2195;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5829, %r5808, %r5822, %r2195;
	// end inline asm
	shl.b32 	%r5836, %r5829, 4;
	// begin inline asm
	lop3.b32 %r5833, %r2201, %r5825, %r5836, 202;
	// end inline asm
	xor.b32  	%r7728, %r5833, -2004318072;
	// begin inline asm
	mov.b32 %r5840, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5838, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5839, %r5840, %r5838;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5842, %r5696, %r5839;
	// end inline asm
	// begin inline asm
	mov.b32 %r5845, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5846, %r5840, %r5845;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5849, %r5704, %r5846;
	// end inline asm
	// begin inline asm
	mov.b32 %r5852, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5853, %r5840, %r5852;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5856, %r5712, %r5853;
	// end inline asm
	// begin inline asm
	mov.b32 %r5859, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5860, %r5840, %r5859;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5863, %r5720, %r5860;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5866, %r5842, %r5856, %r2195;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5870, %r5849, %r5863, %r2195;
	// end inline asm
	shl.b32 	%r5877, %r5870, 4;
	// begin inline asm
	lop3.b32 %r5874, %r2201, %r5866, %r5877, 202;
	// end inline asm
	xor.b32  	%r7729, %r5874, -2004318072;
	// begin inline asm
	mov.b32 %r5881, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5879, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5880, %r5881, %r5879;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5883, %r5728, %r5880;
	// end inline asm
	// begin inline asm
	mov.b32 %r5886, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5887, %r5881, %r5886;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5890, %r5736, %r5887;
	// end inline asm
	// begin inline asm
	mov.b32 %r5893, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5894, %r5881, %r5893;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5897, %r5744, %r5894;
	// end inline asm
	// begin inline asm
	mov.b32 %r5900, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5901, %r5881, %r5900;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5904, %r5752, %r5901;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5907, %r5883, %r5897, %r2195;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5911, %r5890, %r5904, %r2195;
	// end inline asm
	shl.b32 	%r5918, %r5911, 4;
	// begin inline asm
	lop3.b32 %r5915, %r2201, %r5907, %r5918, 202;
	// end inline asm
	xor.b32  	%r7730, %r5915, -2004318072;
	st.shared.u32 	[%rd86], %r7727;
	st.shared.u32 	[%rd87], %r7728;
	st.shared.u32 	[%rd88], %r7729;
	st.shared.u32 	[%rd89], %r7730;
	ld.shared.u32 	%r7797, [%rd82];
	ld.shared.u32 	%r7798, [%rd83];
	ld.shared.u32 	%r7799, [%rd84];
	ld.shared.u32 	%r7800, [%rd85];
	// begin inline asm
	mov.b32 %r5924, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5935, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5923, %r7797, -2004318072;
	// begin inline asm
	lop3.b32 %r5921, %r534, %r5923, %r5924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5925, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5926, %r5924, %r5925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5929, %r5921, %r5926;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5932, %r545, %r5923, %r5935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5936, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5937, %r5935, %r5936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5940, %r5932, %r5937;
	// end inline asm
	shr.u32 	%r5945, %r5923, 8;
	// begin inline asm
	lop3.b32 %r5943, %r534, %r5945, %r5924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5947, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5948, %r5924, %r5947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5951, %r5943, %r5948;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5954, %r545, %r5945, %r5935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5958, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5959, %r5935, %r5958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5962, %r5954, %r5959;
	// end inline asm
	// begin inline asm
	mov.b32 %r5970, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5981, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5969, %r7798, -2004318072;
	// begin inline asm
	lop3.b32 %r5967, %r534, %r5969, %r5970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5971, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5972, %r5970, %r5971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5975, %r5967, %r5972;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5978, %r545, %r5969, %r5981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5982, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5983, %r5981, %r5982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5986, %r5978, %r5983;
	// end inline asm
	shr.u32 	%r5991, %r5969, 8;
	// begin inline asm
	lop3.b32 %r5989, %r534, %r5991, %r5970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5993, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5994, %r5970, %r5993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5997, %r5989, %r5994;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6000, %r545, %r5991, %r5981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6004, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6005, %r5981, %r6004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6008, %r6000, %r6005;
	// end inline asm
	// begin inline asm
	mov.b32 %r6016, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6027, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6015, %r7799, -2004318072;
	// begin inline asm
	lop3.b32 %r6013, %r534, %r6015, %r6016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6017, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6018, %r6016, %r6017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6021, %r6013, %r6018;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6024, %r545, %r6015, %r6027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6028, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6029, %r6027, %r6028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6032, %r6024, %r6029;
	// end inline asm
	shr.u32 	%r6037, %r6015, 8;
	// begin inline asm
	lop3.b32 %r6035, %r534, %r6037, %r6016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6039, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6040, %r6016, %r6039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6043, %r6035, %r6040;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6046, %r545, %r6037, %r6027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6050, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6051, %r6027, %r6050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6054, %r6046, %r6051;
	// end inline asm
	// begin inline asm
	mov.b32 %r6062, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6073, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6061, %r7800, -2004318072;
	// begin inline asm
	lop3.b32 %r6059, %r534, %r6061, %r6062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6063, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6064, %r6062, %r6063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6067, %r6059, %r6064;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6070, %r545, %r6061, %r6073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6074, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6075, %r6073, %r6074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6078, %r6070, %r6075;
	// end inline asm
	shr.u32 	%r6083, %r6061, 8;
	// begin inline asm
	lop3.b32 %r6081, %r534, %r6083, %r6062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6085, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6086, %r6062, %r6085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6089, %r6081, %r6086;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6092, %r545, %r6083, %r6073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6096, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6097, %r6073, %r6096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6100, %r6092, %r6097;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6103, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6105, %r6103, %r5929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6108, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6110, %r6108, %r5940;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6113, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6115, %r6113, %r5951;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6118, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6120, %r6118, %r5962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6123, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6125, %r6123, %r5975;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6128, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6130, %r6128, %r5986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6133, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6135, %r6133, %r5997;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6138, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6140, %r6138, %r6008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6143, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6145, %r6143, %r6021;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6148, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6150, %r6148, %r6032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6153, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6155, %r6153, %r6043;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6158, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6160, %r6158, %r6054;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6163, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6165, %r6163, %r6067;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6168, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6170, %r6168, %r6078;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6173, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6175, %r6173, %r6089;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6178, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6180, %r6178, %r6100;
	// end inline asm
	// begin inline asm
	mov.b32 %r6188, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6199, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6185, %r534, %r535, %r6188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6189, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6190, %r6188, %r6189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6193, %r6185, %r6190;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6196, %r545, %r535, %r6199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6200, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6201, %r6199, %r6200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6204, %r6196, %r6201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6207, %r534, %r557, %r6188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6211, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6212, %r6188, %r6211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6215, %r6207, %r6212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6218, %r545, %r557, %r6199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6222, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6223, %r6199, %r6222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6226, %r6218, %r6223;
	// end inline asm
	// begin inline asm
	mov.b32 %r6234, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6245, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6231, %r534, %r581, %r6234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6235, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6236, %r6234, %r6235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6239, %r6231, %r6236;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6242, %r545, %r581, %r6245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6246, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6247, %r6245, %r6246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6250, %r6242, %r6247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6253, %r534, %r603, %r6234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6257, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6258, %r6234, %r6257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6261, %r6253, %r6258;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6264, %r545, %r603, %r6245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6268, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6269, %r6245, %r6268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6272, %r6264, %r6269;
	// end inline asm
	// begin inline asm
	mov.b32 %r6280, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6291, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6277, %r534, %r627, %r6280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6281, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6282, %r6280, %r6281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6285, %r6277, %r6282;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6288, %r545, %r627, %r6291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6292, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6293, %r6291, %r6292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6296, %r6288, %r6293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6299, %r534, %r649, %r6280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6303, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6304, %r6280, %r6303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6307, %r6299, %r6304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6310, %r545, %r649, %r6291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6314, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6315, %r6291, %r6314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6318, %r6310, %r6315;
	// end inline asm
	// begin inline asm
	mov.b32 %r6326, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6337, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6323, %r534, %r673, %r6326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6327, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6328, %r6326, %r6327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6331, %r6323, %r6328;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6334, %r545, %r673, %r6337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6338, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6339, %r6337, %r6338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6342, %r6334, %r6339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6345, %r534, %r695, %r6326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6349, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6350, %r6326, %r6349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6353, %r6345, %r6350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6356, %r545, %r695, %r6337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6360, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6361, %r6337, %r6360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6364, %r6356, %r6361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6367, %r196, %r6193, %r6105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6371, %r196, %r6204, %r6110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6375, %r196, %r6215, %r6115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6379, %r196, %r6226, %r6120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6383, %r196, %r6239, %r6125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6387, %r196, %r6250, %r6130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6391, %r196, %r6261, %r6135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6395, %r196, %r6272, %r6140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6399, %r196, %r6285, %r6145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6403, %r196, %r6296, %r6150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6407, %r196, %r6307, %r6155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6411, %r196, %r6318, %r6160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6415, %r196, %r6331, %r6165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6419, %r196, %r6342, %r6170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6423, %r196, %r6353, %r6175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6427, %r196, %r6364, %r6180;
	// end inline asm
	// begin inline asm
	mov.b32 %r6436, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6447, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6433, %r534, %r2331, %r6436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6437, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6438, %r6436, %r6437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6441, %r6433, %r6438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6444, %r545, %r2331, %r6447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6448, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6449, %r6447, %r6448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6452, %r6444, %r6449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6455, %r534, %r2353, %r6436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6459, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6460, %r6436, %r6459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6463, %r6455, %r6460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6466, %r545, %r2353, %r6447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6470, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6471, %r6447, %r6470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6474, %r6466, %r6471;
	// end inline asm
	// begin inline asm
	mov.b32 %r6482, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6493, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6479, %r534, %r2377, %r6482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6483, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6484, %r6482, %r6483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6487, %r6479, %r6484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6490, %r545, %r2377, %r6493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6494, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6495, %r6493, %r6494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6498, %r6490, %r6495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6501, %r534, %r2399, %r6482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6505, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6506, %r6482, %r6505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6509, %r6501, %r6506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6512, %r545, %r2399, %r6493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6516, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6517, %r6493, %r6516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6520, %r6512, %r6517;
	// end inline asm
	// begin inline asm
	mov.b32 %r6528, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6539, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6525, %r534, %r2423, %r6528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6529, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6530, %r6528, %r6529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6533, %r6525, %r6530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6536, %r545, %r2423, %r6539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6540, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6541, %r6539, %r6540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6544, %r6536, %r6541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6547, %r534, %r2445, %r6528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6551, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6552, %r6528, %r6551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6555, %r6547, %r6552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6558, %r545, %r2445, %r6539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6562, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6563, %r6539, %r6562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6566, %r6558, %r6563;
	// end inline asm
	// begin inline asm
	mov.b32 %r6574, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6585, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6571, %r534, %r2469, %r6574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6575, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6576, %r6574, %r6575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6579, %r6571, %r6576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6582, %r545, %r2469, %r6585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6586, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6587, %r6585, %r6586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6590, %r6582, %r6587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6593, %r534, %r2491, %r6574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6597, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6598, %r6574, %r6597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6601, %r6593, %r6598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6604, %r545, %r2491, %r6585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6608, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6609, %r6585, %r6608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6612, %r6604, %r6609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6615, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6617, %r6615, %r6441, %r6367;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6621, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6623, %r6621, %r6452, %r6371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6627, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6629, %r6627, %r6463, %r6375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6633, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6635, %r6633, %r6474, %r6379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6639, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6641, %r6639, %r6487, %r6383;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6645, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6647, %r6645, %r6498, %r6387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6651, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6653, %r6651, %r6509, %r6391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6657, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6659, %r6657, %r6520, %r6395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6663, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6665, %r6663, %r6533, %r6399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6669, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6671, %r6669, %r6544, %r6403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6675, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6677, %r6675, %r6555, %r6407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6681, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6683, %r6681, %r6566, %r6411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6687, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6689, %r6687, %r6579, %r6415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6693, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6695, %r6693, %r6590, %r6419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6699, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6701, %r6699, %r6601, %r6423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6705, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6707, %r6705, %r6612, %r6427;
	// end inline asm
	// begin inline asm
	mov.b32 %r6716, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6727, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6713, %r534, %r4127, %r6716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6717, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6718, %r6716, %r6717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6721, %r6713, %r6718;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6724, %r545, %r4127, %r6727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6728, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6729, %r6727, %r6728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6732, %r6724, %r6729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6735, %r534, %r4149, %r6716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6739, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6740, %r6716, %r6739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6743, %r6735, %r6740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6746, %r545, %r4149, %r6727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6750, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6751, %r6727, %r6750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6754, %r6746, %r6751;
	// end inline asm
	// begin inline asm
	mov.b32 %r6762, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6773, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6759, %r534, %r4173, %r6762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6763, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6764, %r6762, %r6763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6767, %r6759, %r6764;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6770, %r545, %r4173, %r6773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6774, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6775, %r6773, %r6774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6778, %r6770, %r6775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6781, %r534, %r4195, %r6762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6785, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6786, %r6762, %r6785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6789, %r6781, %r6786;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6792, %r545, %r4195, %r6773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6796, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6797, %r6773, %r6796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6800, %r6792, %r6797;
	// end inline asm
	// begin inline asm
	mov.b32 %r6808, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6819, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6805, %r534, %r4219, %r6808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6809, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6810, %r6808, %r6809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6813, %r6805, %r6810;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6816, %r545, %r4219, %r6819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6820, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6821, %r6819, %r6820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6824, %r6816, %r6821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6827, %r534, %r4241, %r6808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6831, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6832, %r6808, %r6831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6835, %r6827, %r6832;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6838, %r545, %r4241, %r6819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6842, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6843, %r6819, %r6842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6846, %r6838, %r6843;
	// end inline asm
	// begin inline asm
	mov.b32 %r6854, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6865, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6851, %r534, %r4265, %r6854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6855, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6856, %r6854, %r6855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6859, %r6851, %r6856;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6862, %r545, %r4265, %r6865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6866, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6867, %r6865, %r6866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6870, %r6862, %r6867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6873, %r534, %r4287, %r6854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6877, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6878, %r6854, %r6877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6881, %r6873, %r6878;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6884, %r545, %r4287, %r6865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6888, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6889, %r6865, %r6888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6892, %r6884, %r6889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6966, %r232, %r6721, %r6617;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6963, %r232, %r6732, %r6623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6975, %r232, %r6743, %r6629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6972, %r232, %r6754, %r6635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6984, %r232, %r6767, %r6641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6981, %r232, %r6778, %r6647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6993, %r232, %r6789, %r6653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6990, %r232, %r6800, %r6659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7002, %r232, %r6813, %r6665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6999, %r232, %r6824, %r6671;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7011, %r232, %r6835, %r6677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7008, %r232, %r6846, %r6683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7020, %r232, %r6859, %r6689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7017, %r232, %r6870, %r6695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7029, %r232, %r6881, %r6701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7026, %r232, %r6892, %r6707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6959, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6961, %r6959, %r6963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6964, %r278, %r6966, %r6961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6968, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6970, %r6968, %r6972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6973, %r278, %r6975, %r6970;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6977, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6979, %r6977, %r6981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6982, %r278, %r6984, %r6979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6986, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6988, %r6986, %r6990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6991, %r278, %r6993, %r6988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6995, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6997, %r6995, %r6999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7000, %r278, %r7002, %r6997;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7004, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7006, %r7004, %r7008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7009, %r278, %r7011, %r7006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7013, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7015, %r7013, %r7017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7018, %r278, %r7020, %r7015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7022, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7024, %r7022, %r7026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7027, %r278, %r7029, %r7024;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7031, %r281, %r6966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7034, %r278, %r6963, %r7031;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7038, %r281, %r6975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7041, %r278, %r6972, %r7038;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7045, %r281, %r6984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7048, %r278, %r6981, %r7045;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7052, %r281, %r6993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7055, %r278, %r6990, %r7052;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7059, %r281, %r7002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7062, %r278, %r6999, %r7059;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7066, %r281, %r7011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7069, %r278, %r7008, %r7066;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7073, %r281, %r7020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7076, %r278, %r7017, %r7073;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7080, %r281, %r7029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7083, %r278, %r7026, %r7080;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7174, %r7171}, {%r320, %r326, %r323, %r329}, {%r6964, %r7034}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7183, %r7180}, {%r320, %r326, %r323, %r329}, {%r6973, %r7041}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7192, %r7189}, {%r320, %r326, %r323, %r329}, {%r6982, %r7048}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7201, %r7198}, {%r320, %r326, %r323, %r329}, {%r6991, %r7055}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7210, %r7207}, {%r320, %r326, %r323, %r329}, {%r7000, %r7062}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7219, %r7216}, {%r320, %r326, %r323, %r329}, {%r7009, %r7069}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7228, %r7225}, {%r320, %r326, %r323, %r329}, {%r7018, %r7076}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7237, %r7234}, {%r320, %r326, %r323, %r329}, {%r7027, %r7083}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7167, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7169, %r7167, %r7171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7172, %r364, %r7174, %r7169;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7176, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7178, %r7176, %r7180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7181, %r364, %r7183, %r7178;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7185, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7187, %r7185, %r7189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7190, %r364, %r7192, %r7187;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7194, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7196, %r7194, %r7198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7199, %r364, %r7201, %r7196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7203, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7205, %r7203, %r7207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7208, %r364, %r7210, %r7205;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7212, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7214, %r7212, %r7216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7217, %r364, %r7219, %r7214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7221, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7223, %r7221, %r7225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7226, %r364, %r7228, %r7223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7230, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7232, %r7230, %r7234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7235, %r364, %r7237, %r7232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7239, %r367, %r7174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7242, %r364, %r7171, %r7239;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7246, %r367, %r7183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7249, %r364, %r7180, %r7246;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7253, %r367, %r7192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7256, %r364, %r7189, %r7253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7260, %r367, %r7201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7263, %r364, %r7198, %r7260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7267, %r367, %r7210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7270, %r364, %r7207, %r7267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7274, %r367, %r7219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7277, %r364, %r7216, %r7274;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7281, %r367, %r7228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7284, %r364, %r7225, %r7281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7288, %r367, %r7237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7291, %r364, %r7234, %r7288;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7295, %r7296}, {%r89, %r91, %r90, %r92}, {%r7172, %r7242}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7305, %r7306}, {%r89, %r91, %r90, %r92}, {%r7181, %r7249}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7315, %r7316}, {%r89, %r91, %r90, %r92}, {%r7190, %r7256}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7325, %r7326}, {%r89, %r91, %r90, %r92}, {%r7199, %r7263}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7335, %r7336}, {%r89, %r91, %r90, %r92}, {%r7208, %r7270}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7345, %r7346}, {%r89, %r91, %r90, %r92}, {%r7217, %r7277}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7355, %r7356}, {%r89, %r91, %r90, %r92}, {%r7226, %r7284}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7365, %r7366}, {%r89, %r91, %r90, %r92}, {%r7235, %r7291}, {%r7374, %r7374};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7375, %r12, %r7295;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7378, %r12, %r7296;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7381, %r12, %r7305;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7384, %r12, %r7306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7387, %r12, %r7315;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7390, %r12, %r7316;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7393, %r12, %r7325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7396, %r12, %r7326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7399, %r12, %r7335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7402, %r12, %r7336;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7405, %r12, %r7345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7408, %r12, %r7346;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7411, %r12, %r7355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7414, %r12, %r7356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7417, %r12, %r7365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7420, %r12, %r7366;
	// end inline asm
	// begin inline asm
	mov.b32 %r7423, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7424, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7425, %r7375, %r7423;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7428, %r7425, %r7424;
	// end inline asm
	// begin inline asm
	mov.b32 %r7431, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7432, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7433, %r7378, %r7431;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7436, %r7433, %r7432;
	// end inline asm
	// begin inline asm
	mov.b32 %r7439, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7440, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7441, %r7381, %r7439;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7444, %r7441, %r7440;
	// end inline asm
	// begin inline asm
	mov.b32 %r7447, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7448, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7449, %r7384, %r7447;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7452, %r7449, %r7448;
	// end inline asm
	// begin inline asm
	mov.b32 %r7455, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7456, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7457, %r7387, %r7455;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7460, %r7457, %r7456;
	// end inline asm
	// begin inline asm
	mov.b32 %r7463, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7464, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7465, %r7390, %r7463;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7468, %r7465, %r7464;
	// end inline asm
	// begin inline asm
	mov.b32 %r7471, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7472, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7473, %r7393, %r7471;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7476, %r7473, %r7472;
	// end inline asm
	// begin inline asm
	mov.b32 %r7479, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7480, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7481, %r7396, %r7479;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7484, %r7481, %r7480;
	// end inline asm
	// begin inline asm
	mov.b32 %r7487, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7488, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7489, %r7399, %r7487;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7492, %r7489, %r7488;
	// end inline asm
	// begin inline asm
	mov.b32 %r7495, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7496, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7497, %r7402, %r7495;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7500, %r7497, %r7496;
	// end inline asm
	// begin inline asm
	mov.b32 %r7503, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7504, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7505, %r7405, %r7503;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7508, %r7505, %r7504;
	// end inline asm
	// begin inline asm
	mov.b32 %r7511, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7512, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7513, %r7408, %r7511;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7516, %r7513, %r7512;
	// end inline asm
	// begin inline asm
	mov.b32 %r7519, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7520, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7521, %r7411, %r7519;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7524, %r7521, %r7520;
	// end inline asm
	// begin inline asm
	mov.b32 %r7527, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7528, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7529, %r7414, %r7527;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7532, %r7529, %r7528;
	// end inline asm
	// begin inline asm
	mov.b32 %r7535, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7536, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7537, %r7417, %r7535;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7540, %r7537, %r7536;
	// end inline asm
	// begin inline asm
	mov.b32 %r7543, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7544, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7545, %r7420, %r7543;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7548, %r7545, %r7544;
	// end inline asm
	// begin inline asm
	mov.b32 %r7554, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7552, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7553, %r7554, %r7552;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7556, %r7428, %r7553;
	// end inline asm
	// begin inline asm
	mov.b32 %r7559, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7560, %r7554, %r7559;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7563, %r7436, %r7560;
	// end inline asm
	// begin inline asm
	mov.b32 %r7566, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7567, %r7554, %r7566;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7570, %r7444, %r7567;
	// end inline asm
	// begin inline asm
	mov.b32 %r7573, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7574, %r7554, %r7573;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7577, %r7452, %r7574;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7580, %r7556, %r7570, %r2195;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7584, %r7563, %r7577, %r2195;
	// end inline asm
	shl.b32 	%r7591, %r7584, 4;
	// begin inline asm
	lop3.b32 %r7588, %r2201, %r7580, %r7591, 202;
	// end inline asm
	xor.b32  	%r7731, %r7588, -2004318072;
	// begin inline asm
	mov.b32 %r7595, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7593, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7594, %r7595, %r7593;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7597, %r7460, %r7594;
	// end inline asm
	// begin inline asm
	mov.b32 %r7600, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7601, %r7595, %r7600;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7604, %r7468, %r7601;
	// end inline asm
	// begin inline asm
	mov.b32 %r7607, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7608, %r7595, %r7607;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7611, %r7476, %r7608;
	// end inline asm
	// begin inline asm
	mov.b32 %r7614, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7615, %r7595, %r7614;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7618, %r7484, %r7615;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7621, %r7597, %r7611, %r2195;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7625, %r7604, %r7618, %r2195;
	// end inline asm
	shl.b32 	%r7632, %r7625, 4;
	// begin inline asm
	lop3.b32 %r7629, %r2201, %r7621, %r7632, 202;
	// end inline asm
	xor.b32  	%r7732, %r7629, -2004318072;
	// begin inline asm
	mov.b32 %r7636, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7634, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7635, %r7636, %r7634;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7638, %r7492, %r7635;
	// end inline asm
	// begin inline asm
	mov.b32 %r7641, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7642, %r7636, %r7641;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7645, %r7500, %r7642;
	// end inline asm
	// begin inline asm
	mov.b32 %r7648, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7649, %r7636, %r7648;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7652, %r7508, %r7649;
	// end inline asm
	// begin inline asm
	mov.b32 %r7655, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7656, %r7636, %r7655;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7659, %r7516, %r7656;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7662, %r7638, %r7652, %r2195;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7666, %r7645, %r7659, %r2195;
	// end inline asm
	shl.b32 	%r7673, %r7666, 4;
	// begin inline asm
	lop3.b32 %r7670, %r2201, %r7662, %r7673, 202;
	// end inline asm
	xor.b32  	%r7733, %r7670, -2004318072;
	// begin inline asm
	mov.b32 %r7677, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7675, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7676, %r7677, %r7675;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7679, %r7524, %r7676;
	// end inline asm
	// begin inline asm
	mov.b32 %r7682, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7683, %r7677, %r7682;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7686, %r7532, %r7683;
	// end inline asm
	// begin inline asm
	mov.b32 %r7689, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7690, %r7677, %r7689;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7693, %r7540, %r7690;
	// end inline asm
	// begin inline asm
	mov.b32 %r7696, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7697, %r7677, %r7696;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7700, %r7548, %r7697;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7703, %r7679, %r7693, %r2195;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7707, %r7686, %r7700, %r2195;
	// end inline asm
	shl.b32 	%r7714, %r7707, 4;
	// begin inline asm
	lop3.b32 %r7711, %r2201, %r7703, %r7714, 202;
	// end inline asm
	xor.b32  	%r7734, %r7711, -2004318072;
	st.shared.u32 	[%rd86], %r7731;
	st.shared.u32 	[%rd87], %r7732;
	st.shared.u32 	[%rd88], %r7733;
	st.shared.u32 	[%rd89], %r7734;
	add.s32 	%r7788, %r7788, -64;
	add.s64 	%rd92, %rd92, 8324;
	setp.eq.s32 	%p217, %r7788, 0;
	@%p217 bra 	LBB0_114;
	bra.uni 	LBB0_113;
LBB0_114:                               // %guard_pass10507
                                        //   in Loop: Header=BB0_112 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7740, [%rd7];
	ld.shared.u32 	%r7741, [%rd8+128];
	ld.shared.u32 	%r7748, [%rd8+4];
	ld.shared.u32 	%r7749, [%rd8+132];
	// begin inline asm
	prmt.b32 %r7735, %r7740, %r7741, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7739, %r7740, %r7741, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7743, %r7748, %r7749, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7747, %r7748, %r7749, %r515;
	// end inline asm
	selp.b32 	%r7751, %r7739, %r7735, %p216;
	shfl.sync.bfly.b32	%r159, %r7751, 8, 31, -1;
	selp.b32 	%r7752, %r7747, %r7743, %p216;
	shfl.sync.bfly.b32	%r160, %r7752, 8, 31, -1;
	setp.eq.s32 	%p219, %r109, 0;
	@%p219 bra 	LBB0_116;
// %bb.115:                             // %L33919
                                        //   in Loop: Header=BB0_112 Depth=1
	selp.b32 	%r7753, %r160, %r7747, %p216;
	selp.b32 	%r7754, %r7743, %r160, %p216;
	selp.b32 	%r7755, %r159, %r7739, %p216;
	selp.b32 	%r7756, %r7735, %r159, %p216;
	shl.b32 	%r7757, %r109, 12;
	or.b32  	%r7758, %r7757, %r93;
	add.s32 	%r7759, %r7758, -786432;
	or.b32  	%r7760, %r7759, %r96;
	or.b32  	%r7761, %r7760, %r94;
	mul.wide.s32 	%rd90, %r7761, 4;
	add.s64 	%rd91, %rd3, %rd90;
	st.global.v4.u32 	[%rd91], {%r7756, %r7754, %r7755, %r7753};
	bra.uni 	LBB0_116;
LBB0_117:                               // %L34162
	st.global.u32 	[%rd4], %r7374;
	ret;
LBB0_1:                                 // %L9
	mov.u64 	%rd28, exception1;
	cvta.global.u64 	%rd29, %rd28;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd29;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd19;
	st.param.b32 	[param0+8], %r161;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L166
	mov.u32 	%r168, 2;
	st.global.u32 	[%rd4], %r168;
	mov.u64 	%rd31, exception2324;
	cvta.global.u64 	%rd32, %rd31;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd32;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd19;
	st.param.b32 	[param0+8], %r161;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_119:                               // %L34272
	mov.u64 	%rd39, exception1;
	cvta.global.u64 	%rd40, %rd39;
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd40;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 5
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd19;
	st.param.b32 	[param0+8], %r161;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 6
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_118:                               // %L34269
	mov.u64 	%rd45, exception1;
	cvta.global.u64 	%rd46, %rd45;
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd46;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 8
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd19;
	st.param.b32 	[param0+8], %r161;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 9
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_144:                               // %L34266
	mov.u64 	%rd59, exception1;
	cvta.global.u64 	%rd60, %rd59;
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 13
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd19;
	st.param.b32 	[param0+8], %r161;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 14
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
