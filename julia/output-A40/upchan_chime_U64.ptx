// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception3423[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<185>;
	.reg .b16 	%rs<1185>;
	.reg .b32 	%r<7947>;
	.reg .f32 	%f<721>;
	.reg .b64 	%rd<149>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r112, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd35, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r119, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r119, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd36, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r113, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r120, %r1, 9;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r121, %r3, %r4;
	or.b32  	%r122, %r121, %r120;
	mul.wide.u32 	%rd42, %r122, 4;
	add.s64 	%rd4, %rd36, %rd42;
	mov.u32 	%r123, 1;
	st.global.u32 	[%rd4], %r123;
	setp.gt.u32 	%p2, %r113, 65535;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L120
	ld.param.u32 	%r114, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r114, %r113;
	setp.gt.s32 	%p4, %r114, 131071;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L127
	ld.param.u32 	%r115, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r124, %r114, %r113;
	and.b32  	%r125, %r124, 255;
	setp.ne.s32 	%p6, %r125, 0;
	setp.gt.u32 	%p7, %r115, 1023;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L138
	ld.param.u32 	%r116, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r116, %r115;
	setp.gt.s32 	%p10, %r116, 2047;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L145
	not.b32 	%r126, %r115;
	add.s32 	%r127, %r126, %r116;
	and.b32  	%r128, %r127, 3;
	setp.eq.s32 	%p12, %r128, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r117, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r117, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r118, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r117, %r118;
	setp.lt.s32 	%p15, %r118, 17;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass189
	bfe.u32 	%r57, %r4, 2, 1;
	shr.u32 	%r58, %r4, 4;
	shl.b32 	%r133, %r58, 1;
	shl.b32 	%r134, %r57, 2;
	shl.b32 	%r59, %r4, 3;
	and.b32  	%r135, %r59, 24;
	or.b32  	%r136, %r134, %r135;
	or.b32  	%r137, %r133, %r136;
	bfe.u32 	%r138, %r4, 3, 1;
	or.b32  	%r61, %r138, %r137;
	shl.b32 	%r62, %r61, 1;
	or.b32  	%r139, %r62, -255;
	cvt.rn.f32.s32 	%f46, %r139;
	mov.f32 	%f47, 0f44000000;
	div.approx.f32 	%f42, %f46, %f47;
	mov.f32 	%f71, 0f00000000;
	mul.f32 	%f44, %f42, 0f40800000;
	setp.neu.f32 	%p22, %f44, 0f00000000;
	mov.f32 	%f720, 0f3F800000;
	mov.f32 	%f713, %f720;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L599
	add.f32 	%f74, %f44, %f44;
	mov.b32 	%r147, %f74;
	and.b32  	%r148, %r147, -2147483648;
	or.b32  	%r149, %r148, 1056964608;
	mov.b32 	%f75, %r149;
	add.f32 	%f76, %f74, %f75;
	cvt.rzi.f32.f32 	%f77, %f76;
	abs.f32 	%f78, %f74;
	setp.gt.f32 	%p23, %f78, 0f4B000000;
	selp.f32 	%f79, %f74, %f77, %p23;
	cvt.rzi.f32.f32 	%f80, %f74;
	setp.lt.f32 	%p24, %f78, 0f3F000000;
	selp.f32 	%f81, %f80, %f79, %p24;
	cvt.rzi.s32.f32 	%r150, %f81;
	fma.rn.f32 	%f82, %f81, 0fBF000000, %f44;
	mul.f32 	%f83, %f82, %f82;
	fma.rn.f32 	%f84, %f83, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f85, %f83, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f86, %f84, %f83, 0fC0A55DF6;
	fma.rn.f32 	%f87, %f85, %f83, 0f4081E0CF;
	fma.rn.f32 	%f88, %f83, %f82, 0f00000000;
	fma.rn.f32 	%f89, %f87, %f83, 0fC09DE9E6;
	fma.rn.f32 	%f90, %f86, %f88, 0f00000000;
	fma.rn.f32 	%f91, %f89, %f83, 0f3F800000;
	fma.rn.f32 	%f92, %f82, 0f40490FDB, %f90;
	and.b32  	%r151, %r150, 1;
	setp.eq.b32 	%p25, %r151, 1;
	selp.f32 	%f93, %f91, %f92, %p25;
	and.b32  	%r152, %r150, 2;
	setp.eq.s32 	%p26, %r152, 0;
	sub.f32 	%f95, %f71, %f93;
	selp.f32 	%f96, %f93, %f95, %p26;
	cvt.rzi.f32.f32 	%f97, %f44;
	setp.eq.f32 	%p27, %f44, %f97;
	mul.f32 	%f98, %f44, 0f00000000;
	selp.f32 	%f99, %f98, %f96, %p27;
	mul.f32 	%f100, %f42, 0f41490FDB;
	div.approx.f32 	%f713, %f99, %f100;
$L__BB0_13:                             // %L603
	or.b32  	%r153, %r62, -191;
	cvt.rn.f32.s32 	%f104, %r153;
	div.approx.f32 	%f4, %f104, %f47;
	mul.f32 	%f6, %f4, 0f40800000;
	setp.eq.f32 	%p33, %f6, 0f00000000;
	mov.f32 	%f714, %f720;
	@%p33 bra 	$L__BB0_15;
// %bb.14:                              // %L617
	add.f32 	%f132, %f6, %f6;
	mov.b32 	%r161, %f132;
	and.b32  	%r162, %r161, -2147483648;
	or.b32  	%r163, %r162, 1056964608;
	mov.b32 	%f133, %r163;
	add.f32 	%f134, %f132, %f133;
	cvt.rzi.f32.f32 	%f135, %f134;
	abs.f32 	%f136, %f132;
	setp.gt.f32 	%p34, %f136, 0f4B000000;
	selp.f32 	%f137, %f132, %f135, %p34;
	cvt.rzi.f32.f32 	%f138, %f132;
	setp.lt.f32 	%p35, %f136, 0f3F000000;
	selp.f32 	%f139, %f138, %f137, %p35;
	cvt.rzi.s32.f32 	%r164, %f139;
	fma.rn.f32 	%f140, %f139, 0fBF000000, %f6;
	mul.f32 	%f141, %f140, %f140;
	fma.rn.f32 	%f142, %f141, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f143, %f141, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f144, %f142, %f141, 0fC0A55DF6;
	fma.rn.f32 	%f145, %f143, %f141, 0f4081E0CF;
	fma.rn.f32 	%f146, %f141, %f140, 0f00000000;
	fma.rn.f32 	%f147, %f145, %f141, 0fC09DE9E6;
	fma.rn.f32 	%f148, %f144, %f146, 0f00000000;
	fma.rn.f32 	%f149, %f147, %f141, 0f3F800000;
	fma.rn.f32 	%f150, %f140, 0f40490FDB, %f148;
	and.b32  	%r165, %r164, 1;
	setp.eq.b32 	%p36, %r165, 1;
	selp.f32 	%f151, %f149, %f150, %p36;
	and.b32  	%r166, %r164, 2;
	setp.eq.s32 	%p37, %r166, 0;
	sub.f32 	%f153, %f71, %f151;
	selp.f32 	%f154, %f151, %f153, %p37;
	cvt.rzi.f32.f32 	%f155, %f6;
	setp.eq.f32 	%p38, %f6, %f155;
	mul.f32 	%f156, %f6, 0f00000000;
	selp.f32 	%f157, %f156, %f154, %p38;
	mul.f32 	%f158, %f4, 0f41490FDB;
	div.approx.f32 	%f714, %f157, %f158;
$L__BB0_15:                             // %L621
	or.b32  	%r170, %r62, -127;
	cvt.rn.f32.s32 	%f163, %r170;
	div.approx.f32 	%f9, %f163, %f47;
	mul.f32 	%f11, %f9, 0f40800000;
	setp.eq.f32 	%p44, %f11, 0f00000000;
	mov.f32 	%f715, %f720;
	@%p44 bra 	$L__BB0_17;
// %bb.16:                              // %L697
	add.f32 	%f191, %f11, %f11;
	mov.b32 	%r178, %f191;
	and.b32  	%r179, %r178, -2147483648;
	or.b32  	%r180, %r179, 1056964608;
	mov.b32 	%f192, %r180;
	add.f32 	%f193, %f191, %f192;
	cvt.rzi.f32.f32 	%f194, %f193;
	abs.f32 	%f195, %f191;
	setp.gt.f32 	%p45, %f195, 0f4B000000;
	selp.f32 	%f196, %f191, %f194, %p45;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p46, %f195, 0f3F000000;
	selp.f32 	%f198, %f197, %f196, %p46;
	cvt.rzi.s32.f32 	%r181, %f198;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f11;
	mul.f32 	%f200, %f199, %f199;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	and.b32  	%r182, %r181, 1;
	setp.eq.b32 	%p47, %r182, 1;
	selp.f32 	%f210, %f208, %f209, %p47;
	and.b32  	%r183, %r181, 2;
	setp.eq.s32 	%p48, %r183, 0;
	sub.f32 	%f212, %f71, %f210;
	selp.f32 	%f213, %f210, %f212, %p48;
	cvt.rzi.f32.f32 	%f214, %f11;
	setp.eq.f32 	%p49, %f11, %f214;
	mul.f32 	%f215, %f11, 0f00000000;
	selp.f32 	%f216, %f215, %f213, %p49;
	mul.f32 	%f217, %f9, 0f41490FDB;
	div.approx.f32 	%f715, %f216, %f217;
$L__BB0_17:                             // %L701
	or.b32  	%r184, %r62, -63;
	cvt.rn.f32.s32 	%f221, %r184;
	div.approx.f32 	%f15, %f221, %f47;
	mul.f32 	%f17, %f15, 0f40800000;
	setp.eq.f32 	%p55, %f17, 0f00000000;
	mov.f32 	%f716, %f720;
	@%p55 bra 	$L__BB0_19;
// %bb.18:                              // %L715
	add.f32 	%f249, %f17, %f17;
	mov.b32 	%r192, %f249;
	and.b32  	%r193, %r192, -2147483648;
	or.b32  	%r194, %r193, 1056964608;
	mov.b32 	%f250, %r194;
	add.f32 	%f251, %f249, %f250;
	cvt.rzi.f32.f32 	%f252, %f251;
	abs.f32 	%f253, %f249;
	setp.gt.f32 	%p56, %f253, 0f4B000000;
	selp.f32 	%f254, %f249, %f252, %p56;
	cvt.rzi.f32.f32 	%f255, %f249;
	setp.lt.f32 	%p57, %f253, 0f3F000000;
	selp.f32 	%f256, %f255, %f254, %p57;
	cvt.rzi.s32.f32 	%r195, %f256;
	fma.rn.f32 	%f257, %f256, 0fBF000000, %f17;
	mul.f32 	%f258, %f257, %f257;
	fma.rn.f32 	%f259, %f258, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f260, %f258, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f261, %f259, %f258, 0fC0A55DF6;
	fma.rn.f32 	%f262, %f260, %f258, 0f4081E0CF;
	fma.rn.f32 	%f263, %f258, %f257, 0f00000000;
	fma.rn.f32 	%f264, %f262, %f258, 0fC09DE9E6;
	fma.rn.f32 	%f265, %f261, %f263, 0f00000000;
	fma.rn.f32 	%f266, %f264, %f258, 0f3F800000;
	fma.rn.f32 	%f267, %f257, 0f40490FDB, %f265;
	and.b32  	%r196, %r195, 1;
	setp.eq.b32 	%p58, %r196, 1;
	selp.f32 	%f268, %f266, %f267, %p58;
	and.b32  	%r197, %r195, 2;
	setp.eq.s32 	%p59, %r197, 0;
	sub.f32 	%f270, %f71, %f268;
	selp.f32 	%f271, %f268, %f270, %p59;
	cvt.rzi.f32.f32 	%f272, %f17;
	setp.eq.f32 	%p60, %f17, %f272;
	mul.f32 	%f273, %f17, 0f00000000;
	selp.f32 	%f274, %f273, %f271, %p60;
	mul.f32 	%f275, %f15, 0f41490FDB;
	div.approx.f32 	%f716, %f274, %f275;
$L__BB0_19:                             // %L719
	or.b32  	%r201, %r62, 1;
	cvt.rn.f32.s32 	%f280, %r201;
	div.approx.f32 	%f20, %f280, %f47;
	mul.f32 	%f22, %f20, 0f40800000;
	setp.eq.f32 	%p66, %f22, 0f00000000;
	mov.f32 	%f717, %f720;
	@%p66 bra 	$L__BB0_21;
// %bb.20:                              // %L795
	add.f32 	%f308, %f22, %f22;
	mov.b32 	%r209, %f308;
	and.b32  	%r210, %r209, -2147483648;
	or.b32  	%r211, %r210, 1056964608;
	mov.b32 	%f309, %r211;
	add.f32 	%f310, %f308, %f309;
	cvt.rzi.f32.f32 	%f311, %f310;
	abs.f32 	%f312, %f308;
	setp.gt.f32 	%p67, %f312, 0f4B000000;
	selp.f32 	%f313, %f308, %f311, %p67;
	cvt.rzi.f32.f32 	%f314, %f308;
	setp.lt.f32 	%p68, %f312, 0f3F000000;
	selp.f32 	%f315, %f314, %f313, %p68;
	cvt.rzi.s32.f32 	%r212, %f315;
	fma.rn.f32 	%f316, %f315, 0fBF000000, %f22;
	mul.f32 	%f317, %f316, %f316;
	fma.rn.f32 	%f318, %f317, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f319, %f317, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f320, %f318, %f317, 0fC0A55DF6;
	fma.rn.f32 	%f321, %f319, %f317, 0f4081E0CF;
	fma.rn.f32 	%f322, %f317, %f316, 0f00000000;
	fma.rn.f32 	%f323, %f321, %f317, 0fC09DE9E6;
	fma.rn.f32 	%f324, %f320, %f322, 0f00000000;
	fma.rn.f32 	%f325, %f323, %f317, 0f3F800000;
	fma.rn.f32 	%f326, %f316, 0f40490FDB, %f324;
	and.b32  	%r213, %r212, 1;
	setp.eq.b32 	%p69, %r213, 1;
	selp.f32 	%f327, %f325, %f326, %p69;
	and.b32  	%r214, %r212, 2;
	setp.eq.s32 	%p70, %r214, 0;
	sub.f32 	%f329, %f71, %f327;
	selp.f32 	%f330, %f327, %f329, %p70;
	cvt.rzi.f32.f32 	%f331, %f22;
	setp.eq.f32 	%p71, %f22, %f331;
	mul.f32 	%f332, %f22, 0f00000000;
	selp.f32 	%f333, %f332, %f330, %p71;
	mul.f32 	%f334, %f20, 0f41490FDB;
	div.approx.f32 	%f717, %f333, %f334;
$L__BB0_21:                             // %L799
	or.b32  	%r215, %r62, 65;
	cvt.rn.f32.s32 	%f338, %r215;
	div.approx.f32 	%f26, %f338, %f47;
	mul.f32 	%f28, %f26, 0f40800000;
	setp.eq.f32 	%p77, %f28, 0f00000000;
	mov.f32 	%f718, %f720;
	@%p77 bra 	$L__BB0_23;
// %bb.22:                              // %L813
	add.f32 	%f366, %f28, %f28;
	mov.b32 	%r223, %f366;
	and.b32  	%r224, %r223, -2147483648;
	or.b32  	%r225, %r224, 1056964608;
	mov.b32 	%f367, %r225;
	add.f32 	%f368, %f366, %f367;
	cvt.rzi.f32.f32 	%f369, %f368;
	abs.f32 	%f370, %f366;
	setp.gt.f32 	%p78, %f370, 0f4B000000;
	selp.f32 	%f371, %f366, %f369, %p78;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p79, %f370, 0f3F000000;
	selp.f32 	%f373, %f372, %f371, %p79;
	cvt.rzi.s32.f32 	%r226, %f373;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f28;
	mul.f32 	%f375, %f374, %f374;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	and.b32  	%r227, %r226, 1;
	setp.eq.b32 	%p80, %r227, 1;
	selp.f32 	%f385, %f383, %f384, %p80;
	and.b32  	%r228, %r226, 2;
	setp.eq.s32 	%p81, %r228, 0;
	sub.f32 	%f387, %f71, %f385;
	selp.f32 	%f388, %f385, %f387, %p81;
	cvt.rzi.f32.f32 	%f389, %f28;
	setp.eq.f32 	%p82, %f28, %f389;
	mul.f32 	%f390, %f28, 0f00000000;
	selp.f32 	%f391, %f390, %f388, %p82;
	mul.f32 	%f392, %f26, 0f41490FDB;
	div.approx.f32 	%f718, %f391, %f392;
$L__BB0_23:                             // %L817
	or.b32  	%r232, %r62, 129;
	cvt.rn.f32.s32 	%f397, %r232;
	div.approx.f32 	%f31, %f397, %f47;
	mul.f32 	%f33, %f31, 0f40800000;
	setp.eq.f32 	%p88, %f33, 0f00000000;
	mov.f32 	%f719, %f720;
	@%p88 bra 	$L__BB0_25;
// %bb.24:                              // %L893
	add.f32 	%f425, %f33, %f33;
	mov.b32 	%r240, %f425;
	and.b32  	%r241, %r240, -2147483648;
	or.b32  	%r242, %r241, 1056964608;
	mov.b32 	%f426, %r242;
	add.f32 	%f427, %f425, %f426;
	cvt.rzi.f32.f32 	%f428, %f427;
	abs.f32 	%f429, %f425;
	setp.gt.f32 	%p89, %f429, 0f4B000000;
	selp.f32 	%f430, %f425, %f428, %p89;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p90, %f429, 0f3F000000;
	selp.f32 	%f432, %f431, %f430, %p90;
	cvt.rzi.s32.f32 	%r243, %f432;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f33;
	mul.f32 	%f434, %f433, %f433;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	and.b32  	%r244, %r243, 1;
	setp.eq.b32 	%p91, %r244, 1;
	selp.f32 	%f444, %f442, %f443, %p91;
	and.b32  	%r245, %r243, 2;
	setp.eq.s32 	%p92, %r245, 0;
	sub.f32 	%f446, %f71, %f444;
	selp.f32 	%f447, %f444, %f446, %p92;
	cvt.rzi.f32.f32 	%f448, %f33;
	setp.eq.f32 	%p93, %f33, %f448;
	mul.f32 	%f449, %f33, 0f00000000;
	selp.f32 	%f450, %f449, %f447, %p93;
	mul.f32 	%f451, %f31, 0f41490FDB;
	div.approx.f32 	%f719, %f450, %f451;
$L__BB0_25:                             // %L897
	or.b32  	%r246, %r62, 193;
	cvt.rn.f32.s32 	%f455, %r246;
	div.approx.f32 	%f37, %f455, %f47;
	mul.f32 	%f39, %f37, 0f40800000;
	setp.eq.f32 	%p99, %f39, 0f00000000;
	@%p99 bra 	$L__BB0_27;
// %bb.26:                              // %L911
	add.f32 	%f483, %f39, %f39;
	mov.b32 	%r254, %f483;
	and.b32  	%r255, %r254, -2147483648;
	or.b32  	%r256, %r255, 1056964608;
	mov.b32 	%f484, %r256;
	add.f32 	%f485, %f483, %f484;
	cvt.rzi.f32.f32 	%f486, %f485;
	abs.f32 	%f487, %f483;
	setp.gt.f32 	%p100, %f487, 0f4B000000;
	selp.f32 	%f488, %f483, %f486, %p100;
	cvt.rzi.f32.f32 	%f489, %f483;
	setp.lt.f32 	%p101, %f487, 0f3F000000;
	selp.f32 	%f490, %f489, %f488, %p101;
	cvt.rzi.s32.f32 	%r257, %f490;
	fma.rn.f32 	%f491, %f490, 0fBF000000, %f39;
	mul.f32 	%f492, %f491, %f491;
	fma.rn.f32 	%f493, %f492, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f494, %f492, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f495, %f493, %f492, 0fC0A55DF6;
	fma.rn.f32 	%f496, %f494, %f492, 0f4081E0CF;
	fma.rn.f32 	%f497, %f492, %f491, 0f00000000;
	fma.rn.f32 	%f498, %f496, %f492, 0fC09DE9E6;
	fma.rn.f32 	%f499, %f495, %f497, 0f00000000;
	fma.rn.f32 	%f500, %f498, %f492, 0f3F800000;
	fma.rn.f32 	%f501, %f491, 0f40490FDB, %f499;
	and.b32  	%r258, %r257, 1;
	setp.eq.b32 	%p102, %r258, 1;
	selp.f32 	%f502, %f500, %f501, %p102;
	and.b32  	%r259, %r257, 2;
	setp.eq.s32 	%p103, %r259, 0;
	sub.f32 	%f504, %f71, %f502;
	selp.f32 	%f505, %f502, %f504, %p103;
	cvt.rzi.f32.f32 	%f506, %f39;
	setp.eq.f32 	%p104, %f39, %f506;
	mul.f32 	%f507, %f39, 0f00000000;
	selp.f32 	%f508, %f507, %f505, %p104;
	mul.f32 	%f509, %f37, 0f41490FDB;
	div.approx.f32 	%f720, %f508, %f509;
$L__BB0_27:                             // %L915
	setp.le.s32 	%p147, %r114, %r113;
	mov.u32 	%r7918, 0;
	@%p147 bra 	$L__BB0_38;
// %bb.28:                              // %L1438.lr.ph
	abs.f32 	%f48, %f42;
	abs.f32 	%f106, %f4;
	abs.f32 	%f165, %f9;
	abs.f32 	%f223, %f15;
	abs.f32 	%f282, %f20;
	abs.f32 	%f340, %f26;
	setp.gt.f32 	%p17, %f48, 0f4B800000;
	mul.f32 	%f49, %f42, 0f00000000;
	setp.gt.f32 	%p28, %f106, 0f4B800000;
	mul.f32 	%f107, %f4, 0f00000000;
	setp.gt.f32 	%p39, %f165, 0f4B800000;
	mul.f32 	%f166, %f9, 0f00000000;
	setp.gt.f32 	%p50, %f223, 0f4B800000;
	mul.f32 	%f224, %f15, 0f00000000;
	setp.gt.f32 	%p61, %f282, 0f4B800000;
	mul.f32 	%f283, %f20, 0f00000000;
	setp.gt.f32 	%p72, %f340, 0f4B800000;
	mul.f32 	%f341, %f26, 0f00000000;
	abs.f32 	%f399, %f31;
	selp.f32 	%f50, %f49, %f42, %p17;
	selp.f32 	%f108, %f107, %f4, %p28;
	selp.f32 	%f167, %f166, %f9, %p39;
	selp.f32 	%f225, %f224, %f15, %p50;
	selp.f32 	%f284, %f283, %f20, %p61;
	selp.f32 	%f342, %f341, %f26, %p72;
	setp.gt.f32 	%p83, %f399, 0f4B800000;
	mul.f32 	%f400, %f31, 0f00000000;
	add.f32 	%f51, %f50, %f50;
	add.f32 	%f109, %f108, %f108;
	add.f32 	%f168, %f167, %f167;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f285, %f284, %f284;
	add.f32 	%f343, %f342, %f342;
	selp.f32 	%f401, %f400, %f31, %p83;
	abs.f32 	%f457, %f37;
	mov.b32 	%r140, %f51;
	mov.b32 	%r154, %f109;
	mov.b32 	%r171, %f168;
	mov.b32 	%r185, %f226;
	mov.b32 	%r202, %f285;
	mov.b32 	%r216, %f343;
	add.f32 	%f402, %f401, %f401;
	setp.gt.f32 	%p94, %f457, 0f4B800000;
	mul.f32 	%f458, %f37, 0f00000000;
	and.b32  	%r141, %r140, -2147483648;
	and.b32  	%r155, %r154, -2147483648;
	and.b32  	%r172, %r171, -2147483648;
	and.b32  	%r186, %r185, -2147483648;
	and.b32  	%r203, %r202, -2147483648;
	and.b32  	%r217, %r216, -2147483648;
	mov.b32 	%r233, %f402;
	selp.f32 	%f459, %f458, %f37, %p94;
	or.b32  	%r142, %r141, 1056964608;
	or.b32  	%r156, %r155, 1056964608;
	or.b32  	%r173, %r172, 1056964608;
	or.b32  	%r187, %r186, 1056964608;
	or.b32  	%r204, %r203, 1056964608;
	or.b32  	%r218, %r217, 1056964608;
	and.b32  	%r234, %r233, -2147483648;
	add.f32 	%f460, %f459, %f459;
	mov.b32 	%f52, %r142;
	mov.b32 	%f110, %r156;
	mov.b32 	%f169, %r173;
	mov.b32 	%f227, %r187;
	mov.b32 	%f286, %r204;
	mov.b32 	%f344, %r218;
	or.b32  	%r235, %r234, 1056964608;
	mov.b32 	%r247, %f460;
	add.f32 	%f53, %f51, %f52;
	abs.f32 	%f55, %f51;
	add.f32 	%f111, %f109, %f110;
	abs.f32 	%f113, %f109;
	add.f32 	%f170, %f168, %f169;
	abs.f32 	%f172, %f168;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f287, %f285, %f286;
	abs.f32 	%f289, %f285;
	add.f32 	%f345, %f343, %f344;
	abs.f32 	%f347, %f343;
	mov.b32 	%f403, %r235;
	and.b32  	%r248, %r247, -2147483648;
	cvt.rzi.f32.f32 	%f54, %f53;
	setp.gt.f32 	%p18, %f55, 0f4B000000;
	cvt.rzi.f32.f32 	%f112, %f111;
	setp.gt.f32 	%p29, %f113, 0f4B000000;
	cvt.rzi.f32.f32 	%f171, %f170;
	setp.gt.f32 	%p40, %f172, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p51, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f288, %f287;
	setp.gt.f32 	%p62, %f289, 0f4B000000;
	cvt.rzi.f32.f32 	%f346, %f345;
	setp.gt.f32 	%p73, %f347, 0f4B000000;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	or.b32  	%r249, %r248, 1056964608;
	selp.f32 	%f56, %f51, %f54, %p18;
	cvt.rzi.f32.f32 	%f57, %f51;
	setp.lt.f32 	%p19, %f55, 0f3F000000;
	selp.f32 	%f114, %f109, %f112, %p29;
	cvt.rzi.f32.f32 	%f115, %f109;
	setp.lt.f32 	%p30, %f113, 0f3F000000;
	selp.f32 	%f173, %f168, %f171, %p40;
	cvt.rzi.f32.f32 	%f174, %f168;
	setp.lt.f32 	%p41, %f172, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p51;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p52, %f230, 0f3F000000;
	selp.f32 	%f290, %f285, %f288, %p62;
	cvt.rzi.f32.f32 	%f291, %f285;
	setp.lt.f32 	%p63, %f289, 0f3F000000;
	selp.f32 	%f348, %f343, %f346, %p73;
	cvt.rzi.f32.f32 	%f349, %f343;
	setp.lt.f32 	%p74, %f347, 0f3F000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p84, %f406, 0f4B000000;
	mov.b32 	%f461, %r249;
	selp.f32 	%f58, %f57, %f56, %p19;
	selp.f32 	%f116, %f115, %f114, %p30;
	selp.f32 	%f175, %f174, %f173, %p41;
	selp.f32 	%f233, %f232, %f231, %p52;
	selp.f32 	%f292, %f291, %f290, %p63;
	selp.f32 	%f350, %f349, %f348, %p74;
	selp.f32 	%f407, %f402, %f405, %p84;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p85, %f406, 0f3F000000;
	add.f32 	%f462, %f460, %f461;
	abs.f32 	%f464, %f460;
	fma.rn.f32 	%f59, %f58, 0fBF000000, %f50;
	fma.rn.f32 	%f117, %f116, 0fBF000000, %f108;
	fma.rn.f32 	%f176, %f175, 0fBF000000, %f167;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f293, %f292, 0fBF000000, %f284;
	fma.rn.f32 	%f351, %f350, 0fBF000000, %f342;
	selp.f32 	%f409, %f408, %f407, %p85;
	cvt.rzi.f32.f32 	%f463, %f462;
	setp.gt.f32 	%p95, %f464, 0f4B000000;
	mul.f32 	%f60, %f59, %f59;
	mul.f32 	%f118, %f117, %f117;
	mul.f32 	%f177, %f176, %f176;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f294, %f293, %f293;
	mul.f32 	%f352, %f351, %f351;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	selp.f32 	%f465, %f460, %f463, %p95;
	cvt.rzi.f32.f32 	%f466, %f460;
	setp.lt.f32 	%p96, %f464, 0f3F000000;
	cvt.rzi.s32.f32 	%r143, %f58;
	fma.rn.f32 	%f61, %f60, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f62, %f60, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r157, %f116;
	fma.rn.f32 	%f119, %f118, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f120, %f118, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r174, %f175;
	fma.rn.f32 	%f178, %f177, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f179, %f177, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r188, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r205, %f292;
	fma.rn.f32 	%f295, %f294, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f296, %f294, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r219, %f350;
	fma.rn.f32 	%f353, %f352, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f354, %f352, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f411, %f410, %f410;
	selp.f32 	%f467, %f466, %f465, %p96;
	add.s32 	%r144, %r143, 1;
	fma.rn.f32 	%f63, %f61, %f60, 0fC0A55DF6;
	fma.rn.f32 	%f64, %f62, %f60, 0f4081E0CF;
	fma.rn.f32 	%f65, %f60, %f59, 0f00000000;
	add.s32 	%r158, %r157, 1;
	fma.rn.f32 	%f121, %f119, %f118, 0fC0A55DF6;
	fma.rn.f32 	%f122, %f120, %f118, 0f4081E0CF;
	fma.rn.f32 	%f123, %f118, %f117, 0f00000000;
	add.s32 	%r175, %r174, 1;
	fma.rn.f32 	%f180, %f178, %f177, 0fC0A55DF6;
	fma.rn.f32 	%f181, %f179, %f177, 0f4081E0CF;
	fma.rn.f32 	%f182, %f177, %f176, 0f00000000;
	add.s32 	%r189, %r188, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r206, %r205, 1;
	fma.rn.f32 	%f297, %f295, %f294, 0fC0A55DF6;
	fma.rn.f32 	%f298, %f296, %f294, 0f4081E0CF;
	fma.rn.f32 	%f299, %f294, %f293, 0f00000000;
	add.s32 	%r220, %r219, 1;
	fma.rn.f32 	%f355, %f353, %f352, 0fC0A55DF6;
	fma.rn.f32 	%f356, %f354, %f352, 0f4081E0CF;
	fma.rn.f32 	%f357, %f352, %f351, 0f00000000;
	cvt.rzi.s32.f32 	%r236, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f468, %f467, 0fBF000000, %f459;
	shl.b32 	%r49, %r4, 1;
	fma.rn.f32 	%f66, %f64, %f60, 0fC09DE9E6;
	fma.rn.f32 	%f67, %f63, %f65, 0f00000000;
	and.b32  	%r145, %r144, 1;
	fma.rn.f32 	%f124, %f122, %f118, 0fC09DE9E6;
	fma.rn.f32 	%f125, %f121, %f123, 0f00000000;
	and.b32  	%r159, %r158, 1;
	fma.rn.f32 	%f183, %f181, %f177, 0fC09DE9E6;
	fma.rn.f32 	%f184, %f180, %f182, 0f00000000;
	and.b32  	%r176, %r175, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r190, %r189, 1;
	fma.rn.f32 	%f300, %f298, %f294, 0fC09DE9E6;
	fma.rn.f32 	%f301, %f297, %f299, 0f00000000;
	and.b32  	%r207, %r206, 1;
	fma.rn.f32 	%f358, %f356, %f352, 0fC09DE9E6;
	fma.rn.f32 	%f359, %f355, %f357, 0f00000000;
	and.b32  	%r221, %r220, 1;
	add.s32 	%r237, %r236, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	mul.f32 	%f469, %f468, %f468;
	and.b32  	%r50, %r49, 8;
	shl.b32 	%r51, %r4, 2;
	and.b32  	%r54, %r4, 18;
	fma.rn.f32 	%f68, %f66, %f60, 0f3F800000;
	fma.rn.f32 	%f69, %f59, 0f40490FDB, %f67;
	setp.eq.b32 	%p20, %r145, 1;
	fma.rn.f32 	%f126, %f124, %f118, 0f3F800000;
	fma.rn.f32 	%f127, %f117, 0f40490FDB, %f125;
	setp.eq.b32 	%p31, %r159, 1;
	fma.rn.f32 	%f185, %f183, %f177, 0f3F800000;
	fma.rn.f32 	%f186, %f176, 0f40490FDB, %f184;
	setp.eq.b32 	%p42, %r176, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p53, %r190, 1;
	fma.rn.f32 	%f302, %f300, %f294, 0f3F800000;
	fma.rn.f32 	%f303, %f293, 0f40490FDB, %f301;
	setp.eq.b32 	%p64, %r207, 1;
	fma.rn.f32 	%f360, %f358, %f352, 0f3F800000;
	fma.rn.f32 	%f361, %f351, 0f40490FDB, %f359;
	setp.eq.b32 	%p75, %r221, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r238, %r237, 1;
	cvt.rzi.s32.f32 	%r250, %f467;
	fma.rn.f32 	%f470, %f469, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f471, %f469, 0f3E684E12, 0fBFAAD2E0;
	and.b32  	%r52, %r51, 32;
	or.b32  	%r129, %r54, %r50;
	selp.f32 	%f70, %f68, %f69, %p20;
	and.b32  	%r146, %r144, 2;
	selp.f32 	%f128, %f126, %f127, %p31;
	and.b32  	%r160, %r158, 2;
	selp.f32 	%f187, %f185, %f186, %p42;
	and.b32  	%r177, %r175, 2;
	selp.f32 	%f245, %f243, %f244, %p53;
	and.b32  	%r191, %r189, 2;
	selp.f32 	%f304, %f302, %f303, %p64;
	and.b32  	%r208, %r206, 2;
	selp.f32 	%f362, %f360, %f361, %p75;
	and.b32  	%r222, %r220, 2;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p86, %r238, 1;
	add.s32 	%r251, %r250, 1;
	fma.rn.f32 	%f472, %f470, %f469, 0fC0A55DF6;
	fma.rn.f32 	%f473, %f471, %f469, 0f4081E0CF;
	fma.rn.f32 	%f474, %f469, %f468, 0f00000000;
	and.b32  	%r53, %r51, 4;
	or.b32  	%r130, %r129, %r52;
	setp.eq.s32 	%p21, %r146, 0;
	sub.f32 	%f72, %f71, %f70;
	setp.eq.s32 	%p32, %r160, 0;
	sub.f32 	%f130, %f71, %f128;
	setp.eq.s32 	%p43, %r177, 0;
	sub.f32 	%f189, %f71, %f187;
	setp.eq.s32 	%p54, %r191, 0;
	sub.f32 	%f247, %f71, %f245;
	setp.eq.s32 	%p65, %r208, 0;
	sub.f32 	%f306, %f71, %f304;
	setp.eq.s32 	%p76, %r222, 0;
	sub.f32 	%f364, %f71, %f362;
	selp.f32 	%f421, %f419, %f420, %p86;
	and.b32  	%r239, %r237, 2;
	fma.rn.f32 	%f475, %f473, %f469, 0fC09DE9E6;
	fma.rn.f32 	%f476, %f472, %f474, 0f00000000;
	and.b32  	%r252, %r251, 1;
	or.b32  	%r131, %r130, %r53;
	selp.f32 	%f73, %f70, %f72, %p21;
	selp.f32 	%f131, %f128, %f130, %p32;
	selp.f32 	%f190, %f187, %f189, %p43;
	selp.f32 	%f248, %f245, %f247, %p54;
	selp.f32 	%f307, %f304, %f306, %p65;
	selp.f32 	%f365, %f362, %f364, %p76;
	setp.eq.s32 	%p87, %r239, 0;
	sub.f32 	%f423, %f71, %f421;
	fma.rn.f32 	%f477, %f475, %f469, 0f3F800000;
	fma.rn.f32 	%f478, %f468, 0f40490FDB, %f476;
	setp.eq.b32 	%p97, %r252, 1;
	shr.u32 	%r132, %r131, 1;
	mul.f32 	%f43, %f73, %f73;
	mul.f32 	%f5, %f131, %f131;
	mul.f32 	%f10, %f190, %f190;
	mul.f32 	%f16, %f248, %f248;
	mul.f32 	%f21, %f307, %f307;
	mul.f32 	%f27, %f365, %f365;
	selp.f32 	%f424, %f421, %f423, %p87;
	selp.f32 	%f479, %f477, %f478, %p97;
	and.b32  	%r253, %r251, 2;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd43, %r132, 4;
	mul.f32 	%f102, %f713, %f43;
	mov.f32 	%f103, 0f42800000;
	mul.f32 	%f160, %f714, %f5;
	mul.f32 	%f219, %f715, %f10;
	mul.f32 	%f277, %f716, %f16;
	mul.f32 	%f336, %f717, %f21;
	mul.f32 	%f394, %f718, %f27;
	mul.f32 	%f32, %f424, %f424;
	setp.eq.s32 	%p98, %r253, 0;
	sub.f32 	%f481, %f71, %f479;
	add.s64 	%rd44, %rd1, %rd43;
	div.approx.f32 	%f3, %f102, %f103;
	div.approx.f32 	%f162, %f160, %f103;
	div.approx.f32 	%f14, %f219, %f103;
	div.approx.f32 	%f279, %f277, %f103;
	div.approx.f32 	%f25, %f336, %f103;
	div.approx.f32 	%f396, %f394, %f103;
	mul.f32 	%f453, %f719, %f32;
	selp.f32 	%f482, %f479, %f481, %p98;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	and.b32  	%r48, %r4, 16;
	ld.global.u32 	%r55, [%rd44];
	shr.u32 	%r56, %r4, 1;
	shr.u32 	%r60, %r4, 3;
	mov.b32 	%r169, %f162;
	mov.b32 	%r168, %f3;
	mov.b32 	%r200, %f279;
	mov.b32 	%r199, %f14;
	mov.b32 	%r231, %f396;
	mov.b32 	%r230, %f25;
	div.approx.f32 	%f36, %f453, %f103;
	mul.f32 	%f38, %f482, %f482;
	// begin inline asm
	cvt.rn.f16x2.f32 %r167, %r169, %r168;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r198, %r200, %r199;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r229, %r231, %r230;
	// end inline asm
	mul.f32 	%f510, %f720, %f38;
	div.approx.f32 	%f512, %f510, %f103;
	mov.b32 	%r262, %f512;
	mov.b32 	%r261, %f36;
	// begin inline asm
	cvt.rn.f16x2.f32 %r260, %r262, %r261;
	// end inline asm
	mul.lo.s32 	%r299, %r61, 63;
	and.b32  	%r300, %r299, 127;
	cvt.rn.f32.s32 	%f513, %r300;
	div.approx.f32 	%f514, %f513, %f103;
	add.f32 	%f515, %f514, %f514;
	mov.b32 	%r301, %f515;
	and.b32  	%r302, %r301, -2147483648;
	or.b32  	%r303, %r302, 1056964608;
	mov.b32 	%f516, %r303;
	add.f32 	%f517, %f515, %f516;
	cvt.rzi.f32.f32 	%f518, %f517;
	abs.f32 	%f519, %f515;
	setp.gt.f32 	%p105, %f519, 0f4B000000;
	selp.f32 	%f520, %f515, %f518, %p105;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p106, %f519, 0f3F000000;
	selp.f32 	%f522, %f521, %f520, %p106;
	cvt.rzi.s32.f32 	%r304, %f522;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f514;
	mul.f32 	%f524, %f523, %f523;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	and.b32  	%r305, %r304, 1;
	setp.eq.b32 	%p107, %r305, 1;
	selp.f32 	%f534, %f532, %f533, %p107;
	selp.f32 	%f535, %f533, %f532, %p107;
	and.b32  	%r306, %r304, 2;
	setp.eq.s32 	%p108, %r306, 0;
	neg.f32 	%f536, %f534;
	selp.f32 	%f537, %f534, %f536, %p108;
	add.s32 	%r307, %r304, 1;
	and.b32  	%r308, %r307, 2;
	setp.eq.s32 	%p109, %r308, 0;
	sub.f32 	%f539, %f71, %f535;
	selp.f32 	%f540, %f535, %f539, %p109;
	cvt.rzi.f32.f32 	%f541, %f514;
	setp.eq.f32 	%p110, %f541, %f514;
	mul.f32 	%f542, %f514, 0f00000000;
	selp.f32 	%f543, %f542, %f537, %p110;
	abs.f32 	%f544, %f514;
	setp.gt.f32 	%p111, %f544, 0f4B800000;
	add.f32 	%f545, %f543, 0f3F800000;
	selp.f32 	%f546, %f545, %f540, %p111;
	add.s32 	%r309, %r299, 96;
	and.b32  	%r310, %r309, 127;
	cvt.rn.f32.s32 	%f547, %r310;
	div.approx.f32 	%f548, %f547, %f103;
	add.f32 	%f549, %f548, %f548;
	mov.b32 	%r311, %f549;
	and.b32  	%r312, %r311, -2147483648;
	or.b32  	%r313, %r312, 1056964608;
	mov.b32 	%f550, %r313;
	add.f32 	%f551, %f549, %f550;
	cvt.rzi.f32.f32 	%f552, %f551;
	abs.f32 	%f553, %f549;
	setp.gt.f32 	%p112, %f553, 0f4B000000;
	selp.f32 	%f554, %f549, %f552, %p112;
	cvt.rzi.f32.f32 	%f555, %f549;
	setp.lt.f32 	%p113, %f553, 0f3F000000;
	selp.f32 	%f556, %f555, %f554, %p113;
	cvt.rzi.s32.f32 	%r314, %f556;
	fma.rn.f32 	%f557, %f556, 0fBF000000, %f548;
	mul.f32 	%f558, %f557, %f557;
	fma.rn.f32 	%f559, %f558, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f560, %f558, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f561, %f559, %f558, 0fC0A55DF6;
	fma.rn.f32 	%f562, %f560, %f558, 0f4081E0CF;
	fma.rn.f32 	%f563, %f558, %f557, 0f00000000;
	fma.rn.f32 	%f564, %f562, %f558, 0fC09DE9E6;
	fma.rn.f32 	%f565, %f561, %f563, 0f00000000;
	fma.rn.f32 	%f566, %f564, %f558, 0f3F800000;
	fma.rn.f32 	%f567, %f557, 0f40490FDB, %f565;
	and.b32  	%r315, %r314, 1;
	setp.eq.b32 	%p114, %r315, 1;
	selp.f32 	%f568, %f566, %f567, %p114;
	selp.f32 	%f569, %f567, %f566, %p114;
	and.b32  	%r316, %r314, 2;
	setp.eq.s32 	%p115, %r316, 0;
	neg.f32 	%f570, %f568;
	selp.f32 	%f571, %f568, %f570, %p115;
	add.s32 	%r317, %r314, 1;
	and.b32  	%r318, %r317, 2;
	setp.eq.s32 	%p116, %r318, 0;
	sub.f32 	%f572, %f71, %f569;
	selp.f32 	%f573, %f569, %f572, %p116;
	cvt.rzi.f32.f32 	%f574, %f548;
	setp.eq.f32 	%p117, %f574, %f548;
	mul.f32 	%f575, %f548, 0f00000000;
	selp.f32 	%f576, %f575, %f571, %p117;
	abs.f32 	%f577, %f548;
	setp.gt.f32 	%p118, %f577, 0f4B800000;
	add.f32 	%f578, %f576, 0f3F800000;
	selp.f32 	%f579, %f578, %f573, %p118;
	mov.b32 	%r264, %f546;
	mov.b32 	%r265, %f579;
	// begin inline asm
	cvt.rn.f16x2.f32 %r263, %r265, %r264;
	// end inline asm
	mov.b32 	%r267, %f543;
	mov.b32 	%r268, %f576;
	// begin inline asm
	cvt.rn.f16x2.f32 %r266, %r268, %r267;
	// end inline asm
	and.b32  	%r319, %r60, 2;
	and.b32  	%r320, %r56, 4;
	or.b32  	%r321, %r57, %r319;
	or.b32  	%r322, %r321, %r320;
	and.b32  	%r323, %r49, 6;
	mul.lo.s32 	%r324, %r322, %r323;
	and.b32  	%r325, %r324, 14;
	cvt.rn.f32.s32 	%f580, %r325;
	mov.f32 	%f581, 0f41000000;
	div.approx.f32 	%f582, %f580, %f581;
	add.f32 	%f583, %f582, %f582;
	mov.b32 	%r326, %f583;
	and.b32  	%r327, %r326, -2147483648;
	or.b32  	%r328, %r327, 1056964608;
	mov.b32 	%f584, %r328;
	add.f32 	%f585, %f583, %f584;
	cvt.rzi.f32.f32 	%f586, %f585;
	abs.f32 	%f587, %f583;
	setp.gt.f32 	%p119, %f587, 0f4B000000;
	selp.f32 	%f588, %f583, %f586, %p119;
	cvt.rzi.f32.f32 	%f589, %f583;
	setp.lt.f32 	%p120, %f587, 0f3F000000;
	selp.f32 	%f590, %f589, %f588, %p120;
	cvt.rzi.s32.f32 	%r329, %f590;
	fma.rn.f32 	%f591, %f590, 0fBF000000, %f582;
	mul.f32 	%f592, %f591, %f591;
	fma.rn.f32 	%f593, %f592, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f594, %f592, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f595, %f593, %f592, 0fC0A55DF6;
	fma.rn.f32 	%f596, %f594, %f592, 0f4081E0CF;
	fma.rn.f32 	%f597, %f592, %f591, 0f00000000;
	fma.rn.f32 	%f598, %f596, %f592, 0fC09DE9E6;
	fma.rn.f32 	%f599, %f595, %f597, 0f00000000;
	fma.rn.f32 	%f600, %f598, %f592, 0f3F800000;
	fma.rn.f32 	%f601, %f591, 0f40490FDB, %f599;
	and.b32  	%r330, %r329, 1;
	setp.eq.b32 	%p121, %r330, 1;
	selp.f32 	%f602, %f600, %f601, %p121;
	selp.f32 	%f603, %f601, %f600, %p121;
	and.b32  	%r331, %r329, 2;
	setp.eq.s32 	%p122, %r331, 0;
	neg.f32 	%f604, %f602;
	selp.f32 	%f605, %f602, %f604, %p122;
	add.s32 	%r332, %r329, 1;
	and.b32  	%r333, %r332, 2;
	setp.eq.s32 	%p123, %r333, 0;
	sub.f32 	%f606, %f71, %f603;
	selp.f32 	%f607, %f603, %f606, %p123;
	cvt.rzi.f32.f32 	%f608, %f582;
	setp.eq.f32 	%p124, %f608, %f582;
	mul.f32 	%f609, %f582, 0f00000000;
	selp.f32 	%f610, %f609, %f605, %p124;
	abs.f32 	%f611, %f582;
	setp.gt.f32 	%p125, %f611, 0f4B800000;
	add.f32 	%f612, %f610, 0f3F800000;
	selp.f32 	%f613, %f612, %f607, %p125;
	or.b32  	%r334, %r49, 8;
	mul.lo.s32 	%r335, %r322, %r334;
	and.b32  	%r336, %r335, 14;
	cvt.rn.f32.s32 	%f614, %r336;
	div.approx.f32 	%f615, %f614, %f581;
	add.f32 	%f616, %f615, %f615;
	mov.b32 	%r337, %f616;
	and.b32  	%r338, %r337, -2147483648;
	or.b32  	%r339, %r338, 1056964608;
	mov.b32 	%f617, %r339;
	add.f32 	%f618, %f616, %f617;
	cvt.rzi.f32.f32 	%f619, %f618;
	abs.f32 	%f620, %f616;
	setp.gt.f32 	%p126, %f620, 0f4B000000;
	selp.f32 	%f621, %f616, %f619, %p126;
	cvt.rzi.f32.f32 	%f622, %f616;
	setp.lt.f32 	%p127, %f620, 0f3F000000;
	selp.f32 	%f623, %f622, %f621, %p127;
	cvt.rzi.s32.f32 	%r340, %f623;
	fma.rn.f32 	%f624, %f623, 0fBF000000, %f615;
	mul.f32 	%f625, %f624, %f624;
	fma.rn.f32 	%f626, %f625, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f627, %f625, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f628, %f626, %f625, 0fC0A55DF6;
	fma.rn.f32 	%f629, %f627, %f625, 0f4081E0CF;
	fma.rn.f32 	%f630, %f625, %f624, 0f00000000;
	fma.rn.f32 	%f631, %f629, %f625, 0fC09DE9E6;
	fma.rn.f32 	%f632, %f628, %f630, 0f00000000;
	fma.rn.f32 	%f633, %f631, %f625, 0f3F800000;
	fma.rn.f32 	%f634, %f624, 0f40490FDB, %f632;
	and.b32  	%r341, %r340, 1;
	setp.eq.b32 	%p128, %r341, 1;
	selp.f32 	%f635, %f633, %f634, %p128;
	selp.f32 	%f636, %f634, %f633, %p128;
	and.b32  	%r342, %r340, 2;
	setp.eq.s32 	%p129, %r342, 0;
	neg.f32 	%f637, %f635;
	selp.f32 	%f638, %f635, %f637, %p129;
	add.s32 	%r343, %r340, 1;
	and.b32  	%r344, %r343, 2;
	setp.eq.s32 	%p130, %r344, 0;
	sub.f32 	%f639, %f71, %f636;
	selp.f32 	%f640, %f636, %f639, %p130;
	cvt.rzi.f32.f32 	%f641, %f615;
	setp.eq.f32 	%p131, %f641, %f615;
	mul.f32 	%f642, %f615, 0f00000000;
	selp.f32 	%f643, %f642, %f638, %p131;
	abs.f32 	%f644, %f615;
	setp.gt.f32 	%p132, %f644, 0f4B800000;
	add.f32 	%f645, %f643, 0f3F800000;
	selp.f32 	%f646, %f645, %f640, %p132;
	mov.b32 	%r270, %f613;
	mov.b32 	%r271, %f646;
	// begin inline asm
	cvt.rn.f16x2.f32 %r269, %r271, %r270;
	// end inline asm
	mov.b32 	%r273, %f610;
	mov.b32 	%r274, %f643;
	// begin inline asm
	cvt.rn.f16x2.f32 %r272, %r274, %r273;
	// end inline asm
	xor.b32  	%r294, %r273, -2147483648;
	xor.b32  	%r295, %r274, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r275, %r295, %r294;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r278, %r271, %r270;
	// end inline asm
	cvt.rn.f32.s32 	%f647, %r324;
	div.approx.f32 	%f648, %f647, %f103;
	add.f32 	%f649, %f648, %f648;
	mov.b32 	%r345, %f649;
	and.b32  	%r346, %r345, -2147483648;
	or.b32  	%r347, %r346, 1056964608;
	mov.b32 	%f650, %r347;
	add.f32 	%f651, %f649, %f650;
	cvt.rzi.f32.f32 	%f652, %f651;
	abs.f32 	%f653, %f649;
	setp.gt.f32 	%p133, %f653, 0f4B000000;
	selp.f32 	%f654, %f649, %f652, %p133;
	cvt.rzi.f32.f32 	%f655, %f649;
	setp.lt.f32 	%p134, %f653, 0f3F000000;
	selp.f32 	%f656, %f655, %f654, %p134;
	cvt.rzi.s32.f32 	%r348, %f656;
	fma.rn.f32 	%f657, %f656, 0fBF000000, %f648;
	mul.f32 	%f658, %f657, %f657;
	fma.rn.f32 	%f659, %f658, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f660, %f658, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f661, %f659, %f658, 0fC0A55DF6;
	fma.rn.f32 	%f662, %f660, %f658, 0f4081E0CF;
	fma.rn.f32 	%f663, %f658, %f657, 0f00000000;
	fma.rn.f32 	%f664, %f662, %f658, 0fC09DE9E6;
	fma.rn.f32 	%f665, %f661, %f663, 0f00000000;
	fma.rn.f32 	%f666, %f664, %f658, 0f3F800000;
	fma.rn.f32 	%f667, %f657, 0f40490FDB, %f665;
	and.b32  	%r349, %r348, 1;
	setp.eq.b32 	%p135, %r349, 1;
	selp.f32 	%f668, %f666, %f667, %p135;
	selp.f32 	%f669, %f667, %f666, %p135;
	and.b32  	%r350, %r348, 2;
	setp.eq.s32 	%p136, %r350, 0;
	neg.f32 	%f670, %f668;
	selp.f32 	%f671, %f668, %f670, %p136;
	add.s32 	%r351, %r348, 1;
	and.b32  	%r352, %r351, 2;
	setp.eq.s32 	%p137, %r352, 0;
	sub.f32 	%f672, %f71, %f669;
	selp.f32 	%f673, %f669, %f672, %p137;
	cvt.rzi.f32.f32 	%f674, %f648;
	setp.eq.f32 	%p138, %f674, %f648;
	mul.f32 	%f675, %f648, 0f00000000;
	selp.f32 	%f676, %f675, %f671, %p138;
	mov.b32 	%r353, %f676;
	abs.f32 	%f677, %f648;
	setp.gt.f32 	%p139, %f677, 0f4B800000;
	add.f32 	%f678, %f676, 0f3F800000;
	selp.f32 	%f679, %f678, %f673, %p139;
	shl.b32 	%r354, %r322, 3;
	add.s32 	%r355, %r324, %r354;
	cvt.rn.f32.s32 	%f680, %r355;
	div.approx.f32 	%f681, %f680, %f103;
	add.f32 	%f682, %f681, %f681;
	mov.b32 	%r356, %f682;
	and.b32  	%r357, %r356, -2147483648;
	or.b32  	%r358, %r357, 1056964608;
	mov.b32 	%f683, %r358;
	add.f32 	%f684, %f682, %f683;
	cvt.rzi.f32.f32 	%f685, %f684;
	abs.f32 	%f686, %f682;
	setp.gt.f32 	%p140, %f686, 0f4B000000;
	selp.f32 	%f687, %f682, %f685, %p140;
	cvt.rzi.f32.f32 	%f688, %f682;
	setp.lt.f32 	%p141, %f686, 0f3F000000;
	selp.f32 	%f689, %f688, %f687, %p141;
	cvt.rzi.s32.f32 	%r359, %f689;
	fma.rn.f32 	%f690, %f689, 0fBF000000, %f681;
	mul.f32 	%f691, %f690, %f690;
	fma.rn.f32 	%f692, %f691, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f693, %f691, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f694, %f692, %f691, 0fC0A55DF6;
	fma.rn.f32 	%f695, %f693, %f691, 0f4081E0CF;
	fma.rn.f32 	%f696, %f691, %f690, 0f00000000;
	fma.rn.f32 	%f697, %f695, %f691, 0fC09DE9E6;
	fma.rn.f32 	%f698, %f694, %f696, 0f00000000;
	fma.rn.f32 	%f699, %f697, %f691, 0f3F800000;
	fma.rn.f32 	%f700, %f690, 0f40490FDB, %f698;
	and.b32  	%r360, %r359, 1;
	setp.eq.b32 	%p142, %r360, 1;
	selp.f32 	%f701, %f699, %f700, %p142;
	selp.f32 	%f702, %f700, %f699, %p142;
	and.b32  	%r361, %r359, 2;
	setp.eq.s32 	%p143, %r361, 0;
	neg.f32 	%f703, %f701;
	selp.f32 	%f704, %f701, %f703, %p143;
	add.s32 	%r362, %r359, 1;
	and.b32  	%r363, %r362, 2;
	setp.eq.s32 	%p144, %r363, 0;
	sub.f32 	%f705, %f71, %f702;
	selp.f32 	%f706, %f702, %f705, %p144;
	cvt.rzi.f32.f32 	%f707, %f681;
	setp.eq.f32 	%p145, %f707, %f681;
	mul.f32 	%f708, %f681, 0f00000000;
	selp.f32 	%f709, %f708, %f704, %p145;
	mov.b32 	%r364, %f709;
	abs.f32 	%f710, %f681;
	setp.gt.f32 	%p146, %f710, 0f4B800000;
	add.f32 	%f711, %f709, 0f3F800000;
	selp.f32 	%f712, %f711, %f706, %p146;
	mov.b32 	%r283, %f712;
	mov.b32 	%r282, %f679;
	// begin inline asm
	cvt.rn.f16x2.f32 %r281, %r283, %r282;
	// end inline asm
	xor.b32  	%r286, %r364, -2147483648;
	xor.b32  	%r285, %r353, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r284, %r286, %r285;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r287, %r271, %r270;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r290, %r274, %r273;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r293, %r295, %r294;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r296, %r271, %r270;
	// end inline asm
	shl.b32 	%r366, %r113, 13;
	shl.b32 	%r367, %r117, 9;
	shl.b32 	%r368, %r1, 5;
	and.b32  	%r369, %r51, 28;
	and.b32  	%r370, %r368, 224;
	and.b32  	%r371, %r368, 256;
	or.b32  	%r372, %r48, %r2;
	or.b32  	%r21, %r372, %r52;
	and.b32  	%r373, %r368, 7936;
	or.b32  	%r374, %r373, %r369;
	or.b32  	%r375, %r374, %r370;
	or.b32  	%r376, %r375, %r366;
	add.s32 	%r22, %r376, %r367;
	and.b32  	%r23, %r4, 8;
	shl.b32 	%r377, %r4, 4;
	or.b32  	%r378, %r23, %r377;
	shr.u32 	%r379, %r378, 2;
	and.b32  	%r380, %r379, 30;
	or.b32  	%r24, %r60, %r135;
	and.b32  	%r25, %r4, 4;
	shr.u32 	%r26, %r2, 1;
	and.b32  	%r27, %r3, 32;
	or.b32  	%r382, %r27, %r26;
	or.b32  	%r28, %r382, 8;
	or.b32  	%r29, %r382, 16;
	or.b32  	%r30, %r382, 24;
	shl.b32 	%r383, %r1, 2;
	and.b32  	%r384, %r383, 960;
	or.b32  	%r385, %r54, %r384;
	or.b32  	%r386, %r385, %r52;
	or.b32  	%r387, %r386, %r53;
	or.b32  	%r388, %r387, %r50;
	bfe.u32 	%r389, %r388, 1, 5;
	mul.lo.s32 	%r390, %r389, 65;
	add.s32 	%r391, %r382, %r390;
	add.s32 	%r392, %r28, %r390;
	add.s32 	%r393, %r29, %r390;
	add.s32 	%r394, %r30, %r390;
	shl.b32 	%r395, %r2, 1;
	or.b32  	%r396, %r395, %r58;
	mul.lo.s32 	%r397, %r396, 65;
	add.s32 	%r398, %r380, %r397;
	mul.wide.u32 	%rd45, %r398, 4;
	mov.u64 	%rd46, shmem;
	add.s64 	%rd5, %rd46, %rd45;
	cvt.u64.u32 	%rd47, %r380;
	cvt.u64.u32 	%rd48, %r397;
	add.s64 	%rd49, %rd48, %rd47;
	shl.b64 	%rd50, %rd49, 2;
	add.s64 	%rd6, %rd46, %rd50;
	shl.b32 	%r399, %r115, 15;
	add.s32 	%r400, %r399, -98304;
	or.b32  	%r401, %r370, %r369;
	shl.b32 	%r402, %r2, 11;
	shl.b32 	%r403, %r4, 6;
	and.b32  	%r404, %r403, 1536;
	or.b32  	%r405, %r404, %r402;
	or.b32  	%r406, %r401, %r405;
	or.b32  	%r31, %r406, %r371;
	cvt.s64.s32 	%rd7, %r400;
	bfe.s32 	%r407, %r2, 1, 1;
	and.b32  	%r408, %r2, 2;
	setp.eq.s32 	%p148, %r408, 0;
	and.b32  	%r409, %r407, 520;
	and.b32  	%r410, %r2, 1;
	neg.s32 	%r411, %r410;
	setp.eq.b32 	%p149, %r410, 1;
	and.b32  	%r412, %r411, 1040;
	shr.u32 	%r413, %r2, 3;
	mul.lo.s32 	%r414, %r413, 130;
	mul.lo.s32 	%r415, %r58, 65;
	bfe.s32 	%r416, %r2, 2, 1;
	and.b32  	%r417, %r2, 4;
	setp.eq.s32 	%p150, %r417, 0;
	and.b32  	%r418, %r416, 260;
	add.s32 	%r419, %r412, %r380;
	add.s32 	%r420, %r419, %r409;
	add.s32 	%r421, %r420, %r414;
	add.s32 	%r422, %r421, %r415;
	add.s32 	%r423, %r422, %r418;
	mul.wide.u32 	%rd51, %r423, 4;
	add.s64 	%rd8, %rd46, %rd51;
	selp.b64 	%rd52, 0, 260, %p150;
	cvt.u64.u32 	%rd53, %r415;
	cvt.u64.u32 	%rd54, %r414;
	selp.b64 	%rd55, 0, 520, %p148;
	selp.b64 	%rd56, 1040, 0, %p149;
	add.s64 	%rd57, %rd47, %rd56;
	add.s64 	%rd58, %rd57, %rd55;
	add.s64 	%rd59, %rd58, %rd54;
	add.s64 	%rd60, %rd59, %rd53;
	add.s64 	%rd61, %rd60, %rd52;
	shl.b64 	%rd62, %rd61, 2;
	add.s64 	%rd9, %rd46, %rd62;
	add.s32 	%r424, %r423, 2113;
	mul.wide.u32 	%rd63, %r424, 4;
	add.s64 	%rd10, %rd46, %rd63;
	add.s32 	%r425, %r423, 2082;
	mul.wide.u32 	%rd64, %r425, 4;
	add.s64 	%rd11, %rd46, %rd64;
	add.s32 	%r426, %r423, 2114;
	mul.wide.u32 	%rd65, %r426, 4;
	add.s64 	%rd12, %rd46, %rd65;
	add.s32 	%r427, %r423, 4194;
	mul.wide.u32 	%rd66, %r427, 4;
	add.s64 	%rd13, %rd46, %rd66;
	add.s32 	%r428, %r423, 4163;
	mul.wide.u32 	%rd67, %r428, 4;
	add.s64 	%rd14, %rd46, %rd67;
	add.s32 	%r429, %r423, 4195;
	mul.wide.u32 	%rd68, %r429, 4;
	add.s64 	%rd15, %rd46, %rd68;
	add.s32 	%r430, %r423, 6275;
	mul.wide.u32 	%rd69, %r430, 4;
	add.s64 	%rd16, %rd46, %rd69;
	add.s32 	%r431, %r423, 6244;
	mul.wide.u32 	%rd70, %r431, 4;
	add.s64 	%rd17, %rd46, %rd70;
	add.s32 	%r432, %r423, 6276;
	mul.wide.u32 	%rd71, %r432, 4;
	add.s64 	%rd18, %rd46, %rd71;
	mul.wide.u32 	%rd72, %r394, 4;
	add.s64 	%rd19, %rd46, %rd72;
	mul.wide.u32 	%rd73, %r393, 4;
	add.s64 	%rd20, %rd46, %rd73;
	mul.wide.u32 	%rd74, %r392, 4;
	add.s64 	%rd21, %rd46, %rd74;
	mul.wide.u32 	%rd75, %r391, 4;
	add.s64 	%rd22, %rd46, %rd75;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r7946, %r7918;
	mov.u32 	%r7945, %r7918;
	mov.u32 	%r7944, %r7918;
	mov.u32 	%r7943, %r7918;
	mov.u32 	%r7942, %r7918;
	mov.u32 	%r7941, %r7918;
	mov.u32 	%r7940, %r7918;
	mov.u32 	%r7939, %r7918;
	mov.u32 	%r7938, %r7918;
	mov.u32 	%r7937, %r7918;
	mov.u32 	%r7936, %r7918;
	mov.u32 	%r7935, %r7918;
	mov.u32 	%r44, %r7918;
	bra.uni 	$L__BB0_29;
$L__BB0_37:                             // %pass16978
                                        //   in Loop: Header=BB0_29 Depth=1
	or.b32  	%r7912, %r7919, %r31;
	or.b32  	%r7913, %r7912, 98304;
	cvt.s64.s32 	%rd129, %r7913;
	add.s64 	%rd130, %rd129, %rd7;
	shr.u64 	%rd131, %rd130, 39;
	add.s64 	%rd132, %rd130, %rd131;
	shr.s64 	%rd133, %rd132, 25;
	setp.lt.s64 	%p179, %rd130, 0;
	and.b64  	%rd134, %rd132, -33554432;
	setp.ne.s64 	%p180, %rd134, %rd130;
	and.pred  	%p181, %p179, %p180;
	selp.u64 	%rd135, 1, 0, %p181;
	sub.s64 	%rd136, %rd135, %rd133;
	shl.b64 	%rd137, %rd136, 25;
	add.s64 	%rd138, %rd137, %rd130;
	shl.b64 	%rd139, %rd138, 2;
	add.s64 	%rd140, %rd3, %rd139;
	st.global.v4.u32 	[%rd140], {%r108, %r110, %r109, %r111};
	setp.ne.s32 	%p182, %r44, 65280;
	add.s32 	%r44, %r44, 256;
	add.s32 	%r7914, %r44, %r113;
	setp.lt.s32 	%p183, %r7914, %r114;
	and.pred  	%p184, %p182, %p183;
	@%p184 bra 	$L__BB0_29;
	bra.uni 	$L__BB0_38;
$L__BB0_29:                             // %L1438
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_30 Depth 2
	setp.eq.s32 	%p151, %r23, 0;
	and.b32  	%r45, %r44, 65280;
	or.b32  	%r498, %r21, %r45;
	shl.b32 	%r499, %r498, 13;
	add.s32 	%r500, %r22, %r499;
	shr.s32 	%r501, %r500, 31;
	shr.u32 	%r502, %r501, 3;
	add.s32 	%r503, %r500, %r502;
	shr.s32 	%r504, %r503, 29;
	setp.lt.s32 	%p152, %r500, 0;
	and.b32  	%r505, %r503, -536870912;
	setp.ne.s32 	%p153, %r505, %r500;
	and.pred  	%p154, %p152, %p153;
	selp.u32 	%r506, 1, 0, %p154;
	sub.s32 	%r507, %r506, %r504;
	shl.b32 	%r508, %r507, 29;
	or.b32  	%r509, %r500, 1;
	add.s32 	%r510, %r509, %r508;
	mul.wide.s32 	%rd76, %r510, 4;
	add.s64 	%rd77, %rd2, %rd76;
	ld.global.v4.u32 	{%r511, %r512, %r513, %r514}, [%rd77+-4];
	or.b32  	%r515, %r499, 524288;
	add.s32 	%r516, %r22, %r515;
	shr.s32 	%r517, %r516, 31;
	shr.u32 	%r518, %r517, 3;
	add.s32 	%r519, %r516, %r518;
	shr.s32 	%r520, %r519, 29;
	setp.lt.s32 	%p155, %r516, 0;
	and.b32  	%r521, %r519, -536870912;
	setp.ne.s32 	%p156, %r521, %r516;
	and.pred  	%p157, %p155, %p156;
	selp.u32 	%r522, 1, 0, %p157;
	sub.s32 	%r523, %r522, %r520;
	shl.b32 	%r524, %r523, 29;
	or.b32  	%r525, %r516, 1;
	add.s32 	%r526, %r525, %r524;
	mul.wide.s32 	%rd78, %r526, 4;
	add.s64 	%rd79, %rd2, %rd78;
	ld.global.v4.u32 	{%r527, %r528, %r529, %r530}, [%rd79+-4];
	or.b32  	%r531, %r499, 1048576;
	add.s32 	%r532, %r22, %r531;
	shr.s32 	%r533, %r532, 31;
	shr.u32 	%r534, %r533, 3;
	add.s32 	%r535, %r532, %r534;
	shr.s32 	%r536, %r535, 29;
	setp.lt.s32 	%p158, %r532, 0;
	and.b32  	%r537, %r535, -536870912;
	setp.ne.s32 	%p159, %r537, %r532;
	and.pred  	%p160, %p158, %p159;
	selp.u32 	%r538, 1, 0, %p160;
	sub.s32 	%r539, %r538, %r536;
	shl.b32 	%r540, %r539, 29;
	or.b32  	%r541, %r532, 1;
	add.s32 	%r542, %r541, %r540;
	mul.wide.s32 	%rd80, %r542, 4;
	add.s64 	%rd81, %rd2, %rd80;
	ld.global.v4.u32 	{%r543, %r544, %r545, %r546}, [%rd81+-4];
	or.b32  	%r547, %r499, 1572864;
	add.s32 	%r548, %r22, %r547;
	shr.s32 	%r549, %r548, 31;
	shr.u32 	%r550, %r549, 3;
	add.s32 	%r551, %r548, %r550;
	shr.s32 	%r552, %r551, 29;
	setp.lt.s32 	%p161, %r548, 0;
	and.b32  	%r553, %r551, -536870912;
	setp.ne.s32 	%p162, %r553, %r548;
	and.pred  	%p163, %p161, %p162;
	selp.u32 	%r554, 1, 0, %p163;
	sub.s32 	%r555, %r554, %r552;
	shl.b32 	%r556, %r555, 29;
	or.b32  	%r557, %r548, 1;
	add.s32 	%r558, %r557, %r556;
	mul.wide.s32 	%rd82, %r558, 4;
	add.s64 	%rd83, %rd2, %rd82;
	ld.global.v4.u32 	{%r559, %r560, %r561, %r562}, [%rd83+-4];
	selp.b32 	%r563, %r513, %r511, %p151;
	shfl.sync.bfly.b32	%r564, %r563, 8, 31, -1;
	selp.b32 	%r434, %r511, %r564, %p151;
	selp.b32 	%r435, %r564, %r513, %p151;
	selp.b32 	%r565, %r514, %r512, %p151;
	shfl.sync.bfly.b32	%r566, %r565, 8, 31, -1;
	selp.b32 	%r442, %r512, %r566, %p151;
	selp.b32 	%r443, %r566, %r514, %p151;
	selp.b32 	%r567, %r529, %r527, %p151;
	shfl.sync.bfly.b32	%r568, %r567, 8, 31, -1;
	selp.b32 	%r450, %r527, %r568, %p151;
	selp.b32 	%r451, %r568, %r529, %p151;
	selp.b32 	%r569, %r530, %r528, %p151;
	shfl.sync.bfly.b32	%r570, %r569, 8, 31, -1;
	selp.b32 	%r458, %r528, %r570, %p151;
	selp.b32 	%r459, %r570, %r530, %p151;
	selp.b32 	%r571, %r545, %r543, %p151;
	shfl.sync.bfly.b32	%r572, %r571, 8, 31, -1;
	selp.b32 	%r466, %r543, %r572, %p151;
	selp.b32 	%r467, %r572, %r545, %p151;
	selp.b32 	%r573, %r546, %r544, %p151;
	shfl.sync.bfly.b32	%r574, %r573, 8, 31, -1;
	selp.b32 	%r474, %r544, %r574, %p151;
	selp.b32 	%r475, %r574, %r546, %p151;
	selp.b32 	%r575, %r561, %r559, %p151;
	shfl.sync.bfly.b32	%r576, %r575, 8, 31, -1;
	selp.b32 	%r482, %r559, %r576, %p151;
	selp.b32 	%r483, %r576, %r561, %p151;
	selp.b32 	%r577, %r562, %r560, %p151;
	shfl.sync.bfly.b32	%r578, %r577, 8, 31, -1;
	selp.b32 	%r490, %r560, %r578, %p151;
	selp.b32 	%r491, %r578, %r562, %p151;
	mov.u32 	%r492, 21520;
	// begin inline asm
	prmt.b32 %r433, %r434, %r435, %r492;
	// end inline asm
	mov.u32 	%r496, 30258;
	// begin inline asm
	prmt.b32 %r437, %r434, %r435, %r496;
	// end inline asm
	// begin inline asm
	prmt.b32 %r441, %r442, %r443, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r445, %r442, %r443, %r496;
	// end inline asm
	// begin inline asm
	prmt.b32 %r449, %r450, %r451, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r453, %r450, %r451, %r496;
	// end inline asm
	// begin inline asm
	prmt.b32 %r457, %r458, %r459, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r461, %r458, %r459, %r496;
	// end inline asm
	// begin inline asm
	prmt.b32 %r465, %r466, %r467, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r469, %r466, %r467, %r496;
	// end inline asm
	// begin inline asm
	prmt.b32 %r473, %r474, %r475, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r477, %r474, %r475, %r496;
	// end inline asm
	// begin inline asm
	prmt.b32 %r481, %r482, %r483, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r485, %r482, %r483, %r496;
	// end inline asm
	// begin inline asm
	prmt.b32 %r489, %r490, %r491, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r493, %r490, %r491, %r496;
	// end inline asm
	st.shared.u32 	[%rd8], %r433;
	st.shared.u32 	[%rd9+128], %r437;
	st.shared.u32 	[%rd9+4], %r441;
	st.shared.u32 	[%rd9+132], %r445;
	st.shared.u32 	[%rd8+8324], %r449;
	st.shared.u32 	[%rd10], %r453;
	st.shared.u32 	[%rd11], %r457;
	st.shared.u32 	[%rd12], %r461;
	st.shared.u32 	[%rd8+16648], %r465;
	st.shared.u32 	[%rd13], %r469;
	st.shared.u32 	[%rd14], %r473;
	st.shared.u32 	[%rd15], %r477;
	st.shared.u32 	[%rd8+24972], %r481;
	st.shared.u32 	[%rd16], %r485;
	st.shared.u32 	[%rd17], %r489;
	st.shared.u32 	[%rd18], %r493;
	bar.sync 	0;
	or.b32  	%r579, %r44, %r24;
	or.b32  	%r46, %r579, %r25;
	shr.u32 	%r7933, %r46, 6;
	mov.u64 	%rd145, %rd22;
	mov.u64 	%rd146, %rd21;
	mov.u64 	%rd147, %rd20;
	mov.u64 	%rd148, %rd19;
	mov.u32 	%r7934, %r7918;
$L__BB0_30:                             // %pass5624
                                        //   Parent Loop BB0_29 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r7764, %r46, %r7934;
	bfe.s32 	%r7765, %r7764, 1, 1;
	and.b32  	%r7766, %r7765, 520;
	and.b32  	%r7767, %r7764, 1;
	neg.s32 	%r7768, %r7767;
	and.b32  	%r7769, %r7768, 1040;
	bfe.s32 	%r7770, %r7764, 3, 1;
	and.b32  	%r7771, %r7770, 130;
	bfe.s32 	%r7772, %r7764, 4, 1;
	and.b32  	%r7773, %r7772, 65;
	bfe.s32 	%r7774, %r7764, 2, 1;
	and.b32  	%r7775, %r7774, 260;
	and.b32  	%r7776, %r7933, 3;
	mul.lo.s32 	%r7777, %r7776, 2081;
	or.b32  	%r7778, %r7766, %r7769;
	or.b32  	%r7779, %r7778, %r26;
	or.b32  	%r7780, %r7771, %r27;
	or.b32  	%r7781, %r7780, %r7773;
	or.b32  	%r7782, %r7781, %r7775;
	add.s32 	%r7783, %r7782, %r7777;
	add.s32 	%r7784, %r7783, %r7779;
	mul.wide.u32 	%rd84, %r7784, 4;
	add.s64 	%rd86, %rd46, %rd84;
	ld.shared.u32 	%r7785, [%rd86];
	or.b32  	%r7786, %r28, %r7769;
	add.s32 	%r7787, %r7786, %r7766;
	add.s32 	%r7788, %r7787, %r7771;
	add.s32 	%r7789, %r7788, %r7773;
	add.s32 	%r7790, %r7789, %r7775;
	add.s32 	%r7791, %r7790, %r7777;
	mul.wide.u32 	%rd87, %r7791, 4;
	add.s64 	%rd88, %rd46, %rd87;
	ld.shared.u32 	%r7792, [%rd88];
	add.s32 	%r7793, %r29, %r7769;
	or.b32  	%r7794, %r7793, %r7766;
	add.s32 	%r7795, %r7794, %r7771;
	add.s32 	%r7796, %r7795, %r7773;
	add.s32 	%r7797, %r7796, %r7775;
	add.s32 	%r7798, %r7797, %r7777;
	mul.wide.u32 	%rd89, %r7798, 4;
	add.s64 	%rd90, %rd46, %rd89;
	ld.shared.u32 	%r7799, [%rd90];
	add.s32 	%r7800, %r30, %r7769;
	add.s32 	%r7801, %r7800, %r7766;
	add.s32 	%r7802, %r7801, %r7771;
	add.s32 	%r7803, %r7802, %r7773;
	add.s32 	%r7804, %r7803, %r7775;
	add.s32 	%r7805, %r7804, %r7777;
	mul.wide.u32 	%rd91, %r7805, 4;
	add.s64 	%rd92, %rd46, %rd91;
	ld.shared.u32 	%r7806, [%rd92];
	// begin inline asm
	mov.b32 %r585, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r596, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r584, %r7785, -2004318072;
	mov.u32 	%r583, 983055;
	// begin inline asm
	lop3.b32 %r582, %r583, %r584, %r585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r586, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r587, %r585, %r586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r590, %r582, %r587;
	// end inline asm
	mov.u32 	%r594, 15728880;
	// begin inline asm
	lop3.b32 %r593, %r594, %r584, %r596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r597, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r598, %r596, %r597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r601, %r593, %r598;
	// end inline asm
	shr.u32 	%r606, %r584, 8;
	// begin inline asm
	lop3.b32 %r604, %r583, %r606, %r585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r608, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r609, %r585, %r608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r612, %r604, %r609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r615, %r594, %r606, %r596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r619, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r620, %r596, %r619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r623, %r615, %r620;
	// end inline asm
	// begin inline asm
	mov.b32 %r631, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r642, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r630, %r7792, -2004318072;
	// begin inline asm
	lop3.b32 %r628, %r583, %r630, %r631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r632, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r633, %r631, %r632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r636, %r628, %r633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r639, %r594, %r630, %r642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r643, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r644, %r642, %r643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r647, %r639, %r644;
	// end inline asm
	shr.u32 	%r652, %r630, 8;
	// begin inline asm
	lop3.b32 %r650, %r583, %r652, %r631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r654, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r655, %r631, %r654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r658, %r650, %r655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r661, %r594, %r652, %r642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r665, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r666, %r642, %r665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r669, %r661, %r666;
	// end inline asm
	// begin inline asm
	mov.b32 %r677, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r688, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r676, %r7799, -2004318072;
	// begin inline asm
	lop3.b32 %r674, %r583, %r676, %r677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r678, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r679, %r677, %r678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r682, %r674, %r679;
	// end inline asm
	// begin inline asm
	lop3.b32 %r685, %r594, %r676, %r688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r689, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r690, %r688, %r689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r693, %r685, %r690;
	// end inline asm
	shr.u32 	%r698, %r676, 8;
	// begin inline asm
	lop3.b32 %r696, %r583, %r698, %r677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r700, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r701, %r677, %r700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r704, %r696, %r701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r707, %r594, %r698, %r688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r711, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r712, %r688, %r711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r715, %r707, %r712;
	// end inline asm
	// begin inline asm
	mov.b32 %r723, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r734, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r722, %r7806, -2004318072;
	// begin inline asm
	lop3.b32 %r720, %r583, %r722, %r723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r724, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r725, %r723, %r724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r728, %r720, %r725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r731, %r594, %r722, %r734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r735, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r736, %r734, %r735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r739, %r731, %r736;
	// end inline asm
	shr.u32 	%r744, %r722, 8;
	// begin inline asm
	lop3.b32 %r742, %r583, %r744, %r723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r746, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r747, %r723, %r746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r750, %r742, %r747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r753, %r594, %r744, %r734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r757, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r758, %r734, %r757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r761, %r753, %r758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r764, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r766, %r764, %r590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r769, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r771, %r769, %r601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r774, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r776, %r774, %r612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r779, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r781, %r779, %r623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r784, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r786, %r784, %r636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r789, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r791, %r789, %r647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r794, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r796, %r794, %r658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r799, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r801, %r799, %r669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r804, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r806, %r804, %r682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r809, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r811, %r809, %r693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r814, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r816, %r814, %r704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r819, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r821, %r819, %r715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r824, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r826, %r824, %r728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r829, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r831, %r829, %r739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r834, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r836, %r834, %r750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r839, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r841, %r839, %r761;
	// end inline asm
	// begin inline asm
	mov.b32 %r849, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r860, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r848, %r7946, -2004318072;
	// begin inline asm
	lop3.b32 %r846, %r583, %r848, %r849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r850, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r851, %r849, %r850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r854, %r846, %r851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r857, %r594, %r848, %r860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r861, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r862, %r860, %r861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r865, %r857, %r862;
	// end inline asm
	shr.u32 	%r870, %r848, 8;
	// begin inline asm
	lop3.b32 %r868, %r583, %r870, %r849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r872, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r873, %r849, %r872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r876, %r868, %r873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r879, %r594, %r870, %r860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r883, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r884, %r860, %r883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r887, %r879, %r884;
	// end inline asm
	// begin inline asm
	mov.b32 %r895, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r894, %r7945, -2004318072;
	// begin inline asm
	lop3.b32 %r892, %r583, %r894, %r895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r896, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r897, %r895, %r896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r900, %r892, %r897;
	// end inline asm
	// begin inline asm
	lop3.b32 %r903, %r594, %r894, %r906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r907, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r908, %r906, %r907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r911, %r903, %r908;
	// end inline asm
	shr.u32 	%r916, %r894, 8;
	// begin inline asm
	lop3.b32 %r914, %r583, %r916, %r895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r918, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r919, %r895, %r918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r922, %r914, %r919;
	// end inline asm
	// begin inline asm
	lop3.b32 %r925, %r594, %r916, %r906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r929, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r930, %r906, %r929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r933, %r925, %r930;
	// end inline asm
	// begin inline asm
	mov.b32 %r941, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r940, %r7944, -2004318072;
	// begin inline asm
	lop3.b32 %r938, %r583, %r940, %r941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r942, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r943, %r941, %r942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r946, %r938, %r943;
	// end inline asm
	// begin inline asm
	lop3.b32 %r949, %r594, %r940, %r952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r953, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r954, %r952, %r953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r957, %r949, %r954;
	// end inline asm
	shr.u32 	%r962, %r940, 8;
	// begin inline asm
	lop3.b32 %r960, %r583, %r962, %r941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r964, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r965, %r941, %r964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r968, %r960, %r965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r971, %r594, %r962, %r952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r975, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r976, %r952, %r975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r979, %r971, %r976;
	// end inline asm
	// begin inline asm
	mov.b32 %r987, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r998, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r986, %r7943, -2004318072;
	// begin inline asm
	lop3.b32 %r984, %r583, %r986, %r987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r988, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r989, %r987, %r988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r992, %r984, %r989;
	// end inline asm
	// begin inline asm
	lop3.b32 %r995, %r594, %r986, %r998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r999, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1000, %r998, %r999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1003, %r995, %r1000;
	// end inline asm
	shr.u32 	%r1008, %r986, 8;
	// begin inline asm
	lop3.b32 %r1006, %r583, %r1008, %r987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1010, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1011, %r987, %r1010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1014, %r1006, %r1011;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1017, %r594, %r1008, %r998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1021, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1022, %r998, %r1021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1025, %r1017, %r1022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1028, %r167, %r854, %r766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1032, %r167, %r865, %r771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1036, %r167, %r876, %r776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1040, %r167, %r887, %r781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1044, %r167, %r900, %r786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1048, %r167, %r911, %r791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1052, %r167, %r922, %r796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1056, %r167, %r933, %r801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1060, %r167, %r946, %r806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1064, %r167, %r957, %r811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1068, %r167, %r968, %r816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1072, %r167, %r979, %r821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1076, %r167, %r992, %r826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1080, %r167, %r1003, %r831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1084, %r167, %r1014, %r836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1088, %r167, %r1025, %r841;
	// end inline asm
	// begin inline asm
	mov.b32 %r1097, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1108, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1096, %r7942, -2004318072;
	// begin inline asm
	lop3.b32 %r1094, %r583, %r1096, %r1097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1098, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1099, %r1097, %r1098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1102, %r1094, %r1099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1105, %r594, %r1096, %r1108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1109, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1110, %r1108, %r1109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1113, %r1105, %r1110;
	// end inline asm
	shr.u32 	%r1118, %r1096, 8;
	// begin inline asm
	lop3.b32 %r1116, %r583, %r1118, %r1097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1120, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1121, %r1097, %r1120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1124, %r1116, %r1121;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1127, %r594, %r1118, %r1108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1131, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1132, %r1108, %r1131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1135, %r1127, %r1132;
	// end inline asm
	// begin inline asm
	mov.b32 %r1143, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1154, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1142, %r7941, -2004318072;
	// begin inline asm
	lop3.b32 %r1140, %r583, %r1142, %r1143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1144, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1145, %r1143, %r1144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1148, %r1140, %r1145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1151, %r594, %r1142, %r1154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1155, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1156, %r1154, %r1155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1159, %r1151, %r1156;
	// end inline asm
	shr.u32 	%r1164, %r1142, 8;
	// begin inline asm
	lop3.b32 %r1162, %r583, %r1164, %r1143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1166, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1167, %r1143, %r1166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1170, %r1162, %r1167;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1173, %r594, %r1164, %r1154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1177, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1178, %r1154, %r1177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1181, %r1173, %r1178;
	// end inline asm
	// begin inline asm
	mov.b32 %r1189, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1200, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1188, %r7940, -2004318072;
	// begin inline asm
	lop3.b32 %r1186, %r583, %r1188, %r1189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1190, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1191, %r1189, %r1190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1194, %r1186, %r1191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1197, %r594, %r1188, %r1200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1201, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1202, %r1200, %r1201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1205, %r1197, %r1202;
	// end inline asm
	shr.u32 	%r1210, %r1188, 8;
	// begin inline asm
	lop3.b32 %r1208, %r583, %r1210, %r1189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1212, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1213, %r1189, %r1212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1216, %r1208, %r1213;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1219, %r594, %r1210, %r1200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1223, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1224, %r1200, %r1223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1227, %r1219, %r1224;
	// end inline asm
	// begin inline asm
	mov.b32 %r1235, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1246, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1234, %r7939, -2004318072;
	// begin inline asm
	lop3.b32 %r1232, %r583, %r1234, %r1235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1236, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1237, %r1235, %r1236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1240, %r1232, %r1237;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1243, %r594, %r1234, %r1246, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1247, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1248, %r1246, %r1247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1251, %r1243, %r1248;
	// end inline asm
	shr.u32 	%r1256, %r1234, 8;
	// begin inline asm
	lop3.b32 %r1254, %r583, %r1256, %r1235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1258, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1259, %r1235, %r1258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1262, %r1254, %r1259;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1265, %r594, %r1256, %r1246, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1269, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1270, %r1246, %r1269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1273, %r1265, %r1270;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1276, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1278, %r1276, %r1102, %r1028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1282, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1284, %r1282, %r1113, %r1032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1288, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1290, %r1288, %r1124, %r1036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1294, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1296, %r1294, %r1135, %r1040;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1300, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1302, %r1300, %r1148, %r1044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1306, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1308, %r1306, %r1159, %r1048;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1312, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1314, %r1312, %r1170, %r1052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1318, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1320, %r1318, %r1181, %r1056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1324, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1326, %r1324, %r1194, %r1060;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1330, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1332, %r1330, %r1205, %r1064;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1336, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1338, %r1336, %r1216, %r1068;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1342, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1344, %r1342, %r1227, %r1072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1348, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1350, %r1348, %r1240, %r1076;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1354, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1356, %r1354, %r1251, %r1080;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1360, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1362, %r1360, %r1262, %r1084;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1366, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1368, %r1366, %r1273, %r1088;
	// end inline asm
	// begin inline asm
	mov.b32 %r1377, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1388, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1376, %r7938, -2004318072;
	// begin inline asm
	lop3.b32 %r1374, %r583, %r1376, %r1377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1378, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1379, %r1377, %r1378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1382, %r1374, %r1379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1385, %r594, %r1376, %r1388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1389, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1390, %r1388, %r1389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1393, %r1385, %r1390;
	// end inline asm
	shr.u32 	%r1398, %r1376, 8;
	// begin inline asm
	lop3.b32 %r1396, %r583, %r1398, %r1377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1400, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1401, %r1377, %r1400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1404, %r1396, %r1401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1407, %r594, %r1398, %r1388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1411, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1412, %r1388, %r1411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1415, %r1407, %r1412;
	// end inline asm
	// begin inline asm
	mov.b32 %r1423, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1434, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1422, %r7937, -2004318072;
	// begin inline asm
	lop3.b32 %r1420, %r583, %r1422, %r1423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1424, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1425, %r1423, %r1424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1428, %r1420, %r1425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1431, %r594, %r1422, %r1434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1435, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1436, %r1434, %r1435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1439, %r1431, %r1436;
	// end inline asm
	shr.u32 	%r1444, %r1422, 8;
	// begin inline asm
	lop3.b32 %r1442, %r583, %r1444, %r1423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1446, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1447, %r1423, %r1446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1450, %r1442, %r1447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1453, %r594, %r1444, %r1434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1457, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1458, %r1434, %r1457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1461, %r1453, %r1458;
	// end inline asm
	// begin inline asm
	mov.b32 %r1469, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1480, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1468, %r7936, -2004318072;
	// begin inline asm
	lop3.b32 %r1466, %r583, %r1468, %r1469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1470, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1471, %r1469, %r1470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1474, %r1466, %r1471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1477, %r594, %r1468, %r1480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1481, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1482, %r1480, %r1481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1485, %r1477, %r1482;
	// end inline asm
	shr.u32 	%r1490, %r1468, 8;
	// begin inline asm
	lop3.b32 %r1488, %r583, %r1490, %r1469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1492, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1493, %r1469, %r1492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1496, %r1488, %r1493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1499, %r594, %r1490, %r1480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1503, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1504, %r1480, %r1503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1507, %r1499, %r1504;
	// end inline asm
	// begin inline asm
	mov.b32 %r1515, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1526, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1514, %r7935, -2004318072;
	// begin inline asm
	lop3.b32 %r1512, %r583, %r1514, %r1515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1516, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1517, %r1515, %r1516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1520, %r1512, %r1517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1523, %r594, %r1514, %r1526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1527, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1528, %r1526, %r1527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1531, %r1523, %r1528;
	// end inline asm
	shr.u32 	%r1536, %r1514, 8;
	// begin inline asm
	lop3.b32 %r1534, %r583, %r1536, %r1515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1538, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1539, %r1515, %r1538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1542, %r1534, %r1539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1545, %r594, %r1536, %r1526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1549, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1550, %r1526, %r1549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1553, %r1545, %r1550;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1627, %r229, %r1382, %r1278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1624, %r229, %r1393, %r1284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1636, %r229, %r1404, %r1290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1633, %r229, %r1415, %r1296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1645, %r229, %r1428, %r1302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1642, %r229, %r1439, %r1308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1654, %r229, %r1450, %r1314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1651, %r229, %r1461, %r1320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1663, %r229, %r1474, %r1326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1660, %r229, %r1485, %r1332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1672, %r229, %r1496, %r1338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1669, %r229, %r1507, %r1344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1681, %r229, %r1520, %r1350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1678, %r229, %r1531, %r1356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1690, %r229, %r1542, %r1362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1687, %r229, %r1553, %r1368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1620, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1622, %r1620, %r1624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1625, %r263, %r1627, %r1622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1629, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1631, %r1629, %r1633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1634, %r263, %r1636, %r1631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1638, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1640, %r1638, %r1642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1643, %r263, %r1645, %r1640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1647, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1649, %r1647, %r1651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1652, %r263, %r1654, %r1649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1656, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1658, %r1656, %r1660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1661, %r263, %r1663, %r1658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1665, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1667, %r1665, %r1669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1670, %r263, %r1672, %r1667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1674, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1676, %r1674, %r1678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1679, %r263, %r1681, %r1676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1683, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1685, %r1683, %r1687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1688, %r263, %r1690, %r1685;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1692, %r266, %r1627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1695, %r263, %r1624, %r1692;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1699, %r266, %r1636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1702, %r263, %r1633, %r1699;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1706, %r266, %r1645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1709, %r263, %r1642, %r1706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1713, %r266, %r1654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1716, %r263, %r1651, %r1713;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1720, %r266, %r1663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1723, %r263, %r1660, %r1720;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1727, %r266, %r1672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1730, %r263, %r1669, %r1727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1734, %r266, %r1681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1737, %r263, %r1678, %r1734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1741, %r266, %r1690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1744, %r263, %r1687, %r1741;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1835, %r1832}, {%r269, %r275, %r272, %r278}, {%r1625, %r1695}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1844, %r1841}, {%r269, %r275, %r272, %r278}, {%r1634, %r1702}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1853, %r1850}, {%r269, %r275, %r272, %r278}, {%r1643, %r1709}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1862, %r1859}, {%r269, %r275, %r272, %r278}, {%r1652, %r1716}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1871, %r1868}, {%r269, %r275, %r272, %r278}, {%r1661, %r1723}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1880, %r1877}, {%r269, %r275, %r272, %r278}, {%r1670, %r1730}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1889, %r1886}, {%r269, %r275, %r272, %r278}, {%r1679, %r1737}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1898, %r1895}, {%r269, %r275, %r272, %r278}, {%r1688, %r1744}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1828, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1830, %r1828, %r1832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1833, %r281, %r1835, %r1830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1837, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1839, %r1837, %r1841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1842, %r281, %r1844, %r1839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1846, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1848, %r1846, %r1850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1851, %r281, %r1853, %r1848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1855, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1857, %r1855, %r1859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1860, %r281, %r1862, %r1857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1864, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1866, %r1864, %r1868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1869, %r281, %r1871, %r1866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1873, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1875, %r1873, %r1877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1878, %r281, %r1880, %r1875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1882, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1884, %r1882, %r1886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1887, %r281, %r1889, %r1884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1891, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1893, %r1891, %r1895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1896, %r281, %r1898, %r1893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1900, %r284, %r1835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1903, %r281, %r1832, %r1900;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1907, %r284, %r1844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1910, %r281, %r1841, %r1907;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1914, %r284, %r1853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1917, %r281, %r1850, %r1914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1921, %r284, %r1862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1924, %r281, %r1859, %r1921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1928, %r284, %r1871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1931, %r281, %r1868, %r1928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1935, %r284, %r1880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1938, %r281, %r1877, %r1935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1942, %r284, %r1889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1945, %r281, %r1886, %r1942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1949, %r284, %r1898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1952, %r281, %r1895, %r1949;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1956, %r1957}, {%r287, %r293, %r290, %r296}, {%r1833, %r1903}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1966, %r1967}, {%r287, %r293, %r290, %r296}, {%r1842, %r1910}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1976, %r1977}, {%r287, %r293, %r290, %r296}, {%r1851, %r1917}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1986, %r1987}, {%r287, %r293, %r290, %r296}, {%r1860, %r1924}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1996, %r1997}, {%r287, %r293, %r290, %r296}, {%r1869, %r1931}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2006, %r2007}, {%r287, %r293, %r290, %r296}, {%r1878, %r1938}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2016, %r2017}, {%r287, %r293, %r290, %r296}, {%r1887, %r1945}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2026, %r2027}, {%r287, %r293, %r290, %r296}, {%r1896, %r1952}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2036, %r55, %r1956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2039, %r55, %r1957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2042, %r55, %r1966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2045, %r55, %r1967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2048, %r55, %r1976;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2051, %r55, %r1977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2054, %r55, %r1986;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2057, %r55, %r1987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2060, %r55, %r1996;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2063, %r55, %r1997;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2066, %r55, %r2006;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2069, %r55, %r2007;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2072, %r55, %r2016;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2075, %r55, %r2017;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2078, %r55, %r2026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2081, %r55, %r2027;
	// end inline asm
	// begin inline asm
	mov.b32 %r2084, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2085, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2086, %r2036, %r2084;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2089, %r2086, %r2085;
	// end inline asm
	// begin inline asm
	mov.b32 %r2092, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2093, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2094, %r2039, %r2092;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2097, %r2094, %r2093;
	// end inline asm
	// begin inline asm
	mov.b32 %r2100, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2101, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2102, %r2042, %r2100;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2105, %r2102, %r2101;
	// end inline asm
	// begin inline asm
	mov.b32 %r2108, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2109, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2110, %r2045, %r2108;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2113, %r2110, %r2109;
	// end inline asm
	// begin inline asm
	mov.b32 %r2116, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2117, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2118, %r2048, %r2116;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2121, %r2118, %r2117;
	// end inline asm
	// begin inline asm
	mov.b32 %r2124, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2125, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2126, %r2051, %r2124;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2129, %r2126, %r2125;
	// end inline asm
	// begin inline asm
	mov.b32 %r2132, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2133, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2134, %r2054, %r2132;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2137, %r2134, %r2133;
	// end inline asm
	// begin inline asm
	mov.b32 %r2140, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2141, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2142, %r2057, %r2140;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2145, %r2142, %r2141;
	// end inline asm
	// begin inline asm
	mov.b32 %r2148, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2149, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2150, %r2060, %r2148;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2153, %r2150, %r2149;
	// end inline asm
	// begin inline asm
	mov.b32 %r2156, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2157, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2158, %r2063, %r2156;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2161, %r2158, %r2157;
	// end inline asm
	// begin inline asm
	mov.b32 %r2164, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2165, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2166, %r2066, %r2164;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2169, %r2166, %r2165;
	// end inline asm
	// begin inline asm
	mov.b32 %r2172, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2173, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2174, %r2069, %r2172;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2177, %r2174, %r2173;
	// end inline asm
	// begin inline asm
	mov.b32 %r2180, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2181, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2182, %r2072, %r2180;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2185, %r2182, %r2181;
	// end inline asm
	// begin inline asm
	mov.b32 %r2188, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2189, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2190, %r2075, %r2188;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2193, %r2190, %r2189;
	// end inline asm
	// begin inline asm
	mov.b32 %r2196, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2197, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2198, %r2078, %r2196;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2201, %r2198, %r2197;
	// end inline asm
	// begin inline asm
	mov.b32 %r2204, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2205, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2206, %r2081, %r2204;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2209, %r2206, %r2205;
	// end inline asm
	// begin inline asm
	mov.b32 %r2215, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2213, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2214, %r2215, %r2213;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2217, %r2089, %r2214;
	// end inline asm
	// begin inline asm
	mov.b32 %r2220, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2221, %r2215, %r2220;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2224, %r2097, %r2221;
	// end inline asm
	// begin inline asm
	mov.b32 %r2227, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2228, %r2215, %r2227;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2231, %r2105, %r2228;
	// end inline asm
	// begin inline asm
	mov.b32 %r2234, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2235, %r2215, %r2234;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2238, %r2113, %r2235;
	// end inline asm
	mov.u32 	%r2244, 25152;
	// begin inline asm
	prmt.b32 %r2241, %r2217, %r2231, %r2244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2245, %r2224, %r2238, %r2244;
	// end inline asm
	shl.b32 	%r2252, %r2245, 4;
	mov.u32 	%r2250, 252645135;
	// begin inline asm
	lop3.b32 %r2249, %r2250, %r2241, %r2252, 202;
	// end inline asm
	xor.b32  	%r7807, %r2249, -2004318072;
	// begin inline asm
	mov.b32 %r2256, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2254, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2255, %r2256, %r2254;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2258, %r2121, %r2255;
	// end inline asm
	// begin inline asm
	mov.b32 %r2261, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2262, %r2256, %r2261;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2265, %r2129, %r2262;
	// end inline asm
	// begin inline asm
	mov.b32 %r2268, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2269, %r2256, %r2268;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2272, %r2137, %r2269;
	// end inline asm
	// begin inline asm
	mov.b32 %r2275, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2276, %r2256, %r2275;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2279, %r2145, %r2276;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2282, %r2258, %r2272, %r2244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2286, %r2265, %r2279, %r2244;
	// end inline asm
	shl.b32 	%r2293, %r2286, 4;
	// begin inline asm
	lop3.b32 %r2290, %r2250, %r2282, %r2293, 202;
	// end inline asm
	xor.b32  	%r7808, %r2290, -2004318072;
	// begin inline asm
	mov.b32 %r2297, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2295, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2296, %r2297, %r2295;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2299, %r2153, %r2296;
	// end inline asm
	// begin inline asm
	mov.b32 %r2302, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2303, %r2297, %r2302;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2306, %r2161, %r2303;
	// end inline asm
	// begin inline asm
	mov.b32 %r2309, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2310, %r2297, %r2309;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2313, %r2169, %r2310;
	// end inline asm
	// begin inline asm
	mov.b32 %r2316, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2317, %r2297, %r2316;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2320, %r2177, %r2317;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2323, %r2299, %r2313, %r2244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2327, %r2306, %r2320, %r2244;
	// end inline asm
	shl.b32 	%r2334, %r2327, 4;
	// begin inline asm
	lop3.b32 %r2331, %r2250, %r2323, %r2334, 202;
	// end inline asm
	xor.b32  	%r7809, %r2331, -2004318072;
	// begin inline asm
	mov.b32 %r2338, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2336, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2337, %r2338, %r2336;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2340, %r2185, %r2337;
	// end inline asm
	// begin inline asm
	mov.b32 %r2343, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2344, %r2338, %r2343;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2347, %r2193, %r2344;
	// end inline asm
	// begin inline asm
	mov.b32 %r2350, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2351, %r2338, %r2350;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2354, %r2201, %r2351;
	// end inline asm
	// begin inline asm
	mov.b32 %r2357, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2358, %r2338, %r2357;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2361, %r2209, %r2358;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2364, %r2340, %r2354, %r2244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2368, %r2347, %r2361, %r2244;
	// end inline asm
	shl.b32 	%r2375, %r2368, 4;
	// begin inline asm
	lop3.b32 %r2372, %r2250, %r2364, %r2375, 202;
	// end inline asm
	xor.b32  	%r7810, %r2372, -2004318072;
	st.shared.u32 	[%rd145], %r7807;
	st.shared.u32 	[%rd146], %r7808;
	st.shared.u32 	[%rd147], %r7809;
	st.shared.u32 	[%rd148], %r7810;
	ld.shared.u32 	%r7946, [%rd86];
	ld.shared.u32 	%r7945, [%rd88];
	ld.shared.u32 	%r7944, [%rd90];
	ld.shared.u32 	%r7943, [%rd92];
	// begin inline asm
	mov.b32 %r2381, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2392, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2380, %r7946, -2004318072;
	// begin inline asm
	lop3.b32 %r2378, %r583, %r2380, %r2381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2382, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2383, %r2381, %r2382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2386, %r2378, %r2383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2389, %r594, %r2380, %r2392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2393, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2394, %r2392, %r2393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2397, %r2389, %r2394;
	// end inline asm
	shr.u32 	%r2402, %r2380, 8;
	// begin inline asm
	lop3.b32 %r2400, %r583, %r2402, %r2381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2404, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2405, %r2381, %r2404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2408, %r2400, %r2405;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2411, %r594, %r2402, %r2392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2415, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2416, %r2392, %r2415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2419, %r2411, %r2416;
	// end inline asm
	// begin inline asm
	mov.b32 %r2427, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2438, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2426, %r7945, -2004318072;
	// begin inline asm
	lop3.b32 %r2424, %r583, %r2426, %r2427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2428, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2429, %r2427, %r2428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2432, %r2424, %r2429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2435, %r594, %r2426, %r2438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2439, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2440, %r2438, %r2439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2443, %r2435, %r2440;
	// end inline asm
	shr.u32 	%r2448, %r2426, 8;
	// begin inline asm
	lop3.b32 %r2446, %r583, %r2448, %r2427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2450, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2451, %r2427, %r2450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2454, %r2446, %r2451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2457, %r594, %r2448, %r2438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2461, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2462, %r2438, %r2461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2465, %r2457, %r2462;
	// end inline asm
	// begin inline asm
	mov.b32 %r2473, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2484, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2472, %r7944, -2004318072;
	// begin inline asm
	lop3.b32 %r2470, %r583, %r2472, %r2473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2474, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2475, %r2473, %r2474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2478, %r2470, %r2475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2481, %r594, %r2472, %r2484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2485, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2486, %r2484, %r2485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2489, %r2481, %r2486;
	// end inline asm
	shr.u32 	%r2494, %r2472, 8;
	// begin inline asm
	lop3.b32 %r2492, %r583, %r2494, %r2473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2496, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2497, %r2473, %r2496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2500, %r2492, %r2497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2503, %r594, %r2494, %r2484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2507, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2508, %r2484, %r2507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2511, %r2503, %r2508;
	// end inline asm
	// begin inline asm
	mov.b32 %r2519, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2530, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2518, %r7943, -2004318072;
	// begin inline asm
	lop3.b32 %r2516, %r583, %r2518, %r2519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2520, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2521, %r2519, %r2520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2524, %r2516, %r2521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2527, %r594, %r2518, %r2530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2531, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2532, %r2530, %r2531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2535, %r2527, %r2532;
	// end inline asm
	shr.u32 	%r2540, %r2518, 8;
	// begin inline asm
	lop3.b32 %r2538, %r583, %r2540, %r2519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2542, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2543, %r2519, %r2542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2546, %r2538, %r2543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2549, %r594, %r2540, %r2530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2553, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2554, %r2530, %r2553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2557, %r2549, %r2554;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2560, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2562, %r2560, %r2386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2565, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2567, %r2565, %r2397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2570, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2572, %r2570, %r2408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2575, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2577, %r2575, %r2419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2580, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2582, %r2580, %r2432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2585, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2587, %r2585, %r2443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2590, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2592, %r2590, %r2454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2595, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2597, %r2595, %r2465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2600, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2602, %r2600, %r2478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2605, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2607, %r2605, %r2489;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2610, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2612, %r2610, %r2500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2615, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2617, %r2615, %r2511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2620, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2622, %r2620, %r2524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2625, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2627, %r2625, %r2535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2630, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2632, %r2630, %r2546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2635, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2637, %r2635, %r2557;
	// end inline asm
	// begin inline asm
	mov.b32 %r2645, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2656, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2642, %r583, %r1096, %r2645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2646, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2647, %r2645, %r2646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2650, %r2642, %r2647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2653, %r594, %r1096, %r2656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2657, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2658, %r2656, %r2657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2661, %r2653, %r2658;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2664, %r583, %r1118, %r2645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2668, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2669, %r2645, %r2668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2672, %r2664, %r2669;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2675, %r594, %r1118, %r2656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2679, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2680, %r2656, %r2679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2683, %r2675, %r2680;
	// end inline asm
	// begin inline asm
	mov.b32 %r2691, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2702, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2688, %r583, %r1142, %r2691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2692, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2693, %r2691, %r2692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2696, %r2688, %r2693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2699, %r594, %r1142, %r2702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2703, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2704, %r2702, %r2703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2707, %r2699, %r2704;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2710, %r583, %r1164, %r2691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2714, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2715, %r2691, %r2714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2718, %r2710, %r2715;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2721, %r594, %r1164, %r2702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2725, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2726, %r2702, %r2725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2729, %r2721, %r2726;
	// end inline asm
	// begin inline asm
	mov.b32 %r2737, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2748, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2734, %r583, %r1188, %r2737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2738, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2739, %r2737, %r2738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2742, %r2734, %r2739;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2745, %r594, %r1188, %r2748, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2749, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2750, %r2748, %r2749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2753, %r2745, %r2750;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2756, %r583, %r1210, %r2737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2760, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2761, %r2737, %r2760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2764, %r2756, %r2761;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2767, %r594, %r1210, %r2748, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2771, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2772, %r2748, %r2771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2775, %r2767, %r2772;
	// end inline asm
	// begin inline asm
	mov.b32 %r2783, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2794, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2780, %r583, %r1234, %r2783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2784, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2785, %r2783, %r2784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2788, %r2780, %r2785;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2791, %r594, %r1234, %r2794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2795, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2796, %r2794, %r2795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2799, %r2791, %r2796;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2802, %r583, %r1256, %r2783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2806, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2807, %r2783, %r2806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2810, %r2802, %r2807;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2813, %r594, %r1256, %r2794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2817, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2818, %r2794, %r2817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2821, %r2813, %r2818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2824, %r167, %r2650, %r2562;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2828, %r167, %r2661, %r2567;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2832, %r167, %r2672, %r2572;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2836, %r167, %r2683, %r2577;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2840, %r167, %r2696, %r2582;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2844, %r167, %r2707, %r2587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2848, %r167, %r2718, %r2592;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2852, %r167, %r2729, %r2597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2856, %r167, %r2742, %r2602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2860, %r167, %r2753, %r2607;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2864, %r167, %r2764, %r2612;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2868, %r167, %r2775, %r2617;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2872, %r167, %r2788, %r2622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2876, %r167, %r2799, %r2627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2880, %r167, %r2810, %r2632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2884, %r167, %r2821, %r2637;
	// end inline asm
	// begin inline asm
	mov.b32 %r2893, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2904, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2890, %r583, %r1376, %r2893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2894, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2895, %r2893, %r2894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2898, %r2890, %r2895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2901, %r594, %r1376, %r2904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2905, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2906, %r2904, %r2905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2909, %r2901, %r2906;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2912, %r583, %r1398, %r2893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2916, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2917, %r2893, %r2916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2920, %r2912, %r2917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2923, %r594, %r1398, %r2904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2927, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2928, %r2904, %r2927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2931, %r2923, %r2928;
	// end inline asm
	// begin inline asm
	mov.b32 %r2939, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2950, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2936, %r583, %r1422, %r2939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2940, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2941, %r2939, %r2940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2944, %r2936, %r2941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2947, %r594, %r1422, %r2950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2951, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2952, %r2950, %r2951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2955, %r2947, %r2952;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2958, %r583, %r1444, %r2939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2962, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2963, %r2939, %r2962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2966, %r2958, %r2963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2969, %r594, %r1444, %r2950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2973, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2974, %r2950, %r2973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2977, %r2969, %r2974;
	// end inline asm
	// begin inline asm
	mov.b32 %r2985, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2996, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2982, %r583, %r1468, %r2985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2986, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2987, %r2985, %r2986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2990, %r2982, %r2987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2993, %r594, %r1468, %r2996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2997, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2998, %r2996, %r2997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3001, %r2993, %r2998;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3004, %r583, %r1490, %r2985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3008, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3009, %r2985, %r3008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3012, %r3004, %r3009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3015, %r594, %r1490, %r2996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3019, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3020, %r2996, %r3019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3023, %r3015, %r3020;
	// end inline asm
	// begin inline asm
	mov.b32 %r3031, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3042, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3028, %r583, %r1514, %r3031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3032, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3033, %r3031, %r3032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3036, %r3028, %r3033;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3039, %r594, %r1514, %r3042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3043, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3044, %r3042, %r3043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3047, %r3039, %r3044;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3050, %r583, %r1536, %r3031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3054, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3055, %r3031, %r3054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3058, %r3050, %r3055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3061, %r594, %r1536, %r3042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3065, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3066, %r3042, %r3065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3069, %r3061, %r3066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3072, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r3072, %r2898, %r2824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3078, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3080, %r3078, %r2909, %r2828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3084, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3086, %r3084, %r2920, %r2832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3090, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3092, %r3090, %r2931, %r2836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3096, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3098, %r3096, %r2944, %r2840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3102, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3104, %r3102, %r2955, %r2844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3108, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3110, %r3108, %r2966, %r2848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3114, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3116, %r3114, %r2977, %r2852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3120, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3122, %r3120, %r2990, %r2856;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3126, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3128, %r3126, %r3001, %r2860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3132, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3134, %r3132, %r3012, %r2864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3138, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3140, %r3138, %r3023, %r2868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3144, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3146, %r3144, %r3036, %r2872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3150, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3152, %r3150, %r3047, %r2876;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3156, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3158, %r3156, %r3058, %r2880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3162, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3164, %r3162, %r3069, %r2884;
	// end inline asm
	// begin inline asm
	mov.b32 %r3173, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3184, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3170, %r583, %r584, %r3173, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3174, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3175, %r3173, %r3174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3178, %r3170, %r3175;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3181, %r594, %r584, %r3184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3185, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3186, %r3184, %r3185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3189, %r3181, %r3186;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3192, %r583, %r606, %r3173, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3196, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3197, %r3173, %r3196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3200, %r3192, %r3197;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3203, %r594, %r606, %r3184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3207, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3208, %r3184, %r3207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3211, %r3203, %r3208;
	// end inline asm
	// begin inline asm
	mov.b32 %r3219, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3230, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3216, %r583, %r630, %r3219, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3220, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3221, %r3219, %r3220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3224, %r3216, %r3221;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3227, %r594, %r630, %r3230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3231, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3232, %r3230, %r3231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3235, %r3227, %r3232;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3238, %r583, %r652, %r3219, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3242, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3243, %r3219, %r3242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3246, %r3238, %r3243;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3249, %r594, %r652, %r3230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3253, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3254, %r3230, %r3253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3257, %r3249, %r3254;
	// end inline asm
	// begin inline asm
	mov.b32 %r3265, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3276, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3262, %r583, %r676, %r3265, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3266, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3267, %r3265, %r3266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3270, %r3262, %r3267;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3273, %r594, %r676, %r3276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3277, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3278, %r3276, %r3277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3281, %r3273, %r3278;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3284, %r583, %r698, %r3265, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3288, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3289, %r3265, %r3288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3292, %r3284, %r3289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3295, %r594, %r698, %r3276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3299, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3300, %r3276, %r3299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3303, %r3295, %r3300;
	// end inline asm
	// begin inline asm
	mov.b32 %r3311, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3322, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3308, %r583, %r722, %r3311, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3312, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3313, %r3311, %r3312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3316, %r3308, %r3313;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3319, %r594, %r722, %r3322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3323, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3324, %r3322, %r3323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3327, %r3319, %r3324;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3330, %r583, %r744, %r3311, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3334, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3335, %r3311, %r3334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3338, %r3330, %r3335;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3341, %r594, %r744, %r3322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3345, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3346, %r3322, %r3345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3349, %r3341, %r3346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3423, %r229, %r3178, %r3074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3420, %r229, %r3189, %r3080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3432, %r229, %r3200, %r3086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3429, %r229, %r3211, %r3092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3441, %r229, %r3224, %r3098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3438, %r229, %r3235, %r3104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3450, %r229, %r3246, %r3110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3447, %r229, %r3257, %r3116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3459, %r229, %r3270, %r3122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3456, %r229, %r3281, %r3128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3468, %r229, %r3292, %r3134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3465, %r229, %r3303, %r3140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3477, %r229, %r3316, %r3146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3474, %r229, %r3327, %r3152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3486, %r229, %r3338, %r3158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3483, %r229, %r3349, %r3164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3416, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3418, %r3416, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3421, %r263, %r3423, %r3418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3425, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3427, %r3425, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3430, %r263, %r3432, %r3427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3434, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3436, %r3434, %r3438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3439, %r263, %r3441, %r3436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3443, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3445, %r3443, %r3447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3448, %r263, %r3450, %r3445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3452, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3454, %r3452, %r3456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3457, %r263, %r3459, %r3454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3461, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3463, %r3461, %r3465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3466, %r263, %r3468, %r3463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3470, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3472, %r3470, %r3474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3475, %r263, %r3477, %r3472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3479, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3481, %r3479, %r3483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3484, %r263, %r3486, %r3481;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3488, %r266, %r3423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3491, %r263, %r3420, %r3488;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3495, %r266, %r3432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3498, %r263, %r3429, %r3495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3502, %r266, %r3441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3505, %r263, %r3438, %r3502;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3509, %r266, %r3450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3512, %r263, %r3447, %r3509;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3516, %r266, %r3459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3519, %r263, %r3456, %r3516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3523, %r266, %r3468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3526, %r263, %r3465, %r3523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3530, %r266, %r3477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3533, %r263, %r3474, %r3530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3537, %r266, %r3486;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3540, %r263, %r3483, %r3537;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3631, %r3628}, {%r269, %r275, %r272, %r278}, {%r3421, %r3491}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3640, %r3637}, {%r269, %r275, %r272, %r278}, {%r3430, %r3498}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3649, %r3646}, {%r269, %r275, %r272, %r278}, {%r3439, %r3505}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3658, %r3655}, {%r269, %r275, %r272, %r278}, {%r3448, %r3512}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3667, %r3664}, {%r269, %r275, %r272, %r278}, {%r3457, %r3519}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3676, %r3673}, {%r269, %r275, %r272, %r278}, {%r3466, %r3526}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3685, %r3682}, {%r269, %r275, %r272, %r278}, {%r3475, %r3533}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3694, %r3691}, {%r269, %r275, %r272, %r278}, {%r3484, %r3540}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3624, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3626, %r3624, %r3628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3629, %r281, %r3631, %r3626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3633, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3635, %r3633, %r3637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3638, %r281, %r3640, %r3635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3642, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3644, %r3642, %r3646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3647, %r281, %r3649, %r3644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3651, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3653, %r3651, %r3655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3656, %r281, %r3658, %r3653;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3660, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3662, %r3660, %r3664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3665, %r281, %r3667, %r3662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3669, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3671, %r3669, %r3673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3674, %r281, %r3676, %r3671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3678, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3680, %r3678, %r3682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3683, %r281, %r3685, %r3680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3687, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3689, %r3687, %r3691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3692, %r281, %r3694, %r3689;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3696, %r284, %r3631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3699, %r281, %r3628, %r3696;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3703, %r284, %r3640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3706, %r281, %r3637, %r3703;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3710, %r284, %r3649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3713, %r281, %r3646, %r3710;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3717, %r284, %r3658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3720, %r281, %r3655, %r3717;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3724, %r284, %r3667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3727, %r281, %r3664, %r3724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3731, %r284, %r3676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3734, %r281, %r3673, %r3731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3738, %r284, %r3685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3741, %r281, %r3682, %r3738;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3745, %r284, %r3694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3748, %r281, %r3691, %r3745;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3752, %r3753}, {%r287, %r293, %r290, %r296}, {%r3629, %r3699}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3762, %r3763}, {%r287, %r293, %r290, %r296}, {%r3638, %r3706}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3772, %r3773}, {%r287, %r293, %r290, %r296}, {%r3647, %r3713}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3782, %r3783}, {%r287, %r293, %r290, %r296}, {%r3656, %r3720}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3792, %r3793}, {%r287, %r293, %r290, %r296}, {%r3665, %r3727}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3802, %r3803}, {%r287, %r293, %r290, %r296}, {%r3674, %r3734}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3812, %r3813}, {%r287, %r293, %r290, %r296}, {%r3683, %r3741}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3822, %r3823}, {%r287, %r293, %r290, %r296}, {%r3692, %r3748}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3832, %r55, %r3752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3835, %r55, %r3753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3838, %r55, %r3762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3841, %r55, %r3763;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3844, %r55, %r3772;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3847, %r55, %r3773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3850, %r55, %r3782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3853, %r55, %r3783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3856, %r55, %r3792;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3859, %r55, %r3793;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3862, %r55, %r3802;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3865, %r55, %r3803;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3868, %r55, %r3812;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3871, %r55, %r3813;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3874, %r55, %r3822;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3877, %r55, %r3823;
	// end inline asm
	// begin inline asm
	mov.b32 %r3880, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3881, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3882, %r3832, %r3880;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3885, %r3882, %r3881;
	// end inline asm
	// begin inline asm
	mov.b32 %r3888, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3889, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3890, %r3835, %r3888;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3893, %r3890, %r3889;
	// end inline asm
	// begin inline asm
	mov.b32 %r3896, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3897, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3898, %r3838, %r3896;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3901, %r3898, %r3897;
	// end inline asm
	// begin inline asm
	mov.b32 %r3904, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3905, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3906, %r3841, %r3904;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3909, %r3906, %r3905;
	// end inline asm
	// begin inline asm
	mov.b32 %r3912, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3913, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3914, %r3844, %r3912;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3917, %r3914, %r3913;
	// end inline asm
	// begin inline asm
	mov.b32 %r3920, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3921, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3922, %r3847, %r3920;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3925, %r3922, %r3921;
	// end inline asm
	// begin inline asm
	mov.b32 %r3928, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3929, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3930, %r3850, %r3928;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3933, %r3930, %r3929;
	// end inline asm
	// begin inline asm
	mov.b32 %r3936, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3937, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3938, %r3853, %r3936;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3941, %r3938, %r3937;
	// end inline asm
	// begin inline asm
	mov.b32 %r3944, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3945, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3946, %r3856, %r3944;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3949, %r3946, %r3945;
	// end inline asm
	// begin inline asm
	mov.b32 %r3952, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3953, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3954, %r3859, %r3952;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3957, %r3954, %r3953;
	// end inline asm
	// begin inline asm
	mov.b32 %r3960, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3961, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3962, %r3862, %r3960;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3965, %r3962, %r3961;
	// end inline asm
	// begin inline asm
	mov.b32 %r3968, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3969, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3970, %r3865, %r3968;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3973, %r3970, %r3969;
	// end inline asm
	// begin inline asm
	mov.b32 %r3976, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3977, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3978, %r3868, %r3976;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3981, %r3978, %r3977;
	// end inline asm
	// begin inline asm
	mov.b32 %r3984, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3985, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3986, %r3871, %r3984;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3989, %r3986, %r3985;
	// end inline asm
	// begin inline asm
	mov.b32 %r3992, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3993, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3994, %r3874, %r3992;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3997, %r3994, %r3993;
	// end inline asm
	// begin inline asm
	mov.b32 %r4000, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4001, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4002, %r3877, %r4000;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4005, %r4002, %r4001;
	// end inline asm
	// begin inline asm
	mov.b32 %r4011, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4009, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4010, %r4011, %r4009;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4013, %r3885, %r4010;
	// end inline asm
	// begin inline asm
	mov.b32 %r4016, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4017, %r4011, %r4016;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4020, %r3893, %r4017;
	// end inline asm
	// begin inline asm
	mov.b32 %r4023, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4024, %r4011, %r4023;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4027, %r3901, %r4024;
	// end inline asm
	// begin inline asm
	mov.b32 %r4030, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4031, %r4011, %r4030;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4034, %r3909, %r4031;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4037, %r4013, %r4027, %r2244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4041, %r4020, %r4034, %r2244;
	// end inline asm
	shl.b32 	%r4048, %r4041, 4;
	// begin inline asm
	lop3.b32 %r4045, %r2250, %r4037, %r4048, 202;
	// end inline asm
	xor.b32  	%r7811, %r4045, -2004318072;
	// begin inline asm
	mov.b32 %r4052, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4050, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4051, %r4052, %r4050;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4054, %r3917, %r4051;
	// end inline asm
	// begin inline asm
	mov.b32 %r4057, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4058, %r4052, %r4057;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4061, %r3925, %r4058;
	// end inline asm
	// begin inline asm
	mov.b32 %r4064, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4065, %r4052, %r4064;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4068, %r3933, %r4065;
	// end inline asm
	// begin inline asm
	mov.b32 %r4071, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4072, %r4052, %r4071;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4075, %r3941, %r4072;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4078, %r4054, %r4068, %r2244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4082, %r4061, %r4075, %r2244;
	// end inline asm
	shl.b32 	%r4089, %r4082, 4;
	// begin inline asm
	lop3.b32 %r4086, %r2250, %r4078, %r4089, 202;
	// end inline asm
	xor.b32  	%r7812, %r4086, -2004318072;
	// begin inline asm
	mov.b32 %r4093, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4091, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4092, %r4093, %r4091;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4095, %r3949, %r4092;
	// end inline asm
	// begin inline asm
	mov.b32 %r4098, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4099, %r4093, %r4098;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4102, %r3957, %r4099;
	// end inline asm
	// begin inline asm
	mov.b32 %r4105, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4106, %r4093, %r4105;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4109, %r3965, %r4106;
	// end inline asm
	// begin inline asm
	mov.b32 %r4112, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4113, %r4093, %r4112;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4116, %r3973, %r4113;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4119, %r4095, %r4109, %r2244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4123, %r4102, %r4116, %r2244;
	// end inline asm
	shl.b32 	%r4130, %r4123, 4;
	// begin inline asm
	lop3.b32 %r4127, %r2250, %r4119, %r4130, 202;
	// end inline asm
	xor.b32  	%r7813, %r4127, -2004318072;
	// begin inline asm
	mov.b32 %r4134, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4132, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4133, %r4134, %r4132;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4136, %r3981, %r4133;
	// end inline asm
	// begin inline asm
	mov.b32 %r4139, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4140, %r4134, %r4139;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4143, %r3989, %r4140;
	// end inline asm
	// begin inline asm
	mov.b32 %r4146, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4147, %r4134, %r4146;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4150, %r3997, %r4147;
	// end inline asm
	// begin inline asm
	mov.b32 %r4153, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4154, %r4134, %r4153;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4157, %r4005, %r4154;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4160, %r4136, %r4150, %r2244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4164, %r4143, %r4157, %r2244;
	// end inline asm
	shl.b32 	%r4171, %r4164, 4;
	// begin inline asm
	lop3.b32 %r4168, %r2250, %r4160, %r4171, 202;
	// end inline asm
	xor.b32  	%r7814, %r4168, -2004318072;
	st.shared.u32 	[%rd145], %r7811;
	st.shared.u32 	[%rd146], %r7812;
	st.shared.u32 	[%rd147], %r7813;
	st.shared.u32 	[%rd148], %r7814;
	ld.shared.u32 	%r7942, [%rd86];
	ld.shared.u32 	%r7941, [%rd88];
	ld.shared.u32 	%r7940, [%rd90];
	ld.shared.u32 	%r7939, [%rd92];
	// begin inline asm
	mov.b32 %r4177, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4188, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4176, %r7942, -2004318072;
	// begin inline asm
	lop3.b32 %r4174, %r583, %r4176, %r4177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4178, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4179, %r4177, %r4178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4182, %r4174, %r4179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4185, %r594, %r4176, %r4188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4189, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4190, %r4188, %r4189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4193, %r4185, %r4190;
	// end inline asm
	shr.u32 	%r4198, %r4176, 8;
	// begin inline asm
	lop3.b32 %r4196, %r583, %r4198, %r4177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4200, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4201, %r4177, %r4200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4204, %r4196, %r4201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4207, %r594, %r4198, %r4188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4211, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4212, %r4188, %r4211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4215, %r4207, %r4212;
	// end inline asm
	// begin inline asm
	mov.b32 %r4223, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4234, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4222, %r7941, -2004318072;
	// begin inline asm
	lop3.b32 %r4220, %r583, %r4222, %r4223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4225, %r4223, %r4224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4228, %r4220, %r4225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4231, %r594, %r4222, %r4234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4236, %r4234, %r4235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4239, %r4231, %r4236;
	// end inline asm
	shr.u32 	%r4244, %r4222, 8;
	// begin inline asm
	lop3.b32 %r4242, %r583, %r4244, %r4223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4246, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4247, %r4223, %r4246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4250, %r4242, %r4247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4253, %r594, %r4244, %r4234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4257, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4258, %r4234, %r4257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4261, %r4253, %r4258;
	// end inline asm
	// begin inline asm
	mov.b32 %r4269, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4280, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4268, %r7940, -2004318072;
	// begin inline asm
	lop3.b32 %r4266, %r583, %r4268, %r4269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4270, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4271, %r4269, %r4270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4274, %r4266, %r4271;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4277, %r594, %r4268, %r4280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4281, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4282, %r4280, %r4281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4285, %r4277, %r4282;
	// end inline asm
	shr.u32 	%r4290, %r4268, 8;
	// begin inline asm
	lop3.b32 %r4288, %r583, %r4290, %r4269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4292, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4293, %r4269, %r4292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4296, %r4288, %r4293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4299, %r594, %r4290, %r4280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4303, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4304, %r4280, %r4303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4307, %r4299, %r4304;
	// end inline asm
	// begin inline asm
	mov.b32 %r4315, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4326, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4314, %r7939, -2004318072;
	// begin inline asm
	lop3.b32 %r4312, %r583, %r4314, %r4315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4316, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4317, %r4315, %r4316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4320, %r4312, %r4317;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4323, %r594, %r4314, %r4326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4327, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4328, %r4326, %r4327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4331, %r4323, %r4328;
	// end inline asm
	shr.u32 	%r4336, %r4314, 8;
	// begin inline asm
	lop3.b32 %r4334, %r583, %r4336, %r4315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4338, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4339, %r4315, %r4338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4342, %r4334, %r4339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4345, %r594, %r4336, %r4326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4349, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4350, %r4326, %r4349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4353, %r4345, %r4350;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4356, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4358, %r4356, %r4182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4361, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4363, %r4361, %r4193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4366, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4368, %r4366, %r4204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4371, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4373, %r4371, %r4215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4376, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4378, %r4376, %r4228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4381, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4383, %r4381, %r4239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4386, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4388, %r4386, %r4250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4391, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4393, %r4391, %r4261;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4396, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4398, %r4396, %r4274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4401, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4403, %r4401, %r4285;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4406, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4408, %r4406, %r4296;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4411, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4413, %r4411, %r4307;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4416, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4418, %r4416, %r4320;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4421, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4423, %r4421, %r4331;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4426, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4428, %r4426, %r4342;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4431, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4433, %r4431, %r4353;
	// end inline asm
	// begin inline asm
	mov.b32 %r4441, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4452, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4438, %r583, %r1376, %r4441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4442, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4443, %r4441, %r4442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4446, %r4438, %r4443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4449, %r594, %r1376, %r4452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4453, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4454, %r4452, %r4453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4457, %r4449, %r4454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4460, %r583, %r1398, %r4441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4464, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4465, %r4441, %r4464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4468, %r4460, %r4465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4471, %r594, %r1398, %r4452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4475, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4476, %r4452, %r4475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4479, %r4471, %r4476;
	// end inline asm
	// begin inline asm
	mov.b32 %r4487, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4498, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4484, %r583, %r1422, %r4487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4488, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4489, %r4487, %r4488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4492, %r4484, %r4489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4495, %r594, %r1422, %r4498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4499, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4500, %r4498, %r4499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4503, %r4495, %r4500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4506, %r583, %r1444, %r4487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4510, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4511, %r4487, %r4510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4514, %r4506, %r4511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4517, %r594, %r1444, %r4498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4521, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4522, %r4498, %r4521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4525, %r4517, %r4522;
	// end inline asm
	// begin inline asm
	mov.b32 %r4533, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4544, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4530, %r583, %r1468, %r4533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4534, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4535, %r4533, %r4534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4538, %r4530, %r4535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4541, %r594, %r1468, %r4544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4545, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4546, %r4544, %r4545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4549, %r4541, %r4546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4552, %r583, %r1490, %r4533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4556, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4557, %r4533, %r4556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4560, %r4552, %r4557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4563, %r594, %r1490, %r4544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4567, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4568, %r4544, %r4567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4571, %r4563, %r4568;
	// end inline asm
	// begin inline asm
	mov.b32 %r4579, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4590, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4576, %r583, %r1514, %r4579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4580, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4581, %r4579, %r4580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4584, %r4576, %r4581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4587, %r594, %r1514, %r4590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4591, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4592, %r4590, %r4591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4595, %r4587, %r4592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4598, %r583, %r1536, %r4579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4602, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4603, %r4579, %r4602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4606, %r4598, %r4603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4609, %r594, %r1536, %r4590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4613, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4614, %r4590, %r4613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4617, %r4609, %r4614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4620, %r167, %r4446, %r4358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4624, %r167, %r4457, %r4363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4628, %r167, %r4468, %r4368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4632, %r167, %r4479, %r4373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4636, %r167, %r4492, %r4378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4640, %r167, %r4503, %r4383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4644, %r167, %r4514, %r4388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4648, %r167, %r4525, %r4393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4652, %r167, %r4538, %r4398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4656, %r167, %r4549, %r4403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4660, %r167, %r4560, %r4408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4664, %r167, %r4571, %r4413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4668, %r167, %r4584, %r4418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4672, %r167, %r4595, %r4423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4676, %r167, %r4606, %r4428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4680, %r167, %r4617, %r4433;
	// end inline asm
	// begin inline asm
	mov.b32 %r4689, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4700, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4686, %r583, %r584, %r4689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4690, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4691, %r4689, %r4690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4694, %r4686, %r4691;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4697, %r594, %r584, %r4700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4701, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4702, %r4700, %r4701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4705, %r4697, %r4702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4708, %r583, %r606, %r4689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4712, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4713, %r4689, %r4712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4716, %r4708, %r4713;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4719, %r594, %r606, %r4700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4723, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4724, %r4700, %r4723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4727, %r4719, %r4724;
	// end inline asm
	// begin inline asm
	mov.b32 %r4735, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4746, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4732, %r583, %r630, %r4735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4736, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4737, %r4735, %r4736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4740, %r4732, %r4737;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4743, %r594, %r630, %r4746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4747, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4748, %r4746, %r4747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4751, %r4743, %r4748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4754, %r583, %r652, %r4735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4758, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4759, %r4735, %r4758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4762, %r4754, %r4759;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4765, %r594, %r652, %r4746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4769, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4770, %r4746, %r4769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4773, %r4765, %r4770;
	// end inline asm
	// begin inline asm
	mov.b32 %r4781, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4792, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4778, %r583, %r676, %r4781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4782, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4783, %r4781, %r4782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4786, %r4778, %r4783;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4789, %r594, %r676, %r4792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4793, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4794, %r4792, %r4793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4797, %r4789, %r4794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4800, %r583, %r698, %r4781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4804, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4805, %r4781, %r4804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4808, %r4800, %r4805;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4811, %r594, %r698, %r4792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4815, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4816, %r4792, %r4815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4819, %r4811, %r4816;
	// end inline asm
	// begin inline asm
	mov.b32 %r4827, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4838, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4824, %r583, %r722, %r4827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4828, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4829, %r4827, %r4828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4832, %r4824, %r4829;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4835, %r594, %r722, %r4838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4839, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4840, %r4838, %r4839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4843, %r4835, %r4840;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4846, %r583, %r744, %r4827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4850, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4851, %r4827, %r4850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4854, %r4846, %r4851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4857, %r594, %r744, %r4838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4861, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4862, %r4838, %r4861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4865, %r4857, %r4862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4868, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4870, %r4868, %r4694, %r4620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4874, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4876, %r4874, %r4705, %r4624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4880, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4882, %r4880, %r4716, %r4628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4886, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4888, %r4886, %r4727, %r4632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4892, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4894, %r4892, %r4740, %r4636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4898, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4900, %r4898, %r4751, %r4640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4904, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4906, %r4904, %r4762, %r4644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4910, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4912, %r4910, %r4773, %r4648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4916, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4918, %r4916, %r4786, %r4652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4922, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4924, %r4922, %r4797, %r4656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4928, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4930, %r4928, %r4808, %r4660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4934, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4936, %r4934, %r4819, %r4664;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4940, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4942, %r4940, %r4832, %r4668;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4946, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4948, %r4946, %r4843, %r4672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4952, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4954, %r4952, %r4854, %r4676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4958, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4960, %r4958, %r4865, %r4680;
	// end inline asm
	// begin inline asm
	mov.b32 %r4969, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4980, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4966, %r583, %r2380, %r4969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4970, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4971, %r4969, %r4970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4974, %r4966, %r4971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4977, %r594, %r2380, %r4980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4981, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4982, %r4980, %r4981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4985, %r4977, %r4982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4988, %r583, %r2402, %r4969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4992, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4993, %r4969, %r4992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4996, %r4988, %r4993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4999, %r594, %r2402, %r4980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5003, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5004, %r4980, %r5003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5007, %r4999, %r5004;
	// end inline asm
	// begin inline asm
	mov.b32 %r5015, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5026, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5012, %r583, %r2426, %r5015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5016, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5017, %r5015, %r5016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5020, %r5012, %r5017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5023, %r594, %r2426, %r5026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5027, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5028, %r5026, %r5027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5031, %r5023, %r5028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5034, %r583, %r2448, %r5015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5038, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5039, %r5015, %r5038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5042, %r5034, %r5039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5045, %r594, %r2448, %r5026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5049, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5050, %r5026, %r5049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5053, %r5045, %r5050;
	// end inline asm
	// begin inline asm
	mov.b32 %r5061, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5072, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5058, %r583, %r2472, %r5061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5062, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5063, %r5061, %r5062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5066, %r5058, %r5063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5069, %r594, %r2472, %r5072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5073, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5074, %r5072, %r5073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5077, %r5069, %r5074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5080, %r583, %r2494, %r5061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5084, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5085, %r5061, %r5084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5088, %r5080, %r5085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5091, %r594, %r2494, %r5072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5095, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5096, %r5072, %r5095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5099, %r5091, %r5096;
	// end inline asm
	// begin inline asm
	mov.b32 %r5107, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5118, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5104, %r583, %r2518, %r5107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5108, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5109, %r5107, %r5108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5112, %r5104, %r5109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5115, %r594, %r2518, %r5118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5119, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5120, %r5118, %r5119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5123, %r5115, %r5120;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5126, %r583, %r2540, %r5107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5130, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5131, %r5107, %r5130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5134, %r5126, %r5131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5137, %r594, %r2540, %r5118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5141, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5142, %r5118, %r5141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5145, %r5137, %r5142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5219, %r229, %r4974, %r4870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5216, %r229, %r4985, %r4876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5228, %r229, %r4996, %r4882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5225, %r229, %r5007, %r4888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5237, %r229, %r5020, %r4894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5234, %r229, %r5031, %r4900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5246, %r229, %r5042, %r4906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5243, %r229, %r5053, %r4912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5255, %r229, %r5066, %r4918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5252, %r229, %r5077, %r4924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5264, %r229, %r5088, %r4930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5261, %r229, %r5099, %r4936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5273, %r229, %r5112, %r4942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5270, %r229, %r5123, %r4948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5282, %r229, %r5134, %r4954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5279, %r229, %r5145, %r4960;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5212, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5214, %r5212, %r5216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5217, %r263, %r5219, %r5214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5221, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5223, %r5221, %r5225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5226, %r263, %r5228, %r5223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5230, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5232, %r5230, %r5234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5235, %r263, %r5237, %r5232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5239, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5241, %r5239, %r5243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5244, %r263, %r5246, %r5241;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5248, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5250, %r5248, %r5252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5253, %r263, %r5255, %r5250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5257, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5259, %r5257, %r5261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5262, %r263, %r5264, %r5259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5266, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5268, %r5266, %r5270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5271, %r263, %r5273, %r5268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5275, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5277, %r5275, %r5279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5280, %r263, %r5282, %r5277;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5284, %r266, %r5219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5287, %r263, %r5216, %r5284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5291, %r266, %r5228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5294, %r263, %r5225, %r5291;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5298, %r266, %r5237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5301, %r263, %r5234, %r5298;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5305, %r266, %r5246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5308, %r263, %r5243, %r5305;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5312, %r266, %r5255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5315, %r263, %r5252, %r5312;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5319, %r266, %r5264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5322, %r263, %r5261, %r5319;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5326, %r266, %r5273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5329, %r263, %r5270, %r5326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5333, %r266, %r5282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5336, %r263, %r5279, %r5333;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5427, %r5424}, {%r269, %r275, %r272, %r278}, {%r5217, %r5287}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5436, %r5433}, {%r269, %r275, %r272, %r278}, {%r5226, %r5294}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5445, %r5442}, {%r269, %r275, %r272, %r278}, {%r5235, %r5301}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5454, %r5451}, {%r269, %r275, %r272, %r278}, {%r5244, %r5308}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5463, %r5460}, {%r269, %r275, %r272, %r278}, {%r5253, %r5315}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5472, %r5469}, {%r269, %r275, %r272, %r278}, {%r5262, %r5322}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5481, %r5478}, {%r269, %r275, %r272, %r278}, {%r5271, %r5329}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5490, %r5487}, {%r269, %r275, %r272, %r278}, {%r5280, %r5336}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5420, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5422, %r5420, %r5424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5425, %r281, %r5427, %r5422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5429, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5431, %r5429, %r5433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5434, %r281, %r5436, %r5431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5438, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5440, %r5438, %r5442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5443, %r281, %r5445, %r5440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5447, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5449, %r5447, %r5451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5452, %r281, %r5454, %r5449;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5456, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5458, %r5456, %r5460;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5461, %r281, %r5463, %r5458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5465, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5467, %r5465, %r5469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5470, %r281, %r5472, %r5467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5474, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5476, %r5474, %r5478;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5479, %r281, %r5481, %r5476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5483, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5485, %r5483, %r5487;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5488, %r281, %r5490, %r5485;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5492, %r284, %r5427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5495, %r281, %r5424, %r5492;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5499, %r284, %r5436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5502, %r281, %r5433, %r5499;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5506, %r284, %r5445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5509, %r281, %r5442, %r5506;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5513, %r284, %r5454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5516, %r281, %r5451, %r5513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5520, %r284, %r5463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5523, %r281, %r5460, %r5520;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5527, %r284, %r5472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5530, %r281, %r5469, %r5527;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5534, %r284, %r5481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5537, %r281, %r5478, %r5534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5541, %r284, %r5490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5544, %r281, %r5487, %r5541;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5548, %r5549}, {%r287, %r293, %r290, %r296}, {%r5425, %r5495}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5558, %r5559}, {%r287, %r293, %r290, %r296}, {%r5434, %r5502}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5568, %r5569}, {%r287, %r293, %r290, %r296}, {%r5443, %r5509}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5578, %r5579}, {%r287, %r293, %r290, %r296}, {%r5452, %r5516}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5588, %r5589}, {%r287, %r293, %r290, %r296}, {%r5461, %r5523}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5598, %r5599}, {%r287, %r293, %r290, %r296}, {%r5470, %r5530}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5608, %r5609}, {%r287, %r293, %r290, %r296}, {%r5479, %r5537}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5618, %r5619}, {%r287, %r293, %r290, %r296}, {%r5488, %r5544}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5628, %r55, %r5548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5631, %r55, %r5549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5634, %r55, %r5558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5637, %r55, %r5559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5640, %r55, %r5568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5643, %r55, %r5569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5646, %r55, %r5578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5649, %r55, %r5579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5652, %r55, %r5588;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5655, %r55, %r5589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5658, %r55, %r5598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5661, %r55, %r5599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5664, %r55, %r5608;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5667, %r55, %r5609;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5670, %r55, %r5618;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5673, %r55, %r5619;
	// end inline asm
	// begin inline asm
	mov.b32 %r5676, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5677, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5678, %r5628, %r5676;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5681, %r5678, %r5677;
	// end inline asm
	// begin inline asm
	mov.b32 %r5684, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5685, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5686, %r5631, %r5684;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5689, %r5686, %r5685;
	// end inline asm
	// begin inline asm
	mov.b32 %r5692, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5693, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5694, %r5634, %r5692;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5697, %r5694, %r5693;
	// end inline asm
	// begin inline asm
	mov.b32 %r5700, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5701, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5702, %r5637, %r5700;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5705, %r5702, %r5701;
	// end inline asm
	// begin inline asm
	mov.b32 %r5708, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5709, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5710, %r5640, %r5708;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5713, %r5710, %r5709;
	// end inline asm
	// begin inline asm
	mov.b32 %r5716, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5717, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5718, %r5643, %r5716;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5721, %r5718, %r5717;
	// end inline asm
	// begin inline asm
	mov.b32 %r5724, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5725, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5726, %r5646, %r5724;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5729, %r5726, %r5725;
	// end inline asm
	// begin inline asm
	mov.b32 %r5732, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5733, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5734, %r5649, %r5732;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5737, %r5734, %r5733;
	// end inline asm
	// begin inline asm
	mov.b32 %r5740, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5741, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5742, %r5652, %r5740;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5745, %r5742, %r5741;
	// end inline asm
	// begin inline asm
	mov.b32 %r5748, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5749, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5750, %r5655, %r5748;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5753, %r5750, %r5749;
	// end inline asm
	// begin inline asm
	mov.b32 %r5756, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5757, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5758, %r5658, %r5756;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5761, %r5758, %r5757;
	// end inline asm
	// begin inline asm
	mov.b32 %r5764, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5765, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5766, %r5661, %r5764;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5769, %r5766, %r5765;
	// end inline asm
	// begin inline asm
	mov.b32 %r5772, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5773, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5774, %r5664, %r5772;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5777, %r5774, %r5773;
	// end inline asm
	// begin inline asm
	mov.b32 %r5780, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5781, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5782, %r5667, %r5780;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5785, %r5782, %r5781;
	// end inline asm
	// begin inline asm
	mov.b32 %r5788, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5789, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5790, %r5670, %r5788;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5793, %r5790, %r5789;
	// end inline asm
	// begin inline asm
	mov.b32 %r5796, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5797, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5798, %r5673, %r5796;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5801, %r5798, %r5797;
	// end inline asm
	// begin inline asm
	mov.b32 %r5807, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5805, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5806, %r5807, %r5805;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5809, %r5681, %r5806;
	// end inline asm
	// begin inline asm
	mov.b32 %r5812, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5813, %r5807, %r5812;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5816, %r5689, %r5813;
	// end inline asm
	// begin inline asm
	mov.b32 %r5819, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5820, %r5807, %r5819;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5823, %r5697, %r5820;
	// end inline asm
	// begin inline asm
	mov.b32 %r5826, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5827, %r5807, %r5826;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5830, %r5705, %r5827;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5833, %r5809, %r5823, %r2244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5837, %r5816, %r5830, %r2244;
	// end inline asm
	shl.b32 	%r5844, %r5837, 4;
	// begin inline asm
	lop3.b32 %r5841, %r2250, %r5833, %r5844, 202;
	// end inline asm
	xor.b32  	%r7815, %r5841, -2004318072;
	// begin inline asm
	mov.b32 %r5848, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5846, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5847, %r5848, %r5846;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5850, %r5713, %r5847;
	// end inline asm
	// begin inline asm
	mov.b32 %r5853, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5854, %r5848, %r5853;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5857, %r5721, %r5854;
	// end inline asm
	// begin inline asm
	mov.b32 %r5860, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5861, %r5848, %r5860;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5864, %r5729, %r5861;
	// end inline asm
	// begin inline asm
	mov.b32 %r5867, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5868, %r5848, %r5867;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5871, %r5737, %r5868;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5874, %r5850, %r5864, %r2244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5878, %r5857, %r5871, %r2244;
	// end inline asm
	shl.b32 	%r5885, %r5878, 4;
	// begin inline asm
	lop3.b32 %r5882, %r2250, %r5874, %r5885, 202;
	// end inline asm
	xor.b32  	%r7816, %r5882, -2004318072;
	// begin inline asm
	mov.b32 %r5889, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5887, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5888, %r5889, %r5887;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5891, %r5745, %r5888;
	// end inline asm
	// begin inline asm
	mov.b32 %r5894, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5895, %r5889, %r5894;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5898, %r5753, %r5895;
	// end inline asm
	// begin inline asm
	mov.b32 %r5901, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5902, %r5889, %r5901;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5905, %r5761, %r5902;
	// end inline asm
	// begin inline asm
	mov.b32 %r5908, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5909, %r5889, %r5908;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5912, %r5769, %r5909;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5915, %r5891, %r5905, %r2244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5919, %r5898, %r5912, %r2244;
	// end inline asm
	shl.b32 	%r5926, %r5919, 4;
	// begin inline asm
	lop3.b32 %r5923, %r2250, %r5915, %r5926, 202;
	// end inline asm
	xor.b32  	%r7817, %r5923, -2004318072;
	// begin inline asm
	mov.b32 %r5930, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5928, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5929, %r5930, %r5928;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5932, %r5777, %r5929;
	// end inline asm
	// begin inline asm
	mov.b32 %r5935, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5936, %r5930, %r5935;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5939, %r5785, %r5936;
	// end inline asm
	// begin inline asm
	mov.b32 %r5942, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5943, %r5930, %r5942;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5946, %r5793, %r5943;
	// end inline asm
	// begin inline asm
	mov.b32 %r5949, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5950, %r5930, %r5949;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5953, %r5801, %r5950;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5956, %r5932, %r5946, %r2244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5960, %r5939, %r5953, %r2244;
	// end inline asm
	shl.b32 	%r5967, %r5960, 4;
	// begin inline asm
	lop3.b32 %r5964, %r2250, %r5956, %r5967, 202;
	// end inline asm
	xor.b32  	%r7818, %r5964, -2004318072;
	st.shared.u32 	[%rd145], %r7815;
	st.shared.u32 	[%rd146], %r7816;
	st.shared.u32 	[%rd147], %r7817;
	st.shared.u32 	[%rd148], %r7818;
	ld.shared.u32 	%r7938, [%rd86];
	ld.shared.u32 	%r7937, [%rd88];
	ld.shared.u32 	%r7936, [%rd90];
	ld.shared.u32 	%r7935, [%rd92];
	// begin inline asm
	mov.b32 %r5973, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5984, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5972, %r7938, -2004318072;
	// begin inline asm
	lop3.b32 %r5970, %r583, %r5972, %r5973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5974, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5975, %r5973, %r5974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5978, %r5970, %r5975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5981, %r594, %r5972, %r5984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5985, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5986, %r5984, %r5985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5989, %r5981, %r5986;
	// end inline asm
	shr.u32 	%r5994, %r5972, 8;
	// begin inline asm
	lop3.b32 %r5992, %r583, %r5994, %r5973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5996, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5997, %r5973, %r5996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6000, %r5992, %r5997;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6003, %r594, %r5994, %r5984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6007, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6008, %r5984, %r6007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6011, %r6003, %r6008;
	// end inline asm
	// begin inline asm
	mov.b32 %r6019, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6030, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6018, %r7937, -2004318072;
	// begin inline asm
	lop3.b32 %r6016, %r583, %r6018, %r6019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6020, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6021, %r6019, %r6020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6024, %r6016, %r6021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6027, %r594, %r6018, %r6030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6031, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6032, %r6030, %r6031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6035, %r6027, %r6032;
	// end inline asm
	shr.u32 	%r6040, %r6018, 8;
	// begin inline asm
	lop3.b32 %r6038, %r583, %r6040, %r6019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6042, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6043, %r6019, %r6042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6046, %r6038, %r6043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6049, %r594, %r6040, %r6030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6053, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6054, %r6030, %r6053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6057, %r6049, %r6054;
	// end inline asm
	// begin inline asm
	mov.b32 %r6065, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6076, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6064, %r7936, -2004318072;
	// begin inline asm
	lop3.b32 %r6062, %r583, %r6064, %r6065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6066, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6067, %r6065, %r6066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6070, %r6062, %r6067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6073, %r594, %r6064, %r6076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6077, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6078, %r6076, %r6077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6081, %r6073, %r6078;
	// end inline asm
	shr.u32 	%r6086, %r6064, 8;
	// begin inline asm
	lop3.b32 %r6084, %r583, %r6086, %r6065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6088, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6089, %r6065, %r6088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6092, %r6084, %r6089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6095, %r594, %r6086, %r6076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6099, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6100, %r6076, %r6099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6103, %r6095, %r6100;
	// end inline asm
	// begin inline asm
	mov.b32 %r6111, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6122, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6110, %r7935, -2004318072;
	// begin inline asm
	lop3.b32 %r6108, %r583, %r6110, %r6111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6112, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6113, %r6111, %r6112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6116, %r6108, %r6113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6119, %r594, %r6110, %r6122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6123, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6124, %r6122, %r6123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6127, %r6119, %r6124;
	// end inline asm
	shr.u32 	%r6132, %r6110, 8;
	// begin inline asm
	lop3.b32 %r6130, %r583, %r6132, %r6111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6134, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6135, %r6111, %r6134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6138, %r6130, %r6135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6141, %r594, %r6132, %r6122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6145, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6146, %r6122, %r6145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6149, %r6141, %r6146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6152, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6154, %r6152, %r5978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6157, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6159, %r6157, %r5989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6162, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6164, %r6162, %r6000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6167, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6169, %r6167, %r6011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6172, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6174, %r6172, %r6024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6177, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6179, %r6177, %r6035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6182, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6184, %r6182, %r6046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6187, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6189, %r6187, %r6057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6192, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6194, %r6192, %r6070;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6197, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6199, %r6197, %r6081;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6202, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6204, %r6202, %r6092;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6207, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6209, %r6207, %r6103;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6212, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6214, %r6212, %r6116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6217, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6219, %r6217, %r6127;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6222, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6224, %r6222, %r6138;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6227, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6229, %r6227, %r6149;
	// end inline asm
	// begin inline asm
	mov.b32 %r6237, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6248, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6234, %r583, %r584, %r6237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6238, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6239, %r6237, %r6238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6242, %r6234, %r6239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6245, %r594, %r584, %r6248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6249, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6250, %r6248, %r6249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6253, %r6245, %r6250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6256, %r583, %r606, %r6237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6260, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6261, %r6237, %r6260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6264, %r6256, %r6261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6267, %r594, %r606, %r6248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6271, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6272, %r6248, %r6271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6275, %r6267, %r6272;
	// end inline asm
	// begin inline asm
	mov.b32 %r6283, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6294, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6280, %r583, %r630, %r6283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6284, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6285, %r6283, %r6284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6288, %r6280, %r6285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6291, %r594, %r630, %r6294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6295, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6296, %r6294, %r6295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6299, %r6291, %r6296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6302, %r583, %r652, %r6283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6306, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6307, %r6283, %r6306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6310, %r6302, %r6307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6313, %r594, %r652, %r6294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6317, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6318, %r6294, %r6317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6321, %r6313, %r6318;
	// end inline asm
	// begin inline asm
	mov.b32 %r6329, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6340, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6326, %r583, %r676, %r6329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6330, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6331, %r6329, %r6330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6334, %r6326, %r6331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6337, %r594, %r676, %r6340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6341, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6342, %r6340, %r6341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6345, %r6337, %r6342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6348, %r583, %r698, %r6329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6352, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6353, %r6329, %r6352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6356, %r6348, %r6353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6359, %r594, %r698, %r6340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6363, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6364, %r6340, %r6363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6367, %r6359, %r6364;
	// end inline asm
	// begin inline asm
	mov.b32 %r6375, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6386, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6372, %r583, %r722, %r6375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6376, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6377, %r6375, %r6376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6380, %r6372, %r6377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6383, %r594, %r722, %r6386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6387, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6388, %r6386, %r6387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6391, %r6383, %r6388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6394, %r583, %r744, %r6375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6398, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6399, %r6375, %r6398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6402, %r6394, %r6399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6405, %r594, %r744, %r6386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6409, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6410, %r6386, %r6409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6413, %r6405, %r6410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6416, %r167, %r6242, %r6154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6420, %r167, %r6253, %r6159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6424, %r167, %r6264, %r6164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6428, %r167, %r6275, %r6169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6432, %r167, %r6288, %r6174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6436, %r167, %r6299, %r6179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6440, %r167, %r6310, %r6184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6444, %r167, %r6321, %r6189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6448, %r167, %r6334, %r6194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6452, %r167, %r6345, %r6199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6456, %r167, %r6356, %r6204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6460, %r167, %r6367, %r6209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6464, %r167, %r6380, %r6214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6468, %r167, %r6391, %r6219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6472, %r167, %r6402, %r6224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6476, %r167, %r6413, %r6229;
	// end inline asm
	// begin inline asm
	mov.b32 %r6485, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6496, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6482, %r583, %r2380, %r6485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6486, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6487, %r6485, %r6486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6490, %r6482, %r6487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6493, %r594, %r2380, %r6496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6497, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6498, %r6496, %r6497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6501, %r6493, %r6498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6504, %r583, %r2402, %r6485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6508, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6509, %r6485, %r6508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6512, %r6504, %r6509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6515, %r594, %r2402, %r6496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6519, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6520, %r6496, %r6519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6523, %r6515, %r6520;
	// end inline asm
	// begin inline asm
	mov.b32 %r6531, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6542, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6528, %r583, %r2426, %r6531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6532, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6533, %r6531, %r6532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6536, %r6528, %r6533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6539, %r594, %r2426, %r6542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6543, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6544, %r6542, %r6543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6547, %r6539, %r6544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6550, %r583, %r2448, %r6531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6554, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6555, %r6531, %r6554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6558, %r6550, %r6555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6561, %r594, %r2448, %r6542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6565, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6566, %r6542, %r6565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6569, %r6561, %r6566;
	// end inline asm
	// begin inline asm
	mov.b32 %r6577, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6588, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6574, %r583, %r2472, %r6577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6578, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6579, %r6577, %r6578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6582, %r6574, %r6579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6585, %r594, %r2472, %r6588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6589, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6590, %r6588, %r6589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6593, %r6585, %r6590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6596, %r583, %r2494, %r6577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6600, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6601, %r6577, %r6600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6604, %r6596, %r6601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6607, %r594, %r2494, %r6588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6611, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6612, %r6588, %r6611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6615, %r6607, %r6612;
	// end inline asm
	// begin inline asm
	mov.b32 %r6623, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6634, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6620, %r583, %r2518, %r6623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6624, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6625, %r6623, %r6624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6628, %r6620, %r6625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6631, %r594, %r2518, %r6634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6635, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6636, %r6634, %r6635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6639, %r6631, %r6636;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6642, %r583, %r2540, %r6623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6646, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6647, %r6623, %r6646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6650, %r6642, %r6647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6653, %r594, %r2540, %r6634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6657, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6658, %r6634, %r6657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6661, %r6653, %r6658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6664, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6666, %r6664, %r6490, %r6416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6670, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6672, %r6670, %r6501, %r6420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6676, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6678, %r6676, %r6512, %r6424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6682, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6684, %r6682, %r6523, %r6428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6688, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6690, %r6688, %r6536, %r6432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6694, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6696, %r6694, %r6547, %r6436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6700, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6702, %r6700, %r6558, %r6440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6706, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6708, %r6706, %r6569, %r6444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6712, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6714, %r6712, %r6582, %r6448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6718, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6720, %r6718, %r6593, %r6452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6724, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6726, %r6724, %r6604, %r6456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6730, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6732, %r6730, %r6615, %r6460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6736, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6738, %r6736, %r6628, %r6464;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6742, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6744, %r6742, %r6639, %r6468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6748, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6750, %r6748, %r6650, %r6472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6754, %r198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6756, %r6754, %r6661, %r6476;
	// end inline asm
	// begin inline asm
	mov.b32 %r6765, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6776, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6762, %r583, %r4176, %r6765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6766, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6767, %r6765, %r6766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6770, %r6762, %r6767;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6773, %r594, %r4176, %r6776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6777, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6778, %r6776, %r6777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6781, %r6773, %r6778;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6784, %r583, %r4198, %r6765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6788, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6789, %r6765, %r6788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6792, %r6784, %r6789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6795, %r594, %r4198, %r6776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6799, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6800, %r6776, %r6799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6803, %r6795, %r6800;
	// end inline asm
	// begin inline asm
	mov.b32 %r6811, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6822, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6808, %r583, %r4222, %r6811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6812, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6813, %r6811, %r6812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6816, %r6808, %r6813;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6819, %r594, %r4222, %r6822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6823, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6824, %r6822, %r6823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6827, %r6819, %r6824;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6830, %r583, %r4244, %r6811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6834, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6835, %r6811, %r6834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6838, %r6830, %r6835;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6841, %r594, %r4244, %r6822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6845, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6846, %r6822, %r6845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6849, %r6841, %r6846;
	// end inline asm
	// begin inline asm
	mov.b32 %r6857, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6868, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6854, %r583, %r4268, %r6857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6858, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6859, %r6857, %r6858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6862, %r6854, %r6859;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6865, %r594, %r4268, %r6868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6869, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6870, %r6868, %r6869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6873, %r6865, %r6870;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6876, %r583, %r4290, %r6857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6880, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6881, %r6857, %r6880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6884, %r6876, %r6881;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6887, %r594, %r4290, %r6868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6891, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6892, %r6868, %r6891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6895, %r6887, %r6892;
	// end inline asm
	// begin inline asm
	mov.b32 %r6903, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6914, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6900, %r583, %r4314, %r6903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6904, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6905, %r6903, %r6904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6908, %r6900, %r6905;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6911, %r594, %r4314, %r6914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6915, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6916, %r6914, %r6915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6919, %r6911, %r6916;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6922, %r583, %r4336, %r6903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6926, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6927, %r6903, %r6926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6930, %r6922, %r6927;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6933, %r594, %r4336, %r6914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6937, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6938, %r6914, %r6937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6941, %r6933, %r6938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7015, %r229, %r6770, %r6666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7012, %r229, %r6781, %r6672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7024, %r229, %r6792, %r6678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7021, %r229, %r6803, %r6684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7033, %r229, %r6816, %r6690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7030, %r229, %r6827, %r6696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7042, %r229, %r6838, %r6702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7039, %r229, %r6849, %r6708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7051, %r229, %r6862, %r6714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7048, %r229, %r6873, %r6720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7060, %r229, %r6884, %r6726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7057, %r229, %r6895, %r6732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7069, %r229, %r6908, %r6738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7066, %r229, %r6919, %r6744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7078, %r229, %r6930, %r6750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7075, %r229, %r6941, %r6756;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7008, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7010, %r7008, %r7012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7013, %r263, %r7015, %r7010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7017, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7019, %r7017, %r7021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7022, %r263, %r7024, %r7019;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7026, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7028, %r7026, %r7030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7031, %r263, %r7033, %r7028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7035, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7037, %r7035, %r7039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7040, %r263, %r7042, %r7037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7044, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7046, %r7044, %r7048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7049, %r263, %r7051, %r7046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7053, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7055, %r7053, %r7057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7058, %r263, %r7060, %r7055;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7062, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7064, %r7062, %r7066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7067, %r263, %r7069, %r7064;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7071, %r266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7073, %r7071, %r7075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7076, %r263, %r7078, %r7073;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7080, %r266, %r7015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7083, %r263, %r7012, %r7080;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7087, %r266, %r7024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7090, %r263, %r7021, %r7087;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7094, %r266, %r7033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7097, %r263, %r7030, %r7094;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7101, %r266, %r7042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7104, %r263, %r7039, %r7101;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7108, %r266, %r7051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7111, %r263, %r7048, %r7108;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7115, %r266, %r7060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7118, %r263, %r7057, %r7115;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7122, %r266, %r7069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7125, %r263, %r7066, %r7122;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7129, %r266, %r7078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7132, %r263, %r7075, %r7129;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7223, %r7220}, {%r269, %r275, %r272, %r278}, {%r7013, %r7083}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7232, %r7229}, {%r269, %r275, %r272, %r278}, {%r7022, %r7090}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7241, %r7238}, {%r269, %r275, %r272, %r278}, {%r7031, %r7097}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7250, %r7247}, {%r269, %r275, %r272, %r278}, {%r7040, %r7104}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7259, %r7256}, {%r269, %r275, %r272, %r278}, {%r7049, %r7111}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7268, %r7265}, {%r269, %r275, %r272, %r278}, {%r7058, %r7118}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7277, %r7274}, {%r269, %r275, %r272, %r278}, {%r7067, %r7125}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7286, %r7283}, {%r269, %r275, %r272, %r278}, {%r7076, %r7132}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7216, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7218, %r7216, %r7220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7221, %r281, %r7223, %r7218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7225, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7227, %r7225, %r7229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7230, %r281, %r7232, %r7227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7234, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7236, %r7234, %r7238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7239, %r281, %r7241, %r7236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7243, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7245, %r7243, %r7247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7248, %r281, %r7250, %r7245;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7252, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7254, %r7252, %r7256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7257, %r281, %r7259, %r7254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7261, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7263, %r7261, %r7265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7266, %r281, %r7268, %r7263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7270, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7272, %r7270, %r7274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7275, %r281, %r7277, %r7272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7279, %r284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7281, %r7279, %r7283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7284, %r281, %r7286, %r7281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7288, %r284, %r7223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7291, %r281, %r7220, %r7288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7295, %r284, %r7232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7298, %r281, %r7229, %r7295;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7302, %r284, %r7241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7305, %r281, %r7238, %r7302;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7309, %r284, %r7250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7312, %r281, %r7247, %r7309;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7316, %r284, %r7259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7319, %r281, %r7256, %r7316;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7323, %r284, %r7268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7326, %r281, %r7265, %r7323;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7330, %r284, %r7277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7333, %r281, %r7274, %r7330;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7337, %r284, %r7286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7340, %r281, %r7283, %r7337;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7344, %r7345}, {%r287, %r293, %r290, %r296}, {%r7221, %r7291}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7354, %r7355}, {%r287, %r293, %r290, %r296}, {%r7230, %r7298}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7364, %r7365}, {%r287, %r293, %r290, %r296}, {%r7239, %r7305}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7374, %r7375}, {%r287, %r293, %r290, %r296}, {%r7248, %r7312}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7384, %r7385}, {%r287, %r293, %r290, %r296}, {%r7257, %r7319}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7394, %r7395}, {%r287, %r293, %r290, %r296}, {%r7266, %r7326}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7404, %r7405}, {%r287, %r293, %r290, %r296}, {%r7275, %r7333}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7414, %r7415}, {%r287, %r293, %r290, %r296}, {%r7284, %r7340}, {%r7918, %r7918};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7424, %r55, %r7344;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7427, %r55, %r7345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7430, %r55, %r7354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7433, %r55, %r7355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7436, %r55, %r7364;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7439, %r55, %r7365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7442, %r55, %r7374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7445, %r55, %r7375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7448, %r55, %r7384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7451, %r55, %r7385;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7454, %r55, %r7394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7457, %r55, %r7395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7460, %r55, %r7404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7463, %r55, %r7405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7466, %r55, %r7414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7469, %r55, %r7415;
	// end inline asm
	// begin inline asm
	mov.b32 %r7472, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7473, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7474, %r7424, %r7472;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7477, %r7474, %r7473;
	// end inline asm
	// begin inline asm
	mov.b32 %r7480, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7481, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7482, %r7427, %r7480;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7485, %r7482, %r7481;
	// end inline asm
	// begin inline asm
	mov.b32 %r7488, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7489, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7490, %r7430, %r7488;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7493, %r7490, %r7489;
	// end inline asm
	// begin inline asm
	mov.b32 %r7496, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7497, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7498, %r7433, %r7496;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7501, %r7498, %r7497;
	// end inline asm
	// begin inline asm
	mov.b32 %r7504, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7505, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7506, %r7436, %r7504;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7509, %r7506, %r7505;
	// end inline asm
	// begin inline asm
	mov.b32 %r7512, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7513, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7514, %r7439, %r7512;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7517, %r7514, %r7513;
	// end inline asm
	// begin inline asm
	mov.b32 %r7520, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7521, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7522, %r7442, %r7520;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7525, %r7522, %r7521;
	// end inline asm
	// begin inline asm
	mov.b32 %r7528, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7529, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7530, %r7445, %r7528;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7533, %r7530, %r7529;
	// end inline asm
	// begin inline asm
	mov.b32 %r7536, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7537, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7538, %r7448, %r7536;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7541, %r7538, %r7537;
	// end inline asm
	// begin inline asm
	mov.b32 %r7544, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7545, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7546, %r7451, %r7544;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7549, %r7546, %r7545;
	// end inline asm
	// begin inline asm
	mov.b32 %r7552, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7553, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7554, %r7454, %r7552;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7557, %r7554, %r7553;
	// end inline asm
	// begin inline asm
	mov.b32 %r7560, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7561, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7562, %r7457, %r7560;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7565, %r7562, %r7561;
	// end inline asm
	// begin inline asm
	mov.b32 %r7568, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7569, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7570, %r7460, %r7568;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7573, %r7570, %r7569;
	// end inline asm
	// begin inline asm
	mov.b32 %r7576, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7577, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7578, %r7463, %r7576;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7581, %r7578, %r7577;
	// end inline asm
	// begin inline asm
	mov.b32 %r7584, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7585, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7586, %r7466, %r7584;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7589, %r7586, %r7585;
	// end inline asm
	// begin inline asm
	mov.b32 %r7592, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7593, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7594, %r7469, %r7592;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7597, %r7594, %r7593;
	// end inline asm
	// begin inline asm
	mov.b32 %r7603, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7601, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7602, %r7603, %r7601;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7605, %r7477, %r7602;
	// end inline asm
	// begin inline asm
	mov.b32 %r7608, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7609, %r7603, %r7608;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7612, %r7485, %r7609;
	// end inline asm
	// begin inline asm
	mov.b32 %r7615, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7616, %r7603, %r7615;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7619, %r7493, %r7616;
	// end inline asm
	// begin inline asm
	mov.b32 %r7622, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7623, %r7603, %r7622;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7626, %r7501, %r7623;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7629, %r7605, %r7619, %r2244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7633, %r7612, %r7626, %r2244;
	// end inline asm
	shl.b32 	%r7640, %r7633, 4;
	// begin inline asm
	lop3.b32 %r7637, %r2250, %r7629, %r7640, 202;
	// end inline asm
	xor.b32  	%r7819, %r7637, -2004318072;
	// begin inline asm
	mov.b32 %r7644, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7642, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7643, %r7644, %r7642;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7646, %r7509, %r7643;
	// end inline asm
	// begin inline asm
	mov.b32 %r7649, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7650, %r7644, %r7649;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7653, %r7517, %r7650;
	// end inline asm
	// begin inline asm
	mov.b32 %r7656, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7657, %r7644, %r7656;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7660, %r7525, %r7657;
	// end inline asm
	// begin inline asm
	mov.b32 %r7663, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7664, %r7644, %r7663;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7667, %r7533, %r7664;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7670, %r7646, %r7660, %r2244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7674, %r7653, %r7667, %r2244;
	// end inline asm
	shl.b32 	%r7681, %r7674, 4;
	// begin inline asm
	lop3.b32 %r7678, %r2250, %r7670, %r7681, 202;
	// end inline asm
	xor.b32  	%r7820, %r7678, -2004318072;
	// begin inline asm
	mov.b32 %r7685, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7683, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7684, %r7685, %r7683;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7687, %r7541, %r7684;
	// end inline asm
	// begin inline asm
	mov.b32 %r7690, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7691, %r7685, %r7690;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7694, %r7549, %r7691;
	// end inline asm
	// begin inline asm
	mov.b32 %r7697, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7698, %r7685, %r7697;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7701, %r7557, %r7698;
	// end inline asm
	// begin inline asm
	mov.b32 %r7704, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7705, %r7685, %r7704;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7708, %r7565, %r7705;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7711, %r7687, %r7701, %r2244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7715, %r7694, %r7708, %r2244;
	// end inline asm
	shl.b32 	%r7722, %r7715, 4;
	// begin inline asm
	lop3.b32 %r7719, %r2250, %r7711, %r7722, 202;
	// end inline asm
	xor.b32  	%r7821, %r7719, -2004318072;
	// begin inline asm
	mov.b32 %r7726, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7724, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7725, %r7726, %r7724;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7728, %r7573, %r7725;
	// end inline asm
	// begin inline asm
	mov.b32 %r7731, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7732, %r7726, %r7731;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7735, %r7581, %r7732;
	// end inline asm
	// begin inline asm
	mov.b32 %r7738, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7739, %r7726, %r7738;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7742, %r7589, %r7739;
	// end inline asm
	// begin inline asm
	mov.b32 %r7745, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7746, %r7726, %r7745;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7749, %r7597, %r7746;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7752, %r7728, %r7742, %r2244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7756, %r7735, %r7749, %r2244;
	// end inline asm
	shl.b32 	%r7763, %r7756, 4;
	// begin inline asm
	lop3.b32 %r7760, %r2250, %r7752, %r7763, 202;
	// end inline asm
	xor.b32  	%r7822, %r7760, -2004318072;
	st.shared.u32 	[%rd145], %r7819;
	st.shared.u32 	[%rd146], %r7820;
	st.shared.u32 	[%rd147], %r7821;
	st.shared.u32 	[%rd148], %r7822;
	add.s32 	%r7934, %r7934, 64;
	add.s64 	%rd148, %rd148, 8324;
	add.s64 	%rd147, %rd147, 8324;
	add.s64 	%rd146, %rd146, 8324;
	add.s64 	%rd145, %rd145, 8324;
	add.s32 	%r7933, %r7933, 1;
	setp.eq.s32 	%p164, %r7934, 256;
	@%p164 bra 	$L__BB0_31;
	bra.uni 	$L__BB0_30;
$L__BB0_31:                             // %guard_exit17471
                                        //   in Loop: Header=BB0_29 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7828, [%rd5];
	ld.shared.u32 	%r7829, [%rd6+128];
	ld.shared.u32 	%r7836, [%rd6+4];
	ld.shared.u32 	%r7837, [%rd6+132];
	ld.shared.u32 	%r7844, [%rd5+8324];
	ld.shared.u32 	%r7845, [%rd6+8452];
	ld.shared.u32 	%r7852, [%rd6+8328];
	ld.shared.u32 	%r7853, [%rd6+8456];
	ld.shared.u32 	%r7860, [%rd5+16648];
	ld.shared.u32 	%r7861, [%rd6+16776];
	ld.shared.u32 	%r7868, [%rd6+16652];
	ld.shared.u32 	%r7869, [%rd6+16780];
	ld.shared.u32 	%r7876, [%rd5+24972];
	ld.shared.u32 	%r7877, [%rd6+25100];
	ld.shared.u32 	%r7884, [%rd6+24976];
	ld.shared.u32 	%r7885, [%rd6+25104];
	// begin inline asm
	prmt.b32 %r7823, %r7828, %r7829, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7827, %r7828, %r7829, %r496;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7831, %r7836, %r7837, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7835, %r7836, %r7837, %r496;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7839, %r7844, %r7845, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7843, %r7844, %r7845, %r496;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7847, %r7852, %r7853, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7851, %r7852, %r7853, %r496;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7855, %r7860, %r7861, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7859, %r7860, %r7861, %r496;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7863, %r7868, %r7869, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7867, %r7868, %r7869, %r496;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7871, %r7876, %r7877, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7875, %r7876, %r7877, %r496;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7879, %r7884, %r7885, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7883, %r7884, %r7885, %r496;
	// end inline asm
	selp.b32 	%r7887, %r7827, %r7823, %p151;
	shfl.sync.bfly.b32	%r98, %r7887, 8, 31, -1;
	selp.b32 	%r7888, %r7835, %r7831, %p151;
	shfl.sync.bfly.b32	%r99, %r7888, 8, 31, -1;
	selp.b32 	%r7889, %r7843, %r7839, %p151;
	shfl.sync.bfly.b32	%r7890, %r7889, 8, 31, -1;
	selp.b32 	%r7891, %r7851, %r7847, %p151;
	shfl.sync.bfly.b32	%r7892, %r7891, 8, 31, -1;
	selp.b32 	%r7893, %r7859, %r7855, %p151;
	shfl.sync.bfly.b32	%r7894, %r7893, 8, 31, -1;
	selp.b32 	%r7895, %r7867, %r7863, %p151;
	shfl.sync.bfly.b32	%r7896, %r7895, 8, 31, -1;
	selp.b32 	%r7897, %r7875, %r7871, %p151;
	shfl.sync.bfly.b32	%r7898, %r7897, 8, 31, -1;
	selp.b32 	%r7899, %r7883, %r7879, %p151;
	shfl.sync.bfly.b32	%r7900, %r7899, 8, 31, -1;
	setp.eq.s32 	%p166, %r45, 0;
	shl.b32 	%r7919, %r44, 9;
	@%p166 bra 	$L__BB0_33;
// %bb.32:                              // %pass16657
                                        //   in Loop: Header=BB0_29 Depth=1
	selp.b32 	%r7901, %r99, %r7835, %p151;
	selp.b32 	%r7902, %r7831, %r99, %p151;
	selp.b32 	%r7903, %r98, %r7827, %p151;
	selp.b32 	%r7904, %r7823, %r98, %p151;
	or.b32  	%r7906, %r31, %r7919;
	cvt.u64.u32 	%rd93, %r7906;
	add.s64 	%rd94, %rd93, %rd7;
	shr.u64 	%rd95, %rd94, 39;
	add.s64 	%rd96, %rd94, %rd95;
	shr.s64 	%rd97, %rd96, 25;
	setp.lt.s64 	%p168, %rd94, 0;
	and.b64  	%rd98, %rd96, -33554432;
	setp.ne.s64 	%p169, %rd98, %rd94;
	and.pred  	%p170, %p168, %p169;
	selp.u64 	%rd99, 1, 0, %p170;
	sub.s64 	%rd100, %rd99, %rd97;
	shl.b64 	%rd101, %rd100, 25;
	add.s64 	%rd102, %rd101, %rd94;
	shl.b64 	%rd103, %rd102, 2;
	add.s64 	%rd104, %rd3, %rd103;
	st.global.v4.u32 	[%rd104], {%r7904, %r7902, %r7903, %r7901};
$L__BB0_33:                             // %pass16670
                                        //   in Loop: Header=BB0_29 Depth=1
	or.b32  	%r92, %r44, 64;
	setp.lt.u32 	%p171, %r92, 192;
	@%p171 bra 	$L__BB0_35;
// %bb.34:                              // %pass16764
                                        //   in Loop: Header=BB0_29 Depth=1
	selp.b32 	%r100, %r7839, %r7890, %p151;
	selp.b32 	%r101, %r7890, %r7843, %p151;
	selp.b32 	%r102, %r7847, %r7892, %p151;
	selp.b32 	%r103, %r7892, %r7851, %p151;
	shl.b32 	%r7907, %r92, 9;
	or.b32  	%r7908, %r31, %r7907;
	cvt.u64.u32 	%rd105, %r7908;
	add.s64 	%rd106, %rd105, %rd7;
	shr.u64 	%rd107, %rd106, 39;
	add.s64 	%rd108, %rd106, %rd107;
	shr.s64 	%rd109, %rd108, 25;
	setp.lt.s64 	%p172, %rd106, 0;
	and.b64  	%rd110, %rd108, -33554432;
	setp.ne.s64 	%p173, %rd110, %rd106;
	and.pred  	%p174, %p172, %p173;
	selp.u64 	%rd111, 1, 0, %p174;
	sub.s64 	%rd112, %rd111, %rd109;
	shl.b64 	%rd113, %rd112, 25;
	add.s64 	%rd114, %rd113, %rd106;
	shl.b64 	%rd115, %rd114, 2;
	add.s64 	%rd116, %rd3, %rd115;
	st.global.v4.u32 	[%rd116], {%r100, %r102, %r101, %r103};
$L__BB0_35:                             // %pass16777
                                        //   in Loop: Header=BB0_29 Depth=1
	or.b32  	%r93, %r44, 128;
	selp.b32 	%r108, %r7871, %r7898, %p151;
	selp.b32 	%r109, %r7898, %r7875, %p151;
	selp.b32 	%r110, %r7879, %r7900, %p151;
	selp.b32 	%r111, %r7900, %r7883, %p151;
	setp.lt.u32 	%p175, %r93, 192;
	@%p175 bra 	$L__BB0_37;
// %bb.36:                              // %pass16871
                                        //   in Loop: Header=BB0_29 Depth=1
	selp.b32 	%r104, %r7855, %r7894, %p151;
	selp.b32 	%r105, %r7894, %r7859, %p151;
	selp.b32 	%r106, %r7863, %r7896, %p151;
	selp.b32 	%r107, %r7896, %r7867, %p151;
	shl.b32 	%r7909, %r93, 9;
	or.b32  	%r7910, %r31, %r7909;
	cvt.u64.u32 	%rd117, %r7910;
	add.s64 	%rd118, %rd117, %rd7;
	shr.u64 	%rd119, %rd118, 39;
	add.s64 	%rd120, %rd118, %rd119;
	shr.s64 	%rd121, %rd120, 25;
	setp.lt.s64 	%p176, %rd118, 0;
	and.b64  	%rd122, %rd120, -33554432;
	setp.ne.s64 	%p177, %rd122, %rd118;
	and.pred  	%p178, %p176, %p177;
	selp.u64 	%rd123, 1, 0, %p178;
	sub.s64 	%rd124, %rd123, %rd121;
	shl.b64 	%rd125, %rd124, 25;
	add.s64 	%rd126, %rd125, %rd118;
	shl.b64 	%rd127, %rd126, 2;
	add.s64 	%rd128, %rd3, %rd127;
	st.global.v4.u32 	[%rd128], {%r104, %r106, %r105, %r107};
	bra.uni 	$L__BB0_37;
$L__BB0_38:                             // %L40519
	st.global.u32 	[%rd4], %r7918;
	ret;
$L__BB0_7:                              // %L167
	mov.u32 	%r7917, 2;
	st.global.u32 	[%rd4], %r7917;
	mov.u64 	%rd143, exception3423;
	cvta.global.u64 	%rd144, %rd143;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd144;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r112;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r7916, 3;
	st.global.u32 	[%rd4], %r7916;
	mov.u64 	%rd141, exception3423;
	cvta.global.u64 	%rd142, %rd141;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd142;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r112;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd40, exception1;
	cvta.global.u64 	%rd41, %rd40;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd41;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r112;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
