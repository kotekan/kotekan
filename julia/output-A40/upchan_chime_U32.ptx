// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2098[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception12118[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<238>;
	.reg .b16 	%rs<297>;
	.reg .b32 	%r<2559>;
	.reg .f32 	%f<847>;
	.reg .b64 	%rd<165>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r139, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd38, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r146, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r146, 67839;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd39, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r140, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r147, %r1, 9;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r148, %r3, %r4;
	or.b32  	%r149, %r148, %r147;
	mul.wide.u32 	%rd45, %r149, 4;
	add.s64 	%rd4, %rd39, %rd45;
	mov.u32 	%r150, 1;
	st.global.u32 	[%rd4], %r150;
	setp.gt.u32 	%p2, %r140, 8191;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L119
	ld.param.u32 	%r141, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r141, %r140;
	setp.gt.s32 	%p4, %r141, 16383;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L126
	ld.param.u32 	%r142, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r151, %r141, %r140;
	and.b32  	%r152, %r151, 255;
	setp.ne.s32 	%p6, %r152, 0;
	setp.gt.u32 	%p7, %r142, 255;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L137
	ld.param.u32 	%r143, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r143, %r142;
	setp.gt.s32 	%p10, %r143, 511;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L144
	sub.s32 	%r153, %r143, %r142;
	add.s32 	%r154, %r153, 3;
	and.b32  	%r155, %r154, 7;
	setp.eq.s32 	%p12, %r155, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r144, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r144, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r145, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r144, %r145;
	setp.lt.s32 	%p15, %r145, 17;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass171
	bfe.u32 	%r76, %r4, 1, 1;
	and.b32  	%r77, %r4, 1;
	bfe.u32 	%r78, %r4, 2, 1;
	shl.b32 	%r159, %r78, 1;
	shl.b32 	%r160, %r77, 2;
	shl.b32 	%r161, %r76, 3;
	or.b32  	%r162, %r160, %r161;
	or.b32  	%r163, %r159, %r162;
	shr.u32 	%r79, %r4, 4;
	or.b32  	%r80, %r79, %r163;
	or.b32  	%r81, %r80, 16;
	mov.f32 	%f148, 0f40000000;
	mov.f32 	%f149, 0f42FE0000;
	div.approx.f32 	%f86, %f149, %f148;
	cvt.rn.f32.s32 	%f150, %r80;
	sub.f32 	%f151, %f150, %f86;
	mov.f32 	%f180, 0f42000000;
	div.approx.f32 	%f88, %f151, %f180;
	setp.ne.f32 	%p22, %f88, 0f00000000;
	mov.f32 	%f822, 0f3F800000;
	mov.f32 	%f815, %f822;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L581
	sin.approx.f32 	%f181, %f88;
	div.approx.f32 	%f815, %f181, %f88;
$L__BB0_13:                             // %L584
	cvt.rn.f32.s32 	%f184, %r81;
	sub.f32 	%f185, %f184, %f86;
	div.approx.f32 	%f5, %f185, %f180;
	setp.eq.f32 	%p28, %f5, 0f00000000;
	mov.f32 	%f816, %f822;
	@%p28 bra 	$L__BB0_15;
// %bb.14:                              // %L601
	sin.approx.f32 	%f215, %f5;
	div.approx.f32 	%f816, %f215, %f5;
$L__BB0_15:                             // %L604
	or.b32  	%r181, %r80, 32;
	or.b32  	%r6, %r80, 48;
	cvt.rn.f32.s32 	%f219, %r181;
	sub.f32 	%f220, %f219, %f86;
	div.approx.f32 	%f9, %f220, %f180;
	setp.eq.f32 	%p34, %f9, 0f00000000;
	mov.f32 	%f817, %f822;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L683
	sin.approx.f32 	%f250, %f9;
	div.approx.f32 	%f817, %f250, %f9;
$L__BB0_17:                             // %L686
	cvt.rn.f32.s32 	%f253, %r6;
	sub.f32 	%f254, %f253, %f86;
	div.approx.f32 	%f14, %f254, %f180;
	setp.eq.f32 	%p40, %f14, 0f00000000;
	mov.f32 	%f818, %f822;
	@%p40 bra 	$L__BB0_19;
// %bb.18:                              // %L703
	sin.approx.f32 	%f284, %f14;
	div.approx.f32 	%f818, %f284, %f14;
$L__BB0_19:                             // %L706
	or.b32  	%r199, %r80, 64;
	or.b32  	%r8, %r80, 80;
	cvt.rn.f32.s32 	%f288, %r199;
	sub.f32 	%f289, %f288, %f86;
	div.approx.f32 	%f18, %f289, %f180;
	setp.eq.f32 	%p46, %f18, 0f00000000;
	mov.f32 	%f819, %f822;
	@%p46 bra 	$L__BB0_21;
// %bb.20:                              // %L785
	sin.approx.f32 	%f319, %f18;
	div.approx.f32 	%f819, %f319, %f18;
$L__BB0_21:                             // %L788
	cvt.rn.f32.s32 	%f322, %r8;
	sub.f32 	%f323, %f322, %f86;
	div.approx.f32 	%f23, %f323, %f180;
	setp.eq.f32 	%p52, %f23, 0f00000000;
	mov.f32 	%f820, %f822;
	@%p52 bra 	$L__BB0_23;
// %bb.22:                              // %L805
	sin.approx.f32 	%f353, %f23;
	div.approx.f32 	%f820, %f353, %f23;
$L__BB0_23:                             // %L808
	or.b32  	%r217, %r80, 96;
	or.b32  	%r10, %r80, 112;
	cvt.rn.f32.s32 	%f357, %r217;
	sub.f32 	%f358, %f357, %f86;
	div.approx.f32 	%f27, %f358, %f180;
	setp.eq.f32 	%p58, %f27, 0f00000000;
	mov.f32 	%f821, %f822;
	@%p58 bra 	$L__BB0_25;
// %bb.24:                              // %L887
	sin.approx.f32 	%f388, %f27;
	div.approx.f32 	%f821, %f388, %f27;
$L__BB0_25:                             // %L890
	shr.u32 	%r75, %r4, 1;
	cvt.rn.f32.s32 	%f391, %r10;
	sub.f32 	%f392, %f391, %f86;
	div.approx.f32 	%f32, %f392, %f180;
	setp.eq.f32 	%p64, %f32, 0f00000000;
	@%p64 bra 	$L__BB0_27;
// %bb.26:                              // %L907
	sin.approx.f32 	%f422, %f32;
	div.approx.f32 	%f822, %f422, %f32;
$L__BB0_27:                             // %L910
	shr.u32 	%r14, %r4, 3;
	and.b32  	%r261, %r14, 2;
	and.b32  	%r262, %r75, 4;
	or.b32  	%r15, %r78, %r261;
	or.b32  	%r16, %r15, %r262;
	and.b32  	%r263, %r4, 3;
	mul.lo.s32 	%r264, %r263, %r16;
	shl.b32 	%r265, %r264, 1;
	neg.s32 	%r266, %r265;
	cvt.rn.f32.s32 	%f493, %r266;
	mov.f32 	%f494, 0f41000000;
	div.approx.f32 	%f35, %f493, %f494;
	abs.f32 	%f837, %f35;
	setp.lt.f32 	%p79, %f837, 0f40000000;
	@%p79 bra 	$L__BB0_98;
// %bb.28:
	setp.gtu.f32 	%p80, %f837, 0f4B800000;
	@%p80 bra 	$L__BB0_94;
	bra.uni 	$L__BB0_29;
$L__BB0_94:
	mov.b32 	%r83, %f837;
	and.b32  	%r267, %r83, 8388607;
	or.b32  	%r2546, %r267, 1065353216;
	mov.b32 	%f836, %r2546;
	add.s32 	%r268, %r83, -1073741824;
	and.b32  	%r2547, %r268, -8388608;
	setp.eq.s32 	%p86, %r2547, 0;
	@%p86 bra 	$L__BB0_97;
// %bb.95:                              // %__nv_fmaf_rn.exit4.i.i.i649.preheader
	mov.f32 	%f504, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f503,%f504;
	// end inline asm
$L__BB0_96:                             // %__nv_fmaf_rn.exit4.i.i.i649
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r269, %r2547, 192937984;
	add.s32 	%r270, %r2546, %r269;
	mov.b32 	%f505, %r270;
	mul.f32 	%f506, %f503, %f505;
	sub.f32 	%f507, %f505, %f506;
	fma.rn.f32 	%f508, %f507, %f503, %f506;
	sub.f32 	%f509, %f505, %f508;
	fma.rz.f32 	%f510, %f509, %f503, %f508;
	cvt.rzi.f32.f32 	%f511, %f510;
	sub.f32 	%f836, %f505, %f511;
	sub.s32 	%r2547, %r2547, %r269;
	mov.b32 	%r2546, %f836;
	setp.ne.s32 	%p87, %r2547, 0;
	setp.ne.s32 	%p88, %r2546, 0;
	and.pred  	%p89, %p87, %p88;
	@%p89 bra 	$L__BB0_96;
$L__BB0_97:                             // %__internal_fmodf_slowpath_mod.exit.i.i651
	setp.gt.u32 	%p90, %r83, 2139095039;
	selp.f32 	%f512, 0f7FFFFFFF, 0f4B800000, %p90;
	mul.f32 	%f513, %f836, 0f34000000;
	mul.f32 	%f837, %f512, %f513;
	bra.uni 	$L__BB0_98;
$L__BB0_29:                             // %__nv_fast_fdividef.exit.i.i.i628
	div.approx.f32 	%f496, %f837, %f148;
	cvt.rzi.f32.f32 	%f835, %f496;
	fma.rn.f32 	%f90, %f835, 0fC0000000, %f837;
	mov.b32 	%r82, %f90;
	setp.lt.u32 	%p81, %r82, 1073741824;
	@%p81 bra 	$L__BB0_93;
// %bb.30:
	setp.lt.u32 	%p82, %r82, -2147483647;
	@%p82 bra 	$L__BB0_91;
// %bb.31:
	add.f32 	%f501, %f835, 0fBF800000;
	setp.lt.f32 	%p85, %f90, 0fC0000000;
	add.f32 	%f502, %f501, 0fBF800000;
	selp.f32 	%f835, %f502, %f501, %p85;
	bra.uni 	$L__BB0_93;
$L__BB0_91:
	add.f32 	%f835, %f835, 0f3F800000;
	setp.ltu.f32 	%p83, %f90, 0f40800000;
	@%p83 bra 	$L__BB0_93;
// %bb.92:                              // %__nv_fmaf_rn.exit.i.i.i632
	add.f32 	%f497, %f835, 0f3F800000;
	fma.rn.f32 	%f499, %f148, 0fC0400000, %f90;
	setp.ge.f32 	%p84, %f499, 0f00000000;
	add.f32 	%f500, %f497, 0f3F800000;
	selp.f32 	%f835, %f500, %f497, %p84;
$L__BB0_93:                             // %__internal_fmodf_fastpath_quot.exit.i.i635
	fma.rn.f32 	%f837, %f835, 0fC0000000, %f837;
$L__BB0_98:                             // %__internal_fmodf_kernel.exit.i654
	shl.b32 	%r69, %r4, 1;
	abs.f32 	%f514, %f837;
	setp.gtu.f32 	%p91, %f514, 0f7F800000;
	@%p91 bra 	$L__BB0_100;
// %bb.99:
	mov.b32 	%r271, %f35;
	and.b32  	%r272, %r271, -2147483648;
	mov.b32 	%r273, %f837;
	or.b32  	%r274, %r272, %r273;
	mov.b32 	%f837, %r274;
$L__BB0_100:                            // %__nv_fmodf.exit655
	and.b32  	%r283, %r69, 6;
	mov.u32 	%r284, -8;
	sub.s32 	%r285, %r284, %r283;
	mul.lo.s32 	%r286, %r16, %r285;
	cvt.rn.f32.s32 	%f545, %r286;
	div.approx.f32 	%f106, %f545, %f494;
	abs.f32 	%f825, %f106;
	setp.lt.f32 	%p99, %f825, 0f40000000;
	@%p99 bra 	$L__BB0_43;
// %bb.32:
	setp.gtu.f32 	%p100, %f825, 0f4B800000;
	@%p100 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_33;
$L__BB0_39:
	mov.b32 	%r18, %f825;
	and.b32  	%r287, %r18, 8388607;
	or.b32  	%r2533, %r287, 1065353216;
	mov.b32 	%f824, %r2533;
	add.s32 	%r288, %r18, -1073741824;
	and.b32  	%r2534, %r288, -8388608;
	setp.eq.s32 	%p106, %r2534, 0;
	@%p106 bra 	$L__BB0_42;
// %bb.40:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f556, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f555,%f556;
	// end inline asm
$L__BB0_41:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r289, %r2534, 192937984;
	add.s32 	%r290, %r2533, %r289;
	mov.b32 	%f557, %r290;
	mul.f32 	%f558, %f555, %f557;
	sub.f32 	%f559, %f557, %f558;
	fma.rn.f32 	%f560, %f559, %f555, %f558;
	sub.f32 	%f561, %f557, %f560;
	fma.rz.f32 	%f562, %f561, %f555, %f560;
	cvt.rzi.f32.f32 	%f563, %f562;
	sub.f32 	%f824, %f557, %f563;
	sub.s32 	%r2534, %r2534, %r289;
	mov.b32 	%r2533, %f824;
	setp.ne.s32 	%p107, %r2534, 0;
	setp.ne.s32 	%p108, %r2533, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	$L__BB0_41;
$L__BB0_42:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r18, 2139095039;
	selp.f32 	%f564, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f565, %f824, 0f34000000;
	mul.f32 	%f825, %f564, %f565;
	bra.uni 	$L__BB0_43;
$L__BB0_33:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f548, %f825, %f148;
	cvt.rzi.f32.f32 	%f823, %f548;
	fma.rn.f32 	%f38, %f823, 0fC0000000, %f825;
	mov.b32 	%r17, %f38;
	setp.lt.u32 	%p101, %r17, 1073741824;
	@%p101 bra 	$L__BB0_38;
// %bb.34:
	setp.lt.u32 	%p102, %r17, -2147483647;
	@%p102 bra 	$L__BB0_36;
// %bb.35:
	add.f32 	%f553, %f823, 0fBF800000;
	setp.lt.f32 	%p105, %f38, 0fC0000000;
	add.f32 	%f554, %f553, 0fBF800000;
	selp.f32 	%f823, %f554, %f553, %p105;
	bra.uni 	$L__BB0_38;
$L__BB0_36:
	add.f32 	%f823, %f823, 0f3F800000;
	setp.ltu.f32 	%p103, %f38, 0f40800000;
	@%p103 bra 	$L__BB0_38;
// %bb.37:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f549, %f823, 0f3F800000;
	fma.rn.f32 	%f551, %f148, 0fC0400000, %f38;
	setp.ge.f32 	%p104, %f551, 0f00000000;
	add.f32 	%f552, %f549, 0f3F800000;
	selp.f32 	%f823, %f552, %f549, %p104;
$L__BB0_38:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f825, %f823, 0fC0000000, %f825;
$L__BB0_43:                             // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f566, %f825;
	setp.gtu.f32 	%p111, %f566, 0f7F800000;
	@%p111 bra 	$L__BB0_45;
// %bb.44:
	mov.b32 	%r291, %f106;
	and.b32  	%r292, %r291, -2147483648;
	mov.b32 	%r293, %f825;
	or.b32  	%r294, %r292, %r293;
	mov.b32 	%f825, %r294;
$L__BB0_45:                             // %__nv_fmodf.exit
	shl.b32 	%r315, %r76, 1;
	neg.s32 	%r29, %r315;
	mul.lo.s32 	%r30, %r29, %r16;
	cvt.rn.f32.s32 	%f599, %r30;
	div.approx.f32 	%f52, %f599, %f180;
	abs.f32 	%f841, %f52;
	setp.lt.f32 	%p119, %f841, 0f40000000;
	@%p119 bra 	$L__BB0_108;
// %bb.46:
	setp.gtu.f32 	%p120, %f841, 0f4B800000;
	@%p120 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_47;
$L__BB0_104:
	mov.b32 	%r91, %f841;
	and.b32  	%r316, %r91, 8388607;
	or.b32  	%r2548, %r316, 1065353216;
	mov.b32 	%f840, %r2548;
	add.s32 	%r317, %r91, -1073741824;
	and.b32  	%r2549, %r317, -8388608;
	setp.eq.s32 	%p126, %r2549, 0;
	@%p126 bra 	$L__BB0_107;
// %bb.105:                             // %__nv_fmaf_rn.exit4.i.i.i680.preheader
	mov.f32 	%f610, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f609,%f610;
	// end inline asm
$L__BB0_106:                            // %__nv_fmaf_rn.exit4.i.i.i680
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r318, %r2549, 192937984;
	add.s32 	%r319, %r2548, %r318;
	mov.b32 	%f611, %r319;
	mul.f32 	%f612, %f609, %f611;
	sub.f32 	%f613, %f611, %f612;
	fma.rn.f32 	%f614, %f613, %f609, %f612;
	sub.f32 	%f615, %f611, %f614;
	fma.rz.f32 	%f616, %f615, %f609, %f614;
	cvt.rzi.f32.f32 	%f617, %f616;
	sub.f32 	%f840, %f611, %f617;
	sub.s32 	%r2549, %r2549, %r318;
	mov.b32 	%r2548, %f840;
	setp.ne.s32 	%p127, %r2549, 0;
	setp.ne.s32 	%p128, %r2548, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	$L__BB0_106;
$L__BB0_107:                            // %__internal_fmodf_slowpath_mod.exit.i.i682
	setp.gt.u32 	%p130, %r91, 2139095039;
	selp.f32 	%f618, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f619, %f840, 0f34000000;
	mul.f32 	%f841, %f618, %f619;
	bra.uni 	$L__BB0_108;
$L__BB0_47:                             // %__nv_fast_fdividef.exit.i.i.i659
	div.approx.f32 	%f602, %f841, %f148;
	cvt.rzi.f32.f32 	%f839, %f602;
	fma.rn.f32 	%f109, %f839, 0fC0000000, %f841;
	mov.b32 	%r90, %f109;
	setp.lt.u32 	%p121, %r90, 1073741824;
	@%p121 bra 	$L__BB0_103;
// %bb.48:
	setp.lt.u32 	%p122, %r90, -2147483647;
	@%p122 bra 	$L__BB0_101;
// %bb.49:
	add.f32 	%f607, %f839, 0fBF800000;
	setp.lt.f32 	%p125, %f109, 0fC0000000;
	add.f32 	%f608, %f607, 0fBF800000;
	selp.f32 	%f839, %f608, %f607, %p125;
	bra.uni 	$L__BB0_103;
$L__BB0_101:
	add.f32 	%f839, %f839, 0f3F800000;
	setp.ltu.f32 	%p123, %f109, 0f40800000;
	@%p123 bra 	$L__BB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i663
	add.f32 	%f603, %f839, 0f3F800000;
	fma.rn.f32 	%f605, %f148, 0fC0400000, %f109;
	setp.ge.f32 	%p124, %f605, 0f00000000;
	add.f32 	%f606, %f603, 0f3F800000;
	selp.f32 	%f839, %f606, %f603, %p124;
$L__BB0_103:                            // %__internal_fmodf_fastpath_quot.exit.i.i666
	fma.rn.f32 	%f841, %f839, 0fC0000000, %f841;
$L__BB0_108:                            // %__internal_fmodf_kernel.exit.i685
	abs.f32 	%f620, %f841;
	setp.gtu.f32 	%p131, %f620, 0f7F800000;
	@%p131 bra 	$L__BB0_110;
// %bb.109:
	mov.b32 	%r320, %f52;
	and.b32  	%r321, %r320, -2147483648;
	mov.b32 	%r322, %f841;
	or.b32  	%r323, %r321, %r322;
	mov.b32 	%f841, %r323;
$L__BB0_110:                            // %__nv_fmodf.exit686
	shl.b32 	%r332, %r16, 2;
	sub.s32 	%r333, %r30, %r332;
	cvt.rn.f32.s32 	%f651, %r333;
	div.approx.f32 	%f125, %f651, %f180;
	abs.f32 	%f829, %f125;
	setp.lt.f32 	%p139, %f829, 0f40000000;
	@%p139 bra 	$L__BB0_61;
// %bb.50:
	setp.gtu.f32 	%p140, %f829, 0f4B800000;
	@%p140 bra 	$L__BB0_57;
	bra.uni 	$L__BB0_51;
$L__BB0_57:
	mov.b32 	%r32, %f829;
	and.b32  	%r334, %r32, 8388607;
	or.b32  	%r2535, %r334, 1065353216;
	mov.b32 	%f828, %r2535;
	add.s32 	%r335, %r32, -1073741824;
	and.b32  	%r2536, %r335, -8388608;
	setp.eq.s32 	%p146, %r2536, 0;
	@%p146 bra 	$L__BB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i587.preheader
	mov.f32 	%f662, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f661,%f662;
	// end inline asm
$L__BB0_59:                             // %__nv_fmaf_rn.exit4.i.i.i587
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r336, %r2536, 192937984;
	add.s32 	%r337, %r2535, %r336;
	mov.b32 	%f663, %r337;
	mul.f32 	%f664, %f661, %f663;
	sub.f32 	%f665, %f663, %f664;
	fma.rn.f32 	%f666, %f665, %f661, %f664;
	sub.f32 	%f667, %f663, %f666;
	fma.rz.f32 	%f668, %f667, %f661, %f666;
	cvt.rzi.f32.f32 	%f669, %f668;
	sub.f32 	%f828, %f663, %f669;
	sub.s32 	%r2536, %r2536, %r336;
	mov.b32 	%r2535, %f828;
	setp.ne.s32 	%p147, %r2536, 0;
	setp.ne.s32 	%p148, %r2535, 0;
	and.pred  	%p149, %p147, %p148;
	@%p149 bra 	$L__BB0_59;
$L__BB0_60:                             // %__internal_fmodf_slowpath_mod.exit.i.i589
	setp.gt.u32 	%p150, %r32, 2139095039;
	selp.f32 	%f670, 0f7FFFFFFF, 0f4B800000, %p150;
	mul.f32 	%f671, %f828, 0f34000000;
	mul.f32 	%f829, %f670, %f671;
	bra.uni 	$L__BB0_61;
$L__BB0_51:                             // %__nv_fast_fdividef.exit.i.i.i566
	div.approx.f32 	%f654, %f829, %f148;
	cvt.rzi.f32.f32 	%f827, %f654;
	fma.rn.f32 	%f55, %f827, 0fC0000000, %f829;
	mov.b32 	%r31, %f55;
	setp.lt.u32 	%p141, %r31, 1073741824;
	@%p141 bra 	$L__BB0_56;
// %bb.52:
	setp.lt.u32 	%p142, %r31, -2147483647;
	@%p142 bra 	$L__BB0_54;
// %bb.53:
	add.f32 	%f659, %f827, 0fBF800000;
	setp.lt.f32 	%p145, %f55, 0fC0000000;
	add.f32 	%f660, %f659, 0fBF800000;
	selp.f32 	%f827, %f660, %f659, %p145;
	bra.uni 	$L__BB0_56;
$L__BB0_54:
	add.f32 	%f827, %f827, 0f3F800000;
	setp.ltu.f32 	%p143, %f55, 0f40800000;
	@%p143 bra 	$L__BB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i570
	add.f32 	%f655, %f827, 0f3F800000;
	fma.rn.f32 	%f657, %f148, 0fC0400000, %f55;
	setp.ge.f32 	%p144, %f657, 0f00000000;
	add.f32 	%f658, %f655, 0f3F800000;
	selp.f32 	%f827, %f658, %f655, %p144;
$L__BB0_56:                             // %__internal_fmodf_fastpath_quot.exit.i.i573
	fma.rn.f32 	%f829, %f827, 0fC0000000, %f829;
$L__BB0_61:                             // %__internal_fmodf_kernel.exit.i592
	abs.f32 	%f672, %f829;
	setp.gtu.f32 	%p151, %f672, 0f7F800000;
	@%p151 bra 	$L__BB0_63;
// %bb.62:
	mov.b32 	%r338, %f125;
	and.b32  	%r339, %r338, -2147483648;
	mov.b32 	%r340, %f829;
	or.b32  	%r341, %r339, %r340;
	mov.b32 	%f829, %r341;
$L__BB0_63:                             // %__nv_fmodf.exit593
	mul.lo.s32 	%r42, %r29, %r15;
	cvt.rn.f32.s32 	%f705, %r42;
	mov.f32 	%f706, 0f40800000;
	div.approx.f32 	%f69, %f705, %f706;
	abs.f32 	%f845, %f69;
	setp.lt.f32 	%p159, %f845, 0f40000000;
	@%p159 bra 	$L__BB0_118;
// %bb.64:
	setp.gtu.f32 	%p160, %f845, 0f4B800000;
	@%p160 bra 	$L__BB0_114;
	bra.uni 	$L__BB0_65;
$L__BB0_114:
	mov.b32 	%r99, %f845;
	and.b32  	%r356, %r99, 8388607;
	or.b32  	%r2550, %r356, 1065353216;
	mov.b32 	%f844, %r2550;
	add.s32 	%r357, %r99, -1073741824;
	and.b32  	%r2551, %r357, -8388608;
	setp.eq.s32 	%p166, %r2551, 0;
	@%p166 bra 	$L__BB0_117;
// %bb.115:                             // %__nv_fmaf_rn.exit4.i.i.i711.preheader
	mov.f32 	%f716, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f715,%f716;
	// end inline asm
$L__BB0_116:                            // %__nv_fmaf_rn.exit4.i.i.i711
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r358, %r2551, 192937984;
	add.s32 	%r359, %r2550, %r358;
	mov.b32 	%f717, %r359;
	mul.f32 	%f718, %f715, %f717;
	sub.f32 	%f719, %f717, %f718;
	fma.rn.f32 	%f720, %f719, %f715, %f718;
	sub.f32 	%f721, %f717, %f720;
	fma.rz.f32 	%f722, %f721, %f715, %f720;
	cvt.rzi.f32.f32 	%f723, %f722;
	sub.f32 	%f844, %f717, %f723;
	sub.s32 	%r2551, %r2551, %r358;
	mov.b32 	%r2550, %f844;
	setp.ne.s32 	%p167, %r2551, 0;
	setp.ne.s32 	%p168, %r2550, 0;
	and.pred  	%p169, %p167, %p168;
	@%p169 bra 	$L__BB0_116;
$L__BB0_117:                            // %__internal_fmodf_slowpath_mod.exit.i.i713
	setp.gt.u32 	%p170, %r99, 2139095039;
	selp.f32 	%f724, 0f7FFFFFFF, 0f4B800000, %p170;
	mul.f32 	%f725, %f844, 0f34000000;
	mul.f32 	%f845, %f724, %f725;
	bra.uni 	$L__BB0_118;
$L__BB0_65:                             // %__nv_fast_fdividef.exit.i.i.i690
	div.approx.f32 	%f708, %f845, %f148;
	cvt.rzi.f32.f32 	%f843, %f708;
	fma.rn.f32 	%f128, %f843, 0fC0000000, %f845;
	mov.b32 	%r98, %f128;
	setp.lt.u32 	%p161, %r98, 1073741824;
	@%p161 bra 	$L__BB0_113;
// %bb.66:
	setp.lt.u32 	%p162, %r98, -2147483647;
	@%p162 bra 	$L__BB0_111;
// %bb.67:
	add.f32 	%f713, %f843, 0fBF800000;
	setp.lt.f32 	%p165, %f128, 0fC0000000;
	add.f32 	%f714, %f713, 0fBF800000;
	selp.f32 	%f843, %f714, %f713, %p165;
	bra.uni 	$L__BB0_113;
$L__BB0_111:
	add.f32 	%f843, %f843, 0f3F800000;
	setp.ltu.f32 	%p163, %f128, 0f40800000;
	@%p163 bra 	$L__BB0_113;
// %bb.112:                             // %__nv_fmaf_rn.exit.i.i.i694
	add.f32 	%f709, %f843, 0f3F800000;
	fma.rn.f32 	%f711, %f148, 0fC0400000, %f128;
	setp.ge.f32 	%p164, %f711, 0f00000000;
	add.f32 	%f712, %f709, 0f3F800000;
	selp.f32 	%f843, %f712, %f709, %p164;
$L__BB0_113:                            // %__internal_fmodf_fastpath_quot.exit.i.i697
	fma.rn.f32 	%f845, %f843, 0fC0000000, %f845;
$L__BB0_118:                            // %__internal_fmodf_kernel.exit.i716
	abs.f32 	%f726, %f845;
	setp.gtu.f32 	%p171, %f726, 0f7F800000;
	@%p171 bra 	$L__BB0_120;
// %bb.119:
	mov.b32 	%r360, %f69;
	and.b32  	%r361, %r360, -2147483648;
	mov.b32 	%r362, %f845;
	or.b32  	%r363, %r361, %r362;
	mov.b32 	%f845, %r363;
$L__BB0_120:                            // %__nv_fmodf.exit717
	shl.b32 	%r372, %r15, 2;
	sub.s32 	%r373, %r42, %r372;
	cvt.rn.f32.s32 	%f759, %r373;
	div.approx.f32 	%f145, %f759, %f706;
	abs.f32 	%f833, %f145;
	setp.lt.f32 	%p180, %f833, 0f40000000;
	@%p180 bra 	$L__BB0_79;
// %bb.68:
	setp.gtu.f32 	%p181, %f833, 0f4B800000;
	@%p181 bra 	$L__BB0_75;
	bra.uni 	$L__BB0_69;
$L__BB0_75:
	mov.b32 	%r44, %f833;
	and.b32  	%r374, %r44, 8388607;
	or.b32  	%r2537, %r374, 1065353216;
	mov.b32 	%f832, %r2537;
	add.s32 	%r375, %r44, -1073741824;
	and.b32  	%r2538, %r375, -8388608;
	setp.eq.s32 	%p187, %r2538, 0;
	@%p187 bra 	$L__BB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i618.preheader
	mov.f32 	%f770, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f769,%f770;
	// end inline asm
$L__BB0_77:                             // %__nv_fmaf_rn.exit4.i.i.i618
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r376, %r2538, 192937984;
	add.s32 	%r377, %r2537, %r376;
	mov.b32 	%f771, %r377;
	mul.f32 	%f772, %f769, %f771;
	sub.f32 	%f773, %f771, %f772;
	fma.rn.f32 	%f774, %f773, %f769, %f772;
	sub.f32 	%f775, %f771, %f774;
	fma.rz.f32 	%f776, %f775, %f769, %f774;
	cvt.rzi.f32.f32 	%f777, %f776;
	sub.f32 	%f832, %f771, %f777;
	sub.s32 	%r2538, %r2538, %r376;
	mov.b32 	%r2537, %f832;
	setp.ne.s32 	%p188, %r2538, 0;
	setp.ne.s32 	%p189, %r2537, 0;
	and.pred  	%p190, %p188, %p189;
	@%p190 bra 	$L__BB0_77;
$L__BB0_78:                             // %__internal_fmodf_slowpath_mod.exit.i.i620
	setp.gt.u32 	%p191, %r44, 2139095039;
	selp.f32 	%f778, 0f7FFFFFFF, 0f4B800000, %p191;
	mul.f32 	%f779, %f832, 0f34000000;
	mul.f32 	%f833, %f778, %f779;
	bra.uni 	$L__BB0_79;
$L__BB0_69:                             // %__nv_fast_fdividef.exit.i.i.i597
	div.approx.f32 	%f762, %f833, %f148;
	cvt.rzi.f32.f32 	%f831, %f762;
	fma.rn.f32 	%f72, %f831, 0fC0000000, %f833;
	mov.b32 	%r43, %f72;
	setp.lt.u32 	%p182, %r43, 1073741824;
	@%p182 bra 	$L__BB0_74;
// %bb.70:
	setp.lt.u32 	%p183, %r43, -2147483647;
	@%p183 bra 	$L__BB0_72;
// %bb.71:
	add.f32 	%f767, %f831, 0fBF800000;
	setp.lt.f32 	%p186, %f72, 0fC0000000;
	add.f32 	%f768, %f767, 0fBF800000;
	selp.f32 	%f831, %f768, %f767, %p186;
	bra.uni 	$L__BB0_74;
$L__BB0_72:
	add.f32 	%f831, %f831, 0f3F800000;
	setp.ltu.f32 	%p184, %f72, 0f40800000;
	@%p184 bra 	$L__BB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i601
	add.f32 	%f763, %f831, 0f3F800000;
	fma.rn.f32 	%f765, %f148, 0fC0400000, %f72;
	setp.ge.f32 	%p185, %f765, 0f00000000;
	add.f32 	%f766, %f763, 0f3F800000;
	selp.f32 	%f831, %f766, %f763, %p185;
$L__BB0_74:                             // %__internal_fmodf_fastpath_quot.exit.i.i604
	fma.rn.f32 	%f833, %f831, 0fC0000000, %f833;
$L__BB0_79:                             // %__internal_fmodf_kernel.exit.i623
	abs.f32 	%f780, %f833;
	setp.gtu.f32 	%p192, %f780, 0f7F800000;
	@%p192 bra 	$L__BB0_81;
// %bb.80:
	mov.b32 	%r378, %f145;
	and.b32  	%r379, %r378, -2147483648;
	mov.b32 	%r380, %f833;
	or.b32  	%r381, %r379, %r380;
	mov.b32 	%f833, %r381;
$L__BB0_81:                             // %__nv_fmodf.exit624
	setp.le.s32 	%p200, %r141, %r140;
	mov.u32 	%r2531, 0;
	@%p200 bra 	$L__BB0_90;
// %bb.82:                              // %L1416.lr.ph
	mov.f32 	%f152, 0f43010000;
	mul.lo.s32 	%r241, %r80, 31;
	div.approx.f32 	%f153, %f151, %f152;
	div.approx.f32 	%f187, %f185, %f152;
	div.approx.f32 	%f222, %f220, %f152;
	div.approx.f32 	%f256, %f254, %f152;
	div.approx.f32 	%f291, %f289, %f152;
	div.approx.f32 	%f325, %f323, %f152;
	div.approx.f32 	%f360, %f358, %f152;
	div.approx.f32 	%f394, %f392, %f152;
	add.s32 	%r251, %r241, 48;
	abs.f32 	%f154, %f153;
	abs.f32 	%f188, %f187;
	abs.f32 	%f223, %f222;
	abs.f32 	%f257, %f256;
	abs.f32 	%f292, %f291;
	abs.f32 	%f326, %f325;
	abs.f32 	%f361, %f360;
	abs.f32 	%f395, %f394;
	and.b32  	%r242, %r241, 63;
	and.b32  	%r252, %r251, 63;
	setp.gt.f32 	%p17, %f154, 0f4B800000;
	mul.f32 	%f155, %f153, 0f00000000;
	setp.gt.f32 	%p23, %f188, 0f4B800000;
	mul.f32 	%f189, %f187, 0f00000000;
	setp.gt.f32 	%p29, %f223, 0f4B800000;
	mul.f32 	%f224, %f222, 0f00000000;
	setp.gt.f32 	%p35, %f257, 0f4B800000;
	mul.f32 	%f258, %f256, 0f00000000;
	setp.gt.f32 	%p41, %f292, 0f4B800000;
	mul.f32 	%f293, %f291, 0f00000000;
	setp.gt.f32 	%p47, %f326, 0f4B800000;
	mul.f32 	%f327, %f325, 0f00000000;
	setp.gt.f32 	%p53, %f361, 0f4B800000;
	mul.f32 	%f362, %f360, 0f00000000;
	setp.gt.f32 	%p59, %f395, 0f4B800000;
	mul.f32 	%f396, %f394, 0f00000000;
	cvt.rn.f32.s32 	%f425, %r242;
	cvt.rn.f32.s32 	%f460, %r252;
	selp.f32 	%f156, %f155, %f153, %p17;
	selp.f32 	%f190, %f189, %f187, %p23;
	selp.f32 	%f225, %f224, %f222, %p29;
	selp.f32 	%f259, %f258, %f256, %p35;
	selp.f32 	%f294, %f293, %f291, %p41;
	selp.f32 	%f328, %f327, %f325, %p47;
	selp.f32 	%f363, %f362, %f360, %p53;
	selp.f32 	%f397, %f396, %f394, %p59;
	div.approx.f32 	%f427, %f425, %f180;
	div.approx.f32 	%f461, %f460, %f180;
	add.f32 	%f157, %f156, %f156;
	add.f32 	%f191, %f190, %f190;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f260, %f259, %f259;
	add.f32 	%f295, %f294, %f294;
	add.f32 	%f329, %f328, %f328;
	add.f32 	%f364, %f363, %f363;
	add.f32 	%f398, %f397, %f397;
	add.f32 	%f428, %f427, %f427;
	add.f32 	%f462, %f461, %f461;
	add.f32 	%f515, %f837, %f837;
	add.f32 	%f567, %f825, %f825;
	mov.b32 	%r164, %f157;
	mov.b32 	%r171, %f191;
	mov.b32 	%r182, %f226;
	mov.b32 	%r189, %f260;
	mov.b32 	%r200, %f295;
	mov.b32 	%r207, %f329;
	mov.b32 	%r218, %f364;
	mov.b32 	%r225, %f398;
	mov.b32 	%r243, %f428;
	mov.b32 	%r253, %f462;
	mov.b32 	%r275, %f515;
	mov.b32 	%r307, %f567;
	and.b32  	%r165, %r164, -2147483648;
	and.b32  	%r172, %r171, -2147483648;
	and.b32  	%r183, %r182, -2147483648;
	and.b32  	%r190, %r189, -2147483648;
	and.b32  	%r201, %r200, -2147483648;
	and.b32  	%r208, %r207, -2147483648;
	and.b32  	%r219, %r218, -2147483648;
	and.b32  	%r226, %r225, -2147483648;
	and.b32  	%r244, %r243, -2147483648;
	and.b32  	%r254, %r253, -2147483648;
	and.b32  	%r276, %r275, -2147483648;
	and.b32  	%r308, %r307, -2147483648;
	add.f32 	%f621, %f841, %f841;
	add.f32 	%f673, %f829, %f829;
	or.b32  	%r166, %r165, 1056964608;
	or.b32  	%r173, %r172, 1056964608;
	or.b32  	%r184, %r183, 1056964608;
	or.b32  	%r191, %r190, 1056964608;
	or.b32  	%r202, %r201, 1056964608;
	or.b32  	%r209, %r208, 1056964608;
	or.b32  	%r220, %r219, 1056964608;
	or.b32  	%r227, %r226, 1056964608;
	or.b32  	%r245, %r244, 1056964608;
	or.b32  	%r255, %r254, 1056964608;
	or.b32  	%r277, %r276, 1056964608;
	or.b32  	%r309, %r308, 1056964608;
	mov.b32 	%r324, %f621;
	mov.b32 	%r348, %f673;
	add.f32 	%f727, %f845, %f845;
	mov.b32 	%f158, %r166;
	mov.b32 	%f192, %r173;
	mov.b32 	%f227, %r184;
	mov.b32 	%f261, %r191;
	mov.b32 	%f296, %r202;
	mov.b32 	%f330, %r209;
	mov.b32 	%f365, %r220;
	mov.b32 	%f399, %r227;
	mov.b32 	%f429, %r245;
	mov.b32 	%f463, %r255;
	mov.b32 	%f516, %r277;
	mov.b32 	%f568, %r309;
	and.b32  	%r325, %r324, -2147483648;
	and.b32  	%r349, %r348, -2147483648;
	mov.b32 	%r364, %f727;
	add.f32 	%f159, %f157, %f158;
	abs.f32 	%f161, %f157;
	add.f32 	%f193, %f191, %f192;
	abs.f32 	%f195, %f191;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f262, %f260, %f261;
	abs.f32 	%f264, %f260;
	add.f32 	%f297, %f295, %f296;
	abs.f32 	%f299, %f295;
	add.f32 	%f331, %f329, %f330;
	abs.f32 	%f333, %f329;
	add.f32 	%f366, %f364, %f365;
	abs.f32 	%f368, %f364;
	add.f32 	%f400, %f398, %f399;
	abs.f32 	%f402, %f398;
	add.f32 	%f430, %f428, %f429;
	abs.f32 	%f432, %f428;
	add.f32 	%f464, %f462, %f463;
	abs.f32 	%f466, %f462;
	add.f32 	%f517, %f515, %f516;
	abs.f32 	%f519, %f515;
	add.f32 	%f569, %f567, %f568;
	abs.f32 	%f571, %f567;
	or.b32  	%r326, %r325, 1056964608;
	or.b32  	%r350, %r349, 1056964608;
	and.b32  	%r365, %r364, -2147483648;
	cvt.rzi.f32.f32 	%f160, %f159;
	setp.gt.f32 	%p18, %f161, 0f4B000000;
	cvt.rzi.f32.f32 	%f194, %f193;
	setp.gt.f32 	%p24, %f195, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p30, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f263, %f262;
	setp.gt.f32 	%p36, %f264, 0f4B000000;
	cvt.rzi.f32.f32 	%f298, %f297;
	setp.gt.f32 	%p42, %f299, 0f4B000000;
	cvt.rzi.f32.f32 	%f332, %f331;
	setp.gt.f32 	%p48, %f333, 0f4B000000;
	cvt.rzi.f32.f32 	%f367, %f366;
	setp.gt.f32 	%p54, %f368, 0f4B000000;
	cvt.rzi.f32.f32 	%f401, %f400;
	setp.gt.f32 	%p60, %f402, 0f4B000000;
	cvt.rzi.f32.f32 	%f431, %f430;
	setp.gt.f32 	%p65, %f432, 0f4B000000;
	cvt.rzi.f32.f32 	%f465, %f464;
	setp.gt.f32 	%p72, %f466, 0f4B000000;
	cvt.rzi.f32.f32 	%f518, %f517;
	setp.gt.f32 	%p92, %f519, 0f4B000000;
	cvt.rzi.f32.f32 	%f570, %f569;
	setp.gt.f32 	%p112, %f571, 0f4B000000;
	mov.b32 	%f622, %r326;
	mov.b32 	%f674, %r350;
	or.b32  	%r366, %r365, 1056964608;
	selp.f32 	%f162, %f157, %f160, %p18;
	cvt.rzi.f32.f32 	%f163, %f157;
	setp.lt.f32 	%p19, %f161, 0f3F000000;
	selp.f32 	%f196, %f191, %f194, %p24;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p25, %f195, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p30;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p31, %f230, 0f3F000000;
	selp.f32 	%f265, %f260, %f263, %p36;
	cvt.rzi.f32.f32 	%f266, %f260;
	setp.lt.f32 	%p37, %f264, 0f3F000000;
	selp.f32 	%f300, %f295, %f298, %p42;
	cvt.rzi.f32.f32 	%f301, %f295;
	setp.lt.f32 	%p43, %f299, 0f3F000000;
	selp.f32 	%f334, %f329, %f332, %p48;
	cvt.rzi.f32.f32 	%f335, %f329;
	setp.lt.f32 	%p49, %f333, 0f3F000000;
	selp.f32 	%f369, %f364, %f367, %p54;
	cvt.rzi.f32.f32 	%f370, %f364;
	setp.lt.f32 	%p55, %f368, 0f3F000000;
	selp.f32 	%f403, %f398, %f401, %p60;
	cvt.rzi.f32.f32 	%f404, %f398;
	setp.lt.f32 	%p61, %f402, 0f3F000000;
	selp.f32 	%f433, %f428, %f431, %p65;
	cvt.rzi.f32.f32 	%f434, %f428;
	setp.lt.f32 	%p66, %f432, 0f3F000000;
	selp.f32 	%f467, %f462, %f465, %p72;
	cvt.rzi.f32.f32 	%f468, %f462;
	setp.lt.f32 	%p73, %f466, 0f3F000000;
	selp.f32 	%f520, %f515, %f518, %p92;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p93, %f519, 0f3F000000;
	selp.f32 	%f572, %f567, %f570, %p112;
	cvt.rzi.f32.f32 	%f573, %f567;
	setp.lt.f32 	%p113, %f571, 0f3F000000;
	add.f32 	%f623, %f621, %f622;
	abs.f32 	%f625, %f621;
	add.f32 	%f675, %f673, %f674;
	abs.f32 	%f677, %f673;
	mov.b32 	%f728, %r366;
	selp.f32 	%f164, %f163, %f162, %p19;
	selp.f32 	%f198, %f197, %f196, %p25;
	selp.f32 	%f233, %f232, %f231, %p31;
	selp.f32 	%f267, %f266, %f265, %p37;
	selp.f32 	%f302, %f301, %f300, %p43;
	selp.f32 	%f336, %f335, %f334, %p49;
	selp.f32 	%f371, %f370, %f369, %p55;
	selp.f32 	%f405, %f404, %f403, %p61;
	selp.f32 	%f435, %f434, %f433, %p66;
	selp.f32 	%f469, %f468, %f467, %p73;
	selp.f32 	%f522, %f521, %f520, %p93;
	selp.f32 	%f574, %f573, %f572, %p113;
	cvt.rzi.f32.f32 	%f624, %f623;
	setp.gt.f32 	%p132, %f625, 0f4B000000;
	cvt.rzi.f32.f32 	%f676, %f675;
	setp.gt.f32 	%p152, %f677, 0f4B000000;
	add.f32 	%f729, %f727, %f728;
	abs.f32 	%f731, %f727;
	fma.rn.f32 	%f165, %f164, 0fBF000000, %f156;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f190;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f268, %f267, 0fBF000000, %f259;
	fma.rn.f32 	%f303, %f302, 0fBF000000, %f294;
	fma.rn.f32 	%f337, %f336, 0fBF000000, %f328;
	fma.rn.f32 	%f372, %f371, 0fBF000000, %f363;
	fma.rn.f32 	%f406, %f405, 0fBF000000, %f397;
	fma.rn.f32 	%f436, %f435, 0fBF000000, %f427;
	fma.rn.f32 	%f470, %f469, 0fBF000000, %f461;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f837;
	fma.rn.f32 	%f575, %f574, 0fBF000000, %f825;
	selp.f32 	%f626, %f621, %f624, %p132;
	cvt.rzi.f32.f32 	%f627, %f621;
	setp.lt.f32 	%p133, %f625, 0f3F000000;
	selp.f32 	%f678, %f673, %f676, %p152;
	cvt.rzi.f32.f32 	%f679, %f673;
	setp.lt.f32 	%p153, %f677, 0f3F000000;
	cvt.rzi.f32.f32 	%f730, %f729;
	setp.gt.f32 	%p173, %f731, 0f4B000000;
	mul.f32 	%f166, %f165, %f165;
	mul.f32 	%f200, %f199, %f199;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f269, %f268, %f268;
	mul.f32 	%f304, %f303, %f303;
	mul.f32 	%f338, %f337, %f337;
	mul.f32 	%f373, %f372, %f372;
	mul.f32 	%f407, %f406, %f406;
	mul.f32 	%f437, %f436, %f436;
	mul.f32 	%f471, %f470, %f470;
	mul.f32 	%f524, %f523, %f523;
	mul.f32 	%f576, %f575, %f575;
	selp.f32 	%f628, %f627, %f626, %p133;
	selp.f32 	%f680, %f679, %f678, %p153;
	selp.f32 	%f732, %f727, %f730, %p173;
	cvt.rzi.f32.f32 	%f733, %f727;
	setp.lt.f32 	%p174, %f731, 0f3F000000;
	cvt.rzi.s32.f32 	%r167, %f164;
	fma.rn.f32 	%f167, %f166, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f168, %f166, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r174, %f198;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r185, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r192, %f267;
	fma.rn.f32 	%f270, %f269, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f271, %f269, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r203, %f302;
	fma.rn.f32 	%f305, %f304, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f306, %f304, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r210, %f336;
	fma.rn.f32 	%f339, %f338, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f340, %f338, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r221, %f371;
	fma.rn.f32 	%f374, %f373, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f375, %f373, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r228, %f405;
	fma.rn.f32 	%f408, %f407, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f409, %f407, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f438, %f437, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f439, %f437, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f472, %f471, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f473, %f471, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f577, %f576, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f578, %f576, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f629, %f628, 0fBF000000, %f841;
	fma.rn.f32 	%f681, %f680, 0fBF000000, %f829;
	selp.f32 	%f734, %f733, %f732, %p174;
	add.s32 	%r168, %r167, 1;
	fma.rn.f32 	%f169, %f167, %f166, 0fC0A55DF6;
	fma.rn.f32 	%f170, %f168, %f166, 0f4081E0CF;
	fma.rn.f32 	%f171, %f166, %f165, 0f00000000;
	add.s32 	%r175, %r174, 1;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	add.s32 	%r186, %r185, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r193, %r192, 1;
	fma.rn.f32 	%f272, %f270, %f269, 0fC0A55DF6;
	fma.rn.f32 	%f273, %f271, %f269, 0f4081E0CF;
	fma.rn.f32 	%f274, %f269, %f268, 0f00000000;
	add.s32 	%r204, %r203, 1;
	fma.rn.f32 	%f307, %f305, %f304, 0fC0A55DF6;
	fma.rn.f32 	%f308, %f306, %f304, 0f4081E0CF;
	fma.rn.f32 	%f309, %f304, %f303, 0f00000000;
	add.s32 	%r211, %r210, 1;
	fma.rn.f32 	%f341, %f339, %f338, 0fC0A55DF6;
	fma.rn.f32 	%f342, %f340, %f338, 0f4081E0CF;
	fma.rn.f32 	%f343, %f338, %f337, 0f00000000;
	add.s32 	%r222, %r221, 1;
	fma.rn.f32 	%f376, %f374, %f373, 0fC0A55DF6;
	fma.rn.f32 	%f377, %f375, %f373, 0f4081E0CF;
	fma.rn.f32 	%f378, %f373, %f372, 0f00000000;
	add.s32 	%r229, %r228, 1;
	fma.rn.f32 	%f410, %f408, %f407, 0fC0A55DF6;
	fma.rn.f32 	%f411, %f409, %f407, 0f4081E0CF;
	fma.rn.f32 	%f412, %f407, %f406, 0f00000000;
	cvt.rzi.s32.f32 	%r246, %f435;
	fma.rn.f32 	%f440, %f438, %f437, 0fC0A55DF6;
	fma.rn.f32 	%f441, %f439, %f437, 0f4081E0CF;
	fma.rn.f32 	%f442, %f437, %f436, 0f00000000;
	cvt.rzi.s32.f32 	%r256, %f469;
	fma.rn.f32 	%f474, %f472, %f471, 0fC0A55DF6;
	fma.rn.f32 	%f475, %f473, %f471, 0f4081E0CF;
	fma.rn.f32 	%f476, %f471, %f470, 0f00000000;
	cvt.rzi.s32.f32 	%r278, %f522;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	cvt.rzi.s32.f32 	%r310, %f574;
	fma.rn.f32 	%f579, %f577, %f576, 0fC0A55DF6;
	fma.rn.f32 	%f580, %f578, %f576, 0f4081E0CF;
	fma.rn.f32 	%f581, %f576, %f575, 0f00000000;
	mul.f32 	%f630, %f629, %f629;
	mul.f32 	%f682, %f681, %f681;
	fma.rn.f32 	%f735, %f734, 0fBF000000, %f845;
	fma.rn.f32 	%f172, %f170, %f166, 0fC09DE9E6;
	fma.rn.f32 	%f173, %f169, %f171, 0f00000000;
	and.b32  	%r169, %r168, 1;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	and.b32  	%r176, %r175, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r187, %r186, 1;
	fma.rn.f32 	%f275, %f273, %f269, 0fC09DE9E6;
	fma.rn.f32 	%f276, %f272, %f274, 0f00000000;
	and.b32  	%r194, %r193, 1;
	fma.rn.f32 	%f310, %f308, %f304, 0fC09DE9E6;
	fma.rn.f32 	%f311, %f307, %f309, 0f00000000;
	and.b32  	%r205, %r204, 1;
	fma.rn.f32 	%f344, %f342, %f338, 0fC09DE9E6;
	fma.rn.f32 	%f345, %f341, %f343, 0f00000000;
	and.b32  	%r212, %r211, 1;
	fma.rn.f32 	%f379, %f377, %f373, 0fC09DE9E6;
	fma.rn.f32 	%f380, %f376, %f378, 0f00000000;
	and.b32  	%r223, %r222, 1;
	fma.rn.f32 	%f413, %f411, %f407, 0fC09DE9E6;
	fma.rn.f32 	%f414, %f410, %f412, 0f00000000;
	and.b32  	%r230, %r229, 1;
	fma.rn.f32 	%f443, %f441, %f437, 0fC09DE9E6;
	fma.rn.f32 	%f444, %f440, %f442, 0f00000000;
	and.b32  	%r247, %r246, 1;
	fma.rn.f32 	%f477, %f475, %f471, 0fC09DE9E6;
	fma.rn.f32 	%f478, %f474, %f476, 0f00000000;
	and.b32  	%r257, %r256, 1;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	and.b32  	%r279, %r278, 1;
	fma.rn.f32 	%f582, %f580, %f576, 0fC09DE9E6;
	fma.rn.f32 	%f583, %f579, %f581, 0f00000000;
	and.b32  	%r311, %r310, 1;
	fma.rn.f32 	%f631, %f630, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f632, %f630, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f683, %f682, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f684, %f682, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f736, %f735, %f735;
	fma.rn.f32 	%f174, %f172, %f166, 0f3F800000;
	fma.rn.f32 	%f175, %f165, 0f40490FDB, %f173;
	setp.eq.b32 	%p20, %r169, 1;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	setp.eq.b32 	%p26, %r176, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p32, %r187, 1;
	fma.rn.f32 	%f277, %f275, %f269, 0f3F800000;
	fma.rn.f32 	%f278, %f268, 0f40490FDB, %f276;
	setp.eq.b32 	%p38, %r194, 1;
	fma.rn.f32 	%f312, %f310, %f304, 0f3F800000;
	fma.rn.f32 	%f313, %f303, 0f40490FDB, %f311;
	setp.eq.b32 	%p44, %r205, 1;
	fma.rn.f32 	%f346, %f344, %f338, 0f3F800000;
	fma.rn.f32 	%f347, %f337, 0f40490FDB, %f345;
	setp.eq.b32 	%p50, %r212, 1;
	fma.rn.f32 	%f381, %f379, %f373, 0f3F800000;
	fma.rn.f32 	%f382, %f372, 0f40490FDB, %f380;
	setp.eq.b32 	%p56, %r223, 1;
	fma.rn.f32 	%f415, %f413, %f407, 0f3F800000;
	fma.rn.f32 	%f416, %f406, 0f40490FDB, %f414;
	setp.eq.b32 	%p62, %r230, 1;
	fma.rn.f32 	%f445, %f443, %f437, 0f3F800000;
	fma.rn.f32 	%f446, %f436, 0f40490FDB, %f444;
	setp.eq.b32 	%p67, %r247, 1;
	fma.rn.f32 	%f479, %f477, %f471, 0f3F800000;
	fma.rn.f32 	%f480, %f470, 0f40490FDB, %f478;
	setp.eq.b32 	%p74, %r257, 1;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	setp.eq.b32 	%p94, %r279, 1;
	fma.rn.f32 	%f584, %f582, %f576, 0f3F800000;
	fma.rn.f32 	%f585, %f575, 0f40490FDB, %f583;
	setp.eq.b32 	%p114, %r311, 1;
	cvt.rzi.s32.f32 	%r327, %f628;
	fma.rn.f32 	%f633, %f631, %f630, 0fC0A55DF6;
	fma.rn.f32 	%f634, %f632, %f630, 0f4081E0CF;
	fma.rn.f32 	%f635, %f630, %f629, 0f00000000;
	cvt.rzi.s32.f32 	%r351, %f680;
	fma.rn.f32 	%f685, %f683, %f682, 0fC0A55DF6;
	fma.rn.f32 	%f686, %f684, %f682, 0f4081E0CF;
	fma.rn.f32 	%f687, %f682, %f681, 0f00000000;
	fma.rn.f32 	%f737, %f736, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f738, %f736, 0f3E684E12, 0fBFAAD2E0;
	and.b32  	%r70, %r69, 8;
	shl.b32 	%r71, %r4, 2;
	and.b32  	%r73, %r4, 18;
	selp.f32 	%f176, %f174, %f175, %p20;
	and.b32  	%r170, %r168, 2;
	mov.f32 	%f177, 0f00000000;
	selp.f32 	%f210, %f208, %f209, %p26;
	and.b32  	%r177, %r175, 2;
	selp.f32 	%f245, %f243, %f244, %p32;
	and.b32  	%r188, %r186, 2;
	selp.f32 	%f279, %f277, %f278, %p38;
	and.b32  	%r195, %r193, 2;
	selp.f32 	%f314, %f312, %f313, %p44;
	and.b32  	%r206, %r204, 2;
	selp.f32 	%f348, %f346, %f347, %p50;
	and.b32  	%r213, %r211, 2;
	selp.f32 	%f383, %f381, %f382, %p56;
	and.b32  	%r224, %r222, 2;
	selp.f32 	%f417, %f415, %f416, %p62;
	and.b32  	%r231, %r229, 2;
	selp.f32 	%f447, %f445, %f446, %p67;
	and.b32  	%r248, %r246, 2;
	selp.f32 	%f481, %f479, %f480, %p74;
	and.b32  	%r258, %r256, 2;
	selp.f32 	%f534, %f532, %f533, %p94;
	and.b32  	%r280, %r278, 2;
	selp.f32 	%f586, %f584, %f585, %p114;
	and.b32  	%r312, %r310, 2;
	fma.rn.f32 	%f636, %f634, %f630, 0fC09DE9E6;
	fma.rn.f32 	%f637, %f633, %f635, 0f00000000;
	and.b32  	%r328, %r327, 1;
	fma.rn.f32 	%f688, %f686, %f682, 0fC09DE9E6;
	fma.rn.f32 	%f689, %f685, %f687, 0f00000000;
	and.b32  	%r352, %r351, 1;
	cvt.rzi.s32.f32 	%r367, %f734;
	fma.rn.f32 	%f739, %f737, %f736, 0fC0A55DF6;
	fma.rn.f32 	%f740, %f738, %f736, 0f4081E0CF;
	fma.rn.f32 	%f741, %f736, %f735, 0f00000000;
	and.b32  	%r72, %r71, 4;
	or.b32  	%r156, %r73, %r70;
	setp.eq.s32 	%p21, %r170, 0;
	sub.f32 	%f178, %f177, %f176;
	setp.eq.s32 	%p27, %r177, 0;
	sub.f32 	%f212, %f177, %f210;
	setp.eq.s32 	%p33, %r188, 0;
	sub.f32 	%f247, %f177, %f245;
	setp.eq.s32 	%p39, %r195, 0;
	sub.f32 	%f281, %f177, %f279;
	setp.eq.s32 	%p45, %r206, 0;
	sub.f32 	%f316, %f177, %f314;
	setp.eq.s32 	%p51, %r213, 0;
	sub.f32 	%f350, %f177, %f348;
	setp.eq.s32 	%p57, %r224, 0;
	sub.f32 	%f385, %f177, %f383;
	setp.eq.s32 	%p63, %r231, 0;
	sub.f32 	%f419, %f177, %f417;
	setp.eq.s32 	%p68, %r248, 0;
	neg.f32 	%f449, %f447;
	add.s32 	%r249, %r246, 1;
	cvt.rzi.f32.f32 	%f454, %f427;
	setp.eq.s32 	%p75, %r258, 0;
	neg.f32 	%f483, %f481;
	add.s32 	%r259, %r256, 1;
	cvt.rzi.f32.f32 	%f487, %f461;
	setp.eq.s32 	%p95, %r280, 0;
	neg.f32 	%f536, %f534;
	add.s32 	%r281, %r278, 1;
	cvt.rzi.f32.f32 	%f541, %f837;
	setp.eq.s32 	%p115, %r312, 0;
	neg.f32 	%f588, %f586;
	add.s32 	%r313, %r310, 1;
	cvt.rzi.f32.f32 	%f593, %f825;
	fma.rn.f32 	%f638, %f636, %f630, 0f3F800000;
	fma.rn.f32 	%f639, %f629, 0f40490FDB, %f637;
	setp.eq.b32 	%p134, %r328, 1;
	fma.rn.f32 	%f690, %f688, %f682, 0f3F800000;
	fma.rn.f32 	%f691, %f681, 0f40490FDB, %f689;
	setp.eq.b32 	%p154, %r352, 1;
	fma.rn.f32 	%f742, %f740, %f736, 0fC09DE9E6;
	fma.rn.f32 	%f743, %f739, %f741, 0f00000000;
	and.b32  	%r368, %r367, 1;
	or.b32  	%r157, %r156, %r72;
	selp.f32 	%f179, %f176, %f178, %p21;
	selp.f32 	%f213, %f210, %f212, %p27;
	selp.f32 	%f248, %f245, %f247, %p33;
	selp.f32 	%f282, %f279, %f281, %p39;
	selp.f32 	%f317, %f314, %f316, %p45;
	selp.f32 	%f351, %f348, %f350, %p51;
	selp.f32 	%f386, %f383, %f385, %p57;
	selp.f32 	%f420, %f417, %f419, %p63;
	selp.f32 	%f448, %f446, %f445, %p67;
	selp.f32 	%f450, %f447, %f449, %p68;
	and.b32  	%r250, %r249, 2;
	setp.eq.f32 	%p70, %f454, %f427;
	mul.f32 	%f455, %f427, 0f00000000;
	selp.f32 	%f482, %f480, %f479, %p74;
	selp.f32 	%f484, %f481, %f483, %p75;
	and.b32  	%r260, %r259, 2;
	setp.eq.f32 	%p77, %f487, %f461;
	mul.f32 	%f488, %f461, 0f00000000;
	selp.f32 	%f535, %f533, %f532, %p94;
	selp.f32 	%f537, %f534, %f536, %p95;
	and.b32  	%r282, %r281, 2;
	setp.eq.f32 	%p97, %f541, %f837;
	mul.f32 	%f542, %f837, 0f00000000;
	selp.f32 	%f587, %f585, %f584, %p114;
	selp.f32 	%f589, %f586, %f588, %p115;
	and.b32  	%r314, %r313, 2;
	setp.eq.f32 	%p117, %f593, %f825;
	mul.f32 	%f594, %f825, 0f00000000;
	selp.f32 	%f640, %f638, %f639, %p134;
	and.b32  	%r329, %r327, 2;
	selp.f32 	%f692, %f690, %f691, %p154;
	and.b32  	%r353, %r351, 2;
	fma.rn.f32 	%f744, %f742, %f736, 0f3F800000;
	fma.rn.f32 	%f745, %f735, 0f40490FDB, %f743;
	setp.eq.b32 	%p175, %r368, 1;
	shr.u32 	%r158, %r157, 1;
	mul.f32 	%f87, %f179, %f179;
	mul.f32 	%f4, %f213, %f213;
	mul.f32 	%f8, %f248, %f248;
	mul.f32 	%f13, %f282, %f282;
	mul.f32 	%f17, %f317, %f317;
	mul.f32 	%f22, %f351, %f351;
	mul.f32 	%f26, %f386, %f386;
	mul.f32 	%f31, %f420, %f420;
	setp.eq.s32 	%p69, %r250, 0;
	sub.f32 	%f452, %f177, %f448;
	selp.f32 	%f456, %f455, %f450, %p70;
	abs.f32 	%f457, %f427;
	setp.eq.s32 	%p76, %r260, 0;
	sub.f32 	%f485, %f177, %f482;
	selp.f32 	%f489, %f488, %f484, %p77;
	abs.f32 	%f490, %f461;
	setp.eq.s32 	%p96, %r282, 0;
	sub.f32 	%f539, %f177, %f535;
	selp.f32 	%f104, %f542, %f537, %p97;
	abs.f32 	%f543, %f837;
	setp.eq.s32 	%p116, %r314, 0;
	sub.f32 	%f591, %f177, %f587;
	selp.f32 	%f595, %f594, %f589, %p117;
	abs.f32 	%f596, %f825;
	setp.eq.s32 	%p135, %r329, 0;
	neg.f32 	%f642, %f640;
	add.s32 	%r330, %r327, 1;
	cvt.rzi.f32.f32 	%f647, %f841;
	setp.eq.s32 	%p155, %r353, 0;
	neg.f32 	%f694, %f692;
	add.s32 	%r354, %r351, 1;
	cvt.rzi.f32.f32 	%f699, %f829;
	selp.f32 	%f746, %f744, %f745, %p175;
	and.b32  	%r369, %r367, 2;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd46, %r158, 4;
	mul.f32 	%f183, %f87, 0f3C8A83B8;
	mul.f32 	%f217, %f4, 0f3C8A83B8;
	mul.f32 	%f252, %f8, 0f3C8A83B8;
	mul.f32 	%f286, %f13, 0f3C8A83B8;
	mul.f32 	%f321, %f17, 0f3C8A83B8;
	mul.f32 	%f355, %f22, 0f3C8A83B8;
	mul.f32 	%f390, %f26, 0f3C8A83B8;
	mul.f32 	%f423, %f31, 0f3C8A83B8;
	selp.f32 	%f453, %f448, %f452, %p69;
	setp.gt.f32 	%p71, %f457, 0f4B800000;
	add.f32 	%f458, %f456, 0f3F800000;
	selp.f32 	%f486, %f482, %f485, %p76;
	setp.gt.f32 	%p78, %f490, 0f4B800000;
	add.f32 	%f491, %f489, 0f3F800000;
	selp.f32 	%f540, %f535, %f539, %p96;
	setp.gt.f32 	%p98, %f543, 0f4B800000;
	add.f32 	%f544, %f104, 0f3F800000;
	selp.f32 	%f592, %f587, %f591, %p116;
	setp.gt.f32 	%p118, %f596, 0f4B800000;
	add.f32 	%f597, %f595, 0f3F800000;
	selp.f32 	%f641, %f639, %f638, %p134;
	selp.f32 	%f643, %f640, %f642, %p135;
	and.b32  	%r331, %r330, 2;
	setp.eq.f32 	%p137, %f647, %f841;
	mul.f32 	%f648, %f841, 0f00000000;
	selp.f32 	%f693, %f691, %f690, %p154;
	selp.f32 	%f695, %f692, %f694, %p155;
	and.b32  	%r355, %r354, 2;
	setp.eq.f32 	%p157, %f699, %f829;
	mul.f32 	%f700, %f829, 0f00000000;
	setp.eq.s32 	%p176, %r369, 0;
	neg.f32 	%f748, %f746;
	add.s32 	%r370, %r367, 1;
	cvt.rzi.f32.f32 	%f753, %f845;
	add.s64 	%rd47, %rd1, %rd46;
	mul.f32 	%f3, %f183, %f815;
	mul.f32 	%f218, %f217, %f816;
	mul.f32 	%f12, %f252, %f817;
	mul.f32 	%f287, %f286, %f818;
	mul.f32 	%f21, %f321, %f819;
	mul.f32 	%f356, %f355, %f820;
	mul.f32 	%f30, %f390, %f821;
	mul.f32 	%f424, %f423, %f822;
	selp.f32 	%f459, %f458, %f453, %p71;
	selp.f32 	%f492, %f491, %f486, %p78;
	selp.f32 	%f105, %f544, %f540, %p98;
	selp.f32 	%f598, %f597, %f592, %p118;
	setp.eq.s32 	%p136, %r331, 0;
	sub.f32 	%f645, %f177, %f641;
	selp.f32 	%f123, %f648, %f643, %p137;
	abs.f32 	%f649, %f841;
	setp.eq.s32 	%p156, %r355, 0;
	sub.f32 	%f697, %f177, %f693;
	selp.f32 	%f701, %f700, %f695, %p157;
	abs.f32 	%f702, %f829;
	selp.f32 	%f747, %f745, %f744, %p175;
	selp.f32 	%f749, %f746, %f748, %p176;
	and.b32  	%r371, %r370, 2;
	setp.eq.f32 	%p178, %f753, %f845;
	mul.f32 	%f754, %f845, 0f00000000;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r74, [%rd47];
	mov.b32 	%r180, %f218;
	mov.b32 	%r179, %f3;
	mov.b32 	%r198, %f287;
	mov.b32 	%r197, %f12;
	mov.b32 	%r216, %f356;
	mov.b32 	%r215, %f21;
	mov.b32 	%r234, %f424;
	mov.b32 	%r233, %f30;
	mov.b32 	%r236, %f459;
	mov.b32 	%r237, %f492;
	mov.b32 	%r239, %f456;
	mov.b32 	%r240, %f489;
	mov.b32 	%r297, %f598;
	mov.b32 	%r296, %f105;
	mov.b32 	%r303, %f595;
	mov.b32 	%r302, %f104;
	selp.f32 	%f646, %f641, %f645, %p136;
	setp.gt.f32 	%p138, %f649, 0f4B800000;
	add.f32 	%f650, %f123, 0f3F800000;
	selp.f32 	%f698, %f693, %f697, %p156;
	setp.gt.f32 	%p158, %f702, 0f4B800000;
	add.f32 	%f703, %f701, 0f3F800000;
	and.b32  	%r41, %r14, 1;
	setp.eq.s32 	%p177, %r371, 0;
	sub.f32 	%f751, %f177, %f747;
	selp.f32 	%f755, %f754, %f749, %p178;
	abs.f32 	%f756, %f845;
	// begin inline asm
	cvt.rn.f16x2.f32 %r178, %r180, %r179;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r196, %r198, %r197;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r214, %r216, %r215;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r232, %r234, %r233;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r235, %r237, %r236;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r238, %r240, %r239;
	// end inline asm
	xor.b32  	%r300, %r303, -2147483648;
	xor.b32  	%r299, %r302, -2147483648;
	selp.f32 	%f124, %f650, %f646, %p138;
	selp.f32 	%f704, %f703, %f698, %p158;
	setp.eq.s32 	%p172, %r41, %r77;
	selp.f32 	%f752, %f747, %f751, %p177;
	setp.gt.f32 	%p179, %f756, 0f4B800000;
	add.f32 	%f757, %f755, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r295, %r297, %r296;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r298, %r300, %r299;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r301, %r303, %r302;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r304, %r297, %r296;
	// end inline asm
	mov.b32 	%r344, %f704;
	mov.b32 	%r343, %f124;
	mov.b32 	%r347, %f701;
	mov.b32 	%r346, %f123;
	selp.f32 	%f758, %f757, %f752, %p179;
	selp.f32 	%f142, 0f3F800000, 0f00000000, %p172;
	// begin inline asm
	cvt.rn.f16x2.f32 %r342, %r344, %r343;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r345, %r347, %r346;
	// end inline asm
	mul.f32 	%f143, %f758, %f142;
	mul.f32 	%f144, %f755, %f142;
	add.f32 	%f781, %f833, %f833;
	mov.b32 	%r394, %f781;
	and.b32  	%r395, %r394, -2147483648;
	or.b32  	%r396, %r395, 1056964608;
	mov.b32 	%f782, %r396;
	add.f32 	%f783, %f781, %f782;
	cvt.rzi.f32.f32 	%f784, %f783;
	abs.f32 	%f785, %f781;
	setp.gt.f32 	%p193, %f785, 0f4B000000;
	selp.f32 	%f786, %f781, %f784, %p193;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p194, %f785, 0f3F000000;
	selp.f32 	%f788, %f787, %f786, %p194;
	cvt.rzi.s32.f32 	%r397, %f788;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f833;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	and.b32  	%r398, %r397, 1;
	setp.eq.b32 	%p195, %r398, 1;
	selp.f32 	%f800, %f798, %f799, %p195;
	selp.f32 	%f801, %f799, %f798, %p195;
	and.b32  	%r399, %r397, 2;
	setp.eq.s32 	%p196, %r399, 0;
	neg.f32 	%f802, %f800;
	selp.f32 	%f803, %f800, %f802, %p196;
	add.s32 	%r400, %r397, 1;
	and.b32  	%r401, %r400, 2;
	setp.eq.s32 	%p197, %r401, 0;
	sub.f32 	%f805, %f177, %f801;
	selp.f32 	%f806, %f801, %f805, %p197;
	cvt.rzi.f32.f32 	%f807, %f833;
	setp.eq.f32 	%p198, %f807, %f833;
	mul.f32 	%f808, %f833, 0f00000000;
	selp.f32 	%f809, %f808, %f803, %p198;
	abs.f32 	%f810, %f833;
	setp.gt.f32 	%p199, %f810, 0f4B800000;
	add.f32 	%f811, %f809, 0f3F800000;
	selp.f32 	%f812, %f811, %f806, %p199;
	mul.f32 	%f813, %f812, %f142;
	mul.f32 	%f814, %f809, %f142;
	mov.b32 	%r384, %f813;
	mov.b32 	%r383, %f143;
	// begin inline asm
	cvt.rn.f16x2.f32 %r382, %r384, %r383;
	// end inline asm
	mov.b32 	%r390, %f814;
	xor.b32  	%r387, %r390, -2147483648;
	mov.b32 	%r389, %f144;
	xor.b32  	%r386, %r389, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r385, %r387, %r386;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r388, %r390, %r389;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r391, %r384, %r383;
	// end inline asm
	shl.b32 	%r403, %r140, 13;
	shl.b32 	%r404, %r144, 9;
	and.b32  	%r405, %r71, 28;
	shl.b32 	%r406, %r1, 5;
	and.b32  	%r407, %r406, 224;
	or.b32  	%r408, %r405, %r407;
	and.b32  	%r55, %r2, 7;
	shl.b32 	%r409, %r2, 2;
	and.b32  	%r56, %r409, 32;
	and.b32  	%r57, %r69, 16;
	and.b32  	%r58, %r75, 8;
	and.b32  	%r410, %r406, 256;
	or.b32  	%r411, %r403, %r410;
	or.b32  	%r412, %r411, %r408;
	add.s32 	%r59, %r412, %r404;
	and.b32  	%r60, %r4, 8;
	shl.b32 	%r413, %r4, 4;
	or.b32  	%r414, %r413, %r60;
	shr.u32 	%r415, %r414, 2;
	and.b32  	%r416, %r415, 30;
	shl.b32 	%r417, %r4, 3;
	and.b32  	%r418, %r417, 64;
	shl.b32 	%r419, %r2, 1;
	or.b32  	%r420, %r418, %r419;
	shr.u32 	%r421, %r420, 2;
	and.b32  	%r422, %r3, 32;
	or.b32  	%r423, %r421, %r422;
	or.b32  	%r424, %r423, 8;
	or.b32  	%r425, %r73, %r72;
	or.b32  	%r426, %r425, %r70;
	shr.u32 	%r427, %r426, 1;
	mul.lo.s32 	%r428, %r427, 65;
	add.s32 	%r429, %r423, %r428;
	add.s32 	%r430, %r424, %r428;
	shl.b32 	%r431, %r142, 14;
	add.s32 	%r432, %r431, -49152;
	and.b32  	%r433, %r409, 28;
	or.b32  	%r434, %r433, %r14;
	shl.b32 	%r435, %r434, 9;
	or.b32  	%r436, %r435, %r408;
	or.b32  	%r61, %r436, %r410;
	cvt.s64.s32 	%rd5, %r432;
	shr.u32 	%r437, %r2, 3;
	or.b32  	%r438, %r437, 2;
	or.b32  	%r439, %r437, 4;
	or.b32  	%r440, %r437, 6;
	and.b32  	%r441, %r2, 1;
	neg.s32 	%r442, %r441;
	setp.eq.b32 	%p201, %r441, 1;
	and.b32  	%r443, %r442, 520;
	mul.lo.s32 	%r444, %r437, 1057;
	bfe.s32 	%r445, %r2, 2, 1;
	and.b32  	%r446, %r2, 4;
	setp.eq.s32 	%p202, %r446, 0;
	and.b32  	%r447, %r445, 130;
	bfe.s32 	%r448, %r2, 1, 1;
	and.b32  	%r449, %r2, 2;
	setp.eq.s32 	%p203, %r449, 0;
	and.b32  	%r450, %r448, 260;
	mul.lo.s32 	%r451, %r79, 65;
	add.s32 	%r452, %r443, %r416;
	add.s32 	%r453, %r452, %r444;
	add.s32 	%r454, %r453, %r447;
	add.s32 	%r455, %r454, %r450;
	add.s32 	%r456, %r455, %r451;
	mul.wide.u32 	%rd48, %r456, 4;
	mov.u64 	%rd49, shmem;
	add.s64 	%rd6, %rd49, %rd48;
	cvt.u64.u32 	%rd50, %r451;
	selp.b64 	%rd51, 0, 260, %p203;
	selp.b64 	%rd52, 0, 130, %p202;
	cvt.u64.u32 	%rd53, %r444;
	selp.b64 	%rd54, 520, 0, %p201;
	cvt.u64.u32 	%rd55, %r416;
	add.s64 	%rd56, %rd55, %rd54;
	add.s64 	%rd57, %rd56, %rd53;
	add.s64 	%rd58, %rd57, %rd52;
	add.s64 	%rd59, %rd58, %rd51;
	add.s64 	%rd60, %rd59, %rd50;
	shl.b64 	%rd61, %rd60, 2;
	add.s64 	%rd7, %rd49, %rd61;
	mul.lo.s32 	%r457, %r438, 1057;
	add.s32 	%r458, %r452, %r457;
	add.s32 	%r459, %r458, %r447;
	add.s32 	%r460, %r459, %r450;
	add.s32 	%r461, %r460, %r451;
	mul.wide.u32 	%rd62, %r461, 4;
	add.s64 	%rd8, %rd49, %rd62;
	cvt.u64.u32 	%rd63, %r457;
	add.s64 	%rd64, %rd56, %rd63;
	add.s64 	%rd65, %rd64, %rd52;
	add.s64 	%rd66, %rd65, %rd51;
	add.s64 	%rd67, %rd66, %rd50;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd9, %rd49, %rd68;
	mul.lo.s32 	%r462, %r439, 1057;
	add.s32 	%r463, %r452, %r462;
	add.s32 	%r464, %r463, %r447;
	add.s32 	%r465, %r464, %r450;
	add.s32 	%r466, %r465, %r451;
	mul.wide.u32 	%rd69, %r466, 4;
	add.s64 	%rd10, %rd49, %rd69;
	cvt.u64.u32 	%rd70, %r462;
	add.s64 	%rd71, %rd56, %rd70;
	add.s64 	%rd72, %rd71, %rd52;
	add.s64 	%rd73, %rd72, %rd51;
	add.s64 	%rd74, %rd73, %rd50;
	shl.b64 	%rd75, %rd74, 2;
	add.s64 	%rd11, %rd49, %rd75;
	mul.lo.s32 	%r467, %r440, 1057;
	add.s32 	%r468, %r452, %r467;
	add.s32 	%r469, %r468, %r447;
	add.s32 	%r470, %r469, %r450;
	add.s32 	%r471, %r470, %r451;
	mul.wide.u32 	%rd76, %r471, 4;
	add.s64 	%rd12, %rd49, %rd76;
	cvt.u64.u32 	%rd77, %r467;
	add.s64 	%rd78, %rd56, %rd77;
	add.s64 	%rd79, %rd78, %rd52;
	add.s64 	%rd80, %rd79, %rd51;
	add.s64 	%rd81, %rd80, %rd50;
	shl.b64 	%rd82, %rd81, 2;
	add.s64 	%rd13, %rd49, %rd82;
	mul.lo.s32 	%r472, %r79, 520;
	setp.eq.s32 	%p204, %r77, 0;
	selp.b32 	%r473, 0, 130, %p204;
	bfe.s32 	%r474, %r4, 2, 1;
	and.b32  	%r475, %r474, 260;
	bfe.s32 	%r476, %r4, 1, 1;
	and.b32  	%r477, %r476, 65;
	and.b32  	%r478, %r419, 14;
	or.b32  	%r479, %r478, %r79;
	mul.lo.s32 	%r480, %r479, 65;
	add.s32 	%r481, %r416, %r480;
	add.s32 	%r482, %r481, %r444;
	mul.wide.u32 	%rd83, %r482, 4;
	add.s64 	%rd14, %rd49, %rd83;
	cvt.u64.u32 	%rd84, %r480;
	add.s64 	%rd85, %rd84, %rd55;
	add.s64 	%rd86, %rd85, %rd53;
	shl.b64 	%rd87, %rd86, 2;
	add.s64 	%rd15, %rd49, %rd87;
	add.s32 	%r483, %r481, %r457;
	mul.wide.u32 	%rd88, %r483, 4;
	add.s64 	%rd16, %rd49, %rd88;
	add.s64 	%rd89, %rd85, %rd63;
	shl.b64 	%rd90, %rd89, 2;
	add.s64 	%rd17, %rd49, %rd90;
	add.s32 	%r484, %r481, %r462;
	mul.wide.u32 	%rd91, %r484, 4;
	add.s64 	%rd18, %rd49, %rd91;
	add.s64 	%rd92, %rd85, %rd70;
	shl.b64 	%rd93, %rd92, 2;
	add.s64 	%rd19, %rd49, %rd93;
	add.s32 	%r485, %r481, %r467;
	mul.wide.u32 	%rd94, %r485, 4;
	add.s64 	%rd20, %rd49, %rd94;
	add.s64 	%rd95, %rd85, %rd77;
	shl.b64 	%rd96, %rd95, 2;
	add.s64 	%rd21, %rd49, %rd96;
	mul.wide.u32 	%rd97, %r430, 4;
	add.s64 	%rd22, %rd49, %rd97;
	mul.wide.u32 	%rd98, %r429, 4;
	add.s64 	%rd23, %rd49, %rd98;
	or.b32  	%r486, %r473, %r475;
	or.b32  	%r487, %r486, %r477;
	add.s32 	%r488, %r487, %r424;
	add.s32 	%r489, %r488, %r472;
	mul.wide.u32 	%rd99, %r489, 4;
	add.s64 	%rd24, %rd49, %rd99;
	add.s32 	%r490, %r487, %r423;
	add.s32 	%r491, %r490, %r472;
	mul.wide.u32 	%rd100, %r491, 4;
	add.s64 	%rd25, %rd49, %rd100;
	setp.eq.s32 	%p205, %r60, 0;
	mov.u16 	%rs288, 25600;
	mov.u16 	%rs236, 21504;
	mov.u16 	%rs296, 18432;
	mov.u16 	%rs274, -14592;
	mov.u32 	%r2539, %r2531;
	mov.u32 	%r2540, %r2531;
	mov.u32 	%r2541, %r2531;
	mov.u32 	%r2542, %r2531;
	mov.u32 	%r2553, %r2531;
	mov.u32 	%r2554, %r2531;
	mov.u32 	%r68, %r2531;
	bra.uni 	$L__BB0_83;
$L__BB0_89:                             // %pass10174
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r2524, %r2532, %r61;
	or.b32  	%r2525, %r2524, 65536;
	cvt.s64.s32 	%rd133, %r2525;
	add.s64 	%rd134, %rd133, %rd5;
	shr.u64 	%rd135, %rd134, 42;
	add.s64 	%rd136, %rd134, %rd135;
	shr.s64 	%rd137, %rd136, 22;
	setp.lt.s64 	%p229, %rd134, 0;
	and.b64  	%rd138, %rd136, -4194304;
	setp.ne.s64 	%p230, %rd138, %rd134;
	and.pred  	%p231, %p229, %p230;
	selp.u64 	%rd139, 1, 0, %p231;
	sub.s64 	%rd140, %rd139, %rd137;
	shl.b64 	%rd141, %rd140, 22;
	add.s64 	%rd142, %rd141, %rd134;
	shl.b64 	%rd143, %rd142, 2;
	add.s64 	%rd144, %rd3, %rd143;
	st.global.v4.u32 	[%rd144], {%r131, %r133, %r132, %r134};
	or.b32  	%r2526, %r2524, 98304;
	cvt.s64.s32 	%rd145, %r2526;
	add.s64 	%rd146, %rd145, %rd5;
	shr.u64 	%rd147, %rd146, 42;
	add.s64 	%rd148, %rd146, %rd147;
	shr.s64 	%rd149, %rd148, 22;
	setp.lt.s64 	%p232, %rd146, 0;
	and.b64  	%rd150, %rd148, -4194304;
	setp.ne.s64 	%p233, %rd150, %rd146;
	and.pred  	%p234, %p232, %p233;
	selp.u64 	%rd151, 1, 0, %p234;
	sub.s64 	%rd152, %rd151, %rd149;
	shl.b64 	%rd153, %rd152, 22;
	add.s64 	%rd154, %rd153, %rd146;
	shl.b64 	%rd155, %rd154, 2;
	add.s64 	%rd156, %rd3, %rd155;
	st.global.v4.u32 	[%rd156], {%r135, %r137, %r136, %r138};
	setp.ne.s32 	%p235, %r68, 7936;
	add.s32 	%r68, %r68, 256;
	add.s32 	%r2527, %r68, %r140;
	setp.lt.s32 	%p236, %r2527, %r141;
	and.pred  	%p237, %p235, %p236;
	@%p237 bra 	$L__BB0_83;
	bra.uni 	$L__BB0_90;
$L__BB0_83:                             // %L1416
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_84 Depth 2
	or.b32  	%r557, %r68, %r55;
	or.b32  	%r558, %r557, %r56;
	or.b32  	%r559, %r558, %r57;
	or.b32  	%r560, %r559, %r58;
	shl.b32 	%r561, %r560, 13;
	add.s32 	%r562, %r59, %r561;
	shr.s32 	%r563, %r562, 31;
	shr.u32 	%r564, %r563, 6;
	add.s32 	%r565, %r562, %r564;
	shr.s32 	%r566, %r565, 26;
	setp.lt.s32 	%p206, %r562, 0;
	and.b32  	%r567, %r565, -67108864;
	setp.ne.s32 	%p207, %r567, %r562;
	and.pred  	%p208, %p206, %p207;
	selp.u32 	%r568, 1, 0, %p208;
	sub.s32 	%r569, %r568, %r566;
	shl.b32 	%r570, %r569, 26;
	add.s32 	%r571, %r570, %r562;
	mul.wide.s32 	%rd101, %r571, 4;
	add.s64 	%rd102, %rd2, %rd101;
	ld.global.v4.u32 	{%r572, %r573, %r574, %r575}, [%rd102];
	or.b32  	%r576, %r561, 524288;
	add.s32 	%r577, %r59, %r576;
	shr.s32 	%r578, %r577, 31;
	shr.u32 	%r579, %r578, 6;
	add.s32 	%r580, %r577, %r579;
	shr.s32 	%r581, %r580, 26;
	setp.lt.s32 	%p209, %r577, 0;
	and.b32  	%r582, %r580, -67108864;
	setp.ne.s32 	%p210, %r582, %r577;
	and.pred  	%p211, %p209, %p210;
	selp.u32 	%r583, 1, 0, %p211;
	sub.s32 	%r584, %r583, %r581;
	shl.b32 	%r585, %r584, 26;
	add.s32 	%r586, %r585, %r577;
	mul.wide.s32 	%rd103, %r586, 4;
	add.s64 	%rd104, %rd2, %rd103;
	ld.global.v4.u32 	{%r587, %r588, %r589, %r590}, [%rd104];
	or.b32  	%r591, %r561, 1048576;
	add.s32 	%r592, %r59, %r591;
	shr.s32 	%r593, %r592, 31;
	shr.u32 	%r594, %r593, 6;
	add.s32 	%r595, %r592, %r594;
	shr.s32 	%r596, %r595, 26;
	setp.lt.s32 	%p212, %r592, 0;
	and.b32  	%r597, %r595, -67108864;
	setp.ne.s32 	%p213, %r597, %r592;
	and.pred  	%p214, %p212, %p213;
	selp.u32 	%r598, 1, 0, %p214;
	sub.s32 	%r599, %r598, %r596;
	shl.b32 	%r600, %r599, 26;
	add.s32 	%r601, %r600, %r592;
	mul.wide.s32 	%rd105, %r601, 4;
	add.s64 	%rd106, %rd2, %rd105;
	ld.global.v4.u32 	{%r602, %r603, %r604, %r605}, [%rd106];
	or.b32  	%r606, %r561, 1572864;
	add.s32 	%r607, %r59, %r606;
	shr.s32 	%r608, %r607, 31;
	shr.u32 	%r609, %r608, 6;
	add.s32 	%r610, %r607, %r609;
	shr.s32 	%r611, %r610, 26;
	setp.lt.s32 	%p215, %r607, 0;
	and.b32  	%r612, %r610, -67108864;
	setp.ne.s32 	%p216, %r612, %r607;
	and.pred  	%p217, %p215, %p216;
	selp.u32 	%r613, 1, 0, %p217;
	sub.s32 	%r614, %r613, %r611;
	shl.b32 	%r615, %r614, 26;
	add.s32 	%r616, %r615, %r607;
	mul.wide.s32 	%rd107, %r616, 4;
	add.s64 	%rd108, %rd2, %rd107;
	ld.global.v4.u32 	{%r617, %r618, %r619, %r620}, [%rd108];
	selp.b32 	%r621, %r574, %r572, %p205;
	shfl.sync.bfly.b32	%r622, %r621, 8, 31, -1;
	selp.b32 	%r493, %r572, %r622, %p205;
	selp.b32 	%r494, %r622, %r574, %p205;
	selp.b32 	%r623, %r575, %r573, %p205;
	shfl.sync.bfly.b32	%r624, %r623, 8, 31, -1;
	selp.b32 	%r501, %r573, %r624, %p205;
	selp.b32 	%r502, %r624, %r575, %p205;
	selp.b32 	%r625, %r589, %r587, %p205;
	shfl.sync.bfly.b32	%r626, %r625, 8, 31, -1;
	selp.b32 	%r509, %r587, %r626, %p205;
	selp.b32 	%r510, %r626, %r589, %p205;
	selp.b32 	%r627, %r590, %r588, %p205;
	shfl.sync.bfly.b32	%r628, %r627, 8, 31, -1;
	selp.b32 	%r517, %r588, %r628, %p205;
	selp.b32 	%r518, %r628, %r590, %p205;
	selp.b32 	%r629, %r604, %r602, %p205;
	shfl.sync.bfly.b32	%r630, %r629, 8, 31, -1;
	selp.b32 	%r525, %r602, %r630, %p205;
	selp.b32 	%r526, %r630, %r604, %p205;
	selp.b32 	%r631, %r605, %r603, %p205;
	shfl.sync.bfly.b32	%r632, %r631, 8, 31, -1;
	selp.b32 	%r533, %r603, %r632, %p205;
	selp.b32 	%r534, %r632, %r605, %p205;
	selp.b32 	%r633, %r619, %r617, %p205;
	shfl.sync.bfly.b32	%r634, %r633, 8, 31, -1;
	selp.b32 	%r541, %r617, %r634, %p205;
	selp.b32 	%r542, %r634, %r619, %p205;
	selp.b32 	%r635, %r620, %r618, %p205;
	shfl.sync.bfly.b32	%r636, %r635, 8, 31, -1;
	selp.b32 	%r549, %r618, %r636, %p205;
	selp.b32 	%r550, %r636, %r620, %p205;
	mov.u32 	%r551, 21520;
	// begin inline asm
	prmt.b32 %r492, %r493, %r494, %r551;
	// end inline asm
	mov.u32 	%r555, 30258;
	// begin inline asm
	prmt.b32 %r496, %r493, %r494, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r500, %r501, %r502, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r504, %r501, %r502, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r508, %r509, %r510, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r512, %r509, %r510, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r516, %r517, %r518, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r520, %r517, %r518, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r524, %r525, %r526, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r528, %r525, %r526, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r532, %r533, %r534, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r536, %r533, %r534, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r540, %r541, %r542, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r544, %r541, %r542, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r548, %r549, %r550, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r552, %r549, %r550, %r555;
	// end inline asm
	st.shared.u32 	[%rd6], %r492;
	st.shared.u32 	[%rd7+128], %r496;
	st.shared.u32 	[%rd7+4], %r500;
	st.shared.u32 	[%rd7+132], %r504;
	st.shared.u32 	[%rd8], %r508;
	st.shared.u32 	[%rd9+128], %r512;
	st.shared.u32 	[%rd9+4], %r516;
	st.shared.u32 	[%rd9+132], %r520;
	st.shared.u32 	[%rd10], %r524;
	st.shared.u32 	[%rd11+128], %r528;
	st.shared.u32 	[%rd11+4], %r532;
	st.shared.u32 	[%rd11+132], %r536;
	st.shared.u32 	[%rd12], %r540;
	st.shared.u32 	[%rd13+128], %r544;
	st.shared.u32 	[%rd13+4], %r548;
	st.shared.u32 	[%rd13+132], %r552;
	bar.sync 	0;
	mov.u32 	%r2552, 256;
	mov.u64 	%rd161, %rd25;
	mov.u64 	%rd162, %rd24;
	mov.u64 	%rd163, %rd23;
	mov.u64 	%rd164, %rd22;
	mov.u32 	%r2555, %r2542;
	mov.u32 	%r2556, %r2541;
	mov.u32 	%r2557, %r2540;
	mov.u32 	%r2558, %r2539;
$L__BB0_84:                             // %pass5679
                                        //   Parent Loop BB0_83 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r2540, %r2554;
	mov.u32 	%r2539, %r2553;
	ld.shared.u32 	%r2541, [%rd161];
	ld.shared.u32 	%r2542, [%rd162];
	// begin inline asm
	mov.b32 %r642, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r653, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r641, %r2541, -2004318072;
	mov.u32 	%r640, 983055;
	// begin inline asm
	lop3.b32 %r639, %r640, %r641, %r642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r643, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r644, %r642, %r643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r647, %r639, %r644;
	// end inline asm
	mov.u32 	%r651, 15728880;
	// begin inline asm
	lop3.b32 %r650, %r651, %r641, %r653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r654, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r655, %r653, %r654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r658, %r650, %r655;
	// end inline asm
	shr.u32 	%r663, %r641, 8;
	// begin inline asm
	lop3.b32 %r661, %r640, %r663, %r642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r665, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r666, %r642, %r665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r669, %r661, %r666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r672, %r651, %r663, %r653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r676, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r677, %r653, %r676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r680, %r672, %r677;
	// end inline asm
	// begin inline asm
	mov.b32 %r688, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r699, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r687, %r2542, -2004318072;
	// begin inline asm
	lop3.b32 %r685, %r640, %r687, %r688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r689, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r690, %r688, %r689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r693, %r685, %r690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r696, %r651, %r687, %r699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r700, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r701, %r699, %r700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r704, %r696, %r701;
	// end inline asm
	shr.u32 	%r709, %r687, 8;
	// begin inline asm
	lop3.b32 %r707, %r640, %r709, %r688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r711, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r712, %r688, %r711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r715, %r707, %r712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r718, %r651, %r709, %r699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r722, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r723, %r699, %r722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r726, %r718, %r723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r729, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r731, %r729, %r647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r734, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r736, %r734, %r658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r739, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r741, %r739, %r669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r744, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r746, %r744, %r680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r749, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r751, %r749, %r693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r754, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r756, %r754, %r704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r759, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r761, %r759, %r715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r764, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r766, %r764, %r726;
	// end inline asm
	// begin inline asm
	mov.b32 %r774, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r785, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r773, %r2558, -2004318072;
	// begin inline asm
	lop3.b32 %r771, %r640, %r773, %r774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r775, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r776, %r774, %r775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r779, %r771, %r776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r782, %r651, %r773, %r785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r786, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r787, %r785, %r786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r790, %r782, %r787;
	// end inline asm
	shr.u32 	%r795, %r773, 8;
	// begin inline asm
	lop3.b32 %r793, %r640, %r795, %r774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r797, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r798, %r774, %r797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r801, %r793, %r798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r804, %r651, %r795, %r785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r808, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r809, %r785, %r808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r812, %r804, %r809;
	// end inline asm
	// begin inline asm
	mov.b32 %r820, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r831, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r819, %r2557, -2004318072;
	// begin inline asm
	lop3.b32 %r817, %r640, %r819, %r820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r821, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r822, %r820, %r821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r825, %r817, %r822;
	// end inline asm
	// begin inline asm
	lop3.b32 %r828, %r651, %r819, %r831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r832, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r833, %r831, %r832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r836, %r828, %r833;
	// end inline asm
	shr.u32 	%r841, %r819, 8;
	// begin inline asm
	lop3.b32 %r839, %r640, %r841, %r820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r843, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r844, %r820, %r843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r847, %r839, %r844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r850, %r651, %r841, %r831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r854, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r855, %r831, %r854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r858, %r850, %r855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r861, %r178, %r779, %r731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r865, %r178, %r790, %r736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r869, %r178, %r801, %r741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r873, %r178, %r812, %r746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r877, %r178, %r825, %r751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r881, %r178, %r836, %r756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r885, %r178, %r847, %r761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r889, %r178, %r858, %r766;
	// end inline asm
	// begin inline asm
	mov.b32 %r898, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r909, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r897, %r2556, -2004318072;
	// begin inline asm
	lop3.b32 %r895, %r640, %r897, %r898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r899, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r900, %r898, %r899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r903, %r895, %r900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r906, %r651, %r897, %r909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r911, %r909, %r910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r914, %r906, %r911;
	// end inline asm
	shr.u32 	%r919, %r897, 8;
	// begin inline asm
	lop3.b32 %r917, %r640, %r919, %r898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r921, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r922, %r898, %r921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r925, %r917, %r922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r928, %r651, %r919, %r909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r932, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r933, %r909, %r932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r936, %r928, %r933;
	// end inline asm
	// begin inline asm
	mov.b32 %r944, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r955, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r943, %r2555, -2004318072;
	// begin inline asm
	lop3.b32 %r941, %r640, %r943, %r944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r945, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r946, %r944, %r945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r949, %r941, %r946;
	// end inline asm
	// begin inline asm
	lop3.b32 %r952, %r651, %r943, %r955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r957, %r955, %r956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r960, %r952, %r957;
	// end inline asm
	shr.u32 	%r965, %r943, 8;
	// begin inline asm
	lop3.b32 %r963, %r640, %r965, %r944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r967, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r968, %r944, %r967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r971, %r963, %r968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r974, %r651, %r965, %r955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r978, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r979, %r955, %r978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r982, %r974, %r979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r985, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r987, %r985, %r903, %r861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r991, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r993, %r991, %r914, %r865;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r997, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r999, %r997, %r925, %r869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1003, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1005, %r1003, %r936, %r873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1009, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1011, %r1009, %r949, %r877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1015, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1017, %r1015, %r960, %r881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1021, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1023, %r1021, %r971, %r885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1027, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1029, %r1027, %r982, %r889;
	// end inline asm
	// begin inline asm
	mov.b32 %r1038, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1049, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r1037, %r2539, -2004318072;
	// begin inline asm
	lop3.b32 %r1035, %r640, %r1037, %r1038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1039, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1040, %r1038, %r1039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1043, %r1035, %r1040;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1046, %r651, %r1037, %r1049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1050, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1051, %r1049, %r1050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1054, %r1046, %r1051;
	// end inline asm
	shr.u32 	%r1059, %r1037, 8;
	// begin inline asm
	lop3.b32 %r1057, %r640, %r1059, %r1038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1061, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1062, %r1038, %r1061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1065, %r1057, %r1062;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1068, %r651, %r1059, %r1049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1072, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1073, %r1049, %r1072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1076, %r1068, %r1073;
	// end inline asm
	// begin inline asm
	mov.b32 %r1084, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1095, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r1083, %r2540, -2004318072;
	// begin inline asm
	lop3.b32 %r1081, %r640, %r1083, %r1084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1085, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1086, %r1084, %r1085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1089, %r1081, %r1086;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1092, %r651, %r1083, %r1095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1096, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1097, %r1095, %r1096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1100, %r1092, %r1097;
	// end inline asm
	shr.u32 	%r1105, %r1083, 8;
	// begin inline asm
	lop3.b32 %r1103, %r640, %r1105, %r1084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1107, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1108, %r1084, %r1107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1111, %r1103, %r1108;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1114, %r651, %r1105, %r1095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1118, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1119, %r1095, %r1118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1122, %r1114, %r1119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1164, %r214, %r1043, %r987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1161, %r214, %r1054, %r993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1173, %r214, %r1065, %r999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1170, %r214, %r1076, %r1005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1182, %r214, %r1089, %r1011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1179, %r214, %r1100, %r1017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1191, %r214, %r1111, %r1023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1188, %r214, %r1122, %r1029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1157, %r238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1159, %r1157, %r1161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1162, %r235, %r1164, %r1159;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1166, %r238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1168, %r1166, %r1170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1171, %r235, %r1173, %r1168;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1175, %r238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1177, %r1175, %r1179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1180, %r235, %r1182, %r1177;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1184, %r238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1186, %r1184, %r1188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1189, %r235, %r1191, %r1186;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1193, %r238, %r1164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1196, %r235, %r1161, %r1193;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1200, %r238, %r1173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1203, %r235, %r1170, %r1200;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1207, %r238, %r1182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1210, %r235, %r1179, %r1207;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1214, %r238, %r1191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1217, %r235, %r1188, %r1214;
	// end inline asm
	mov.u32 	%r1229, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1268, %r1265}, {%r295, %r301, %r298, %r304}, {%r1162, %r1196}, {%r1229, %r1229};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1277, %r1274}, {%r295, %r301, %r298, %r304}, {%r1171, %r1203}, {%r1229, %r1229};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1286, %r1283}, {%r295, %r301, %r298, %r304}, {%r1180, %r1210}, {%r1229, %r1229};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1295, %r1292}, {%r295, %r301, %r298, %r304}, {%r1189, %r1217}, {%r1229, %r1229};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1261, %r345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1263, %r1261, %r1265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1266, %r342, %r1268, %r1263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1270, %r345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1272, %r1270, %r1274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1275, %r342, %r1277, %r1272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1279, %r345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1281, %r1279, %r1283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1284, %r342, %r1286, %r1281;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1288, %r345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1290, %r1288, %r1292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1293, %r342, %r1295, %r1290;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1297, %r345, %r1268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1300, %r342, %r1265, %r1297;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1304, %r345, %r1277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1307, %r342, %r1274, %r1304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1311, %r345, %r1286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1314, %r342, %r1283, %r1311;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1318, %r345, %r1295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1321, %r342, %r1292, %r1318;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1325, %r1326}, {%r382, %r388, %r385, %r391}, {%r1266, %r1300}, {%r1229, %r1229};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1335, %r1336}, {%r382, %r388, %r385, %r391}, {%r1275, %r1307}, {%r1229, %r1229};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1345, %r1346}, {%r382, %r388, %r385, %r391}, {%r1284, %r1314}, {%r1229, %r1229};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1355, %r1356}, {%r382, %r388, %r385, %r391}, {%r1293, %r1321}, {%r1229, %r1229};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1365, %r74, %r1325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1368, %r74, %r1326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1371, %r74, %r1335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1374, %r74, %r1336;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1377, %r74, %r1345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1380, %r74, %r1346;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1383, %r74, %r1355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1386, %r74, %r1356;
	// end inline asm
	// begin inline asm
	mov.b32 %r1389, {%rs274, %rs274};
	// end inline asm
	mov.u16 	%rs99, 18176;
	// begin inline asm
	mov.b32 %r1390, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1391, %r1365, %r1389;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1394, %r1391, %r1390;
	// end inline asm
	// begin inline asm
	mov.b32 %r1397, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1398, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1399, %r1368, %r1397;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1402, %r1399, %r1398;
	// end inline asm
	// begin inline asm
	mov.b32 %r1405, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1406, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1407, %r1371, %r1405;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1410, %r1407, %r1406;
	// end inline asm
	// begin inline asm
	mov.b32 %r1413, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1414, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1415, %r1374, %r1413;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1418, %r1415, %r1414;
	// end inline asm
	// begin inline asm
	mov.b32 %r1421, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1422, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1423, %r1377, %r1421;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1426, %r1423, %r1422;
	// end inline asm
	// begin inline asm
	mov.b32 %r1429, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1430, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1431, %r1380, %r1429;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1434, %r1431, %r1430;
	// end inline asm
	// begin inline asm
	mov.b32 %r1437, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1438, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1439, %r1383, %r1437;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1442, %r1439, %r1438;
	// end inline asm
	// begin inline asm
	mov.b32 %r1445, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1446, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1447, %r1386, %r1445;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1450, %r1447, %r1446;
	// end inline asm
	// begin inline asm
	mov.b32 %r1456, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1454, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1455, %r1456, %r1454;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1458, %r1394, %r1455;
	// end inline asm
	// begin inline asm
	mov.b32 %r1461, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1462, %r1456, %r1461;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1465, %r1402, %r1462;
	// end inline asm
	// begin inline asm
	mov.b32 %r1468, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1469, %r1456, %r1468;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1472, %r1410, %r1469;
	// end inline asm
	// begin inline asm
	mov.b32 %r1475, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1476, %r1456, %r1475;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1479, %r1418, %r1476;
	// end inline asm
	mov.u32 	%r1485, 25152;
	// begin inline asm
	prmt.b32 %r1482, %r1458, %r1472, %r1485;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1486, %r1465, %r1479, %r1485;
	// end inline asm
	shl.b32 	%r1493, %r1486, 4;
	mov.u32 	%r1491, 252645135;
	// begin inline asm
	lop3.b32 %r1490, %r1491, %r1482, %r1493, 202;
	// end inline asm
	xor.b32  	%r2433, %r1490, -2004318072;
	// begin inline asm
	mov.b32 %r1497, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1495, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1496, %r1497, %r1495;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1499, %r1426, %r1496;
	// end inline asm
	// begin inline asm
	mov.b32 %r1502, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1503, %r1497, %r1502;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1506, %r1434, %r1503;
	// end inline asm
	// begin inline asm
	mov.b32 %r1509, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1510, %r1497, %r1509;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1513, %r1442, %r1510;
	// end inline asm
	// begin inline asm
	mov.b32 %r1516, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1517, %r1497, %r1516;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1520, %r1450, %r1517;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1523, %r1499, %r1513, %r1485;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1527, %r1506, %r1520, %r1485;
	// end inline asm
	shl.b32 	%r1534, %r1527, 4;
	// begin inline asm
	lop3.b32 %r1531, %r1491, %r1523, %r1534, 202;
	// end inline asm
	xor.b32  	%r2434, %r1531, -2004318072;
	st.shared.u32 	[%rd163], %r2433;
	st.shared.u32 	[%rd164], %r2434;
	ld.shared.u32 	%r2553, [%rd161];
	ld.shared.u32 	%r2554, [%rd162];
	// begin inline asm
	mov.b32 %r1540, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1551, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r1539, %r2553, -2004318072;
	// begin inline asm
	lop3.b32 %r1537, %r640, %r1539, %r1540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1541, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1542, %r1540, %r1541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1545, %r1537, %r1542;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1548, %r651, %r1539, %r1551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1552, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1553, %r1551, %r1552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1556, %r1548, %r1553;
	// end inline asm
	shr.u32 	%r1561, %r1539, 8;
	// begin inline asm
	lop3.b32 %r1559, %r640, %r1561, %r1540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1563, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1564, %r1540, %r1563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1567, %r1559, %r1564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1570, %r651, %r1561, %r1551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1574, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1575, %r1551, %r1574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1578, %r1570, %r1575;
	// end inline asm
	// begin inline asm
	mov.b32 %r1586, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1597, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r1585, %r2554, -2004318072;
	// begin inline asm
	lop3.b32 %r1583, %r640, %r1585, %r1586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1587, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1588, %r1586, %r1587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1591, %r1583, %r1588;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1594, %r651, %r1585, %r1597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1598, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1599, %r1597, %r1598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1602, %r1594, %r1599;
	// end inline asm
	shr.u32 	%r1607, %r1585, 8;
	// begin inline asm
	lop3.b32 %r1605, %r640, %r1607, %r1586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1609, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1610, %r1586, %r1609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1613, %r1605, %r1610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1616, %r651, %r1607, %r1597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1620, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1621, %r1597, %r1620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1624, %r1616, %r1621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1627, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1629, %r1627, %r1545;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1632, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1634, %r1632, %r1556;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1637, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1639, %r1637, %r1567;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1642, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1644, %r1642, %r1578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1647, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1649, %r1647, %r1591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1652, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1654, %r1652, %r1602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1657, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1659, %r1657, %r1613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1662, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1664, %r1662, %r1624;
	// end inline asm
	// begin inline asm
	mov.b32 %r1672, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1683, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1669, %r640, %r897, %r1672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1673, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1674, %r1672, %r1673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1677, %r1669, %r1674;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1680, %r651, %r897, %r1683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1684, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1685, %r1683, %r1684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1688, %r1680, %r1685;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1691, %r640, %r919, %r1672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1695, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1696, %r1672, %r1695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1699, %r1691, %r1696;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1702, %r651, %r919, %r1683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1706, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1707, %r1683, %r1706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1710, %r1702, %r1707;
	// end inline asm
	// begin inline asm
	mov.b32 %r1718, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1729, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1715, %r640, %r943, %r1718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1719, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1720, %r1718, %r1719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1723, %r1715, %r1720;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1726, %r651, %r943, %r1729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1730, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1731, %r1729, %r1730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1734, %r1726, %r1731;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1737, %r640, %r965, %r1718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1741, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1742, %r1718, %r1741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1745, %r1737, %r1742;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1748, %r651, %r965, %r1729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1752, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1753, %r1729, %r1752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1756, %r1748, %r1753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1759, %r178, %r1677, %r1629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1763, %r178, %r1688, %r1634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1767, %r178, %r1699, %r1639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1771, %r178, %r1710, %r1644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1775, %r178, %r1723, %r1649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r178, %r1734, %r1654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1783, %r178, %r1745, %r1659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r178, %r1756, %r1664;
	// end inline asm
	// begin inline asm
	mov.b32 %r1796, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1807, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1793, %r640, %r1037, %r1796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1797, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1798, %r1796, %r1797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1801, %r1793, %r1798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1804, %r651, %r1037, %r1807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1808, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1809, %r1807, %r1808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1812, %r1804, %r1809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1815, %r640, %r1059, %r1796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1819, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1820, %r1796, %r1819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1823, %r1815, %r1820;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1826, %r651, %r1059, %r1807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1830, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1831, %r1807, %r1830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1834, %r1826, %r1831;
	// end inline asm
	// begin inline asm
	mov.b32 %r1842, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1853, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1839, %r640, %r1083, %r1842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1843, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1844, %r1842, %r1843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1847, %r1839, %r1844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1850, %r651, %r1083, %r1853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1854, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1855, %r1853, %r1854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1858, %r1850, %r1855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1861, %r640, %r1105, %r1842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1865, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1866, %r1842, %r1865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1869, %r1861, %r1866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1872, %r651, %r1105, %r1853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1876, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1877, %r1853, %r1876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1880, %r1872, %r1877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1883, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1885, %r1883, %r1801, %r1759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1889, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1891, %r1889, %r1812, %r1763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1895, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1897, %r1895, %r1823, %r1767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1901, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1903, %r1901, %r1834, %r1771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1907, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1909, %r1907, %r1847, %r1775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1913, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1915, %r1913, %r1858, %r1779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1919, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1921, %r1919, %r1869, %r1783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1925, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1927, %r1925, %r1880, %r1787;
	// end inline asm
	// begin inline asm
	mov.b32 %r1936, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1947, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1933, %r640, %r641, %r1936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1937, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1938, %r1936, %r1937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1941, %r1933, %r1938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1944, %r651, %r641, %r1947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1948, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1949, %r1947, %r1948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1952, %r1944, %r1949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1955, %r640, %r663, %r1936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1959, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1960, %r1936, %r1959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1963, %r1955, %r1960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1966, %r651, %r663, %r1947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1970, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1971, %r1947, %r1970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1974, %r1966, %r1971;
	// end inline asm
	// begin inline asm
	mov.b32 %r1982, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1993, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1979, %r640, %r687, %r1982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1983, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1984, %r1982, %r1983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1987, %r1979, %r1984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1990, %r651, %r687, %r1993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1994, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1995, %r1993, %r1994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1998, %r1990, %r1995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2001, %r640, %r709, %r1982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2005, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2006, %r1982, %r2005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2009, %r2001, %r2006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2012, %r651, %r709, %r1993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2016, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2017, %r1993, %r2016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2020, %r2012, %r2017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2062, %r214, %r1941, %r1885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2059, %r214, %r1952, %r1891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2071, %r214, %r1963, %r1897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2068, %r214, %r1974, %r1903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2080, %r214, %r1987, %r1909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2077, %r214, %r1998, %r1915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2089, %r214, %r2009, %r1921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2086, %r214, %r2020, %r1927;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2055, %r238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2057, %r2055, %r2059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2060, %r235, %r2062, %r2057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2064, %r238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2066, %r2064, %r2068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2069, %r235, %r2071, %r2066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2073, %r238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2075, %r2073, %r2077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2078, %r235, %r2080, %r2075;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2082, %r238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2084, %r2082, %r2086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2087, %r235, %r2089, %r2084;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2091, %r238, %r2062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2094, %r235, %r2059, %r2091;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2098, %r238, %r2071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2101, %r235, %r2068, %r2098;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2105, %r238, %r2080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2108, %r235, %r2077, %r2105;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2112, %r238, %r2089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2115, %r235, %r2086, %r2112;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2166, %r2163}, {%r295, %r301, %r298, %r304}, {%r2060, %r2094}, {%r1229, %r1229};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2175, %r2172}, {%r295, %r301, %r298, %r304}, {%r2069, %r2101}, {%r1229, %r1229};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2184, %r2181}, {%r295, %r301, %r298, %r304}, {%r2078, %r2108}, {%r1229, %r1229};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2193, %r2190}, {%r295, %r301, %r298, %r304}, {%r2087, %r2115}, {%r1229, %r1229};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2159, %r345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2161, %r2159, %r2163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2164, %r342, %r2166, %r2161;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2168, %r345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2170, %r2168, %r2172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2173, %r342, %r2175, %r2170;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2177, %r345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2179, %r2177, %r2181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2182, %r342, %r2184, %r2179;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2186, %r345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2188, %r2186, %r2190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2191, %r342, %r2193, %r2188;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2195, %r345, %r2166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2198, %r342, %r2163, %r2195;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2202, %r345, %r2175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2205, %r342, %r2172, %r2202;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2209, %r345, %r2184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2212, %r342, %r2181, %r2209;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2216, %r345, %r2193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2219, %r342, %r2190, %r2216;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2223, %r2224}, {%r382, %r388, %r385, %r391}, {%r2164, %r2198}, {%r1229, %r1229};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2233, %r2234}, {%r382, %r388, %r385, %r391}, {%r2173, %r2205}, {%r1229, %r1229};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2243, %r2244}, {%r382, %r388, %r385, %r391}, {%r2182, %r2212}, {%r1229, %r1229};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2253, %r2254}, {%r382, %r388, %r385, %r391}, {%r2191, %r2219}, {%r1229, %r1229};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2263, %r74, %r2223;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2266, %r74, %r2224;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2269, %r74, %r2233;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2272, %r74, %r2234;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2275, %r74, %r2243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2278, %r74, %r2244;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2281, %r74, %r2253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2284, %r74, %r2254;
	// end inline asm
	// begin inline asm
	mov.b32 %r2287, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2288, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2289, %r2263, %r2287;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2292, %r2289, %r2288;
	// end inline asm
	// begin inline asm
	mov.b32 %r2295, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2296, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2297, %r2266, %r2295;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2300, %r2297, %r2296;
	// end inline asm
	// begin inline asm
	mov.b32 %r2303, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2304, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2305, %r2269, %r2303;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2308, %r2305, %r2304;
	// end inline asm
	// begin inline asm
	mov.b32 %r2311, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2312, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2313, %r2272, %r2311;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2316, %r2313, %r2312;
	// end inline asm
	// begin inline asm
	mov.b32 %r2319, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2320, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2321, %r2275, %r2319;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2324, %r2321, %r2320;
	// end inline asm
	// begin inline asm
	mov.b32 %r2327, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2328, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2329, %r2278, %r2327;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2332, %r2329, %r2328;
	// end inline asm
	// begin inline asm
	mov.b32 %r2335, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2336, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2337, %r2281, %r2335;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2340, %r2337, %r2336;
	// end inline asm
	// begin inline asm
	mov.b32 %r2343, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2344, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2345, %r2284, %r2343;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2348, %r2345, %r2344;
	// end inline asm
	// begin inline asm
	mov.b32 %r2354, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r2352, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2353, %r2354, %r2352;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2356, %r2292, %r2353;
	// end inline asm
	// begin inline asm
	mov.b32 %r2359, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2360, %r2354, %r2359;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2363, %r2300, %r2360;
	// end inline asm
	// begin inline asm
	mov.b32 %r2366, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2367, %r2354, %r2366;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2370, %r2308, %r2367;
	// end inline asm
	// begin inline asm
	mov.b32 %r2373, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2374, %r2354, %r2373;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2377, %r2316, %r2374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2380, %r2356, %r2370, %r1485;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2384, %r2363, %r2377, %r1485;
	// end inline asm
	shl.b32 	%r2391, %r2384, 4;
	// begin inline asm
	lop3.b32 %r2388, %r1491, %r2380, %r2391, 202;
	// end inline asm
	xor.b32  	%r2435, %r2388, -2004318072;
	// begin inline asm
	mov.b32 %r2395, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r2393, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2394, %r2395, %r2393;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2397, %r2324, %r2394;
	// end inline asm
	// begin inline asm
	mov.b32 %r2400, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2401, %r2395, %r2400;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2404, %r2332, %r2401;
	// end inline asm
	// begin inline asm
	mov.b32 %r2407, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2408, %r2395, %r2407;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2411, %r2340, %r2408;
	// end inline asm
	// begin inline asm
	mov.b32 %r2414, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2415, %r2395, %r2414;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2418, %r2348, %r2415;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2421, %r2397, %r2411, %r1485;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2425, %r2404, %r2418, %r1485;
	// end inline asm
	shl.b32 	%r2432, %r2425, 4;
	// begin inline asm
	lop3.b32 %r2429, %r1491, %r2421, %r2432, 202;
	// end inline asm
	xor.b32  	%r2436, %r2429, -2004318072;
	st.shared.u32 	[%rd163], %r2435;
	st.shared.u32 	[%rd164], %r2436;
	add.s32 	%r2552, %r2552, -32;
	add.s64 	%rd164, %rd164, 4228;
	add.s64 	%rd163, %rd163, 4228;
	add.s64 	%rd162, %rd162, 4228;
	add.s64 	%rd161, %rd161, 4228;
	setp.eq.s32 	%p218, %r2552, 0;
	mov.u32 	%r2555, %r2542;
	mov.u32 	%r2556, %r2541;
	mov.u32 	%r2557, %r2540;
	mov.u32 	%r2558, %r2539;
	@%p218 bra 	$L__BB0_85;
	bra.uni 	$L__BB0_84;
$L__BB0_85:                             // %guard_exit10551
                                        //   in Loop: Header=BB0_83 Depth=1
	bar.sync 	0;
	or.b32  	%r119, %r68, %r56;
	ld.shared.u32 	%r2442, [%rd14];
	ld.shared.u32 	%r2443, [%rd15+128];
	ld.shared.u32 	%r2450, [%rd15+4];
	ld.shared.u32 	%r2451, [%rd15+132];
	or.b32  	%r120, %r119, 64;
	ld.shared.u32 	%r2458, [%rd16];
	ld.shared.u32 	%r2459, [%rd17+128];
	ld.shared.u32 	%r2466, [%rd17+4];
	ld.shared.u32 	%r2467, [%rd17+132];
	ld.shared.u32 	%r2474, [%rd18];
	ld.shared.u32 	%r2475, [%rd19+128];
	ld.shared.u32 	%r2482, [%rd19+4];
	ld.shared.u32 	%r2483, [%rd19+132];
	ld.shared.u32 	%r2490, [%rd20];
	ld.shared.u32 	%r2491, [%rd21+128];
	ld.shared.u32 	%r2498, [%rd21+4];
	ld.shared.u32 	%r2499, [%rd21+132];
	// begin inline asm
	prmt.b32 %r2437, %r2442, %r2443, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2441, %r2442, %r2443, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2445, %r2450, %r2451, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2449, %r2450, %r2451, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2453, %r2458, %r2459, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2457, %r2458, %r2459, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2461, %r2466, %r2467, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2465, %r2466, %r2467, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2469, %r2474, %r2475, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2473, %r2474, %r2475, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2477, %r2482, %r2483, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2481, %r2482, %r2483, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2485, %r2490, %r2491, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2489, %r2490, %r2491, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2493, %r2498, %r2499, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2497, %r2498, %r2499, %r555;
	// end inline asm
	selp.b32 	%r2501, %r2441, %r2437, %p205;
	shfl.sync.bfly.b32	%r125, %r2501, 8, 31, -1;
	selp.b32 	%r2502, %r2449, %r2445, %p205;
	shfl.sync.bfly.b32	%r126, %r2502, 8, 31, -1;
	selp.b32 	%r2503, %r2457, %r2453, %p205;
	shfl.sync.bfly.b32	%r2504, %r2503, 8, 31, -1;
	selp.b32 	%r2505, %r2465, %r2461, %p205;
	shfl.sync.bfly.b32	%r2506, %r2505, 8, 31, -1;
	selp.b32 	%r2507, %r2473, %r2469, %p205;
	shfl.sync.bfly.b32	%r2508, %r2507, 8, 31, -1;
	selp.b32 	%r2509, %r2481, %r2477, %p205;
	shfl.sync.bfly.b32	%r2510, %r2509, 8, 31, -1;
	selp.b32 	%r2511, %r2489, %r2485, %p205;
	shfl.sync.bfly.b32	%r2512, %r2511, 8, 31, -1;
	selp.b32 	%r2513, %r2497, %r2493, %p205;
	shfl.sync.bfly.b32	%r2514, %r2513, 8, 31, -1;
	setp.lt.u32 	%p220, %r119, 96;
	shl.b32 	%r2532, %r119, 9;
	@%p220 bra 	$L__BB0_87;
// %bb.86:                              // %pass9924
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r2515, %r126, %r2449, %p205;
	selp.b32 	%r2516, %r2445, %r126, %p205;
	selp.b32 	%r2517, %r125, %r2441, %p205;
	selp.b32 	%r2518, %r2437, %r125, %p205;
	or.b32  	%r2520, %r2532, %r61;
	cvt.u64.u32 	%rd109, %r2520;
	add.s64 	%rd110, %rd109, %rd5;
	shr.u64 	%rd111, %rd110, 42;
	add.s64 	%rd112, %rd110, %rd111;
	shr.s64 	%rd113, %rd112, 22;
	setp.lt.s64 	%p222, %rd110, 0;
	and.b64  	%rd114, %rd112, -4194304;
	setp.ne.s64 	%p223, %rd114, %rd110;
	and.pred  	%p224, %p222, %p223;
	selp.u64 	%rd115, 1, 0, %p224;
	sub.s64 	%rd116, %rd115, %rd113;
	shl.b64 	%rd117, %rd116, 22;
	add.s64 	%rd118, %rd117, %rd110;
	shl.b64 	%rd119, %rd118, 2;
	add.s64 	%rd120, %rd3, %rd119;
	st.global.v4.u32 	[%rd120], {%r2518, %r2516, %r2517, %r2515};
$L__BB0_87:                             // %pass9946
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r131, %r2469, %r2508, %p205;
	selp.b32 	%r132, %r2508, %r2473, %p205;
	selp.b32 	%r133, %r2477, %r2510, %p205;
	selp.b32 	%r134, %r2510, %r2481, %p205;
	selp.b32 	%r135, %r2485, %r2512, %p205;
	selp.b32 	%r136, %r2512, %r2489, %p205;
	selp.b32 	%r137, %r2493, %r2514, %p205;
	selp.b32 	%r138, %r2514, %r2497, %p205;
	setp.lt.u32 	%p225, %r120, 96;
	@%p225 bra 	$L__BB0_89;
// %bb.88:                              // %pass10049
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r127, %r2453, %r2504, %p205;
	selp.b32 	%r128, %r2504, %r2457, %p205;
	selp.b32 	%r129, %r2461, %r2506, %p205;
	selp.b32 	%r130, %r2506, %r2465, %p205;
	shl.b32 	%r2521, %r120, 9;
	or.b32  	%r2522, %r2521, %r61;
	cvt.u64.u32 	%rd121, %r2522;
	add.s64 	%rd122, %rd121, %rd5;
	shr.u64 	%rd123, %rd122, 42;
	add.s64 	%rd124, %rd122, %rd123;
	shr.s64 	%rd125, %rd124, 22;
	setp.lt.s64 	%p226, %rd122, 0;
	and.b64  	%rd126, %rd124, -4194304;
	setp.ne.s64 	%p227, %rd126, %rd122;
	and.pred  	%p228, %p226, %p227;
	selp.u64 	%rd127, 1, 0, %p228;
	sub.s64 	%rd128, %rd127, %rd125;
	shl.b64 	%rd129, %rd128, 22;
	add.s64 	%rd130, %rd129, %rd122;
	shl.b64 	%rd131, %rd130, 2;
	add.s64 	%rd132, %rd3, %rd131;
	st.global.v4.u32 	[%rd132], {%r127, %r129, %r128, %r130};
	bra.uni 	$L__BB0_89;
$L__BB0_90:                             // %L23989
	st.global.u32 	[%rd4], %r2531;
	ret;
$L__BB0_7:                              // %L166
	mov.u32 	%r2530, 2;
	st.global.u32 	[%rd4], %r2530;
	mov.u64 	%rd159, exception2098;
	cvta.global.u64 	%rd160, %rd159;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd160;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd38;
	st.param.b32 	[param0+8], %r139;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r2529, 3;
	st.global.u32 	[%rd4], %r2529;
	mov.u64 	%rd157, exception2098;
	cvta.global.u64 	%rd158, %rd157;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd158;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd38;
	st.param.b32 	[param0+8], %r139;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd43, exception12118;
	cvta.global.u64 	%rd44, %rd43;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd44;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd38;
	st.param.b32 	[param0+8], %r139;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
