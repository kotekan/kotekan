// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func julia_AssertionError_9592
()
.noreturn
{
	trap;
}
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_9603
(
	.param .align 8 .b8 julia_power_by_squaring_9603_param_0[16],
	.param .b64 julia_power_by_squaring_9603_param_1,
	.param .b64 julia_power_by_squaring_9603_param_2
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2329[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<239>;
	.reg .b16 	%rs<1185>;
	.reg .b32 	%r<7824>;
	.reg .f32 	%f<922>;
	.reg .b64 	%rd<110>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r162, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd22, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r163, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r163, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd39, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd23, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r164, %r2, 9;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r165, %r164, %r1;
	or.b32  	%r166, %r165, %r4;
	mul.wide.u32 	%rd45, %r166, 4;
	add.s64 	%rd4, %rd39, %rd45;
	mov.u32 	%r167, 1;
	st.global.u32 	[%rd4], %r167;
	ld.global.u32 	%r5, [%rd23];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L205
	ld.param.u64 	%rd27, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd27];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L215
	ld.param.u64 	%rd31, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd31];
	sub.s32 	%r168, %r6, %r5;
	and.b32  	%r169, %r168, 255;
	setp.ne.s32 	%p6, %r169, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L221
	ld.param.u64 	%rd35, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd35];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 4096;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L231
	not.b32 	%r170, %r7;
	add.s32 	%r171, %r170, %r8;
	and.b32  	%r172, %r171, 3;
	setp.eq.s32 	%p12, %r172, 0;
	@%p12 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %L355
	bfe.u32 	%r15, %r1, 1, 1;
	and.b32  	%r16, %r1, 1;
	bfe.u32 	%r18, %r1, 2, 1;
	shr.u32 	%r19, %r1, 4;
	shl.b32 	%r180, %r19, 1;
	shl.b32 	%r181, %r18, 2;
	shl.b32 	%r182, %r16, 3;
	shl.b32 	%r183, %r15, 4;
	or.b32  	%r184, %r182, %r183;
	or.b32  	%r185, %r181, %r184;
	or.b32  	%r186, %r180, %r185;
	bfe.u32 	%r21, %r1, 3, 1;
	or.b32  	%r22, %r21, %r186;
	or.b32  	%r23, %r22, 32;
	mov.f32 	%f185, 0f40000000;
	mov.f32 	%f186, 0f437F0000;
	div.approx.f32 	%f1, %f186, %f185;
	cvt.rn.f32.s32 	%f187, %r22;
	sub.f32 	%f188, %f187, %f1;
	mov.f32 	%f217, 0f42800000;
	div.approx.f32 	%f3, %f188, %f217;
	setp.eq.f32 	%p18, %f3, 0f00000000;
	mov.f32 	%f889, 0f3F800000;
	mov.f32 	%f882, %f889;
	@%p18 bra 	LBB0_10;
// %bb.9:                               // %L551
	sin.approx.f32 	%f218, %f3;
	div.approx.f32 	%f882, %f218, %f3;
LBB0_10:                                // %L554
	cvt.rn.f32.s32 	%f221, %r23;
	sub.f32 	%f222, %f221, %f1;
	div.approx.f32 	%f8, %f222, %f217;
	setp.eq.f32 	%p24, %f8, 0f00000000;
	mov.f32 	%f883, %f889;
	@%p24 bra 	LBB0_12;
// %bb.11:                              // %L571
	sin.approx.f32 	%f252, %f8;
	div.approx.f32 	%f883, %f252, %f8;
LBB0_12:                                // %L574
	or.b32  	%r204, %r22, 64;
	or.b32  	%r25, %r22, 96;
	cvt.rn.f32.s32 	%f256, %r204;
	sub.f32 	%f257, %f256, %f1;
	div.approx.f32 	%f12, %f257, %f217;
	setp.eq.f32 	%p30, %f12, 0f00000000;
	mov.f32 	%f884, %f889;
	@%p30 bra 	LBB0_14;
// %bb.13:                              // %L652
	sin.approx.f32 	%f287, %f12;
	div.approx.f32 	%f884, %f287, %f12;
LBB0_14:                                // %L655
	cvt.rn.f32.s32 	%f290, %r25;
	sub.f32 	%f291, %f290, %f1;
	div.approx.f32 	%f17, %f291, %f217;
	setp.eq.f32 	%p36, %f17, 0f00000000;
	mov.f32 	%f885, %f889;
	@%p36 bra 	LBB0_16;
// %bb.15:                              // %L672
	sin.approx.f32 	%f321, %f17;
	div.approx.f32 	%f885, %f321, %f17;
LBB0_16:                                // %L675
	shl.b32 	%r9, %r1, 2;
	or.b32  	%r222, %r22, 128;
	or.b32  	%r27, %r22, 160;
	cvt.rn.f32.s32 	%f325, %r222;
	sub.f32 	%f326, %f325, %f1;
	div.approx.f32 	%f21, %f326, %f217;
	setp.eq.f32 	%p42, %f21, 0f00000000;
	mov.f32 	%f886, %f889;
	@%p42 bra 	LBB0_18;
// %bb.17:                              // %L753
	sin.approx.f32 	%f356, %f21;
	div.approx.f32 	%f886, %f356, %f21;
LBB0_18:                                // %L756
	and.b32  	%r173, %r9, 4;
	and.b32  	%r176, %r1, 18;
	cvt.rn.f32.s32 	%f359, %r27;
	sub.f32 	%f360, %f359, %f1;
	div.approx.f32 	%f26, %f360, %f217;
	setp.eq.f32 	%p48, %f26, 0f00000000;
	mov.f32 	%f887, %f889;
	@%p48 bra 	LBB0_20;
// %bb.19:                              // %L773
	sin.approx.f32 	%f390, %f26;
	div.approx.f32 	%f887, %f390, %f26;
LBB0_20:                                // %L776
	and.b32  	%r11, %r9, 32;
	shl.b32 	%r174, %r1, 1;
	or.b32  	%r177, %r176, %r173;
	or.b32  	%r240, %r22, 192;
	or.b32  	%r29, %r22, 224;
	cvt.rn.f32.s32 	%f394, %r240;
	sub.f32 	%f395, %f394, %f1;
	div.approx.f32 	%f30, %f395, %f217;
	setp.eq.f32 	%p54, %f30, 0f00000000;
	mov.f32 	%f888, %f889;
	@%p54 bra 	LBB0_22;
// %bb.21:                              // %L854
	sin.approx.f32 	%f425, %f30;
	div.approx.f32 	%f888, %f425, %f30;
LBB0_22:                                // %L857
	and.b32  	%r175, %r174, 8;
	or.b32  	%r178, %r177, %r11;
	cvt.rn.f32.s32 	%f428, %r29;
	sub.f32 	%f429, %f428, %f1;
	div.approx.f32 	%f35, %f429, %f217;
	setp.eq.f32 	%p60, %f35, 0f00000000;
	@%p60 bra 	LBB0_24;
// %bb.23:                              // %L874
	sin.approx.f32 	%f459, %f35;
	div.approx.f32 	%f889, %f459, %f35;
LBB0_24:                                // %L877
	or.b32  	%r179, %r178, %r175;
	mul.lo.s32 	%r31, %r22, 63;
	cvt.rn.f32.s32 	%f462, %r31;
	div.approx.f32 	%f38, %f462, %f217;
	abs.f32 	%f892, %f38;
	setp.lt.f32 	%p61, %f892, 0f40000000;
	@%p61 bra 	LBB0_36;
// %bb.25:
	setp.gtu.f32 	%p62, %f892, 0f4B800000;
	@%p62 bra 	LBB0_32;
	bra.uni 	LBB0_26;
LBB0_32:
	mov.b32 	%r33, %f892;
	and.b32  	%r258, %r33, 8388607;
	or.b32  	%r7782, %r258, 1065353216;
	mov.b32 	%f891, %r7782;
	add.s32 	%r259, %r33, -1073741824;
	and.b32  	%r7783, %r259, -8388608;
	setp.eq.s32 	%p68, %r7783, 0;
	@%p68 bra 	LBB0_35;
// %bb.33:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f473, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f472,%f473;
	// end inline asm
LBB0_34:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r260, %r7783, 192937984;
	add.s32 	%r261, %r260, %r7782;
	mov.b32 	%f474, %r261;
	mul.f32 	%f475, %f472, %f474;
	sub.f32 	%f476, %f474, %f475;
	fma.rn.f32 	%f477, %f476, %f472, %f475;
	sub.f32 	%f478, %f474, %f477;
	fma.rz.f32 	%f479, %f478, %f472, %f477;
	cvt.rzi.f32.f32 	%f480, %f479;
	sub.f32 	%f891, %f474, %f480;
	sub.s32 	%r7783, %r7783, %r260;
	mov.b32 	%r7782, %f891;
	setp.ne.s32 	%p69, %r7783, 0;
	setp.ne.s32 	%p70, %r7782, 0;
	and.pred  	%p71, %p69, %p70;
	@%p71 bra 	LBB0_34;
LBB0_35:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p72, %r33, 2139095039;
	selp.f32 	%f481, 0f7FFFFFFF, 0f4B800000, %p72;
	mul.f32 	%f482, %f891, 0f34000000;
	mul.f32 	%f892, %f481, %f482;
	bra.uni 	LBB0_36;
LBB0_26:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f465, %f892, %f185;
	cvt.rzi.f32.f32 	%f890, %f465;
	fma.rn.f32 	%f41, %f890, 0fC0000000, %f892;
	mov.b32 	%r32, %f41;
	setp.lt.u32 	%p63, %r32, 1073741824;
	@%p63 bra 	LBB0_31;
// %bb.27:
	setp.lt.u32 	%p64, %r32, -2147483647;
	@%p64 bra 	LBB0_29;
// %bb.28:
	add.f32 	%f470, %f890, 0fBF800000;
	setp.lt.f32 	%p67, %f41, 0fC0000000;
	add.f32 	%f471, %f470, 0fBF800000;
	selp.f32 	%f890, %f471, %f470, %p67;
	bra.uni 	LBB0_31;
LBB0_29:
	add.f32 	%f890, %f890, 0f3F800000;
	setp.ltu.f32 	%p65, %f41, 0f40800000;
	@%p65 bra 	LBB0_31;
// %bb.30:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f466, %f890, 0f3F800000;
	fma.rn.f32 	%f468, %f185, 0fC0400000, %f41;
	setp.ge.f32 	%p66, %f468, 0f00000000;
	add.f32 	%f469, %f466, 0f3F800000;
	selp.f32 	%f890, %f469, %f466, %p66;
LBB0_31:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f892, %f890, 0fC0000000, %f892;
LBB0_36:                                // %__internal_fmodf_kernel.exit.i
	shr.u32 	%r12, %r179, 1;
	abs.f32 	%f483, %f892;
	setp.gtu.f32 	%p73, %f483, 0f7F800000;
	@%p73 bra 	LBB0_38;
// %bb.37:
	mov.b32 	%r262, %f38;
	and.b32  	%r263, %r262, -2147483648;
	mov.b32 	%r264, %f892;
	or.b32  	%r265, %r263, %r264;
	mov.b32 	%f892, %r265;
LBB0_38:                                // %__nv_fmodf.exit
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd46, %r12, 4;
	add.s32 	%r274, %r31, 2016;
	cvt.rn.f32.s32 	%f514, %r274;
	div.approx.f32 	%f57, %f514, %f217;
	abs.f32 	%f896, %f57;
	setp.lt.f32 	%p81, %f896, 0f40000000;
	@%p81 bra 	LBB0_50;
// %bb.39:
	setp.gtu.f32 	%p82, %f896, 0f4B800000;
	@%p82 bra 	LBB0_46;
	bra.uni 	LBB0_40;
LBB0_46:
	mov.b32 	%r41, %f896;
	and.b32  	%r275, %r41, 8388607;
	or.b32  	%r7784, %r275, 1065353216;
	mov.b32 	%f895, %r7784;
	add.s32 	%r276, %r41, -1073741824;
	and.b32  	%r7785, %r276, -8388608;
	setp.eq.s32 	%p88, %r7785, 0;
	@%p88 bra 	LBB0_49;
// %bb.47:                              // %__nv_fmaf_rn.exit4.i.i.i1163.preheader
	mov.f32 	%f525, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f524,%f525;
	// end inline asm
LBB0_48:                                // %__nv_fmaf_rn.exit4.i.i.i1163
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r277, %r7785, 192937984;
	add.s32 	%r278, %r277, %r7784;
	mov.b32 	%f526, %r278;
	mul.f32 	%f527, %f524, %f526;
	sub.f32 	%f528, %f526, %f527;
	fma.rn.f32 	%f529, %f528, %f524, %f527;
	sub.f32 	%f530, %f526, %f529;
	fma.rz.f32 	%f531, %f530, %f524, %f529;
	cvt.rzi.f32.f32 	%f532, %f531;
	sub.f32 	%f895, %f526, %f532;
	sub.s32 	%r7785, %r7785, %r277;
	mov.b32 	%r7784, %f895;
	setp.ne.s32 	%p89, %r7785, 0;
	setp.ne.s32 	%p90, %r7784, 0;
	and.pred  	%p91, %p89, %p90;
	@%p91 bra 	LBB0_48;
LBB0_49:                                // %__internal_fmodf_slowpath_mod.exit.i.i1165
	setp.gt.u32 	%p92, %r41, 2139095039;
	selp.f32 	%f533, 0f7FFFFFFF, 0f4B800000, %p92;
	mul.f32 	%f534, %f895, 0f34000000;
	mul.f32 	%f896, %f533, %f534;
	bra.uni 	LBB0_50;
LBB0_40:                                // %__nv_fast_fdividef.exit.i.i.i1135
	div.approx.f32 	%f517, %f896, %f185;
	cvt.rzi.f32.f32 	%f894, %f517;
	fma.rn.f32 	%f60, %f894, 0fC0000000, %f896;
	mov.b32 	%r40, %f60;
	setp.lt.u32 	%p83, %r40, 1073741824;
	@%p83 bra 	LBB0_45;
// %bb.41:
	setp.lt.u32 	%p84, %r40, -2147483647;
	@%p84 bra 	LBB0_43;
// %bb.42:
	add.f32 	%f522, %f894, 0fBF800000;
	setp.lt.f32 	%p87, %f60, 0fC0000000;
	add.f32 	%f523, %f522, 0fBF800000;
	selp.f32 	%f894, %f523, %f522, %p87;
	bra.uni 	LBB0_45;
LBB0_43:
	add.f32 	%f894, %f894, 0f3F800000;
	setp.ltu.f32 	%p85, %f60, 0f40800000;
	@%p85 bra 	LBB0_45;
// %bb.44:                              // %__nv_fmaf_rn.exit.i.i.i1140
	add.f32 	%f518, %f894, 0f3F800000;
	fma.rn.f32 	%f520, %f185, 0fC0400000, %f60;
	setp.ge.f32 	%p86, %f520, 0f00000000;
	add.f32 	%f521, %f518, 0f3F800000;
	selp.f32 	%f894, %f521, %f518, %p86;
LBB0_45:                                // %__internal_fmodf_fastpath_quot.exit.i.i1144
	fma.rn.f32 	%f896, %f894, 0fC0000000, %f896;
LBB0_50:                                // %__internal_fmodf_kernel.exit.i1169
	add.s64 	%rd47, %rd1, %rd46;
	abs.f32 	%f535, %f896;
	setp.gtu.f32 	%p93, %f535, 0f7F800000;
	@%p93 bra 	LBB0_52;
// %bb.51:
	mov.b32 	%r279, %f57;
	and.b32  	%r280, %r279, -2147483648;
	mov.b32 	%r281, %f896;
	or.b32  	%r282, %r280, %r281;
	mov.b32 	%f896, %r282;
LBB0_52:                                // %__nv_fmodf.exit1170
	ld.global.u32 	%r13, [%rd47];
	mov.u64 	%rd48, 2;
	mov.u64 	%rd49, 6;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r162;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9603, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd50, [retval0+0];
	} // callseq 2
	setp.ne.s64 	%p101, %rd50, 64;
	@%p101 bra 	LBB0_124;
// %bb.53:                              // %L974
	shr.u32 	%r17, %r1, 2;
	and.b32  	%r297, %r1, 3;
	shl.b32 	%r298, %r297, 1;
	neg.s32 	%r50, %r298;
	mul.lo.s32 	%r51, %r50, %r17;
	cvt.rn.f32.s32 	%f74, %r51;
	mov.f32 	%f568, 0f41000000;
	div.approx.f32 	%f75, %f74, %f568;
	abs.f32 	%f900, %f75;
	setp.lt.f32 	%p102, %f900, 0f40000000;
	@%p102 bra 	LBB0_65;
// %bb.54:
	setp.gtu.f32 	%p103, %f900, 0f4B800000;
	@%p103 bra 	LBB0_61;
	bra.uni 	LBB0_55;
LBB0_61:
	mov.b32 	%r53, %f900;
	and.b32  	%r299, %r53, 8388607;
	or.b32  	%r7786, %r299, 1065353216;
	mov.b32 	%f899, %r7786;
	add.s32 	%r300, %r53, -1073741824;
	and.b32  	%r7787, %r300, -8388608;
	setp.eq.s32 	%p109, %r7787, 0;
	@%p109 bra 	LBB0_64;
// %bb.62:                              // %__nv_fmaf_rn.exit4.i.i.i1209.preheader
	mov.f32 	%f578, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f577,%f578;
	// end inline asm
LBB0_63:                                // %__nv_fmaf_rn.exit4.i.i.i1209
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r301, %r7787, 192937984;
	add.s32 	%r302, %r301, %r7786;
	mov.b32 	%f579, %r302;
	mul.f32 	%f580, %f577, %f579;
	sub.f32 	%f581, %f579, %f580;
	fma.rn.f32 	%f582, %f581, %f577, %f580;
	sub.f32 	%f583, %f579, %f582;
	fma.rz.f32 	%f584, %f583, %f577, %f582;
	cvt.rzi.f32.f32 	%f585, %f584;
	sub.f32 	%f899, %f579, %f585;
	sub.s32 	%r7787, %r7787, %r301;
	mov.b32 	%r7786, %f899;
	setp.ne.s32 	%p110, %r7787, 0;
	setp.ne.s32 	%p111, %r7786, 0;
	and.pred  	%p112, %p110, %p111;
	@%p112 bra 	LBB0_63;
LBB0_64:                                // %__internal_fmodf_slowpath_mod.exit.i.i1211
	setp.gt.u32 	%p113, %r53, 2139095039;
	selp.f32 	%f586, 0f7FFFFFFF, 0f4B800000, %p113;
	mul.f32 	%f587, %f899, 0f34000000;
	mul.f32 	%f900, %f586, %f587;
	bra.uni 	LBB0_65;
LBB0_55:                                // %__nv_fast_fdividef.exit.i.i.i1181
	div.approx.f32 	%f570, %f900, %f185;
	cvt.rzi.f32.f32 	%f898, %f570;
	fma.rn.f32 	%f78, %f898, 0fC0000000, %f900;
	mov.b32 	%r52, %f78;
	setp.lt.u32 	%p104, %r52, 1073741824;
	@%p104 bra 	LBB0_60;
// %bb.56:
	setp.lt.u32 	%p105, %r52, -2147483647;
	@%p105 bra 	LBB0_58;
// %bb.57:
	add.f32 	%f575, %f898, 0fBF800000;
	setp.lt.f32 	%p108, %f78, 0fC0000000;
	add.f32 	%f576, %f575, 0fBF800000;
	selp.f32 	%f898, %f576, %f575, %p108;
	bra.uni 	LBB0_60;
LBB0_58:
	add.f32 	%f898, %f898, 0f3F800000;
	setp.ltu.f32 	%p106, %f78, 0f40800000;
	@%p106 bra 	LBB0_60;
// %bb.59:                              // %__nv_fmaf_rn.exit.i.i.i1186
	add.f32 	%f571, %f898, 0f3F800000;
	fma.rn.f32 	%f573, %f185, 0fC0400000, %f78;
	setp.ge.f32 	%p107, %f573, 0f00000000;
	add.f32 	%f574, %f571, 0f3F800000;
	selp.f32 	%f898, %f574, %f571, %p107;
LBB0_60:                                // %__internal_fmodf_fastpath_quot.exit.i.i1190
	fma.rn.f32 	%f900, %f898, 0fC0000000, %f900;
LBB0_65:                                // %__internal_fmodf_kernel.exit.i1215
	abs.f32 	%f588, %f900;
	setp.gtu.f32 	%p114, %f588, 0f7F800000;
	@%p114 bra 	LBB0_67;
// %bb.66:
	mov.b32 	%r303, %f75;
	and.b32  	%r304, %r303, -2147483648;
	mov.b32 	%r305, %f900;
	or.b32  	%r306, %r304, %r305;
	mov.b32 	%f900, %r306;
LBB0_67:                                // %__nv_fmodf.exit1216
	shl.b32 	%r315, %r17, 3;
	sub.s32 	%r316, %r51, %r315;
	cvt.rn.f32.s32 	%f94, %r316;
	div.approx.f32 	%f95, %f94, %f568;
	abs.f32 	%f904, %f95;
	setp.lt.f32 	%p122, %f904, 0f40000000;
	@%p122 bra 	LBB0_79;
// %bb.68:
	setp.gtu.f32 	%p123, %f904, 0f4B800000;
	@%p123 bra 	LBB0_75;
	bra.uni 	LBB0_69;
LBB0_75:
	mov.b32 	%r61, %f904;
	and.b32  	%r317, %r61, 8388607;
	or.b32  	%r7788, %r317, 1065353216;
	mov.b32 	%f903, %r7788;
	add.s32 	%r318, %r61, -1073741824;
	and.b32  	%r7789, %r318, -8388608;
	setp.eq.s32 	%p129, %r7789, 0;
	@%p129 bra 	LBB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i1255.preheader
	mov.f32 	%f629, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f628,%f629;
	// end inline asm
LBB0_77:                                // %__nv_fmaf_rn.exit4.i.i.i1255
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r319, %r7789, 192937984;
	add.s32 	%r320, %r319, %r7788;
	mov.b32 	%f630, %r320;
	mul.f32 	%f631, %f628, %f630;
	sub.f32 	%f632, %f630, %f631;
	fma.rn.f32 	%f633, %f632, %f628, %f631;
	sub.f32 	%f634, %f630, %f633;
	fma.rz.f32 	%f635, %f634, %f628, %f633;
	cvt.rzi.f32.f32 	%f636, %f635;
	sub.f32 	%f903, %f630, %f636;
	sub.s32 	%r7789, %r7789, %r319;
	mov.b32 	%r7788, %f903;
	setp.ne.s32 	%p130, %r7789, 0;
	setp.ne.s32 	%p131, %r7788, 0;
	and.pred  	%p132, %p130, %p131;
	@%p132 bra 	LBB0_77;
LBB0_78:                                // %__internal_fmodf_slowpath_mod.exit.i.i1257
	setp.gt.u32 	%p133, %r61, 2139095039;
	selp.f32 	%f637, 0f7FFFFFFF, 0f4B800000, %p133;
	mul.f32 	%f638, %f903, 0f34000000;
	mul.f32 	%f904, %f637, %f638;
	bra.uni 	LBB0_79;
LBB0_69:                                // %__nv_fast_fdividef.exit.i.i.i1227
	div.approx.f32 	%f621, %f904, %f185;
	cvt.rzi.f32.f32 	%f902, %f621;
	fma.rn.f32 	%f98, %f902, 0fC0000000, %f904;
	mov.b32 	%r60, %f98;
	setp.lt.u32 	%p124, %r60, 1073741824;
	@%p124 bra 	LBB0_74;
// %bb.70:
	setp.lt.u32 	%p125, %r60, -2147483647;
	@%p125 bra 	LBB0_72;
// %bb.71:
	add.f32 	%f626, %f902, 0fBF800000;
	setp.lt.f32 	%p128, %f98, 0fC0000000;
	add.f32 	%f627, %f626, 0fBF800000;
	selp.f32 	%f902, %f627, %f626, %p128;
	bra.uni 	LBB0_74;
LBB0_72:
	add.f32 	%f902, %f902, 0f3F800000;
	setp.ltu.f32 	%p126, %f98, 0f40800000;
	@%p126 bra 	LBB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i1232
	add.f32 	%f622, %f902, 0f3F800000;
	fma.rn.f32 	%f624, %f185, 0fC0400000, %f98;
	setp.ge.f32 	%p127, %f624, 0f00000000;
	add.f32 	%f625, %f622, 0f3F800000;
	selp.f32 	%f902, %f625, %f622, %p127;
LBB0_74:                                // %__internal_fmodf_fastpath_quot.exit.i.i1236
	fma.rn.f32 	%f904, %f902, 0fC0000000, %f904;
LBB0_79:                                // %__internal_fmodf_kernel.exit.i1261
	abs.f32 	%f639, %f904;
	setp.gtu.f32 	%p134, %f639, 0f7F800000;
	@%p134 bra 	LBB0_81;
// %bb.80:
	mov.b32 	%r321, %f95;
	and.b32  	%r322, %r321, -2147483648;
	mov.b32 	%r323, %f904;
	or.b32  	%r324, %r322, %r323;
	mov.b32 	%f904, %r324;
LBB0_81:                                // %__nv_fmodf.exit1262
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r162;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9603, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd56, [retval0+0];
	} // callseq 6
	setp.ne.s64 	%p142, %rd56, 64;
	@%p142 bra 	LBB0_123;
// %bb.82:                              // %L1112
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r162;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9603, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd62, [retval0+0];
	} // callseq 10
	cvt.rn.f32.s64 	%f672, %rd62;
	div.approx.f32 	%f112, %f74, %f672;
	abs.f32 	%f916, %f112;
	setp.lt.f32 	%p143, %f916, 0f40000000;
	@%p143 bra 	LBB0_132;
// %bb.83:
	setp.gtu.f32 	%p144, %f916, 0f4B800000;
	@%p144 bra 	LBB0_128;
	bra.uni 	LBB0_84;
LBB0_128:
	mov.b32 	%r139, %f916;
	and.b32  	%r345, %r139, 8388607;
	or.b32  	%r7820, %r345, 1065353216;
	mov.b32 	%f915, %r7820;
	add.s32 	%r346, %r139, -1073741824;
	and.b32  	%r7821, %r346, -8388608;
	setp.eq.s32 	%p150, %r7821, 0;
	@%p150 bra 	LBB0_131;
// %bb.129:                             // %__nv_fmaf_rn.exit4.i.i.i1393.preheader
	mov.f32 	%f682, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f681,%f682;
	// end inline asm
LBB0_130:                               // %__nv_fmaf_rn.exit4.i.i.i1393
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r347, %r7821, 192937984;
	add.s32 	%r348, %r347, %r7820;
	mov.b32 	%f683, %r348;
	mul.f32 	%f684, %f681, %f683;
	sub.f32 	%f685, %f683, %f684;
	fma.rn.f32 	%f686, %f685, %f681, %f684;
	sub.f32 	%f687, %f683, %f686;
	fma.rz.f32 	%f688, %f687, %f681, %f686;
	cvt.rzi.f32.f32 	%f689, %f688;
	sub.f32 	%f915, %f683, %f689;
	sub.s32 	%r7821, %r7821, %r347;
	mov.b32 	%r7820, %f915;
	setp.ne.s32 	%p151, %r7821, 0;
	setp.ne.s32 	%p152, %r7820, 0;
	and.pred  	%p153, %p151, %p152;
	@%p153 bra 	LBB0_130;
LBB0_131:                               // %__internal_fmodf_slowpath_mod.exit.i.i1395
	setp.gt.u32 	%p154, %r139, 2139095039;
	selp.f32 	%f690, 0f7FFFFFFF, 0f4B800000, %p154;
	mul.f32 	%f691, %f915, 0f34000000;
	mul.f32 	%f916, %f690, %f691;
	bra.uni 	LBB0_132;
LBB0_84:                                // %__nv_fast_fdividef.exit.i.i.i1365
	div.approx.f32 	%f674, %f916, %f185;
	cvt.rzi.f32.f32 	%f914, %f674;
	fma.rn.f32 	%f151, %f914, 0fC0000000, %f916;
	mov.b32 	%r138, %f151;
	setp.lt.u32 	%p145, %r138, 1073741824;
	@%p145 bra 	LBB0_127;
// %bb.85:
	setp.lt.u32 	%p146, %r138, -2147483647;
	@%p146 bra 	LBB0_125;
// %bb.86:
	add.f32 	%f679, %f914, 0fBF800000;
	setp.lt.f32 	%p149, %f151, 0fC0000000;
	add.f32 	%f680, %f679, 0fBF800000;
	selp.f32 	%f914, %f680, %f679, %p149;
	bra.uni 	LBB0_127;
LBB0_125:
	add.f32 	%f914, %f914, 0f3F800000;
	setp.ltu.f32 	%p147, %f151, 0f40800000;
	@%p147 bra 	LBB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i1370
	add.f32 	%f675, %f914, 0f3F800000;
	fma.rn.f32 	%f677, %f185, 0fC0400000, %f151;
	setp.ge.f32 	%p148, %f677, 0f00000000;
	add.f32 	%f678, %f675, 0f3F800000;
	selp.f32 	%f914, %f678, %f675, %p148;
LBB0_127:                               // %__internal_fmodf_fastpath_quot.exit.i.i1374
	fma.rn.f32 	%f916, %f914, 0fC0000000, %f916;
LBB0_132:                               // %__internal_fmodf_kernel.exit.i1399
	abs.f32 	%f692, %f916;
	setp.gtu.f32 	%p155, %f692, 0f7F800000;
	@%p155 bra 	LBB0_134;
// %bb.133:
	mov.b32 	%r349, %f112;
	and.b32  	%r350, %r349, -2147483648;
	mov.b32 	%r351, %f916;
	or.b32  	%r352, %r350, %r351;
	mov.b32 	%f916, %r352;
LBB0_134:                               // %__nv_fmodf.exit1400
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r162;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9603, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd66, [retval0+0];
	} // callseq 11
	cvt.rn.f32.s64 	%f723, %rd66;
	div.approx.f32 	%f167, %f94, %f723;
	abs.f32 	%f920, %f167;
	setp.lt.f32 	%p163, %f920, 0f40000000;
	@%p163 bra 	LBB0_146;
// %bb.135:
	setp.gtu.f32 	%p164, %f920, 0f4B800000;
	@%p164 bra 	LBB0_142;
	bra.uni 	LBB0_136;
LBB0_142:
	mov.b32 	%r147, %f920;
	and.b32  	%r361, %r147, 8388607;
	or.b32  	%r7822, %r361, 1065353216;
	mov.b32 	%f919, %r7822;
	add.s32 	%r362, %r147, -1073741824;
	and.b32  	%r7823, %r362, -8388608;
	setp.eq.s32 	%p170, %r7823, 0;
	@%p170 bra 	LBB0_145;
// %bb.143:                             // %__nv_fmaf_rn.exit4.i.i.i1439.preheader
	mov.f32 	%f733, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f732,%f733;
	// end inline asm
LBB0_144:                               // %__nv_fmaf_rn.exit4.i.i.i1439
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r363, %r7823, 192937984;
	add.s32 	%r364, %r363, %r7822;
	mov.b32 	%f734, %r364;
	mul.f32 	%f735, %f732, %f734;
	sub.f32 	%f736, %f734, %f735;
	fma.rn.f32 	%f737, %f736, %f732, %f735;
	sub.f32 	%f738, %f734, %f737;
	fma.rz.f32 	%f739, %f738, %f732, %f737;
	cvt.rzi.f32.f32 	%f740, %f739;
	sub.f32 	%f919, %f734, %f740;
	sub.s32 	%r7823, %r7823, %r363;
	mov.b32 	%r7822, %f919;
	setp.ne.s32 	%p171, %r7823, 0;
	setp.ne.s32 	%p172, %r7822, 0;
	and.pred  	%p173, %p171, %p172;
	@%p173 bra 	LBB0_144;
LBB0_145:                               // %__internal_fmodf_slowpath_mod.exit.i.i1441
	setp.gt.u32 	%p174, %r147, 2139095039;
	selp.f32 	%f741, 0f7FFFFFFF, 0f4B800000, %p174;
	mul.f32 	%f742, %f919, 0f34000000;
	mul.f32 	%f920, %f741, %f742;
	bra.uni 	LBB0_146;
LBB0_136:                               // %__nv_fast_fdividef.exit.i.i.i1411
	div.approx.f32 	%f725, %f920, %f185;
	cvt.rzi.f32.f32 	%f918, %f725;
	fma.rn.f32 	%f170, %f918, 0fC0000000, %f920;
	mov.b32 	%r146, %f170;
	setp.lt.u32 	%p165, %r146, 1073741824;
	@%p165 bra 	LBB0_141;
// %bb.137:
	setp.lt.u32 	%p166, %r146, -2147483647;
	@%p166 bra 	LBB0_139;
// %bb.138:
	add.f32 	%f730, %f918, 0fBF800000;
	setp.lt.f32 	%p169, %f170, 0fC0000000;
	add.f32 	%f731, %f730, 0fBF800000;
	selp.f32 	%f918, %f731, %f730, %p169;
	bra.uni 	LBB0_141;
LBB0_139:
	add.f32 	%f918, %f918, 0f3F800000;
	setp.ltu.f32 	%p167, %f170, 0f40800000;
	@%p167 bra 	LBB0_141;
// %bb.140:                             // %__nv_fmaf_rn.exit.i.i.i1416
	add.f32 	%f726, %f918, 0f3F800000;
	fma.rn.f32 	%f728, %f185, 0fC0400000, %f170;
	setp.ge.f32 	%p168, %f728, 0f00000000;
	add.f32 	%f729, %f726, 0f3F800000;
	selp.f32 	%f918, %f729, %f726, %p168;
LBB0_141:                               // %__internal_fmodf_fastpath_quot.exit.i.i1420
	fma.rn.f32 	%f920, %f918, 0fC0000000, %f920;
LBB0_146:                               // %__internal_fmodf_kernel.exit.i1445
	abs.f32 	%f743, %f920;
	setp.gtu.f32 	%p175, %f743, 0f7F800000;
	@%p175 bra 	LBB0_148;
// %bb.147:
	mov.b32 	%r365, %f167;
	and.b32  	%r366, %r365, -2147483648;
	mov.b32 	%r367, %f920;
	or.b32  	%r368, %r366, %r367;
	mov.b32 	%f920, %r368;
LBB0_148:                               // %__nv_fmodf.exit1446
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r162;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9603, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd70, [retval0+0];
	} // callseq 12
	setp.eq.s64 	%p183, %rd70, 64;
	@%p183 bra 	LBB0_87;
	bra.uni 	LBB0_149;
LBB0_87:                                // %L1195
	shr.u32 	%r14, %r1, 1;
	shr.u32 	%r20, %r1, 3;
	and.b32  	%r383, %r20, 2;
	and.b32  	%r384, %r14, 4;
	or.b32  	%r385, %r18, %r383;
	or.b32  	%r72, %r385, %r384;
	mul.lo.s32 	%r73, %r50, %r72;
	cvt.rn.f32.s32 	%f776, %r73;
	div.approx.f32 	%f114, %f776, %f568;
	abs.f32 	%f908, %f114;
	setp.lt.f32 	%p184, %f908, 0f40000000;
	@%p184 bra 	LBB0_99;
// %bb.88:
	setp.gtu.f32 	%p185, %f908, 0f4B800000;
	@%p185 bra 	LBB0_95;
	bra.uni 	LBB0_89;
LBB0_95:
	mov.b32 	%r75, %f908;
	and.b32  	%r386, %r75, 8388607;
	or.b32  	%r7790, %r386, 1065353216;
	mov.b32 	%f907, %r7790;
	add.s32 	%r387, %r75, -1073741824;
	and.b32  	%r7791, %r387, -8388608;
	setp.eq.s32 	%p191, %r7791, 0;
	@%p191 bra 	LBB0_98;
// %bb.96:                              // %__nv_fmaf_rn.exit4.i.i.i1301.preheader
	mov.f32 	%f787, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f786,%f787;
	// end inline asm
LBB0_97:                                // %__nv_fmaf_rn.exit4.i.i.i1301
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r388, %r7791, 192937984;
	add.s32 	%r389, %r388, %r7790;
	mov.b32 	%f788, %r389;
	mul.f32 	%f789, %f786, %f788;
	sub.f32 	%f790, %f788, %f789;
	fma.rn.f32 	%f791, %f790, %f786, %f789;
	sub.f32 	%f792, %f788, %f791;
	fma.rz.f32 	%f793, %f792, %f786, %f791;
	cvt.rzi.f32.f32 	%f794, %f793;
	sub.f32 	%f907, %f788, %f794;
	sub.s32 	%r7791, %r7791, %r388;
	mov.b32 	%r7790, %f907;
	setp.ne.s32 	%p192, %r7791, 0;
	setp.ne.s32 	%p193, %r7790, 0;
	and.pred  	%p194, %p192, %p193;
	@%p194 bra 	LBB0_97;
LBB0_98:                                // %__internal_fmodf_slowpath_mod.exit.i.i1303
	setp.gt.u32 	%p195, %r75, 2139095039;
	selp.f32 	%f795, 0f7FFFFFFF, 0f4B800000, %p195;
	mul.f32 	%f796, %f907, 0f34000000;
	mul.f32 	%f908, %f795, %f796;
	bra.uni 	LBB0_99;
LBB0_89:                                // %__nv_fast_fdividef.exit.i.i.i1273
	div.approx.f32 	%f779, %f908, %f185;
	cvt.rzi.f32.f32 	%f906, %f779;
	fma.rn.f32 	%f117, %f906, 0fC0000000, %f908;
	mov.b32 	%r74, %f117;
	setp.lt.u32 	%p186, %r74, 1073741824;
	@%p186 bra 	LBB0_94;
// %bb.90:
	setp.lt.u32 	%p187, %r74, -2147483647;
	@%p187 bra 	LBB0_92;
// %bb.91:
	add.f32 	%f784, %f906, 0fBF800000;
	setp.lt.f32 	%p190, %f117, 0fC0000000;
	add.f32 	%f785, %f784, 0fBF800000;
	selp.f32 	%f906, %f785, %f784, %p190;
	bra.uni 	LBB0_94;
LBB0_92:
	add.f32 	%f906, %f906, 0f3F800000;
	setp.ltu.f32 	%p188, %f117, 0f40800000;
	@%p188 bra 	LBB0_94;
// %bb.93:                              // %__nv_fmaf_rn.exit.i.i.i1278
	add.f32 	%f780, %f906, 0f3F800000;
	fma.rn.f32 	%f782, %f185, 0fC0400000, %f117;
	setp.ge.f32 	%p189, %f782, 0f00000000;
	add.f32 	%f783, %f780, 0f3F800000;
	selp.f32 	%f906, %f783, %f780, %p189;
LBB0_94:                                // %__internal_fmodf_fastpath_quot.exit.i.i1282
	fma.rn.f32 	%f908, %f906, 0fC0000000, %f908;
LBB0_99:                                // %__internal_fmodf_kernel.exit.i1307
	abs.f32 	%f797, %f908;
	setp.gtu.f32 	%p196, %f797, 0f7F800000;
	@%p196 bra 	LBB0_101;
// %bb.100:
	mov.b32 	%r390, %f114;
	and.b32  	%r391, %r390, -2147483648;
	mov.b32 	%r392, %f908;
	or.b32  	%r393, %r391, %r392;
	mov.b32 	%f908, %r393;
LBB0_101:                               // %__nv_fmodf.exit1308
	shl.b32 	%r402, %r72, 3;
	sub.s32 	%r403, %r73, %r402;
	cvt.rn.f32.s32 	%f828, %r403;
	div.approx.f32 	%f133, %f828, %f568;
	abs.f32 	%f912, %f133;
	setp.lt.f32 	%p204, %f912, 0f40000000;
	@%p204 bra 	LBB0_113;
// %bb.102:
	setp.gtu.f32 	%p205, %f912, 0f4B800000;
	@%p205 bra 	LBB0_109;
	bra.uni 	LBB0_103;
LBB0_109:
	mov.b32 	%r83, %f912;
	and.b32  	%r404, %r83, 8388607;
	or.b32  	%r7792, %r404, 1065353216;
	mov.b32 	%f911, %r7792;
	add.s32 	%r405, %r83, -1073741824;
	and.b32  	%r7793, %r405, -8388608;
	setp.eq.s32 	%p211, %r7793, 0;
	@%p211 bra 	LBB0_112;
// %bb.110:                             // %__nv_fmaf_rn.exit4.i.i.i1347.preheader
	mov.f32 	%f839, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f838,%f839;
	// end inline asm
LBB0_111:                               // %__nv_fmaf_rn.exit4.i.i.i1347
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r406, %r7793, 192937984;
	add.s32 	%r407, %r406, %r7792;
	mov.b32 	%f840, %r407;
	mul.f32 	%f841, %f838, %f840;
	sub.f32 	%f842, %f840, %f841;
	fma.rn.f32 	%f843, %f842, %f838, %f841;
	sub.f32 	%f844, %f840, %f843;
	fma.rz.f32 	%f845, %f844, %f838, %f843;
	cvt.rzi.f32.f32 	%f846, %f845;
	sub.f32 	%f911, %f840, %f846;
	sub.s32 	%r7793, %r7793, %r406;
	mov.b32 	%r7792, %f911;
	setp.ne.s32 	%p212, %r7793, 0;
	setp.ne.s32 	%p213, %r7792, 0;
	and.pred  	%p214, %p212, %p213;
	@%p214 bra 	LBB0_111;
LBB0_112:                               // %__internal_fmodf_slowpath_mod.exit.i.i1349
	setp.gt.u32 	%p215, %r83, 2139095039;
	selp.f32 	%f847, 0f7FFFFFFF, 0f4B800000, %p215;
	mul.f32 	%f848, %f911, 0f34000000;
	mul.f32 	%f912, %f847, %f848;
	bra.uni 	LBB0_113;
LBB0_103:                               // %__nv_fast_fdividef.exit.i.i.i1319
	div.approx.f32 	%f831, %f912, %f185;
	cvt.rzi.f32.f32 	%f910, %f831;
	fma.rn.f32 	%f136, %f910, 0fC0000000, %f912;
	mov.b32 	%r82, %f136;
	setp.lt.u32 	%p206, %r82, 1073741824;
	@%p206 bra 	LBB0_108;
// %bb.104:
	setp.lt.u32 	%p207, %r82, -2147483647;
	@%p207 bra 	LBB0_106;
// %bb.105:
	add.f32 	%f836, %f910, 0fBF800000;
	setp.lt.f32 	%p210, %f136, 0fC0000000;
	add.f32 	%f837, %f836, 0fBF800000;
	selp.f32 	%f910, %f837, %f836, %p210;
	bra.uni 	LBB0_108;
LBB0_106:
	add.f32 	%f910, %f910, 0f3F800000;
	setp.ltu.f32 	%p208, %f136, 0f40800000;
	@%p208 bra 	LBB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i1324
	add.f32 	%f832, %f910, 0f3F800000;
	fma.rn.f32 	%f834, %f185, 0fC0400000, %f136;
	setp.ge.f32 	%p209, %f834, 0f00000000;
	add.f32 	%f835, %f832, 0f3F800000;
	selp.f32 	%f910, %f835, %f832, %p209;
LBB0_108:                               // %__internal_fmodf_fastpath_quot.exit.i.i1328
	fma.rn.f32 	%f912, %f910, 0fC0000000, %f912;
LBB0_113:                               // %__internal_fmodf_kernel.exit.i1353
	abs.f32 	%f849, %f912;
	setp.gtu.f32 	%p216, %f849, 0f7F800000;
	@%p216 bra 	LBB0_115;
// %bb.114:
	mov.b32 	%r408, %f133;
	and.b32  	%r409, %r408, -2147483648;
	mov.b32 	%r410, %f912;
	or.b32  	%r411, %r409, %r410;
	mov.b32 	%f912, %r411;
LBB0_115:                               // %__nv_fmodf.exit1354
	setp.le.s32 	%p224, %r6, %r5;
	mov.u32 	%r7781, 0;
	@%p224 bra 	LBB0_122;
// %bb.116:                             // %L1363.lr.ph
	mov.f32 	%f189, 0f43808000;
	div.approx.f32 	%f190, %f188, %f189;
	div.approx.f32 	%f224, %f222, %f189;
	div.approx.f32 	%f259, %f257, %f189;
	div.approx.f32 	%f293, %f291, %f189;
	div.approx.f32 	%f328, %f326, %f189;
	div.approx.f32 	%f362, %f360, %f189;
	div.approx.f32 	%f397, %f395, %f189;
	div.approx.f32 	%f431, %f429, %f189;
	abs.f32 	%f191, %f190;
	abs.f32 	%f225, %f224;
	abs.f32 	%f260, %f259;
	abs.f32 	%f294, %f293;
	abs.f32 	%f329, %f328;
	abs.f32 	%f363, %f362;
	abs.f32 	%f398, %f397;
	abs.f32 	%f432, %f431;
	setp.gt.f32 	%p13, %f191, 0f4B800000;
	mul.f32 	%f192, %f190, 0f00000000;
	setp.gt.f32 	%p19, %f225, 0f4B800000;
	mul.f32 	%f226, %f224, 0f00000000;
	setp.gt.f32 	%p25, %f260, 0f4B800000;
	mul.f32 	%f261, %f259, 0f00000000;
	setp.gt.f32 	%p31, %f294, 0f4B800000;
	mul.f32 	%f295, %f293, 0f00000000;
	setp.gt.f32 	%p37, %f329, 0f4B800000;
	mul.f32 	%f330, %f328, 0f00000000;
	setp.gt.f32 	%p43, %f363, 0f4B800000;
	mul.f32 	%f364, %f362, 0f00000000;
	setp.gt.f32 	%p49, %f398, 0f4B800000;
	mul.f32 	%f399, %f397, 0f00000000;
	setp.gt.f32 	%p55, %f432, 0f4B800000;
	mul.f32 	%f433, %f431, 0f00000000;
	selp.f32 	%f193, %f192, %f190, %p13;
	selp.f32 	%f227, %f226, %f224, %p19;
	selp.f32 	%f262, %f261, %f259, %p25;
	selp.f32 	%f296, %f295, %f293, %p31;
	selp.f32 	%f331, %f330, %f328, %p37;
	selp.f32 	%f365, %f364, %f362, %p43;
	selp.f32 	%f400, %f399, %f397, %p49;
	selp.f32 	%f434, %f433, %f431, %p55;
	add.f32 	%f589, %f900, %f900;
	add.f32 	%f640, %f904, %f904;
	add.f32 	%f194, %f193, %f193;
	add.f32 	%f228, %f227, %f227;
	add.f32 	%f263, %f262, %f262;
	add.f32 	%f297, %f296, %f296;
	add.f32 	%f332, %f331, %f331;
	add.f32 	%f366, %f365, %f365;
	add.f32 	%f401, %f400, %f400;
	add.f32 	%f435, %f434, %f434;
	add.f32 	%f484, %f892, %f892;
	add.f32 	%f536, %f896, %f896;
	mov.b32 	%r307, %f589;
	mov.b32 	%r337, %f640;
	add.f32 	%f693, %f916, %f916;
	add.f32 	%f744, %f920, %f920;
	mov.b32 	%r187, %f194;
	mov.b32 	%r194, %f228;
	mov.b32 	%r205, %f263;
	mov.b32 	%r212, %f297;
	mov.b32 	%r223, %f332;
	mov.b32 	%r230, %f366;
	mov.b32 	%r241, %f401;
	mov.b32 	%r248, %f435;
	mov.b32 	%r266, %f484;
	mov.b32 	%r289, %f536;
	and.b32  	%r308, %r307, -2147483648;
	and.b32  	%r338, %r337, -2147483648;
	mov.b32 	%r353, %f693;
	mov.b32 	%r375, %f744;
	and.b32  	%r188, %r187, -2147483648;
	and.b32  	%r195, %r194, -2147483648;
	and.b32  	%r206, %r205, -2147483648;
	and.b32  	%r213, %r212, -2147483648;
	and.b32  	%r224, %r223, -2147483648;
	and.b32  	%r231, %r230, -2147483648;
	and.b32  	%r242, %r241, -2147483648;
	and.b32  	%r249, %r248, -2147483648;
	and.b32  	%r267, %r266, -2147483648;
	and.b32  	%r290, %r289, -2147483648;
	or.b32  	%r309, %r308, 1056964608;
	or.b32  	%r339, %r338, 1056964608;
	and.b32  	%r354, %r353, -2147483648;
	and.b32  	%r376, %r375, -2147483648;
	add.f32 	%f798, %f908, %f908;
	or.b32  	%r189, %r188, 1056964608;
	or.b32  	%r196, %r195, 1056964608;
	or.b32  	%r207, %r206, 1056964608;
	or.b32  	%r214, %r213, 1056964608;
	or.b32  	%r225, %r224, 1056964608;
	or.b32  	%r232, %r231, 1056964608;
	or.b32  	%r243, %r242, 1056964608;
	or.b32  	%r250, %r249, 1056964608;
	or.b32  	%r268, %r267, 1056964608;
	or.b32  	%r291, %r290, 1056964608;
	mov.b32 	%f590, %r309;
	mov.b32 	%f641, %r339;
	or.b32  	%r355, %r354, 1056964608;
	or.b32  	%r377, %r376, 1056964608;
	mov.b32 	%r394, %f798;
	mov.b32 	%f195, %r189;
	mov.b32 	%f229, %r196;
	mov.b32 	%f264, %r207;
	mov.b32 	%f298, %r214;
	mov.b32 	%f333, %r225;
	mov.b32 	%f367, %r232;
	mov.b32 	%f402, %r243;
	mov.b32 	%f436, %r250;
	mov.b32 	%f485, %r268;
	mov.b32 	%f537, %r291;
	add.f32 	%f591, %f589, %f590;
	abs.f32 	%f593, %f589;
	add.f32 	%f642, %f640, %f641;
	abs.f32 	%f644, %f640;
	mov.b32 	%f694, %r355;
	mov.b32 	%f745, %r377;
	and.b32  	%r395, %r394, -2147483648;
	add.f32 	%f196, %f194, %f195;
	abs.f32 	%f198, %f194;
	add.f32 	%f230, %f228, %f229;
	abs.f32 	%f232, %f228;
	add.f32 	%f265, %f263, %f264;
	abs.f32 	%f267, %f263;
	add.f32 	%f299, %f297, %f298;
	abs.f32 	%f301, %f297;
	add.f32 	%f334, %f332, %f333;
	abs.f32 	%f336, %f332;
	add.f32 	%f368, %f366, %f367;
	abs.f32 	%f370, %f366;
	add.f32 	%f403, %f401, %f402;
	abs.f32 	%f405, %f401;
	add.f32 	%f437, %f435, %f436;
	abs.f32 	%f439, %f435;
	add.f32 	%f486, %f484, %f485;
	abs.f32 	%f488, %f484;
	add.f32 	%f538, %f536, %f537;
	abs.f32 	%f540, %f536;
	cvt.rzi.f32.f32 	%f592, %f591;
	setp.gt.f32 	%p115, %f593, 0f4B000000;
	cvt.rzi.f32.f32 	%f643, %f642;
	setp.gt.f32 	%p135, %f644, 0f4B000000;
	add.f32 	%f695, %f693, %f694;
	abs.f32 	%f697, %f693;
	add.f32 	%f746, %f744, %f745;
	abs.f32 	%f748, %f744;
	or.b32  	%r396, %r395, 1056964608;
	cvt.rzi.f32.f32 	%f197, %f196;
	setp.gt.f32 	%p14, %f198, 0f4B000000;
	cvt.rzi.f32.f32 	%f231, %f230;
	setp.gt.f32 	%p20, %f232, 0f4B000000;
	cvt.rzi.f32.f32 	%f266, %f265;
	setp.gt.f32 	%p26, %f267, 0f4B000000;
	cvt.rzi.f32.f32 	%f300, %f299;
	setp.gt.f32 	%p32, %f301, 0f4B000000;
	cvt.rzi.f32.f32 	%f335, %f334;
	setp.gt.f32 	%p38, %f336, 0f4B000000;
	cvt.rzi.f32.f32 	%f369, %f368;
	setp.gt.f32 	%p44, %f370, 0f4B000000;
	cvt.rzi.f32.f32 	%f404, %f403;
	setp.gt.f32 	%p50, %f405, 0f4B000000;
	cvt.rzi.f32.f32 	%f438, %f437;
	setp.gt.f32 	%p56, %f439, 0f4B000000;
	cvt.rzi.f32.f32 	%f487, %f486;
	setp.gt.f32 	%p74, %f488, 0f4B000000;
	cvt.rzi.f32.f32 	%f539, %f538;
	setp.gt.f32 	%p94, %f540, 0f4B000000;
	selp.f32 	%f594, %f589, %f592, %p115;
	cvt.rzi.f32.f32 	%f595, %f589;
	setp.lt.f32 	%p116, %f593, 0f3F000000;
	selp.f32 	%f645, %f640, %f643, %p135;
	cvt.rzi.f32.f32 	%f646, %f640;
	setp.lt.f32 	%p136, %f644, 0f3F000000;
	cvt.rzi.f32.f32 	%f696, %f695;
	setp.gt.f32 	%p156, %f697, 0f4B000000;
	cvt.rzi.f32.f32 	%f747, %f746;
	setp.gt.f32 	%p176, %f748, 0f4B000000;
	mov.b32 	%f799, %r396;
	selp.f32 	%f199, %f194, %f197, %p14;
	cvt.rzi.f32.f32 	%f200, %f194;
	setp.lt.f32 	%p15, %f198, 0f3F000000;
	selp.f32 	%f233, %f228, %f231, %p20;
	cvt.rzi.f32.f32 	%f234, %f228;
	setp.lt.f32 	%p21, %f232, 0f3F000000;
	selp.f32 	%f268, %f263, %f266, %p26;
	cvt.rzi.f32.f32 	%f269, %f263;
	setp.lt.f32 	%p27, %f267, 0f3F000000;
	selp.f32 	%f302, %f297, %f300, %p32;
	cvt.rzi.f32.f32 	%f303, %f297;
	setp.lt.f32 	%p33, %f301, 0f3F000000;
	selp.f32 	%f337, %f332, %f335, %p38;
	cvt.rzi.f32.f32 	%f338, %f332;
	setp.lt.f32 	%p39, %f336, 0f3F000000;
	selp.f32 	%f371, %f366, %f369, %p44;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p45, %f370, 0f3F000000;
	selp.f32 	%f406, %f401, %f404, %p50;
	cvt.rzi.f32.f32 	%f407, %f401;
	setp.lt.f32 	%p51, %f405, 0f3F000000;
	selp.f32 	%f440, %f435, %f438, %p56;
	cvt.rzi.f32.f32 	%f441, %f435;
	setp.lt.f32 	%p57, %f439, 0f3F000000;
	selp.f32 	%f489, %f484, %f487, %p74;
	cvt.rzi.f32.f32 	%f490, %f484;
	setp.lt.f32 	%p75, %f488, 0f3F000000;
	selp.f32 	%f541, %f536, %f539, %p94;
	cvt.rzi.f32.f32 	%f542, %f536;
	setp.lt.f32 	%p95, %f540, 0f3F000000;
	selp.f32 	%f596, %f595, %f594, %p116;
	selp.f32 	%f647, %f646, %f645, %p136;
	selp.f32 	%f698, %f693, %f696, %p156;
	cvt.rzi.f32.f32 	%f699, %f693;
	setp.lt.f32 	%p157, %f697, 0f3F000000;
	selp.f32 	%f749, %f744, %f747, %p176;
	cvt.rzi.f32.f32 	%f750, %f744;
	setp.lt.f32 	%p177, %f748, 0f3F000000;
	add.f32 	%f800, %f798, %f799;
	abs.f32 	%f802, %f798;
	selp.f32 	%f201, %f200, %f199, %p15;
	selp.f32 	%f235, %f234, %f233, %p21;
	selp.f32 	%f270, %f269, %f268, %p27;
	selp.f32 	%f304, %f303, %f302, %p33;
	selp.f32 	%f339, %f338, %f337, %p39;
	selp.f32 	%f373, %f372, %f371, %p45;
	selp.f32 	%f408, %f407, %f406, %p51;
	selp.f32 	%f442, %f441, %f440, %p57;
	selp.f32 	%f491, %f490, %f489, %p75;
	selp.f32 	%f543, %f542, %f541, %p95;
	fma.rn.f32 	%f597, %f596, 0fBF000000, %f900;
	fma.rn.f32 	%f648, %f647, 0fBF000000, %f904;
	selp.f32 	%f700, %f699, %f698, %p157;
	selp.f32 	%f751, %f750, %f749, %p177;
	cvt.rzi.f32.f32 	%f801, %f800;
	setp.gt.f32 	%p197, %f802, 0f4B000000;
	fma.rn.f32 	%f202, %f201, 0fBF000000, %f193;
	fma.rn.f32 	%f236, %f235, 0fBF000000, %f227;
	fma.rn.f32 	%f271, %f270, 0fBF000000, %f262;
	fma.rn.f32 	%f305, %f304, 0fBF000000, %f296;
	fma.rn.f32 	%f340, %f339, 0fBF000000, %f331;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f365;
	fma.rn.f32 	%f409, %f408, 0fBF000000, %f400;
	fma.rn.f32 	%f443, %f442, 0fBF000000, %f434;
	fma.rn.f32 	%f492, %f491, 0fBF000000, %f892;
	fma.rn.f32 	%f544, %f543, 0fBF000000, %f896;
	mul.f32 	%f598, %f597, %f597;
	mul.f32 	%f649, %f648, %f648;
	fma.rn.f32 	%f701, %f700, 0fBF000000, %f916;
	fma.rn.f32 	%f752, %f751, 0fBF000000, %f920;
	selp.f32 	%f803, %f798, %f801, %p197;
	cvt.rzi.f32.f32 	%f804, %f798;
	setp.lt.f32 	%p198, %f802, 0f3F000000;
	mul.f32 	%f203, %f202, %f202;
	mul.f32 	%f237, %f236, %f236;
	mul.f32 	%f272, %f271, %f271;
	mul.f32 	%f306, %f305, %f305;
	mul.f32 	%f341, %f340, %f340;
	mul.f32 	%f375, %f374, %f374;
	mul.f32 	%f410, %f409, %f409;
	mul.f32 	%f444, %f443, %f443;
	mul.f32 	%f493, %f492, %f492;
	mul.f32 	%f545, %f544, %f544;
	fma.rn.f32 	%f599, %f598, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f600, %f598, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f650, %f649, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f651, %f649, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f702, %f701, %f701;
	mul.f32 	%f753, %f752, %f752;
	selp.f32 	%f805, %f804, %f803, %p198;
	cvt.rzi.s32.f32 	%r190, %f201;
	fma.rn.f32 	%f204, %f203, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f205, %f203, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r197, %f235;
	fma.rn.f32 	%f238, %f237, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f239, %f237, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r208, %f270;
	fma.rn.f32 	%f273, %f272, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f274, %f272, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r215, %f304;
	fma.rn.f32 	%f307, %f306, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f308, %f306, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r226, %f339;
	fma.rn.f32 	%f342, %f341, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f343, %f341, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r233, %f373;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r244, %f408;
	fma.rn.f32 	%f411, %f410, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f412, %f410, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r251, %f442;
	fma.rn.f32 	%f445, %f444, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f446, %f444, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f494, %f493, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f495, %f493, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f546, %f545, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f547, %f545, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r310, %f596;
	fma.rn.f32 	%f601, %f599, %f598, 0fC0A55DF6;
	fma.rn.f32 	%f602, %f600, %f598, 0f4081E0CF;
	fma.rn.f32 	%f603, %f598, %f597, 0f00000000;
	cvt.rzi.s32.f32 	%r340, %f647;
	fma.rn.f32 	%f652, %f650, %f649, 0fC0A55DF6;
	fma.rn.f32 	%f653, %f651, %f649, 0f4081E0CF;
	fma.rn.f32 	%f654, %f649, %f648, 0f00000000;
	fma.rn.f32 	%f703, %f702, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f704, %f702, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f754, %f753, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f755, %f753, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f806, %f805, 0fBF000000, %f908;
	add.s32 	%r191, %r190, 1;
	fma.rn.f32 	%f206, %f204, %f203, 0fC0A55DF6;
	fma.rn.f32 	%f207, %f205, %f203, 0f4081E0CF;
	fma.rn.f32 	%f208, %f203, %f202, 0f00000000;
	add.s32 	%r198, %r197, 1;
	fma.rn.f32 	%f240, %f238, %f237, 0fC0A55DF6;
	fma.rn.f32 	%f241, %f239, %f237, 0f4081E0CF;
	fma.rn.f32 	%f242, %f237, %f236, 0f00000000;
	add.s32 	%r209, %r208, 1;
	fma.rn.f32 	%f275, %f273, %f272, 0fC0A55DF6;
	fma.rn.f32 	%f276, %f274, %f272, 0f4081E0CF;
	fma.rn.f32 	%f277, %f272, %f271, 0f00000000;
	add.s32 	%r216, %r215, 1;
	fma.rn.f32 	%f309, %f307, %f306, 0fC0A55DF6;
	fma.rn.f32 	%f310, %f308, %f306, 0f4081E0CF;
	fma.rn.f32 	%f311, %f306, %f305, 0f00000000;
	add.s32 	%r227, %r226, 1;
	fma.rn.f32 	%f344, %f342, %f341, 0fC0A55DF6;
	fma.rn.f32 	%f345, %f343, %f341, 0f4081E0CF;
	fma.rn.f32 	%f346, %f341, %f340, 0f00000000;
	add.s32 	%r234, %r233, 1;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	add.s32 	%r245, %r244, 1;
	fma.rn.f32 	%f413, %f411, %f410, 0fC0A55DF6;
	fma.rn.f32 	%f414, %f412, %f410, 0f4081E0CF;
	fma.rn.f32 	%f415, %f410, %f409, 0f00000000;
	add.s32 	%r252, %r251, 1;
	fma.rn.f32 	%f447, %f445, %f444, 0fC0A55DF6;
	fma.rn.f32 	%f448, %f446, %f444, 0f4081E0CF;
	fma.rn.f32 	%f449, %f444, %f443, 0f00000000;
	cvt.rzi.s32.f32 	%r269, %f491;
	fma.rn.f32 	%f496, %f494, %f493, 0fC0A55DF6;
	fma.rn.f32 	%f497, %f495, %f493, 0f4081E0CF;
	fma.rn.f32 	%f498, %f493, %f492, 0f00000000;
	cvt.rzi.s32.f32 	%r292, %f543;
	fma.rn.f32 	%f548, %f546, %f545, 0fC0A55DF6;
	fma.rn.f32 	%f549, %f547, %f545, 0f4081E0CF;
	fma.rn.f32 	%f550, %f545, %f544, 0f00000000;
	fma.rn.f32 	%f604, %f602, %f598, 0fC09DE9E6;
	fma.rn.f32 	%f605, %f601, %f603, 0f00000000;
	and.b32  	%r311, %r310, 1;
	fma.rn.f32 	%f655, %f653, %f649, 0fC09DE9E6;
	fma.rn.f32 	%f656, %f652, %f654, 0f00000000;
	and.b32  	%r341, %r340, 1;
	cvt.rzi.s32.f32 	%r356, %f700;
	fma.rn.f32 	%f705, %f703, %f702, 0fC0A55DF6;
	fma.rn.f32 	%f706, %f704, %f702, 0f4081E0CF;
	fma.rn.f32 	%f707, %f702, %f701, 0f00000000;
	cvt.rzi.s32.f32 	%r378, %f751;
	fma.rn.f32 	%f756, %f754, %f753, 0fC0A55DF6;
	fma.rn.f32 	%f757, %f755, %f753, 0f4081E0CF;
	fma.rn.f32 	%f758, %f753, %f752, 0f00000000;
	mul.f32 	%f807, %f806, %f806;
	fma.rn.f32 	%f209, %f207, %f203, 0fC09DE9E6;
	fma.rn.f32 	%f210, %f206, %f208, 0f00000000;
	and.b32  	%r192, %r191, 1;
	fma.rn.f32 	%f243, %f241, %f237, 0fC09DE9E6;
	fma.rn.f32 	%f244, %f240, %f242, 0f00000000;
	and.b32  	%r199, %r198, 1;
	fma.rn.f32 	%f278, %f276, %f272, 0fC09DE9E6;
	fma.rn.f32 	%f279, %f275, %f277, 0f00000000;
	and.b32  	%r210, %r209, 1;
	fma.rn.f32 	%f312, %f310, %f306, 0fC09DE9E6;
	fma.rn.f32 	%f313, %f309, %f311, 0f00000000;
	and.b32  	%r217, %r216, 1;
	fma.rn.f32 	%f347, %f345, %f341, 0fC09DE9E6;
	fma.rn.f32 	%f348, %f344, %f346, 0f00000000;
	and.b32  	%r228, %r227, 1;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	and.b32  	%r235, %r234, 1;
	fma.rn.f32 	%f416, %f414, %f410, 0fC09DE9E6;
	fma.rn.f32 	%f417, %f413, %f415, 0f00000000;
	and.b32  	%r246, %r245, 1;
	fma.rn.f32 	%f450, %f448, %f444, 0fC09DE9E6;
	fma.rn.f32 	%f451, %f447, %f449, 0f00000000;
	and.b32  	%r253, %r252, 1;
	fma.rn.f32 	%f499, %f497, %f493, 0fC09DE9E6;
	fma.rn.f32 	%f500, %f496, %f498, 0f00000000;
	and.b32  	%r270, %r269, 1;
	fma.rn.f32 	%f551, %f549, %f545, 0fC09DE9E6;
	fma.rn.f32 	%f552, %f548, %f550, 0f00000000;
	and.b32  	%r293, %r292, 1;
	fma.rn.f32 	%f606, %f604, %f598, 0f3F800000;
	fma.rn.f32 	%f607, %f597, 0f40490FDB, %f605;
	setp.eq.b32 	%p117, %r311, 1;
	fma.rn.f32 	%f657, %f655, %f649, 0f3F800000;
	fma.rn.f32 	%f658, %f648, 0f40490FDB, %f656;
	setp.eq.b32 	%p137, %r341, 1;
	fma.rn.f32 	%f708, %f706, %f702, 0fC09DE9E6;
	fma.rn.f32 	%f709, %f705, %f707, 0f00000000;
	and.b32  	%r357, %r356, 1;
	fma.rn.f32 	%f759, %f757, %f753, 0fC09DE9E6;
	fma.rn.f32 	%f760, %f756, %f758, 0f00000000;
	and.b32  	%r379, %r378, 1;
	fma.rn.f32 	%f808, %f807, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f809, %f807, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f211, %f209, %f203, 0f3F800000;
	fma.rn.f32 	%f212, %f202, 0f40490FDB, %f210;
	setp.eq.b32 	%p16, %r192, 1;
	fma.rn.f32 	%f245, %f243, %f237, 0f3F800000;
	fma.rn.f32 	%f246, %f236, 0f40490FDB, %f244;
	setp.eq.b32 	%p22, %r199, 1;
	fma.rn.f32 	%f280, %f278, %f272, 0f3F800000;
	fma.rn.f32 	%f281, %f271, 0f40490FDB, %f279;
	setp.eq.b32 	%p28, %r210, 1;
	fma.rn.f32 	%f314, %f312, %f306, 0f3F800000;
	fma.rn.f32 	%f315, %f305, 0f40490FDB, %f313;
	setp.eq.b32 	%p34, %r217, 1;
	fma.rn.f32 	%f349, %f347, %f341, 0f3F800000;
	fma.rn.f32 	%f350, %f340, 0f40490FDB, %f348;
	setp.eq.b32 	%p40, %r228, 1;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	setp.eq.b32 	%p46, %r235, 1;
	fma.rn.f32 	%f418, %f416, %f410, 0f3F800000;
	fma.rn.f32 	%f419, %f409, 0f40490FDB, %f417;
	setp.eq.b32 	%p52, %r246, 1;
	fma.rn.f32 	%f452, %f450, %f444, 0f3F800000;
	fma.rn.f32 	%f453, %f443, 0f40490FDB, %f451;
	setp.eq.b32 	%p58, %r253, 1;
	fma.rn.f32 	%f501, %f499, %f493, 0f3F800000;
	fma.rn.f32 	%f502, %f492, 0f40490FDB, %f500;
	setp.eq.b32 	%p76, %r270, 1;
	fma.rn.f32 	%f553, %f551, %f545, 0f3F800000;
	fma.rn.f32 	%f554, %f544, 0f40490FDB, %f552;
	setp.eq.b32 	%p96, %r293, 1;
	selp.f32 	%f608, %f606, %f607, %p117;
	and.b32  	%r312, %r310, 2;
	selp.f32 	%f659, %f657, %f658, %p137;
	and.b32  	%r342, %r340, 2;
	fma.rn.f32 	%f710, %f708, %f702, 0f3F800000;
	fma.rn.f32 	%f711, %f701, 0f40490FDB, %f709;
	setp.eq.b32 	%p158, %r357, 1;
	fma.rn.f32 	%f761, %f759, %f753, 0f3F800000;
	fma.rn.f32 	%f762, %f752, 0f40490FDB, %f760;
	setp.eq.b32 	%p178, %r379, 1;
	cvt.rzi.s32.f32 	%r397, %f805;
	fma.rn.f32 	%f810, %f808, %f807, 0fC0A55DF6;
	fma.rn.f32 	%f811, %f809, %f807, 0f4081E0CF;
	fma.rn.f32 	%f812, %f807, %f806, 0f00000000;
	selp.f32 	%f213, %f211, %f212, %p16;
	and.b32  	%r193, %r191, 2;
	mov.f32 	%f214, 0f00000000;
	selp.f32 	%f247, %f245, %f246, %p22;
	and.b32  	%r200, %r198, 2;
	selp.f32 	%f282, %f280, %f281, %p28;
	and.b32  	%r211, %r209, 2;
	selp.f32 	%f316, %f314, %f315, %p34;
	and.b32  	%r218, %r216, 2;
	selp.f32 	%f351, %f349, %f350, %p40;
	and.b32  	%r229, %r227, 2;
	selp.f32 	%f385, %f383, %f384, %p46;
	and.b32  	%r236, %r234, 2;
	selp.f32 	%f420, %f418, %f419, %p52;
	and.b32  	%r247, %r245, 2;
	selp.f32 	%f454, %f452, %f453, %p58;
	and.b32  	%r254, %r252, 2;
	selp.f32 	%f503, %f501, %f502, %p76;
	and.b32  	%r271, %r269, 2;
	selp.f32 	%f555, %f553, %f554, %p96;
	and.b32  	%r294, %r292, 2;
	setp.eq.s32 	%p118, %r312, 0;
	neg.f32 	%f610, %f608;
	add.s32 	%r313, %r310, 1;
	cvt.rzi.f32.f32 	%f615, %f900;
	setp.eq.s32 	%p138, %r342, 0;
	neg.f32 	%f661, %f659;
	add.s32 	%r343, %r340, 1;
	cvt.rzi.f32.f32 	%f666, %f904;
	selp.f32 	%f712, %f710, %f711, %p158;
	and.b32  	%r358, %r356, 2;
	selp.f32 	%f763, %f761, %f762, %p178;
	and.b32  	%r380, %r378, 2;
	fma.rn.f32 	%f813, %f811, %f807, 0fC09DE9E6;
	fma.rn.f32 	%f814, %f810, %f812, 0f00000000;
	and.b32  	%r398, %r397, 1;
	setp.eq.s32 	%p17, %r193, 0;
	sub.f32 	%f215, %f214, %f213;
	setp.eq.s32 	%p23, %r200, 0;
	sub.f32 	%f249, %f214, %f247;
	setp.eq.s32 	%p29, %r211, 0;
	sub.f32 	%f284, %f214, %f282;
	setp.eq.s32 	%p35, %r218, 0;
	sub.f32 	%f318, %f214, %f316;
	setp.eq.s32 	%p41, %r229, 0;
	sub.f32 	%f353, %f214, %f351;
	setp.eq.s32 	%p47, %r236, 0;
	sub.f32 	%f387, %f214, %f385;
	setp.eq.s32 	%p53, %r247, 0;
	sub.f32 	%f422, %f214, %f420;
	setp.eq.s32 	%p59, %r254, 0;
	sub.f32 	%f456, %f214, %f454;
	setp.eq.s32 	%p77, %r271, 0;
	neg.f32 	%f505, %f503;
	add.s32 	%r272, %r269, 1;
	cvt.rzi.f32.f32 	%f510, %f892;
	setp.eq.s32 	%p97, %r294, 0;
	neg.f32 	%f557, %f555;
	add.s32 	%r295, %r292, 1;
	cvt.rzi.f32.f32 	%f562, %f896;
	selp.f32 	%f609, %f607, %f606, %p117;
	selp.f32 	%f611, %f608, %f610, %p118;
	and.b32  	%r314, %r313, 2;
	setp.eq.f32 	%p120, %f615, %f900;
	mul.f32 	%f616, %f900, 0f00000000;
	selp.f32 	%f660, %f658, %f657, %p137;
	selp.f32 	%f662, %f659, %f661, %p138;
	and.b32  	%r344, %r343, 2;
	setp.eq.f32 	%p140, %f666, %f904;
	mul.f32 	%f667, %f904, 0f00000000;
	setp.eq.s32 	%p159, %r358, 0;
	neg.f32 	%f714, %f712;
	add.s32 	%r359, %r356, 1;
	cvt.rzi.f32.f32 	%f719, %f916;
	setp.eq.s32 	%p179, %r380, 0;
	neg.f32 	%f765, %f763;
	add.s32 	%r381, %r378, 1;
	cvt.rzi.f32.f32 	%f770, %f920;
	fma.rn.f32 	%f815, %f813, %f807, 0f3F800000;
	fma.rn.f32 	%f816, %f806, 0f40490FDB, %f814;
	setp.eq.b32 	%p199, %r398, 1;
	selp.f32 	%f216, %f213, %f215, %p17;
	selp.f32 	%f250, %f247, %f249, %p23;
	selp.f32 	%f285, %f282, %f284, %p29;
	selp.f32 	%f319, %f316, %f318, %p35;
	selp.f32 	%f354, %f351, %f353, %p41;
	selp.f32 	%f388, %f385, %f387, %p47;
	selp.f32 	%f423, %f420, %f422, %p53;
	selp.f32 	%f457, %f454, %f456, %p59;
	selp.f32 	%f504, %f502, %f501, %p76;
	selp.f32 	%f506, %f503, %f505, %p77;
	and.b32  	%r273, %r272, 2;
	setp.eq.f32 	%p79, %f510, %f892;
	mul.f32 	%f511, %f892, 0f00000000;
	selp.f32 	%f556, %f554, %f553, %p96;
	selp.f32 	%f558, %f555, %f557, %p97;
	and.b32  	%r296, %r295, 2;
	setp.eq.f32 	%p99, %f562, %f896;
	mul.f32 	%f563, %f896, 0f00000000;
	setp.eq.s32 	%p119, %r314, 0;
	sub.f32 	%f613, %f214, %f609;
	selp.f32 	%f92, %f616, %f611, %p120;
	abs.f32 	%f617, %f900;
	setp.eq.s32 	%p139, %r344, 0;
	sub.f32 	%f664, %f214, %f660;
	selp.f32 	%f668, %f667, %f662, %p140;
	abs.f32 	%f669, %f904;
	selp.f32 	%f713, %f711, %f710, %p158;
	selp.f32 	%f715, %f712, %f714, %p159;
	and.b32  	%r360, %r359, 2;
	setp.eq.f32 	%p161, %f719, %f916;
	mul.f32 	%f720, %f916, 0f00000000;
	selp.f32 	%f764, %f762, %f761, %p178;
	selp.f32 	%f766, %f763, %f765, %p179;
	and.b32  	%r382, %r381, 2;
	setp.eq.f32 	%p181, %f770, %f920;
	mul.f32 	%f771, %f920, 0f00000000;
	selp.f32 	%f817, %f815, %f816, %p199;
	and.b32  	%r399, %r397, 2;
	mul.f32 	%f2, %f216, %f216;
	mul.f32 	%f7, %f250, %f250;
	mul.f32 	%f11, %f285, %f285;
	mul.f32 	%f16, %f319, %f319;
	mul.f32 	%f20, %f354, %f354;
	mul.f32 	%f25, %f388, %f388;
	mul.f32 	%f29, %f423, %f423;
	mul.f32 	%f34, %f457, %f457;
	setp.eq.s32 	%p78, %r273, 0;
	sub.f32 	%f508, %f214, %f504;
	selp.f32 	%f55, %f511, %f506, %p79;
	abs.f32 	%f512, %f892;
	setp.eq.s32 	%p98, %r296, 0;
	sub.f32 	%f560, %f214, %f556;
	selp.f32 	%f564, %f563, %f558, %p99;
	abs.f32 	%f565, %f896;
	selp.f32 	%f614, %f609, %f613, %p119;
	setp.gt.f32 	%p121, %f617, 0f4B800000;
	add.f32 	%f618, %f92, 0f3F800000;
	selp.f32 	%f665, %f660, %f664, %p139;
	setp.gt.f32 	%p141, %f669, 0f4B800000;
	add.f32 	%f670, %f668, 0f3F800000;
	setp.eq.s32 	%p160, %r360, 0;
	sub.f32 	%f717, %f214, %f713;
	selp.f32 	%f165, %f720, %f715, %p161;
	abs.f32 	%f721, %f916;
	setp.eq.s32 	%p180, %r382, 0;
	sub.f32 	%f768, %f214, %f764;
	selp.f32 	%f772, %f771, %f766, %p181;
	abs.f32 	%f773, %f920;
	setp.eq.s32 	%p200, %r399, 0;
	neg.f32 	%f819, %f817;
	add.s32 	%r400, %r397, 1;
	cvt.rzi.f32.f32 	%f824, %f908;
	mul.f32 	%f220, %f2, 0f3C0AF64E;
	mul.f32 	%f254, %f7, 0f3C0AF64E;
	mul.f32 	%f289, %f11, 0f3C0AF64E;
	mul.f32 	%f323, %f16, 0f3C0AF64E;
	mul.f32 	%f358, %f20, 0f3C0AF64E;
	mul.f32 	%f392, %f25, 0f3C0AF64E;
	mul.f32 	%f427, %f29, 0f3C0AF64E;
	mul.f32 	%f460, %f34, 0f3C0AF64E;
	selp.f32 	%f509, %f504, %f508, %p78;
	setp.gt.f32 	%p80, %f512, 0f4B800000;
	add.f32 	%f513, %f55, 0f3F800000;
	selp.f32 	%f561, %f556, %f560, %p98;
	setp.gt.f32 	%p100, %f565, 0f4B800000;
	add.f32 	%f566, %f564, 0f3F800000;
	selp.f32 	%f93, %f618, %f614, %p121;
	selp.f32 	%f671, %f670, %f665, %p141;
	selp.f32 	%f718, %f713, %f717, %p160;
	setp.gt.f32 	%p162, %f721, 0f4B800000;
	add.f32 	%f722, %f165, 0f3F800000;
	selp.f32 	%f769, %f764, %f768, %p180;
	setp.gt.f32 	%p182, %f773, 0f4B800000;
	add.f32 	%f774, %f772, 0f3F800000;
	selp.f32 	%f818, %f816, %f815, %p199;
	selp.f32 	%f820, %f817, %f819, %p200;
	and.b32  	%r401, %r400, 2;
	setp.eq.f32 	%p202, %f824, %f908;
	mul.f32 	%f825, %f908, 0f00000000;
	mul.f32 	%f6, %f220, %f882;
	mul.f32 	%f255, %f254, %f883;
	mul.f32 	%f15, %f289, %f884;
	mul.f32 	%f324, %f323, %f885;
	mul.f32 	%f24, %f358, %f886;
	mul.f32 	%f393, %f392, %f887;
	mul.f32 	%f33, %f427, %f888;
	mul.f32 	%f461, %f460, %f889;
	selp.f32 	%f56, %f513, %f509, %p80;
	selp.f32 	%f567, %f566, %f561, %p100;
	mov.b32 	%r327, %f671;
	mov.b32 	%r326, %f93;
	mov.b32 	%r333, %f668;
	mov.b32 	%r332, %f92;
	selp.f32 	%f166, %f722, %f718, %p162;
	selp.f32 	%f775, %f774, %f769, %p182;
	setp.eq.s32 	%p201, %r401, 0;
	sub.f32 	%f822, %f214, %f818;
	selp.f32 	%f131, %f825, %f820, %p202;
	abs.f32 	%f826, %f908;
	mov.b32 	%r203, %f255;
	mov.b32 	%r202, %f6;
	mov.b32 	%r221, %f324;
	mov.b32 	%r220, %f15;
	mov.b32 	%r239, %f393;
	mov.b32 	%r238, %f24;
	mov.b32 	%r257, %f461;
	mov.b32 	%r256, %f33;
	mov.b32 	%r285, %f567;
	mov.b32 	%r284, %f56;
	mov.b32 	%r288, %f564;
	mov.b32 	%r287, %f55;
	xor.b32  	%r330, %r333, -2147483648;
	xor.b32  	%r329, %r332, -2147483648;
	mov.b32 	%r371, %f775;
	mov.b32 	%r370, %f166;
	mov.b32 	%r374, %f772;
	mov.b32 	%r373, %f165;
	selp.f32 	%f823, %f818, %f822, %p201;
	setp.gt.f32 	%p203, %f826, 0f4B800000;
	add.f32 	%f827, %f131, 0f3F800000;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	and.b32  	%r10, %r1, 16;
	// begin inline asm
	cvt.rn.f16x2.f32 %r201, %r203, %r202;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r219, %r221, %r220;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r237, %r239, %r238;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r255, %r257, %r256;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r283, %r285, %r284;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r286, %r288, %r287;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r325, %r327, %r326;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r328, %r330, %r329;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r331, %r333, %r332;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r334, %r327, %r326;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r369, %r371, %r370;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r372, %r374, %r373;
	// end inline asm
	selp.f32 	%f132, %f827, %f823, %p203;
	add.f32 	%f850, %f912, %f912;
	mov.b32 	%r424, %f850;
	and.b32  	%r425, %r424, -2147483648;
	or.b32  	%r426, %r425, 1056964608;
	mov.b32 	%f851, %r426;
	add.f32 	%f852, %f850, %f851;
	cvt.rzi.f32.f32 	%f853, %f852;
	abs.f32 	%f854, %f850;
	setp.gt.f32 	%p217, %f854, 0f4B000000;
	selp.f32 	%f855, %f850, %f853, %p217;
	cvt.rzi.f32.f32 	%f856, %f850;
	setp.lt.f32 	%p218, %f854, 0f3F000000;
	selp.f32 	%f857, %f856, %f855, %p218;
	cvt.rzi.s32.f32 	%r427, %f857;
	fma.rn.f32 	%f858, %f857, 0fBF000000, %f912;
	mul.f32 	%f859, %f858, %f858;
	fma.rn.f32 	%f860, %f859, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f861, %f859, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f862, %f860, %f859, 0fC0A55DF6;
	fma.rn.f32 	%f863, %f861, %f859, 0f4081E0CF;
	fma.rn.f32 	%f864, %f859, %f858, 0f00000000;
	fma.rn.f32 	%f865, %f863, %f859, 0fC09DE9E6;
	fma.rn.f32 	%f866, %f862, %f864, 0f00000000;
	fma.rn.f32 	%f867, %f865, %f859, 0f3F800000;
	fma.rn.f32 	%f868, %f858, 0f40490FDB, %f866;
	and.b32  	%r428, %r427, 1;
	setp.eq.b32 	%p219, %r428, 1;
	selp.f32 	%f869, %f867, %f868, %p219;
	selp.f32 	%f870, %f868, %f867, %p219;
	and.b32  	%r429, %r427, 2;
	setp.eq.s32 	%p220, %r429, 0;
	neg.f32 	%f871, %f869;
	selp.f32 	%f872, %f869, %f871, %p220;
	add.s32 	%r430, %r427, 1;
	and.b32  	%r431, %r430, 2;
	setp.eq.s32 	%p221, %r431, 0;
	sub.f32 	%f874, %f214, %f870;
	selp.f32 	%f875, %f870, %f874, %p221;
	cvt.rzi.f32.f32 	%f876, %f912;
	setp.eq.f32 	%p222, %f876, %f912;
	mul.f32 	%f877, %f912, 0f00000000;
	selp.f32 	%f878, %f877, %f872, %p222;
	abs.f32 	%f879, %f912;
	setp.gt.f32 	%p223, %f879, 0f4B800000;
	add.f32 	%f880, %f878, 0f3F800000;
	selp.f32 	%f881, %f880, %f875, %p223;
	mov.b32 	%r414, %f881;
	mov.b32 	%r413, %f132;
	// begin inline asm
	cvt.rn.f16x2.f32 %r412, %r414, %r413;
	// end inline asm
	mov.b32 	%r420, %f878;
	xor.b32  	%r417, %r420, -2147483648;
	mov.b32 	%r419, %f131;
	xor.b32  	%r416, %r419, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r415, %r417, %r416;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r418, %r420, %r419;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r421, %r414, %r413;
	// end inline asm
	shl.b32 	%r433, %r5, 12;
	and.b32  	%r434, %r9, 28;
	shl.b32 	%r435, %r2, 5;
	and.b32  	%r436, %r435, 96;
	or.b32  	%r437, %r434, %r436;
	and.b32  	%r438, %r435, 128;
	or.b32  	%r439, %r10, %r3;
	or.b32  	%r94, %r439, %r11;
	or.b32  	%r440, %r437, %r438;
	or.b32  	%r95, %r440, %r433;
	and.b32  	%r96, %r1, 8;
	and.b32  	%r441, %r3, 1;
	shr.u32 	%r442, %r3, 3;
	mul.lo.s32 	%r443, %r442, 130;
	shl.b32 	%r444, %r1, 4;
	or.b32  	%r445, %r444, %r96;
	shr.u32 	%r446, %r445, 2;
	and.b32  	%r447, %r446, 30;
	shr.u32 	%r448, %r3, 1;
	bfe.u32 	%r449, %r3, 1, 1;
	bfe.u32 	%r450, %r3, 2, 1;
	mad.lo.s32 	%r451, %r441, 1040, %r443;
	mad.lo.s32 	%r452, %r19, 65, %r451;
	mad.lo.s32 	%r453, %r449, 520, %r452;
	mad.lo.s32 	%r454, %r450, 260, %r453;
	add.s32 	%r455, %r454, %r447;
	mul.wide.u32 	%rd74, %r455, 4;
	mov.u64 	%rd75, shmem;
	add.s64 	%rd5, %rd75, %rd74;
	add.s32 	%r456, %r455, 32;
	mul.wide.u32 	%rd76, %r456, 4;
	add.s64 	%rd6, %rd75, %rd76;
	add.s32 	%r457, %r455, 1;
	mul.wide.u32 	%rd77, %r457, 4;
	add.s64 	%rd7, %rd75, %rd77;
	add.s32 	%r458, %r455, 33;
	mul.wide.u32 	%rd78, %r458, 4;
	add.s64 	%rd8, %rd75, %rd78;
	mul.lo.s32 	%r459, %r21, 1040;
	mul.lo.s32 	%r460, %r16, 130;
	mul.lo.s32 	%r461, %r15, 65;
	and.b32  	%r462, %r4, 32;
	mul.lo.s32 	%r463, %r19, 520;
	mul.lo.s32 	%r464, %r18, 260;
	add.s32 	%r465, %r460, %r448;
	add.s32 	%r466, %r465, %r462;
	add.s32 	%r467, %r466, %r463;
	add.s32 	%r468, %r467, %r459;
	add.s32 	%r469, %r468, %r461;
	add.s32 	%r470, %r469, %r464;
	or.b32  	%r471, %r448, 8;
	add.s32 	%r472, %r471, %r460;
	add.s32 	%r473, %r472, %r462;
	add.s32 	%r474, %r473, %r463;
	add.s32 	%r475, %r474, %r459;
	add.s32 	%r476, %r475, %r461;
	add.s32 	%r477, %r476, %r464;
	or.b32  	%r478, %r448, 16;
	add.s32 	%r479, %r478, %r460;
	add.s32 	%r480, %r479, %r462;
	add.s32 	%r481, %r480, %r463;
	add.s32 	%r482, %r481, %r459;
	add.s32 	%r483, %r482, %r461;
	add.s32 	%r484, %r483, %r464;
	or.b32  	%r485, %r448, 24;
	add.s32 	%r486, %r485, %r460;
	add.s32 	%r487, %r486, %r462;
	add.s32 	%r488, %r487, %r463;
	add.s32 	%r489, %r488, %r459;
	add.s32 	%r490, %r489, %r461;
	add.s32 	%r491, %r490, %r464;
	mul.lo.s32 	%r492, %r12, 65;
	or.b32  	%r493, %r462, %r448;
	add.s32 	%r494, %r493, %r492;
	or.b32  	%r495, %r462, %r471;
	add.s32 	%r496, %r495, %r492;
	or.b32  	%r497, %r462, %r478;
	add.s32 	%r498, %r497, %r492;
	or.b32  	%r499, %r462, %r485;
	add.s32 	%r500, %r499, %r492;
	shl.b32 	%r501, %r3, 1;
	or.b32  	%r502, %r19, %r501;
	mul.lo.s32 	%r503, %r502, 65;
	add.s32 	%r504, %r447, %r503;
	mul.wide.u32 	%rd79, %r504, 4;
	add.s64 	%rd9, %rd75, %rd79;
	cvt.u64.u32 	%rd80, %r447;
	cvt.u64.u32 	%rd81, %r503;
	add.s64 	%rd82, %rd81, %rd80;
	shl.b64 	%rd83, %rd82, 2;
	add.s64 	%rd10, %rd75, %rd83;
	shl.b32 	%r505, %r7, 18;
	add.s32 	%r506, %r505, -786432;
	shl.b32 	%r507, %r2, 3;
	and.b32  	%r508, %r507, 960;
	or.b32  	%r509, %r508, %r20;
	shl.b32 	%r510, %r3, 10;
	shl.b32 	%r511, %r509, 8;
	or.b32  	%r512, %r510, %r511;
	or.b32  	%r97, %r440, %r512;
	cvt.s64.s32 	%rd11, %r506;
	mul.wide.u32 	%rd12, %r500, 4;
	mul.wide.u32 	%rd13, %r498, 4;
	mul.wide.u32 	%rd14, %r496, 4;
	mul.wide.u32 	%rd15, %r494, 4;
	mul.wide.u32 	%rd16, %r491, 4;
	mul.wide.u32 	%rd17, %r484, 4;
	mul.wide.u32 	%rd18, %r477, 4;
	mul.wide.u32 	%rd19, %r470, 4;
	setp.eq.s32 	%p225, %r96, 0;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r7794, %r7781;
	mov.u32 	%r7819, %r7781;
	mov.u32 	%r7818, %r7781;
	mov.u32 	%r7817, %r7781;
	mov.u32 	%r7816, %r7781;
	mov.u32 	%r7815, %r7781;
	mov.u32 	%r7814, %r7781;
	mov.u32 	%r7813, %r7781;
	mov.u32 	%r7812, %r7781;
	mov.u32 	%r7811, %r7781;
	mov.u32 	%r7810, %r7781;
	mov.u32 	%r7809, %r7781;
	mov.u32 	%r7808, %r7781;
	bra.uni 	LBB0_117;
LBB0_121:                               // %L29522
                                        //   in Loop: Header=BB0_117 Depth=1
	setp.ne.s32 	%p236, %r7794, 130816;
	add.s32 	%r7794, %r7794, 256;
	add.s32 	%r7778, %r7794, %r5;
	setp.gt.s32 	%p237, %r6, %r7778;
	and.pred  	%p238, %p236, %p237;
	@%p238 bra 	LBB0_117;
	bra.uni 	LBB0_122;
LBB0_117:                               // %L1363
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_118 Depth 2
	or.b32  	%r530, %r94, %r7794;
	shl.b32 	%r531, %r530, 12;
	add.s32 	%r532, %r95, %r531;
	shr.s32 	%r533, %r532, 31;
	shr.u32 	%r534, %r533, 3;
	add.s32 	%r535, %r532, %r534;
	shr.s32 	%r536, %r535, 29;
	setp.lt.s32 	%p226, %r532, 0;
	and.b32  	%r537, %r535, -536870912;
	setp.ne.s32 	%p227, %r537, %r532;
	and.pred  	%p228, %p226, %p227;
	selp.u32 	%r538, 1, 0, %p228;
	sub.s32 	%r539, %r538, %r536;
	shl.b32 	%r540, %r539, 29;
	add.s32 	%r541, %r540, %r532;
	mul.wide.s32 	%rd85, %r541, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.v4.u32 	{%r542, %r543, %r544, %r545}, [%rd86];
	selp.b32 	%r546, %r544, %r542, %p225;
	shfl.sync.bfly.b32	%r547, %r546, 8, 31, -1;
	selp.b32 	%r514, %r542, %r547, %p225;
	selp.b32 	%r515, %r547, %r544, %p225;
	selp.b32 	%r548, %r545, %r543, %p225;
	shfl.sync.bfly.b32	%r549, %r548, 8, 31, -1;
	selp.b32 	%r522, %r543, %r549, %p225;
	selp.b32 	%r523, %r549, %r545, %p225;
	mov.u32 	%r524, 21520;
	// begin inline asm
	prmt.b32 %r513, %r514, %r515, %r524;
	// end inline asm
	mov.u32 	%r528, 30258;
	// begin inline asm
	prmt.b32 %r517, %r514, %r515, %r528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r521, %r522, %r523, %r524;
	// end inline asm
	// begin inline asm
	prmt.b32 %r525, %r522, %r523, %r528;
	// end inline asm
	st.shared.u32 	[%rd5], %r513;
	st.shared.u32 	[%rd6], %r517;
	st.shared.u32 	[%rd7], %r521;
	st.shared.u32 	[%rd8], %r525;
	bar.sync 	0;
	mov.u32 	%r7807, 256;
	mov.u64 	%rd109, %rd75;
LBB0_118:                               // %L4497
                                        //   Parent Loop BB0_117 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd87, %rd109, %rd19;
	ld.shared.u32 	%r7734, [%rd87];
	add.s64 	%rd88, %rd109, %rd18;
	ld.shared.u32 	%r7735, [%rd88];
	add.s64 	%rd89, %rd109, %rd17;
	ld.shared.u32 	%r7736, [%rd89];
	add.s64 	%rd90, %rd109, %rd16;
	ld.shared.u32 	%r7737, [%rd90];
	// begin inline asm
	mov.b32 %r555, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r566, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r554, %r7734, -2004318072;
	mov.u32 	%r553, 983055;
	// begin inline asm
	lop3.b32 %r552, %r553, %r554, %r555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r556, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r557, %r555, %r556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r560, %r552, %r557;
	// end inline asm
	mov.u32 	%r564, 15728880;
	// begin inline asm
	lop3.b32 %r563, %r564, %r554, %r566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r567, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r568, %r566, %r567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r571, %r563, %r568;
	// end inline asm
	shr.u32 	%r576, %r554, 8;
	// begin inline asm
	lop3.b32 %r574, %r553, %r576, %r555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r578, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r579, %r555, %r578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r582, %r574, %r579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r585, %r564, %r576, %r566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r589, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r590, %r566, %r589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r593, %r585, %r590;
	// end inline asm
	// begin inline asm
	mov.b32 %r601, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r612, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r600, %r7735, -2004318072;
	// begin inline asm
	lop3.b32 %r598, %r553, %r600, %r601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r602, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r603, %r601, %r602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r606, %r598, %r603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r609, %r564, %r600, %r612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r613, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r614, %r612, %r613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r617, %r609, %r614;
	// end inline asm
	shr.u32 	%r622, %r600, 8;
	// begin inline asm
	lop3.b32 %r620, %r553, %r622, %r601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r624, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r625, %r601, %r624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r628, %r620, %r625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r631, %r564, %r622, %r612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r635, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r636, %r612, %r635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r639, %r631, %r636;
	// end inline asm
	// begin inline asm
	mov.b32 %r647, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r658, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r646, %r7736, -2004318072;
	// begin inline asm
	lop3.b32 %r644, %r553, %r646, %r647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r648, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r649, %r647, %r648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r652, %r644, %r649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r655, %r564, %r646, %r658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r659, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r660, %r658, %r659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r663, %r655, %r660;
	// end inline asm
	shr.u32 	%r668, %r646, 8;
	// begin inline asm
	lop3.b32 %r666, %r553, %r668, %r647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r670, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r671, %r647, %r670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r674, %r666, %r671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r677, %r564, %r668, %r658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r681, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r682, %r658, %r681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r685, %r677, %r682;
	// end inline asm
	// begin inline asm
	mov.b32 %r693, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r704, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r692, %r7737, -2004318072;
	// begin inline asm
	lop3.b32 %r690, %r553, %r692, %r693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r694, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r695, %r693, %r694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r698, %r690, %r695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r701, %r564, %r692, %r704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r705, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r706, %r704, %r705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r709, %r701, %r706;
	// end inline asm
	shr.u32 	%r714, %r692, 8;
	// begin inline asm
	lop3.b32 %r712, %r553, %r714, %r693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r716, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r717, %r693, %r716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r720, %r712, %r717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r723, %r564, %r714, %r704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r727, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r728, %r704, %r727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r731, %r723, %r728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r734, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r736, %r734, %r560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r739, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r741, %r739, %r571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r744, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r746, %r744, %r582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r749, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r751, %r749, %r593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r754, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r756, %r754, %r606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r759, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r761, %r759, %r617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r764, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r766, %r764, %r628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r769, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r771, %r769, %r639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r774, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r776, %r774, %r652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r779, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r781, %r779, %r663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r784, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r786, %r784, %r674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r789, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r791, %r789, %r685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r794, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r796, %r794, %r698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r799, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r801, %r799, %r709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r804, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r806, %r804, %r720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r809, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r811, %r809, %r731;
	// end inline asm
	// begin inline asm
	mov.b32 %r819, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r830, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r818, %r7808, -2004318072;
	// begin inline asm
	lop3.b32 %r816, %r553, %r818, %r819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r820, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r821, %r819, %r820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r824, %r816, %r821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r827, %r564, %r818, %r830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r831, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r832, %r830, %r831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r835, %r827, %r832;
	// end inline asm
	shr.u32 	%r840, %r818, 8;
	// begin inline asm
	lop3.b32 %r838, %r553, %r840, %r819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r842, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r843, %r819, %r842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r846, %r838, %r843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r849, %r564, %r840, %r830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r853, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r854, %r830, %r853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r857, %r849, %r854;
	// end inline asm
	// begin inline asm
	mov.b32 %r865, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r876, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r864, %r7809, -2004318072;
	// begin inline asm
	lop3.b32 %r862, %r553, %r864, %r865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r866, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r867, %r865, %r866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r870, %r862, %r867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r873, %r564, %r864, %r876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r877, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r878, %r876, %r877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r881, %r873, %r878;
	// end inline asm
	shr.u32 	%r886, %r864, 8;
	// begin inline asm
	lop3.b32 %r884, %r553, %r886, %r865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r888, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r889, %r865, %r888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r892, %r884, %r889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r895, %r564, %r886, %r876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r899, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r900, %r876, %r899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r903, %r895, %r900;
	// end inline asm
	// begin inline asm
	mov.b32 %r911, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r922, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r910, %r7810, -2004318072;
	// begin inline asm
	lop3.b32 %r908, %r553, %r910, %r911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r912, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r913, %r911, %r912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r916, %r908, %r913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r919, %r564, %r910, %r922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r923, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r924, %r922, %r923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r927, %r919, %r924;
	// end inline asm
	shr.u32 	%r932, %r910, 8;
	// begin inline asm
	lop3.b32 %r930, %r553, %r932, %r911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r934, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r935, %r911, %r934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r938, %r930, %r935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r941, %r564, %r932, %r922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r945, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r946, %r922, %r945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r949, %r941, %r946;
	// end inline asm
	// begin inline asm
	mov.b32 %r957, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r968, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r956, %r7811, -2004318072;
	// begin inline asm
	lop3.b32 %r954, %r553, %r956, %r957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r958, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r959, %r957, %r958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r962, %r954, %r959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r965, %r564, %r956, %r968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r969, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r970, %r968, %r969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r973, %r965, %r970;
	// end inline asm
	shr.u32 	%r978, %r956, 8;
	// begin inline asm
	lop3.b32 %r976, %r553, %r978, %r957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r980, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r981, %r957, %r980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r984, %r976, %r981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r987, %r564, %r978, %r968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r991, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r992, %r968, %r991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r995, %r987, %r992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r998, %r201, %r824, %r736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1002, %r201, %r835, %r741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1006, %r201, %r846, %r746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1010, %r201, %r857, %r751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1014, %r201, %r870, %r756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1018, %r201, %r881, %r761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1022, %r201, %r892, %r766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1026, %r201, %r903, %r771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1030, %r201, %r916, %r776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1034, %r201, %r927, %r781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1038, %r201, %r938, %r786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1042, %r201, %r949, %r791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1046, %r201, %r962, %r796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1050, %r201, %r973, %r801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1054, %r201, %r984, %r806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1058, %r201, %r995, %r811;
	// end inline asm
	// begin inline asm
	mov.b32 %r1067, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1078, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1066, %r7812, -2004318072;
	// begin inline asm
	lop3.b32 %r1064, %r553, %r1066, %r1067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1068, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1069, %r1067, %r1068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1072, %r1064, %r1069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1075, %r564, %r1066, %r1078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1079, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1080, %r1078, %r1079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1083, %r1075, %r1080;
	// end inline asm
	shr.u32 	%r1088, %r1066, 8;
	// begin inline asm
	lop3.b32 %r1086, %r553, %r1088, %r1067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1090, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1091, %r1067, %r1090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1094, %r1086, %r1091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1097, %r564, %r1088, %r1078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1101, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1102, %r1078, %r1101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1105, %r1097, %r1102;
	// end inline asm
	// begin inline asm
	mov.b32 %r1113, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1124, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1112, %r7813, -2004318072;
	// begin inline asm
	lop3.b32 %r1110, %r553, %r1112, %r1113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1114, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1115, %r1113, %r1114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1118, %r1110, %r1115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1121, %r564, %r1112, %r1124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1125, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1126, %r1124, %r1125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1129, %r1121, %r1126;
	// end inline asm
	shr.u32 	%r1134, %r1112, 8;
	// begin inline asm
	lop3.b32 %r1132, %r553, %r1134, %r1113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1136, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1137, %r1113, %r1136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1140, %r1132, %r1137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1143, %r564, %r1134, %r1124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1147, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1148, %r1124, %r1147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1151, %r1143, %r1148;
	// end inline asm
	// begin inline asm
	mov.b32 %r1159, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1170, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1158, %r7814, -2004318072;
	// begin inline asm
	lop3.b32 %r1156, %r553, %r1158, %r1159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1160, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1161, %r1159, %r1160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1164, %r1156, %r1161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1167, %r564, %r1158, %r1170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1171, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1172, %r1170, %r1171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1175, %r1167, %r1172;
	// end inline asm
	shr.u32 	%r1180, %r1158, 8;
	// begin inline asm
	lop3.b32 %r1178, %r553, %r1180, %r1159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1182, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1183, %r1159, %r1182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1186, %r1178, %r1183;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1189, %r564, %r1180, %r1170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1193, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1194, %r1170, %r1193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1197, %r1189, %r1194;
	// end inline asm
	// begin inline asm
	mov.b32 %r1205, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1216, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1204, %r7815, -2004318072;
	// begin inline asm
	lop3.b32 %r1202, %r553, %r1204, %r1205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1206, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1207, %r1205, %r1206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1210, %r1202, %r1207;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1213, %r564, %r1204, %r1216, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1217, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1218, %r1216, %r1217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1221, %r1213, %r1218;
	// end inline asm
	shr.u32 	%r1226, %r1204, 8;
	// begin inline asm
	lop3.b32 %r1224, %r553, %r1226, %r1205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1228, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1229, %r1205, %r1228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1232, %r1224, %r1229;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1235, %r564, %r1226, %r1216, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1239, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1240, %r1216, %r1239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1243, %r1235, %r1240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1246, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1248, %r1246, %r1072, %r998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1252, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1254, %r1252, %r1083, %r1002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1258, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1260, %r1258, %r1094, %r1006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1264, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1266, %r1264, %r1105, %r1010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1270, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1272, %r1270, %r1118, %r1014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1276, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1278, %r1276, %r1129, %r1018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1282, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1284, %r1282, %r1140, %r1022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1288, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1290, %r1288, %r1151, %r1026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1294, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1296, %r1294, %r1164, %r1030;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1300, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1302, %r1300, %r1175, %r1034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1306, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1308, %r1306, %r1186, %r1038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1312, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1314, %r1312, %r1197, %r1042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1318, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1320, %r1318, %r1210, %r1046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1324, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1326, %r1324, %r1221, %r1050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1330, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1332, %r1330, %r1232, %r1054;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1336, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1338, %r1336, %r1243, %r1058;
	// end inline asm
	// begin inline asm
	mov.b32 %r1347, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1358, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1346, %r7816, -2004318072;
	// begin inline asm
	lop3.b32 %r1344, %r553, %r1346, %r1347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1348, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1349, %r1347, %r1348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1352, %r1344, %r1349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1355, %r564, %r1346, %r1358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1359, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1360, %r1358, %r1359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1363, %r1355, %r1360;
	// end inline asm
	shr.u32 	%r1368, %r1346, 8;
	// begin inline asm
	lop3.b32 %r1366, %r553, %r1368, %r1347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1370, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1371, %r1347, %r1370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1374, %r1366, %r1371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1377, %r564, %r1368, %r1358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1381, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1382, %r1358, %r1381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1385, %r1377, %r1382;
	// end inline asm
	// begin inline asm
	mov.b32 %r1393, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1404, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1392, %r7817, -2004318072;
	// begin inline asm
	lop3.b32 %r1390, %r553, %r1392, %r1393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1394, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1395, %r1393, %r1394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1398, %r1390, %r1395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1401, %r564, %r1392, %r1404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1405, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1406, %r1404, %r1405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1409, %r1401, %r1406;
	// end inline asm
	shr.u32 	%r1414, %r1392, 8;
	// begin inline asm
	lop3.b32 %r1412, %r553, %r1414, %r1393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1416, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1417, %r1393, %r1416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1420, %r1412, %r1417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1423, %r564, %r1414, %r1404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1427, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1428, %r1404, %r1427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1431, %r1423, %r1428;
	// end inline asm
	// begin inline asm
	mov.b32 %r1439, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1450, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1438, %r7818, -2004318072;
	// begin inline asm
	lop3.b32 %r1436, %r553, %r1438, %r1439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1440, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1441, %r1439, %r1440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1444, %r1436, %r1441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1447, %r564, %r1438, %r1450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1451, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1452, %r1450, %r1451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1455, %r1447, %r1452;
	// end inline asm
	shr.u32 	%r1460, %r1438, 8;
	// begin inline asm
	lop3.b32 %r1458, %r553, %r1460, %r1439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1462, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1463, %r1439, %r1462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1466, %r1458, %r1463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1469, %r564, %r1460, %r1450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1473, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1474, %r1450, %r1473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1477, %r1469, %r1474;
	// end inline asm
	// begin inline asm
	mov.b32 %r1485, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1496, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1484, %r7819, -2004318072;
	// begin inline asm
	lop3.b32 %r1482, %r553, %r1484, %r1485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1486, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1487, %r1485, %r1486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1490, %r1482, %r1487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1493, %r564, %r1484, %r1496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1497, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1498, %r1496, %r1497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1501, %r1493, %r1498;
	// end inline asm
	shr.u32 	%r1506, %r1484, 8;
	// begin inline asm
	lop3.b32 %r1504, %r553, %r1506, %r1485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1508, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1509, %r1485, %r1508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1512, %r1504, %r1509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1515, %r564, %r1506, %r1496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1519, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1520, %r1496, %r1519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1523, %r1515, %r1520;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1597, %r237, %r1352, %r1248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1594, %r237, %r1363, %r1254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1606, %r237, %r1374, %r1260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1603, %r237, %r1385, %r1266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1615, %r237, %r1398, %r1272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1612, %r237, %r1409, %r1278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1624, %r237, %r1420, %r1284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1621, %r237, %r1431, %r1290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1633, %r237, %r1444, %r1296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1630, %r237, %r1455, %r1302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1642, %r237, %r1466, %r1308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1639, %r237, %r1477, %r1314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1651, %r237, %r1490, %r1320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1648, %r237, %r1501, %r1326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1660, %r237, %r1512, %r1332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1657, %r237, %r1523, %r1338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1590, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1592, %r1590, %r1594;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1595, %r283, %r1597, %r1592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1599, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1601, %r1599, %r1603;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1604, %r283, %r1606, %r1601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1608, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1610, %r1608, %r1612;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1613, %r283, %r1615, %r1610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1617, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1619, %r1617, %r1621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1622, %r283, %r1624, %r1619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1626, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1628, %r1626, %r1630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1631, %r283, %r1633, %r1628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1635, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1637, %r1635, %r1639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1640, %r283, %r1642, %r1637;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1644, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1646, %r1644, %r1648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1649, %r283, %r1651, %r1646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1653, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1655, %r1653, %r1657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1658, %r283, %r1660, %r1655;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1662, %r286, %r1597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1665, %r283, %r1594, %r1662;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1669, %r286, %r1606;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1672, %r283, %r1603, %r1669;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1676, %r286, %r1615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1679, %r283, %r1612, %r1676;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1683, %r286, %r1624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1686, %r283, %r1621, %r1683;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1690, %r286, %r1633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1693, %r283, %r1630, %r1690;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1697, %r286, %r1642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1700, %r283, %r1639, %r1697;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1704, %r286, %r1651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1707, %r283, %r1648, %r1704;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1711, %r286, %r1660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1714, %r283, %r1657, %r1711;
	// end inline asm
	mov.u32 	%r1726, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1805, %r1802}, {%r325, %r331, %r328, %r334}, {%r1595, %r1665}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1814, %r1811}, {%r325, %r331, %r328, %r334}, {%r1604, %r1672}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1823, %r1820}, {%r325, %r331, %r328, %r334}, {%r1613, %r1679}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1832, %r1829}, {%r325, %r331, %r328, %r334}, {%r1622, %r1686}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1841, %r1838}, {%r325, %r331, %r328, %r334}, {%r1631, %r1693}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1850, %r1847}, {%r325, %r331, %r328, %r334}, {%r1640, %r1700}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1859, %r1856}, {%r325, %r331, %r328, %r334}, {%r1649, %r1707}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1868, %r1865}, {%r325, %r331, %r328, %r334}, {%r1658, %r1714}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1798, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1800, %r1798, %r1802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r369, %r1805, %r1800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1807, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1809, %r1807, %r1811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1812, %r369, %r1814, %r1809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1816, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1818, %r1816, %r1820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1821, %r369, %r1823, %r1818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1825, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1827, %r1825, %r1829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1830, %r369, %r1832, %r1827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1834, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1836, %r1834, %r1838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1839, %r369, %r1841, %r1836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1843, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1845, %r1843, %r1847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1848, %r369, %r1850, %r1845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1852, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1854, %r1852, %r1856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1857, %r369, %r1859, %r1854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1861, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1863, %r1861, %r1865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1866, %r369, %r1868, %r1863;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1870, %r372, %r1805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1873, %r369, %r1802, %r1870;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1877, %r372, %r1814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1880, %r369, %r1811, %r1877;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1884, %r372, %r1823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1887, %r369, %r1820, %r1884;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1891, %r372, %r1832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1894, %r369, %r1829, %r1891;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1898, %r372, %r1841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1901, %r369, %r1838, %r1898;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1905, %r372, %r1850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1908, %r369, %r1847, %r1905;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1912, %r372, %r1859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1915, %r369, %r1856, %r1912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1919, %r372, %r1868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1922, %r369, %r1865, %r1919;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1926, %r1927}, {%r412, %r418, %r415, %r421}, {%r1803, %r1873}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1936, %r1937}, {%r412, %r418, %r415, %r421}, {%r1812, %r1880}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1946, %r1947}, {%r412, %r418, %r415, %r421}, {%r1821, %r1887}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1956, %r1957}, {%r412, %r418, %r415, %r421}, {%r1830, %r1894}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1966, %r1967}, {%r412, %r418, %r415, %r421}, {%r1839, %r1901}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1976, %r1977}, {%r412, %r418, %r415, %r421}, {%r1848, %r1908}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1986, %r1987}, {%r412, %r418, %r415, %r421}, {%r1857, %r1915}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1996, %r1997}, {%r412, %r418, %r415, %r421}, {%r1866, %r1922}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2006, %r13, %r1926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2009, %r13, %r1927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2012, %r13, %r1936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2015, %r13, %r1937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2018, %r13, %r1946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2021, %r13, %r1947;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2024, %r13, %r1956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2027, %r13, %r1957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2030, %r13, %r1966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2033, %r13, %r1967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2036, %r13, %r1976;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2039, %r13, %r1977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2042, %r13, %r1986;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2045, %r13, %r1987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2048, %r13, %r1996;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2051, %r13, %r1997;
	// end inline asm
	// begin inline asm
	mov.b32 %r2054, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2055, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2056, %r2006, %r2054;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2059, %r2056, %r2055;
	// end inline asm
	// begin inline asm
	mov.b32 %r2062, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2063, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2064, %r2009, %r2062;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2067, %r2064, %r2063;
	// end inline asm
	// begin inline asm
	mov.b32 %r2070, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2071, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2072, %r2012, %r2070;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2075, %r2072, %r2071;
	// end inline asm
	// begin inline asm
	mov.b32 %r2078, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2079, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2080, %r2015, %r2078;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2083, %r2080, %r2079;
	// end inline asm
	// begin inline asm
	mov.b32 %r2086, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2087, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2088, %r2018, %r2086;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2091, %r2088, %r2087;
	// end inline asm
	// begin inline asm
	mov.b32 %r2094, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2095, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2096, %r2021, %r2094;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2099, %r2096, %r2095;
	// end inline asm
	// begin inline asm
	mov.b32 %r2102, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2103, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2104, %r2024, %r2102;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2107, %r2104, %r2103;
	// end inline asm
	// begin inline asm
	mov.b32 %r2110, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2111, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2112, %r2027, %r2110;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2115, %r2112, %r2111;
	// end inline asm
	// begin inline asm
	mov.b32 %r2118, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2119, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2120, %r2030, %r2118;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2123, %r2120, %r2119;
	// end inline asm
	// begin inline asm
	mov.b32 %r2126, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2127, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2128, %r2033, %r2126;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2131, %r2128, %r2127;
	// end inline asm
	// begin inline asm
	mov.b32 %r2134, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2135, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2136, %r2036, %r2134;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2139, %r2136, %r2135;
	// end inline asm
	// begin inline asm
	mov.b32 %r2142, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2143, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2144, %r2039, %r2142;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2147, %r2144, %r2143;
	// end inline asm
	// begin inline asm
	mov.b32 %r2150, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2151, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2152, %r2042, %r2150;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2155, %r2152, %r2151;
	// end inline asm
	// begin inline asm
	mov.b32 %r2158, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2159, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2160, %r2045, %r2158;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2163, %r2160, %r2159;
	// end inline asm
	// begin inline asm
	mov.b32 %r2166, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2167, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2168, %r2048, %r2166;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2171, %r2168, %r2167;
	// end inline asm
	// begin inline asm
	mov.b32 %r2174, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2175, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2176, %r2051, %r2174;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2179, %r2176, %r2175;
	// end inline asm
	// begin inline asm
	mov.b32 %r2185, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2183, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2184, %r2185, %r2183;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2187, %r2059, %r2184;
	// end inline asm
	// begin inline asm
	mov.b32 %r2190, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2191, %r2185, %r2190;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2194, %r2067, %r2191;
	// end inline asm
	// begin inline asm
	mov.b32 %r2197, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2198, %r2185, %r2197;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2201, %r2075, %r2198;
	// end inline asm
	// begin inline asm
	mov.b32 %r2204, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2205, %r2185, %r2204;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2208, %r2083, %r2205;
	// end inline asm
	mov.u32 	%r2214, 25152;
	// begin inline asm
	prmt.b32 %r2211, %r2187, %r2201, %r2214;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2215, %r2194, %r2208, %r2214;
	// end inline asm
	shl.b32 	%r2222, %r2215, 4;
	mov.u32 	%r2220, 252645135;
	// begin inline asm
	lop3.b32 %r2219, %r2220, %r2211, %r2222, 202;
	// end inline asm
	xor.b32  	%r7738, %r2219, -2004318072;
	// begin inline asm
	mov.b32 %r2226, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2224, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2225, %r2226, %r2224;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2228, %r2091, %r2225;
	// end inline asm
	// begin inline asm
	mov.b32 %r2231, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2232, %r2226, %r2231;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2235, %r2099, %r2232;
	// end inline asm
	// begin inline asm
	mov.b32 %r2238, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2239, %r2226, %r2238;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2242, %r2107, %r2239;
	// end inline asm
	// begin inline asm
	mov.b32 %r2245, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2246, %r2226, %r2245;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2249, %r2115, %r2246;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2252, %r2228, %r2242, %r2214;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2256, %r2235, %r2249, %r2214;
	// end inline asm
	shl.b32 	%r2263, %r2256, 4;
	// begin inline asm
	lop3.b32 %r2260, %r2220, %r2252, %r2263, 202;
	// end inline asm
	xor.b32  	%r7739, %r2260, -2004318072;
	// begin inline asm
	mov.b32 %r2267, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2265, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2266, %r2267, %r2265;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2269, %r2123, %r2266;
	// end inline asm
	// begin inline asm
	mov.b32 %r2272, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2273, %r2267, %r2272;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2276, %r2131, %r2273;
	// end inline asm
	// begin inline asm
	mov.b32 %r2279, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2280, %r2267, %r2279;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2283, %r2139, %r2280;
	// end inline asm
	// begin inline asm
	mov.b32 %r2286, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2287, %r2267, %r2286;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2290, %r2147, %r2287;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2293, %r2269, %r2283, %r2214;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2297, %r2276, %r2290, %r2214;
	// end inline asm
	shl.b32 	%r2304, %r2297, 4;
	// begin inline asm
	lop3.b32 %r2301, %r2220, %r2293, %r2304, 202;
	// end inline asm
	xor.b32  	%r7740, %r2301, -2004318072;
	// begin inline asm
	mov.b32 %r2308, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2306, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2307, %r2308, %r2306;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2310, %r2155, %r2307;
	// end inline asm
	// begin inline asm
	mov.b32 %r2313, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2314, %r2308, %r2313;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2317, %r2163, %r2314;
	// end inline asm
	// begin inline asm
	mov.b32 %r2320, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2321, %r2308, %r2320;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2324, %r2171, %r2321;
	// end inline asm
	// begin inline asm
	mov.b32 %r2327, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2328, %r2308, %r2327;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2331, %r2179, %r2328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2334, %r2310, %r2324, %r2214;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2338, %r2317, %r2331, %r2214;
	// end inline asm
	shl.b32 	%r2345, %r2338, 4;
	// begin inline asm
	lop3.b32 %r2342, %r2220, %r2334, %r2345, 202;
	// end inline asm
	xor.b32  	%r7741, %r2342, -2004318072;
	add.s64 	%rd91, %rd109, %rd15;
	st.shared.u32 	[%rd91], %r7738;
	add.s64 	%rd92, %rd109, %rd14;
	st.shared.u32 	[%rd92], %r7739;
	add.s64 	%rd93, %rd109, %rd13;
	st.shared.u32 	[%rd93], %r7740;
	add.s64 	%rd94, %rd109, %rd12;
	st.shared.u32 	[%rd94], %r7741;
	ld.shared.u32 	%r7808, [%rd87];
	ld.shared.u32 	%r7809, [%rd88];
	ld.shared.u32 	%r7810, [%rd89];
	ld.shared.u32 	%r7811, [%rd90];
	// begin inline asm
	mov.b32 %r2351, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2362, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2350, %r7808, -2004318072;
	// begin inline asm
	lop3.b32 %r2348, %r553, %r2350, %r2351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2352, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2353, %r2351, %r2352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2356, %r2348, %r2353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2359, %r564, %r2350, %r2362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2363, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2364, %r2362, %r2363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2367, %r2359, %r2364;
	// end inline asm
	shr.u32 	%r2372, %r2350, 8;
	// begin inline asm
	lop3.b32 %r2370, %r553, %r2372, %r2351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2374, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2375, %r2351, %r2374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2378, %r2370, %r2375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2381, %r564, %r2372, %r2362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2385, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2386, %r2362, %r2385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2389, %r2381, %r2386;
	// end inline asm
	// begin inline asm
	mov.b32 %r2397, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2408, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2396, %r7809, -2004318072;
	// begin inline asm
	lop3.b32 %r2394, %r553, %r2396, %r2397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2398, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2399, %r2397, %r2398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2402, %r2394, %r2399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2405, %r564, %r2396, %r2408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2409, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2410, %r2408, %r2409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2413, %r2405, %r2410;
	// end inline asm
	shr.u32 	%r2418, %r2396, 8;
	// begin inline asm
	lop3.b32 %r2416, %r553, %r2418, %r2397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2420, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2421, %r2397, %r2420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2424, %r2416, %r2421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2427, %r564, %r2418, %r2408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2431, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2432, %r2408, %r2431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2435, %r2427, %r2432;
	// end inline asm
	// begin inline asm
	mov.b32 %r2443, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2454, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2442, %r7810, -2004318072;
	// begin inline asm
	lop3.b32 %r2440, %r553, %r2442, %r2443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2444, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2445, %r2443, %r2444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2448, %r2440, %r2445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2451, %r564, %r2442, %r2454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2455, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2456, %r2454, %r2455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2459, %r2451, %r2456;
	// end inline asm
	shr.u32 	%r2464, %r2442, 8;
	// begin inline asm
	lop3.b32 %r2462, %r553, %r2464, %r2443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2466, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2467, %r2443, %r2466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2470, %r2462, %r2467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2473, %r564, %r2464, %r2454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2477, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2478, %r2454, %r2477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2481, %r2473, %r2478;
	// end inline asm
	// begin inline asm
	mov.b32 %r2489, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2500, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2488, %r7811, -2004318072;
	// begin inline asm
	lop3.b32 %r2486, %r553, %r2488, %r2489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2490, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2491, %r2489, %r2490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2494, %r2486, %r2491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2497, %r564, %r2488, %r2500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2501, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2502, %r2500, %r2501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2505, %r2497, %r2502;
	// end inline asm
	shr.u32 	%r2510, %r2488, 8;
	// begin inline asm
	lop3.b32 %r2508, %r553, %r2510, %r2489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2512, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2513, %r2489, %r2512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2516, %r2508, %r2513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2519, %r564, %r2510, %r2500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2523, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2524, %r2500, %r2523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2527, %r2519, %r2524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2530, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2532, %r2530, %r2356;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2535, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2537, %r2535, %r2367;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2540, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2542, %r2540, %r2378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2545, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2547, %r2545, %r2389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2550, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2552, %r2550, %r2402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2555, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2557, %r2555, %r2413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2560, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2562, %r2560, %r2424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2565, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2567, %r2565, %r2435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2570, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2572, %r2570, %r2448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2575, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2577, %r2575, %r2459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2580, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2582, %r2580, %r2470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2585, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2587, %r2585, %r2481;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2590, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2592, %r2590, %r2494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2595, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2597, %r2595, %r2505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2600, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2602, %r2600, %r2516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2605, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2607, %r2605, %r2527;
	// end inline asm
	// begin inline asm
	mov.b32 %r2615, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2626, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2612, %r553, %r1066, %r2615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2616, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2617, %r2615, %r2616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2620, %r2612, %r2617;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2623, %r564, %r1066, %r2626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2627, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2628, %r2626, %r2627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2631, %r2623, %r2628;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2634, %r553, %r1088, %r2615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2638, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2639, %r2615, %r2638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2642, %r2634, %r2639;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2645, %r564, %r1088, %r2626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2649, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2650, %r2626, %r2649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2653, %r2645, %r2650;
	// end inline asm
	// begin inline asm
	mov.b32 %r2661, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2672, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2658, %r553, %r1112, %r2661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2662, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2663, %r2661, %r2662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2666, %r2658, %r2663;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2669, %r564, %r1112, %r2672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2673, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2674, %r2672, %r2673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2677, %r2669, %r2674;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2680, %r553, %r1134, %r2661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2684, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2685, %r2661, %r2684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2688, %r2680, %r2685;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2691, %r564, %r1134, %r2672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2695, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2696, %r2672, %r2695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2699, %r2691, %r2696;
	// end inline asm
	// begin inline asm
	mov.b32 %r2707, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2718, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2704, %r553, %r1158, %r2707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2708, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2709, %r2707, %r2708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2712, %r2704, %r2709;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2715, %r564, %r1158, %r2718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2719, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2720, %r2718, %r2719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2723, %r2715, %r2720;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2726, %r553, %r1180, %r2707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2730, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2731, %r2707, %r2730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2734, %r2726, %r2731;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2737, %r564, %r1180, %r2718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2741, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2742, %r2718, %r2741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2745, %r2737, %r2742;
	// end inline asm
	// begin inline asm
	mov.b32 %r2753, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2764, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2750, %r553, %r1204, %r2753, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2754, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2755, %r2753, %r2754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2758, %r2750, %r2755;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2761, %r564, %r1204, %r2764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2765, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2766, %r2764, %r2765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2769, %r2761, %r2766;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2772, %r553, %r1226, %r2753, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2776, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2777, %r2753, %r2776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2780, %r2772, %r2777;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2783, %r564, %r1226, %r2764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2787, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2788, %r2764, %r2787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2791, %r2783, %r2788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2794, %r201, %r2620, %r2532;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2798, %r201, %r2631, %r2537;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2802, %r201, %r2642, %r2542;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2806, %r201, %r2653, %r2547;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2810, %r201, %r2666, %r2552;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2814, %r201, %r2677, %r2557;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2818, %r201, %r2688, %r2562;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2822, %r201, %r2699, %r2567;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2826, %r201, %r2712, %r2572;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2830, %r201, %r2723, %r2577;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2834, %r201, %r2734, %r2582;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2838, %r201, %r2745, %r2587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2842, %r201, %r2758, %r2592;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2846, %r201, %r2769, %r2597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2850, %r201, %r2780, %r2602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2854, %r201, %r2791, %r2607;
	// end inline asm
	// begin inline asm
	mov.b32 %r2863, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2874, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2860, %r553, %r1346, %r2863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2864, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2865, %r2863, %r2864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2868, %r2860, %r2865;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2871, %r564, %r1346, %r2874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2875, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2876, %r2874, %r2875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2879, %r2871, %r2876;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2882, %r553, %r1368, %r2863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2886, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2887, %r2863, %r2886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2890, %r2882, %r2887;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2893, %r564, %r1368, %r2874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2897, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2898, %r2874, %r2897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2901, %r2893, %r2898;
	// end inline asm
	// begin inline asm
	mov.b32 %r2909, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2920, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2906, %r553, %r1392, %r2909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2910, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2911, %r2909, %r2910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2914, %r2906, %r2911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2917, %r564, %r1392, %r2920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2921, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2922, %r2920, %r2921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2925, %r2917, %r2922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2928, %r553, %r1414, %r2909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2932, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2933, %r2909, %r2932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2936, %r2928, %r2933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2939, %r564, %r1414, %r2920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2943, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2944, %r2920, %r2943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2947, %r2939, %r2944;
	// end inline asm
	// begin inline asm
	mov.b32 %r2955, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2966, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2952, %r553, %r1438, %r2955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2956, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2957, %r2955, %r2956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2960, %r2952, %r2957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2963, %r564, %r1438, %r2966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2967, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2968, %r2966, %r2967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2971, %r2963, %r2968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2974, %r553, %r1460, %r2955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2978, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2979, %r2955, %r2978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2982, %r2974, %r2979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2985, %r564, %r1460, %r2966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2989, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2990, %r2966, %r2989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2993, %r2985, %r2990;
	// end inline asm
	// begin inline asm
	mov.b32 %r3001, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3012, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2998, %r553, %r1484, %r3001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3002, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3003, %r3001, %r3002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3006, %r2998, %r3003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3009, %r564, %r1484, %r3012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3013, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3014, %r3012, %r3013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3017, %r3009, %r3014;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3020, %r553, %r1506, %r3001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3024, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3025, %r3001, %r3024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3028, %r3020, %r3025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3031, %r564, %r1506, %r3012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3035, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3036, %r3012, %r3035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3039, %r3031, %r3036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3042, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3044, %r3042, %r2868, %r2794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3048, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3050, %r3048, %r2879, %r2798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3054, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3056, %r3054, %r2890, %r2802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3060, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3062, %r3060, %r2901, %r2806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3066, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3068, %r3066, %r2914, %r2810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3072, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r3072, %r2925, %r2814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3078, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3080, %r3078, %r2936, %r2818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3084, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3086, %r3084, %r2947, %r2822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3090, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3092, %r3090, %r2960, %r2826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3096, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3098, %r3096, %r2971, %r2830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3102, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3104, %r3102, %r2982, %r2834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3108, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3110, %r3108, %r2993, %r2838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3114, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3116, %r3114, %r3006, %r2842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3120, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3122, %r3120, %r3017, %r2846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3126, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3128, %r3126, %r3028, %r2850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3132, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3134, %r3132, %r3039, %r2854;
	// end inline asm
	// begin inline asm
	mov.b32 %r3143, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3154, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3140, %r553, %r554, %r3143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3144, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3145, %r3143, %r3144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3148, %r3140, %r3145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3151, %r564, %r554, %r3154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3155, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3156, %r3154, %r3155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3159, %r3151, %r3156;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3162, %r553, %r576, %r3143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3166, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3167, %r3143, %r3166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3170, %r3162, %r3167;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3173, %r564, %r576, %r3154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3177, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3178, %r3154, %r3177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3181, %r3173, %r3178;
	// end inline asm
	// begin inline asm
	mov.b32 %r3189, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3200, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3186, %r553, %r600, %r3189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3190, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3191, %r3189, %r3190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3194, %r3186, %r3191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3197, %r564, %r600, %r3200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3201, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3202, %r3200, %r3201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3205, %r3197, %r3202;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3208, %r553, %r622, %r3189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3212, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3213, %r3189, %r3212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3216, %r3208, %r3213;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3219, %r564, %r622, %r3200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3223, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3224, %r3200, %r3223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3227, %r3219, %r3224;
	// end inline asm
	// begin inline asm
	mov.b32 %r3235, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3246, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3232, %r553, %r646, %r3235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3236, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3237, %r3235, %r3236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3240, %r3232, %r3237;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3243, %r564, %r646, %r3246, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3247, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3248, %r3246, %r3247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3251, %r3243, %r3248;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3254, %r553, %r668, %r3235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3258, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3259, %r3235, %r3258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3262, %r3254, %r3259;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3265, %r564, %r668, %r3246, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3269, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3270, %r3246, %r3269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3273, %r3265, %r3270;
	// end inline asm
	// begin inline asm
	mov.b32 %r3281, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3292, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3278, %r553, %r692, %r3281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3282, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3283, %r3281, %r3282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3286, %r3278, %r3283;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3289, %r564, %r692, %r3292, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3293, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3294, %r3292, %r3293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3297, %r3289, %r3294;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3300, %r553, %r714, %r3281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3304, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3305, %r3281, %r3304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3308, %r3300, %r3305;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3311, %r564, %r714, %r3292, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3315, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3316, %r3292, %r3315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3319, %r3311, %r3316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3393, %r237, %r3148, %r3044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3390, %r237, %r3159, %r3050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3402, %r237, %r3170, %r3056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3399, %r237, %r3181, %r3062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3411, %r237, %r3194, %r3068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3408, %r237, %r3205, %r3074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3420, %r237, %r3216, %r3080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3417, %r237, %r3227, %r3086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3429, %r237, %r3240, %r3092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3426, %r237, %r3251, %r3098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3438, %r237, %r3262, %r3104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3435, %r237, %r3273, %r3110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3447, %r237, %r3286, %r3116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3444, %r237, %r3297, %r3122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3456, %r237, %r3308, %r3128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3453, %r237, %r3319, %r3134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3386, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3388, %r3386, %r3390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3391, %r283, %r3393, %r3388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3395, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3397, %r3395, %r3399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3400, %r283, %r3402, %r3397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3404, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3406, %r3404, %r3408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3409, %r283, %r3411, %r3406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3413, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3415, %r3413, %r3417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3418, %r283, %r3420, %r3415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3422, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3424, %r3422, %r3426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3427, %r283, %r3429, %r3424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3431, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3433, %r3431, %r3435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3436, %r283, %r3438, %r3433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3440, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3442, %r3440, %r3444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3445, %r283, %r3447, %r3442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3449, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3451, %r3449, %r3453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3454, %r283, %r3456, %r3451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3458, %r286, %r3393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3461, %r283, %r3390, %r3458;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3465, %r286, %r3402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3468, %r283, %r3399, %r3465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3472, %r286, %r3411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3475, %r283, %r3408, %r3472;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3479, %r286, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3482, %r283, %r3417, %r3479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3486, %r286, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3489, %r283, %r3426, %r3486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3493, %r286, %r3438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3496, %r283, %r3435, %r3493;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3500, %r286, %r3447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3503, %r283, %r3444, %r3500;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3507, %r286, %r3456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3510, %r283, %r3453, %r3507;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3601, %r3598}, {%r325, %r331, %r328, %r334}, {%r3391, %r3461}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3610, %r3607}, {%r325, %r331, %r328, %r334}, {%r3400, %r3468}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3619, %r3616}, {%r325, %r331, %r328, %r334}, {%r3409, %r3475}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3628, %r3625}, {%r325, %r331, %r328, %r334}, {%r3418, %r3482}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3637, %r3634}, {%r325, %r331, %r328, %r334}, {%r3427, %r3489}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3646, %r3643}, {%r325, %r331, %r328, %r334}, {%r3436, %r3496}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3655, %r3652}, {%r325, %r331, %r328, %r334}, {%r3445, %r3503}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3664, %r3661}, {%r325, %r331, %r328, %r334}, {%r3454, %r3510}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3594, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3596, %r3594, %r3598;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3599, %r369, %r3601, %r3596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3603, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3605, %r3603, %r3607;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3608, %r369, %r3610, %r3605;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3612, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3614, %r3612, %r3616;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3617, %r369, %r3619, %r3614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3621, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3623, %r3621, %r3625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3626, %r369, %r3628, %r3623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3630, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3632, %r3630, %r3634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3635, %r369, %r3637, %r3632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3639, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3641, %r3639, %r3643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3644, %r369, %r3646, %r3641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3648, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3650, %r3648, %r3652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3653, %r369, %r3655, %r3650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3657, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3659, %r3657, %r3661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3662, %r369, %r3664, %r3659;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3666, %r372, %r3601;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3669, %r369, %r3598, %r3666;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3673, %r372, %r3610;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3676, %r369, %r3607, %r3673;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3680, %r372, %r3619;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3683, %r369, %r3616, %r3680;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3687, %r372, %r3628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3690, %r369, %r3625, %r3687;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3694, %r372, %r3637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3697, %r369, %r3634, %r3694;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3701, %r372, %r3646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3704, %r369, %r3643, %r3701;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3708, %r372, %r3655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3711, %r369, %r3652, %r3708;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3715, %r372, %r3664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3718, %r369, %r3661, %r3715;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3722, %r3723}, {%r412, %r418, %r415, %r421}, {%r3599, %r3669}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3732, %r3733}, {%r412, %r418, %r415, %r421}, {%r3608, %r3676}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3742, %r3743}, {%r412, %r418, %r415, %r421}, {%r3617, %r3683}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3752, %r3753}, {%r412, %r418, %r415, %r421}, {%r3626, %r3690}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3762, %r3763}, {%r412, %r418, %r415, %r421}, {%r3635, %r3697}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3772, %r3773}, {%r412, %r418, %r415, %r421}, {%r3644, %r3704}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3782, %r3783}, {%r412, %r418, %r415, %r421}, {%r3653, %r3711}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3792, %r3793}, {%r412, %r418, %r415, %r421}, {%r3662, %r3718}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3802, %r13, %r3722;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3805, %r13, %r3723;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3808, %r13, %r3732;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3811, %r13, %r3733;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3814, %r13, %r3742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3817, %r13, %r3743;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3820, %r13, %r3752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3823, %r13, %r3753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3826, %r13, %r3762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3829, %r13, %r3763;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3832, %r13, %r3772;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3835, %r13, %r3773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3838, %r13, %r3782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3841, %r13, %r3783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3844, %r13, %r3792;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3847, %r13, %r3793;
	// end inline asm
	// begin inline asm
	mov.b32 %r3850, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3851, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3852, %r3802, %r3850;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3855, %r3852, %r3851;
	// end inline asm
	// begin inline asm
	mov.b32 %r3858, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3859, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3860, %r3805, %r3858;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3863, %r3860, %r3859;
	// end inline asm
	// begin inline asm
	mov.b32 %r3866, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3867, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3868, %r3808, %r3866;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3871, %r3868, %r3867;
	// end inline asm
	// begin inline asm
	mov.b32 %r3874, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3875, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3876, %r3811, %r3874;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3879, %r3876, %r3875;
	// end inline asm
	// begin inline asm
	mov.b32 %r3882, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3883, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3884, %r3814, %r3882;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3887, %r3884, %r3883;
	// end inline asm
	// begin inline asm
	mov.b32 %r3890, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3891, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3892, %r3817, %r3890;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3895, %r3892, %r3891;
	// end inline asm
	// begin inline asm
	mov.b32 %r3898, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3899, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3900, %r3820, %r3898;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3903, %r3900, %r3899;
	// end inline asm
	// begin inline asm
	mov.b32 %r3906, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3907, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3908, %r3823, %r3906;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3911, %r3908, %r3907;
	// end inline asm
	// begin inline asm
	mov.b32 %r3914, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3915, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3916, %r3826, %r3914;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3919, %r3916, %r3915;
	// end inline asm
	// begin inline asm
	mov.b32 %r3922, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3923, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3924, %r3829, %r3922;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3927, %r3924, %r3923;
	// end inline asm
	// begin inline asm
	mov.b32 %r3930, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3931, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3932, %r3832, %r3930;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3935, %r3932, %r3931;
	// end inline asm
	// begin inline asm
	mov.b32 %r3938, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3939, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3940, %r3835, %r3938;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3943, %r3940, %r3939;
	// end inline asm
	// begin inline asm
	mov.b32 %r3946, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3947, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3948, %r3838, %r3946;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3951, %r3948, %r3947;
	// end inline asm
	// begin inline asm
	mov.b32 %r3954, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3955, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3956, %r3841, %r3954;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3959, %r3956, %r3955;
	// end inline asm
	// begin inline asm
	mov.b32 %r3962, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3963, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3964, %r3844, %r3962;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3967, %r3964, %r3963;
	// end inline asm
	// begin inline asm
	mov.b32 %r3970, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3971, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3972, %r3847, %r3970;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3975, %r3972, %r3971;
	// end inline asm
	// begin inline asm
	mov.b32 %r3981, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3979, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3980, %r3981, %r3979;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3983, %r3855, %r3980;
	// end inline asm
	// begin inline asm
	mov.b32 %r3986, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3987, %r3981, %r3986;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3990, %r3863, %r3987;
	// end inline asm
	// begin inline asm
	mov.b32 %r3993, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3994, %r3981, %r3993;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3997, %r3871, %r3994;
	// end inline asm
	// begin inline asm
	mov.b32 %r4000, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4001, %r3981, %r4000;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4004, %r3879, %r4001;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4007, %r3983, %r3997, %r2214;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4011, %r3990, %r4004, %r2214;
	// end inline asm
	shl.b32 	%r4018, %r4011, 4;
	// begin inline asm
	lop3.b32 %r4015, %r2220, %r4007, %r4018, 202;
	// end inline asm
	xor.b32  	%r7742, %r4015, -2004318072;
	// begin inline asm
	mov.b32 %r4022, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4020, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4021, %r4022, %r4020;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4024, %r3887, %r4021;
	// end inline asm
	// begin inline asm
	mov.b32 %r4027, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4028, %r4022, %r4027;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4031, %r3895, %r4028;
	// end inline asm
	// begin inline asm
	mov.b32 %r4034, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4035, %r4022, %r4034;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4038, %r3903, %r4035;
	// end inline asm
	// begin inline asm
	mov.b32 %r4041, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4042, %r4022, %r4041;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4045, %r3911, %r4042;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4048, %r4024, %r4038, %r2214;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4052, %r4031, %r4045, %r2214;
	// end inline asm
	shl.b32 	%r4059, %r4052, 4;
	// begin inline asm
	lop3.b32 %r4056, %r2220, %r4048, %r4059, 202;
	// end inline asm
	xor.b32  	%r7743, %r4056, -2004318072;
	// begin inline asm
	mov.b32 %r4063, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4061, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4062, %r4063, %r4061;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4065, %r3919, %r4062;
	// end inline asm
	// begin inline asm
	mov.b32 %r4068, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4069, %r4063, %r4068;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4072, %r3927, %r4069;
	// end inline asm
	// begin inline asm
	mov.b32 %r4075, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4076, %r4063, %r4075;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4079, %r3935, %r4076;
	// end inline asm
	// begin inline asm
	mov.b32 %r4082, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4083, %r4063, %r4082;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4086, %r3943, %r4083;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4089, %r4065, %r4079, %r2214;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4093, %r4072, %r4086, %r2214;
	// end inline asm
	shl.b32 	%r4100, %r4093, 4;
	// begin inline asm
	lop3.b32 %r4097, %r2220, %r4089, %r4100, 202;
	// end inline asm
	xor.b32  	%r7744, %r4097, -2004318072;
	// begin inline asm
	mov.b32 %r4104, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4102, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4103, %r4104, %r4102;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4106, %r3951, %r4103;
	// end inline asm
	// begin inline asm
	mov.b32 %r4109, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4110, %r4104, %r4109;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4113, %r3959, %r4110;
	// end inline asm
	// begin inline asm
	mov.b32 %r4116, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4117, %r4104, %r4116;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4120, %r3967, %r4117;
	// end inline asm
	// begin inline asm
	mov.b32 %r4123, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4124, %r4104, %r4123;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4127, %r3975, %r4124;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4130, %r4106, %r4120, %r2214;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4134, %r4113, %r4127, %r2214;
	// end inline asm
	shl.b32 	%r4141, %r4134, 4;
	// begin inline asm
	lop3.b32 %r4138, %r2220, %r4130, %r4141, 202;
	// end inline asm
	xor.b32  	%r7745, %r4138, -2004318072;
	st.shared.u32 	[%rd91], %r7742;
	st.shared.u32 	[%rd92], %r7743;
	st.shared.u32 	[%rd93], %r7744;
	st.shared.u32 	[%rd94], %r7745;
	ld.shared.u32 	%r7812, [%rd87];
	ld.shared.u32 	%r7813, [%rd88];
	ld.shared.u32 	%r7814, [%rd89];
	ld.shared.u32 	%r7815, [%rd90];
	// begin inline asm
	mov.b32 %r4147, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4158, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4146, %r7812, -2004318072;
	// begin inline asm
	lop3.b32 %r4144, %r553, %r4146, %r4147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4148, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4149, %r4147, %r4148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4152, %r4144, %r4149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4155, %r564, %r4146, %r4158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4159, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4160, %r4158, %r4159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4163, %r4155, %r4160;
	// end inline asm
	shr.u32 	%r4168, %r4146, 8;
	// begin inline asm
	lop3.b32 %r4166, %r553, %r4168, %r4147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4170, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4171, %r4147, %r4170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4174, %r4166, %r4171;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4177, %r564, %r4168, %r4158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4181, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4182, %r4158, %r4181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4185, %r4177, %r4182;
	// end inline asm
	// begin inline asm
	mov.b32 %r4193, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4204, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4192, %r7813, -2004318072;
	// begin inline asm
	lop3.b32 %r4190, %r553, %r4192, %r4193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4194, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4195, %r4193, %r4194;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4198, %r4190, %r4195;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4201, %r564, %r4192, %r4204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4205, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4206, %r4204, %r4205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4209, %r4201, %r4206;
	// end inline asm
	shr.u32 	%r4214, %r4192, 8;
	// begin inline asm
	lop3.b32 %r4212, %r553, %r4214, %r4193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4216, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4217, %r4193, %r4216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4220, %r4212, %r4217;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4223, %r564, %r4214, %r4204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4227, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4228, %r4204, %r4227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4231, %r4223, %r4228;
	// end inline asm
	// begin inline asm
	mov.b32 %r4239, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4250, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4238, %r7814, -2004318072;
	// begin inline asm
	lop3.b32 %r4236, %r553, %r4238, %r4239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4240, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4241, %r4239, %r4240;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4244, %r4236, %r4241;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4247, %r564, %r4238, %r4250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4251, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4252, %r4250, %r4251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4255, %r4247, %r4252;
	// end inline asm
	shr.u32 	%r4260, %r4238, 8;
	// begin inline asm
	lop3.b32 %r4258, %r553, %r4260, %r4239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4262, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4263, %r4239, %r4262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4266, %r4258, %r4263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4269, %r564, %r4260, %r4250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4273, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4274, %r4250, %r4273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4277, %r4269, %r4274;
	// end inline asm
	// begin inline asm
	mov.b32 %r4285, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4296, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4284, %r7815, -2004318072;
	// begin inline asm
	lop3.b32 %r4282, %r553, %r4284, %r4285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4286, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4287, %r4285, %r4286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4290, %r4282, %r4287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4293, %r564, %r4284, %r4296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4297, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4298, %r4296, %r4297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4301, %r4293, %r4298;
	// end inline asm
	shr.u32 	%r4306, %r4284, 8;
	// begin inline asm
	lop3.b32 %r4304, %r553, %r4306, %r4285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4308, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4309, %r4285, %r4308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4312, %r4304, %r4309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4315, %r564, %r4306, %r4296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4319, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4320, %r4296, %r4319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4323, %r4315, %r4320;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4326, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4328, %r4326, %r4152;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4331, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4333, %r4331, %r4163;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4336, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4338, %r4336, %r4174;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4341, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4343, %r4341, %r4185;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4346, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4348, %r4346, %r4198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4351, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4353, %r4351, %r4209;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4356, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4358, %r4356, %r4220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4361, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4363, %r4361, %r4231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4366, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4368, %r4366, %r4244;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4371, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4373, %r4371, %r4255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4376, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4378, %r4376, %r4266;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4381, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4383, %r4381, %r4277;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4386, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4388, %r4386, %r4290;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4391, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4393, %r4391, %r4301;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4396, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4398, %r4396, %r4312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4401, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4403, %r4401, %r4323;
	// end inline asm
	// begin inline asm
	mov.b32 %r4411, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4422, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4408, %r553, %r1346, %r4411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4412, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4413, %r4411, %r4412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4416, %r4408, %r4413;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4419, %r564, %r1346, %r4422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4423, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4424, %r4422, %r4423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4427, %r4419, %r4424;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4430, %r553, %r1368, %r4411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4434, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4435, %r4411, %r4434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4438, %r4430, %r4435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4441, %r564, %r1368, %r4422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4445, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4446, %r4422, %r4445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4449, %r4441, %r4446;
	// end inline asm
	// begin inline asm
	mov.b32 %r4457, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4468, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4454, %r553, %r1392, %r4457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4458, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4459, %r4457, %r4458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4462, %r4454, %r4459;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4465, %r564, %r1392, %r4468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4469, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4470, %r4468, %r4469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4473, %r4465, %r4470;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4476, %r553, %r1414, %r4457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4480, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4481, %r4457, %r4480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4484, %r4476, %r4481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4487, %r564, %r1414, %r4468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4491, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4492, %r4468, %r4491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4495, %r4487, %r4492;
	// end inline asm
	// begin inline asm
	mov.b32 %r4503, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4514, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4500, %r553, %r1438, %r4503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4504, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4505, %r4503, %r4504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4508, %r4500, %r4505;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4511, %r564, %r1438, %r4514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4515, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4516, %r4514, %r4515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4519, %r4511, %r4516;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4522, %r553, %r1460, %r4503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4526, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4527, %r4503, %r4526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4530, %r4522, %r4527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4533, %r564, %r1460, %r4514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4537, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4538, %r4514, %r4537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4541, %r4533, %r4538;
	// end inline asm
	// begin inline asm
	mov.b32 %r4549, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4560, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4546, %r553, %r1484, %r4549, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4550, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4551, %r4549, %r4550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4554, %r4546, %r4551;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4557, %r564, %r1484, %r4560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4561, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4562, %r4560, %r4561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4565, %r4557, %r4562;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4568, %r553, %r1506, %r4549, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4572, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4573, %r4549, %r4572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4576, %r4568, %r4573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4579, %r564, %r1506, %r4560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4583, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4584, %r4560, %r4583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4587, %r4579, %r4584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4590, %r201, %r4416, %r4328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4594, %r201, %r4427, %r4333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4598, %r201, %r4438, %r4338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4602, %r201, %r4449, %r4343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4606, %r201, %r4462, %r4348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4610, %r201, %r4473, %r4353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4614, %r201, %r4484, %r4358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4618, %r201, %r4495, %r4363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4622, %r201, %r4508, %r4368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4626, %r201, %r4519, %r4373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4630, %r201, %r4530, %r4378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4634, %r201, %r4541, %r4383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4638, %r201, %r4554, %r4388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4642, %r201, %r4565, %r4393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4646, %r201, %r4576, %r4398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4650, %r201, %r4587, %r4403;
	// end inline asm
	// begin inline asm
	mov.b32 %r4659, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4670, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4656, %r553, %r554, %r4659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4660, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4661, %r4659, %r4660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4664, %r4656, %r4661;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4667, %r564, %r554, %r4670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4671, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4672, %r4670, %r4671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4675, %r4667, %r4672;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4678, %r553, %r576, %r4659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4682, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4683, %r4659, %r4682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4686, %r4678, %r4683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4689, %r564, %r576, %r4670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4693, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4694, %r4670, %r4693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4697, %r4689, %r4694;
	// end inline asm
	// begin inline asm
	mov.b32 %r4705, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4716, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4702, %r553, %r600, %r4705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4706, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4707, %r4705, %r4706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4710, %r4702, %r4707;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4713, %r564, %r600, %r4716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4717, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4718, %r4716, %r4717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4721, %r4713, %r4718;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4724, %r553, %r622, %r4705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4728, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4729, %r4705, %r4728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4732, %r4724, %r4729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4735, %r564, %r622, %r4716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4739, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4740, %r4716, %r4739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4743, %r4735, %r4740;
	// end inline asm
	// begin inline asm
	mov.b32 %r4751, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4762, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4748, %r553, %r646, %r4751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4752, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4753, %r4751, %r4752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4756, %r4748, %r4753;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4759, %r564, %r646, %r4762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4763, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4764, %r4762, %r4763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4767, %r4759, %r4764;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4770, %r553, %r668, %r4751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4774, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4775, %r4751, %r4774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4778, %r4770, %r4775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4781, %r564, %r668, %r4762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4785, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4786, %r4762, %r4785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4789, %r4781, %r4786;
	// end inline asm
	// begin inline asm
	mov.b32 %r4797, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4808, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4794, %r553, %r692, %r4797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4798, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4799, %r4797, %r4798;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4802, %r4794, %r4799;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4805, %r564, %r692, %r4808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4809, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4810, %r4808, %r4809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4813, %r4805, %r4810;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4816, %r553, %r714, %r4797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4820, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4821, %r4797, %r4820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4824, %r4816, %r4821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4827, %r564, %r714, %r4808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4831, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4832, %r4808, %r4831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4835, %r4827, %r4832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4838, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4840, %r4838, %r4664, %r4590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4844, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4846, %r4844, %r4675, %r4594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4850, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4852, %r4850, %r4686, %r4598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4856, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4858, %r4856, %r4697, %r4602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4862, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4864, %r4862, %r4710, %r4606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4868, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4870, %r4868, %r4721, %r4610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4874, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4876, %r4874, %r4732, %r4614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4880, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4882, %r4880, %r4743, %r4618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4886, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4888, %r4886, %r4756, %r4622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4892, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4894, %r4892, %r4767, %r4626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4898, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4900, %r4898, %r4778, %r4630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4904, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4906, %r4904, %r4789, %r4634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4910, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4912, %r4910, %r4802, %r4638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4916, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4918, %r4916, %r4813, %r4642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4922, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4924, %r4922, %r4824, %r4646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4928, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4930, %r4928, %r4835, %r4650;
	// end inline asm
	// begin inline asm
	mov.b32 %r4939, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4950, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4936, %r553, %r2350, %r4939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4940, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4941, %r4939, %r4940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4944, %r4936, %r4941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4947, %r564, %r2350, %r4950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4951, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4952, %r4950, %r4951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4955, %r4947, %r4952;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4958, %r553, %r2372, %r4939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4962, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4963, %r4939, %r4962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4966, %r4958, %r4963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4969, %r564, %r2372, %r4950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4973, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4974, %r4950, %r4973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4977, %r4969, %r4974;
	// end inline asm
	// begin inline asm
	mov.b32 %r4985, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4996, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4982, %r553, %r2396, %r4985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4986, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4987, %r4985, %r4986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4990, %r4982, %r4987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4993, %r564, %r2396, %r4996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4997, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4998, %r4996, %r4997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5001, %r4993, %r4998;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5004, %r553, %r2418, %r4985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5008, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5009, %r4985, %r5008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5012, %r5004, %r5009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5015, %r564, %r2418, %r4996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5019, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5020, %r4996, %r5019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5023, %r5015, %r5020;
	// end inline asm
	// begin inline asm
	mov.b32 %r5031, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5042, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5028, %r553, %r2442, %r5031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5032, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5033, %r5031, %r5032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5036, %r5028, %r5033;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5039, %r564, %r2442, %r5042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5043, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5044, %r5042, %r5043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5047, %r5039, %r5044;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5050, %r553, %r2464, %r5031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5054, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5055, %r5031, %r5054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5058, %r5050, %r5055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5061, %r564, %r2464, %r5042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5065, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5066, %r5042, %r5065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5069, %r5061, %r5066;
	// end inline asm
	// begin inline asm
	mov.b32 %r5077, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5088, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5074, %r553, %r2488, %r5077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5078, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5079, %r5077, %r5078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5082, %r5074, %r5079;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5085, %r564, %r2488, %r5088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5089, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5090, %r5088, %r5089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5093, %r5085, %r5090;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5096, %r553, %r2510, %r5077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5100, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5101, %r5077, %r5100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5104, %r5096, %r5101;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5107, %r564, %r2510, %r5088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5111, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5112, %r5088, %r5111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5115, %r5107, %r5112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5189, %r237, %r4944, %r4840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5186, %r237, %r4955, %r4846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5198, %r237, %r4966, %r4852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5195, %r237, %r4977, %r4858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5207, %r237, %r4990, %r4864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5204, %r237, %r5001, %r4870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5216, %r237, %r5012, %r4876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5213, %r237, %r5023, %r4882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5225, %r237, %r5036, %r4888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5222, %r237, %r5047, %r4894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5234, %r237, %r5058, %r4900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5231, %r237, %r5069, %r4906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5243, %r237, %r5082, %r4912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5240, %r237, %r5093, %r4918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5252, %r237, %r5104, %r4924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5249, %r237, %r5115, %r4930;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5182, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5184, %r5182, %r5186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5187, %r283, %r5189, %r5184;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5191, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5193, %r5191, %r5195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5196, %r283, %r5198, %r5193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5200, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5202, %r5200, %r5204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5205, %r283, %r5207, %r5202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5209, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5211, %r5209, %r5213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5214, %r283, %r5216, %r5211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5218, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5220, %r5218, %r5222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5223, %r283, %r5225, %r5220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5227, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5229, %r5227, %r5231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5232, %r283, %r5234, %r5229;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5236, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5238, %r5236, %r5240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5241, %r283, %r5243, %r5238;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5245, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5247, %r5245, %r5249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5250, %r283, %r5252, %r5247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5254, %r286, %r5189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5257, %r283, %r5186, %r5254;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5261, %r286, %r5198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5264, %r283, %r5195, %r5261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5268, %r286, %r5207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5271, %r283, %r5204, %r5268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5275, %r286, %r5216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5278, %r283, %r5213, %r5275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5282, %r286, %r5225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5285, %r283, %r5222, %r5282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5289, %r286, %r5234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5292, %r283, %r5231, %r5289;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5296, %r286, %r5243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5299, %r283, %r5240, %r5296;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5303, %r286, %r5252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5306, %r283, %r5249, %r5303;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5397, %r5394}, {%r325, %r331, %r328, %r334}, {%r5187, %r5257}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5406, %r5403}, {%r325, %r331, %r328, %r334}, {%r5196, %r5264}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5415, %r5412}, {%r325, %r331, %r328, %r334}, {%r5205, %r5271}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5424, %r5421}, {%r325, %r331, %r328, %r334}, {%r5214, %r5278}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5433, %r5430}, {%r325, %r331, %r328, %r334}, {%r5223, %r5285}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5442, %r5439}, {%r325, %r331, %r328, %r334}, {%r5232, %r5292}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5451, %r5448}, {%r325, %r331, %r328, %r334}, {%r5241, %r5299}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5460, %r5457}, {%r325, %r331, %r328, %r334}, {%r5250, %r5306}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5390, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5392, %r5390, %r5394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5395, %r369, %r5397, %r5392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5399, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5401, %r5399, %r5403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5404, %r369, %r5406, %r5401;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5408, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5410, %r5408, %r5412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5413, %r369, %r5415, %r5410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5417, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5419, %r5417, %r5421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5422, %r369, %r5424, %r5419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5426, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5428, %r5426, %r5430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5431, %r369, %r5433, %r5428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5435, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5437, %r5435, %r5439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5440, %r369, %r5442, %r5437;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5444, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5446, %r5444, %r5448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5449, %r369, %r5451, %r5446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5453, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5455, %r5453, %r5457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5458, %r369, %r5460, %r5455;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5462, %r372, %r5397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5465, %r369, %r5394, %r5462;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5469, %r372, %r5406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5472, %r369, %r5403, %r5469;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5476, %r372, %r5415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5479, %r369, %r5412, %r5476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5483, %r372, %r5424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5486, %r369, %r5421, %r5483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5490, %r372, %r5433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5493, %r369, %r5430, %r5490;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5497, %r372, %r5442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5500, %r369, %r5439, %r5497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5504, %r372, %r5451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5507, %r369, %r5448, %r5504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5511, %r372, %r5460;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5514, %r369, %r5457, %r5511;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5518, %r5519}, {%r412, %r418, %r415, %r421}, {%r5395, %r5465}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5528, %r5529}, {%r412, %r418, %r415, %r421}, {%r5404, %r5472}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5538, %r5539}, {%r412, %r418, %r415, %r421}, {%r5413, %r5479}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5548, %r5549}, {%r412, %r418, %r415, %r421}, {%r5422, %r5486}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5558, %r5559}, {%r412, %r418, %r415, %r421}, {%r5431, %r5493}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5568, %r5569}, {%r412, %r418, %r415, %r421}, {%r5440, %r5500}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5578, %r5579}, {%r412, %r418, %r415, %r421}, {%r5449, %r5507}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5588, %r5589}, {%r412, %r418, %r415, %r421}, {%r5458, %r5514}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5598, %r13, %r5518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5601, %r13, %r5519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5604, %r13, %r5528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5607, %r13, %r5529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5610, %r13, %r5538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5613, %r13, %r5539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5616, %r13, %r5548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5619, %r13, %r5549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5622, %r13, %r5558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5625, %r13, %r5559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5628, %r13, %r5568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5631, %r13, %r5569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5634, %r13, %r5578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5637, %r13, %r5579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5640, %r13, %r5588;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5643, %r13, %r5589;
	// end inline asm
	// begin inline asm
	mov.b32 %r5646, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5647, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5648, %r5598, %r5646;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5651, %r5648, %r5647;
	// end inline asm
	// begin inline asm
	mov.b32 %r5654, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5655, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5656, %r5601, %r5654;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5659, %r5656, %r5655;
	// end inline asm
	// begin inline asm
	mov.b32 %r5662, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5663, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5664, %r5604, %r5662;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5667, %r5664, %r5663;
	// end inline asm
	// begin inline asm
	mov.b32 %r5670, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5671, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5672, %r5607, %r5670;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5675, %r5672, %r5671;
	// end inline asm
	// begin inline asm
	mov.b32 %r5678, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5679, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5680, %r5610, %r5678;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5683, %r5680, %r5679;
	// end inline asm
	// begin inline asm
	mov.b32 %r5686, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5687, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5688, %r5613, %r5686;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5691, %r5688, %r5687;
	// end inline asm
	// begin inline asm
	mov.b32 %r5694, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5695, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5696, %r5616, %r5694;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5699, %r5696, %r5695;
	// end inline asm
	// begin inline asm
	mov.b32 %r5702, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5703, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5704, %r5619, %r5702;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5707, %r5704, %r5703;
	// end inline asm
	// begin inline asm
	mov.b32 %r5710, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5711, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5712, %r5622, %r5710;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5715, %r5712, %r5711;
	// end inline asm
	// begin inline asm
	mov.b32 %r5718, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5719, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5720, %r5625, %r5718;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5723, %r5720, %r5719;
	// end inline asm
	// begin inline asm
	mov.b32 %r5726, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5727, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5728, %r5628, %r5726;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5731, %r5728, %r5727;
	// end inline asm
	// begin inline asm
	mov.b32 %r5734, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5735, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5736, %r5631, %r5734;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5739, %r5736, %r5735;
	// end inline asm
	// begin inline asm
	mov.b32 %r5742, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5743, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5744, %r5634, %r5742;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5747, %r5744, %r5743;
	// end inline asm
	// begin inline asm
	mov.b32 %r5750, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5751, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5752, %r5637, %r5750;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5755, %r5752, %r5751;
	// end inline asm
	// begin inline asm
	mov.b32 %r5758, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5759, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5760, %r5640, %r5758;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5763, %r5760, %r5759;
	// end inline asm
	// begin inline asm
	mov.b32 %r5766, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5767, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5768, %r5643, %r5766;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5771, %r5768, %r5767;
	// end inline asm
	// begin inline asm
	mov.b32 %r5777, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5775, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5776, %r5777, %r5775;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5779, %r5651, %r5776;
	// end inline asm
	// begin inline asm
	mov.b32 %r5782, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5783, %r5777, %r5782;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5786, %r5659, %r5783;
	// end inline asm
	// begin inline asm
	mov.b32 %r5789, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5790, %r5777, %r5789;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5793, %r5667, %r5790;
	// end inline asm
	// begin inline asm
	mov.b32 %r5796, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5797, %r5777, %r5796;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5800, %r5675, %r5797;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5803, %r5779, %r5793, %r2214;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5807, %r5786, %r5800, %r2214;
	// end inline asm
	shl.b32 	%r5814, %r5807, 4;
	// begin inline asm
	lop3.b32 %r5811, %r2220, %r5803, %r5814, 202;
	// end inline asm
	xor.b32  	%r7746, %r5811, -2004318072;
	// begin inline asm
	mov.b32 %r5818, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5816, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5817, %r5818, %r5816;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5820, %r5683, %r5817;
	// end inline asm
	// begin inline asm
	mov.b32 %r5823, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5824, %r5818, %r5823;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5827, %r5691, %r5824;
	// end inline asm
	// begin inline asm
	mov.b32 %r5830, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5831, %r5818, %r5830;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5834, %r5699, %r5831;
	// end inline asm
	// begin inline asm
	mov.b32 %r5837, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5838, %r5818, %r5837;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5841, %r5707, %r5838;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5844, %r5820, %r5834, %r2214;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5848, %r5827, %r5841, %r2214;
	// end inline asm
	shl.b32 	%r5855, %r5848, 4;
	// begin inline asm
	lop3.b32 %r5852, %r2220, %r5844, %r5855, 202;
	// end inline asm
	xor.b32  	%r7747, %r5852, -2004318072;
	// begin inline asm
	mov.b32 %r5859, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5857, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5858, %r5859, %r5857;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5861, %r5715, %r5858;
	// end inline asm
	// begin inline asm
	mov.b32 %r5864, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5865, %r5859, %r5864;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5868, %r5723, %r5865;
	// end inline asm
	// begin inline asm
	mov.b32 %r5871, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5872, %r5859, %r5871;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5875, %r5731, %r5872;
	// end inline asm
	// begin inline asm
	mov.b32 %r5878, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5879, %r5859, %r5878;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5882, %r5739, %r5879;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5885, %r5861, %r5875, %r2214;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5889, %r5868, %r5882, %r2214;
	// end inline asm
	shl.b32 	%r5896, %r5889, 4;
	// begin inline asm
	lop3.b32 %r5893, %r2220, %r5885, %r5896, 202;
	// end inline asm
	xor.b32  	%r7748, %r5893, -2004318072;
	// begin inline asm
	mov.b32 %r5900, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5898, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5899, %r5900, %r5898;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5902, %r5747, %r5899;
	// end inline asm
	// begin inline asm
	mov.b32 %r5905, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5906, %r5900, %r5905;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5909, %r5755, %r5906;
	// end inline asm
	// begin inline asm
	mov.b32 %r5912, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5913, %r5900, %r5912;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5916, %r5763, %r5913;
	// end inline asm
	// begin inline asm
	mov.b32 %r5919, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5920, %r5900, %r5919;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5923, %r5771, %r5920;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5926, %r5902, %r5916, %r2214;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5930, %r5909, %r5923, %r2214;
	// end inline asm
	shl.b32 	%r5937, %r5930, 4;
	// begin inline asm
	lop3.b32 %r5934, %r2220, %r5926, %r5937, 202;
	// end inline asm
	xor.b32  	%r7749, %r5934, -2004318072;
	st.shared.u32 	[%rd91], %r7746;
	st.shared.u32 	[%rd92], %r7747;
	st.shared.u32 	[%rd93], %r7748;
	st.shared.u32 	[%rd94], %r7749;
	ld.shared.u32 	%r7816, [%rd87];
	ld.shared.u32 	%r7817, [%rd88];
	ld.shared.u32 	%r7818, [%rd89];
	ld.shared.u32 	%r7819, [%rd90];
	// begin inline asm
	mov.b32 %r5943, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5954, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5942, %r7816, -2004318072;
	// begin inline asm
	lop3.b32 %r5940, %r553, %r5942, %r5943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5944, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5945, %r5943, %r5944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5948, %r5940, %r5945;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5951, %r564, %r5942, %r5954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5955, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5956, %r5954, %r5955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5959, %r5951, %r5956;
	// end inline asm
	shr.u32 	%r5964, %r5942, 8;
	// begin inline asm
	lop3.b32 %r5962, %r553, %r5964, %r5943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5966, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5967, %r5943, %r5966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5970, %r5962, %r5967;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5973, %r564, %r5964, %r5954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5977, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5978, %r5954, %r5977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5981, %r5973, %r5978;
	// end inline asm
	// begin inline asm
	mov.b32 %r5989, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6000, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5988, %r7817, -2004318072;
	// begin inline asm
	lop3.b32 %r5986, %r553, %r5988, %r5989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5990, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5991, %r5989, %r5990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5994, %r5986, %r5991;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5997, %r564, %r5988, %r6000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6001, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6002, %r6000, %r6001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6005, %r5997, %r6002;
	// end inline asm
	shr.u32 	%r6010, %r5988, 8;
	// begin inline asm
	lop3.b32 %r6008, %r553, %r6010, %r5989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6012, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6013, %r5989, %r6012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6016, %r6008, %r6013;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6019, %r564, %r6010, %r6000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6023, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6024, %r6000, %r6023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6027, %r6019, %r6024;
	// end inline asm
	// begin inline asm
	mov.b32 %r6035, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6046, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6034, %r7818, -2004318072;
	// begin inline asm
	lop3.b32 %r6032, %r553, %r6034, %r6035, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6036, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6037, %r6035, %r6036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6040, %r6032, %r6037;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6043, %r564, %r6034, %r6046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6047, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6048, %r6046, %r6047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6051, %r6043, %r6048;
	// end inline asm
	shr.u32 	%r6056, %r6034, 8;
	// begin inline asm
	lop3.b32 %r6054, %r553, %r6056, %r6035, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6058, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6059, %r6035, %r6058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6062, %r6054, %r6059;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6065, %r564, %r6056, %r6046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6069, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6070, %r6046, %r6069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6073, %r6065, %r6070;
	// end inline asm
	// begin inline asm
	mov.b32 %r6081, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6092, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6080, %r7819, -2004318072;
	// begin inline asm
	lop3.b32 %r6078, %r553, %r6080, %r6081, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6082, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6083, %r6081, %r6082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6086, %r6078, %r6083;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6089, %r564, %r6080, %r6092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6093, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6094, %r6092, %r6093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6097, %r6089, %r6094;
	// end inline asm
	shr.u32 	%r6102, %r6080, 8;
	// begin inline asm
	lop3.b32 %r6100, %r553, %r6102, %r6081, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6104, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6105, %r6081, %r6104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6108, %r6100, %r6105;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6111, %r564, %r6102, %r6092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6115, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6116, %r6092, %r6115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6119, %r6111, %r6116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6122, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6124, %r6122, %r5948;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6127, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6129, %r6127, %r5959;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6132, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6134, %r6132, %r5970;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6137, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6139, %r6137, %r5981;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6142, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6144, %r6142, %r5994;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6147, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6149, %r6147, %r6005;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6152, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6154, %r6152, %r6016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6157, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6159, %r6157, %r6027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6162, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6164, %r6162, %r6040;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6167, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6169, %r6167, %r6051;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6172, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6174, %r6172, %r6062;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6177, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6179, %r6177, %r6073;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6182, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6184, %r6182, %r6086;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6187, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6189, %r6187, %r6097;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6192, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6194, %r6192, %r6108;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6197, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6199, %r6197, %r6119;
	// end inline asm
	// begin inline asm
	mov.b32 %r6207, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6218, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6204, %r553, %r554, %r6207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6208, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6209, %r6207, %r6208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6212, %r6204, %r6209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6215, %r564, %r554, %r6218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6219, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6220, %r6218, %r6219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6223, %r6215, %r6220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6226, %r553, %r576, %r6207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6230, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6231, %r6207, %r6230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6234, %r6226, %r6231;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6237, %r564, %r576, %r6218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6241, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6242, %r6218, %r6241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6245, %r6237, %r6242;
	// end inline asm
	// begin inline asm
	mov.b32 %r6253, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6264, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6250, %r553, %r600, %r6253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6254, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6255, %r6253, %r6254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6258, %r6250, %r6255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6261, %r564, %r600, %r6264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6265, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6266, %r6264, %r6265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6269, %r6261, %r6266;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6272, %r553, %r622, %r6253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6276, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6277, %r6253, %r6276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6280, %r6272, %r6277;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6283, %r564, %r622, %r6264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6287, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6288, %r6264, %r6287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6291, %r6283, %r6288;
	// end inline asm
	// begin inline asm
	mov.b32 %r6299, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6310, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6296, %r553, %r646, %r6299, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6300, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6301, %r6299, %r6300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6304, %r6296, %r6301;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6307, %r564, %r646, %r6310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6311, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6312, %r6310, %r6311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6315, %r6307, %r6312;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6318, %r553, %r668, %r6299, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6322, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6323, %r6299, %r6322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6326, %r6318, %r6323;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6329, %r564, %r668, %r6310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6333, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6334, %r6310, %r6333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6337, %r6329, %r6334;
	// end inline asm
	// begin inline asm
	mov.b32 %r6345, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6356, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6342, %r553, %r692, %r6345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6346, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6347, %r6345, %r6346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6350, %r6342, %r6347;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6353, %r564, %r692, %r6356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6357, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6358, %r6356, %r6357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6361, %r6353, %r6358;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6364, %r553, %r714, %r6345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6368, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6369, %r6345, %r6368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6372, %r6364, %r6369;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6375, %r564, %r714, %r6356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6379, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6380, %r6356, %r6379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6383, %r6375, %r6380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6386, %r201, %r6212, %r6124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6390, %r201, %r6223, %r6129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6394, %r201, %r6234, %r6134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6398, %r201, %r6245, %r6139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6402, %r201, %r6258, %r6144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6406, %r201, %r6269, %r6149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6410, %r201, %r6280, %r6154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6414, %r201, %r6291, %r6159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6418, %r201, %r6304, %r6164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6422, %r201, %r6315, %r6169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6426, %r201, %r6326, %r6174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6430, %r201, %r6337, %r6179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6434, %r201, %r6350, %r6184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6438, %r201, %r6361, %r6189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6442, %r201, %r6372, %r6194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6446, %r201, %r6383, %r6199;
	// end inline asm
	// begin inline asm
	mov.b32 %r6455, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6466, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6452, %r553, %r2350, %r6455, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6456, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6457, %r6455, %r6456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6460, %r6452, %r6457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6463, %r564, %r2350, %r6466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6467, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6468, %r6466, %r6467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6471, %r6463, %r6468;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6474, %r553, %r2372, %r6455, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6478, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6479, %r6455, %r6478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6482, %r6474, %r6479;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6485, %r564, %r2372, %r6466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6489, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6490, %r6466, %r6489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6493, %r6485, %r6490;
	// end inline asm
	// begin inline asm
	mov.b32 %r6501, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6512, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6498, %r553, %r2396, %r6501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6502, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6503, %r6501, %r6502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6506, %r6498, %r6503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6509, %r564, %r2396, %r6512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6513, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6514, %r6512, %r6513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6517, %r6509, %r6514;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6520, %r553, %r2418, %r6501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6524, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6525, %r6501, %r6524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6528, %r6520, %r6525;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6531, %r564, %r2418, %r6512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6535, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6536, %r6512, %r6535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6539, %r6531, %r6536;
	// end inline asm
	// begin inline asm
	mov.b32 %r6547, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6558, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6544, %r553, %r2442, %r6547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6548, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6549, %r6547, %r6548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6552, %r6544, %r6549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6555, %r564, %r2442, %r6558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6559, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6560, %r6558, %r6559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6563, %r6555, %r6560;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6566, %r553, %r2464, %r6547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6570, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6571, %r6547, %r6570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6574, %r6566, %r6571;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6577, %r564, %r2464, %r6558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6581, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6582, %r6558, %r6581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6585, %r6577, %r6582;
	// end inline asm
	// begin inline asm
	mov.b32 %r6593, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6604, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6590, %r553, %r2488, %r6593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6594, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6595, %r6593, %r6594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6598, %r6590, %r6595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6601, %r564, %r2488, %r6604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6605, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6606, %r6604, %r6605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6609, %r6601, %r6606;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6612, %r553, %r2510, %r6593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6616, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6617, %r6593, %r6616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6620, %r6612, %r6617;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6623, %r564, %r2510, %r6604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6627, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6628, %r6604, %r6627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6631, %r6623, %r6628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6634, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6636, %r6634, %r6460, %r6386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6640, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6642, %r6640, %r6471, %r6390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6646, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6648, %r6646, %r6482, %r6394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6652, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6654, %r6652, %r6493, %r6398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6658, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6660, %r6658, %r6506, %r6402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6664, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6666, %r6664, %r6517, %r6406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6670, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6672, %r6670, %r6528, %r6410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6676, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6678, %r6676, %r6539, %r6414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6682, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6684, %r6682, %r6552, %r6418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6688, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6690, %r6688, %r6563, %r6422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6694, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6696, %r6694, %r6574, %r6426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6700, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6702, %r6700, %r6585, %r6430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6706, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6708, %r6706, %r6598, %r6434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6712, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6714, %r6712, %r6609, %r6438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6718, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6720, %r6718, %r6620, %r6442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6724, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6726, %r6724, %r6631, %r6446;
	// end inline asm
	// begin inline asm
	mov.b32 %r6735, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6746, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6732, %r553, %r4146, %r6735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6736, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6737, %r6735, %r6736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6740, %r6732, %r6737;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6743, %r564, %r4146, %r6746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6747, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6748, %r6746, %r6747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6751, %r6743, %r6748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6754, %r553, %r4168, %r6735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6758, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6759, %r6735, %r6758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6762, %r6754, %r6759;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6765, %r564, %r4168, %r6746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6769, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6770, %r6746, %r6769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6773, %r6765, %r6770;
	// end inline asm
	// begin inline asm
	mov.b32 %r6781, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6792, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6778, %r553, %r4192, %r6781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6782, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6783, %r6781, %r6782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6786, %r6778, %r6783;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6789, %r564, %r4192, %r6792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6793, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6794, %r6792, %r6793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6797, %r6789, %r6794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6800, %r553, %r4214, %r6781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6804, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6805, %r6781, %r6804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6808, %r6800, %r6805;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6811, %r564, %r4214, %r6792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6815, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6816, %r6792, %r6815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6819, %r6811, %r6816;
	// end inline asm
	// begin inline asm
	mov.b32 %r6827, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6838, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6824, %r553, %r4238, %r6827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6828, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6829, %r6827, %r6828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6832, %r6824, %r6829;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6835, %r564, %r4238, %r6838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6839, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6840, %r6838, %r6839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6843, %r6835, %r6840;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6846, %r553, %r4260, %r6827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6850, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6851, %r6827, %r6850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6854, %r6846, %r6851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6857, %r564, %r4260, %r6838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6861, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6862, %r6838, %r6861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6865, %r6857, %r6862;
	// end inline asm
	// begin inline asm
	mov.b32 %r6873, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6884, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6870, %r553, %r4284, %r6873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6874, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6875, %r6873, %r6874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6878, %r6870, %r6875;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6881, %r564, %r4284, %r6884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6885, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6886, %r6884, %r6885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6889, %r6881, %r6886;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6892, %r553, %r4306, %r6873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6896, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6897, %r6873, %r6896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6900, %r6892, %r6897;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6903, %r564, %r4306, %r6884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6907, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6908, %r6884, %r6907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6911, %r6903, %r6908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6985, %r237, %r6740, %r6636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6982, %r237, %r6751, %r6642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6994, %r237, %r6762, %r6648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6991, %r237, %r6773, %r6654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7003, %r237, %r6786, %r6660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7000, %r237, %r6797, %r6666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7012, %r237, %r6808, %r6672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7009, %r237, %r6819, %r6678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7021, %r237, %r6832, %r6684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7018, %r237, %r6843, %r6690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7030, %r237, %r6854, %r6696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7027, %r237, %r6865, %r6702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7039, %r237, %r6878, %r6708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7036, %r237, %r6889, %r6714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7048, %r237, %r6900, %r6720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7045, %r237, %r6911, %r6726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6978, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6980, %r6978, %r6982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6983, %r283, %r6985, %r6980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6987, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6989, %r6987, %r6991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6992, %r283, %r6994, %r6989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6996, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6998, %r6996, %r7000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7001, %r283, %r7003, %r6998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7005, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7007, %r7005, %r7009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7010, %r283, %r7012, %r7007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7014, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7016, %r7014, %r7018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7019, %r283, %r7021, %r7016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7023, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7025, %r7023, %r7027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7028, %r283, %r7030, %r7025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7032, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7034, %r7032, %r7036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7037, %r283, %r7039, %r7034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7041, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7043, %r7041, %r7045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7046, %r283, %r7048, %r7043;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7050, %r286, %r6985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7053, %r283, %r6982, %r7050;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7057, %r286, %r6994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7060, %r283, %r6991, %r7057;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7064, %r286, %r7003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7067, %r283, %r7000, %r7064;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7071, %r286, %r7012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7074, %r283, %r7009, %r7071;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7078, %r286, %r7021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7081, %r283, %r7018, %r7078;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7085, %r286, %r7030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7088, %r283, %r7027, %r7085;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7092, %r286, %r7039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7095, %r283, %r7036, %r7092;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7099, %r286, %r7048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7102, %r283, %r7045, %r7099;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7193, %r7190}, {%r325, %r331, %r328, %r334}, {%r6983, %r7053}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7202, %r7199}, {%r325, %r331, %r328, %r334}, {%r6992, %r7060}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7211, %r7208}, {%r325, %r331, %r328, %r334}, {%r7001, %r7067}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7220, %r7217}, {%r325, %r331, %r328, %r334}, {%r7010, %r7074}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7229, %r7226}, {%r325, %r331, %r328, %r334}, {%r7019, %r7081}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7238, %r7235}, {%r325, %r331, %r328, %r334}, {%r7028, %r7088}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7247, %r7244}, {%r325, %r331, %r328, %r334}, {%r7037, %r7095}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7256, %r7253}, {%r325, %r331, %r328, %r334}, {%r7046, %r7102}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7186, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7188, %r7186, %r7190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7191, %r369, %r7193, %r7188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7195, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7197, %r7195, %r7199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7200, %r369, %r7202, %r7197;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7204, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7206, %r7204, %r7208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7209, %r369, %r7211, %r7206;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7213, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7215, %r7213, %r7217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7218, %r369, %r7220, %r7215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7222, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7224, %r7222, %r7226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7227, %r369, %r7229, %r7224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7231, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7233, %r7231, %r7235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7236, %r369, %r7238, %r7233;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7240, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7242, %r7240, %r7244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7245, %r369, %r7247, %r7242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7249, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7251, %r7249, %r7253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7254, %r369, %r7256, %r7251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7258, %r372, %r7193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7261, %r369, %r7190, %r7258;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7265, %r372, %r7202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7268, %r369, %r7199, %r7265;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7272, %r372, %r7211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7275, %r369, %r7208, %r7272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7279, %r372, %r7220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7282, %r369, %r7217, %r7279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7286, %r372, %r7229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7289, %r369, %r7226, %r7286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7293, %r372, %r7238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7296, %r369, %r7235, %r7293;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7300, %r372, %r7247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7303, %r369, %r7244, %r7300;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7307, %r372, %r7256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7310, %r369, %r7253, %r7307;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7314, %r7315}, {%r412, %r418, %r415, %r421}, {%r7191, %r7261}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7324, %r7325}, {%r412, %r418, %r415, %r421}, {%r7200, %r7268}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7334, %r7335}, {%r412, %r418, %r415, %r421}, {%r7209, %r7275}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7344, %r7345}, {%r412, %r418, %r415, %r421}, {%r7218, %r7282}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7354, %r7355}, {%r412, %r418, %r415, %r421}, {%r7227, %r7289}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7364, %r7365}, {%r412, %r418, %r415, %r421}, {%r7236, %r7296}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7374, %r7375}, {%r412, %r418, %r415, %r421}, {%r7245, %r7303}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7384, %r7385}, {%r412, %r418, %r415, %r421}, {%r7254, %r7310}, {%r1726, %r1726};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7394, %r13, %r7314;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7397, %r13, %r7315;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7400, %r13, %r7324;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7403, %r13, %r7325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7406, %r13, %r7334;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7409, %r13, %r7335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7412, %r13, %r7344;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7415, %r13, %r7345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7418, %r13, %r7354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7421, %r13, %r7355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7424, %r13, %r7364;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7427, %r13, %r7365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7430, %r13, %r7374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7433, %r13, %r7375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7436, %r13, %r7384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7439, %r13, %r7385;
	// end inline asm
	// begin inline asm
	mov.b32 %r7442, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7443, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7444, %r7394, %r7442;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7447, %r7444, %r7443;
	// end inline asm
	// begin inline asm
	mov.b32 %r7450, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7451, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7452, %r7397, %r7450;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7455, %r7452, %r7451;
	// end inline asm
	// begin inline asm
	mov.b32 %r7458, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7459, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7460, %r7400, %r7458;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7463, %r7460, %r7459;
	// end inline asm
	// begin inline asm
	mov.b32 %r7466, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7467, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7468, %r7403, %r7466;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7471, %r7468, %r7467;
	// end inline asm
	// begin inline asm
	mov.b32 %r7474, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7475, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7476, %r7406, %r7474;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7479, %r7476, %r7475;
	// end inline asm
	// begin inline asm
	mov.b32 %r7482, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7483, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7484, %r7409, %r7482;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7487, %r7484, %r7483;
	// end inline asm
	// begin inline asm
	mov.b32 %r7490, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7491, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7492, %r7412, %r7490;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7495, %r7492, %r7491;
	// end inline asm
	// begin inline asm
	mov.b32 %r7498, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7499, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7500, %r7415, %r7498;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7503, %r7500, %r7499;
	// end inline asm
	// begin inline asm
	mov.b32 %r7506, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7507, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7508, %r7418, %r7506;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7511, %r7508, %r7507;
	// end inline asm
	// begin inline asm
	mov.b32 %r7514, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7515, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7516, %r7421, %r7514;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7519, %r7516, %r7515;
	// end inline asm
	// begin inline asm
	mov.b32 %r7522, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7523, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7524, %r7424, %r7522;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7527, %r7524, %r7523;
	// end inline asm
	// begin inline asm
	mov.b32 %r7530, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7531, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7532, %r7427, %r7530;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7535, %r7532, %r7531;
	// end inline asm
	// begin inline asm
	mov.b32 %r7538, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7539, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7540, %r7430, %r7538;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7543, %r7540, %r7539;
	// end inline asm
	// begin inline asm
	mov.b32 %r7546, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7547, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7548, %r7433, %r7546;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7551, %r7548, %r7547;
	// end inline asm
	// begin inline asm
	mov.b32 %r7554, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7555, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7556, %r7436, %r7554;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7559, %r7556, %r7555;
	// end inline asm
	// begin inline asm
	mov.b32 %r7562, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7563, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7564, %r7439, %r7562;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7567, %r7564, %r7563;
	// end inline asm
	// begin inline asm
	mov.b32 %r7573, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7571, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7572, %r7573, %r7571;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7575, %r7447, %r7572;
	// end inline asm
	// begin inline asm
	mov.b32 %r7578, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7579, %r7573, %r7578;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7582, %r7455, %r7579;
	// end inline asm
	// begin inline asm
	mov.b32 %r7585, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7586, %r7573, %r7585;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7589, %r7463, %r7586;
	// end inline asm
	// begin inline asm
	mov.b32 %r7592, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7593, %r7573, %r7592;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7596, %r7471, %r7593;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7599, %r7575, %r7589, %r2214;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7603, %r7582, %r7596, %r2214;
	// end inline asm
	shl.b32 	%r7610, %r7603, 4;
	// begin inline asm
	lop3.b32 %r7607, %r2220, %r7599, %r7610, 202;
	// end inline asm
	xor.b32  	%r7750, %r7607, -2004318072;
	// begin inline asm
	mov.b32 %r7614, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7612, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7613, %r7614, %r7612;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7616, %r7479, %r7613;
	// end inline asm
	// begin inline asm
	mov.b32 %r7619, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7620, %r7614, %r7619;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7623, %r7487, %r7620;
	// end inline asm
	// begin inline asm
	mov.b32 %r7626, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7627, %r7614, %r7626;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7630, %r7495, %r7627;
	// end inline asm
	// begin inline asm
	mov.b32 %r7633, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7634, %r7614, %r7633;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7637, %r7503, %r7634;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7640, %r7616, %r7630, %r2214;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7644, %r7623, %r7637, %r2214;
	// end inline asm
	shl.b32 	%r7651, %r7644, 4;
	// begin inline asm
	lop3.b32 %r7648, %r2220, %r7640, %r7651, 202;
	// end inline asm
	xor.b32  	%r7751, %r7648, -2004318072;
	// begin inline asm
	mov.b32 %r7655, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7653, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7654, %r7655, %r7653;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7657, %r7511, %r7654;
	// end inline asm
	// begin inline asm
	mov.b32 %r7660, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7661, %r7655, %r7660;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7664, %r7519, %r7661;
	// end inline asm
	// begin inline asm
	mov.b32 %r7667, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7668, %r7655, %r7667;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7671, %r7527, %r7668;
	// end inline asm
	// begin inline asm
	mov.b32 %r7674, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7675, %r7655, %r7674;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7678, %r7535, %r7675;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7681, %r7657, %r7671, %r2214;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7685, %r7664, %r7678, %r2214;
	// end inline asm
	shl.b32 	%r7692, %r7685, 4;
	// begin inline asm
	lop3.b32 %r7689, %r2220, %r7681, %r7692, 202;
	// end inline asm
	xor.b32  	%r7752, %r7689, -2004318072;
	// begin inline asm
	mov.b32 %r7696, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7694, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7695, %r7696, %r7694;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7698, %r7543, %r7695;
	// end inline asm
	// begin inline asm
	mov.b32 %r7701, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7702, %r7696, %r7701;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7705, %r7551, %r7702;
	// end inline asm
	// begin inline asm
	mov.b32 %r7708, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7709, %r7696, %r7708;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7712, %r7559, %r7709;
	// end inline asm
	// begin inline asm
	mov.b32 %r7715, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7716, %r7696, %r7715;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7719, %r7567, %r7716;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7722, %r7698, %r7712, %r2214;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7726, %r7705, %r7719, %r2214;
	// end inline asm
	shl.b32 	%r7733, %r7726, 4;
	// begin inline asm
	lop3.b32 %r7730, %r2220, %r7722, %r7733, 202;
	// end inline asm
	xor.b32  	%r7753, %r7730, -2004318072;
	st.shared.u32 	[%rd91], %r7750;
	st.shared.u32 	[%rd92], %r7751;
	st.shared.u32 	[%rd93], %r7752;
	st.shared.u32 	[%rd94], %r7753;
	add.s32 	%r7807, %r7807, -64;
	add.s64 	%rd109, %rd109, 8324;
	setp.eq.s32 	%p229, %r7807, 0;
	@%p229 bra 	LBB0_119;
	bra.uni 	LBB0_118;
LBB0_119:                               // %guard_pass10531
                                        //   in Loop: Header=BB0_117 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7759, [%rd9];
	ld.shared.u32 	%r7760, [%rd10+128];
	ld.shared.u32 	%r7767, [%rd10+4];
	ld.shared.u32 	%r7768, [%rd10+132];
	// begin inline asm
	prmt.b32 %r7754, %r7759, %r7760, %r524;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7758, %r7759, %r7760, %r528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7762, %r7767, %r7768, %r524;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7766, %r7767, %r7768, %r528;
	// end inline asm
	selp.b32 	%r7770, %r7758, %r7754, %p225;
	shfl.sync.bfly.b32	%r160, %r7770, 8, 31, -1;
	selp.b32 	%r7771, %r7766, %r7762, %p225;
	shfl.sync.bfly.b32	%r161, %r7771, 8, 31, -1;
	setp.eq.s32 	%p231, %r7794, 0;
	@%p231 bra 	LBB0_121;
// %bb.120:                             // %L29303
                                        //   in Loop: Header=BB0_117 Depth=1
	selp.b32 	%r7772, %r161, %r7766, %p225;
	selp.b32 	%r7773, %r7762, %r161, %p225;
	selp.b32 	%r7774, %r160, %r7758, %p225;
	selp.b32 	%r7775, %r7754, %r160, %p225;
	shl.b32 	%r7776, %r7794, 12;
	or.b32  	%r7777, %r97, %r7776;
	cvt.u64.u32 	%rd95, %r7777;
	add.s64 	%rd96, %rd95, %rd11;
	shr.u64 	%rd97, %rd96, 35;
	add.s64 	%rd98, %rd96, %rd97;
	shr.s64 	%rd99, %rd98, 29;
	setp.lt.s64 	%p233, %rd96, 0;
	and.b64  	%rd100, %rd98, -536870912;
	setp.ne.s64 	%p234, %rd100, %rd96;
	and.pred  	%p235, %p233, %p234;
	selp.u64 	%rd101, 1, 0, %p235;
	sub.s64 	%rd102, %rd101, %rd99;
	shl.b64 	%rd103, %rd102, 29;
	add.s64 	%rd104, %rd103, %rd96;
	shl.b64 	%rd105, %rd104, 2;
	add.s64 	%rd106, %rd3, %rd105;
	st.global.v4.u32 	[%rd106], {%r7775, %r7773, %r7774, %r7772};
	bra.uni 	LBB0_121;
LBB0_122:                               // %L29533
	st.global.u32 	[%rd4], %r7781;
	ret;
LBB0_7:                                 // %L262
	mov.u32 	%r7780, 2;
	st.global.u32 	[%rd4], %r7780;
	mov.u64 	%rd107, exception2329;
	cvta.global.u64 	%rd108, %rd107;
	{ // callseq 16, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd108;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 16
	{ // callseq 17, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r162;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 17
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L8
	mov.u64 	%rd43, exception1;
	cvta.global.u64 	%rd44, %rd43;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd44;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r162;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_124:                               // %L29633
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9592, 
	(
	);
	} // callseq 3
	mov.u64 	%rd52, exception1;
	cvta.global.u64 	%rd53, %rd52;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd53;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r162;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_123:                               // %L29630
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9592, 
	(
	);
	} // callseq 7
	mov.u64 	%rd58, exception1;
	cvta.global.u64 	%rd59, %rd58;
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd59;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 8
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r162;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 9
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_149:                               // %L29627
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9592, 
	(
	);
	} // callseq 13
	mov.u64 	%rd72, exception1;
	cvta.global.u64 	%rd73, %rd72;
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd73;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 14
	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r162;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 15
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
