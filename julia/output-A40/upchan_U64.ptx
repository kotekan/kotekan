// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func julia_AssertionError_9510
()
.noreturn
{
	trap;
}
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_9521
(
	.param .align 8 .b8 julia_power_by_squaring_9521_param_0[16],
	.param .b64 julia_power_by_squaring_9521_param_1,
	.param .b64 julia_power_by_squaring_9521_param_2
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2324[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<224>;
	.reg .b16 	%rs<1185>;
	.reg .b32 	%r<7806>;
	.reg .f32 	%f<930>;
	.reg .b64 	%rd<87>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r162, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd21, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r163, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r163, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd26, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd22, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r164, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r165, %r164, %r4;
	or.b32  	%r166, %r165, %r2;
	mul.wide.u32 	%rd32, %r166, 4;
	add.s64 	%rd4, %rd26, %rd32;
	mov.u32 	%r167, 1;
	st.global.u32 	[%rd4], %r167;
	ld.global.u32 	%r5, [%rd22];
	setp.lt.u32 	%p2, %r5, 65537;
	and.b32  	%r168, %r5, 255;
	setp.eq.s32 	%p3, %r168, 0;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %L242
	bfe.u32 	%r14, %r4, 1, 1;
	and.b32  	%r15, %r4, 1;
	bfe.u32 	%r17, %r4, 2, 1;
	shr.u32 	%r18, %r4, 4;
	shl.b32 	%r175, %r18, 1;
	shl.b32 	%r176, %r17, 2;
	shl.b32 	%r177, %r15, 3;
	shl.b32 	%r178, %r14, 4;
	or.b32  	%r179, %r177, %r178;
	or.b32  	%r180, %r176, %r179;
	or.b32  	%r181, %r175, %r180;
	bfe.u32 	%r20, %r4, 3, 1;
	or.b32  	%r21, %r20, %r181;
	or.b32  	%r22, %r21, 32;
	mov.f32 	%f185, 0f40000000;
	mov.f32 	%f186, 0f437F0000;
	div.approx.f32 	%f1, %f186, %f185;
	cvt.rn.f32.s32 	%f187, %r21;
	sub.f32 	%f188, %f187, %f1;
	mov.f32 	%f217, 0f42800000;
	div.approx.f32 	%f3, %f188, %f217;
	setp.eq.f32 	%p10, %f3, 0f00000000;
	mov.f32 	%f897, 0f3F800000;
	mov.f32 	%f890, %f897;
	@%p10 bra 	LBB0_6;
// %bb.5:                               // %L452
	sin.approx.f32 	%f218, %f3;
	div.approx.f32 	%f890, %f218, %f3;
LBB0_6:                                 // %L455
	cvt.rn.f32.s32 	%f221, %r22;
	sub.f32 	%f222, %f221, %f1;
	div.approx.f32 	%f8, %f222, %f217;
	setp.eq.f32 	%p16, %f8, 0f00000000;
	mov.f32 	%f891, %f897;
	@%p16 bra 	LBB0_8;
// %bb.7:                               // %L472
	sin.approx.f32 	%f252, %f8;
	div.approx.f32 	%f891, %f252, %f8;
LBB0_8:                                 // %L475
	or.b32  	%r199, %r21, 64;
	or.b32  	%r24, %r21, 96;
	cvt.rn.f32.s32 	%f256, %r199;
	sub.f32 	%f257, %f256, %f1;
	div.approx.f32 	%f12, %f257, %f217;
	setp.eq.f32 	%p22, %f12, 0f00000000;
	mov.f32 	%f892, %f897;
	@%p22 bra 	LBB0_10;
// %bb.9:                               // %L553
	sin.approx.f32 	%f287, %f12;
	div.approx.f32 	%f892, %f287, %f12;
LBB0_10:                                // %L556
	cvt.rn.f32.s32 	%f290, %r24;
	sub.f32 	%f291, %f290, %f1;
	div.approx.f32 	%f17, %f291, %f217;
	setp.eq.f32 	%p28, %f17, 0f00000000;
	mov.f32 	%f893, %f897;
	@%p28 bra 	LBB0_12;
// %bb.11:                              // %L573
	sin.approx.f32 	%f321, %f17;
	div.approx.f32 	%f893, %f321, %f17;
LBB0_12:                                // %L576
	shl.b32 	%r170, %r4, 1;
	or.b32  	%r217, %r21, 128;
	or.b32  	%r26, %r21, 160;
	cvt.rn.f32.s32 	%f325, %r217;
	sub.f32 	%f326, %f325, %f1;
	div.approx.f32 	%f21, %f326, %f217;
	setp.eq.f32 	%p34, %f21, 0f00000000;
	mov.f32 	%f894, %f897;
	@%p34 bra 	LBB0_14;
// %bb.13:                              // %L654
	sin.approx.f32 	%f356, %f21;
	div.approx.f32 	%f894, %f356, %f21;
LBB0_14:                                // %L657
	and.b32  	%r6, %r170, 8;
	shl.b32 	%r7, %r4, 2;
	and.b32  	%r11, %r4, 18;
	cvt.rn.f32.s32 	%f359, %r26;
	sub.f32 	%f360, %f359, %f1;
	div.approx.f32 	%f26, %f360, %f217;
	setp.eq.f32 	%p40, %f26, 0f00000000;
	mov.f32 	%f895, %f897;
	@%p40 bra 	LBB0_16;
// %bb.15:                              // %L674
	sin.approx.f32 	%f390, %f26;
	div.approx.f32 	%f895, %f390, %f26;
LBB0_16:                                // %L677
	and.b32  	%r8, %r7, 4;
	or.b32  	%r171, %r11, %r6;
	or.b32  	%r235, %r21, 192;
	or.b32  	%r28, %r21, 224;
	cvt.rn.f32.s32 	%f394, %r235;
	sub.f32 	%f395, %f394, %f1;
	div.approx.f32 	%f30, %f395, %f217;
	setp.eq.f32 	%p46, %f30, 0f00000000;
	mov.f32 	%f896, %f897;
	@%p46 bra 	LBB0_18;
// %bb.17:                              // %L755
	sin.approx.f32 	%f425, %f30;
	div.approx.f32 	%f896, %f425, %f30;
LBB0_18:                                // %L758
	and.b32  	%r9, %r7, 32;
	or.b32  	%r172, %r171, %r8;
	cvt.rn.f32.s32 	%f428, %r28;
	sub.f32 	%f429, %f428, %f1;
	div.approx.f32 	%f35, %f429, %f217;
	setp.eq.f32 	%p52, %f35, 0f00000000;
	@%p52 bra 	LBB0_20;
// %bb.19:                              // %L775
	sin.approx.f32 	%f459, %f35;
	div.approx.f32 	%f897, %f459, %f35;
LBB0_20:                                // %L778
	or.b32  	%r173, %r172, %r9;
	mul.lo.s32 	%r30, %r21, 63;
	cvt.rn.f32.s32 	%f462, %r30;
	div.approx.f32 	%f38, %f462, %f217;
	abs.f32 	%f900, %f38;
	setp.lt.f32 	%p53, %f900, 0f40000000;
	@%p53 bra 	LBB0_32;
// %bb.21:
	setp.gtu.f32 	%p54, %f900, 0f4B800000;
	@%p54 bra 	LBB0_28;
	bra.uni 	LBB0_22;
LBB0_28:
	mov.b32 	%r32, %f900;
	and.b32  	%r253, %r32, 8388607;
	or.b32  	%r7764, %r253, 1065353216;
	mov.b32 	%f899, %r7764;
	add.s32 	%r254, %r32, -1073741824;
	and.b32  	%r7765, %r254, -8388608;
	setp.eq.s32 	%p60, %r7765, 0;
	@%p60 bra 	LBB0_31;
// %bb.29:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f473, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f472,%f473;
	// end inline asm
LBB0_30:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r255, %r7765, 192937984;
	add.s32 	%r256, %r255, %r7764;
	mov.b32 	%f474, %r256;
	mul.f32 	%f475, %f472, %f474;
	sub.f32 	%f476, %f474, %f475;
	fma.rn.f32 	%f477, %f476, %f472, %f475;
	sub.f32 	%f478, %f474, %f477;
	fma.rz.f32 	%f479, %f478, %f472, %f477;
	cvt.rzi.f32.f32 	%f480, %f479;
	sub.f32 	%f899, %f474, %f480;
	sub.s32 	%r7765, %r7765, %r255;
	mov.b32 	%r7764, %f899;
	setp.ne.s32 	%p61, %r7765, 0;
	setp.ne.s32 	%p62, %r7764, 0;
	and.pred  	%p63, %p61, %p62;
	@%p63 bra 	LBB0_30;
LBB0_31:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p64, %r32, 2139095039;
	selp.f32 	%f481, 0f7FFFFFFF, 0f4B800000, %p64;
	mul.f32 	%f482, %f899, 0f34000000;
	mul.f32 	%f900, %f481, %f482;
	bra.uni 	LBB0_32;
LBB0_22:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f465, %f900, %f185;
	cvt.rzi.f32.f32 	%f898, %f465;
	fma.rn.f32 	%f41, %f898, 0fC0000000, %f900;
	mov.b32 	%r31, %f41;
	setp.lt.u32 	%p55, %r31, 1073741824;
	@%p55 bra 	LBB0_27;
// %bb.23:
	setp.lt.u32 	%p56, %r31, -2147483647;
	@%p56 bra 	LBB0_25;
// %bb.24:
	add.f32 	%f470, %f898, 0fBF800000;
	setp.lt.f32 	%p59, %f41, 0fC0000000;
	add.f32 	%f471, %f470, 0fBF800000;
	selp.f32 	%f898, %f471, %f470, %p59;
	bra.uni 	LBB0_27;
LBB0_25:
	add.f32 	%f898, %f898, 0f3F800000;
	setp.ltu.f32 	%p57, %f41, 0f40800000;
	@%p57 bra 	LBB0_27;
// %bb.26:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f466, %f898, 0f3F800000;
	fma.rn.f32 	%f468, %f185, 0fC0400000, %f41;
	setp.ge.f32 	%p58, %f468, 0f00000000;
	add.f32 	%f469, %f466, 0f3F800000;
	selp.f32 	%f898, %f469, %f466, %p58;
LBB0_27:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f900, %f898, 0fC0000000, %f900;
LBB0_32:                                // %__internal_fmodf_kernel.exit.i
	shr.u32 	%r174, %r173, 1;
	abs.f32 	%f483, %f900;
	setp.gtu.f32 	%p65, %f483, 0f7F800000;
	@%p65 bra 	LBB0_34;
// %bb.33:
	mov.b32 	%r257, %f38;
	and.b32  	%r258, %r257, -2147483648;
	mov.b32 	%r259, %f900;
	or.b32  	%r260, %r258, %r259;
	mov.b32 	%f900, %r260;
LBB0_34:                                // %__nv_fmodf.exit
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd35, %r174, 4;
	add.s32 	%r269, %r30, 2016;
	cvt.rn.f32.s32 	%f515, %r269;
	div.approx.f32 	%f57, %f515, %f217;
	abs.f32 	%f904, %f57;
	setp.lt.f32 	%p73, %f904, 0f40000000;
	@%p73 bra 	LBB0_46;
// %bb.35:
	setp.gtu.f32 	%p74, %f904, 0f4B800000;
	@%p74 bra 	LBB0_42;
	bra.uni 	LBB0_36;
LBB0_42:
	mov.b32 	%r40, %f904;
	and.b32  	%r270, %r40, 8388607;
	or.b32  	%r7766, %r270, 1065353216;
	mov.b32 	%f903, %r7766;
	add.s32 	%r271, %r40, -1073741824;
	and.b32  	%r7767, %r271, -8388608;
	setp.eq.s32 	%p80, %r7767, 0;
	@%p80 bra 	LBB0_45;
// %bb.43:                              // %__nv_fmaf_rn.exit4.i.i.i1136.preheader
	mov.f32 	%f526, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f525,%f526;
	// end inline asm
LBB0_44:                                // %__nv_fmaf_rn.exit4.i.i.i1136
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r272, %r7767, 192937984;
	add.s32 	%r273, %r272, %r7766;
	mov.b32 	%f527, %r273;
	mul.f32 	%f528, %f525, %f527;
	sub.f32 	%f529, %f527, %f528;
	fma.rn.f32 	%f530, %f529, %f525, %f528;
	sub.f32 	%f531, %f527, %f530;
	fma.rz.f32 	%f532, %f531, %f525, %f530;
	cvt.rzi.f32.f32 	%f533, %f532;
	sub.f32 	%f903, %f527, %f533;
	sub.s32 	%r7767, %r7767, %r272;
	mov.b32 	%r7766, %f903;
	setp.ne.s32 	%p81, %r7767, 0;
	setp.ne.s32 	%p82, %r7766, 0;
	and.pred  	%p83, %p81, %p82;
	@%p83 bra 	LBB0_44;
LBB0_45:                                // %__internal_fmodf_slowpath_mod.exit.i.i1138
	setp.gt.u32 	%p84, %r40, 2139095039;
	selp.f32 	%f534, 0f7FFFFFFF, 0f4B800000, %p84;
	mul.f32 	%f535, %f903, 0f34000000;
	mul.f32 	%f904, %f534, %f535;
	bra.uni 	LBB0_46;
LBB0_36:                                // %__nv_fast_fdividef.exit.i.i.i1108
	div.approx.f32 	%f518, %f904, %f185;
	cvt.rzi.f32.f32 	%f902, %f518;
	fma.rn.f32 	%f60, %f902, 0fC0000000, %f904;
	mov.b32 	%r39, %f60;
	setp.lt.u32 	%p75, %r39, 1073741824;
	@%p75 bra 	LBB0_41;
// %bb.37:
	setp.lt.u32 	%p76, %r39, -2147483647;
	@%p76 bra 	LBB0_39;
// %bb.38:
	add.f32 	%f523, %f902, 0fBF800000;
	setp.lt.f32 	%p79, %f60, 0fC0000000;
	add.f32 	%f524, %f523, 0fBF800000;
	selp.f32 	%f902, %f524, %f523, %p79;
	bra.uni 	LBB0_41;
LBB0_39:
	add.f32 	%f902, %f902, 0f3F800000;
	setp.ltu.f32 	%p77, %f60, 0f40800000;
	@%p77 bra 	LBB0_41;
// %bb.40:                              // %__nv_fmaf_rn.exit.i.i.i1113
	add.f32 	%f519, %f902, 0f3F800000;
	fma.rn.f32 	%f521, %f185, 0fC0400000, %f60;
	setp.ge.f32 	%p78, %f521, 0f00000000;
	add.f32 	%f522, %f519, 0f3F800000;
	selp.f32 	%f902, %f522, %f519, %p78;
LBB0_41:                                // %__internal_fmodf_fastpath_quot.exit.i.i1117
	fma.rn.f32 	%f904, %f902, 0fC0000000, %f904;
LBB0_46:                                // %__internal_fmodf_kernel.exit.i1142
	add.s64 	%rd36, %rd1, %rd35;
	abs.f32 	%f536, %f904;
	setp.gtu.f32 	%p85, %f536, 0f7F800000;
	@%p85 bra 	LBB0_48;
// %bb.47:
	mov.b32 	%r274, %f57;
	and.b32  	%r275, %r274, -2147483648;
	mov.b32 	%r276, %f904;
	or.b32  	%r277, %r275, %r276;
	mov.b32 	%f904, %r277;
LBB0_48:                                // %__nv_fmodf.exit1143
	ld.global.u32 	%r12, [%rd36];
	mov.u64 	%rd37, 2;
	mov.u64 	%rd38, 6;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9521, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd39, [retval0+0];
	} // callseq 4
	setp.ne.s64 	%p93, %rd39, 64;
	@%p93 bra 	LBB0_119;
// %bb.49:                              // %L875
	shr.u32 	%r16, %r4, 2;
	and.b32  	%r292, %r4, 3;
	shl.b32 	%r293, %r292, 1;
	neg.s32 	%r49, %r293;
	mul.lo.s32 	%r50, %r49, %r16;
	cvt.rn.f32.s32 	%f74, %r50;
	mov.f32 	%f570, 0f41000000;
	div.approx.f32 	%f75, %f74, %f570;
	abs.f32 	%f908, %f75;
	setp.lt.f32 	%p94, %f908, 0f40000000;
	@%p94 bra 	LBB0_61;
// %bb.50:
	setp.gtu.f32 	%p95, %f908, 0f4B800000;
	@%p95 bra 	LBB0_57;
	bra.uni 	LBB0_51;
LBB0_57:
	mov.b32 	%r52, %f908;
	and.b32  	%r294, %r52, 8388607;
	or.b32  	%r7768, %r294, 1065353216;
	mov.b32 	%f907, %r7768;
	add.s32 	%r295, %r52, -1073741824;
	and.b32  	%r7769, %r295, -8388608;
	setp.eq.s32 	%p101, %r7769, 0;
	@%p101 bra 	LBB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i1182.preheader
	mov.f32 	%f580, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f579,%f580;
	// end inline asm
LBB0_59:                                // %__nv_fmaf_rn.exit4.i.i.i1182
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r296, %r7769, 192937984;
	add.s32 	%r297, %r296, %r7768;
	mov.b32 	%f581, %r297;
	mul.f32 	%f582, %f579, %f581;
	sub.f32 	%f583, %f581, %f582;
	fma.rn.f32 	%f584, %f583, %f579, %f582;
	sub.f32 	%f585, %f581, %f584;
	fma.rz.f32 	%f586, %f585, %f579, %f584;
	cvt.rzi.f32.f32 	%f587, %f586;
	sub.f32 	%f907, %f581, %f587;
	sub.s32 	%r7769, %r7769, %r296;
	mov.b32 	%r7768, %f907;
	setp.ne.s32 	%p102, %r7769, 0;
	setp.ne.s32 	%p103, %r7768, 0;
	and.pred  	%p104, %p102, %p103;
	@%p104 bra 	LBB0_59;
LBB0_60:                                // %__internal_fmodf_slowpath_mod.exit.i.i1184
	setp.gt.u32 	%p105, %r52, 2139095039;
	selp.f32 	%f588, 0f7FFFFFFF, 0f4B800000, %p105;
	mul.f32 	%f589, %f907, 0f34000000;
	mul.f32 	%f908, %f588, %f589;
	bra.uni 	LBB0_61;
LBB0_51:                                // %__nv_fast_fdividef.exit.i.i.i1154
	div.approx.f32 	%f572, %f908, %f185;
	cvt.rzi.f32.f32 	%f906, %f572;
	fma.rn.f32 	%f78, %f906, 0fC0000000, %f908;
	mov.b32 	%r51, %f78;
	setp.lt.u32 	%p96, %r51, 1073741824;
	@%p96 bra 	LBB0_56;
// %bb.52:
	setp.lt.u32 	%p97, %r51, -2147483647;
	@%p97 bra 	LBB0_54;
// %bb.53:
	add.f32 	%f577, %f906, 0fBF800000;
	setp.lt.f32 	%p100, %f78, 0fC0000000;
	add.f32 	%f578, %f577, 0fBF800000;
	selp.f32 	%f906, %f578, %f577, %p100;
	bra.uni 	LBB0_56;
LBB0_54:
	add.f32 	%f906, %f906, 0f3F800000;
	setp.ltu.f32 	%p98, %f78, 0f40800000;
	@%p98 bra 	LBB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i1159
	add.f32 	%f573, %f906, 0f3F800000;
	fma.rn.f32 	%f575, %f185, 0fC0400000, %f78;
	setp.ge.f32 	%p99, %f575, 0f00000000;
	add.f32 	%f576, %f573, 0f3F800000;
	selp.f32 	%f906, %f576, %f573, %p99;
LBB0_56:                                // %__internal_fmodf_fastpath_quot.exit.i.i1163
	fma.rn.f32 	%f908, %f906, 0fC0000000, %f908;
LBB0_61:                                // %__internal_fmodf_kernel.exit.i1188
	abs.f32 	%f590, %f908;
	setp.gtu.f32 	%p106, %f590, 0f7F800000;
	@%p106 bra 	LBB0_63;
// %bb.62:
	mov.b32 	%r298, %f75;
	and.b32  	%r299, %r298, -2147483648;
	mov.b32 	%r300, %f908;
	or.b32  	%r301, %r299, %r300;
	mov.b32 	%f908, %r301;
LBB0_63:                                // %__nv_fmodf.exit1189
	shl.b32 	%r310, %r16, 3;
	sub.s32 	%r311, %r50, %r310;
	cvt.rn.f32.s32 	%f94, %r311;
	div.approx.f32 	%f95, %f94, %f570;
	abs.f32 	%f912, %f95;
	setp.lt.f32 	%p114, %f912, 0f40000000;
	@%p114 bra 	LBB0_75;
// %bb.64:
	setp.gtu.f32 	%p115, %f912, 0f4B800000;
	@%p115 bra 	LBB0_71;
	bra.uni 	LBB0_65;
LBB0_71:
	mov.b32 	%r60, %f912;
	and.b32  	%r312, %r60, 8388607;
	or.b32  	%r7770, %r312, 1065353216;
	mov.b32 	%f911, %r7770;
	add.s32 	%r313, %r60, -1073741824;
	and.b32  	%r7771, %r313, -8388608;
	setp.eq.s32 	%p121, %r7771, 0;
	@%p121 bra 	LBB0_74;
// %bb.72:                              // %__nv_fmaf_rn.exit4.i.i.i1228.preheader
	mov.f32 	%f632, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f631,%f632;
	// end inline asm
LBB0_73:                                // %__nv_fmaf_rn.exit4.i.i.i1228
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r314, %r7771, 192937984;
	add.s32 	%r315, %r314, %r7770;
	mov.b32 	%f633, %r315;
	mul.f32 	%f634, %f631, %f633;
	sub.f32 	%f635, %f633, %f634;
	fma.rn.f32 	%f636, %f635, %f631, %f634;
	sub.f32 	%f637, %f633, %f636;
	fma.rz.f32 	%f638, %f637, %f631, %f636;
	cvt.rzi.f32.f32 	%f639, %f638;
	sub.f32 	%f911, %f633, %f639;
	sub.s32 	%r7771, %r7771, %r314;
	mov.b32 	%r7770, %f911;
	setp.ne.s32 	%p122, %r7771, 0;
	setp.ne.s32 	%p123, %r7770, 0;
	and.pred  	%p124, %p122, %p123;
	@%p124 bra 	LBB0_73;
LBB0_74:                                // %__internal_fmodf_slowpath_mod.exit.i.i1230
	setp.gt.u32 	%p125, %r60, 2139095039;
	selp.f32 	%f640, 0f7FFFFFFF, 0f4B800000, %p125;
	mul.f32 	%f641, %f911, 0f34000000;
	mul.f32 	%f912, %f640, %f641;
	bra.uni 	LBB0_75;
LBB0_65:                                // %__nv_fast_fdividef.exit.i.i.i1200
	div.approx.f32 	%f624, %f912, %f185;
	cvt.rzi.f32.f32 	%f910, %f624;
	fma.rn.f32 	%f98, %f910, 0fC0000000, %f912;
	mov.b32 	%r59, %f98;
	setp.lt.u32 	%p116, %r59, 1073741824;
	@%p116 bra 	LBB0_70;
// %bb.66:
	setp.lt.u32 	%p117, %r59, -2147483647;
	@%p117 bra 	LBB0_68;
// %bb.67:
	add.f32 	%f629, %f910, 0fBF800000;
	setp.lt.f32 	%p120, %f98, 0fC0000000;
	add.f32 	%f630, %f629, 0fBF800000;
	selp.f32 	%f910, %f630, %f629, %p120;
	bra.uni 	LBB0_70;
LBB0_68:
	add.f32 	%f910, %f910, 0f3F800000;
	setp.ltu.f32 	%p118, %f98, 0f40800000;
	@%p118 bra 	LBB0_70;
// %bb.69:                              // %__nv_fmaf_rn.exit.i.i.i1205
	add.f32 	%f625, %f910, 0f3F800000;
	fma.rn.f32 	%f627, %f185, 0fC0400000, %f98;
	setp.ge.f32 	%p119, %f627, 0f00000000;
	add.f32 	%f628, %f625, 0f3F800000;
	selp.f32 	%f910, %f628, %f625, %p119;
LBB0_70:                                // %__internal_fmodf_fastpath_quot.exit.i.i1209
	fma.rn.f32 	%f912, %f910, 0fC0000000, %f912;
LBB0_75:                                // %__internal_fmodf_kernel.exit.i1234
	abs.f32 	%f642, %f912;
	setp.gtu.f32 	%p126, %f642, 0f7F800000;
	@%p126 bra 	LBB0_77;
// %bb.76:
	mov.b32 	%r316, %f95;
	and.b32  	%r317, %r316, -2147483648;
	mov.b32 	%r318, %f912;
	or.b32  	%r319, %r317, %r318;
	mov.b32 	%f912, %r319;
LBB0_77:                                // %__nv_fmodf.exit1235
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9521, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd45, [retval0+0];
	} // callseq 8
	setp.ne.s64 	%p134, %rd45, 64;
	@%p134 bra 	LBB0_118;
// %bb.78:                              // %L1013
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9521, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd51, [retval0+0];
	} // callseq 12
	cvt.rn.f32.s64 	%f676, %rd51;
	div.approx.f32 	%f112, %f74, %f676;
	abs.f32 	%f924, %f112;
	setp.lt.f32 	%p135, %f924, 0f40000000;
	@%p135 bra 	LBB0_127;
// %bb.79:
	setp.gtu.f32 	%p136, %f924, 0f4B800000;
	@%p136 bra 	LBB0_123;
	bra.uni 	LBB0_80;
LBB0_123:
	mov.b32 	%r139, %f924;
	and.b32  	%r340, %r139, 8388607;
	or.b32  	%r7802, %r340, 1065353216;
	mov.b32 	%f923, %r7802;
	add.s32 	%r341, %r139, -1073741824;
	and.b32  	%r7803, %r341, -8388608;
	setp.eq.s32 	%p142, %r7803, 0;
	@%p142 bra 	LBB0_126;
// %bb.124:                             // %__nv_fmaf_rn.exit4.i.i.i1366.preheader
	mov.f32 	%f686, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f685,%f686;
	// end inline asm
LBB0_125:                               // %__nv_fmaf_rn.exit4.i.i.i1366
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r342, %r7803, 192937984;
	add.s32 	%r343, %r342, %r7802;
	mov.b32 	%f687, %r343;
	mul.f32 	%f688, %f685, %f687;
	sub.f32 	%f689, %f687, %f688;
	fma.rn.f32 	%f690, %f689, %f685, %f688;
	sub.f32 	%f691, %f687, %f690;
	fma.rz.f32 	%f692, %f691, %f685, %f690;
	cvt.rzi.f32.f32 	%f693, %f692;
	sub.f32 	%f923, %f687, %f693;
	sub.s32 	%r7803, %r7803, %r342;
	mov.b32 	%r7802, %f923;
	setp.ne.s32 	%p143, %r7803, 0;
	setp.ne.s32 	%p144, %r7802, 0;
	and.pred  	%p145, %p143, %p144;
	@%p145 bra 	LBB0_125;
LBB0_126:                               // %__internal_fmodf_slowpath_mod.exit.i.i1368
	setp.gt.u32 	%p146, %r139, 2139095039;
	selp.f32 	%f694, 0f7FFFFFFF, 0f4B800000, %p146;
	mul.f32 	%f695, %f923, 0f34000000;
	mul.f32 	%f924, %f694, %f695;
	bra.uni 	LBB0_127;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i1338
	div.approx.f32 	%f678, %f924, %f185;
	cvt.rzi.f32.f32 	%f922, %f678;
	fma.rn.f32 	%f151, %f922, 0fC0000000, %f924;
	mov.b32 	%r138, %f151;
	setp.lt.u32 	%p137, %r138, 1073741824;
	@%p137 bra 	LBB0_122;
// %bb.81:
	setp.lt.u32 	%p138, %r138, -2147483647;
	@%p138 bra 	LBB0_120;
// %bb.82:
	add.f32 	%f683, %f922, 0fBF800000;
	setp.lt.f32 	%p141, %f151, 0fC0000000;
	add.f32 	%f684, %f683, 0fBF800000;
	selp.f32 	%f922, %f684, %f683, %p141;
	bra.uni 	LBB0_122;
LBB0_120:
	add.f32 	%f922, %f922, 0f3F800000;
	setp.ltu.f32 	%p139, %f151, 0f40800000;
	@%p139 bra 	LBB0_122;
// %bb.121:                             // %__nv_fmaf_rn.exit.i.i.i1343
	add.f32 	%f679, %f922, 0f3F800000;
	fma.rn.f32 	%f681, %f185, 0fC0400000, %f151;
	setp.ge.f32 	%p140, %f681, 0f00000000;
	add.f32 	%f682, %f679, 0f3F800000;
	selp.f32 	%f922, %f682, %f679, %p140;
LBB0_122:                               // %__internal_fmodf_fastpath_quot.exit.i.i1347
	fma.rn.f32 	%f924, %f922, 0fC0000000, %f924;
LBB0_127:                               // %__internal_fmodf_kernel.exit.i1372
	abs.f32 	%f696, %f924;
	setp.gtu.f32 	%p147, %f696, 0f7F800000;
	@%p147 bra 	LBB0_129;
// %bb.128:
	mov.b32 	%r344, %f112;
	and.b32  	%r345, %r344, -2147483648;
	mov.b32 	%r346, %f924;
	or.b32  	%r347, %r345, %r346;
	mov.b32 	%f924, %r347;
LBB0_129:                               // %__nv_fmodf.exit1373
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9521, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd55, [retval0+0];
	} // callseq 13
	cvt.rn.f32.s64 	%f728, %rd55;
	div.approx.f32 	%f167, %f94, %f728;
	abs.f32 	%f928, %f167;
	setp.lt.f32 	%p155, %f928, 0f40000000;
	@%p155 bra 	LBB0_141;
// %bb.130:
	setp.gtu.f32 	%p156, %f928, 0f4B800000;
	@%p156 bra 	LBB0_137;
	bra.uni 	LBB0_131;
LBB0_137:
	mov.b32 	%r147, %f928;
	and.b32  	%r356, %r147, 8388607;
	or.b32  	%r7804, %r356, 1065353216;
	mov.b32 	%f927, %r7804;
	add.s32 	%r357, %r147, -1073741824;
	and.b32  	%r7805, %r357, -8388608;
	setp.eq.s32 	%p162, %r7805, 0;
	@%p162 bra 	LBB0_140;
// %bb.138:                             // %__nv_fmaf_rn.exit4.i.i.i1412.preheader
	mov.f32 	%f738, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f737,%f738;
	// end inline asm
LBB0_139:                               // %__nv_fmaf_rn.exit4.i.i.i1412
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r358, %r7805, 192937984;
	add.s32 	%r359, %r358, %r7804;
	mov.b32 	%f739, %r359;
	mul.f32 	%f740, %f737, %f739;
	sub.f32 	%f741, %f739, %f740;
	fma.rn.f32 	%f742, %f741, %f737, %f740;
	sub.f32 	%f743, %f739, %f742;
	fma.rz.f32 	%f744, %f743, %f737, %f742;
	cvt.rzi.f32.f32 	%f745, %f744;
	sub.f32 	%f927, %f739, %f745;
	sub.s32 	%r7805, %r7805, %r358;
	mov.b32 	%r7804, %f927;
	setp.ne.s32 	%p163, %r7805, 0;
	setp.ne.s32 	%p164, %r7804, 0;
	and.pred  	%p165, %p163, %p164;
	@%p165 bra 	LBB0_139;
LBB0_140:                               // %__internal_fmodf_slowpath_mod.exit.i.i1414
	setp.gt.u32 	%p166, %r147, 2139095039;
	selp.f32 	%f746, 0f7FFFFFFF, 0f4B800000, %p166;
	mul.f32 	%f747, %f927, 0f34000000;
	mul.f32 	%f928, %f746, %f747;
	bra.uni 	LBB0_141;
LBB0_131:                               // %__nv_fast_fdividef.exit.i.i.i1384
	div.approx.f32 	%f730, %f928, %f185;
	cvt.rzi.f32.f32 	%f926, %f730;
	fma.rn.f32 	%f170, %f926, 0fC0000000, %f928;
	mov.b32 	%r146, %f170;
	setp.lt.u32 	%p157, %r146, 1073741824;
	@%p157 bra 	LBB0_136;
// %bb.132:
	setp.lt.u32 	%p158, %r146, -2147483647;
	@%p158 bra 	LBB0_134;
// %bb.133:
	add.f32 	%f735, %f926, 0fBF800000;
	setp.lt.f32 	%p161, %f170, 0fC0000000;
	add.f32 	%f736, %f735, 0fBF800000;
	selp.f32 	%f926, %f736, %f735, %p161;
	bra.uni 	LBB0_136;
LBB0_134:
	add.f32 	%f926, %f926, 0f3F800000;
	setp.ltu.f32 	%p159, %f170, 0f40800000;
	@%p159 bra 	LBB0_136;
// %bb.135:                             // %__nv_fmaf_rn.exit.i.i.i1389
	add.f32 	%f731, %f926, 0f3F800000;
	fma.rn.f32 	%f733, %f185, 0fC0400000, %f170;
	setp.ge.f32 	%p160, %f733, 0f00000000;
	add.f32 	%f734, %f731, 0f3F800000;
	selp.f32 	%f926, %f734, %f731, %p160;
LBB0_136:                               // %__internal_fmodf_fastpath_quot.exit.i.i1393
	fma.rn.f32 	%f928, %f926, 0fC0000000, %f928;
LBB0_141:                               // %__internal_fmodf_kernel.exit.i1418
	abs.f32 	%f748, %f928;
	setp.gtu.f32 	%p167, %f748, 0f7F800000;
	@%p167 bra 	LBB0_143;
// %bb.142:
	mov.b32 	%r360, %f167;
	and.b32  	%r361, %r360, -2147483648;
	mov.b32 	%r362, %f928;
	or.b32  	%r363, %r361, %r362;
	mov.b32 	%f928, %r363;
LBB0_143:                               // %__nv_fmodf.exit1419
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9521, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd59, [retval0+0];
	} // callseq 14
	setp.eq.s64 	%p175, %rd59, 64;
	@%p175 bra 	LBB0_83;
	bra.uni 	LBB0_144;
LBB0_83:                                // %L1096
	mov.f32 	%f189, 0f43808000;
	div.approx.f32 	%f190, %f188, %f189;
	div.approx.f32 	%f224, %f222, %f189;
	div.approx.f32 	%f259, %f257, %f189;
	div.approx.f32 	%f293, %f291, %f189;
	div.approx.f32 	%f328, %f326, %f189;
	div.approx.f32 	%f362, %f360, %f189;
	div.approx.f32 	%f397, %f395, %f189;
	div.approx.f32 	%f431, %f429, %f189;
	abs.f32 	%f191, %f190;
	abs.f32 	%f225, %f224;
	abs.f32 	%f260, %f259;
	abs.f32 	%f294, %f293;
	abs.f32 	%f329, %f328;
	abs.f32 	%f363, %f362;
	abs.f32 	%f398, %f397;
	abs.f32 	%f432, %f431;
	add.f32 	%f591, %f908, %f908;
	add.f32 	%f643, %f912, %f912;
	setp.gt.f32 	%p5, %f191, 0f4B800000;
	mul.f32 	%f192, %f190, 0f00000000;
	setp.gt.f32 	%p11, %f225, 0f4B800000;
	mul.f32 	%f226, %f224, 0f00000000;
	setp.gt.f32 	%p17, %f260, 0f4B800000;
	mul.f32 	%f261, %f259, 0f00000000;
	setp.gt.f32 	%p23, %f294, 0f4B800000;
	mul.f32 	%f295, %f293, 0f00000000;
	setp.gt.f32 	%p29, %f329, 0f4B800000;
	mul.f32 	%f330, %f328, 0f00000000;
	setp.gt.f32 	%p35, %f363, 0f4B800000;
	mul.f32 	%f364, %f362, 0f00000000;
	setp.gt.f32 	%p41, %f398, 0f4B800000;
	mul.f32 	%f399, %f397, 0f00000000;
	setp.gt.f32 	%p47, %f432, 0f4B800000;
	mul.f32 	%f433, %f431, 0f00000000;
	add.f32 	%f484, %f900, %f900;
	add.f32 	%f537, %f904, %f904;
	mov.b32 	%r302, %f591;
	mov.b32 	%r332, %f643;
	selp.f32 	%f193, %f192, %f190, %p5;
	selp.f32 	%f227, %f226, %f224, %p11;
	selp.f32 	%f262, %f261, %f259, %p17;
	selp.f32 	%f296, %f295, %f293, %p23;
	selp.f32 	%f331, %f330, %f328, %p29;
	selp.f32 	%f365, %f364, %f362, %p35;
	selp.f32 	%f400, %f399, %f397, %p41;
	selp.f32 	%f434, %f433, %f431, %p47;
	mov.b32 	%r261, %f484;
	mov.b32 	%r284, %f537;
	and.b32  	%r303, %r302, -2147483648;
	and.b32  	%r333, %r332, -2147483648;
	add.f32 	%f697, %f924, %f924;
	add.f32 	%f194, %f193, %f193;
	add.f32 	%f228, %f227, %f227;
	add.f32 	%f263, %f262, %f262;
	add.f32 	%f297, %f296, %f296;
	add.f32 	%f332, %f331, %f331;
	add.f32 	%f366, %f365, %f365;
	add.f32 	%f401, %f400, %f400;
	add.f32 	%f435, %f434, %f434;
	and.b32  	%r262, %r261, -2147483648;
	and.b32  	%r285, %r284, -2147483648;
	or.b32  	%r304, %r303, 1056964608;
	or.b32  	%r334, %r333, 1056964608;
	mov.b32 	%r348, %f697;
	mov.b32 	%r182, %f194;
	mov.b32 	%r189, %f228;
	mov.b32 	%r200, %f263;
	mov.b32 	%r207, %f297;
	mov.b32 	%r218, %f332;
	mov.b32 	%r225, %f366;
	mov.b32 	%r236, %f401;
	mov.b32 	%r243, %f435;
	or.b32  	%r263, %r262, 1056964608;
	or.b32  	%r286, %r285, 1056964608;
	mov.b32 	%f592, %r304;
	mov.b32 	%f644, %r334;
	and.b32  	%r349, %r348, -2147483648;
	and.b32  	%r183, %r182, -2147483648;
	and.b32  	%r190, %r189, -2147483648;
	and.b32  	%r201, %r200, -2147483648;
	and.b32  	%r208, %r207, -2147483648;
	and.b32  	%r219, %r218, -2147483648;
	and.b32  	%r226, %r225, -2147483648;
	and.b32  	%r237, %r236, -2147483648;
	and.b32  	%r244, %r243, -2147483648;
	mov.b32 	%f485, %r263;
	mov.b32 	%f538, %r286;
	add.f32 	%f593, %f591, %f592;
	abs.f32 	%f595, %f591;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	or.b32  	%r350, %r349, 1056964608;
	or.b32  	%r184, %r183, 1056964608;
	or.b32  	%r191, %r190, 1056964608;
	or.b32  	%r202, %r201, 1056964608;
	or.b32  	%r209, %r208, 1056964608;
	or.b32  	%r220, %r219, 1056964608;
	or.b32  	%r227, %r226, 1056964608;
	or.b32  	%r238, %r237, 1056964608;
	or.b32  	%r245, %r244, 1056964608;
	add.f32 	%f486, %f484, %f485;
	abs.f32 	%f488, %f484;
	add.f32 	%f539, %f537, %f538;
	abs.f32 	%f541, %f537;
	cvt.rzi.f32.f32 	%f594, %f593;
	setp.gt.f32 	%p107, %f595, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p127, %f647, 0f4B000000;
	mov.b32 	%f698, %r350;
	mov.b32 	%f195, %r184;
	mov.b32 	%f229, %r191;
	mov.b32 	%f264, %r202;
	mov.b32 	%f298, %r209;
	mov.b32 	%f333, %r220;
	mov.b32 	%f367, %r227;
	mov.b32 	%f402, %r238;
	mov.b32 	%f436, %r245;
	cvt.rzi.f32.f32 	%f487, %f486;
	setp.gt.f32 	%p66, %f488, 0f4B000000;
	cvt.rzi.f32.f32 	%f540, %f539;
	setp.gt.f32 	%p86, %f541, 0f4B000000;
	selp.f32 	%f596, %f591, %f594, %p107;
	cvt.rzi.f32.f32 	%f597, %f591;
	setp.lt.f32 	%p108, %f595, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p127;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p128, %f647, 0f3F000000;
	add.f32 	%f699, %f697, %f698;
	abs.f32 	%f701, %f697;
	add.f32 	%f196, %f194, %f195;
	abs.f32 	%f198, %f194;
	add.f32 	%f230, %f228, %f229;
	abs.f32 	%f232, %f228;
	add.f32 	%f265, %f263, %f264;
	abs.f32 	%f267, %f263;
	add.f32 	%f299, %f297, %f298;
	abs.f32 	%f301, %f297;
	add.f32 	%f334, %f332, %f333;
	abs.f32 	%f336, %f332;
	add.f32 	%f368, %f366, %f367;
	abs.f32 	%f370, %f366;
	add.f32 	%f403, %f401, %f402;
	abs.f32 	%f405, %f401;
	add.f32 	%f437, %f435, %f436;
	abs.f32 	%f439, %f435;
	selp.f32 	%f489, %f484, %f487, %p66;
	cvt.rzi.f32.f32 	%f490, %f484;
	setp.lt.f32 	%p67, %f488, 0f3F000000;
	selp.f32 	%f542, %f537, %f540, %p86;
	cvt.rzi.f32.f32 	%f543, %f537;
	setp.lt.f32 	%p87, %f541, 0f3F000000;
	selp.f32 	%f598, %f597, %f596, %p108;
	selp.f32 	%f650, %f649, %f648, %p128;
	cvt.rzi.f32.f32 	%f700, %f699;
	setp.gt.f32 	%p148, %f701, 0f4B000000;
	cvt.rzi.f32.f32 	%f197, %f196;
	setp.gt.f32 	%p6, %f198, 0f4B000000;
	cvt.rzi.f32.f32 	%f231, %f230;
	setp.gt.f32 	%p12, %f232, 0f4B000000;
	cvt.rzi.f32.f32 	%f266, %f265;
	setp.gt.f32 	%p18, %f267, 0f4B000000;
	cvt.rzi.f32.f32 	%f300, %f299;
	setp.gt.f32 	%p24, %f301, 0f4B000000;
	cvt.rzi.f32.f32 	%f335, %f334;
	setp.gt.f32 	%p30, %f336, 0f4B000000;
	cvt.rzi.f32.f32 	%f369, %f368;
	setp.gt.f32 	%p36, %f370, 0f4B000000;
	cvt.rzi.f32.f32 	%f404, %f403;
	setp.gt.f32 	%p42, %f405, 0f4B000000;
	cvt.rzi.f32.f32 	%f438, %f437;
	setp.gt.f32 	%p48, %f439, 0f4B000000;
	selp.f32 	%f491, %f490, %f489, %p67;
	selp.f32 	%f544, %f543, %f542, %p87;
	fma.rn.f32 	%f599, %f598, 0fBF000000, %f908;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f912;
	selp.f32 	%f702, %f697, %f700, %p148;
	cvt.rzi.f32.f32 	%f703, %f697;
	setp.lt.f32 	%p149, %f701, 0f3F000000;
	selp.f32 	%f199, %f194, %f197, %p6;
	cvt.rzi.f32.f32 	%f200, %f194;
	setp.lt.f32 	%p7, %f198, 0f3F000000;
	selp.f32 	%f233, %f228, %f231, %p12;
	cvt.rzi.f32.f32 	%f234, %f228;
	setp.lt.f32 	%p13, %f232, 0f3F000000;
	selp.f32 	%f268, %f263, %f266, %p18;
	cvt.rzi.f32.f32 	%f269, %f263;
	setp.lt.f32 	%p19, %f267, 0f3F000000;
	selp.f32 	%f302, %f297, %f300, %p24;
	cvt.rzi.f32.f32 	%f303, %f297;
	setp.lt.f32 	%p25, %f301, 0f3F000000;
	selp.f32 	%f337, %f332, %f335, %p30;
	cvt.rzi.f32.f32 	%f338, %f332;
	setp.lt.f32 	%p31, %f336, 0f3F000000;
	selp.f32 	%f371, %f366, %f369, %p36;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p37, %f370, 0f3F000000;
	selp.f32 	%f406, %f401, %f404, %p42;
	cvt.rzi.f32.f32 	%f407, %f401;
	setp.lt.f32 	%p43, %f405, 0f3F000000;
	selp.f32 	%f440, %f435, %f438, %p48;
	cvt.rzi.f32.f32 	%f441, %f435;
	setp.lt.f32 	%p49, %f439, 0f3F000000;
	fma.rn.f32 	%f492, %f491, 0fBF000000, %f900;
	fma.rn.f32 	%f545, %f544, 0fBF000000, %f904;
	mul.f32 	%f600, %f599, 0f34222169;
	mul.f32 	%f652, %f651, 0f34222169;
	selp.f32 	%f704, %f703, %f702, %p149;
	selp.f32 	%f201, %f200, %f199, %p7;
	selp.f32 	%f235, %f234, %f233, %p13;
	selp.f32 	%f270, %f269, %f268, %p19;
	selp.f32 	%f304, %f303, %f302, %p25;
	selp.f32 	%f339, %f338, %f337, %p31;
	selp.f32 	%f373, %f372, %f371, %p37;
	selp.f32 	%f408, %f407, %f406, %p43;
	selp.f32 	%f442, %f441, %f440, %p49;
	mul.f32 	%f493, %f492, 0f34222169;
	mul.f32 	%f546, %f545, 0f34222169;
	fma.rn.f32 	%f601, %f599, 0f40490FDA, %f600;
	fma.rn.f32 	%f653, %f651, 0f40490FDA, %f652;
	fma.rn.f32 	%f705, %f704, 0fBF000000, %f924;
	fma.rn.f32 	%f202, %f201, 0fBF000000, %f193;
	fma.rn.f32 	%f236, %f235, 0fBF000000, %f227;
	fma.rn.f32 	%f271, %f270, 0fBF000000, %f262;
	fma.rn.f32 	%f305, %f304, 0fBF000000, %f296;
	fma.rn.f32 	%f340, %f339, 0fBF000000, %f331;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f365;
	fma.rn.f32 	%f409, %f408, 0fBF000000, %f400;
	fma.rn.f32 	%f443, %f442, 0fBF000000, %f434;
	fma.rn.f32 	%f494, %f492, 0f40490FDA, %f493;
	fma.rn.f32 	%f547, %f545, 0f40490FDA, %f546;
	mul.f32 	%f602, %f601, %f601;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f706, %f705, 0f34222169;
	mul.f32 	%f203, %f202, %f202;
	mul.f32 	%f237, %f236, %f236;
	mul.f32 	%f272, %f271, %f271;
	mul.f32 	%f306, %f305, %f305;
	mul.f32 	%f341, %f340, %f340;
	mul.f32 	%f375, %f374, %f374;
	mul.f32 	%f410, %f409, %f409;
	mul.f32 	%f444, %f443, %f443;
	mul.f32 	%f495, %f494, %f494;
	mul.f32 	%f548, %f547, %f547;
	fma.rn.f32 	%f603, %f602, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f655, %f654, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f707, %f705, 0f40490FDA, %f706;
	cvt.rzi.s32.f32 	%r185, %f201;
	fma.rn.f32 	%f204, %f203, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f205, %f203, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r192, %f235;
	fma.rn.f32 	%f238, %f237, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f239, %f237, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r203, %f270;
	fma.rn.f32 	%f273, %f272, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f274, %f272, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r210, %f304;
	fma.rn.f32 	%f307, %f306, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f308, %f306, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r221, %f339;
	fma.rn.f32 	%f342, %f341, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f343, %f341, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r228, %f373;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r239, %f408;
	fma.rn.f32 	%f411, %f410, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f412, %f410, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r246, %f442;
	fma.rn.f32 	%f445, %f444, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f446, %f444, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f496, %f495, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f549, %f548, 0f37CBAC00, 0fBAB607ED;
	cvt.rzi.s32.f32 	%r305, %f598;
	fma.rn.f32 	%f604, %f603, %f602, 0f3D2AAABB;
	fma.rn.f32 	%f608, %f602, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r335, %f650;
	fma.rn.f32 	%f656, %f655, %f654, 0f3D2AAABB;
	fma.rn.f32 	%f660, %f654, 0fB94D4153, 0f3C0885E4;
	mul.f32 	%f708, %f707, %f707;
	add.s32 	%r186, %r185, 1;
	fma.rn.f32 	%f206, %f204, %f203, 0fC0A55DF6;
	fma.rn.f32 	%f207, %f205, %f203, 0f4081E0CF;
	fma.rn.f32 	%f208, %f203, %f202, 0f00000000;
	add.s32 	%r193, %r192, 1;
	fma.rn.f32 	%f240, %f238, %f237, 0fC0A55DF6;
	fma.rn.f32 	%f241, %f239, %f237, 0f4081E0CF;
	fma.rn.f32 	%f242, %f237, %f236, 0f00000000;
	add.s32 	%r204, %r203, 1;
	fma.rn.f32 	%f275, %f273, %f272, 0fC0A55DF6;
	fma.rn.f32 	%f276, %f274, %f272, 0f4081E0CF;
	fma.rn.f32 	%f277, %f272, %f271, 0f00000000;
	add.s32 	%r211, %r210, 1;
	fma.rn.f32 	%f309, %f307, %f306, 0fC0A55DF6;
	fma.rn.f32 	%f310, %f308, %f306, 0f4081E0CF;
	fma.rn.f32 	%f311, %f306, %f305, 0f00000000;
	add.s32 	%r222, %r221, 1;
	fma.rn.f32 	%f344, %f342, %f341, 0fC0A55DF6;
	fma.rn.f32 	%f345, %f343, %f341, 0f4081E0CF;
	fma.rn.f32 	%f346, %f341, %f340, 0f00000000;
	add.s32 	%r229, %r228, 1;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	add.s32 	%r240, %r239, 1;
	fma.rn.f32 	%f413, %f411, %f410, 0fC0A55DF6;
	fma.rn.f32 	%f414, %f412, %f410, 0f4081E0CF;
	fma.rn.f32 	%f415, %f410, %f409, 0f00000000;
	add.s32 	%r247, %r246, 1;
	fma.rn.f32 	%f447, %f445, %f444, 0fC0A55DF6;
	fma.rn.f32 	%f448, %f446, %f444, 0f4081E0CF;
	fma.rn.f32 	%f449, %f444, %f443, 0f00000000;
	cvt.rzi.s32.f32 	%r264, %f491;
	fma.rn.f32 	%f497, %f496, %f495, 0f3D2AAABB;
	fma.rn.f32 	%f501, %f495, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r287, %f544;
	fma.rn.f32 	%f550, %f549, %f548, 0f3D2AAABB;
	fma.rn.f32 	%f554, %f548, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f605, %f604, %f602, 0fBEFFFFFF;
	fma.rn.f32 	%f607, %f602, %f601, 0f00000000;
	fma.rn.f32 	%f609, %f608, %f602, 0fBE2AAAA8;
	and.b32  	%r306, %r305, 1;
	fma.rn.f32 	%f657, %f656, %f654, 0fBEFFFFFF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	fma.rn.f32 	%f661, %f660, %f654, 0fBE2AAAA8;
	and.b32  	%r336, %r335, 1;
	fma.rn.f32 	%f709, %f708, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f209, %f207, %f203, 0fC09DE9E6;
	fma.rn.f32 	%f210, %f206, %f208, 0f00000000;
	and.b32  	%r187, %r186, 1;
	fma.rn.f32 	%f243, %f241, %f237, 0fC09DE9E6;
	fma.rn.f32 	%f244, %f240, %f242, 0f00000000;
	and.b32  	%r194, %r193, 1;
	fma.rn.f32 	%f278, %f276, %f272, 0fC09DE9E6;
	fma.rn.f32 	%f279, %f275, %f277, 0f00000000;
	and.b32  	%r205, %r204, 1;
	fma.rn.f32 	%f312, %f310, %f306, 0fC09DE9E6;
	fma.rn.f32 	%f313, %f309, %f311, 0f00000000;
	and.b32  	%r212, %r211, 1;
	fma.rn.f32 	%f347, %f345, %f341, 0fC09DE9E6;
	fma.rn.f32 	%f348, %f344, %f346, 0f00000000;
	and.b32  	%r223, %r222, 1;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	and.b32  	%r230, %r229, 1;
	fma.rn.f32 	%f416, %f414, %f410, 0fC09DE9E6;
	fma.rn.f32 	%f417, %f413, %f415, 0f00000000;
	and.b32  	%r241, %r240, 1;
	fma.rn.f32 	%f450, %f448, %f444, 0fC09DE9E6;
	fma.rn.f32 	%f451, %f447, %f449, 0f00000000;
	and.b32  	%r248, %r247, 1;
	fma.rn.f32 	%f498, %f497, %f495, 0fBEFFFFFF;
	fma.rn.f32 	%f500, %f495, %f494, 0f00000000;
	fma.rn.f32 	%f502, %f501, %f495, 0fBE2AAAA8;
	and.b32  	%r265, %r264, 1;
	fma.rn.f32 	%f551, %f550, %f548, 0fBEFFFFFF;
	fma.rn.f32 	%f553, %f548, %f547, 0f00000000;
	fma.rn.f32 	%f555, %f554, %f548, 0fBE2AAAA8;
	and.b32  	%r288, %r287, 1;
	fma.rn.f32 	%f606, %f605, %f602, 0f3F800000;
	fma.rn.f32 	%f610, %f609, %f607, %f601;
	setp.eq.b32 	%p109, %r306, 1;
	fma.rn.f32 	%f658, %f657, %f654, 0f3F800000;
	fma.rn.f32 	%f662, %f661, %f659, %f653;
	setp.eq.b32 	%p129, %r336, 1;
	cvt.rzi.s32.f32 	%r351, %f704;
	fma.rn.f32 	%f710, %f709, %f708, 0f3D2AAABB;
	fma.rn.f32 	%f714, %f708, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f211, %f209, %f203, 0f3F800000;
	fma.rn.f32 	%f212, %f202, 0f40490FDB, %f210;
	setp.eq.b32 	%p8, %r187, 1;
	fma.rn.f32 	%f245, %f243, %f237, 0f3F800000;
	fma.rn.f32 	%f246, %f236, 0f40490FDB, %f244;
	setp.eq.b32 	%p14, %r194, 1;
	fma.rn.f32 	%f280, %f278, %f272, 0f3F800000;
	fma.rn.f32 	%f281, %f271, 0f40490FDB, %f279;
	setp.eq.b32 	%p20, %r205, 1;
	fma.rn.f32 	%f314, %f312, %f306, 0f3F800000;
	fma.rn.f32 	%f315, %f305, 0f40490FDB, %f313;
	setp.eq.b32 	%p26, %r212, 1;
	fma.rn.f32 	%f349, %f347, %f341, 0f3F800000;
	fma.rn.f32 	%f350, %f340, 0f40490FDB, %f348;
	setp.eq.b32 	%p32, %r223, 1;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	setp.eq.b32 	%p38, %r230, 1;
	fma.rn.f32 	%f418, %f416, %f410, 0f3F800000;
	fma.rn.f32 	%f419, %f409, 0f40490FDB, %f417;
	setp.eq.b32 	%p44, %r241, 1;
	fma.rn.f32 	%f452, %f450, %f444, 0f3F800000;
	fma.rn.f32 	%f453, %f443, 0f40490FDB, %f451;
	setp.eq.b32 	%p50, %r248, 1;
	fma.rn.f32 	%f499, %f498, %f495, 0f3F800000;
	fma.rn.f32 	%f503, %f502, %f500, %f494;
	setp.eq.b32 	%p68, %r265, 1;
	fma.rn.f32 	%f552, %f551, %f548, 0f3F800000;
	fma.rn.f32 	%f556, %f555, %f553, %f547;
	setp.eq.b32 	%p88, %r288, 1;
	selp.f32 	%f611, %f606, %f610, %p109;
	and.b32  	%r307, %r305, 2;
	selp.f32 	%f663, %f658, %f662, %p129;
	and.b32  	%r337, %r335, 2;
	fma.rn.f32 	%f711, %f710, %f708, 0fBEFFFFFF;
	fma.rn.f32 	%f713, %f708, %f707, 0f00000000;
	fma.rn.f32 	%f715, %f714, %f708, 0fBE2AAAA8;
	and.b32  	%r352, %r351, 1;
	selp.f32 	%f213, %f211, %f212, %p8;
	and.b32  	%r188, %r186, 2;
	mov.f32 	%f214, 0f00000000;
	selp.f32 	%f247, %f245, %f246, %p14;
	and.b32  	%r195, %r193, 2;
	selp.f32 	%f282, %f280, %f281, %p20;
	and.b32  	%r206, %r204, 2;
	selp.f32 	%f316, %f314, %f315, %p26;
	and.b32  	%r213, %r211, 2;
	selp.f32 	%f351, %f349, %f350, %p32;
	and.b32  	%r224, %r222, 2;
	selp.f32 	%f385, %f383, %f384, %p38;
	and.b32  	%r231, %r229, 2;
	selp.f32 	%f420, %f418, %f419, %p44;
	and.b32  	%r242, %r240, 2;
	selp.f32 	%f454, %f452, %f453, %p50;
	and.b32  	%r249, %r247, 2;
	selp.f32 	%f504, %f499, %f503, %p68;
	and.b32  	%r266, %r264, 2;
	selp.f32 	%f557, %f552, %f556, %p88;
	and.b32  	%r289, %r287, 2;
	setp.eq.s32 	%p110, %r307, 0;
	neg.f32 	%f613, %f611;
	add.s32 	%r308, %r305, 1;
	cvt.rzi.f32.f32 	%f618, %f908;
	setp.eq.s32 	%p130, %r337, 0;
	neg.f32 	%f665, %f663;
	add.s32 	%r338, %r335, 1;
	cvt.rzi.f32.f32 	%f670, %f912;
	fma.rn.f32 	%f712, %f711, %f708, 0f3F800000;
	fma.rn.f32 	%f716, %f715, %f713, %f707;
	setp.eq.b32 	%p150, %r352, 1;
	setp.eq.s32 	%p9, %r188, 0;
	sub.f32 	%f215, %f214, %f213;
	setp.eq.s32 	%p15, %r195, 0;
	sub.f32 	%f249, %f214, %f247;
	setp.eq.s32 	%p21, %r206, 0;
	sub.f32 	%f284, %f214, %f282;
	setp.eq.s32 	%p27, %r213, 0;
	sub.f32 	%f318, %f214, %f316;
	setp.eq.s32 	%p33, %r224, 0;
	sub.f32 	%f353, %f214, %f351;
	setp.eq.s32 	%p39, %r231, 0;
	sub.f32 	%f387, %f214, %f385;
	setp.eq.s32 	%p45, %r242, 0;
	sub.f32 	%f422, %f214, %f420;
	setp.eq.s32 	%p51, %r249, 0;
	sub.f32 	%f456, %f214, %f454;
	setp.eq.s32 	%p69, %r266, 0;
	neg.f32 	%f506, %f504;
	add.s32 	%r267, %r264, 1;
	cvt.rzi.f32.f32 	%f511, %f900;
	setp.eq.s32 	%p89, %r289, 0;
	neg.f32 	%f559, %f557;
	add.s32 	%r290, %r287, 1;
	cvt.rzi.f32.f32 	%f564, %f904;
	selp.f32 	%f612, %f610, %f606, %p109;
	selp.f32 	%f614, %f611, %f613, %p110;
	and.b32  	%r309, %r308, 2;
	setp.eq.f32 	%p112, %f618, %f908;
	mul.f32 	%f619, %f908, 0f00000000;
	selp.f32 	%f664, %f662, %f658, %p129;
	selp.f32 	%f666, %f663, %f665, %p130;
	and.b32  	%r339, %r338, 2;
	setp.eq.f32 	%p132, %f670, %f912;
	mul.f32 	%f671, %f912, 0f00000000;
	selp.f32 	%f717, %f712, %f716, %p150;
	and.b32  	%r353, %r351, 2;
	selp.f32 	%f216, %f213, %f215, %p9;
	selp.f32 	%f250, %f247, %f249, %p15;
	selp.f32 	%f285, %f282, %f284, %p21;
	selp.f32 	%f319, %f316, %f318, %p27;
	selp.f32 	%f354, %f351, %f353, %p33;
	selp.f32 	%f388, %f385, %f387, %p39;
	selp.f32 	%f423, %f420, %f422, %p45;
	selp.f32 	%f457, %f454, %f456, %p51;
	selp.f32 	%f505, %f503, %f499, %p68;
	selp.f32 	%f507, %f504, %f506, %p69;
	and.b32  	%r268, %r267, 2;
	setp.eq.f32 	%p71, %f511, %f900;
	mul.f32 	%f512, %f900, 0f00000000;
	selp.f32 	%f558, %f556, %f552, %p88;
	selp.f32 	%f560, %f557, %f559, %p89;
	and.b32  	%r291, %r290, 2;
	setp.eq.f32 	%p91, %f564, %f904;
	mul.f32 	%f565, %f904, 0f00000000;
	setp.eq.s32 	%p111, %r309, 0;
	sub.f32 	%f616, %f214, %f612;
	selp.f32 	%f92, %f619, %f614, %p112;
	abs.f32 	%f620, %f908;
	setp.eq.s32 	%p131, %r339, 0;
	sub.f32 	%f668, %f214, %f664;
	selp.f32 	%f672, %f671, %f666, %p132;
	abs.f32 	%f673, %f912;
	setp.eq.s32 	%p151, %r353, 0;
	neg.f32 	%f719, %f717;
	add.s32 	%r354, %r351, 1;
	cvt.rzi.f32.f32 	%f724, %f924;
	mul.f32 	%f2, %f216, %f216;
	mul.f32 	%f7, %f250, %f250;
	mul.f32 	%f11, %f285, %f285;
	mul.f32 	%f16, %f319, %f319;
	mul.f32 	%f20, %f354, %f354;
	mul.f32 	%f25, %f388, %f388;
	mul.f32 	%f29, %f423, %f423;
	mul.f32 	%f34, %f457, %f457;
	setp.eq.s32 	%p70, %r268, 0;
	sub.f32 	%f509, %f214, %f505;
	selp.f32 	%f55, %f512, %f507, %p71;
	abs.f32 	%f513, %f900;
	setp.eq.s32 	%p90, %r291, 0;
	sub.f32 	%f562, %f214, %f558;
	selp.f32 	%f566, %f565, %f560, %p91;
	abs.f32 	%f567, %f904;
	selp.f32 	%f617, %f612, %f616, %p111;
	setp.gt.f32 	%p113, %f620, 0f4B800000;
	add.f32 	%f621, %f92, 0f3F800000;
	selp.f32 	%f669, %f664, %f668, %p131;
	setp.gt.f32 	%p133, %f673, 0f4B800000;
	add.f32 	%f674, %f672, 0f3F800000;
	selp.f32 	%f718, %f716, %f712, %p150;
	selp.f32 	%f720, %f717, %f719, %p151;
	and.b32  	%r355, %r354, 2;
	setp.eq.f32 	%p153, %f724, %f924;
	mul.f32 	%f725, %f924, 0f00000000;
	setp.eq.s32 	%p152, %r355, 0;
	sub.f32 	%f722, %f214, %f718;
	selp.f32 	%f165, %f725, %f720, %p153;
	abs.f32 	%f726, %f924;
	shr.u32 	%r13, %r4, 1;
	shr.u32 	%r19, %r4, 3;
	add.f32 	%f749, %f928, %f928;
	mov.b32 	%r370, %f749;
	and.b32  	%r371, %r370, -2147483648;
	or.b32  	%r372, %r371, 1056964608;
	mov.b32 	%f750, %r372;
	add.f32 	%f751, %f749, %f750;
	cvt.rzi.f32.f32 	%f752, %f751;
	abs.f32 	%f753, %f749;
	setp.gt.f32 	%p168, %f753, 0f4B000000;
	selp.f32 	%f754, %f749, %f752, %p168;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p169, %f753, 0f3F000000;
	selp.f32 	%f756, %f755, %f754, %p169;
	cvt.rzi.s32.f32 	%r373, %f756;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f928;
	mul.f32 	%f758, %f757, 0f34222169;
	fma.rn.f32 	%f759, %f757, 0f40490FDA, %f758;
	mul.f32 	%f760, %f759, %f759;
	fma.rn.f32 	%f761, %f760, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f762, %f761, %f760, 0f3D2AAABB;
	fma.rn.f32 	%f763, %f762, %f760, 0fBEFFFFFF;
	fma.rn.f32 	%f764, %f763, %f760, 0f3F800000;
	fma.rn.f32 	%f765, %f760, %f759, 0f00000000;
	fma.rn.f32 	%f766, %f760, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f767, %f766, %f760, 0fBE2AAAA8;
	fma.rn.f32 	%f768, %f767, %f765, %f759;
	and.b32  	%r374, %r373, 1;
	setp.eq.b32 	%p170, %r374, 1;
	selp.f32 	%f769, %f764, %f768, %p170;
	selp.f32 	%f770, %f768, %f764, %p170;
	and.b32  	%r375, %r373, 2;
	setp.eq.s32 	%p171, %r375, 0;
	neg.f32 	%f771, %f769;
	selp.f32 	%f772, %f769, %f771, %p171;
	add.s32 	%r376, %r373, 1;
	and.b32  	%r377, %r376, 2;
	setp.eq.s32 	%p172, %r377, 0;
	sub.f32 	%f774, %f214, %f770;
	cvt.rzi.f32.f32 	%f776, %f928;
	setp.eq.f32 	%p173, %f776, %f928;
	mul.f32 	%f777, %f928, 0f00000000;
	selp.f32 	%f778, %f777, %f772, %p173;
	abs.f32 	%f779, %f928;
	and.b32  	%r378, %r19, 2;
	and.b32  	%r379, %r13, 4;
	or.b32  	%r380, %r17, %r378;
	or.b32  	%r71, %r380, %r379;
	mul.lo.s32 	%r72, %r49, %r71;
	cvt.rn.f32.s32 	%f782, %r72;
	div.approx.f32 	%f114, %f782, %f570;
	abs.f32 	%f916, %f114;
	setp.lt.f32 	%p176, %f916, 0f40000000;
	@%p176 bra 	LBB0_95;
// %bb.84:
	setp.gtu.f32 	%p177, %f916, 0f4B800000;
	@%p177 bra 	LBB0_91;
	bra.uni 	LBB0_85;
LBB0_91:
	mov.b32 	%r74, %f916;
	and.b32  	%r381, %r74, 8388607;
	or.b32  	%r7772, %r381, 1065353216;
	mov.b32 	%f915, %r7772;
	add.s32 	%r382, %r74, -1073741824;
	and.b32  	%r7773, %r382, -8388608;
	setp.eq.s32 	%p183, %r7773, 0;
	@%p183 bra 	LBB0_94;
// %bb.92:                              // %__nv_fmaf_rn.exit4.i.i.i1274.preheader
	mov.f32 	%f793, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f792,%f793;
	// end inline asm
LBB0_93:                                // %__nv_fmaf_rn.exit4.i.i.i1274
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r383, %r7773, 192937984;
	add.s32 	%r384, %r383, %r7772;
	mov.b32 	%f794, %r384;
	mul.f32 	%f795, %f792, %f794;
	sub.f32 	%f796, %f794, %f795;
	fma.rn.f32 	%f797, %f796, %f792, %f795;
	sub.f32 	%f798, %f794, %f797;
	fma.rz.f32 	%f799, %f798, %f792, %f797;
	cvt.rzi.f32.f32 	%f800, %f799;
	sub.f32 	%f915, %f794, %f800;
	sub.s32 	%r7773, %r7773, %r383;
	mov.b32 	%r7772, %f915;
	setp.ne.s32 	%p184, %r7773, 0;
	setp.ne.s32 	%p185, %r7772, 0;
	and.pred  	%p186, %p184, %p185;
	@%p186 bra 	LBB0_93;
LBB0_94:                                // %__internal_fmodf_slowpath_mod.exit.i.i1276
	setp.gt.u32 	%p187, %r74, 2139095039;
	selp.f32 	%f801, 0f7FFFFFFF, 0f4B800000, %p187;
	mul.f32 	%f802, %f915, 0f34000000;
	mul.f32 	%f916, %f801, %f802;
	bra.uni 	LBB0_95;
LBB0_85:                                // %__nv_fast_fdividef.exit.i.i.i1246
	div.approx.f32 	%f785, %f916, %f185;
	cvt.rzi.f32.f32 	%f914, %f785;
	fma.rn.f32 	%f117, %f914, 0fC0000000, %f916;
	mov.b32 	%r73, %f117;
	setp.lt.u32 	%p178, %r73, 1073741824;
	@%p178 bra 	LBB0_90;
// %bb.86:
	setp.lt.u32 	%p179, %r73, -2147483647;
	@%p179 bra 	LBB0_88;
// %bb.87:
	add.f32 	%f790, %f914, 0fBF800000;
	setp.lt.f32 	%p182, %f117, 0fC0000000;
	add.f32 	%f791, %f790, 0fBF800000;
	selp.f32 	%f914, %f791, %f790, %p182;
	bra.uni 	LBB0_90;
LBB0_88:
	add.f32 	%f914, %f914, 0f3F800000;
	setp.ltu.f32 	%p180, %f117, 0f40800000;
	@%p180 bra 	LBB0_90;
// %bb.89:                              // %__nv_fmaf_rn.exit.i.i.i1251
	add.f32 	%f786, %f914, 0f3F800000;
	fma.rn.f32 	%f788, %f185, 0fC0400000, %f117;
	setp.ge.f32 	%p181, %f788, 0f00000000;
	add.f32 	%f789, %f786, 0f3F800000;
	selp.f32 	%f914, %f789, %f786, %p181;
LBB0_90:                                // %__internal_fmodf_fastpath_quot.exit.i.i1255
	fma.rn.f32 	%f916, %f914, 0fC0000000, %f916;
LBB0_95:                                // %__internal_fmodf_kernel.exit.i1280
	mul.f32 	%f220, %f2, 0f3C0AF64E;
	mul.f32 	%f254, %f7, 0f3C0AF64E;
	mul.f32 	%f289, %f11, 0f3C0AF64E;
	mul.f32 	%f323, %f16, 0f3C0AF64E;
	mul.f32 	%f358, %f20, 0f3C0AF64E;
	mul.f32 	%f392, %f25, 0f3C0AF64E;
	mul.f32 	%f427, %f29, 0f3C0AF64E;
	mul.f32 	%f460, %f34, 0f3C0AF64E;
	selp.f32 	%f510, %f505, %f509, %p70;
	setp.gt.f32 	%p72, %f513, 0f4B800000;
	add.f32 	%f514, %f55, 0f3F800000;
	selp.f32 	%f563, %f558, %f562, %p90;
	setp.gt.f32 	%p92, %f567, 0f4B800000;
	add.f32 	%f568, %f566, 0f3F800000;
	selp.f32 	%f93, %f621, %f617, %p113;
	selp.f32 	%f675, %f674, %f669, %p133;
	selp.f32 	%f723, %f718, %f722, %p152;
	setp.gt.f32 	%p154, %f726, 0f4B800000;
	add.f32 	%f727, %f165, 0f3F800000;
	selp.f32 	%f775, %f770, %f774, %p172;
	setp.gt.f32 	%p174, %f779, 0f4B800000;
	add.f32 	%f780, %f778, 0f3F800000;
	abs.f32 	%f803, %f916;
	setp.gtu.f32 	%p188, %f803, 0f7F800000;
	@%p188 bra 	LBB0_97;
// %bb.96:
	mov.b32 	%r385, %f114;
	and.b32  	%r386, %r385, -2147483648;
	mov.b32 	%r387, %f916;
	or.b32  	%r388, %r386, %r387;
	mov.b32 	%f916, %r388;
LBB0_97:                                // %__nv_fmodf.exit1281
	mul.f32 	%f6, %f220, %f890;
	mul.f32 	%f255, %f254, %f891;
	mul.f32 	%f15, %f289, %f892;
	mul.f32 	%f324, %f323, %f893;
	mul.f32 	%f24, %f358, %f894;
	mul.f32 	%f393, %f392, %f895;
	mul.f32 	%f33, %f427, %f896;
	mul.f32 	%f461, %f460, %f897;
	selp.f32 	%f56, %f514, %f510, %p72;
	selp.f32 	%f569, %f568, %f563, %p92;
	mov.b32 	%r322, %f675;
	mov.b32 	%r321, %f93;
	mov.b32 	%r328, %f672;
	mov.b32 	%r327, %f92;
	selp.f32 	%f166, %f727, %f723, %p154;
	selp.f32 	%f781, %f780, %f775, %p174;
	add.f32 	%f804, %f916, %f916;
	mov.b32 	%r389, %f804;
	and.b32  	%r390, %r389, -2147483648;
	or.b32  	%r391, %r390, 1056964608;
	mov.b32 	%f805, %r391;
	add.f32 	%f806, %f804, %f805;
	cvt.rzi.f32.f32 	%f807, %f806;
	abs.f32 	%f808, %f804;
	setp.gt.f32 	%p189, %f808, 0f4B000000;
	selp.f32 	%f809, %f804, %f807, %p189;
	cvt.rzi.f32.f32 	%f810, %f804;
	setp.lt.f32 	%p190, %f808, 0f3F000000;
	selp.f32 	%f811, %f810, %f809, %p190;
	cvt.rzi.s32.f32 	%r392, %f811;
	fma.rn.f32 	%f812, %f811, 0fBF000000, %f916;
	mul.f32 	%f813, %f812, 0f34222169;
	fma.rn.f32 	%f814, %f812, 0f40490FDA, %f813;
	mul.f32 	%f815, %f814, %f814;
	fma.rn.f32 	%f816, %f815, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f817, %f816, %f815, 0f3D2AAABB;
	fma.rn.f32 	%f818, %f817, %f815, 0fBEFFFFFF;
	fma.rn.f32 	%f819, %f818, %f815, 0f3F800000;
	fma.rn.f32 	%f820, %f815, %f814, 0f00000000;
	fma.rn.f32 	%f821, %f815, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f822, %f821, %f815, 0fBE2AAAA8;
	fma.rn.f32 	%f823, %f822, %f820, %f814;
	and.b32  	%r393, %r392, 1;
	setp.eq.b32 	%p191, %r393, 1;
	selp.f32 	%f824, %f819, %f823, %p191;
	selp.f32 	%f825, %f823, %f819, %p191;
	and.b32  	%r394, %r392, 2;
	setp.eq.s32 	%p192, %r394, 0;
	neg.f32 	%f826, %f824;
	selp.f32 	%f827, %f824, %f826, %p192;
	add.s32 	%r395, %r392, 1;
	and.b32  	%r396, %r395, 2;
	setp.eq.s32 	%p193, %r396, 0;
	sub.f32 	%f829, %f214, %f825;
	selp.f32 	%f830, %f825, %f829, %p193;
	cvt.rzi.f32.f32 	%f831, %f916;
	setp.eq.f32 	%p194, %f831, %f916;
	mul.f32 	%f832, %f916, 0f00000000;
	selp.f32 	%f131, %f832, %f827, %p194;
	abs.f32 	%f833, %f916;
	setp.gt.f32 	%p195, %f833, 0f4B800000;
	add.f32 	%f834, %f131, 0f3F800000;
	shl.b32 	%r397, %r71, 3;
	sub.s32 	%r398, %r72, %r397;
	cvt.rn.f32.s32 	%f835, %r398;
	div.approx.f32 	%f133, %f835, %f570;
	abs.f32 	%f920, %f133;
	setp.lt.f32 	%p196, %f920, 0f40000000;
	@%p196 bra 	LBB0_109;
// %bb.98:
	setp.gtu.f32 	%p197, %f920, 0f4B800000;
	@%p197 bra 	LBB0_105;
	bra.uni 	LBB0_99;
LBB0_105:
	mov.b32 	%r82, %f920;
	and.b32  	%r399, %r82, 8388607;
	or.b32  	%r7774, %r399, 1065353216;
	mov.b32 	%f919, %r7774;
	add.s32 	%r400, %r82, -1073741824;
	and.b32  	%r7775, %r400, -8388608;
	setp.eq.s32 	%p203, %r7775, 0;
	@%p203 bra 	LBB0_108;
// %bb.106:                             // %__nv_fmaf_rn.exit4.i.i.i1320.preheader
	mov.f32 	%f846, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f845,%f846;
	// end inline asm
LBB0_107:                               // %__nv_fmaf_rn.exit4.i.i.i1320
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r401, %r7775, 192937984;
	add.s32 	%r402, %r401, %r7774;
	mov.b32 	%f847, %r402;
	mul.f32 	%f848, %f845, %f847;
	sub.f32 	%f849, %f847, %f848;
	fma.rn.f32 	%f850, %f849, %f845, %f848;
	sub.f32 	%f851, %f847, %f850;
	fma.rz.f32 	%f852, %f851, %f845, %f850;
	cvt.rzi.f32.f32 	%f853, %f852;
	sub.f32 	%f919, %f847, %f853;
	sub.s32 	%r7775, %r7775, %r401;
	mov.b32 	%r7774, %f919;
	setp.ne.s32 	%p204, %r7775, 0;
	setp.ne.s32 	%p205, %r7774, 0;
	and.pred  	%p206, %p204, %p205;
	@%p206 bra 	LBB0_107;
LBB0_108:                               // %__internal_fmodf_slowpath_mod.exit.i.i1322
	setp.gt.u32 	%p207, %r82, 2139095039;
	selp.f32 	%f854, 0f7FFFFFFF, 0f4B800000, %p207;
	mul.f32 	%f855, %f919, 0f34000000;
	mul.f32 	%f920, %f854, %f855;
	bra.uni 	LBB0_109;
LBB0_99:                                // %__nv_fast_fdividef.exit.i.i.i1292
	div.approx.f32 	%f838, %f920, %f185;
	cvt.rzi.f32.f32 	%f918, %f838;
	fma.rn.f32 	%f136, %f918, 0fC0000000, %f920;
	mov.b32 	%r81, %f136;
	setp.lt.u32 	%p198, %r81, 1073741824;
	@%p198 bra 	LBB0_104;
// %bb.100:
	setp.lt.u32 	%p199, %r81, -2147483647;
	@%p199 bra 	LBB0_102;
// %bb.101:
	add.f32 	%f843, %f918, 0fBF800000;
	setp.lt.f32 	%p202, %f136, 0fC0000000;
	add.f32 	%f844, %f843, 0fBF800000;
	selp.f32 	%f918, %f844, %f843, %p202;
	bra.uni 	LBB0_104;
LBB0_102:
	add.f32 	%f918, %f918, 0f3F800000;
	setp.ltu.f32 	%p200, %f136, 0f40800000;
	@%p200 bra 	LBB0_104;
// %bb.103:                             // %__nv_fmaf_rn.exit.i.i.i1297
	add.f32 	%f839, %f918, 0f3F800000;
	fma.rn.f32 	%f841, %f185, 0fC0400000, %f136;
	setp.ge.f32 	%p201, %f841, 0f00000000;
	add.f32 	%f842, %f839, 0f3F800000;
	selp.f32 	%f918, %f842, %f839, %p201;
LBB0_104:                               // %__internal_fmodf_fastpath_quot.exit.i.i1301
	fma.rn.f32 	%f920, %f918, 0fC0000000, %f920;
LBB0_109:                               // %__internal_fmodf_kernel.exit.i1326
	mov.b32 	%r198, %f255;
	mov.b32 	%r197, %f6;
	mov.b32 	%r216, %f324;
	mov.b32 	%r215, %f15;
	mov.b32 	%r234, %f393;
	mov.b32 	%r233, %f24;
	mov.b32 	%r252, %f461;
	mov.b32 	%r251, %f33;
	mov.b32 	%r280, %f569;
	mov.b32 	%r279, %f56;
	mov.b32 	%r283, %f566;
	mov.b32 	%r282, %f55;
	xor.b32  	%r325, %r328, -2147483648;
	xor.b32  	%r324, %r327, -2147483648;
	mov.b32 	%r366, %f781;
	mov.b32 	%r365, %f166;
	mov.b32 	%r369, %f778;
	mov.b32 	%r368, %f165;
	and.b32  	%r10, %r4, 16;
	selp.f32 	%f132, %f834, %f830, %p195;
	abs.f32 	%f856, %f920;
	setp.gtu.f32 	%p208, %f856, 0f7F800000;
	@%p208 bra 	LBB0_111;
// %bb.110:
	mov.b32 	%r403, %f133;
	and.b32  	%r404, %r403, -2147483648;
	mov.b32 	%r405, %f920;
	or.b32  	%r406, %r404, %r405;
	mov.b32 	%f920, %r406;
LBB0_111:                               // %__nv_fmodf.exit1327
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	// begin inline asm
	cvt.rn.f16x2.f32 %r196, %r198, %r197;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r214, %r216, %r215;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r232, %r234, %r233;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r250, %r252, %r251;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r278, %r280, %r279;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r281, %r283, %r282;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r320, %r322, %r321;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r323, %r325, %r324;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r326, %r328, %r327;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r329, %r322, %r321;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r364, %r366, %r365;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r367, %r369, %r368;
	// end inline asm
	add.f32 	%f857, %f920, %f920;
	mov.b32 	%r420, %f857;
	and.b32  	%r421, %r420, -2147483648;
	or.b32  	%r422, %r421, 1056964608;
	mov.b32 	%f858, %r422;
	add.f32 	%f859, %f857, %f858;
	cvt.rzi.f32.f32 	%f860, %f859;
	abs.f32 	%f861, %f857;
	setp.gt.f32 	%p209, %f861, 0f4B000000;
	selp.f32 	%f862, %f857, %f860, %p209;
	cvt.rzi.f32.f32 	%f863, %f857;
	setp.lt.f32 	%p210, %f861, 0f3F000000;
	selp.f32 	%f864, %f863, %f862, %p210;
	cvt.rzi.s32.f32 	%r423, %f864;
	fma.rn.f32 	%f865, %f864, 0fBF000000, %f920;
	mul.f32 	%f866, %f865, 0f34222169;
	fma.rn.f32 	%f867, %f865, 0f40490FDA, %f866;
	mul.f32 	%f868, %f867, %f867;
	fma.rn.f32 	%f869, %f868, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f870, %f869, %f868, 0f3D2AAABB;
	fma.rn.f32 	%f871, %f870, %f868, 0fBEFFFFFF;
	fma.rn.f32 	%f872, %f871, %f868, 0f3F800000;
	fma.rn.f32 	%f873, %f868, %f867, 0f00000000;
	fma.rn.f32 	%f874, %f868, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f875, %f874, %f868, 0fBE2AAAA8;
	fma.rn.f32 	%f876, %f875, %f873, %f867;
	and.b32  	%r424, %r423, 1;
	setp.eq.b32 	%p211, %r424, 1;
	selp.f32 	%f877, %f872, %f876, %p211;
	selp.f32 	%f878, %f876, %f872, %p211;
	and.b32  	%r425, %r423, 2;
	setp.eq.s32 	%p212, %r425, 0;
	neg.f32 	%f879, %f877;
	selp.f32 	%f880, %f877, %f879, %p212;
	add.s32 	%r426, %r423, 1;
	and.b32  	%r427, %r426, 2;
	setp.eq.s32 	%p213, %r427, 0;
	sub.f32 	%f882, %f214, %f878;
	selp.f32 	%f883, %f878, %f882, %p213;
	cvt.rzi.f32.f32 	%f884, %f920;
	setp.eq.f32 	%p214, %f884, %f920;
	mul.f32 	%f885, %f920, 0f00000000;
	selp.f32 	%f886, %f885, %f880, %p214;
	abs.f32 	%f887, %f920;
	setp.gt.f32 	%p215, %f887, 0f4B800000;
	add.f32 	%f888, %f886, 0f3F800000;
	selp.f32 	%f889, %f888, %f883, %p215;
	mov.b32 	%r409, %f889;
	mov.b32 	%r408, %f132;
	// begin inline asm
	cvt.rn.f16x2.f32 %r89, %r409, %r408;
	// end inline asm
	mov.b32 	%r415, %f886;
	xor.b32  	%r412, %r415, -2147483648;
	mov.b32 	%r414, %f131;
	xor.b32  	%r411, %r414, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r90, %r412, %r411;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r91, %r415, %r414;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r92, %r409, %r408;
	// end inline asm
	or.b32  	%r428, %r10, %r1;
	or.b32  	%r93, %r428, %r9;
	and.b32  	%r429, %r7, 28;
	shl.b32 	%r430, %r3, 5;
	and.b32  	%r431, %r430, 96;
	or.b32  	%r94, %r431, %r429;
	and.b32  	%r95, %r430, 128;
	and.b32  	%r96, %r4, 8;
	and.b32  	%r432, %r1, 1;
	mul.lo.s32 	%r433, %r18, 65;
	shr.u32 	%r434, %r1, 3;
	shl.b32 	%r435, %r4, 4;
	or.b32  	%r436, %r96, %r435;
	shr.u32 	%r437, %r436, 2;
	and.b32  	%r438, %r437, 30;
	shr.u32 	%r439, %r1, 1;
	bfe.u32 	%r440, %r1, 1, 1;
	bfe.u32 	%r441, %r1, 2, 1;
	mad.lo.s32 	%r442, %r432, 1040, %r433;
	mad.lo.s32 	%r443, %r434, 130, %r442;
	mad.lo.s32 	%r444, %r440, 520, %r443;
	mad.lo.s32 	%r445, %r441, 260, %r444;
	add.s32 	%r446, %r445, %r438;
	mul.wide.u32 	%rd63, %r446, 4;
	mov.u64 	%rd64, shmem;
	add.s64 	%rd5, %rd64, %rd63;
	add.s32 	%r447, %r446, 32;
	mul.wide.u32 	%rd65, %r447, 4;
	add.s64 	%rd6, %rd64, %rd65;
	add.s32 	%r448, %r446, 1;
	mul.wide.u32 	%rd66, %r448, 4;
	add.s64 	%rd7, %rd64, %rd66;
	add.s32 	%r449, %r446, 33;
	mul.wide.u32 	%rd67, %r449, 4;
	add.s64 	%rd8, %rd64, %rd67;
	mul.lo.s32 	%r450, %r20, 1040;
	mul.lo.s32 	%r451, %r14, 65;
	and.b32  	%r452, %r2, 32;
	mul.lo.s32 	%r453, %r15, 130;
	mul.lo.s32 	%r454, %r18, 520;
	mul.lo.s32 	%r455, %r17, 260;
	or.b32  	%r456, %r452, %r439;
	add.s32 	%r457, %r456, %r453;
	add.s32 	%r458, %r457, %r454;
	add.s32 	%r459, %r458, %r451;
	add.s32 	%r460, %r459, %r450;
	add.s32 	%r461, %r460, %r455;
	or.b32  	%r462, %r439, 8;
	add.s32 	%r463, %r453, %r452;
	add.s32 	%r464, %r463, %r462;
	add.s32 	%r465, %r464, %r454;
	add.s32 	%r466, %r465, %r451;
	add.s32 	%r467, %r466, %r450;
	add.s32 	%r468, %r467, %r455;
	or.b32  	%r469, %r439, 16;
	add.s32 	%r470, %r463, %r469;
	add.s32 	%r471, %r470, %r454;
	add.s32 	%r472, %r471, %r451;
	add.s32 	%r473, %r472, %r450;
	add.s32 	%r474, %r473, %r455;
	or.b32  	%r475, %r439, 24;
	add.s32 	%r476, %r463, %r475;
	add.s32 	%r477, %r476, %r454;
	add.s32 	%r478, %r477, %r451;
	add.s32 	%r479, %r478, %r450;
	add.s32 	%r480, %r479, %r455;
	shl.b32 	%r481, %r3, 3;
	and.b32  	%r482, %r481, 960;
	or.b32  	%r483, %r11, %r482;
	or.b32  	%r484, %r483, %r6;
	or.b32  	%r485, %r484, %r8;
	or.b32  	%r486, %r485, %r9;
	bfe.u32 	%r487, %r486, 1, 5;
	mul.lo.s32 	%r488, %r487, 65;
	add.s32 	%r489, %r456, %r488;
	or.b32  	%r490, %r462, %r452;
	add.s32 	%r491, %r490, %r488;
	or.b32  	%r492, %r469, %r452;
	add.s32 	%r493, %r492, %r488;
	or.b32  	%r494, %r475, %r452;
	add.s32 	%r495, %r494, %r488;
	shl.b32 	%r496, %r1, 1;
	or.b32  	%r497, %r18, %r496;
	mul.lo.s32 	%r498, %r497, 65;
	add.s32 	%r499, %r438, %r498;
	mul.wide.u32 	%rd68, %r499, 4;
	add.s64 	%rd9, %rd64, %rd68;
	cvt.u64.u32 	%rd69, %r438;
	cvt.u64.u32 	%rd70, %r498;
	add.s64 	%rd71, %rd70, %rd69;
	shl.b64 	%rd72, %rd71, 2;
	add.s64 	%rd10, %rd64, %rd72;
	shl.b32 	%r500, %r1, 10;
	or.b32  	%r501, %r95, %r94;
	or.b32  	%r502, %r482, %r19;
	shl.b32 	%r503, %r502, 8;
	or.b32  	%r504, %r500, %r503;
	or.b32  	%r505, %r501, %r504;
	or.b32  	%r97, %r505, -786432;
	mul.wide.u32 	%rd11, %r495, 4;
	mul.wide.u32 	%rd12, %r493, 4;
	mul.wide.u32 	%rd13, %r491, 4;
	mul.wide.u32 	%rd14, %r489, 4;
	mul.wide.u32 	%rd15, %r480, 4;
	mul.wide.u32 	%rd16, %r474, 4;
	mul.wide.u32 	%rd17, %r468, 4;
	mul.wide.u32 	%rd18, %r461, 4;
	mov.u32 	%r7790, 0;
	setp.eq.s32 	%p216, %r96, 0;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r7791, %r7790;
	mov.u32 	%r7792, %r7790;
	mov.u32 	%r7793, %r7790;
	mov.u32 	%r7794, %r7790;
	mov.u32 	%r7795, %r7790;
	mov.u32 	%r7796, %r7790;
	mov.u32 	%r7797, %r7790;
	mov.u32 	%r7798, %r7790;
	mov.u32 	%r7799, %r7790;
	mov.u32 	%r7800, %r7790;
	mov.u32 	%r7801, %r7790;
	mov.u32 	%r7788, %r7790;
	bra.uni 	LBB0_112;
LBB0_116:                               // %L29334
                                        //   in Loop: Header=BB0_112 Depth=1
	add.s32 	%r7788, %r110, 256;
	setp.gt.s32 	%p221, %r5, %r7788;
	setp.ne.s32 	%p222, %r110, 65280;
	and.pred  	%p223, %p222, %p221;
	@%p223 bra 	LBB0_112;
	bra.uni 	LBB0_117;
LBB0_112:                               // %L1246
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_113 Depth 2
	mov.u32 	%r110, %r7788;
	or.b32  	%r523, %r93, %r110;
	shl.b32 	%r524, %r523, 12;
	or.b32  	%r525, %r524, %r94;
	or.b32  	%r526, %r525, %r95;
	mul.wide.s32 	%rd74, %r526, 4;
	add.s64 	%rd75, %rd2, %rd74;
	ld.global.v4.u32 	{%r527, %r528, %r529, %r530}, [%rd75];
	selp.b32 	%r531, %r529, %r527, %p216;
	shfl.sync.bfly.b32	%r532, %r531, 8, 31, -1;
	selp.b32 	%r507, %r527, %r532, %p216;
	selp.b32 	%r508, %r532, %r529, %p216;
	selp.b32 	%r533, %r530, %r528, %p216;
	shfl.sync.bfly.b32	%r534, %r533, 8, 31, -1;
	selp.b32 	%r515, %r528, %r534, %p216;
	selp.b32 	%r516, %r534, %r530, %p216;
	mov.u32 	%r517, 21520;
	// begin inline asm
	prmt.b32 %r506, %r507, %r508, %r517;
	// end inline asm
	mov.u32 	%r521, 30258;
	// begin inline asm
	prmt.b32 %r510, %r507, %r508, %r521;
	// end inline asm
	// begin inline asm
	prmt.b32 %r514, %r515, %r516, %r517;
	// end inline asm
	// begin inline asm
	prmt.b32 %r518, %r515, %r516, %r521;
	// end inline asm
	st.shared.u32 	[%rd5], %r506;
	st.shared.u32 	[%rd6], %r510;
	st.shared.u32 	[%rd7], %r514;
	st.shared.u32 	[%rd8], %r518;
	bar.sync 	0;
	mov.u32 	%r7789, 256;
	mov.u64 	%rd86, %rd64;
LBB0_113:                               // %L4370
                                        //   Parent Loop BB0_112 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd76, %rd86, %rd18;
	ld.shared.u32 	%r7719, [%rd76];
	add.s64 	%rd77, %rd86, %rd17;
	ld.shared.u32 	%r7720, [%rd77];
	add.s64 	%rd78, %rd86, %rd16;
	ld.shared.u32 	%r7721, [%rd78];
	add.s64 	%rd79, %rd86, %rd15;
	ld.shared.u32 	%r7722, [%rd79];
	// begin inline asm
	mov.b32 %r540, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r551, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r539, %r7719, -2004318072;
	mov.u32 	%r538, 983055;
	// begin inline asm
	lop3.b32 %r537, %r538, %r539, %r540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r541, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r542, %r540, %r541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r545, %r537, %r542;
	// end inline asm
	mov.u32 	%r549, 15728880;
	// begin inline asm
	lop3.b32 %r548, %r549, %r539, %r551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r552, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r553, %r551, %r552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r556, %r548, %r553;
	// end inline asm
	shr.u32 	%r561, %r539, 8;
	// begin inline asm
	lop3.b32 %r559, %r538, %r561, %r540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r563, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r564, %r540, %r563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r567, %r559, %r564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r570, %r549, %r561, %r551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r574, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r575, %r551, %r574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r578, %r570, %r575;
	// end inline asm
	// begin inline asm
	mov.b32 %r586, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r597, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r585, %r7720, -2004318072;
	// begin inline asm
	lop3.b32 %r583, %r538, %r585, %r586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r587, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r588, %r586, %r587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r591, %r583, %r588;
	// end inline asm
	// begin inline asm
	lop3.b32 %r594, %r549, %r585, %r597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r598, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r599, %r597, %r598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r602, %r594, %r599;
	// end inline asm
	shr.u32 	%r607, %r585, 8;
	// begin inline asm
	lop3.b32 %r605, %r538, %r607, %r586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r609, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r610, %r586, %r609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r613, %r605, %r610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r616, %r549, %r607, %r597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r620, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r621, %r597, %r620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r624, %r616, %r621;
	// end inline asm
	// begin inline asm
	mov.b32 %r632, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r643, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r631, %r7721, -2004318072;
	// begin inline asm
	lop3.b32 %r629, %r538, %r631, %r632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r633, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r634, %r632, %r633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r637, %r629, %r634;
	// end inline asm
	// begin inline asm
	lop3.b32 %r640, %r549, %r631, %r643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r644, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r645, %r643, %r644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r648, %r640, %r645;
	// end inline asm
	shr.u32 	%r653, %r631, 8;
	// begin inline asm
	lop3.b32 %r651, %r538, %r653, %r632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r655, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r656, %r632, %r655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r659, %r651, %r656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r662, %r549, %r653, %r643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r666, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r667, %r643, %r666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r670, %r662, %r667;
	// end inline asm
	// begin inline asm
	mov.b32 %r678, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r689, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r677, %r7722, -2004318072;
	// begin inline asm
	lop3.b32 %r675, %r538, %r677, %r678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r679, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r680, %r678, %r679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r683, %r675, %r680;
	// end inline asm
	// begin inline asm
	lop3.b32 %r686, %r549, %r677, %r689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r690, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r691, %r689, %r690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r694, %r686, %r691;
	// end inline asm
	shr.u32 	%r699, %r677, 8;
	// begin inline asm
	lop3.b32 %r697, %r538, %r699, %r678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r701, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r702, %r678, %r701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r705, %r697, %r702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r708, %r549, %r699, %r689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r712, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r713, %r689, %r712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r716, %r708, %r713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r719, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r721, %r719, %r545;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r724, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r726, %r724, %r556;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r729, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r731, %r729, %r567;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r734, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r736, %r734, %r578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r739, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r741, %r739, %r591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r744, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r746, %r744, %r602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r749, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r751, %r749, %r613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r754, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r756, %r754, %r624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r759, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r761, %r759, %r637;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r764, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r766, %r764, %r648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r769, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r771, %r769, %r659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r774, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r776, %r774, %r670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r779, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r781, %r779, %r683;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r784, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r786, %r784, %r694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r789, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r791, %r789, %r705;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r794, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r796, %r794, %r716;
	// end inline asm
	// begin inline asm
	mov.b32 %r804, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r815, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r803, %r7790, -2004318072;
	// begin inline asm
	lop3.b32 %r801, %r538, %r803, %r804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r805, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r806, %r804, %r805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r809, %r801, %r806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r812, %r549, %r803, %r815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r816, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r817, %r815, %r816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r820, %r812, %r817;
	// end inline asm
	shr.u32 	%r825, %r803, 8;
	// begin inline asm
	lop3.b32 %r823, %r538, %r825, %r804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r827, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r828, %r804, %r827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r831, %r823, %r828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r834, %r549, %r825, %r815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r838, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r839, %r815, %r838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r842, %r834, %r839;
	// end inline asm
	// begin inline asm
	mov.b32 %r850, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r861, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r849, %r7791, -2004318072;
	// begin inline asm
	lop3.b32 %r847, %r538, %r849, %r850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r851, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r852, %r850, %r851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r855, %r847, %r852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r858, %r549, %r849, %r861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r862, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r863, %r861, %r862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r866, %r858, %r863;
	// end inline asm
	shr.u32 	%r871, %r849, 8;
	// begin inline asm
	lop3.b32 %r869, %r538, %r871, %r850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r873, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r874, %r850, %r873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r877, %r869, %r874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r880, %r549, %r871, %r861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r884, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r885, %r861, %r884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r888, %r880, %r885;
	// end inline asm
	// begin inline asm
	mov.b32 %r896, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r907, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r895, %r7792, -2004318072;
	// begin inline asm
	lop3.b32 %r893, %r538, %r895, %r896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r897, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r898, %r896, %r897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r901, %r893, %r898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r904, %r549, %r895, %r907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r908, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r909, %r907, %r908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r912, %r904, %r909;
	// end inline asm
	shr.u32 	%r917, %r895, 8;
	// begin inline asm
	lop3.b32 %r915, %r538, %r917, %r896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r919, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r920, %r896, %r919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r923, %r915, %r920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r926, %r549, %r917, %r907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r930, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r931, %r907, %r930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r934, %r926, %r931;
	// end inline asm
	// begin inline asm
	mov.b32 %r942, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r953, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r941, %r7793, -2004318072;
	// begin inline asm
	lop3.b32 %r939, %r538, %r941, %r942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r943, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r944, %r942, %r943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r947, %r939, %r944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r950, %r549, %r941, %r953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r954, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r955, %r953, %r954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r958, %r950, %r955;
	// end inline asm
	shr.u32 	%r963, %r941, 8;
	// begin inline asm
	lop3.b32 %r961, %r538, %r963, %r942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r965, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r966, %r942, %r965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r969, %r961, %r966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r972, %r549, %r963, %r953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r976, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r977, %r953, %r976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r980, %r972, %r977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r983, %r196, %r809, %r721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r987, %r196, %r820, %r726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r991, %r196, %r831, %r731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r995, %r196, %r842, %r736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r999, %r196, %r855, %r741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1003, %r196, %r866, %r746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1007, %r196, %r877, %r751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1011, %r196, %r888, %r756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1015, %r196, %r901, %r761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1019, %r196, %r912, %r766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1023, %r196, %r923, %r771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1027, %r196, %r934, %r776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1031, %r196, %r947, %r781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1035, %r196, %r958, %r786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1039, %r196, %r969, %r791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1043, %r196, %r980, %r796;
	// end inline asm
	// begin inline asm
	mov.b32 %r1052, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1063, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1051, %r7794, -2004318072;
	// begin inline asm
	lop3.b32 %r1049, %r538, %r1051, %r1052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1053, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1054, %r1052, %r1053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1057, %r1049, %r1054;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1060, %r549, %r1051, %r1063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1064, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1065, %r1063, %r1064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1068, %r1060, %r1065;
	// end inline asm
	shr.u32 	%r1073, %r1051, 8;
	// begin inline asm
	lop3.b32 %r1071, %r538, %r1073, %r1052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1075, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1076, %r1052, %r1075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1079, %r1071, %r1076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1082, %r549, %r1073, %r1063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1086, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1087, %r1063, %r1086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1090, %r1082, %r1087;
	// end inline asm
	// begin inline asm
	mov.b32 %r1098, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1109, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1097, %r7795, -2004318072;
	// begin inline asm
	lop3.b32 %r1095, %r538, %r1097, %r1098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1099, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1100, %r1098, %r1099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1103, %r1095, %r1100;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1106, %r549, %r1097, %r1109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1110, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1111, %r1109, %r1110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1114, %r1106, %r1111;
	// end inline asm
	shr.u32 	%r1119, %r1097, 8;
	// begin inline asm
	lop3.b32 %r1117, %r538, %r1119, %r1098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1121, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1122, %r1098, %r1121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1125, %r1117, %r1122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1128, %r549, %r1119, %r1109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1132, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1133, %r1109, %r1132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1136, %r1128, %r1133;
	// end inline asm
	// begin inline asm
	mov.b32 %r1144, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1155, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1143, %r7796, -2004318072;
	// begin inline asm
	lop3.b32 %r1141, %r538, %r1143, %r1144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1145, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1146, %r1144, %r1145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1149, %r1141, %r1146;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1152, %r549, %r1143, %r1155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1156, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1157, %r1155, %r1156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1160, %r1152, %r1157;
	// end inline asm
	shr.u32 	%r1165, %r1143, 8;
	// begin inline asm
	lop3.b32 %r1163, %r538, %r1165, %r1144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1167, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1168, %r1144, %r1167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1171, %r1163, %r1168;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1174, %r549, %r1165, %r1155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1178, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1179, %r1155, %r1178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1182, %r1174, %r1179;
	// end inline asm
	// begin inline asm
	mov.b32 %r1190, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1201, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1189, %r7797, -2004318072;
	// begin inline asm
	lop3.b32 %r1187, %r538, %r1189, %r1190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1191, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1192, %r1190, %r1191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1195, %r1187, %r1192;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1198, %r549, %r1189, %r1201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1202, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1203, %r1201, %r1202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1206, %r1198, %r1203;
	// end inline asm
	shr.u32 	%r1211, %r1189, 8;
	// begin inline asm
	lop3.b32 %r1209, %r538, %r1211, %r1190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1213, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1214, %r1190, %r1213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1217, %r1209, %r1214;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1220, %r549, %r1211, %r1201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1224, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1225, %r1201, %r1224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1228, %r1220, %r1225;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1231, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1233, %r1231, %r1057, %r983;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1237, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1239, %r1237, %r1068, %r987;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1243, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1245, %r1243, %r1079, %r991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1249, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1251, %r1249, %r1090, %r995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1255, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1257, %r1255, %r1103, %r999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1261, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1263, %r1261, %r1114, %r1003;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1267, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1269, %r1267, %r1125, %r1007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1273, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1275, %r1273, %r1136, %r1011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1279, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1281, %r1279, %r1149, %r1015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1285, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1287, %r1285, %r1160, %r1019;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1291, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1293, %r1291, %r1171, %r1023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1297, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1299, %r1297, %r1182, %r1027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1303, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1305, %r1303, %r1195, %r1031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1309, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1311, %r1309, %r1206, %r1035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1315, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1317, %r1315, %r1217, %r1039;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1321, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1323, %r1321, %r1228, %r1043;
	// end inline asm
	// begin inline asm
	mov.b32 %r1332, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1343, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1331, %r7798, -2004318072;
	// begin inline asm
	lop3.b32 %r1329, %r538, %r1331, %r1332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1333, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1334, %r1332, %r1333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1337, %r1329, %r1334;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1340, %r549, %r1331, %r1343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1344, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1345, %r1343, %r1344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1348, %r1340, %r1345;
	// end inline asm
	shr.u32 	%r1353, %r1331, 8;
	// begin inline asm
	lop3.b32 %r1351, %r538, %r1353, %r1332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1355, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1356, %r1332, %r1355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1359, %r1351, %r1356;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1362, %r549, %r1353, %r1343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1366, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1367, %r1343, %r1366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1370, %r1362, %r1367;
	// end inline asm
	// begin inline asm
	mov.b32 %r1378, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1389, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1377, %r7799, -2004318072;
	// begin inline asm
	lop3.b32 %r1375, %r538, %r1377, %r1378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1379, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1380, %r1378, %r1379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1383, %r1375, %r1380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1386, %r549, %r1377, %r1389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1390, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1391, %r1389, %r1390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1394, %r1386, %r1391;
	// end inline asm
	shr.u32 	%r1399, %r1377, 8;
	// begin inline asm
	lop3.b32 %r1397, %r538, %r1399, %r1378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1401, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1402, %r1378, %r1401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1405, %r1397, %r1402;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1408, %r549, %r1399, %r1389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1412, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1413, %r1389, %r1412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1416, %r1408, %r1413;
	// end inline asm
	// begin inline asm
	mov.b32 %r1424, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1435, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1423, %r7800, -2004318072;
	// begin inline asm
	lop3.b32 %r1421, %r538, %r1423, %r1424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1425, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1426, %r1424, %r1425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1429, %r1421, %r1426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1432, %r549, %r1423, %r1435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1436, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1437, %r1435, %r1436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1440, %r1432, %r1437;
	// end inline asm
	shr.u32 	%r1445, %r1423, 8;
	// begin inline asm
	lop3.b32 %r1443, %r538, %r1445, %r1424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1447, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1448, %r1424, %r1447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1451, %r1443, %r1448;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1454, %r549, %r1445, %r1435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1458, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1459, %r1435, %r1458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1462, %r1454, %r1459;
	// end inline asm
	// begin inline asm
	mov.b32 %r1470, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1481, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1469, %r7801, -2004318072;
	// begin inline asm
	lop3.b32 %r1467, %r538, %r1469, %r1470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1471, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1472, %r1470, %r1471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1475, %r1467, %r1472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1478, %r549, %r1469, %r1481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1482, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1483, %r1481, %r1482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1486, %r1478, %r1483;
	// end inline asm
	shr.u32 	%r1491, %r1469, 8;
	// begin inline asm
	lop3.b32 %r1489, %r538, %r1491, %r1470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1493, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1494, %r1470, %r1493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1497, %r1489, %r1494;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1500, %r549, %r1491, %r1481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1504, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1505, %r1481, %r1504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1508, %r1500, %r1505;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1582, %r232, %r1337, %r1233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1579, %r232, %r1348, %r1239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1591, %r232, %r1359, %r1245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1588, %r232, %r1370, %r1251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1600, %r232, %r1383, %r1257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1597, %r232, %r1394, %r1263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1609, %r232, %r1405, %r1269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1606, %r232, %r1416, %r1275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1618, %r232, %r1429, %r1281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1615, %r232, %r1440, %r1287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1627, %r232, %r1451, %r1293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1624, %r232, %r1462, %r1299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1636, %r232, %r1475, %r1305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1633, %r232, %r1486, %r1311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1645, %r232, %r1497, %r1317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1642, %r232, %r1508, %r1323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1575, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1577, %r1575, %r1579;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1580, %r278, %r1582, %r1577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1584, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1586, %r1584, %r1588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1589, %r278, %r1591, %r1586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1593, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1595, %r1593, %r1597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1598, %r278, %r1600, %r1595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1602, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1604, %r1602, %r1606;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1607, %r278, %r1609, %r1604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1611, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1613, %r1611, %r1615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1616, %r278, %r1618, %r1613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1620, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1622, %r1620, %r1624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1625, %r278, %r1627, %r1622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1629, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1631, %r1629, %r1633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1634, %r278, %r1636, %r1631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1638, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1640, %r1638, %r1642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1643, %r278, %r1645, %r1640;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1647, %r281, %r1582;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1650, %r278, %r1579, %r1647;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1654, %r281, %r1591;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1657, %r278, %r1588, %r1654;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1661, %r281, %r1600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1664, %r278, %r1597, %r1661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1668, %r281, %r1609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1671, %r278, %r1606, %r1668;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1675, %r281, %r1618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1678, %r278, %r1615, %r1675;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1682, %r281, %r1627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1685, %r278, %r1624, %r1682;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1689, %r281, %r1636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1692, %r278, %r1633, %r1689;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1696, %r281, %r1645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1699, %r278, %r1642, %r1696;
	// end inline asm
	mov.u32 	%r7378, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1790, %r1787}, {%r320, %r326, %r323, %r329}, {%r1580, %r1650}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1799, %r1796}, {%r320, %r326, %r323, %r329}, {%r1589, %r1657}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1808, %r1805}, {%r320, %r326, %r323, %r329}, {%r1598, %r1664}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1817, %r1814}, {%r320, %r326, %r323, %r329}, {%r1607, %r1671}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1826, %r1823}, {%r320, %r326, %r323, %r329}, {%r1616, %r1678}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1835, %r1832}, {%r320, %r326, %r323, %r329}, {%r1625, %r1685}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1844, %r1841}, {%r320, %r326, %r323, %r329}, {%r1634, %r1692}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1853, %r1850}, {%r320, %r326, %r323, %r329}, {%r1643, %r1699}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1783, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1785, %r1783, %r1787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1788, %r364, %r1790, %r1785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1792, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1794, %r1792, %r1796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1797, %r364, %r1799, %r1794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1801, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1803, %r1801, %r1805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1806, %r364, %r1808, %r1803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1810, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1812, %r1810, %r1814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1815, %r364, %r1817, %r1812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1819, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1821, %r1819, %r1823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1824, %r364, %r1826, %r1821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1828, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1830, %r1828, %r1832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1833, %r364, %r1835, %r1830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1837, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1839, %r1837, %r1841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1842, %r364, %r1844, %r1839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1846, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1848, %r1846, %r1850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1851, %r364, %r1853, %r1848;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1855, %r367, %r1790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1858, %r364, %r1787, %r1855;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1862, %r367, %r1799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1865, %r364, %r1796, %r1862;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1869, %r367, %r1808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1872, %r364, %r1805, %r1869;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1876, %r367, %r1817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1879, %r364, %r1814, %r1876;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1883, %r367, %r1826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1886, %r364, %r1823, %r1883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1890, %r367, %r1835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1893, %r364, %r1832, %r1890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1897, %r367, %r1844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1900, %r364, %r1841, %r1897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1904, %r367, %r1853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1907, %r364, %r1850, %r1904;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1911, %r1912}, {%r89, %r91, %r90, %r92}, {%r1788, %r1858}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1921, %r1922}, {%r89, %r91, %r90, %r92}, {%r1797, %r1865}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1931, %r1932}, {%r89, %r91, %r90, %r92}, {%r1806, %r1872}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1941, %r1942}, {%r89, %r91, %r90, %r92}, {%r1815, %r1879}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1951, %r1952}, {%r89, %r91, %r90, %r92}, {%r1824, %r1886}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1961, %r1962}, {%r89, %r91, %r90, %r92}, {%r1833, %r1893}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1971, %r1972}, {%r89, %r91, %r90, %r92}, {%r1842, %r1900}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1981, %r1982}, {%r89, %r91, %r90, %r92}, {%r1851, %r1907}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1991, %r12, %r1911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1994, %r12, %r1912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1997, %r12, %r1921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2000, %r12, %r1922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2003, %r12, %r1931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2006, %r12, %r1932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2009, %r12, %r1941;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2012, %r12, %r1942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2015, %r12, %r1951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2018, %r12, %r1952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2021, %r12, %r1961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2024, %r12, %r1962;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2027, %r12, %r1971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2030, %r12, %r1972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2033, %r12, %r1981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2036, %r12, %r1982;
	// end inline asm
	// begin inline asm
	mov.b32 %r2039, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2040, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2041, %r1991, %r2039;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2044, %r2041, %r2040;
	// end inline asm
	// begin inline asm
	mov.b32 %r2047, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2048, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2049, %r1994, %r2047;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2052, %r2049, %r2048;
	// end inline asm
	// begin inline asm
	mov.b32 %r2055, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2056, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2057, %r1997, %r2055;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2060, %r2057, %r2056;
	// end inline asm
	// begin inline asm
	mov.b32 %r2063, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2064, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2065, %r2000, %r2063;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2068, %r2065, %r2064;
	// end inline asm
	// begin inline asm
	mov.b32 %r2071, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2072, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2073, %r2003, %r2071;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2076, %r2073, %r2072;
	// end inline asm
	// begin inline asm
	mov.b32 %r2079, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2080, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2081, %r2006, %r2079;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2084, %r2081, %r2080;
	// end inline asm
	// begin inline asm
	mov.b32 %r2087, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2088, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2089, %r2009, %r2087;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2092, %r2089, %r2088;
	// end inline asm
	// begin inline asm
	mov.b32 %r2095, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2096, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2097, %r2012, %r2095;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2100, %r2097, %r2096;
	// end inline asm
	// begin inline asm
	mov.b32 %r2103, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2104, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2105, %r2015, %r2103;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2108, %r2105, %r2104;
	// end inline asm
	// begin inline asm
	mov.b32 %r2111, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2112, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2113, %r2018, %r2111;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2116, %r2113, %r2112;
	// end inline asm
	// begin inline asm
	mov.b32 %r2119, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2120, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2121, %r2021, %r2119;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2124, %r2121, %r2120;
	// end inline asm
	// begin inline asm
	mov.b32 %r2127, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2128, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2129, %r2024, %r2127;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2132, %r2129, %r2128;
	// end inline asm
	// begin inline asm
	mov.b32 %r2135, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2136, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2137, %r2027, %r2135;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2140, %r2137, %r2136;
	// end inline asm
	// begin inline asm
	mov.b32 %r2143, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2144, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2145, %r2030, %r2143;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2148, %r2145, %r2144;
	// end inline asm
	// begin inline asm
	mov.b32 %r2151, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2152, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2153, %r2033, %r2151;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2156, %r2153, %r2152;
	// end inline asm
	// begin inline asm
	mov.b32 %r2159, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2160, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2161, %r2036, %r2159;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2164, %r2161, %r2160;
	// end inline asm
	// begin inline asm
	mov.b32 %r2170, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2168, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2169, %r2170, %r2168;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2172, %r2044, %r2169;
	// end inline asm
	// begin inline asm
	mov.b32 %r2175, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2176, %r2170, %r2175;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2179, %r2052, %r2176;
	// end inline asm
	// begin inline asm
	mov.b32 %r2182, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2183, %r2170, %r2182;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2186, %r2060, %r2183;
	// end inline asm
	// begin inline asm
	mov.b32 %r2189, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2190, %r2170, %r2189;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2193, %r2068, %r2190;
	// end inline asm
	mov.u32 	%r2199, 25152;
	// begin inline asm
	prmt.b32 %r2196, %r2172, %r2186, %r2199;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2200, %r2179, %r2193, %r2199;
	// end inline asm
	shl.b32 	%r2207, %r2200, 4;
	mov.u32 	%r2205, 252645135;
	// begin inline asm
	lop3.b32 %r2204, %r2205, %r2196, %r2207, 202;
	// end inline asm
	xor.b32  	%r7723, %r2204, -2004318072;
	// begin inline asm
	mov.b32 %r2211, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2209, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2210, %r2211, %r2209;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2213, %r2076, %r2210;
	// end inline asm
	// begin inline asm
	mov.b32 %r2216, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2217, %r2211, %r2216;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2220, %r2084, %r2217;
	// end inline asm
	// begin inline asm
	mov.b32 %r2223, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2224, %r2211, %r2223;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2227, %r2092, %r2224;
	// end inline asm
	// begin inline asm
	mov.b32 %r2230, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2231, %r2211, %r2230;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2234, %r2100, %r2231;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2237, %r2213, %r2227, %r2199;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2241, %r2220, %r2234, %r2199;
	// end inline asm
	shl.b32 	%r2248, %r2241, 4;
	// begin inline asm
	lop3.b32 %r2245, %r2205, %r2237, %r2248, 202;
	// end inline asm
	xor.b32  	%r7724, %r2245, -2004318072;
	// begin inline asm
	mov.b32 %r2252, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2250, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2251, %r2252, %r2250;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2254, %r2108, %r2251;
	// end inline asm
	// begin inline asm
	mov.b32 %r2257, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2258, %r2252, %r2257;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2261, %r2116, %r2258;
	// end inline asm
	// begin inline asm
	mov.b32 %r2264, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2265, %r2252, %r2264;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2268, %r2124, %r2265;
	// end inline asm
	// begin inline asm
	mov.b32 %r2271, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2272, %r2252, %r2271;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2275, %r2132, %r2272;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2278, %r2254, %r2268, %r2199;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2282, %r2261, %r2275, %r2199;
	// end inline asm
	shl.b32 	%r2289, %r2282, 4;
	// begin inline asm
	lop3.b32 %r2286, %r2205, %r2278, %r2289, 202;
	// end inline asm
	xor.b32  	%r7725, %r2286, -2004318072;
	// begin inline asm
	mov.b32 %r2293, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2291, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2292, %r2293, %r2291;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2295, %r2140, %r2292;
	// end inline asm
	// begin inline asm
	mov.b32 %r2298, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2299, %r2293, %r2298;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2302, %r2148, %r2299;
	// end inline asm
	// begin inline asm
	mov.b32 %r2305, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2306, %r2293, %r2305;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2309, %r2156, %r2306;
	// end inline asm
	// begin inline asm
	mov.b32 %r2312, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2313, %r2293, %r2312;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2316, %r2164, %r2313;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2319, %r2295, %r2309, %r2199;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2323, %r2302, %r2316, %r2199;
	// end inline asm
	shl.b32 	%r2330, %r2323, 4;
	// begin inline asm
	lop3.b32 %r2327, %r2205, %r2319, %r2330, 202;
	// end inline asm
	xor.b32  	%r7726, %r2327, -2004318072;
	add.s64 	%rd80, %rd86, %rd14;
	st.shared.u32 	[%rd80], %r7723;
	add.s64 	%rd81, %rd86, %rd13;
	st.shared.u32 	[%rd81], %r7724;
	add.s64 	%rd82, %rd86, %rd12;
	st.shared.u32 	[%rd82], %r7725;
	add.s64 	%rd83, %rd86, %rd11;
	st.shared.u32 	[%rd83], %r7726;
	ld.shared.u32 	%r7790, [%rd76];
	ld.shared.u32 	%r7791, [%rd77];
	ld.shared.u32 	%r7792, [%rd78];
	ld.shared.u32 	%r7793, [%rd79];
	// begin inline asm
	mov.b32 %r2336, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2347, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2335, %r7790, -2004318072;
	// begin inline asm
	lop3.b32 %r2333, %r538, %r2335, %r2336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2337, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2338, %r2336, %r2337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2341, %r2333, %r2338;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2344, %r549, %r2335, %r2347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2348, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2349, %r2347, %r2348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2352, %r2344, %r2349;
	// end inline asm
	shr.u32 	%r2357, %r2335, 8;
	// begin inline asm
	lop3.b32 %r2355, %r538, %r2357, %r2336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2359, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2360, %r2336, %r2359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2363, %r2355, %r2360;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2366, %r549, %r2357, %r2347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2370, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2371, %r2347, %r2370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2374, %r2366, %r2371;
	// end inline asm
	// begin inline asm
	mov.b32 %r2382, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2393, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2381, %r7791, -2004318072;
	// begin inline asm
	lop3.b32 %r2379, %r538, %r2381, %r2382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2383, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2384, %r2382, %r2383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2387, %r2379, %r2384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2390, %r549, %r2381, %r2393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2394, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2395, %r2393, %r2394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2398, %r2390, %r2395;
	// end inline asm
	shr.u32 	%r2403, %r2381, 8;
	// begin inline asm
	lop3.b32 %r2401, %r538, %r2403, %r2382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2405, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2406, %r2382, %r2405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2409, %r2401, %r2406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2412, %r549, %r2403, %r2393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2416, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2417, %r2393, %r2416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2420, %r2412, %r2417;
	// end inline asm
	// begin inline asm
	mov.b32 %r2428, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2439, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2427, %r7792, -2004318072;
	// begin inline asm
	lop3.b32 %r2425, %r538, %r2427, %r2428, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2429, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2430, %r2428, %r2429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2433, %r2425, %r2430;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2436, %r549, %r2427, %r2439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2440, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2441, %r2439, %r2440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2444, %r2436, %r2441;
	// end inline asm
	shr.u32 	%r2449, %r2427, 8;
	// begin inline asm
	lop3.b32 %r2447, %r538, %r2449, %r2428, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2451, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2452, %r2428, %r2451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2455, %r2447, %r2452;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2458, %r549, %r2449, %r2439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2462, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2463, %r2439, %r2462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2466, %r2458, %r2463;
	// end inline asm
	// begin inline asm
	mov.b32 %r2474, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2485, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2473, %r7793, -2004318072;
	// begin inline asm
	lop3.b32 %r2471, %r538, %r2473, %r2474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2475, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2476, %r2474, %r2475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2479, %r2471, %r2476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2482, %r549, %r2473, %r2485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2486, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2487, %r2485, %r2486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2490, %r2482, %r2487;
	// end inline asm
	shr.u32 	%r2495, %r2473, 8;
	// begin inline asm
	lop3.b32 %r2493, %r538, %r2495, %r2474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2497, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2498, %r2474, %r2497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2501, %r2493, %r2498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2504, %r549, %r2495, %r2485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2508, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2509, %r2485, %r2508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2512, %r2504, %r2509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2515, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2517, %r2515, %r2341;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2520, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2522, %r2520, %r2352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2525, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2527, %r2525, %r2363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2530, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2532, %r2530, %r2374;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2535, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2537, %r2535, %r2387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2540, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2542, %r2540, %r2398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2545, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2547, %r2545, %r2409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2550, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2552, %r2550, %r2420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2555, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2557, %r2555, %r2433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2560, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2562, %r2560, %r2444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2565, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2567, %r2565, %r2455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2570, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2572, %r2570, %r2466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2575, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2577, %r2575, %r2479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2580, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2582, %r2580, %r2490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2585, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2587, %r2585, %r2501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2590, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2592, %r2590, %r2512;
	// end inline asm
	// begin inline asm
	mov.b32 %r2600, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2611, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2597, %r538, %r1051, %r2600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2601, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2602, %r2600, %r2601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2605, %r2597, %r2602;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2608, %r549, %r1051, %r2611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2612, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2613, %r2611, %r2612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2616, %r2608, %r2613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2619, %r538, %r1073, %r2600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2623, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2624, %r2600, %r2623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2627, %r2619, %r2624;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2630, %r549, %r1073, %r2611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2634, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2635, %r2611, %r2634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2638, %r2630, %r2635;
	// end inline asm
	// begin inline asm
	mov.b32 %r2646, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2657, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2643, %r538, %r1097, %r2646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2647, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2648, %r2646, %r2647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2651, %r2643, %r2648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2654, %r549, %r1097, %r2657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2658, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2659, %r2657, %r2658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2662, %r2654, %r2659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2665, %r538, %r1119, %r2646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2669, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2670, %r2646, %r2669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2673, %r2665, %r2670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2676, %r549, %r1119, %r2657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2680, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2681, %r2657, %r2680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2684, %r2676, %r2681;
	// end inline asm
	// begin inline asm
	mov.b32 %r2692, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2703, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2689, %r538, %r1143, %r2692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2693, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2694, %r2692, %r2693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2697, %r2689, %r2694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2700, %r549, %r1143, %r2703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2704, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2705, %r2703, %r2704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2708, %r2700, %r2705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2711, %r538, %r1165, %r2692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2715, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2716, %r2692, %r2715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2719, %r2711, %r2716;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2722, %r549, %r1165, %r2703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2726, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2727, %r2703, %r2726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2730, %r2722, %r2727;
	// end inline asm
	// begin inline asm
	mov.b32 %r2738, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2749, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2735, %r538, %r1189, %r2738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2739, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2740, %r2738, %r2739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2743, %r2735, %r2740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2746, %r549, %r1189, %r2749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2750, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2751, %r2749, %r2750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2754, %r2746, %r2751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2757, %r538, %r1211, %r2738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2761, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2762, %r2738, %r2761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2765, %r2757, %r2762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2768, %r549, %r1211, %r2749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2772, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2773, %r2749, %r2772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2776, %r2768, %r2773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2779, %r196, %r2605, %r2517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2783, %r196, %r2616, %r2522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2787, %r196, %r2627, %r2527;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2791, %r196, %r2638, %r2532;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2795, %r196, %r2651, %r2537;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2799, %r196, %r2662, %r2542;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2803, %r196, %r2673, %r2547;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2807, %r196, %r2684, %r2552;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2811, %r196, %r2697, %r2557;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2815, %r196, %r2708, %r2562;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2819, %r196, %r2719, %r2567;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2823, %r196, %r2730, %r2572;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2827, %r196, %r2743, %r2577;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2831, %r196, %r2754, %r2582;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2835, %r196, %r2765, %r2587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2839, %r196, %r2776, %r2592;
	// end inline asm
	// begin inline asm
	mov.b32 %r2848, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2859, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2845, %r538, %r1331, %r2848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2849, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2850, %r2848, %r2849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2853, %r2845, %r2850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2856, %r549, %r1331, %r2859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2860, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2861, %r2859, %r2860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2864, %r2856, %r2861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2867, %r538, %r1353, %r2848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2871, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2872, %r2848, %r2871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2875, %r2867, %r2872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2878, %r549, %r1353, %r2859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2882, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2883, %r2859, %r2882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2886, %r2878, %r2883;
	// end inline asm
	// begin inline asm
	mov.b32 %r2894, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2905, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2891, %r538, %r1377, %r2894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2895, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2896, %r2894, %r2895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2899, %r2891, %r2896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2902, %r549, %r1377, %r2905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2906, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2907, %r2905, %r2906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2910, %r2902, %r2907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2913, %r538, %r1399, %r2894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2917, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2918, %r2894, %r2917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2921, %r2913, %r2918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2924, %r549, %r1399, %r2905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2928, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2929, %r2905, %r2928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2932, %r2924, %r2929;
	// end inline asm
	// begin inline asm
	mov.b32 %r2940, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2951, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2937, %r538, %r1423, %r2940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2941, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2942, %r2940, %r2941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2945, %r2937, %r2942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2948, %r549, %r1423, %r2951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2952, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2953, %r2951, %r2952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2956, %r2948, %r2953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2959, %r538, %r1445, %r2940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2963, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2964, %r2940, %r2963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2967, %r2959, %r2964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2970, %r549, %r1445, %r2951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2974, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2975, %r2951, %r2974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2978, %r2970, %r2975;
	// end inline asm
	// begin inline asm
	mov.b32 %r2986, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2997, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2983, %r538, %r1469, %r2986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2987, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2988, %r2986, %r2987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2991, %r2983, %r2988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2994, %r549, %r1469, %r2997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2998, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2999, %r2997, %r2998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3002, %r2994, %r2999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3005, %r538, %r1491, %r2986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3009, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3010, %r2986, %r3009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3013, %r3005, %r3010;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3016, %r549, %r1491, %r2997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3020, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3021, %r2997, %r3020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3024, %r3016, %r3021;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3027, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r3027, %r2853, %r2779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3033, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3035, %r3033, %r2864, %r2783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3039, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3041, %r3039, %r2875, %r2787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3045, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3047, %r3045, %r2886, %r2791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3051, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3053, %r3051, %r2899, %r2795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3057, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3059, %r3057, %r2910, %r2799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3063, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3065, %r3063, %r2921, %r2803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3069, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3071, %r3069, %r2932, %r2807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3075, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3077, %r3075, %r2945, %r2811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3081, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3083, %r3081, %r2956, %r2815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3087, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3089, %r3087, %r2967, %r2819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3093, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3095, %r3093, %r2978, %r2823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3099, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3101, %r3099, %r2991, %r2827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3105, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3107, %r3105, %r3002, %r2831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3111, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3113, %r3111, %r3013, %r2835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3117, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3119, %r3117, %r3024, %r2839;
	// end inline asm
	// begin inline asm
	mov.b32 %r3128, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3139, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3125, %r538, %r539, %r3128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3129, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3130, %r3128, %r3129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3133, %r3125, %r3130;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3136, %r549, %r539, %r3139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3140, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3141, %r3139, %r3140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3144, %r3136, %r3141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3147, %r538, %r561, %r3128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3151, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3152, %r3128, %r3151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3155, %r3147, %r3152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3158, %r549, %r561, %r3139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3162, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3163, %r3139, %r3162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3166, %r3158, %r3163;
	// end inline asm
	// begin inline asm
	mov.b32 %r3174, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3185, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3171, %r538, %r585, %r3174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3175, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3176, %r3174, %r3175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3179, %r3171, %r3176;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3182, %r549, %r585, %r3185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3186, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3187, %r3185, %r3186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3190, %r3182, %r3187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3193, %r538, %r607, %r3174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3197, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3198, %r3174, %r3197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3201, %r3193, %r3198;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3204, %r549, %r607, %r3185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3208, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3209, %r3185, %r3208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3212, %r3204, %r3209;
	// end inline asm
	// begin inline asm
	mov.b32 %r3220, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3231, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3217, %r538, %r631, %r3220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3221, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3222, %r3220, %r3221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3225, %r3217, %r3222;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3228, %r549, %r631, %r3231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3232, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3233, %r3231, %r3232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3236, %r3228, %r3233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3239, %r538, %r653, %r3220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3243, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3244, %r3220, %r3243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3247, %r3239, %r3244;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3250, %r549, %r653, %r3231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3254, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3255, %r3231, %r3254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3258, %r3250, %r3255;
	// end inline asm
	// begin inline asm
	mov.b32 %r3266, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3277, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3263, %r538, %r677, %r3266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3267, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3268, %r3266, %r3267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3271, %r3263, %r3268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3274, %r549, %r677, %r3277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3278, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3279, %r3277, %r3278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3282, %r3274, %r3279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3285, %r538, %r699, %r3266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3289, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3290, %r3266, %r3289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3293, %r3285, %r3290;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3296, %r549, %r699, %r3277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3300, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3301, %r3277, %r3300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3304, %r3296, %r3301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3378, %r232, %r3133, %r3029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3375, %r232, %r3144, %r3035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3387, %r232, %r3155, %r3041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3384, %r232, %r3166, %r3047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3396, %r232, %r3179, %r3053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3393, %r232, %r3190, %r3059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3405, %r232, %r3201, %r3065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3402, %r232, %r3212, %r3071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3414, %r232, %r3225, %r3077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3411, %r232, %r3236, %r3083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3423, %r232, %r3247, %r3089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3420, %r232, %r3258, %r3095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3432, %r232, %r3271, %r3101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3429, %r232, %r3282, %r3107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3441, %r232, %r3293, %r3113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3438, %r232, %r3304, %r3119;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3371, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3373, %r3371, %r3375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3376, %r278, %r3378, %r3373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3380, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3382, %r3380, %r3384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3385, %r278, %r3387, %r3382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3389, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3391, %r3389, %r3393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3394, %r278, %r3396, %r3391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3398, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3400, %r3398, %r3402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3403, %r278, %r3405, %r3400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3407, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3409, %r3407, %r3411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3412, %r278, %r3414, %r3409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3416, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3418, %r3416, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3421, %r278, %r3423, %r3418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3425, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3427, %r3425, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3430, %r278, %r3432, %r3427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3434, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3436, %r3434, %r3438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3439, %r278, %r3441, %r3436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3443, %r281, %r3378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3446, %r278, %r3375, %r3443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3450, %r281, %r3387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3453, %r278, %r3384, %r3450;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3457, %r281, %r3396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3460, %r278, %r3393, %r3457;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3464, %r281, %r3405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3467, %r278, %r3402, %r3464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3471, %r281, %r3414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3474, %r278, %r3411, %r3471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3478, %r281, %r3423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3481, %r278, %r3420, %r3478;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3485, %r281, %r3432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3488, %r278, %r3429, %r3485;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3492, %r281, %r3441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3495, %r278, %r3438, %r3492;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3586, %r3583}, {%r320, %r326, %r323, %r329}, {%r3376, %r3446}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3595, %r3592}, {%r320, %r326, %r323, %r329}, {%r3385, %r3453}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3604, %r3601}, {%r320, %r326, %r323, %r329}, {%r3394, %r3460}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3613, %r3610}, {%r320, %r326, %r323, %r329}, {%r3403, %r3467}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3622, %r3619}, {%r320, %r326, %r323, %r329}, {%r3412, %r3474}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3631, %r3628}, {%r320, %r326, %r323, %r329}, {%r3421, %r3481}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3640, %r3637}, {%r320, %r326, %r323, %r329}, {%r3430, %r3488}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3649, %r3646}, {%r320, %r326, %r323, %r329}, {%r3439, %r3495}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3579, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3581, %r3579, %r3583;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3584, %r364, %r3586, %r3581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3588, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3590, %r3588, %r3592;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3593, %r364, %r3595, %r3590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3597, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3599, %r3597, %r3601;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3602, %r364, %r3604, %r3599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3606, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3608, %r3606, %r3610;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3611, %r364, %r3613, %r3608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3615, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3617, %r3615, %r3619;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3620, %r364, %r3622, %r3617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3624, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3626, %r3624, %r3628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3629, %r364, %r3631, %r3626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3633, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3635, %r3633, %r3637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3638, %r364, %r3640, %r3635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3642, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3644, %r3642, %r3646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3647, %r364, %r3649, %r3644;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3651, %r367, %r3586;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3654, %r364, %r3583, %r3651;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3658, %r367, %r3595;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3661, %r364, %r3592, %r3658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3665, %r367, %r3604;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3668, %r364, %r3601, %r3665;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3672, %r367, %r3613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3675, %r364, %r3610, %r3672;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3679, %r367, %r3622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3682, %r364, %r3619, %r3679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3686, %r367, %r3631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3689, %r364, %r3628, %r3686;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3693, %r367, %r3640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3696, %r364, %r3637, %r3693;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3700, %r367, %r3649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3703, %r364, %r3646, %r3700;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3707, %r3708}, {%r89, %r91, %r90, %r92}, {%r3584, %r3654}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3717, %r3718}, {%r89, %r91, %r90, %r92}, {%r3593, %r3661}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3727, %r3728}, {%r89, %r91, %r90, %r92}, {%r3602, %r3668}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3737, %r3738}, {%r89, %r91, %r90, %r92}, {%r3611, %r3675}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3747, %r3748}, {%r89, %r91, %r90, %r92}, {%r3620, %r3682}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3757, %r3758}, {%r89, %r91, %r90, %r92}, {%r3629, %r3689}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3767, %r3768}, {%r89, %r91, %r90, %r92}, {%r3638, %r3696}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3777, %r3778}, {%r89, %r91, %r90, %r92}, {%r3647, %r3703}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3787, %r12, %r3707;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3790, %r12, %r3708;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3793, %r12, %r3717;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3796, %r12, %r3718;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3799, %r12, %r3727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3802, %r12, %r3728;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3805, %r12, %r3737;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3808, %r12, %r3738;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3811, %r12, %r3747;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3814, %r12, %r3748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3817, %r12, %r3757;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3820, %r12, %r3758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3823, %r12, %r3767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3826, %r12, %r3768;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3829, %r12, %r3777;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3832, %r12, %r3778;
	// end inline asm
	// begin inline asm
	mov.b32 %r3835, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3836, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3837, %r3787, %r3835;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3840, %r3837, %r3836;
	// end inline asm
	// begin inline asm
	mov.b32 %r3843, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3844, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3845, %r3790, %r3843;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3848, %r3845, %r3844;
	// end inline asm
	// begin inline asm
	mov.b32 %r3851, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3852, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3853, %r3793, %r3851;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3856, %r3853, %r3852;
	// end inline asm
	// begin inline asm
	mov.b32 %r3859, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3860, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3861, %r3796, %r3859;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3864, %r3861, %r3860;
	// end inline asm
	// begin inline asm
	mov.b32 %r3867, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3868, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3869, %r3799, %r3867;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3872, %r3869, %r3868;
	// end inline asm
	// begin inline asm
	mov.b32 %r3875, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3876, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3877, %r3802, %r3875;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3880, %r3877, %r3876;
	// end inline asm
	// begin inline asm
	mov.b32 %r3883, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3884, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3885, %r3805, %r3883;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3888, %r3885, %r3884;
	// end inline asm
	// begin inline asm
	mov.b32 %r3891, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3892, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3893, %r3808, %r3891;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3896, %r3893, %r3892;
	// end inline asm
	// begin inline asm
	mov.b32 %r3899, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3900, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3901, %r3811, %r3899;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3904, %r3901, %r3900;
	// end inline asm
	// begin inline asm
	mov.b32 %r3907, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3908, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3909, %r3814, %r3907;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3912, %r3909, %r3908;
	// end inline asm
	// begin inline asm
	mov.b32 %r3915, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3916, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3917, %r3817, %r3915;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3920, %r3917, %r3916;
	// end inline asm
	// begin inline asm
	mov.b32 %r3923, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3924, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3925, %r3820, %r3923;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3928, %r3925, %r3924;
	// end inline asm
	// begin inline asm
	mov.b32 %r3931, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3932, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3933, %r3823, %r3931;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3936, %r3933, %r3932;
	// end inline asm
	// begin inline asm
	mov.b32 %r3939, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3940, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3941, %r3826, %r3939;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3944, %r3941, %r3940;
	// end inline asm
	// begin inline asm
	mov.b32 %r3947, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3948, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3949, %r3829, %r3947;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3952, %r3949, %r3948;
	// end inline asm
	// begin inline asm
	mov.b32 %r3955, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3956, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3957, %r3832, %r3955;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3960, %r3957, %r3956;
	// end inline asm
	// begin inline asm
	mov.b32 %r3966, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3964, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3965, %r3966, %r3964;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3968, %r3840, %r3965;
	// end inline asm
	// begin inline asm
	mov.b32 %r3971, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3972, %r3966, %r3971;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3975, %r3848, %r3972;
	// end inline asm
	// begin inline asm
	mov.b32 %r3978, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3979, %r3966, %r3978;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3982, %r3856, %r3979;
	// end inline asm
	// begin inline asm
	mov.b32 %r3985, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3986, %r3966, %r3985;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3989, %r3864, %r3986;
	// end inline asm
	// begin inline asm
	prmt.b32 %r3992, %r3968, %r3982, %r2199;
	// end inline asm
	// begin inline asm
	prmt.b32 %r3996, %r3975, %r3989, %r2199;
	// end inline asm
	shl.b32 	%r4003, %r3996, 4;
	// begin inline asm
	lop3.b32 %r4000, %r2205, %r3992, %r4003, 202;
	// end inline asm
	xor.b32  	%r7727, %r4000, -2004318072;
	// begin inline asm
	mov.b32 %r4007, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4005, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4006, %r4007, %r4005;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4009, %r3872, %r4006;
	// end inline asm
	// begin inline asm
	mov.b32 %r4012, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4013, %r4007, %r4012;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4016, %r3880, %r4013;
	// end inline asm
	// begin inline asm
	mov.b32 %r4019, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4020, %r4007, %r4019;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4023, %r3888, %r4020;
	// end inline asm
	// begin inline asm
	mov.b32 %r4026, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4027, %r4007, %r4026;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4030, %r3896, %r4027;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4033, %r4009, %r4023, %r2199;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4037, %r4016, %r4030, %r2199;
	// end inline asm
	shl.b32 	%r4044, %r4037, 4;
	// begin inline asm
	lop3.b32 %r4041, %r2205, %r4033, %r4044, 202;
	// end inline asm
	xor.b32  	%r7728, %r4041, -2004318072;
	// begin inline asm
	mov.b32 %r4048, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4046, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4047, %r4048, %r4046;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4050, %r3904, %r4047;
	// end inline asm
	// begin inline asm
	mov.b32 %r4053, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4054, %r4048, %r4053;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4057, %r3912, %r4054;
	// end inline asm
	// begin inline asm
	mov.b32 %r4060, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4061, %r4048, %r4060;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4064, %r3920, %r4061;
	// end inline asm
	// begin inline asm
	mov.b32 %r4067, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4068, %r4048, %r4067;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4071, %r3928, %r4068;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4074, %r4050, %r4064, %r2199;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4078, %r4057, %r4071, %r2199;
	// end inline asm
	shl.b32 	%r4085, %r4078, 4;
	// begin inline asm
	lop3.b32 %r4082, %r2205, %r4074, %r4085, 202;
	// end inline asm
	xor.b32  	%r7729, %r4082, -2004318072;
	// begin inline asm
	mov.b32 %r4089, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4087, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4088, %r4089, %r4087;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4091, %r3936, %r4088;
	// end inline asm
	// begin inline asm
	mov.b32 %r4094, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4095, %r4089, %r4094;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4098, %r3944, %r4095;
	// end inline asm
	// begin inline asm
	mov.b32 %r4101, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4102, %r4089, %r4101;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4105, %r3952, %r4102;
	// end inline asm
	// begin inline asm
	mov.b32 %r4108, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4109, %r4089, %r4108;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4112, %r3960, %r4109;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4115, %r4091, %r4105, %r2199;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4119, %r4098, %r4112, %r2199;
	// end inline asm
	shl.b32 	%r4126, %r4119, 4;
	// begin inline asm
	lop3.b32 %r4123, %r2205, %r4115, %r4126, 202;
	// end inline asm
	xor.b32  	%r7730, %r4123, -2004318072;
	st.shared.u32 	[%rd80], %r7727;
	st.shared.u32 	[%rd81], %r7728;
	st.shared.u32 	[%rd82], %r7729;
	st.shared.u32 	[%rd83], %r7730;
	ld.shared.u32 	%r7794, [%rd76];
	ld.shared.u32 	%r7795, [%rd77];
	ld.shared.u32 	%r7796, [%rd78];
	ld.shared.u32 	%r7797, [%rd79];
	// begin inline asm
	mov.b32 %r4132, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4143, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4131, %r7794, -2004318072;
	// begin inline asm
	lop3.b32 %r4129, %r538, %r4131, %r4132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4133, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4134, %r4132, %r4133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4137, %r4129, %r4134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4140, %r549, %r4131, %r4143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4144, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4145, %r4143, %r4144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4148, %r4140, %r4145;
	// end inline asm
	shr.u32 	%r4153, %r4131, 8;
	// begin inline asm
	lop3.b32 %r4151, %r538, %r4153, %r4132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4155, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4156, %r4132, %r4155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4159, %r4151, %r4156;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4162, %r549, %r4153, %r4143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4166, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4167, %r4143, %r4166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4170, %r4162, %r4167;
	// end inline asm
	// begin inline asm
	mov.b32 %r4178, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4189, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4177, %r7795, -2004318072;
	// begin inline asm
	lop3.b32 %r4175, %r538, %r4177, %r4178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4179, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4180, %r4178, %r4179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4183, %r4175, %r4180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4186, %r549, %r4177, %r4189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4190, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4191, %r4189, %r4190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4194, %r4186, %r4191;
	// end inline asm
	shr.u32 	%r4199, %r4177, 8;
	// begin inline asm
	lop3.b32 %r4197, %r538, %r4199, %r4178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4201, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4202, %r4178, %r4201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4205, %r4197, %r4202;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4208, %r549, %r4199, %r4189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4212, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4213, %r4189, %r4212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4216, %r4208, %r4213;
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4223, %r7796, -2004318072;
	// begin inline asm
	lop3.b32 %r4221, %r538, %r4223, %r4224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4225, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4226, %r4224, %r4225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4229, %r4221, %r4226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4232, %r549, %r4223, %r4235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4236, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4237, %r4235, %r4236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4240, %r4232, %r4237;
	// end inline asm
	shr.u32 	%r4245, %r4223, 8;
	// begin inline asm
	lop3.b32 %r4243, %r538, %r4245, %r4224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4247, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4248, %r4224, %r4247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4251, %r4243, %r4248;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4254, %r549, %r4245, %r4235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4258, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4259, %r4235, %r4258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4262, %r4254, %r4259;
	// end inline asm
	// begin inline asm
	mov.b32 %r4270, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4281, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4269, %r7797, -2004318072;
	// begin inline asm
	lop3.b32 %r4267, %r538, %r4269, %r4270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4271, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4272, %r4270, %r4271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4275, %r4267, %r4272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4278, %r549, %r4269, %r4281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4282, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4283, %r4281, %r4282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4286, %r4278, %r4283;
	// end inline asm
	shr.u32 	%r4291, %r4269, 8;
	// begin inline asm
	lop3.b32 %r4289, %r538, %r4291, %r4270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4293, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4294, %r4270, %r4293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4297, %r4289, %r4294;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4300, %r549, %r4291, %r4281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4304, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4305, %r4281, %r4304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4308, %r4300, %r4305;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4311, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4313, %r4311, %r4137;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4316, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4318, %r4316, %r4148;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4321, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4323, %r4321, %r4159;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4326, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4328, %r4326, %r4170;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4331, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4333, %r4331, %r4183;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4336, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4338, %r4336, %r4194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4341, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4343, %r4341, %r4205;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4346, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4348, %r4346, %r4216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4351, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4353, %r4351, %r4229;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4356, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4358, %r4356, %r4240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4361, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4363, %r4361, %r4251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4366, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4368, %r4366, %r4262;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4371, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4373, %r4371, %r4275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4376, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4378, %r4376, %r4286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4381, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4383, %r4381, %r4297;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4386, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4388, %r4386, %r4308;
	// end inline asm
	// begin inline asm
	mov.b32 %r4396, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4407, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4393, %r538, %r1331, %r4396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4397, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4398, %r4396, %r4397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4401, %r4393, %r4398;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4404, %r549, %r1331, %r4407, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4408, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4409, %r4407, %r4408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4412, %r4404, %r4409;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4415, %r538, %r1353, %r4396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4419, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4420, %r4396, %r4419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4423, %r4415, %r4420;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4426, %r549, %r1353, %r4407, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4430, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4431, %r4407, %r4430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4434, %r4426, %r4431;
	// end inline asm
	// begin inline asm
	mov.b32 %r4442, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4453, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4439, %r538, %r1377, %r4442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4443, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4444, %r4442, %r4443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4447, %r4439, %r4444;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4450, %r549, %r1377, %r4453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4454, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4455, %r4453, %r4454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4458, %r4450, %r4455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4461, %r538, %r1399, %r4442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4465, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4466, %r4442, %r4465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4469, %r4461, %r4466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4472, %r549, %r1399, %r4453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4476, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4477, %r4453, %r4476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4480, %r4472, %r4477;
	// end inline asm
	// begin inline asm
	mov.b32 %r4488, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4499, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4485, %r538, %r1423, %r4488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4489, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4490, %r4488, %r4489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4493, %r4485, %r4490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4496, %r549, %r1423, %r4499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4500, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4501, %r4499, %r4500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4504, %r4496, %r4501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4507, %r538, %r1445, %r4488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4511, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4512, %r4488, %r4511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4515, %r4507, %r4512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4518, %r549, %r1445, %r4499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4522, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4523, %r4499, %r4522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4526, %r4518, %r4523;
	// end inline asm
	// begin inline asm
	mov.b32 %r4534, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4545, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4531, %r538, %r1469, %r4534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4535, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4536, %r4534, %r4535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4539, %r4531, %r4536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4542, %r549, %r1469, %r4545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4546, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4547, %r4545, %r4546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4550, %r4542, %r4547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4553, %r538, %r1491, %r4534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4557, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4558, %r4534, %r4557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4561, %r4553, %r4558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4564, %r549, %r1491, %r4545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4568, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4569, %r4545, %r4568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4572, %r4564, %r4569;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4575, %r196, %r4401, %r4313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4579, %r196, %r4412, %r4318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4583, %r196, %r4423, %r4323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4587, %r196, %r4434, %r4328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4591, %r196, %r4447, %r4333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4595, %r196, %r4458, %r4338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4599, %r196, %r4469, %r4343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4603, %r196, %r4480, %r4348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4607, %r196, %r4493, %r4353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4611, %r196, %r4504, %r4358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4615, %r196, %r4515, %r4363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4619, %r196, %r4526, %r4368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4623, %r196, %r4539, %r4373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4627, %r196, %r4550, %r4378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4631, %r196, %r4561, %r4383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4635, %r196, %r4572, %r4388;
	// end inline asm
	// begin inline asm
	mov.b32 %r4644, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4655, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4641, %r538, %r539, %r4644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4645, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4646, %r4644, %r4645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4649, %r4641, %r4646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4652, %r549, %r539, %r4655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4656, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4657, %r4655, %r4656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4660, %r4652, %r4657;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4663, %r538, %r561, %r4644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4667, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4668, %r4644, %r4667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4671, %r4663, %r4668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4674, %r549, %r561, %r4655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4678, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4679, %r4655, %r4678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4682, %r4674, %r4679;
	// end inline asm
	// begin inline asm
	mov.b32 %r4690, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4701, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4687, %r538, %r585, %r4690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4691, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4692, %r4690, %r4691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4695, %r4687, %r4692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4698, %r549, %r585, %r4701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4702, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4703, %r4701, %r4702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4706, %r4698, %r4703;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4709, %r538, %r607, %r4690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4713, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4714, %r4690, %r4713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4717, %r4709, %r4714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4720, %r549, %r607, %r4701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4724, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4725, %r4701, %r4724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4728, %r4720, %r4725;
	// end inline asm
	// begin inline asm
	mov.b32 %r4736, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4747, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4733, %r538, %r631, %r4736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4737, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4738, %r4736, %r4737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4741, %r4733, %r4738;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4744, %r549, %r631, %r4747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4748, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4749, %r4747, %r4748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4752, %r4744, %r4749;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4755, %r538, %r653, %r4736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4759, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4760, %r4736, %r4759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4763, %r4755, %r4760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4766, %r549, %r653, %r4747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4770, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4771, %r4747, %r4770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4774, %r4766, %r4771;
	// end inline asm
	// begin inline asm
	mov.b32 %r4782, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4793, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4779, %r538, %r677, %r4782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4783, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4784, %r4782, %r4783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4787, %r4779, %r4784;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4790, %r549, %r677, %r4793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4794, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4795, %r4793, %r4794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4798, %r4790, %r4795;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4801, %r538, %r699, %r4782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4805, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4806, %r4782, %r4805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4809, %r4801, %r4806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4812, %r549, %r699, %r4793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4816, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4817, %r4793, %r4816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4820, %r4812, %r4817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4823, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4825, %r4823, %r4649, %r4575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4829, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4831, %r4829, %r4660, %r4579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4835, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4837, %r4835, %r4671, %r4583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4841, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4843, %r4841, %r4682, %r4587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4847, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4849, %r4847, %r4695, %r4591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4853, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4855, %r4853, %r4706, %r4595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4859, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4861, %r4859, %r4717, %r4599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4865, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4867, %r4865, %r4728, %r4603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4871, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4873, %r4871, %r4741, %r4607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4877, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4879, %r4877, %r4752, %r4611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4883, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4885, %r4883, %r4763, %r4615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4889, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4891, %r4889, %r4774, %r4619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4895, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4897, %r4895, %r4787, %r4623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4901, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4903, %r4901, %r4798, %r4627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4907, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4909, %r4907, %r4809, %r4631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4913, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4915, %r4913, %r4820, %r4635;
	// end inline asm
	// begin inline asm
	mov.b32 %r4924, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4935, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4921, %r538, %r2335, %r4924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4925, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4926, %r4924, %r4925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4929, %r4921, %r4926;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4932, %r549, %r2335, %r4935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4936, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4937, %r4935, %r4936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4940, %r4932, %r4937;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4943, %r538, %r2357, %r4924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4947, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4948, %r4924, %r4947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4951, %r4943, %r4948;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4954, %r549, %r2357, %r4935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4958, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4959, %r4935, %r4958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4962, %r4954, %r4959;
	// end inline asm
	// begin inline asm
	mov.b32 %r4970, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4981, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4967, %r538, %r2381, %r4970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4971, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4972, %r4970, %r4971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4975, %r4967, %r4972;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4978, %r549, %r2381, %r4981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4982, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4983, %r4981, %r4982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4986, %r4978, %r4983;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4989, %r538, %r2403, %r4970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4993, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4994, %r4970, %r4993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4997, %r4989, %r4994;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5000, %r549, %r2403, %r4981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5004, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5005, %r4981, %r5004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5008, %r5000, %r5005;
	// end inline asm
	// begin inline asm
	mov.b32 %r5016, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5027, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5013, %r538, %r2427, %r5016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5017, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5018, %r5016, %r5017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5021, %r5013, %r5018;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5024, %r549, %r2427, %r5027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5028, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5029, %r5027, %r5028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5032, %r5024, %r5029;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5035, %r538, %r2449, %r5016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5039, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5040, %r5016, %r5039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5043, %r5035, %r5040;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5046, %r549, %r2449, %r5027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5050, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5051, %r5027, %r5050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5054, %r5046, %r5051;
	// end inline asm
	// begin inline asm
	mov.b32 %r5062, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5073, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5059, %r538, %r2473, %r5062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5063, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5064, %r5062, %r5063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5067, %r5059, %r5064;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5070, %r549, %r2473, %r5073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5074, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5075, %r5073, %r5074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5078, %r5070, %r5075;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5081, %r538, %r2495, %r5062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5085, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5086, %r5062, %r5085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5089, %r5081, %r5086;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5092, %r549, %r2495, %r5073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5096, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5097, %r5073, %r5096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5100, %r5092, %r5097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5174, %r232, %r4929, %r4825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5171, %r232, %r4940, %r4831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5183, %r232, %r4951, %r4837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5180, %r232, %r4962, %r4843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5192, %r232, %r4975, %r4849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5189, %r232, %r4986, %r4855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5201, %r232, %r4997, %r4861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5198, %r232, %r5008, %r4867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5210, %r232, %r5021, %r4873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5207, %r232, %r5032, %r4879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5219, %r232, %r5043, %r4885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5216, %r232, %r5054, %r4891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5228, %r232, %r5067, %r4897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5225, %r232, %r5078, %r4903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5237, %r232, %r5089, %r4909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5234, %r232, %r5100, %r4915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5167, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5169, %r5167, %r5171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5172, %r278, %r5174, %r5169;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5176, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5178, %r5176, %r5180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5181, %r278, %r5183, %r5178;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5185, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5187, %r5185, %r5189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5190, %r278, %r5192, %r5187;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5194, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5196, %r5194, %r5198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5199, %r278, %r5201, %r5196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5203, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5205, %r5203, %r5207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5208, %r278, %r5210, %r5205;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5212, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5214, %r5212, %r5216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5217, %r278, %r5219, %r5214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5221, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5223, %r5221, %r5225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5226, %r278, %r5228, %r5223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5230, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5232, %r5230, %r5234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5235, %r278, %r5237, %r5232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5239, %r281, %r5174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5242, %r278, %r5171, %r5239;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5246, %r281, %r5183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5249, %r278, %r5180, %r5246;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5253, %r281, %r5192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5256, %r278, %r5189, %r5253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5260, %r281, %r5201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5263, %r278, %r5198, %r5260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5267, %r281, %r5210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5270, %r278, %r5207, %r5267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5274, %r281, %r5219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5277, %r278, %r5216, %r5274;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5281, %r281, %r5228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5284, %r278, %r5225, %r5281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5288, %r281, %r5237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5291, %r278, %r5234, %r5288;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5382, %r5379}, {%r320, %r326, %r323, %r329}, {%r5172, %r5242}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5391, %r5388}, {%r320, %r326, %r323, %r329}, {%r5181, %r5249}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5400, %r5397}, {%r320, %r326, %r323, %r329}, {%r5190, %r5256}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5409, %r5406}, {%r320, %r326, %r323, %r329}, {%r5199, %r5263}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5418, %r5415}, {%r320, %r326, %r323, %r329}, {%r5208, %r5270}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5427, %r5424}, {%r320, %r326, %r323, %r329}, {%r5217, %r5277}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5436, %r5433}, {%r320, %r326, %r323, %r329}, {%r5226, %r5284}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5445, %r5442}, {%r320, %r326, %r323, %r329}, {%r5235, %r5291}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5375, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5377, %r5375, %r5379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5380, %r364, %r5382, %r5377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5384, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5386, %r5384, %r5388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5389, %r364, %r5391, %r5386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5393, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5395, %r5393, %r5397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5398, %r364, %r5400, %r5395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5402, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5404, %r5402, %r5406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5407, %r364, %r5409, %r5404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5411, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5413, %r5411, %r5415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5416, %r364, %r5418, %r5413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5420, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5422, %r5420, %r5424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5425, %r364, %r5427, %r5422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5429, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5431, %r5429, %r5433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5434, %r364, %r5436, %r5431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5438, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5440, %r5438, %r5442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5443, %r364, %r5445, %r5440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5447, %r367, %r5382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5450, %r364, %r5379, %r5447;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5454, %r367, %r5391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5457, %r364, %r5388, %r5454;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5461, %r367, %r5400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5464, %r364, %r5397, %r5461;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5468, %r367, %r5409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5471, %r364, %r5406, %r5468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5475, %r367, %r5418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5478, %r364, %r5415, %r5475;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5482, %r367, %r5427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5485, %r364, %r5424, %r5482;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5489, %r367, %r5436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5492, %r364, %r5433, %r5489;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5496, %r367, %r5445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5499, %r364, %r5442, %r5496;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5503, %r5504}, {%r89, %r91, %r90, %r92}, {%r5380, %r5450}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5513, %r5514}, {%r89, %r91, %r90, %r92}, {%r5389, %r5457}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5523, %r5524}, {%r89, %r91, %r90, %r92}, {%r5398, %r5464}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5533, %r5534}, {%r89, %r91, %r90, %r92}, {%r5407, %r5471}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5543, %r5544}, {%r89, %r91, %r90, %r92}, {%r5416, %r5478}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5553, %r5554}, {%r89, %r91, %r90, %r92}, {%r5425, %r5485}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5563, %r5564}, {%r89, %r91, %r90, %r92}, {%r5434, %r5492}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5573, %r5574}, {%r89, %r91, %r90, %r92}, {%r5443, %r5499}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5583, %r12, %r5503;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5586, %r12, %r5504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5589, %r12, %r5513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5592, %r12, %r5514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5595, %r12, %r5523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5598, %r12, %r5524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5601, %r12, %r5533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5604, %r12, %r5534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5607, %r12, %r5543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5610, %r12, %r5544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5613, %r12, %r5553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5616, %r12, %r5554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5619, %r12, %r5563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5622, %r12, %r5564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5625, %r12, %r5573;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5628, %r12, %r5574;
	// end inline asm
	// begin inline asm
	mov.b32 %r5631, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5632, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5633, %r5583, %r5631;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5636, %r5633, %r5632;
	// end inline asm
	// begin inline asm
	mov.b32 %r5639, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5640, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5641, %r5586, %r5639;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5644, %r5641, %r5640;
	// end inline asm
	// begin inline asm
	mov.b32 %r5647, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5648, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5649, %r5589, %r5647;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5652, %r5649, %r5648;
	// end inline asm
	// begin inline asm
	mov.b32 %r5655, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5656, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5657, %r5592, %r5655;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5660, %r5657, %r5656;
	// end inline asm
	// begin inline asm
	mov.b32 %r5663, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5664, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5665, %r5595, %r5663;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5668, %r5665, %r5664;
	// end inline asm
	// begin inline asm
	mov.b32 %r5671, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5672, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5673, %r5598, %r5671;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5676, %r5673, %r5672;
	// end inline asm
	// begin inline asm
	mov.b32 %r5679, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5680, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5681, %r5601, %r5679;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5684, %r5681, %r5680;
	// end inline asm
	// begin inline asm
	mov.b32 %r5687, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5688, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5689, %r5604, %r5687;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5692, %r5689, %r5688;
	// end inline asm
	// begin inline asm
	mov.b32 %r5695, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5696, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5697, %r5607, %r5695;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5700, %r5697, %r5696;
	// end inline asm
	// begin inline asm
	mov.b32 %r5703, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5704, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5705, %r5610, %r5703;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5708, %r5705, %r5704;
	// end inline asm
	// begin inline asm
	mov.b32 %r5711, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5712, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5713, %r5613, %r5711;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5716, %r5713, %r5712;
	// end inline asm
	// begin inline asm
	mov.b32 %r5719, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5720, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5721, %r5616, %r5719;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5724, %r5721, %r5720;
	// end inline asm
	// begin inline asm
	mov.b32 %r5727, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5728, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5729, %r5619, %r5727;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5732, %r5729, %r5728;
	// end inline asm
	// begin inline asm
	mov.b32 %r5735, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5736, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5737, %r5622, %r5735;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5740, %r5737, %r5736;
	// end inline asm
	// begin inline asm
	mov.b32 %r5743, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5744, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5745, %r5625, %r5743;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5748, %r5745, %r5744;
	// end inline asm
	// begin inline asm
	mov.b32 %r5751, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5752, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5753, %r5628, %r5751;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5756, %r5753, %r5752;
	// end inline asm
	// begin inline asm
	mov.b32 %r5762, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5760, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5761, %r5762, %r5760;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5764, %r5636, %r5761;
	// end inline asm
	// begin inline asm
	mov.b32 %r5767, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5768, %r5762, %r5767;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5771, %r5644, %r5768;
	// end inline asm
	// begin inline asm
	mov.b32 %r5774, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5775, %r5762, %r5774;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5778, %r5652, %r5775;
	// end inline asm
	// begin inline asm
	mov.b32 %r5781, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5782, %r5762, %r5781;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5785, %r5660, %r5782;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5788, %r5764, %r5778, %r2199;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5792, %r5771, %r5785, %r2199;
	// end inline asm
	shl.b32 	%r5799, %r5792, 4;
	// begin inline asm
	lop3.b32 %r5796, %r2205, %r5788, %r5799, 202;
	// end inline asm
	xor.b32  	%r7731, %r5796, -2004318072;
	// begin inline asm
	mov.b32 %r5803, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5801, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5802, %r5803, %r5801;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5805, %r5668, %r5802;
	// end inline asm
	// begin inline asm
	mov.b32 %r5808, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5809, %r5803, %r5808;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5812, %r5676, %r5809;
	// end inline asm
	// begin inline asm
	mov.b32 %r5815, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5816, %r5803, %r5815;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5819, %r5684, %r5816;
	// end inline asm
	// begin inline asm
	mov.b32 %r5822, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5823, %r5803, %r5822;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5826, %r5692, %r5823;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5829, %r5805, %r5819, %r2199;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5833, %r5812, %r5826, %r2199;
	// end inline asm
	shl.b32 	%r5840, %r5833, 4;
	// begin inline asm
	lop3.b32 %r5837, %r2205, %r5829, %r5840, 202;
	// end inline asm
	xor.b32  	%r7732, %r5837, -2004318072;
	// begin inline asm
	mov.b32 %r5844, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5842, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5843, %r5844, %r5842;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5846, %r5700, %r5843;
	// end inline asm
	// begin inline asm
	mov.b32 %r5849, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5850, %r5844, %r5849;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5853, %r5708, %r5850;
	// end inline asm
	// begin inline asm
	mov.b32 %r5856, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5857, %r5844, %r5856;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5860, %r5716, %r5857;
	// end inline asm
	// begin inline asm
	mov.b32 %r5863, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5864, %r5844, %r5863;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5867, %r5724, %r5864;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5870, %r5846, %r5860, %r2199;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5874, %r5853, %r5867, %r2199;
	// end inline asm
	shl.b32 	%r5881, %r5874, 4;
	// begin inline asm
	lop3.b32 %r5878, %r2205, %r5870, %r5881, 202;
	// end inline asm
	xor.b32  	%r7733, %r5878, -2004318072;
	// begin inline asm
	mov.b32 %r5885, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5883, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5884, %r5885, %r5883;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5887, %r5732, %r5884;
	// end inline asm
	// begin inline asm
	mov.b32 %r5890, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5891, %r5885, %r5890;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5894, %r5740, %r5891;
	// end inline asm
	// begin inline asm
	mov.b32 %r5897, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5898, %r5885, %r5897;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5901, %r5748, %r5898;
	// end inline asm
	// begin inline asm
	mov.b32 %r5904, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5905, %r5885, %r5904;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5908, %r5756, %r5905;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5911, %r5887, %r5901, %r2199;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5915, %r5894, %r5908, %r2199;
	// end inline asm
	shl.b32 	%r5922, %r5915, 4;
	// begin inline asm
	lop3.b32 %r5919, %r2205, %r5911, %r5922, 202;
	// end inline asm
	xor.b32  	%r7734, %r5919, -2004318072;
	st.shared.u32 	[%rd80], %r7731;
	st.shared.u32 	[%rd81], %r7732;
	st.shared.u32 	[%rd82], %r7733;
	st.shared.u32 	[%rd83], %r7734;
	ld.shared.u32 	%r7798, [%rd76];
	ld.shared.u32 	%r7799, [%rd77];
	ld.shared.u32 	%r7800, [%rd78];
	ld.shared.u32 	%r7801, [%rd79];
	// begin inline asm
	mov.b32 %r5928, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5939, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5927, %r7798, -2004318072;
	// begin inline asm
	lop3.b32 %r5925, %r538, %r5927, %r5928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5929, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5930, %r5928, %r5929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5933, %r5925, %r5930;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5936, %r549, %r5927, %r5939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5940, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5941, %r5939, %r5940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5944, %r5936, %r5941;
	// end inline asm
	shr.u32 	%r5949, %r5927, 8;
	// begin inline asm
	lop3.b32 %r5947, %r538, %r5949, %r5928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5951, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5952, %r5928, %r5951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5955, %r5947, %r5952;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5958, %r549, %r5949, %r5939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5962, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5963, %r5939, %r5962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5966, %r5958, %r5963;
	// end inline asm
	// begin inline asm
	mov.b32 %r5974, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5985, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5973, %r7799, -2004318072;
	// begin inline asm
	lop3.b32 %r5971, %r538, %r5973, %r5974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5975, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5976, %r5974, %r5975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5979, %r5971, %r5976;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5982, %r549, %r5973, %r5985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5986, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5987, %r5985, %r5986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5990, %r5982, %r5987;
	// end inline asm
	shr.u32 	%r5995, %r5973, 8;
	// begin inline asm
	lop3.b32 %r5993, %r538, %r5995, %r5974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5997, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5998, %r5974, %r5997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6001, %r5993, %r5998;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6004, %r549, %r5995, %r5985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6008, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6009, %r5985, %r6008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6012, %r6004, %r6009;
	// end inline asm
	// begin inline asm
	mov.b32 %r6020, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6031, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6019, %r7800, -2004318072;
	// begin inline asm
	lop3.b32 %r6017, %r538, %r6019, %r6020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6021, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6022, %r6020, %r6021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6025, %r6017, %r6022;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6028, %r549, %r6019, %r6031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6032, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6033, %r6031, %r6032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6036, %r6028, %r6033;
	// end inline asm
	shr.u32 	%r6041, %r6019, 8;
	// begin inline asm
	lop3.b32 %r6039, %r538, %r6041, %r6020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6043, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6044, %r6020, %r6043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6047, %r6039, %r6044;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6050, %r549, %r6041, %r6031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6054, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6055, %r6031, %r6054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6058, %r6050, %r6055;
	// end inline asm
	// begin inline asm
	mov.b32 %r6066, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6077, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6065, %r7801, -2004318072;
	// begin inline asm
	lop3.b32 %r6063, %r538, %r6065, %r6066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6067, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6068, %r6066, %r6067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6071, %r6063, %r6068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6074, %r549, %r6065, %r6077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6078, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6079, %r6077, %r6078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6082, %r6074, %r6079;
	// end inline asm
	shr.u32 	%r6087, %r6065, 8;
	// begin inline asm
	lop3.b32 %r6085, %r538, %r6087, %r6066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6089, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6090, %r6066, %r6089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6093, %r6085, %r6090;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6096, %r549, %r6087, %r6077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6100, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6101, %r6077, %r6100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6104, %r6096, %r6101;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6107, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6109, %r6107, %r5933;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6112, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6114, %r6112, %r5944;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6117, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6119, %r6117, %r5955;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6122, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6124, %r6122, %r5966;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6127, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6129, %r6127, %r5979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6132, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6134, %r6132, %r5990;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6137, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6139, %r6137, %r6001;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6142, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6144, %r6142, %r6012;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6147, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6149, %r6147, %r6025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6152, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6154, %r6152, %r6036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6157, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6159, %r6157, %r6047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6162, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6164, %r6162, %r6058;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6167, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6169, %r6167, %r6071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6172, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6174, %r6172, %r6082;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6177, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6179, %r6177, %r6093;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6182, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6184, %r6182, %r6104;
	// end inline asm
	// begin inline asm
	mov.b32 %r6192, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6203, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6189, %r538, %r539, %r6192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6193, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6194, %r6192, %r6193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6197, %r6189, %r6194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6200, %r549, %r539, %r6203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6204, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6205, %r6203, %r6204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6208, %r6200, %r6205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6211, %r538, %r561, %r6192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6215, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6216, %r6192, %r6215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6219, %r6211, %r6216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6222, %r549, %r561, %r6203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6226, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6227, %r6203, %r6226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6230, %r6222, %r6227;
	// end inline asm
	// begin inline asm
	mov.b32 %r6238, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6249, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6235, %r538, %r585, %r6238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6239, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6240, %r6238, %r6239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6243, %r6235, %r6240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6246, %r549, %r585, %r6249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6250, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6251, %r6249, %r6250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6254, %r6246, %r6251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6257, %r538, %r607, %r6238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6261, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6262, %r6238, %r6261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6265, %r6257, %r6262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6268, %r549, %r607, %r6249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6272, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6273, %r6249, %r6272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6276, %r6268, %r6273;
	// end inline asm
	// begin inline asm
	mov.b32 %r6284, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6295, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6281, %r538, %r631, %r6284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6285, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6286, %r6284, %r6285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6289, %r6281, %r6286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6292, %r549, %r631, %r6295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6296, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6297, %r6295, %r6296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6300, %r6292, %r6297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6303, %r538, %r653, %r6284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6307, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6308, %r6284, %r6307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6311, %r6303, %r6308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6314, %r549, %r653, %r6295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6318, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6319, %r6295, %r6318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6322, %r6314, %r6319;
	// end inline asm
	// begin inline asm
	mov.b32 %r6330, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6341, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6327, %r538, %r677, %r6330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6331, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6332, %r6330, %r6331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6335, %r6327, %r6332;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6338, %r549, %r677, %r6341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6342, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6343, %r6341, %r6342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6346, %r6338, %r6343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6349, %r538, %r699, %r6330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6353, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6354, %r6330, %r6353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6357, %r6349, %r6354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6360, %r549, %r699, %r6341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6364, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6365, %r6341, %r6364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6368, %r6360, %r6365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6371, %r196, %r6197, %r6109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6375, %r196, %r6208, %r6114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6379, %r196, %r6219, %r6119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6383, %r196, %r6230, %r6124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6387, %r196, %r6243, %r6129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6391, %r196, %r6254, %r6134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6395, %r196, %r6265, %r6139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6399, %r196, %r6276, %r6144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6403, %r196, %r6289, %r6149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6407, %r196, %r6300, %r6154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6411, %r196, %r6311, %r6159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6415, %r196, %r6322, %r6164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6419, %r196, %r6335, %r6169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6423, %r196, %r6346, %r6174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6427, %r196, %r6357, %r6179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6431, %r196, %r6368, %r6184;
	// end inline asm
	// begin inline asm
	mov.b32 %r6440, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6451, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6437, %r538, %r2335, %r6440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6441, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6442, %r6440, %r6441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6445, %r6437, %r6442;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6448, %r549, %r2335, %r6451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6452, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6453, %r6451, %r6452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6456, %r6448, %r6453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6459, %r538, %r2357, %r6440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6463, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6464, %r6440, %r6463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6467, %r6459, %r6464;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6470, %r549, %r2357, %r6451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6474, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6475, %r6451, %r6474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6478, %r6470, %r6475;
	// end inline asm
	// begin inline asm
	mov.b32 %r6486, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6497, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6483, %r538, %r2381, %r6486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6487, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6488, %r6486, %r6487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6491, %r6483, %r6488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6494, %r549, %r2381, %r6497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6498, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6499, %r6497, %r6498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6502, %r6494, %r6499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6505, %r538, %r2403, %r6486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6509, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6510, %r6486, %r6509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6513, %r6505, %r6510;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6516, %r549, %r2403, %r6497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6520, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6521, %r6497, %r6520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6524, %r6516, %r6521;
	// end inline asm
	// begin inline asm
	mov.b32 %r6532, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6543, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6529, %r538, %r2427, %r6532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6533, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6534, %r6532, %r6533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6537, %r6529, %r6534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6540, %r549, %r2427, %r6543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6544, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6545, %r6543, %r6544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6548, %r6540, %r6545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6551, %r538, %r2449, %r6532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6555, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6556, %r6532, %r6555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6559, %r6551, %r6556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6562, %r549, %r2449, %r6543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6566, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6567, %r6543, %r6566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6570, %r6562, %r6567;
	// end inline asm
	// begin inline asm
	mov.b32 %r6578, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6589, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6575, %r538, %r2473, %r6578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6579, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6580, %r6578, %r6579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6583, %r6575, %r6580;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6586, %r549, %r2473, %r6589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6590, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6591, %r6589, %r6590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6594, %r6586, %r6591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6597, %r538, %r2495, %r6578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6601, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6602, %r6578, %r6601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6605, %r6597, %r6602;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6608, %r549, %r2495, %r6589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6612, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6613, %r6589, %r6612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6616, %r6608, %r6613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6619, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6621, %r6619, %r6445, %r6371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6625, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6627, %r6625, %r6456, %r6375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6631, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6633, %r6631, %r6467, %r6379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6637, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6639, %r6637, %r6478, %r6383;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6643, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6645, %r6643, %r6491, %r6387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6649, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6651, %r6649, %r6502, %r6391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6655, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6657, %r6655, %r6513, %r6395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6661, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6663, %r6661, %r6524, %r6399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6667, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6669, %r6667, %r6537, %r6403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6673, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6675, %r6673, %r6548, %r6407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6679, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6681, %r6679, %r6559, %r6411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6685, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6687, %r6685, %r6570, %r6415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6691, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6693, %r6691, %r6583, %r6419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6697, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6699, %r6697, %r6594, %r6423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6703, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6705, %r6703, %r6605, %r6427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6709, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6711, %r6709, %r6616, %r6431;
	// end inline asm
	// begin inline asm
	mov.b32 %r6720, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6731, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6717, %r538, %r4131, %r6720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6721, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6722, %r6720, %r6721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6725, %r6717, %r6722;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6728, %r549, %r4131, %r6731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6732, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6733, %r6731, %r6732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6736, %r6728, %r6733;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6739, %r538, %r4153, %r6720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6743, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6744, %r6720, %r6743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6747, %r6739, %r6744;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6750, %r549, %r4153, %r6731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6754, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6755, %r6731, %r6754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6758, %r6750, %r6755;
	// end inline asm
	// begin inline asm
	mov.b32 %r6766, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6777, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6763, %r538, %r4177, %r6766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6767, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6768, %r6766, %r6767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6771, %r6763, %r6768;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6774, %r549, %r4177, %r6777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6778, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6779, %r6777, %r6778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6782, %r6774, %r6779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6785, %r538, %r4199, %r6766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6789, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6790, %r6766, %r6789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6793, %r6785, %r6790;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6796, %r549, %r4199, %r6777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6800, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6801, %r6777, %r6800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6804, %r6796, %r6801;
	// end inline asm
	// begin inline asm
	mov.b32 %r6812, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6823, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6809, %r538, %r4223, %r6812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6813, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6814, %r6812, %r6813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6817, %r6809, %r6814;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6820, %r549, %r4223, %r6823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6824, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6825, %r6823, %r6824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6828, %r6820, %r6825;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6831, %r538, %r4245, %r6812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6835, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6836, %r6812, %r6835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6839, %r6831, %r6836;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6842, %r549, %r4245, %r6823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6846, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6847, %r6823, %r6846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6850, %r6842, %r6847;
	// end inline asm
	// begin inline asm
	mov.b32 %r6858, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6869, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6855, %r538, %r4269, %r6858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6859, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6860, %r6858, %r6859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6863, %r6855, %r6860;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6866, %r549, %r4269, %r6869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6870, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6871, %r6869, %r6870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6874, %r6866, %r6871;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6877, %r538, %r4291, %r6858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6881, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6882, %r6858, %r6881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6885, %r6877, %r6882;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6888, %r549, %r4291, %r6869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6892, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6893, %r6869, %r6892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6896, %r6888, %r6893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6970, %r232, %r6725, %r6621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6967, %r232, %r6736, %r6627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6979, %r232, %r6747, %r6633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6976, %r232, %r6758, %r6639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6988, %r232, %r6771, %r6645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6985, %r232, %r6782, %r6651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6997, %r232, %r6793, %r6657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6994, %r232, %r6804, %r6663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7006, %r232, %r6817, %r6669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7003, %r232, %r6828, %r6675;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7015, %r232, %r6839, %r6681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7012, %r232, %r6850, %r6687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7024, %r232, %r6863, %r6693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7021, %r232, %r6874, %r6699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7033, %r232, %r6885, %r6705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7030, %r232, %r6896, %r6711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6963, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6965, %r6963, %r6967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6968, %r278, %r6970, %r6965;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6972, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6974, %r6972, %r6976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6977, %r278, %r6979, %r6974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6981, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6983, %r6981, %r6985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6986, %r278, %r6988, %r6983;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6990, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6992, %r6990, %r6994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6995, %r278, %r6997, %r6992;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6999, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7001, %r6999, %r7003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7004, %r278, %r7006, %r7001;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7008, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7010, %r7008, %r7012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7013, %r278, %r7015, %r7010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7017, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7019, %r7017, %r7021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7022, %r278, %r7024, %r7019;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7026, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7028, %r7026, %r7030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7031, %r278, %r7033, %r7028;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7035, %r281, %r6970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7038, %r278, %r6967, %r7035;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7042, %r281, %r6979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7045, %r278, %r6976, %r7042;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7049, %r281, %r6988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7052, %r278, %r6985, %r7049;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7056, %r281, %r6997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7059, %r278, %r6994, %r7056;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7063, %r281, %r7006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7066, %r278, %r7003, %r7063;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7070, %r281, %r7015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7073, %r278, %r7012, %r7070;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7077, %r281, %r7024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7080, %r278, %r7021, %r7077;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7084, %r281, %r7033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7087, %r278, %r7030, %r7084;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7178, %r7175}, {%r320, %r326, %r323, %r329}, {%r6968, %r7038}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7187, %r7184}, {%r320, %r326, %r323, %r329}, {%r6977, %r7045}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7196, %r7193}, {%r320, %r326, %r323, %r329}, {%r6986, %r7052}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7205, %r7202}, {%r320, %r326, %r323, %r329}, {%r6995, %r7059}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7214, %r7211}, {%r320, %r326, %r323, %r329}, {%r7004, %r7066}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7223, %r7220}, {%r320, %r326, %r323, %r329}, {%r7013, %r7073}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7232, %r7229}, {%r320, %r326, %r323, %r329}, {%r7022, %r7080}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7241, %r7238}, {%r320, %r326, %r323, %r329}, {%r7031, %r7087}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7171, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7173, %r7171, %r7175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7176, %r364, %r7178, %r7173;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7180, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7182, %r7180, %r7184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7185, %r364, %r7187, %r7182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7189, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7191, %r7189, %r7193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7194, %r364, %r7196, %r7191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7198, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7200, %r7198, %r7202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7203, %r364, %r7205, %r7200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7207, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7209, %r7207, %r7211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7212, %r364, %r7214, %r7209;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7216, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7218, %r7216, %r7220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7221, %r364, %r7223, %r7218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7225, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7227, %r7225, %r7229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7230, %r364, %r7232, %r7227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7234, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7236, %r7234, %r7238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7239, %r364, %r7241, %r7236;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7243, %r367, %r7178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7246, %r364, %r7175, %r7243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7250, %r367, %r7187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7253, %r364, %r7184, %r7250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7257, %r367, %r7196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7260, %r364, %r7193, %r7257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7264, %r367, %r7205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7267, %r364, %r7202, %r7264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7271, %r367, %r7214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7274, %r364, %r7211, %r7271;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7278, %r367, %r7223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7281, %r364, %r7220, %r7278;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7285, %r367, %r7232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7288, %r364, %r7229, %r7285;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7292, %r367, %r7241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7295, %r364, %r7238, %r7292;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7299, %r7300}, {%r89, %r91, %r90, %r92}, {%r7176, %r7246}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7309, %r7310}, {%r89, %r91, %r90, %r92}, {%r7185, %r7253}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7319, %r7320}, {%r89, %r91, %r90, %r92}, {%r7194, %r7260}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7329, %r7330}, {%r89, %r91, %r90, %r92}, {%r7203, %r7267}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7339, %r7340}, {%r89, %r91, %r90, %r92}, {%r7212, %r7274}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7349, %r7350}, {%r89, %r91, %r90, %r92}, {%r7221, %r7281}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7359, %r7360}, {%r89, %r91, %r90, %r92}, {%r7230, %r7288}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7369, %r7370}, {%r89, %r91, %r90, %r92}, {%r7239, %r7295}, {%r7378, %r7378};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7379, %r12, %r7299;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7382, %r12, %r7300;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7385, %r12, %r7309;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7388, %r12, %r7310;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7391, %r12, %r7319;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7394, %r12, %r7320;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7397, %r12, %r7329;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7400, %r12, %r7330;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7403, %r12, %r7339;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7406, %r12, %r7340;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7409, %r12, %r7349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7412, %r12, %r7350;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7415, %r12, %r7359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7418, %r12, %r7360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7421, %r12, %r7369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7424, %r12, %r7370;
	// end inline asm
	// begin inline asm
	mov.b32 %r7427, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7428, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7429, %r7379, %r7427;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7432, %r7429, %r7428;
	// end inline asm
	// begin inline asm
	mov.b32 %r7435, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7436, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7437, %r7382, %r7435;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7440, %r7437, %r7436;
	// end inline asm
	// begin inline asm
	mov.b32 %r7443, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7444, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7445, %r7385, %r7443;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7448, %r7445, %r7444;
	// end inline asm
	// begin inline asm
	mov.b32 %r7451, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7452, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7453, %r7388, %r7451;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7456, %r7453, %r7452;
	// end inline asm
	// begin inline asm
	mov.b32 %r7459, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7460, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7461, %r7391, %r7459;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7464, %r7461, %r7460;
	// end inline asm
	// begin inline asm
	mov.b32 %r7467, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7468, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7469, %r7394, %r7467;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7472, %r7469, %r7468;
	// end inline asm
	// begin inline asm
	mov.b32 %r7475, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7476, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7477, %r7397, %r7475;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7480, %r7477, %r7476;
	// end inline asm
	// begin inline asm
	mov.b32 %r7483, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7484, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7485, %r7400, %r7483;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7488, %r7485, %r7484;
	// end inline asm
	// begin inline asm
	mov.b32 %r7491, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7492, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7493, %r7403, %r7491;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7496, %r7493, %r7492;
	// end inline asm
	// begin inline asm
	mov.b32 %r7499, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7500, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7501, %r7406, %r7499;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7504, %r7501, %r7500;
	// end inline asm
	// begin inline asm
	mov.b32 %r7507, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7508, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7509, %r7409, %r7507;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7512, %r7509, %r7508;
	// end inline asm
	// begin inline asm
	mov.b32 %r7515, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7516, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7517, %r7412, %r7515;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7520, %r7517, %r7516;
	// end inline asm
	// begin inline asm
	mov.b32 %r7523, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7524, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7525, %r7415, %r7523;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7528, %r7525, %r7524;
	// end inline asm
	// begin inline asm
	mov.b32 %r7531, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7532, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7533, %r7418, %r7531;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7536, %r7533, %r7532;
	// end inline asm
	// begin inline asm
	mov.b32 %r7539, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7540, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7541, %r7421, %r7539;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7544, %r7541, %r7540;
	// end inline asm
	// begin inline asm
	mov.b32 %r7547, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7548, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7549, %r7424, %r7547;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7552, %r7549, %r7548;
	// end inline asm
	// begin inline asm
	mov.b32 %r7558, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7556, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7557, %r7558, %r7556;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7560, %r7432, %r7557;
	// end inline asm
	// begin inline asm
	mov.b32 %r7563, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7564, %r7558, %r7563;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7567, %r7440, %r7564;
	// end inline asm
	// begin inline asm
	mov.b32 %r7570, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7571, %r7558, %r7570;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7574, %r7448, %r7571;
	// end inline asm
	// begin inline asm
	mov.b32 %r7577, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7578, %r7558, %r7577;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7581, %r7456, %r7578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7584, %r7560, %r7574, %r2199;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7588, %r7567, %r7581, %r2199;
	// end inline asm
	shl.b32 	%r7595, %r7588, 4;
	// begin inline asm
	lop3.b32 %r7592, %r2205, %r7584, %r7595, 202;
	// end inline asm
	xor.b32  	%r7735, %r7592, -2004318072;
	// begin inline asm
	mov.b32 %r7599, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7597, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7598, %r7599, %r7597;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7601, %r7464, %r7598;
	// end inline asm
	// begin inline asm
	mov.b32 %r7604, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7605, %r7599, %r7604;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7608, %r7472, %r7605;
	// end inline asm
	// begin inline asm
	mov.b32 %r7611, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7612, %r7599, %r7611;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7615, %r7480, %r7612;
	// end inline asm
	// begin inline asm
	mov.b32 %r7618, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7619, %r7599, %r7618;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7622, %r7488, %r7619;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7625, %r7601, %r7615, %r2199;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7629, %r7608, %r7622, %r2199;
	// end inline asm
	shl.b32 	%r7636, %r7629, 4;
	// begin inline asm
	lop3.b32 %r7633, %r2205, %r7625, %r7636, 202;
	// end inline asm
	xor.b32  	%r7736, %r7633, -2004318072;
	// begin inline asm
	mov.b32 %r7640, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7638, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7639, %r7640, %r7638;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7642, %r7496, %r7639;
	// end inline asm
	// begin inline asm
	mov.b32 %r7645, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7646, %r7640, %r7645;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7649, %r7504, %r7646;
	// end inline asm
	// begin inline asm
	mov.b32 %r7652, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7653, %r7640, %r7652;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7656, %r7512, %r7653;
	// end inline asm
	// begin inline asm
	mov.b32 %r7659, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7660, %r7640, %r7659;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7663, %r7520, %r7660;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7666, %r7642, %r7656, %r2199;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7670, %r7649, %r7663, %r2199;
	// end inline asm
	shl.b32 	%r7677, %r7670, 4;
	// begin inline asm
	lop3.b32 %r7674, %r2205, %r7666, %r7677, 202;
	// end inline asm
	xor.b32  	%r7737, %r7674, -2004318072;
	// begin inline asm
	mov.b32 %r7681, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7679, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7680, %r7681, %r7679;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7683, %r7528, %r7680;
	// end inline asm
	// begin inline asm
	mov.b32 %r7686, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7687, %r7681, %r7686;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7690, %r7536, %r7687;
	// end inline asm
	// begin inline asm
	mov.b32 %r7693, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7694, %r7681, %r7693;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7697, %r7544, %r7694;
	// end inline asm
	// begin inline asm
	mov.b32 %r7700, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7701, %r7681, %r7700;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7704, %r7552, %r7701;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7707, %r7683, %r7697, %r2199;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7711, %r7690, %r7704, %r2199;
	// end inline asm
	shl.b32 	%r7718, %r7711, 4;
	// begin inline asm
	lop3.b32 %r7715, %r2205, %r7707, %r7718, 202;
	// end inline asm
	xor.b32  	%r7738, %r7715, -2004318072;
	st.shared.u32 	[%rd80], %r7735;
	st.shared.u32 	[%rd81], %r7736;
	st.shared.u32 	[%rd82], %r7737;
	st.shared.u32 	[%rd83], %r7738;
	add.s32 	%r7789, %r7789, -64;
	add.s64 	%rd86, %rd86, 8324;
	setp.eq.s32 	%p217, %r7789, 0;
	@%p217 bra 	LBB0_114;
	bra.uni 	LBB0_113;
LBB0_114:                               // %guard_pass10507
                                        //   in Loop: Header=BB0_112 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7744, [%rd9];
	ld.shared.u32 	%r7745, [%rd10+128];
	ld.shared.u32 	%r7752, [%rd10+4];
	ld.shared.u32 	%r7753, [%rd10+132];
	// begin inline asm
	prmt.b32 %r7739, %r7744, %r7745, %r517;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7743, %r7744, %r7745, %r521;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7747, %r7752, %r7753, %r517;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7751, %r7752, %r7753, %r521;
	// end inline asm
	selp.b32 	%r7755, %r7743, %r7739, %p216;
	shfl.sync.bfly.b32	%r160, %r7755, 8, 31, -1;
	selp.b32 	%r7756, %r7751, %r7747, %p216;
	shfl.sync.bfly.b32	%r161, %r7756, 8, 31, -1;
	setp.eq.s32 	%p219, %r110, 0;
	@%p219 bra 	LBB0_116;
// %bb.115:                             // %L29131
                                        //   in Loop: Header=BB0_112 Depth=1
	selp.b32 	%r7757, %r161, %r7751, %p216;
	selp.b32 	%r7758, %r7747, %r161, %p216;
	selp.b32 	%r7759, %r160, %r7743, %p216;
	selp.b32 	%r7760, %r7739, %r160, %p216;
	shl.b32 	%r7761, %r110, 12;
	add.s32 	%r7762, %r97, %r7761;
	mul.wide.s32 	%rd84, %r7762, 4;
	add.s64 	%rd85, %rd3, %rd84;
	st.global.v4.u32 	[%rd85], {%r7760, %r7758, %r7759, %r7757};
	bra.uni 	LBB0_116;
LBB0_117:                               // %L29349
	st.global.u32 	[%rd4], %r7378;
	ret;
LBB0_1:                                 // %L8
	mov.u64 	%rd30, exception1;
	cvta.global.u64 	%rd31, %rd30;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd31;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L149
	mov.u32 	%r169, 2;
	st.global.u32 	[%rd4], %r169;
	mov.u64 	%rd33, exception2324;
	cvta.global.u64 	%rd34, %rd33;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd34;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_119:                               // %L29448
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9510, 
	(
	);
	} // callseq 5
	mov.u64 	%rd41, exception1;
	cvta.global.u64 	%rd42, %rd41;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd42;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_118:                               // %L29445
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9510, 
	(
	);
	} // callseq 9
	mov.u64 	%rd47, exception1;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 10
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 11
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_144:                               // %L29442
	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9510, 
	(
	);
	} // callseq 15
	mov.u64 	%rd61, exception1;
	cvta.global.u64 	%rd62, %rd61;
	{ // callseq 16, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd62;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 16
	{ // callseq 17, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 17
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
