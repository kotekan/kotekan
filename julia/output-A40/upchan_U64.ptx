// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func julia_AssertionError_9600
()
.noreturn
{
	trap;
}
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_9611
(
	.param .align 8 .b8 julia_power_by_squaring_9611_param_0[16],
	.param .b64 julia_power_by_squaring_9611_param_1,
	.param .b64 julia_power_by_squaring_9611_param_2
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2329[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<239>;
	.reg .b16 	%rs<1185>;
	.reg .b32 	%r<7828>;
	.reg .f32 	%f<922>;
	.reg .b64 	%rd<110>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r166, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd22, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r167, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r167, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd39, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd23, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r168, %r4, 9;
	or.b32  	%r169, %r2, %r3;
	or.b32  	%r170, %r169, %r168;
	mul.wide.u32 	%rd45, %r170, 4;
	add.s64 	%rd4, %rd39, %rd45;
	mov.u32 	%r171, 1;
	st.global.u32 	[%rd4], %r171;
	ld.global.u32 	%r5, [%rd23];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L205
	ld.param.u64 	%rd27, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd27];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L215
	ld.param.u64 	%rd31, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd31];
	sub.s32 	%r172, %r6, %r5;
	and.b32  	%r173, %r172, 255;
	setp.ne.s32 	%p6, %r173, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L221
	ld.param.u64 	%rd35, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd35];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 4096;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L231
	not.b32 	%r174, %r7;
	add.s32 	%r175, %r174, %r8;
	and.b32  	%r176, %r175, 3;
	setp.eq.s32 	%p12, %r176, 0;
	@%p12 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %L341
	bfe.u32 	%r17, %r3, 1, 1;
	and.b32  	%r18, %r3, 1;
	bfe.u32 	%r20, %r3, 2, 1;
	shr.u32 	%r21, %r3, 4;
	shl.b32 	%r182, %r21, 1;
	shl.b32 	%r183, %r20, 2;
	shl.b32 	%r184, %r18, 3;
	shl.b32 	%r185, %r17, 4;
	or.b32  	%r186, %r184, %r185;
	or.b32  	%r187, %r183, %r186;
	or.b32  	%r188, %r182, %r187;
	bfe.u32 	%r23, %r3, 3, 1;
	or.b32  	%r24, %r23, %r188;
	or.b32  	%r25, %r24, 32;
	mov.f32 	%f185, 0f40000000;
	mov.f32 	%f186, 0f437F0000;
	div.approx.f32 	%f1, %f186, %f185;
	cvt.rn.f32.s32 	%f187, %r24;
	sub.f32 	%f188, %f187, %f1;
	mov.f32 	%f217, 0f42800000;
	div.approx.f32 	%f3, %f188, %f217;
	setp.eq.f32 	%p18, %f3, 0f00000000;
	mov.f32 	%f889, 0f3F800000;
	mov.f32 	%f882, %f889;
	@%p18 bra 	LBB0_10;
// %bb.9:                               // %L551
	sin.approx.f32 	%f218, %f3;
	div.approx.f32 	%f882, %f218, %f3;
LBB0_10:                                // %L554
	cvt.rn.f32.s32 	%f221, %r25;
	sub.f32 	%f222, %f221, %f1;
	div.approx.f32 	%f8, %f222, %f217;
	setp.eq.f32 	%p24, %f8, 0f00000000;
	mov.f32 	%f883, %f889;
	@%p24 bra 	LBB0_12;
// %bb.11:                              // %L571
	sin.approx.f32 	%f252, %f8;
	div.approx.f32 	%f883, %f252, %f8;
LBB0_12:                                // %L574
	or.b32  	%r206, %r24, 64;
	or.b32  	%r27, %r24, 96;
	cvt.rn.f32.s32 	%f256, %r206;
	sub.f32 	%f257, %f256, %f1;
	div.approx.f32 	%f12, %f257, %f217;
	setp.eq.f32 	%p30, %f12, 0f00000000;
	mov.f32 	%f884, %f889;
	@%p30 bra 	LBB0_14;
// %bb.13:                              // %L652
	sin.approx.f32 	%f287, %f12;
	div.approx.f32 	%f884, %f287, %f12;
LBB0_14:                                // %L655
	cvt.rn.f32.s32 	%f290, %r27;
	sub.f32 	%f291, %f290, %f1;
	div.approx.f32 	%f17, %f291, %f217;
	setp.eq.f32 	%p36, %f17, 0f00000000;
	mov.f32 	%f885, %f889;
	@%p36 bra 	LBB0_16;
// %bb.15:                              // %L672
	sin.approx.f32 	%f321, %f17;
	div.approx.f32 	%f885, %f321, %f17;
LBB0_16:                                // %L675
	shl.b32 	%r9, %r3, 2;
	or.b32  	%r224, %r24, 128;
	or.b32  	%r29, %r24, 160;
	cvt.rn.f32.s32 	%f325, %r224;
	sub.f32 	%f326, %f325, %f1;
	div.approx.f32 	%f21, %f326, %f217;
	setp.eq.f32 	%p42, %f21, 0f00000000;
	mov.f32 	%f886, %f889;
	@%p42 bra 	LBB0_18;
// %bb.17:                              // %L753
	sin.approx.f32 	%f356, %f21;
	div.approx.f32 	%f886, %f356, %f21;
LBB0_18:                                // %L756
	and.b32  	%r10, %r9, 4;
	shl.b32 	%r177, %r3, 1;
	and.b32  	%r14, %r3, 18;
	cvt.rn.f32.s32 	%f359, %r29;
	sub.f32 	%f360, %f359, %f1;
	div.approx.f32 	%f26, %f360, %f217;
	setp.eq.f32 	%p48, %f26, 0f00000000;
	mov.f32 	%f887, %f889;
	@%p48 bra 	LBB0_20;
// %bb.19:                              // %L773
	sin.approx.f32 	%f390, %f26;
	div.approx.f32 	%f887, %f390, %f26;
LBB0_20:                                // %L776
	and.b32  	%r11, %r177, 8;
	or.b32  	%r178, %r14, %r10;
	or.b32  	%r242, %r24, 192;
	or.b32  	%r31, %r24, 224;
	cvt.rn.f32.s32 	%f394, %r242;
	sub.f32 	%f395, %f394, %f1;
	div.approx.f32 	%f30, %f395, %f217;
	setp.eq.f32 	%p54, %f30, 0f00000000;
	mov.f32 	%f888, %f889;
	@%p54 bra 	LBB0_22;
// %bb.21:                              // %L854
	sin.approx.f32 	%f425, %f30;
	div.approx.f32 	%f888, %f425, %f30;
LBB0_22:                                // %L857
	and.b32  	%r12, %r9, 32;
	or.b32  	%r179, %r178, %r11;
	cvt.rn.f32.s32 	%f428, %r31;
	sub.f32 	%f429, %f428, %f1;
	div.approx.f32 	%f35, %f429, %f217;
	setp.eq.f32 	%p60, %f35, 0f00000000;
	@%p60 bra 	LBB0_24;
// %bb.23:                              // %L874
	sin.approx.f32 	%f459, %f35;
	div.approx.f32 	%f889, %f459, %f35;
LBB0_24:                                // %L877
	or.b32  	%r180, %r179, %r12;
	mul.lo.s32 	%r33, %r24, 63;
	cvt.rn.f32.s32 	%f462, %r33;
	div.approx.f32 	%f38, %f462, %f217;
	abs.f32 	%f892, %f38;
	setp.lt.f32 	%p61, %f892, 0f40000000;
	@%p61 bra 	LBB0_36;
// %bb.25:
	setp.gtu.f32 	%p62, %f892, 0f4B800000;
	@%p62 bra 	LBB0_32;
	bra.uni 	LBB0_26;
LBB0_32:
	mov.b32 	%r35, %f892;
	and.b32  	%r260, %r35, 8388607;
	or.b32  	%r7786, %r260, 1065353216;
	mov.b32 	%f891, %r7786;
	add.s32 	%r261, %r35, -1073741824;
	and.b32  	%r7787, %r261, -8388608;
	setp.eq.s32 	%p68, %r7787, 0;
	@%p68 bra 	LBB0_35;
// %bb.33:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f473, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f472,%f473;
	// end inline asm
LBB0_34:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r262, %r7787, 192937984;
	add.s32 	%r263, %r262, %r7786;
	mov.b32 	%f474, %r263;
	mul.f32 	%f475, %f472, %f474;
	sub.f32 	%f476, %f474, %f475;
	fma.rn.f32 	%f477, %f476, %f472, %f475;
	sub.f32 	%f478, %f474, %f477;
	fma.rz.f32 	%f479, %f478, %f472, %f477;
	cvt.rzi.f32.f32 	%f480, %f479;
	sub.f32 	%f891, %f474, %f480;
	sub.s32 	%r7787, %r7787, %r262;
	mov.b32 	%r7786, %f891;
	setp.ne.s32 	%p69, %r7787, 0;
	setp.ne.s32 	%p70, %r7786, 0;
	and.pred  	%p71, %p69, %p70;
	@%p71 bra 	LBB0_34;
LBB0_35:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p72, %r35, 2139095039;
	selp.f32 	%f481, 0f7FFFFFFF, 0f4B800000, %p72;
	mul.f32 	%f482, %f891, 0f34000000;
	mul.f32 	%f892, %f481, %f482;
	bra.uni 	LBB0_36;
LBB0_26:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f465, %f892, %f185;
	cvt.rzi.f32.f32 	%f890, %f465;
	fma.rn.f32 	%f41, %f890, 0fC0000000, %f892;
	mov.b32 	%r34, %f41;
	setp.lt.u32 	%p63, %r34, 1073741824;
	@%p63 bra 	LBB0_31;
// %bb.27:
	setp.lt.u32 	%p64, %r34, -2147483647;
	@%p64 bra 	LBB0_29;
// %bb.28:
	add.f32 	%f470, %f890, 0fBF800000;
	setp.lt.f32 	%p67, %f41, 0fC0000000;
	add.f32 	%f471, %f470, 0fBF800000;
	selp.f32 	%f890, %f471, %f470, %p67;
	bra.uni 	LBB0_31;
LBB0_29:
	add.f32 	%f890, %f890, 0f3F800000;
	setp.ltu.f32 	%p65, %f41, 0f40800000;
	@%p65 bra 	LBB0_31;
// %bb.30:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f466, %f890, 0f3F800000;
	fma.rn.f32 	%f468, %f185, 0fC0400000, %f41;
	setp.ge.f32 	%p66, %f468, 0f00000000;
	add.f32 	%f469, %f466, 0f3F800000;
	selp.f32 	%f890, %f469, %f466, %p66;
LBB0_31:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f892, %f890, 0fC0000000, %f892;
LBB0_36:                                // %__internal_fmodf_kernel.exit.i
	shr.u32 	%r181, %r180, 1;
	abs.f32 	%f483, %f892;
	setp.gtu.f32 	%p73, %f483, 0f7F800000;
	@%p73 bra 	LBB0_38;
// %bb.37:
	mov.b32 	%r264, %f38;
	and.b32  	%r265, %r264, -2147483648;
	mov.b32 	%r266, %f892;
	or.b32  	%r267, %r265, %r266;
	mov.b32 	%f892, %r267;
LBB0_38:                                // %__nv_fmodf.exit
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd46, %r181, 4;
	add.s32 	%r276, %r33, 2016;
	cvt.rn.f32.s32 	%f514, %r276;
	div.approx.f32 	%f57, %f514, %f217;
	abs.f32 	%f896, %f57;
	setp.lt.f32 	%p81, %f896, 0f40000000;
	@%p81 bra 	LBB0_50;
// %bb.39:
	setp.gtu.f32 	%p82, %f896, 0f4B800000;
	@%p82 bra 	LBB0_46;
	bra.uni 	LBB0_40;
LBB0_46:
	mov.b32 	%r43, %f896;
	and.b32  	%r277, %r43, 8388607;
	or.b32  	%r7788, %r277, 1065353216;
	mov.b32 	%f895, %r7788;
	add.s32 	%r278, %r43, -1073741824;
	and.b32  	%r7789, %r278, -8388608;
	setp.eq.s32 	%p88, %r7789, 0;
	@%p88 bra 	LBB0_49;
// %bb.47:                              // %__nv_fmaf_rn.exit4.i.i.i1163.preheader
	mov.f32 	%f525, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f524,%f525;
	// end inline asm
LBB0_48:                                // %__nv_fmaf_rn.exit4.i.i.i1163
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r279, %r7789, 192937984;
	add.s32 	%r280, %r279, %r7788;
	mov.b32 	%f526, %r280;
	mul.f32 	%f527, %f524, %f526;
	sub.f32 	%f528, %f526, %f527;
	fma.rn.f32 	%f529, %f528, %f524, %f527;
	sub.f32 	%f530, %f526, %f529;
	fma.rz.f32 	%f531, %f530, %f524, %f529;
	cvt.rzi.f32.f32 	%f532, %f531;
	sub.f32 	%f895, %f526, %f532;
	sub.s32 	%r7789, %r7789, %r279;
	mov.b32 	%r7788, %f895;
	setp.ne.s32 	%p89, %r7789, 0;
	setp.ne.s32 	%p90, %r7788, 0;
	and.pred  	%p91, %p89, %p90;
	@%p91 bra 	LBB0_48;
LBB0_49:                                // %__internal_fmodf_slowpath_mod.exit.i.i1165
	setp.gt.u32 	%p92, %r43, 2139095039;
	selp.f32 	%f533, 0f7FFFFFFF, 0f4B800000, %p92;
	mul.f32 	%f534, %f895, 0f34000000;
	mul.f32 	%f896, %f533, %f534;
	bra.uni 	LBB0_50;
LBB0_40:                                // %__nv_fast_fdividef.exit.i.i.i1135
	div.approx.f32 	%f517, %f896, %f185;
	cvt.rzi.f32.f32 	%f894, %f517;
	fma.rn.f32 	%f60, %f894, 0fC0000000, %f896;
	mov.b32 	%r42, %f60;
	setp.lt.u32 	%p83, %r42, 1073741824;
	@%p83 bra 	LBB0_45;
// %bb.41:
	setp.lt.u32 	%p84, %r42, -2147483647;
	@%p84 bra 	LBB0_43;
// %bb.42:
	add.f32 	%f522, %f894, 0fBF800000;
	setp.lt.f32 	%p87, %f60, 0fC0000000;
	add.f32 	%f523, %f522, 0fBF800000;
	selp.f32 	%f894, %f523, %f522, %p87;
	bra.uni 	LBB0_45;
LBB0_43:
	add.f32 	%f894, %f894, 0f3F800000;
	setp.ltu.f32 	%p85, %f60, 0f40800000;
	@%p85 bra 	LBB0_45;
// %bb.44:                              // %__nv_fmaf_rn.exit.i.i.i1140
	add.f32 	%f518, %f894, 0f3F800000;
	fma.rn.f32 	%f520, %f185, 0fC0400000, %f60;
	setp.ge.f32 	%p86, %f520, 0f00000000;
	add.f32 	%f521, %f518, 0f3F800000;
	selp.f32 	%f894, %f521, %f518, %p86;
LBB0_45:                                // %__internal_fmodf_fastpath_quot.exit.i.i1144
	fma.rn.f32 	%f896, %f894, 0fC0000000, %f896;
LBB0_50:                                // %__internal_fmodf_kernel.exit.i1169
	add.s64 	%rd47, %rd1, %rd46;
	abs.f32 	%f535, %f896;
	setp.gtu.f32 	%p93, %f535, 0f7F800000;
	@%p93 bra 	LBB0_52;
// %bb.51:
	mov.b32 	%r281, %f57;
	and.b32  	%r282, %r281, -2147483648;
	mov.b32 	%r283, %f896;
	or.b32  	%r284, %r282, %r283;
	mov.b32 	%f896, %r284;
LBB0_52:                                // %__nv_fmodf.exit1170
	ld.global.u32 	%r15, [%rd47];
	mov.u64 	%rd48, 2;
	mov.u64 	%rd49, 6;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9611, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd50, [retval0+0];
	} // callseq 2
	setp.ne.s64 	%p101, %rd50, 64;
	@%p101 bra 	LBB0_124;
// %bb.53:                              // %L974
	shr.u32 	%r19, %r3, 2;
	and.b32  	%r299, %r3, 3;
	shl.b32 	%r300, %r299, 1;
	neg.s32 	%r52, %r300;
	mul.lo.s32 	%r53, %r52, %r19;
	cvt.rn.f32.s32 	%f74, %r53;
	mov.f32 	%f568, 0f41000000;
	div.approx.f32 	%f75, %f74, %f568;
	abs.f32 	%f900, %f75;
	setp.lt.f32 	%p102, %f900, 0f40000000;
	@%p102 bra 	LBB0_65;
// %bb.54:
	setp.gtu.f32 	%p103, %f900, 0f4B800000;
	@%p103 bra 	LBB0_61;
	bra.uni 	LBB0_55;
LBB0_61:
	mov.b32 	%r55, %f900;
	and.b32  	%r301, %r55, 8388607;
	or.b32  	%r7790, %r301, 1065353216;
	mov.b32 	%f899, %r7790;
	add.s32 	%r302, %r55, -1073741824;
	and.b32  	%r7791, %r302, -8388608;
	setp.eq.s32 	%p109, %r7791, 0;
	@%p109 bra 	LBB0_64;
// %bb.62:                              // %__nv_fmaf_rn.exit4.i.i.i1209.preheader
	mov.f32 	%f578, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f577,%f578;
	// end inline asm
LBB0_63:                                // %__nv_fmaf_rn.exit4.i.i.i1209
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r303, %r7791, 192937984;
	add.s32 	%r304, %r303, %r7790;
	mov.b32 	%f579, %r304;
	mul.f32 	%f580, %f577, %f579;
	sub.f32 	%f581, %f579, %f580;
	fma.rn.f32 	%f582, %f581, %f577, %f580;
	sub.f32 	%f583, %f579, %f582;
	fma.rz.f32 	%f584, %f583, %f577, %f582;
	cvt.rzi.f32.f32 	%f585, %f584;
	sub.f32 	%f899, %f579, %f585;
	sub.s32 	%r7791, %r7791, %r303;
	mov.b32 	%r7790, %f899;
	setp.ne.s32 	%p110, %r7791, 0;
	setp.ne.s32 	%p111, %r7790, 0;
	and.pred  	%p112, %p110, %p111;
	@%p112 bra 	LBB0_63;
LBB0_64:                                // %__internal_fmodf_slowpath_mod.exit.i.i1211
	setp.gt.u32 	%p113, %r55, 2139095039;
	selp.f32 	%f586, 0f7FFFFFFF, 0f4B800000, %p113;
	mul.f32 	%f587, %f899, 0f34000000;
	mul.f32 	%f900, %f586, %f587;
	bra.uni 	LBB0_65;
LBB0_55:                                // %__nv_fast_fdividef.exit.i.i.i1181
	div.approx.f32 	%f570, %f900, %f185;
	cvt.rzi.f32.f32 	%f898, %f570;
	fma.rn.f32 	%f78, %f898, 0fC0000000, %f900;
	mov.b32 	%r54, %f78;
	setp.lt.u32 	%p104, %r54, 1073741824;
	@%p104 bra 	LBB0_60;
// %bb.56:
	setp.lt.u32 	%p105, %r54, -2147483647;
	@%p105 bra 	LBB0_58;
// %bb.57:
	add.f32 	%f575, %f898, 0fBF800000;
	setp.lt.f32 	%p108, %f78, 0fC0000000;
	add.f32 	%f576, %f575, 0fBF800000;
	selp.f32 	%f898, %f576, %f575, %p108;
	bra.uni 	LBB0_60;
LBB0_58:
	add.f32 	%f898, %f898, 0f3F800000;
	setp.ltu.f32 	%p106, %f78, 0f40800000;
	@%p106 bra 	LBB0_60;
// %bb.59:                              // %__nv_fmaf_rn.exit.i.i.i1186
	add.f32 	%f571, %f898, 0f3F800000;
	fma.rn.f32 	%f573, %f185, 0fC0400000, %f78;
	setp.ge.f32 	%p107, %f573, 0f00000000;
	add.f32 	%f574, %f571, 0f3F800000;
	selp.f32 	%f898, %f574, %f571, %p107;
LBB0_60:                                // %__internal_fmodf_fastpath_quot.exit.i.i1190
	fma.rn.f32 	%f900, %f898, 0fC0000000, %f900;
LBB0_65:                                // %__internal_fmodf_kernel.exit.i1215
	abs.f32 	%f588, %f900;
	setp.gtu.f32 	%p114, %f588, 0f7F800000;
	@%p114 bra 	LBB0_67;
// %bb.66:
	mov.b32 	%r305, %f75;
	and.b32  	%r306, %r305, -2147483648;
	mov.b32 	%r307, %f900;
	or.b32  	%r308, %r306, %r307;
	mov.b32 	%f900, %r308;
LBB0_67:                                // %__nv_fmodf.exit1216
	shl.b32 	%r317, %r19, 3;
	sub.s32 	%r318, %r53, %r317;
	cvt.rn.f32.s32 	%f94, %r318;
	div.approx.f32 	%f95, %f94, %f568;
	abs.f32 	%f904, %f95;
	setp.lt.f32 	%p122, %f904, 0f40000000;
	@%p122 bra 	LBB0_79;
// %bb.68:
	setp.gtu.f32 	%p123, %f904, 0f4B800000;
	@%p123 bra 	LBB0_75;
	bra.uni 	LBB0_69;
LBB0_75:
	mov.b32 	%r63, %f904;
	and.b32  	%r319, %r63, 8388607;
	or.b32  	%r7792, %r319, 1065353216;
	mov.b32 	%f903, %r7792;
	add.s32 	%r320, %r63, -1073741824;
	and.b32  	%r7793, %r320, -8388608;
	setp.eq.s32 	%p129, %r7793, 0;
	@%p129 bra 	LBB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i1255.preheader
	mov.f32 	%f629, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f628,%f629;
	// end inline asm
LBB0_77:                                // %__nv_fmaf_rn.exit4.i.i.i1255
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r321, %r7793, 192937984;
	add.s32 	%r322, %r321, %r7792;
	mov.b32 	%f630, %r322;
	mul.f32 	%f631, %f628, %f630;
	sub.f32 	%f632, %f630, %f631;
	fma.rn.f32 	%f633, %f632, %f628, %f631;
	sub.f32 	%f634, %f630, %f633;
	fma.rz.f32 	%f635, %f634, %f628, %f633;
	cvt.rzi.f32.f32 	%f636, %f635;
	sub.f32 	%f903, %f630, %f636;
	sub.s32 	%r7793, %r7793, %r321;
	mov.b32 	%r7792, %f903;
	setp.ne.s32 	%p130, %r7793, 0;
	setp.ne.s32 	%p131, %r7792, 0;
	and.pred  	%p132, %p130, %p131;
	@%p132 bra 	LBB0_77;
LBB0_78:                                // %__internal_fmodf_slowpath_mod.exit.i.i1257
	setp.gt.u32 	%p133, %r63, 2139095039;
	selp.f32 	%f637, 0f7FFFFFFF, 0f4B800000, %p133;
	mul.f32 	%f638, %f903, 0f34000000;
	mul.f32 	%f904, %f637, %f638;
	bra.uni 	LBB0_79;
LBB0_69:                                // %__nv_fast_fdividef.exit.i.i.i1227
	div.approx.f32 	%f621, %f904, %f185;
	cvt.rzi.f32.f32 	%f902, %f621;
	fma.rn.f32 	%f98, %f902, 0fC0000000, %f904;
	mov.b32 	%r62, %f98;
	setp.lt.u32 	%p124, %r62, 1073741824;
	@%p124 bra 	LBB0_74;
// %bb.70:
	setp.lt.u32 	%p125, %r62, -2147483647;
	@%p125 bra 	LBB0_72;
// %bb.71:
	add.f32 	%f626, %f902, 0fBF800000;
	setp.lt.f32 	%p128, %f98, 0fC0000000;
	add.f32 	%f627, %f626, 0fBF800000;
	selp.f32 	%f902, %f627, %f626, %p128;
	bra.uni 	LBB0_74;
LBB0_72:
	add.f32 	%f902, %f902, 0f3F800000;
	setp.ltu.f32 	%p126, %f98, 0f40800000;
	@%p126 bra 	LBB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i1232
	add.f32 	%f622, %f902, 0f3F800000;
	fma.rn.f32 	%f624, %f185, 0fC0400000, %f98;
	setp.ge.f32 	%p127, %f624, 0f00000000;
	add.f32 	%f625, %f622, 0f3F800000;
	selp.f32 	%f902, %f625, %f622, %p127;
LBB0_74:                                // %__internal_fmodf_fastpath_quot.exit.i.i1236
	fma.rn.f32 	%f904, %f902, 0fC0000000, %f904;
LBB0_79:                                // %__internal_fmodf_kernel.exit.i1261
	abs.f32 	%f639, %f904;
	setp.gtu.f32 	%p134, %f639, 0f7F800000;
	@%p134 bra 	LBB0_81;
// %bb.80:
	mov.b32 	%r323, %f95;
	and.b32  	%r324, %r323, -2147483648;
	mov.b32 	%r325, %f904;
	or.b32  	%r326, %r324, %r325;
	mov.b32 	%f904, %r326;
LBB0_81:                                // %__nv_fmodf.exit1262
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9611, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd56, [retval0+0];
	} // callseq 6
	setp.ne.s64 	%p142, %rd56, 64;
	@%p142 bra 	LBB0_123;
// %bb.82:                              // %L1112
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9611, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd62, [retval0+0];
	} // callseq 10
	cvt.rn.f32.s64 	%f672, %rd62;
	div.approx.f32 	%f112, %f74, %f672;
	abs.f32 	%f916, %f112;
	setp.lt.f32 	%p143, %f916, 0f40000000;
	@%p143 bra 	LBB0_132;
// %bb.83:
	setp.gtu.f32 	%p144, %f916, 0f4B800000;
	@%p144 bra 	LBB0_128;
	bra.uni 	LBB0_84;
LBB0_128:
	mov.b32 	%r143, %f916;
	and.b32  	%r347, %r143, 8388607;
	or.b32  	%r7824, %r347, 1065353216;
	mov.b32 	%f915, %r7824;
	add.s32 	%r348, %r143, -1073741824;
	and.b32  	%r7825, %r348, -8388608;
	setp.eq.s32 	%p150, %r7825, 0;
	@%p150 bra 	LBB0_131;
// %bb.129:                             // %__nv_fmaf_rn.exit4.i.i.i1393.preheader
	mov.f32 	%f682, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f681,%f682;
	// end inline asm
LBB0_130:                               // %__nv_fmaf_rn.exit4.i.i.i1393
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r349, %r7825, 192937984;
	add.s32 	%r350, %r349, %r7824;
	mov.b32 	%f683, %r350;
	mul.f32 	%f684, %f681, %f683;
	sub.f32 	%f685, %f683, %f684;
	fma.rn.f32 	%f686, %f685, %f681, %f684;
	sub.f32 	%f687, %f683, %f686;
	fma.rz.f32 	%f688, %f687, %f681, %f686;
	cvt.rzi.f32.f32 	%f689, %f688;
	sub.f32 	%f915, %f683, %f689;
	sub.s32 	%r7825, %r7825, %r349;
	mov.b32 	%r7824, %f915;
	setp.ne.s32 	%p151, %r7825, 0;
	setp.ne.s32 	%p152, %r7824, 0;
	and.pred  	%p153, %p151, %p152;
	@%p153 bra 	LBB0_130;
LBB0_131:                               // %__internal_fmodf_slowpath_mod.exit.i.i1395
	setp.gt.u32 	%p154, %r143, 2139095039;
	selp.f32 	%f690, 0f7FFFFFFF, 0f4B800000, %p154;
	mul.f32 	%f691, %f915, 0f34000000;
	mul.f32 	%f916, %f690, %f691;
	bra.uni 	LBB0_132;
LBB0_84:                                // %__nv_fast_fdividef.exit.i.i.i1365
	div.approx.f32 	%f674, %f916, %f185;
	cvt.rzi.f32.f32 	%f914, %f674;
	fma.rn.f32 	%f151, %f914, 0fC0000000, %f916;
	mov.b32 	%r142, %f151;
	setp.lt.u32 	%p145, %r142, 1073741824;
	@%p145 bra 	LBB0_127;
// %bb.85:
	setp.lt.u32 	%p146, %r142, -2147483647;
	@%p146 bra 	LBB0_125;
// %bb.86:
	add.f32 	%f679, %f914, 0fBF800000;
	setp.lt.f32 	%p149, %f151, 0fC0000000;
	add.f32 	%f680, %f679, 0fBF800000;
	selp.f32 	%f914, %f680, %f679, %p149;
	bra.uni 	LBB0_127;
LBB0_125:
	add.f32 	%f914, %f914, 0f3F800000;
	setp.ltu.f32 	%p147, %f151, 0f40800000;
	@%p147 bra 	LBB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i1370
	add.f32 	%f675, %f914, 0f3F800000;
	fma.rn.f32 	%f677, %f185, 0fC0400000, %f151;
	setp.ge.f32 	%p148, %f677, 0f00000000;
	add.f32 	%f678, %f675, 0f3F800000;
	selp.f32 	%f914, %f678, %f675, %p148;
LBB0_127:                               // %__internal_fmodf_fastpath_quot.exit.i.i1374
	fma.rn.f32 	%f916, %f914, 0fC0000000, %f916;
LBB0_132:                               // %__internal_fmodf_kernel.exit.i1399
	abs.f32 	%f692, %f916;
	setp.gtu.f32 	%p155, %f692, 0f7F800000;
	@%p155 bra 	LBB0_134;
// %bb.133:
	mov.b32 	%r351, %f112;
	and.b32  	%r352, %r351, -2147483648;
	mov.b32 	%r353, %f916;
	or.b32  	%r354, %r352, %r353;
	mov.b32 	%f916, %r354;
LBB0_134:                               // %__nv_fmodf.exit1400
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9611, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd66, [retval0+0];
	} // callseq 11
	cvt.rn.f32.s64 	%f723, %rd66;
	div.approx.f32 	%f167, %f94, %f723;
	abs.f32 	%f920, %f167;
	setp.lt.f32 	%p163, %f920, 0f40000000;
	@%p163 bra 	LBB0_146;
// %bb.135:
	setp.gtu.f32 	%p164, %f920, 0f4B800000;
	@%p164 bra 	LBB0_142;
	bra.uni 	LBB0_136;
LBB0_142:
	mov.b32 	%r151, %f920;
	and.b32  	%r363, %r151, 8388607;
	or.b32  	%r7826, %r363, 1065353216;
	mov.b32 	%f919, %r7826;
	add.s32 	%r364, %r151, -1073741824;
	and.b32  	%r7827, %r364, -8388608;
	setp.eq.s32 	%p170, %r7827, 0;
	@%p170 bra 	LBB0_145;
// %bb.143:                             // %__nv_fmaf_rn.exit4.i.i.i1439.preheader
	mov.f32 	%f733, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f732,%f733;
	// end inline asm
LBB0_144:                               // %__nv_fmaf_rn.exit4.i.i.i1439
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r365, %r7827, 192937984;
	add.s32 	%r366, %r365, %r7826;
	mov.b32 	%f734, %r366;
	mul.f32 	%f735, %f732, %f734;
	sub.f32 	%f736, %f734, %f735;
	fma.rn.f32 	%f737, %f736, %f732, %f735;
	sub.f32 	%f738, %f734, %f737;
	fma.rz.f32 	%f739, %f738, %f732, %f737;
	cvt.rzi.f32.f32 	%f740, %f739;
	sub.f32 	%f919, %f734, %f740;
	sub.s32 	%r7827, %r7827, %r365;
	mov.b32 	%r7826, %f919;
	setp.ne.s32 	%p171, %r7827, 0;
	setp.ne.s32 	%p172, %r7826, 0;
	and.pred  	%p173, %p171, %p172;
	@%p173 bra 	LBB0_144;
LBB0_145:                               // %__internal_fmodf_slowpath_mod.exit.i.i1441
	setp.gt.u32 	%p174, %r151, 2139095039;
	selp.f32 	%f741, 0f7FFFFFFF, 0f4B800000, %p174;
	mul.f32 	%f742, %f919, 0f34000000;
	mul.f32 	%f920, %f741, %f742;
	bra.uni 	LBB0_146;
LBB0_136:                               // %__nv_fast_fdividef.exit.i.i.i1411
	div.approx.f32 	%f725, %f920, %f185;
	cvt.rzi.f32.f32 	%f918, %f725;
	fma.rn.f32 	%f170, %f918, 0fC0000000, %f920;
	mov.b32 	%r150, %f170;
	setp.lt.u32 	%p165, %r150, 1073741824;
	@%p165 bra 	LBB0_141;
// %bb.137:
	setp.lt.u32 	%p166, %r150, -2147483647;
	@%p166 bra 	LBB0_139;
// %bb.138:
	add.f32 	%f730, %f918, 0fBF800000;
	setp.lt.f32 	%p169, %f170, 0fC0000000;
	add.f32 	%f731, %f730, 0fBF800000;
	selp.f32 	%f918, %f731, %f730, %p169;
	bra.uni 	LBB0_141;
LBB0_139:
	add.f32 	%f918, %f918, 0f3F800000;
	setp.ltu.f32 	%p167, %f170, 0f40800000;
	@%p167 bra 	LBB0_141;
// %bb.140:                             // %__nv_fmaf_rn.exit.i.i.i1416
	add.f32 	%f726, %f918, 0f3F800000;
	fma.rn.f32 	%f728, %f185, 0fC0400000, %f170;
	setp.ge.f32 	%p168, %f728, 0f00000000;
	add.f32 	%f729, %f726, 0f3F800000;
	selp.f32 	%f918, %f729, %f726, %p168;
LBB0_141:                               // %__internal_fmodf_fastpath_quot.exit.i.i1420
	fma.rn.f32 	%f920, %f918, 0fC0000000, %f920;
LBB0_146:                               // %__internal_fmodf_kernel.exit.i1445
	abs.f32 	%f743, %f920;
	setp.gtu.f32 	%p175, %f743, 0f7F800000;
	@%p175 bra 	LBB0_148;
// %bb.147:
	mov.b32 	%r367, %f167;
	and.b32  	%r368, %r367, -2147483648;
	mov.b32 	%r369, %f920;
	or.b32  	%r370, %r368, %r369;
	mov.b32 	%f920, %r370;
LBB0_148:                               // %__nv_fmodf.exit1446
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9611, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd70, [retval0+0];
	} // callseq 12
	setp.eq.s64 	%p183, %rd70, 64;
	@%p183 bra 	LBB0_87;
	bra.uni 	LBB0_149;
LBB0_87:                                // %L1195
	shr.u32 	%r16, %r3, 1;
	shr.u32 	%r22, %r3, 3;
	and.b32  	%r385, %r22, 2;
	and.b32  	%r386, %r16, 4;
	or.b32  	%r387, %r20, %r385;
	or.b32  	%r74, %r387, %r386;
	mul.lo.s32 	%r75, %r52, %r74;
	cvt.rn.f32.s32 	%f776, %r75;
	div.approx.f32 	%f114, %f776, %f568;
	abs.f32 	%f908, %f114;
	setp.lt.f32 	%p184, %f908, 0f40000000;
	@%p184 bra 	LBB0_99;
// %bb.88:
	setp.gtu.f32 	%p185, %f908, 0f4B800000;
	@%p185 bra 	LBB0_95;
	bra.uni 	LBB0_89;
LBB0_95:
	mov.b32 	%r77, %f908;
	and.b32  	%r388, %r77, 8388607;
	or.b32  	%r7794, %r388, 1065353216;
	mov.b32 	%f907, %r7794;
	add.s32 	%r389, %r77, -1073741824;
	and.b32  	%r7795, %r389, -8388608;
	setp.eq.s32 	%p191, %r7795, 0;
	@%p191 bra 	LBB0_98;
// %bb.96:                              // %__nv_fmaf_rn.exit4.i.i.i1301.preheader
	mov.f32 	%f787, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f786,%f787;
	// end inline asm
LBB0_97:                                // %__nv_fmaf_rn.exit4.i.i.i1301
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r390, %r7795, 192937984;
	add.s32 	%r391, %r390, %r7794;
	mov.b32 	%f788, %r391;
	mul.f32 	%f789, %f786, %f788;
	sub.f32 	%f790, %f788, %f789;
	fma.rn.f32 	%f791, %f790, %f786, %f789;
	sub.f32 	%f792, %f788, %f791;
	fma.rz.f32 	%f793, %f792, %f786, %f791;
	cvt.rzi.f32.f32 	%f794, %f793;
	sub.f32 	%f907, %f788, %f794;
	sub.s32 	%r7795, %r7795, %r390;
	mov.b32 	%r7794, %f907;
	setp.ne.s32 	%p192, %r7795, 0;
	setp.ne.s32 	%p193, %r7794, 0;
	and.pred  	%p194, %p192, %p193;
	@%p194 bra 	LBB0_97;
LBB0_98:                                // %__internal_fmodf_slowpath_mod.exit.i.i1303
	setp.gt.u32 	%p195, %r77, 2139095039;
	selp.f32 	%f795, 0f7FFFFFFF, 0f4B800000, %p195;
	mul.f32 	%f796, %f907, 0f34000000;
	mul.f32 	%f908, %f795, %f796;
	bra.uni 	LBB0_99;
LBB0_89:                                // %__nv_fast_fdividef.exit.i.i.i1273
	div.approx.f32 	%f779, %f908, %f185;
	cvt.rzi.f32.f32 	%f906, %f779;
	fma.rn.f32 	%f117, %f906, 0fC0000000, %f908;
	mov.b32 	%r76, %f117;
	setp.lt.u32 	%p186, %r76, 1073741824;
	@%p186 bra 	LBB0_94;
// %bb.90:
	setp.lt.u32 	%p187, %r76, -2147483647;
	@%p187 bra 	LBB0_92;
// %bb.91:
	add.f32 	%f784, %f906, 0fBF800000;
	setp.lt.f32 	%p190, %f117, 0fC0000000;
	add.f32 	%f785, %f784, 0fBF800000;
	selp.f32 	%f906, %f785, %f784, %p190;
	bra.uni 	LBB0_94;
LBB0_92:
	add.f32 	%f906, %f906, 0f3F800000;
	setp.ltu.f32 	%p188, %f117, 0f40800000;
	@%p188 bra 	LBB0_94;
// %bb.93:                              // %__nv_fmaf_rn.exit.i.i.i1278
	add.f32 	%f780, %f906, 0f3F800000;
	fma.rn.f32 	%f782, %f185, 0fC0400000, %f117;
	setp.ge.f32 	%p189, %f782, 0f00000000;
	add.f32 	%f783, %f780, 0f3F800000;
	selp.f32 	%f906, %f783, %f780, %p189;
LBB0_94:                                // %__internal_fmodf_fastpath_quot.exit.i.i1282
	fma.rn.f32 	%f908, %f906, 0fC0000000, %f908;
LBB0_99:                                // %__internal_fmodf_kernel.exit.i1307
	abs.f32 	%f797, %f908;
	setp.gtu.f32 	%p196, %f797, 0f7F800000;
	@%p196 bra 	LBB0_101;
// %bb.100:
	mov.b32 	%r392, %f114;
	and.b32  	%r393, %r392, -2147483648;
	mov.b32 	%r394, %f908;
	or.b32  	%r395, %r393, %r394;
	mov.b32 	%f908, %r395;
LBB0_101:                               // %__nv_fmodf.exit1308
	shl.b32 	%r404, %r74, 3;
	sub.s32 	%r405, %r75, %r404;
	cvt.rn.f32.s32 	%f828, %r405;
	div.approx.f32 	%f133, %f828, %f568;
	abs.f32 	%f912, %f133;
	setp.lt.f32 	%p204, %f912, 0f40000000;
	@%p204 bra 	LBB0_113;
// %bb.102:
	setp.gtu.f32 	%p205, %f912, 0f4B800000;
	@%p205 bra 	LBB0_109;
	bra.uni 	LBB0_103;
LBB0_109:
	mov.b32 	%r85, %f912;
	and.b32  	%r406, %r85, 8388607;
	or.b32  	%r7796, %r406, 1065353216;
	mov.b32 	%f911, %r7796;
	add.s32 	%r407, %r85, -1073741824;
	and.b32  	%r7797, %r407, -8388608;
	setp.eq.s32 	%p211, %r7797, 0;
	@%p211 bra 	LBB0_112;
// %bb.110:                             // %__nv_fmaf_rn.exit4.i.i.i1347.preheader
	mov.f32 	%f839, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f838,%f839;
	// end inline asm
LBB0_111:                               // %__nv_fmaf_rn.exit4.i.i.i1347
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r408, %r7797, 192937984;
	add.s32 	%r409, %r408, %r7796;
	mov.b32 	%f840, %r409;
	mul.f32 	%f841, %f838, %f840;
	sub.f32 	%f842, %f840, %f841;
	fma.rn.f32 	%f843, %f842, %f838, %f841;
	sub.f32 	%f844, %f840, %f843;
	fma.rz.f32 	%f845, %f844, %f838, %f843;
	cvt.rzi.f32.f32 	%f846, %f845;
	sub.f32 	%f911, %f840, %f846;
	sub.s32 	%r7797, %r7797, %r408;
	mov.b32 	%r7796, %f911;
	setp.ne.s32 	%p212, %r7797, 0;
	setp.ne.s32 	%p213, %r7796, 0;
	and.pred  	%p214, %p212, %p213;
	@%p214 bra 	LBB0_111;
LBB0_112:                               // %__internal_fmodf_slowpath_mod.exit.i.i1349
	setp.gt.u32 	%p215, %r85, 2139095039;
	selp.f32 	%f847, 0f7FFFFFFF, 0f4B800000, %p215;
	mul.f32 	%f848, %f911, 0f34000000;
	mul.f32 	%f912, %f847, %f848;
	bra.uni 	LBB0_113;
LBB0_103:                               // %__nv_fast_fdividef.exit.i.i.i1319
	div.approx.f32 	%f831, %f912, %f185;
	cvt.rzi.f32.f32 	%f910, %f831;
	fma.rn.f32 	%f136, %f910, 0fC0000000, %f912;
	mov.b32 	%r84, %f136;
	setp.lt.u32 	%p206, %r84, 1073741824;
	@%p206 bra 	LBB0_108;
// %bb.104:
	setp.lt.u32 	%p207, %r84, -2147483647;
	@%p207 bra 	LBB0_106;
// %bb.105:
	add.f32 	%f836, %f910, 0fBF800000;
	setp.lt.f32 	%p210, %f136, 0fC0000000;
	add.f32 	%f837, %f836, 0fBF800000;
	selp.f32 	%f910, %f837, %f836, %p210;
	bra.uni 	LBB0_108;
LBB0_106:
	add.f32 	%f910, %f910, 0f3F800000;
	setp.ltu.f32 	%p208, %f136, 0f40800000;
	@%p208 bra 	LBB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i1324
	add.f32 	%f832, %f910, 0f3F800000;
	fma.rn.f32 	%f834, %f185, 0fC0400000, %f136;
	setp.ge.f32 	%p209, %f834, 0f00000000;
	add.f32 	%f835, %f832, 0f3F800000;
	selp.f32 	%f910, %f835, %f832, %p209;
LBB0_108:                               // %__internal_fmodf_fastpath_quot.exit.i.i1328
	fma.rn.f32 	%f912, %f910, 0fC0000000, %f912;
LBB0_113:                               // %__internal_fmodf_kernel.exit.i1353
	abs.f32 	%f849, %f912;
	setp.gtu.f32 	%p216, %f849, 0f7F800000;
	@%p216 bra 	LBB0_115;
// %bb.114:
	mov.b32 	%r410, %f133;
	and.b32  	%r411, %r410, -2147483648;
	mov.b32 	%r412, %f912;
	or.b32  	%r413, %r411, %r412;
	mov.b32 	%f912, %r413;
LBB0_115:                               // %__nv_fmodf.exit1354
	setp.le.s32 	%p224, %r6, %r5;
	mov.u32 	%r7785, 0;
	@%p224 bra 	LBB0_122;
// %bb.116:                             // %L1363.lr.ph
	mov.f32 	%f189, 0f43808000;
	div.approx.f32 	%f190, %f188, %f189;
	div.approx.f32 	%f224, %f222, %f189;
	div.approx.f32 	%f259, %f257, %f189;
	div.approx.f32 	%f293, %f291, %f189;
	div.approx.f32 	%f328, %f326, %f189;
	div.approx.f32 	%f362, %f360, %f189;
	div.approx.f32 	%f397, %f395, %f189;
	div.approx.f32 	%f431, %f429, %f189;
	abs.f32 	%f191, %f190;
	abs.f32 	%f225, %f224;
	abs.f32 	%f260, %f259;
	abs.f32 	%f294, %f293;
	abs.f32 	%f329, %f328;
	abs.f32 	%f363, %f362;
	abs.f32 	%f398, %f397;
	abs.f32 	%f432, %f431;
	setp.gt.f32 	%p13, %f191, 0f4B800000;
	mul.f32 	%f192, %f190, 0f00000000;
	setp.gt.f32 	%p19, %f225, 0f4B800000;
	mul.f32 	%f226, %f224, 0f00000000;
	setp.gt.f32 	%p25, %f260, 0f4B800000;
	mul.f32 	%f261, %f259, 0f00000000;
	setp.gt.f32 	%p31, %f294, 0f4B800000;
	mul.f32 	%f295, %f293, 0f00000000;
	setp.gt.f32 	%p37, %f329, 0f4B800000;
	mul.f32 	%f330, %f328, 0f00000000;
	setp.gt.f32 	%p43, %f363, 0f4B800000;
	mul.f32 	%f364, %f362, 0f00000000;
	setp.gt.f32 	%p49, %f398, 0f4B800000;
	mul.f32 	%f399, %f397, 0f00000000;
	setp.gt.f32 	%p55, %f432, 0f4B800000;
	mul.f32 	%f433, %f431, 0f00000000;
	selp.f32 	%f193, %f192, %f190, %p13;
	selp.f32 	%f227, %f226, %f224, %p19;
	selp.f32 	%f262, %f261, %f259, %p25;
	selp.f32 	%f296, %f295, %f293, %p31;
	selp.f32 	%f331, %f330, %f328, %p37;
	selp.f32 	%f365, %f364, %f362, %p43;
	selp.f32 	%f400, %f399, %f397, %p49;
	selp.f32 	%f434, %f433, %f431, %p55;
	add.f32 	%f589, %f900, %f900;
	add.f32 	%f640, %f904, %f904;
	add.f32 	%f194, %f193, %f193;
	add.f32 	%f228, %f227, %f227;
	add.f32 	%f263, %f262, %f262;
	add.f32 	%f297, %f296, %f296;
	add.f32 	%f332, %f331, %f331;
	add.f32 	%f366, %f365, %f365;
	add.f32 	%f401, %f400, %f400;
	add.f32 	%f435, %f434, %f434;
	add.f32 	%f484, %f892, %f892;
	add.f32 	%f536, %f896, %f896;
	mov.b32 	%r309, %f589;
	mov.b32 	%r339, %f640;
	add.f32 	%f693, %f916, %f916;
	add.f32 	%f744, %f920, %f920;
	mov.b32 	%r189, %f194;
	mov.b32 	%r196, %f228;
	mov.b32 	%r207, %f263;
	mov.b32 	%r214, %f297;
	mov.b32 	%r225, %f332;
	mov.b32 	%r232, %f366;
	mov.b32 	%r243, %f401;
	mov.b32 	%r250, %f435;
	mov.b32 	%r268, %f484;
	mov.b32 	%r291, %f536;
	and.b32  	%r310, %r309, -2147483648;
	and.b32  	%r340, %r339, -2147483648;
	mov.b32 	%r355, %f693;
	mov.b32 	%r377, %f744;
	and.b32  	%r190, %r189, -2147483648;
	and.b32  	%r197, %r196, -2147483648;
	and.b32  	%r208, %r207, -2147483648;
	and.b32  	%r215, %r214, -2147483648;
	and.b32  	%r226, %r225, -2147483648;
	and.b32  	%r233, %r232, -2147483648;
	and.b32  	%r244, %r243, -2147483648;
	and.b32  	%r251, %r250, -2147483648;
	and.b32  	%r269, %r268, -2147483648;
	and.b32  	%r292, %r291, -2147483648;
	or.b32  	%r311, %r310, 1056964608;
	or.b32  	%r341, %r340, 1056964608;
	and.b32  	%r356, %r355, -2147483648;
	and.b32  	%r378, %r377, -2147483648;
	add.f32 	%f798, %f908, %f908;
	or.b32  	%r191, %r190, 1056964608;
	or.b32  	%r198, %r197, 1056964608;
	or.b32  	%r209, %r208, 1056964608;
	or.b32  	%r216, %r215, 1056964608;
	or.b32  	%r227, %r226, 1056964608;
	or.b32  	%r234, %r233, 1056964608;
	or.b32  	%r245, %r244, 1056964608;
	or.b32  	%r252, %r251, 1056964608;
	or.b32  	%r270, %r269, 1056964608;
	or.b32  	%r293, %r292, 1056964608;
	mov.b32 	%f590, %r311;
	mov.b32 	%f641, %r341;
	or.b32  	%r357, %r356, 1056964608;
	or.b32  	%r379, %r378, 1056964608;
	mov.b32 	%r396, %f798;
	mov.b32 	%f195, %r191;
	mov.b32 	%f229, %r198;
	mov.b32 	%f264, %r209;
	mov.b32 	%f298, %r216;
	mov.b32 	%f333, %r227;
	mov.b32 	%f367, %r234;
	mov.b32 	%f402, %r245;
	mov.b32 	%f436, %r252;
	mov.b32 	%f485, %r270;
	mov.b32 	%f537, %r293;
	add.f32 	%f591, %f589, %f590;
	abs.f32 	%f593, %f589;
	add.f32 	%f642, %f640, %f641;
	abs.f32 	%f644, %f640;
	mov.b32 	%f694, %r357;
	mov.b32 	%f745, %r379;
	and.b32  	%r397, %r396, -2147483648;
	add.f32 	%f196, %f194, %f195;
	abs.f32 	%f198, %f194;
	add.f32 	%f230, %f228, %f229;
	abs.f32 	%f232, %f228;
	add.f32 	%f265, %f263, %f264;
	abs.f32 	%f267, %f263;
	add.f32 	%f299, %f297, %f298;
	abs.f32 	%f301, %f297;
	add.f32 	%f334, %f332, %f333;
	abs.f32 	%f336, %f332;
	add.f32 	%f368, %f366, %f367;
	abs.f32 	%f370, %f366;
	add.f32 	%f403, %f401, %f402;
	abs.f32 	%f405, %f401;
	add.f32 	%f437, %f435, %f436;
	abs.f32 	%f439, %f435;
	add.f32 	%f486, %f484, %f485;
	abs.f32 	%f488, %f484;
	add.f32 	%f538, %f536, %f537;
	abs.f32 	%f540, %f536;
	cvt.rzi.f32.f32 	%f592, %f591;
	setp.gt.f32 	%p115, %f593, 0f4B000000;
	cvt.rzi.f32.f32 	%f643, %f642;
	setp.gt.f32 	%p135, %f644, 0f4B000000;
	add.f32 	%f695, %f693, %f694;
	abs.f32 	%f697, %f693;
	add.f32 	%f746, %f744, %f745;
	abs.f32 	%f748, %f744;
	or.b32  	%r398, %r397, 1056964608;
	cvt.rzi.f32.f32 	%f197, %f196;
	setp.gt.f32 	%p14, %f198, 0f4B000000;
	cvt.rzi.f32.f32 	%f231, %f230;
	setp.gt.f32 	%p20, %f232, 0f4B000000;
	cvt.rzi.f32.f32 	%f266, %f265;
	setp.gt.f32 	%p26, %f267, 0f4B000000;
	cvt.rzi.f32.f32 	%f300, %f299;
	setp.gt.f32 	%p32, %f301, 0f4B000000;
	cvt.rzi.f32.f32 	%f335, %f334;
	setp.gt.f32 	%p38, %f336, 0f4B000000;
	cvt.rzi.f32.f32 	%f369, %f368;
	setp.gt.f32 	%p44, %f370, 0f4B000000;
	cvt.rzi.f32.f32 	%f404, %f403;
	setp.gt.f32 	%p50, %f405, 0f4B000000;
	cvt.rzi.f32.f32 	%f438, %f437;
	setp.gt.f32 	%p56, %f439, 0f4B000000;
	cvt.rzi.f32.f32 	%f487, %f486;
	setp.gt.f32 	%p74, %f488, 0f4B000000;
	cvt.rzi.f32.f32 	%f539, %f538;
	setp.gt.f32 	%p94, %f540, 0f4B000000;
	selp.f32 	%f594, %f589, %f592, %p115;
	cvt.rzi.f32.f32 	%f595, %f589;
	setp.lt.f32 	%p116, %f593, 0f3F000000;
	selp.f32 	%f645, %f640, %f643, %p135;
	cvt.rzi.f32.f32 	%f646, %f640;
	setp.lt.f32 	%p136, %f644, 0f3F000000;
	cvt.rzi.f32.f32 	%f696, %f695;
	setp.gt.f32 	%p156, %f697, 0f4B000000;
	cvt.rzi.f32.f32 	%f747, %f746;
	setp.gt.f32 	%p176, %f748, 0f4B000000;
	mov.b32 	%f799, %r398;
	selp.f32 	%f199, %f194, %f197, %p14;
	cvt.rzi.f32.f32 	%f200, %f194;
	setp.lt.f32 	%p15, %f198, 0f3F000000;
	selp.f32 	%f233, %f228, %f231, %p20;
	cvt.rzi.f32.f32 	%f234, %f228;
	setp.lt.f32 	%p21, %f232, 0f3F000000;
	selp.f32 	%f268, %f263, %f266, %p26;
	cvt.rzi.f32.f32 	%f269, %f263;
	setp.lt.f32 	%p27, %f267, 0f3F000000;
	selp.f32 	%f302, %f297, %f300, %p32;
	cvt.rzi.f32.f32 	%f303, %f297;
	setp.lt.f32 	%p33, %f301, 0f3F000000;
	selp.f32 	%f337, %f332, %f335, %p38;
	cvt.rzi.f32.f32 	%f338, %f332;
	setp.lt.f32 	%p39, %f336, 0f3F000000;
	selp.f32 	%f371, %f366, %f369, %p44;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p45, %f370, 0f3F000000;
	selp.f32 	%f406, %f401, %f404, %p50;
	cvt.rzi.f32.f32 	%f407, %f401;
	setp.lt.f32 	%p51, %f405, 0f3F000000;
	selp.f32 	%f440, %f435, %f438, %p56;
	cvt.rzi.f32.f32 	%f441, %f435;
	setp.lt.f32 	%p57, %f439, 0f3F000000;
	selp.f32 	%f489, %f484, %f487, %p74;
	cvt.rzi.f32.f32 	%f490, %f484;
	setp.lt.f32 	%p75, %f488, 0f3F000000;
	selp.f32 	%f541, %f536, %f539, %p94;
	cvt.rzi.f32.f32 	%f542, %f536;
	setp.lt.f32 	%p95, %f540, 0f3F000000;
	selp.f32 	%f596, %f595, %f594, %p116;
	selp.f32 	%f647, %f646, %f645, %p136;
	selp.f32 	%f698, %f693, %f696, %p156;
	cvt.rzi.f32.f32 	%f699, %f693;
	setp.lt.f32 	%p157, %f697, 0f3F000000;
	selp.f32 	%f749, %f744, %f747, %p176;
	cvt.rzi.f32.f32 	%f750, %f744;
	setp.lt.f32 	%p177, %f748, 0f3F000000;
	add.f32 	%f800, %f798, %f799;
	abs.f32 	%f802, %f798;
	selp.f32 	%f201, %f200, %f199, %p15;
	selp.f32 	%f235, %f234, %f233, %p21;
	selp.f32 	%f270, %f269, %f268, %p27;
	selp.f32 	%f304, %f303, %f302, %p33;
	selp.f32 	%f339, %f338, %f337, %p39;
	selp.f32 	%f373, %f372, %f371, %p45;
	selp.f32 	%f408, %f407, %f406, %p51;
	selp.f32 	%f442, %f441, %f440, %p57;
	selp.f32 	%f491, %f490, %f489, %p75;
	selp.f32 	%f543, %f542, %f541, %p95;
	fma.rn.f32 	%f597, %f596, 0fBF000000, %f900;
	fma.rn.f32 	%f648, %f647, 0fBF000000, %f904;
	selp.f32 	%f700, %f699, %f698, %p157;
	selp.f32 	%f751, %f750, %f749, %p177;
	cvt.rzi.f32.f32 	%f801, %f800;
	setp.gt.f32 	%p197, %f802, 0f4B000000;
	fma.rn.f32 	%f202, %f201, 0fBF000000, %f193;
	fma.rn.f32 	%f236, %f235, 0fBF000000, %f227;
	fma.rn.f32 	%f271, %f270, 0fBF000000, %f262;
	fma.rn.f32 	%f305, %f304, 0fBF000000, %f296;
	fma.rn.f32 	%f340, %f339, 0fBF000000, %f331;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f365;
	fma.rn.f32 	%f409, %f408, 0fBF000000, %f400;
	fma.rn.f32 	%f443, %f442, 0fBF000000, %f434;
	fma.rn.f32 	%f492, %f491, 0fBF000000, %f892;
	fma.rn.f32 	%f544, %f543, 0fBF000000, %f896;
	mul.f32 	%f598, %f597, %f597;
	mul.f32 	%f649, %f648, %f648;
	fma.rn.f32 	%f701, %f700, 0fBF000000, %f916;
	fma.rn.f32 	%f752, %f751, 0fBF000000, %f920;
	selp.f32 	%f803, %f798, %f801, %p197;
	cvt.rzi.f32.f32 	%f804, %f798;
	setp.lt.f32 	%p198, %f802, 0f3F000000;
	mul.f32 	%f203, %f202, %f202;
	mul.f32 	%f237, %f236, %f236;
	mul.f32 	%f272, %f271, %f271;
	mul.f32 	%f306, %f305, %f305;
	mul.f32 	%f341, %f340, %f340;
	mul.f32 	%f375, %f374, %f374;
	mul.f32 	%f410, %f409, %f409;
	mul.f32 	%f444, %f443, %f443;
	mul.f32 	%f493, %f492, %f492;
	mul.f32 	%f545, %f544, %f544;
	fma.rn.f32 	%f599, %f598, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f600, %f598, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f650, %f649, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f651, %f649, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f702, %f701, %f701;
	mul.f32 	%f753, %f752, %f752;
	selp.f32 	%f805, %f804, %f803, %p198;
	cvt.rzi.s32.f32 	%r192, %f201;
	fma.rn.f32 	%f204, %f203, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f205, %f203, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r199, %f235;
	fma.rn.f32 	%f238, %f237, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f239, %f237, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r210, %f270;
	fma.rn.f32 	%f273, %f272, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f274, %f272, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r217, %f304;
	fma.rn.f32 	%f307, %f306, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f308, %f306, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r228, %f339;
	fma.rn.f32 	%f342, %f341, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f343, %f341, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r235, %f373;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r246, %f408;
	fma.rn.f32 	%f411, %f410, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f412, %f410, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r253, %f442;
	fma.rn.f32 	%f445, %f444, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f446, %f444, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f494, %f493, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f495, %f493, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f546, %f545, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f547, %f545, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r312, %f596;
	fma.rn.f32 	%f601, %f599, %f598, 0fC0A55DF6;
	fma.rn.f32 	%f602, %f600, %f598, 0f4081E0CF;
	fma.rn.f32 	%f603, %f598, %f597, 0f00000000;
	cvt.rzi.s32.f32 	%r342, %f647;
	fma.rn.f32 	%f652, %f650, %f649, 0fC0A55DF6;
	fma.rn.f32 	%f653, %f651, %f649, 0f4081E0CF;
	fma.rn.f32 	%f654, %f649, %f648, 0f00000000;
	fma.rn.f32 	%f703, %f702, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f704, %f702, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f754, %f753, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f755, %f753, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f806, %f805, 0fBF000000, %f908;
	add.s32 	%r193, %r192, 1;
	fma.rn.f32 	%f206, %f204, %f203, 0fC0A55DF6;
	fma.rn.f32 	%f207, %f205, %f203, 0f4081E0CF;
	fma.rn.f32 	%f208, %f203, %f202, 0f00000000;
	add.s32 	%r200, %r199, 1;
	fma.rn.f32 	%f240, %f238, %f237, 0fC0A55DF6;
	fma.rn.f32 	%f241, %f239, %f237, 0f4081E0CF;
	fma.rn.f32 	%f242, %f237, %f236, 0f00000000;
	add.s32 	%r211, %r210, 1;
	fma.rn.f32 	%f275, %f273, %f272, 0fC0A55DF6;
	fma.rn.f32 	%f276, %f274, %f272, 0f4081E0CF;
	fma.rn.f32 	%f277, %f272, %f271, 0f00000000;
	add.s32 	%r218, %r217, 1;
	fma.rn.f32 	%f309, %f307, %f306, 0fC0A55DF6;
	fma.rn.f32 	%f310, %f308, %f306, 0f4081E0CF;
	fma.rn.f32 	%f311, %f306, %f305, 0f00000000;
	add.s32 	%r229, %r228, 1;
	fma.rn.f32 	%f344, %f342, %f341, 0fC0A55DF6;
	fma.rn.f32 	%f345, %f343, %f341, 0f4081E0CF;
	fma.rn.f32 	%f346, %f341, %f340, 0f00000000;
	add.s32 	%r236, %r235, 1;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	add.s32 	%r247, %r246, 1;
	fma.rn.f32 	%f413, %f411, %f410, 0fC0A55DF6;
	fma.rn.f32 	%f414, %f412, %f410, 0f4081E0CF;
	fma.rn.f32 	%f415, %f410, %f409, 0f00000000;
	add.s32 	%r254, %r253, 1;
	fma.rn.f32 	%f447, %f445, %f444, 0fC0A55DF6;
	fma.rn.f32 	%f448, %f446, %f444, 0f4081E0CF;
	fma.rn.f32 	%f449, %f444, %f443, 0f00000000;
	cvt.rzi.s32.f32 	%r271, %f491;
	fma.rn.f32 	%f496, %f494, %f493, 0fC0A55DF6;
	fma.rn.f32 	%f497, %f495, %f493, 0f4081E0CF;
	fma.rn.f32 	%f498, %f493, %f492, 0f00000000;
	cvt.rzi.s32.f32 	%r294, %f543;
	fma.rn.f32 	%f548, %f546, %f545, 0fC0A55DF6;
	fma.rn.f32 	%f549, %f547, %f545, 0f4081E0CF;
	fma.rn.f32 	%f550, %f545, %f544, 0f00000000;
	fma.rn.f32 	%f604, %f602, %f598, 0fC09DE9E6;
	fma.rn.f32 	%f605, %f601, %f603, 0f00000000;
	and.b32  	%r313, %r312, 1;
	fma.rn.f32 	%f655, %f653, %f649, 0fC09DE9E6;
	fma.rn.f32 	%f656, %f652, %f654, 0f00000000;
	and.b32  	%r343, %r342, 1;
	cvt.rzi.s32.f32 	%r358, %f700;
	fma.rn.f32 	%f705, %f703, %f702, 0fC0A55DF6;
	fma.rn.f32 	%f706, %f704, %f702, 0f4081E0CF;
	fma.rn.f32 	%f707, %f702, %f701, 0f00000000;
	cvt.rzi.s32.f32 	%r380, %f751;
	fma.rn.f32 	%f756, %f754, %f753, 0fC0A55DF6;
	fma.rn.f32 	%f757, %f755, %f753, 0f4081E0CF;
	fma.rn.f32 	%f758, %f753, %f752, 0f00000000;
	mul.f32 	%f807, %f806, %f806;
	fma.rn.f32 	%f209, %f207, %f203, 0fC09DE9E6;
	fma.rn.f32 	%f210, %f206, %f208, 0f00000000;
	and.b32  	%r194, %r193, 1;
	fma.rn.f32 	%f243, %f241, %f237, 0fC09DE9E6;
	fma.rn.f32 	%f244, %f240, %f242, 0f00000000;
	and.b32  	%r201, %r200, 1;
	fma.rn.f32 	%f278, %f276, %f272, 0fC09DE9E6;
	fma.rn.f32 	%f279, %f275, %f277, 0f00000000;
	and.b32  	%r212, %r211, 1;
	fma.rn.f32 	%f312, %f310, %f306, 0fC09DE9E6;
	fma.rn.f32 	%f313, %f309, %f311, 0f00000000;
	and.b32  	%r219, %r218, 1;
	fma.rn.f32 	%f347, %f345, %f341, 0fC09DE9E6;
	fma.rn.f32 	%f348, %f344, %f346, 0f00000000;
	and.b32  	%r230, %r229, 1;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	and.b32  	%r237, %r236, 1;
	fma.rn.f32 	%f416, %f414, %f410, 0fC09DE9E6;
	fma.rn.f32 	%f417, %f413, %f415, 0f00000000;
	and.b32  	%r248, %r247, 1;
	fma.rn.f32 	%f450, %f448, %f444, 0fC09DE9E6;
	fma.rn.f32 	%f451, %f447, %f449, 0f00000000;
	and.b32  	%r255, %r254, 1;
	fma.rn.f32 	%f499, %f497, %f493, 0fC09DE9E6;
	fma.rn.f32 	%f500, %f496, %f498, 0f00000000;
	and.b32  	%r272, %r271, 1;
	fma.rn.f32 	%f551, %f549, %f545, 0fC09DE9E6;
	fma.rn.f32 	%f552, %f548, %f550, 0f00000000;
	and.b32  	%r295, %r294, 1;
	fma.rn.f32 	%f606, %f604, %f598, 0f3F800000;
	fma.rn.f32 	%f607, %f597, 0f40490FDB, %f605;
	setp.eq.b32 	%p117, %r313, 1;
	fma.rn.f32 	%f657, %f655, %f649, 0f3F800000;
	fma.rn.f32 	%f658, %f648, 0f40490FDB, %f656;
	setp.eq.b32 	%p137, %r343, 1;
	fma.rn.f32 	%f708, %f706, %f702, 0fC09DE9E6;
	fma.rn.f32 	%f709, %f705, %f707, 0f00000000;
	and.b32  	%r359, %r358, 1;
	fma.rn.f32 	%f759, %f757, %f753, 0fC09DE9E6;
	fma.rn.f32 	%f760, %f756, %f758, 0f00000000;
	and.b32  	%r381, %r380, 1;
	fma.rn.f32 	%f808, %f807, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f809, %f807, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f211, %f209, %f203, 0f3F800000;
	fma.rn.f32 	%f212, %f202, 0f40490FDB, %f210;
	setp.eq.b32 	%p16, %r194, 1;
	fma.rn.f32 	%f245, %f243, %f237, 0f3F800000;
	fma.rn.f32 	%f246, %f236, 0f40490FDB, %f244;
	setp.eq.b32 	%p22, %r201, 1;
	fma.rn.f32 	%f280, %f278, %f272, 0f3F800000;
	fma.rn.f32 	%f281, %f271, 0f40490FDB, %f279;
	setp.eq.b32 	%p28, %r212, 1;
	fma.rn.f32 	%f314, %f312, %f306, 0f3F800000;
	fma.rn.f32 	%f315, %f305, 0f40490FDB, %f313;
	setp.eq.b32 	%p34, %r219, 1;
	fma.rn.f32 	%f349, %f347, %f341, 0f3F800000;
	fma.rn.f32 	%f350, %f340, 0f40490FDB, %f348;
	setp.eq.b32 	%p40, %r230, 1;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	setp.eq.b32 	%p46, %r237, 1;
	fma.rn.f32 	%f418, %f416, %f410, 0f3F800000;
	fma.rn.f32 	%f419, %f409, 0f40490FDB, %f417;
	setp.eq.b32 	%p52, %r248, 1;
	fma.rn.f32 	%f452, %f450, %f444, 0f3F800000;
	fma.rn.f32 	%f453, %f443, 0f40490FDB, %f451;
	setp.eq.b32 	%p58, %r255, 1;
	fma.rn.f32 	%f501, %f499, %f493, 0f3F800000;
	fma.rn.f32 	%f502, %f492, 0f40490FDB, %f500;
	setp.eq.b32 	%p76, %r272, 1;
	fma.rn.f32 	%f553, %f551, %f545, 0f3F800000;
	fma.rn.f32 	%f554, %f544, 0f40490FDB, %f552;
	setp.eq.b32 	%p96, %r295, 1;
	selp.f32 	%f608, %f606, %f607, %p117;
	and.b32  	%r314, %r312, 2;
	selp.f32 	%f659, %f657, %f658, %p137;
	and.b32  	%r344, %r342, 2;
	fma.rn.f32 	%f710, %f708, %f702, 0f3F800000;
	fma.rn.f32 	%f711, %f701, 0f40490FDB, %f709;
	setp.eq.b32 	%p158, %r359, 1;
	fma.rn.f32 	%f761, %f759, %f753, 0f3F800000;
	fma.rn.f32 	%f762, %f752, 0f40490FDB, %f760;
	setp.eq.b32 	%p178, %r381, 1;
	cvt.rzi.s32.f32 	%r399, %f805;
	fma.rn.f32 	%f810, %f808, %f807, 0fC0A55DF6;
	fma.rn.f32 	%f811, %f809, %f807, 0f4081E0CF;
	fma.rn.f32 	%f812, %f807, %f806, 0f00000000;
	selp.f32 	%f213, %f211, %f212, %p16;
	and.b32  	%r195, %r193, 2;
	mov.f32 	%f214, 0f00000000;
	selp.f32 	%f247, %f245, %f246, %p22;
	and.b32  	%r202, %r200, 2;
	selp.f32 	%f282, %f280, %f281, %p28;
	and.b32  	%r213, %r211, 2;
	selp.f32 	%f316, %f314, %f315, %p34;
	and.b32  	%r220, %r218, 2;
	selp.f32 	%f351, %f349, %f350, %p40;
	and.b32  	%r231, %r229, 2;
	selp.f32 	%f385, %f383, %f384, %p46;
	and.b32  	%r238, %r236, 2;
	selp.f32 	%f420, %f418, %f419, %p52;
	and.b32  	%r249, %r247, 2;
	selp.f32 	%f454, %f452, %f453, %p58;
	and.b32  	%r256, %r254, 2;
	selp.f32 	%f503, %f501, %f502, %p76;
	and.b32  	%r273, %r271, 2;
	selp.f32 	%f555, %f553, %f554, %p96;
	and.b32  	%r296, %r294, 2;
	setp.eq.s32 	%p118, %r314, 0;
	neg.f32 	%f610, %f608;
	add.s32 	%r315, %r312, 1;
	cvt.rzi.f32.f32 	%f615, %f900;
	setp.eq.s32 	%p138, %r344, 0;
	neg.f32 	%f661, %f659;
	add.s32 	%r345, %r342, 1;
	cvt.rzi.f32.f32 	%f666, %f904;
	selp.f32 	%f712, %f710, %f711, %p158;
	and.b32  	%r360, %r358, 2;
	selp.f32 	%f763, %f761, %f762, %p178;
	and.b32  	%r382, %r380, 2;
	fma.rn.f32 	%f813, %f811, %f807, 0fC09DE9E6;
	fma.rn.f32 	%f814, %f810, %f812, 0f00000000;
	and.b32  	%r400, %r399, 1;
	setp.eq.s32 	%p17, %r195, 0;
	sub.f32 	%f215, %f214, %f213;
	setp.eq.s32 	%p23, %r202, 0;
	sub.f32 	%f249, %f214, %f247;
	setp.eq.s32 	%p29, %r213, 0;
	sub.f32 	%f284, %f214, %f282;
	setp.eq.s32 	%p35, %r220, 0;
	sub.f32 	%f318, %f214, %f316;
	setp.eq.s32 	%p41, %r231, 0;
	sub.f32 	%f353, %f214, %f351;
	setp.eq.s32 	%p47, %r238, 0;
	sub.f32 	%f387, %f214, %f385;
	setp.eq.s32 	%p53, %r249, 0;
	sub.f32 	%f422, %f214, %f420;
	setp.eq.s32 	%p59, %r256, 0;
	sub.f32 	%f456, %f214, %f454;
	setp.eq.s32 	%p77, %r273, 0;
	neg.f32 	%f505, %f503;
	add.s32 	%r274, %r271, 1;
	cvt.rzi.f32.f32 	%f510, %f892;
	setp.eq.s32 	%p97, %r296, 0;
	neg.f32 	%f557, %f555;
	add.s32 	%r297, %r294, 1;
	cvt.rzi.f32.f32 	%f562, %f896;
	selp.f32 	%f609, %f607, %f606, %p117;
	selp.f32 	%f611, %f608, %f610, %p118;
	and.b32  	%r316, %r315, 2;
	setp.eq.f32 	%p120, %f615, %f900;
	mul.f32 	%f616, %f900, 0f00000000;
	selp.f32 	%f660, %f658, %f657, %p137;
	selp.f32 	%f662, %f659, %f661, %p138;
	and.b32  	%r346, %r345, 2;
	setp.eq.f32 	%p140, %f666, %f904;
	mul.f32 	%f667, %f904, 0f00000000;
	setp.eq.s32 	%p159, %r360, 0;
	neg.f32 	%f714, %f712;
	add.s32 	%r361, %r358, 1;
	cvt.rzi.f32.f32 	%f719, %f916;
	setp.eq.s32 	%p179, %r382, 0;
	neg.f32 	%f765, %f763;
	add.s32 	%r383, %r380, 1;
	cvt.rzi.f32.f32 	%f770, %f920;
	fma.rn.f32 	%f815, %f813, %f807, 0f3F800000;
	fma.rn.f32 	%f816, %f806, 0f40490FDB, %f814;
	setp.eq.b32 	%p199, %r400, 1;
	selp.f32 	%f216, %f213, %f215, %p17;
	selp.f32 	%f250, %f247, %f249, %p23;
	selp.f32 	%f285, %f282, %f284, %p29;
	selp.f32 	%f319, %f316, %f318, %p35;
	selp.f32 	%f354, %f351, %f353, %p41;
	selp.f32 	%f388, %f385, %f387, %p47;
	selp.f32 	%f423, %f420, %f422, %p53;
	selp.f32 	%f457, %f454, %f456, %p59;
	selp.f32 	%f504, %f502, %f501, %p76;
	selp.f32 	%f506, %f503, %f505, %p77;
	and.b32  	%r275, %r274, 2;
	setp.eq.f32 	%p79, %f510, %f892;
	mul.f32 	%f511, %f892, 0f00000000;
	selp.f32 	%f556, %f554, %f553, %p96;
	selp.f32 	%f558, %f555, %f557, %p97;
	and.b32  	%r298, %r297, 2;
	setp.eq.f32 	%p99, %f562, %f896;
	mul.f32 	%f563, %f896, 0f00000000;
	setp.eq.s32 	%p119, %r316, 0;
	sub.f32 	%f613, %f214, %f609;
	selp.f32 	%f92, %f616, %f611, %p120;
	abs.f32 	%f617, %f900;
	setp.eq.s32 	%p139, %r346, 0;
	sub.f32 	%f664, %f214, %f660;
	selp.f32 	%f668, %f667, %f662, %p140;
	abs.f32 	%f669, %f904;
	selp.f32 	%f713, %f711, %f710, %p158;
	selp.f32 	%f715, %f712, %f714, %p159;
	and.b32  	%r362, %r361, 2;
	setp.eq.f32 	%p161, %f719, %f916;
	mul.f32 	%f720, %f916, 0f00000000;
	selp.f32 	%f764, %f762, %f761, %p178;
	selp.f32 	%f766, %f763, %f765, %p179;
	and.b32  	%r384, %r383, 2;
	setp.eq.f32 	%p181, %f770, %f920;
	mul.f32 	%f771, %f920, 0f00000000;
	selp.f32 	%f817, %f815, %f816, %p199;
	and.b32  	%r401, %r399, 2;
	mul.f32 	%f2, %f216, %f216;
	mul.f32 	%f7, %f250, %f250;
	mul.f32 	%f11, %f285, %f285;
	mul.f32 	%f16, %f319, %f319;
	mul.f32 	%f20, %f354, %f354;
	mul.f32 	%f25, %f388, %f388;
	mul.f32 	%f29, %f423, %f423;
	mul.f32 	%f34, %f457, %f457;
	setp.eq.s32 	%p78, %r275, 0;
	sub.f32 	%f508, %f214, %f504;
	selp.f32 	%f55, %f511, %f506, %p79;
	abs.f32 	%f512, %f892;
	setp.eq.s32 	%p98, %r298, 0;
	sub.f32 	%f560, %f214, %f556;
	selp.f32 	%f564, %f563, %f558, %p99;
	abs.f32 	%f565, %f896;
	selp.f32 	%f614, %f609, %f613, %p119;
	setp.gt.f32 	%p121, %f617, 0f4B800000;
	add.f32 	%f618, %f92, 0f3F800000;
	selp.f32 	%f665, %f660, %f664, %p139;
	setp.gt.f32 	%p141, %f669, 0f4B800000;
	add.f32 	%f670, %f668, 0f3F800000;
	setp.eq.s32 	%p160, %r362, 0;
	sub.f32 	%f717, %f214, %f713;
	selp.f32 	%f165, %f720, %f715, %p161;
	abs.f32 	%f721, %f916;
	setp.eq.s32 	%p180, %r384, 0;
	sub.f32 	%f768, %f214, %f764;
	selp.f32 	%f772, %f771, %f766, %p181;
	abs.f32 	%f773, %f920;
	setp.eq.s32 	%p200, %r401, 0;
	neg.f32 	%f819, %f817;
	add.s32 	%r402, %r399, 1;
	cvt.rzi.f32.f32 	%f824, %f908;
	mul.f32 	%f220, %f2, 0f3C0AF64E;
	mul.f32 	%f254, %f7, 0f3C0AF64E;
	mul.f32 	%f289, %f11, 0f3C0AF64E;
	mul.f32 	%f323, %f16, 0f3C0AF64E;
	mul.f32 	%f358, %f20, 0f3C0AF64E;
	mul.f32 	%f392, %f25, 0f3C0AF64E;
	mul.f32 	%f427, %f29, 0f3C0AF64E;
	mul.f32 	%f460, %f34, 0f3C0AF64E;
	selp.f32 	%f509, %f504, %f508, %p78;
	setp.gt.f32 	%p80, %f512, 0f4B800000;
	add.f32 	%f513, %f55, 0f3F800000;
	selp.f32 	%f561, %f556, %f560, %p98;
	setp.gt.f32 	%p100, %f565, 0f4B800000;
	add.f32 	%f566, %f564, 0f3F800000;
	selp.f32 	%f93, %f618, %f614, %p121;
	selp.f32 	%f671, %f670, %f665, %p141;
	selp.f32 	%f718, %f713, %f717, %p160;
	setp.gt.f32 	%p162, %f721, 0f4B800000;
	add.f32 	%f722, %f165, 0f3F800000;
	selp.f32 	%f769, %f764, %f768, %p180;
	setp.gt.f32 	%p182, %f773, 0f4B800000;
	add.f32 	%f774, %f772, 0f3F800000;
	selp.f32 	%f818, %f816, %f815, %p199;
	selp.f32 	%f820, %f817, %f819, %p200;
	and.b32  	%r403, %r402, 2;
	setp.eq.f32 	%p202, %f824, %f908;
	mul.f32 	%f825, %f908, 0f00000000;
	mul.f32 	%f6, %f220, %f882;
	mul.f32 	%f255, %f254, %f883;
	mul.f32 	%f15, %f289, %f884;
	mul.f32 	%f324, %f323, %f885;
	mul.f32 	%f24, %f358, %f886;
	mul.f32 	%f393, %f392, %f887;
	mul.f32 	%f33, %f427, %f888;
	mul.f32 	%f461, %f460, %f889;
	selp.f32 	%f56, %f513, %f509, %p80;
	selp.f32 	%f567, %f566, %f561, %p100;
	mov.b32 	%r329, %f671;
	mov.b32 	%r328, %f93;
	mov.b32 	%r335, %f668;
	mov.b32 	%r334, %f92;
	selp.f32 	%f166, %f722, %f718, %p162;
	selp.f32 	%f775, %f774, %f769, %p182;
	setp.eq.s32 	%p201, %r403, 0;
	sub.f32 	%f822, %f214, %f818;
	selp.f32 	%f131, %f825, %f820, %p202;
	abs.f32 	%f826, %f908;
	mov.b32 	%r205, %f255;
	mov.b32 	%r204, %f6;
	mov.b32 	%r223, %f324;
	mov.b32 	%r222, %f15;
	mov.b32 	%r241, %f393;
	mov.b32 	%r240, %f24;
	mov.b32 	%r259, %f461;
	mov.b32 	%r258, %f33;
	mov.b32 	%r287, %f567;
	mov.b32 	%r286, %f56;
	mov.b32 	%r290, %f564;
	mov.b32 	%r289, %f55;
	xor.b32  	%r332, %r335, -2147483648;
	xor.b32  	%r331, %r334, -2147483648;
	mov.b32 	%r373, %f775;
	mov.b32 	%r372, %f166;
	mov.b32 	%r376, %f772;
	mov.b32 	%r375, %f165;
	selp.f32 	%f823, %f818, %f822, %p201;
	setp.gt.f32 	%p203, %f826, 0f4B800000;
	add.f32 	%f827, %f131, 0f3F800000;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	and.b32  	%r13, %r3, 16;
	// begin inline asm
	cvt.rn.f16x2.f32 %r203, %r205, %r204;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r221, %r223, %r222;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r239, %r241, %r240;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r257, %r259, %r258;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r285, %r287, %r286;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r288, %r290, %r289;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r327, %r329, %r328;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r330, %r332, %r331;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r333, %r335, %r334;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r336, %r329, %r328;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r371, %r373, %r372;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r374, %r376, %r375;
	// end inline asm
	selp.f32 	%f132, %f827, %f823, %p203;
	add.f32 	%f850, %f912, %f912;
	mov.b32 	%r426, %f850;
	and.b32  	%r427, %r426, -2147483648;
	or.b32  	%r428, %r427, 1056964608;
	mov.b32 	%f851, %r428;
	add.f32 	%f852, %f850, %f851;
	cvt.rzi.f32.f32 	%f853, %f852;
	abs.f32 	%f854, %f850;
	setp.gt.f32 	%p217, %f854, 0f4B000000;
	selp.f32 	%f855, %f850, %f853, %p217;
	cvt.rzi.f32.f32 	%f856, %f850;
	setp.lt.f32 	%p218, %f854, 0f3F000000;
	selp.f32 	%f857, %f856, %f855, %p218;
	cvt.rzi.s32.f32 	%r429, %f857;
	fma.rn.f32 	%f858, %f857, 0fBF000000, %f912;
	mul.f32 	%f859, %f858, %f858;
	fma.rn.f32 	%f860, %f859, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f861, %f859, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f862, %f860, %f859, 0fC0A55DF6;
	fma.rn.f32 	%f863, %f861, %f859, 0f4081E0CF;
	fma.rn.f32 	%f864, %f859, %f858, 0f00000000;
	fma.rn.f32 	%f865, %f863, %f859, 0fC09DE9E6;
	fma.rn.f32 	%f866, %f862, %f864, 0f00000000;
	fma.rn.f32 	%f867, %f865, %f859, 0f3F800000;
	fma.rn.f32 	%f868, %f858, 0f40490FDB, %f866;
	and.b32  	%r430, %r429, 1;
	setp.eq.b32 	%p219, %r430, 1;
	selp.f32 	%f869, %f867, %f868, %p219;
	selp.f32 	%f870, %f868, %f867, %p219;
	and.b32  	%r431, %r429, 2;
	setp.eq.s32 	%p220, %r431, 0;
	neg.f32 	%f871, %f869;
	selp.f32 	%f872, %f869, %f871, %p220;
	add.s32 	%r432, %r429, 1;
	and.b32  	%r433, %r432, 2;
	setp.eq.s32 	%p221, %r433, 0;
	sub.f32 	%f874, %f214, %f870;
	selp.f32 	%f875, %f870, %f874, %p221;
	cvt.rzi.f32.f32 	%f876, %f912;
	setp.eq.f32 	%p222, %f876, %f912;
	mul.f32 	%f877, %f912, 0f00000000;
	selp.f32 	%f878, %f877, %f872, %p222;
	abs.f32 	%f879, %f912;
	setp.gt.f32 	%p223, %f879, 0f4B800000;
	add.f32 	%f880, %f878, 0f3F800000;
	selp.f32 	%f881, %f880, %f875, %p223;
	mov.b32 	%r416, %f881;
	mov.b32 	%r415, %f132;
	// begin inline asm
	cvt.rn.f16x2.f32 %r414, %r416, %r415;
	// end inline asm
	mov.b32 	%r422, %f878;
	xor.b32  	%r419, %r422, -2147483648;
	mov.b32 	%r421, %f131;
	xor.b32  	%r418, %r421, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r417, %r419, %r418;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r420, %r422, %r421;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r423, %r416, %r415;
	// end inline asm
	shl.b32 	%r435, %r5, 12;
	or.b32  	%r436, %r13, %r1;
	or.b32  	%r96, %r436, %r12;
	and.b32  	%r437, %r9, 28;
	shl.b32 	%r438, %r4, 5;
	and.b32  	%r439, %r438, 96;
	or.b32  	%r97, %r439, %r437;
	and.b32  	%r98, %r438, 128;
	or.b32  	%r440, %r97, %r98;
	or.b32  	%r99, %r440, %r435;
	and.b32  	%r100, %r3, 8;
	shr.u32 	%r441, %r1, 3;
	mul.lo.s32 	%r442, %r441, 130;
	shr.u32 	%r443, %r1, 1;
	bfe.u32 	%r444, %r1, 1, 1;
	shl.b32 	%r445, %r3, 4;
	or.b32  	%r446, %r445, %r100;
	shr.u32 	%r447, %r446, 2;
	and.b32  	%r448, %r447, 30;
	and.b32  	%r449, %r1, 1;
	bfe.u32 	%r450, %r1, 2, 1;
	mad.lo.s32 	%r451, %r21, 65, %r442;
	mad.lo.s32 	%r452, %r449, 1040, %r451;
	mad.lo.s32 	%r453, %r444, 520, %r452;
	mad.lo.s32 	%r454, %r450, 260, %r453;
	add.s32 	%r455, %r454, %r448;
	mul.wide.u32 	%rd74, %r455, 4;
	mov.u64 	%rd75, shmem;
	add.s64 	%rd5, %rd75, %rd74;
	add.s32 	%r456, %r455, 32;
	mul.wide.u32 	%rd76, %r456, 4;
	add.s64 	%rd6, %rd75, %rd76;
	add.s32 	%r457, %r455, 1;
	mul.wide.u32 	%rd77, %r457, 4;
	add.s64 	%rd7, %rd75, %rd77;
	add.s32 	%r458, %r455, 33;
	mul.wide.u32 	%rd78, %r458, 4;
	add.s64 	%rd8, %rd75, %rd78;
	mul.lo.s32 	%r459, %r18, 130;
	mul.lo.s32 	%r460, %r21, 520;
	mul.lo.s32 	%r461, %r17, 65;
	and.b32  	%r462, %r2, 32;
	mul.lo.s32 	%r463, %r23, 1040;
	mul.lo.s32 	%r464, %r20, 260;
	or.b32  	%r465, %r460, %r443;
	add.s32 	%r466, %r465, %r459;
	add.s32 	%r467, %r466, %r462;
	add.s32 	%r468, %r467, %r461;
	add.s32 	%r469, %r468, %r463;
	add.s32 	%r470, %r469, %r464;
	or.b32  	%r471, %r443, 8;
	add.s32 	%r472, %r459, %r460;
	add.s32 	%r473, %r472, %r471;
	add.s32 	%r474, %r473, %r462;
	add.s32 	%r475, %r474, %r461;
	add.s32 	%r476, %r475, %r463;
	add.s32 	%r477, %r476, %r464;
	or.b32  	%r478, %r443, 16;
	add.s32 	%r479, %r472, %r478;
	add.s32 	%r480, %r479, %r462;
	add.s32 	%r481, %r480, %r461;
	add.s32 	%r482, %r481, %r463;
	add.s32 	%r483, %r482, %r464;
	or.b32  	%r484, %r443, 24;
	add.s32 	%r485, %r472, %r484;
	add.s32 	%r486, %r485, %r462;
	add.s32 	%r487, %r486, %r461;
	add.s32 	%r488, %r487, %r463;
	add.s32 	%r489, %r488, %r464;
	shl.b32 	%r490, %r4, 3;
	and.b32  	%r491, %r490, 960;
	or.b32  	%r492, %r14, %r491;
	or.b32  	%r493, %r492, %r12;
	or.b32  	%r494, %r493, %r11;
	or.b32  	%r495, %r494, %r10;
	bfe.u32 	%r496, %r495, 1, 5;
	mul.lo.s32 	%r497, %r496, 65;
	or.b32  	%r498, %r462, %r443;
	add.s32 	%r499, %r497, %r498;
	or.b32  	%r500, %r471, %r462;
	add.s32 	%r501, %r497, %r500;
	or.b32  	%r502, %r478, %r462;
	add.s32 	%r503, %r497, %r502;
	or.b32  	%r504, %r484, %r462;
	add.s32 	%r505, %r497, %r504;
	shl.b32 	%r506, %r1, 1;
	or.b32  	%r507, %r506, %r21;
	mul.lo.s32 	%r508, %r507, 65;
	add.s32 	%r509, %r448, %r508;
	mul.wide.u32 	%rd79, %r509, 4;
	add.s64 	%rd9, %rd75, %rd79;
	cvt.u64.u32 	%rd80, %r448;
	cvt.u64.u32 	%rd81, %r508;
	add.s64 	%rd82, %rd81, %rd80;
	shl.b64 	%rd83, %rd82, 2;
	add.s64 	%rd10, %rd75, %rd83;
	shl.b32 	%r510, %r1, 2;
	shl.b32 	%r511, %r7, 18;
	add.s32 	%r512, %r511, -786432;
	or.b32  	%r513, %r22, %r510;
	cvt.s64.s32 	%rd11, %r512;
	or.b32  	%r514, %r513, %r491;
	shl.b32 	%r101, %r514, 8;
	mul.wide.u32 	%rd12, %r505, 4;
	mul.wide.u32 	%rd13, %r503, 4;
	mul.wide.u32 	%rd14, %r501, 4;
	mul.wide.u32 	%rd15, %r499, 4;
	mul.wide.u32 	%rd16, %r489, 4;
	mul.wide.u32 	%rd17, %r483, 4;
	mul.wide.u32 	%rd18, %r477, 4;
	mul.wide.u32 	%rd19, %r470, 4;
	setp.eq.s32 	%p225, %r100, 0;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r7798, %r7785;
	mov.u32 	%r7823, %r7785;
	mov.u32 	%r7822, %r7785;
	mov.u32 	%r7821, %r7785;
	mov.u32 	%r7820, %r7785;
	mov.u32 	%r7819, %r7785;
	mov.u32 	%r7818, %r7785;
	mov.u32 	%r7817, %r7785;
	mov.u32 	%r7816, %r7785;
	mov.u32 	%r7815, %r7785;
	mov.u32 	%r7814, %r7785;
	mov.u32 	%r7813, %r7785;
	mov.u32 	%r7812, %r7785;
	bra.uni 	LBB0_117;
LBB0_121:                               // %L29522
                                        //   in Loop: Header=BB0_117 Depth=1
	setp.ne.s32 	%p236, %r7798, 130816;
	add.s32 	%r7798, %r7798, 256;
	add.s32 	%r7782, %r7798, %r5;
	setp.gt.s32 	%p237, %r6, %r7782;
	and.pred  	%p238, %p236, %p237;
	@%p238 bra 	LBB0_117;
	bra.uni 	LBB0_122;
LBB0_117:                               // %L1363
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_118 Depth 2
	or.b32  	%r532, %r96, %r7798;
	shl.b32 	%r533, %r532, 12;
	add.s32 	%r534, %r99, %r533;
	shr.s32 	%r535, %r534, 31;
	shr.u32 	%r536, %r535, 3;
	add.s32 	%r537, %r534, %r536;
	shr.s32 	%r538, %r537, 29;
	setp.lt.s32 	%p226, %r534, 0;
	and.b32  	%r539, %r537, -536870912;
	setp.ne.s32 	%p227, %r539, %r534;
	and.pred  	%p228, %p226, %p227;
	selp.u32 	%r540, 1, 0, %p228;
	sub.s32 	%r541, %r540, %r538;
	shl.b32 	%r542, %r541, 29;
	add.s32 	%r543, %r542, %r534;
	mul.wide.s32 	%rd85, %r543, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.v4.u32 	{%r544, %r545, %r546, %r547}, [%rd86];
	selp.b32 	%r548, %r546, %r544, %p225;
	shfl.sync.bfly.b32	%r549, %r548, 8, 31, -1;
	selp.b32 	%r516, %r544, %r549, %p225;
	selp.b32 	%r517, %r549, %r546, %p225;
	selp.b32 	%r550, %r547, %r545, %p225;
	shfl.sync.bfly.b32	%r551, %r550, 8, 31, -1;
	selp.b32 	%r524, %r545, %r551, %p225;
	selp.b32 	%r525, %r551, %r547, %p225;
	mov.u32 	%r526, 21520;
	// begin inline asm
	prmt.b32 %r515, %r516, %r517, %r526;
	// end inline asm
	mov.u32 	%r530, 30258;
	// begin inline asm
	prmt.b32 %r519, %r516, %r517, %r530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r523, %r524, %r525, %r526;
	// end inline asm
	// begin inline asm
	prmt.b32 %r527, %r524, %r525, %r530;
	// end inline asm
	st.shared.u32 	[%rd5], %r515;
	st.shared.u32 	[%rd6], %r519;
	st.shared.u32 	[%rd7], %r523;
	st.shared.u32 	[%rd8], %r527;
	bar.sync 	0;
	mov.u32 	%r7811, 256;
	mov.u64 	%rd109, %rd75;
LBB0_118:                               // %L4497
                                        //   Parent Loop BB0_117 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd87, %rd109, %rd19;
	ld.shared.u32 	%r7736, [%rd87];
	add.s64 	%rd88, %rd109, %rd18;
	ld.shared.u32 	%r7737, [%rd88];
	add.s64 	%rd89, %rd109, %rd17;
	ld.shared.u32 	%r7738, [%rd89];
	add.s64 	%rd90, %rd109, %rd16;
	ld.shared.u32 	%r7739, [%rd90];
	// begin inline asm
	mov.b32 %r557, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r568, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r556, %r7736, -2004318072;
	mov.u32 	%r555, 983055;
	// begin inline asm
	lop3.b32 %r554, %r555, %r556, %r557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r558, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r559, %r557, %r558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r562, %r554, %r559;
	// end inline asm
	mov.u32 	%r566, 15728880;
	// begin inline asm
	lop3.b32 %r565, %r566, %r556, %r568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r569, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r570, %r568, %r569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r573, %r565, %r570;
	// end inline asm
	shr.u32 	%r578, %r556, 8;
	// begin inline asm
	lop3.b32 %r576, %r555, %r578, %r557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r580, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r581, %r557, %r580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r584, %r576, %r581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r587, %r566, %r578, %r568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r591, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r592, %r568, %r591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r595, %r587, %r592;
	// end inline asm
	// begin inline asm
	mov.b32 %r603, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r614, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r602, %r7737, -2004318072;
	// begin inline asm
	lop3.b32 %r600, %r555, %r602, %r603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r604, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r605, %r603, %r604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r608, %r600, %r605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r611, %r566, %r602, %r614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r615, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r616, %r614, %r615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r619, %r611, %r616;
	// end inline asm
	shr.u32 	%r624, %r602, 8;
	// begin inline asm
	lop3.b32 %r622, %r555, %r624, %r603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r626, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r627, %r603, %r626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r630, %r622, %r627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r633, %r566, %r624, %r614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r637, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r638, %r614, %r637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r641, %r633, %r638;
	// end inline asm
	// begin inline asm
	mov.b32 %r649, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r660, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r648, %r7738, -2004318072;
	// begin inline asm
	lop3.b32 %r646, %r555, %r648, %r649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r650, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r651, %r649, %r650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r654, %r646, %r651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r657, %r566, %r648, %r660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r661, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r662, %r660, %r661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r665, %r657, %r662;
	// end inline asm
	shr.u32 	%r670, %r648, 8;
	// begin inline asm
	lop3.b32 %r668, %r555, %r670, %r649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r672, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r673, %r649, %r672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r676, %r668, %r673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r679, %r566, %r670, %r660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r683, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r684, %r660, %r683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r687, %r679, %r684;
	// end inline asm
	// begin inline asm
	mov.b32 %r695, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r706, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r694, %r7739, -2004318072;
	// begin inline asm
	lop3.b32 %r692, %r555, %r694, %r695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r696, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r697, %r695, %r696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r700, %r692, %r697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r703, %r566, %r694, %r706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r707, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r708, %r706, %r707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r711, %r703, %r708;
	// end inline asm
	shr.u32 	%r716, %r694, 8;
	// begin inline asm
	lop3.b32 %r714, %r555, %r716, %r695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r718, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r719, %r695, %r718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r722, %r714, %r719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r725, %r566, %r716, %r706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r729, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r730, %r706, %r729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r733, %r725, %r730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r736, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r738, %r736, %r562;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r741, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r743, %r741, %r573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r746, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r748, %r746, %r584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r751, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r753, %r751, %r595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r756, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r758, %r756, %r608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r761, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r763, %r761, %r619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r766, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r768, %r766, %r630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r771, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r773, %r771, %r641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r776, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r778, %r776, %r654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r781, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r783, %r781, %r665;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r786, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r788, %r786, %r676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r791, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r793, %r791, %r687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r796, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r798, %r796, %r700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r801, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r803, %r801, %r711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r806, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r808, %r806, %r722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r811, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r813, %r811, %r733;
	// end inline asm
	// begin inline asm
	mov.b32 %r821, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r832, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r820, %r7812, -2004318072;
	// begin inline asm
	lop3.b32 %r818, %r555, %r820, %r821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r822, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r823, %r821, %r822;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r826, %r818, %r823;
	// end inline asm
	// begin inline asm
	lop3.b32 %r829, %r566, %r820, %r832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r833, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r834, %r832, %r833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r837, %r829, %r834;
	// end inline asm
	shr.u32 	%r842, %r820, 8;
	// begin inline asm
	lop3.b32 %r840, %r555, %r842, %r821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r844, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r845, %r821, %r844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r848, %r840, %r845;
	// end inline asm
	// begin inline asm
	lop3.b32 %r851, %r566, %r842, %r832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r855, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r856, %r832, %r855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r859, %r851, %r856;
	// end inline asm
	// begin inline asm
	mov.b32 %r867, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r878, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r866, %r7813, -2004318072;
	// begin inline asm
	lop3.b32 %r864, %r555, %r866, %r867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r868, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r869, %r867, %r868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r872, %r864, %r869;
	// end inline asm
	// begin inline asm
	lop3.b32 %r875, %r566, %r866, %r878, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r879, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r880, %r878, %r879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r883, %r875, %r880;
	// end inline asm
	shr.u32 	%r888, %r866, 8;
	// begin inline asm
	lop3.b32 %r886, %r555, %r888, %r867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r890, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r891, %r867, %r890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r894, %r886, %r891;
	// end inline asm
	// begin inline asm
	lop3.b32 %r897, %r566, %r888, %r878, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r901, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r902, %r878, %r901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r905, %r897, %r902;
	// end inline asm
	// begin inline asm
	mov.b32 %r913, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r924, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r912, %r7814, -2004318072;
	// begin inline asm
	lop3.b32 %r910, %r555, %r912, %r913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r914, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r915, %r913, %r914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r918, %r910, %r915;
	// end inline asm
	// begin inline asm
	lop3.b32 %r921, %r566, %r912, %r924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r925, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r926, %r924, %r925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r929, %r921, %r926;
	// end inline asm
	shr.u32 	%r934, %r912, 8;
	// begin inline asm
	lop3.b32 %r932, %r555, %r934, %r913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r936, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r937, %r913, %r936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r940, %r932, %r937;
	// end inline asm
	// begin inline asm
	lop3.b32 %r943, %r566, %r934, %r924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r947, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r948, %r924, %r947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r951, %r943, %r948;
	// end inline asm
	// begin inline asm
	mov.b32 %r959, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r970, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r958, %r7815, -2004318072;
	// begin inline asm
	lop3.b32 %r956, %r555, %r958, %r959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r960, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r961, %r959, %r960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r964, %r956, %r961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r967, %r566, %r958, %r970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r971, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r972, %r970, %r971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r975, %r967, %r972;
	// end inline asm
	shr.u32 	%r980, %r958, 8;
	// begin inline asm
	lop3.b32 %r978, %r555, %r980, %r959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r982, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r983, %r959, %r982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r986, %r978, %r983;
	// end inline asm
	// begin inline asm
	lop3.b32 %r989, %r566, %r980, %r970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r993, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r994, %r970, %r993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r997, %r989, %r994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1000, %r203, %r826, %r738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1004, %r203, %r837, %r743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1008, %r203, %r848, %r748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1012, %r203, %r859, %r753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1016, %r203, %r872, %r758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1020, %r203, %r883, %r763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1024, %r203, %r894, %r768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1028, %r203, %r905, %r773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1032, %r203, %r918, %r778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1036, %r203, %r929, %r783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1040, %r203, %r940, %r788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1044, %r203, %r951, %r793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1048, %r203, %r964, %r798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1052, %r203, %r975, %r803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1056, %r203, %r986, %r808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1060, %r203, %r997, %r813;
	// end inline asm
	// begin inline asm
	mov.b32 %r1069, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1080, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1068, %r7816, -2004318072;
	// begin inline asm
	lop3.b32 %r1066, %r555, %r1068, %r1069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1070, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1071, %r1069, %r1070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1074, %r1066, %r1071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1077, %r566, %r1068, %r1080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1081, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1082, %r1080, %r1081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1085, %r1077, %r1082;
	// end inline asm
	shr.u32 	%r1090, %r1068, 8;
	// begin inline asm
	lop3.b32 %r1088, %r555, %r1090, %r1069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1092, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1093, %r1069, %r1092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1096, %r1088, %r1093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1099, %r566, %r1090, %r1080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1103, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1104, %r1080, %r1103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1107, %r1099, %r1104;
	// end inline asm
	// begin inline asm
	mov.b32 %r1115, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1126, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1114, %r7817, -2004318072;
	// begin inline asm
	lop3.b32 %r1112, %r555, %r1114, %r1115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1116, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1117, %r1115, %r1116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1120, %r1112, %r1117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1123, %r566, %r1114, %r1126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1127, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1128, %r1126, %r1127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1131, %r1123, %r1128;
	// end inline asm
	shr.u32 	%r1136, %r1114, 8;
	// begin inline asm
	lop3.b32 %r1134, %r555, %r1136, %r1115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1138, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1139, %r1115, %r1138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1142, %r1134, %r1139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1145, %r566, %r1136, %r1126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1149, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1150, %r1126, %r1149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1153, %r1145, %r1150;
	// end inline asm
	// begin inline asm
	mov.b32 %r1161, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1172, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1160, %r7818, -2004318072;
	// begin inline asm
	lop3.b32 %r1158, %r555, %r1160, %r1161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1162, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1163, %r1161, %r1162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1166, %r1158, %r1163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1169, %r566, %r1160, %r1172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1173, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1174, %r1172, %r1173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1177, %r1169, %r1174;
	// end inline asm
	shr.u32 	%r1182, %r1160, 8;
	// begin inline asm
	lop3.b32 %r1180, %r555, %r1182, %r1161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1184, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1185, %r1161, %r1184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1188, %r1180, %r1185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1191, %r566, %r1182, %r1172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1195, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1196, %r1172, %r1195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1199, %r1191, %r1196;
	// end inline asm
	// begin inline asm
	mov.b32 %r1207, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1218, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1206, %r7819, -2004318072;
	// begin inline asm
	lop3.b32 %r1204, %r555, %r1206, %r1207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1208, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1209, %r1207, %r1208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1212, %r1204, %r1209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1215, %r566, %r1206, %r1218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1219, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1220, %r1218, %r1219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1223, %r1215, %r1220;
	// end inline asm
	shr.u32 	%r1228, %r1206, 8;
	// begin inline asm
	lop3.b32 %r1226, %r555, %r1228, %r1207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1230, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1231, %r1207, %r1230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1234, %r1226, %r1231;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1237, %r566, %r1228, %r1218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1241, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1242, %r1218, %r1241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1245, %r1237, %r1242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1248, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1250, %r1248, %r1074, %r1000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1254, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1256, %r1254, %r1085, %r1004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1260, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1262, %r1260, %r1096, %r1008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1266, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1268, %r1266, %r1107, %r1012;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1272, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1274, %r1272, %r1120, %r1016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1278, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1280, %r1278, %r1131, %r1020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1284, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1286, %r1284, %r1142, %r1024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1290, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1292, %r1290, %r1153, %r1028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1296, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1298, %r1296, %r1166, %r1032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1302, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1304, %r1302, %r1177, %r1036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1308, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1310, %r1308, %r1188, %r1040;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1314, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1316, %r1314, %r1199, %r1044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1320, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1322, %r1320, %r1212, %r1048;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1326, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1328, %r1326, %r1223, %r1052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1332, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1334, %r1332, %r1234, %r1056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1338, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1340, %r1338, %r1245, %r1060;
	// end inline asm
	// begin inline asm
	mov.b32 %r1349, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1360, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1348, %r7820, -2004318072;
	// begin inline asm
	lop3.b32 %r1346, %r555, %r1348, %r1349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1350, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1351, %r1349, %r1350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1354, %r1346, %r1351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1357, %r566, %r1348, %r1360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1361, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1362, %r1360, %r1361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1365, %r1357, %r1362;
	// end inline asm
	shr.u32 	%r1370, %r1348, 8;
	// begin inline asm
	lop3.b32 %r1368, %r555, %r1370, %r1349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1372, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1373, %r1349, %r1372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1376, %r1368, %r1373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1379, %r566, %r1370, %r1360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1383, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1384, %r1360, %r1383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1387, %r1379, %r1384;
	// end inline asm
	// begin inline asm
	mov.b32 %r1395, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1406, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1394, %r7821, -2004318072;
	// begin inline asm
	lop3.b32 %r1392, %r555, %r1394, %r1395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1396, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1397, %r1395, %r1396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1400, %r1392, %r1397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1403, %r566, %r1394, %r1406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1407, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1408, %r1406, %r1407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1411, %r1403, %r1408;
	// end inline asm
	shr.u32 	%r1416, %r1394, 8;
	// begin inline asm
	lop3.b32 %r1414, %r555, %r1416, %r1395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1418, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1419, %r1395, %r1418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1422, %r1414, %r1419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1425, %r566, %r1416, %r1406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1429, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1430, %r1406, %r1429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1433, %r1425, %r1430;
	// end inline asm
	// begin inline asm
	mov.b32 %r1441, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1452, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1440, %r7822, -2004318072;
	// begin inline asm
	lop3.b32 %r1438, %r555, %r1440, %r1441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1442, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1443, %r1441, %r1442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1446, %r1438, %r1443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1449, %r566, %r1440, %r1452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1453, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1454, %r1452, %r1453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1457, %r1449, %r1454;
	// end inline asm
	shr.u32 	%r1462, %r1440, 8;
	// begin inline asm
	lop3.b32 %r1460, %r555, %r1462, %r1441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1464, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1465, %r1441, %r1464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1468, %r1460, %r1465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1471, %r566, %r1462, %r1452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1475, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1476, %r1452, %r1475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1479, %r1471, %r1476;
	// end inline asm
	// begin inline asm
	mov.b32 %r1487, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1498, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1486, %r7823, -2004318072;
	// begin inline asm
	lop3.b32 %r1484, %r555, %r1486, %r1487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1488, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1489, %r1487, %r1488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1492, %r1484, %r1489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1495, %r566, %r1486, %r1498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1499, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1500, %r1498, %r1499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1503, %r1495, %r1500;
	// end inline asm
	shr.u32 	%r1508, %r1486, 8;
	// begin inline asm
	lop3.b32 %r1506, %r555, %r1508, %r1487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1510, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1511, %r1487, %r1510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1514, %r1506, %r1511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1517, %r566, %r1508, %r1498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1521, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1522, %r1498, %r1521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1525, %r1517, %r1522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1599, %r239, %r1354, %r1250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1596, %r239, %r1365, %r1256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1608, %r239, %r1376, %r1262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1605, %r239, %r1387, %r1268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1617, %r239, %r1400, %r1274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1614, %r239, %r1411, %r1280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1626, %r239, %r1422, %r1286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1623, %r239, %r1433, %r1292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1635, %r239, %r1446, %r1298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1632, %r239, %r1457, %r1304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1644, %r239, %r1468, %r1310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1641, %r239, %r1479, %r1316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1653, %r239, %r1492, %r1322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1650, %r239, %r1503, %r1328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1662, %r239, %r1514, %r1334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1659, %r239, %r1525, %r1340;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1592, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1594, %r1592, %r1596;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1597, %r285, %r1599, %r1594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1601, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1603, %r1601, %r1605;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1606, %r285, %r1608, %r1603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1610, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1612, %r1610, %r1614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1615, %r285, %r1617, %r1612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1619, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1621, %r1619, %r1623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1624, %r285, %r1626, %r1621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1628, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1630, %r1628, %r1632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1633, %r285, %r1635, %r1630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1637, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1639, %r1637, %r1641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1642, %r285, %r1644, %r1639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1646, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1648, %r1646, %r1650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1651, %r285, %r1653, %r1648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1655, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1657, %r1655, %r1659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1660, %r285, %r1662, %r1657;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1664, %r288, %r1599;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1667, %r285, %r1596, %r1664;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1671, %r288, %r1608;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1674, %r285, %r1605, %r1671;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1678, %r288, %r1617;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1681, %r285, %r1614, %r1678;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1685, %r288, %r1626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1688, %r285, %r1623, %r1685;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1692, %r288, %r1635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1695, %r285, %r1632, %r1692;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1699, %r288, %r1644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1702, %r285, %r1641, %r1699;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1706, %r288, %r1653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1709, %r285, %r1650, %r1706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1713, %r288, %r1662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1716, %r285, %r1659, %r1713;
	// end inline asm
	mov.u32 	%r1728, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1807, %r1804}, {%r327, %r333, %r330, %r336}, {%r1597, %r1667}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1816, %r1813}, {%r327, %r333, %r330, %r336}, {%r1606, %r1674}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1825, %r1822}, {%r327, %r333, %r330, %r336}, {%r1615, %r1681}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1834, %r1831}, {%r327, %r333, %r330, %r336}, {%r1624, %r1688}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1843, %r1840}, {%r327, %r333, %r330, %r336}, {%r1633, %r1695}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1852, %r1849}, {%r327, %r333, %r330, %r336}, {%r1642, %r1702}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1861, %r1858}, {%r327, %r333, %r330, %r336}, {%r1651, %r1709}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1870, %r1867}, {%r327, %r333, %r330, %r336}, {%r1660, %r1716}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1800, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1802, %r1800, %r1804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1805, %r371, %r1807, %r1802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1809, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1811, %r1809, %r1813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1814, %r371, %r1816, %r1811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1818, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1820, %r1818, %r1822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1823, %r371, %r1825, %r1820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1827, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1829, %r1827, %r1831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1832, %r371, %r1834, %r1829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1836, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1838, %r1836, %r1840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1841, %r371, %r1843, %r1838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1845, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1847, %r1845, %r1849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1850, %r371, %r1852, %r1847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1854, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1856, %r1854, %r1858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1859, %r371, %r1861, %r1856;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1863, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1865, %r1863, %r1867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1868, %r371, %r1870, %r1865;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1872, %r374, %r1807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1875, %r371, %r1804, %r1872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1879, %r374, %r1816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1882, %r371, %r1813, %r1879;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1886, %r374, %r1825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1889, %r371, %r1822, %r1886;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1893, %r374, %r1834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1896, %r371, %r1831, %r1893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1900, %r374, %r1843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1903, %r371, %r1840, %r1900;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1907, %r374, %r1852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1910, %r371, %r1849, %r1907;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1914, %r374, %r1861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1917, %r371, %r1858, %r1914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1921, %r374, %r1870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1924, %r371, %r1867, %r1921;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1928, %r1929}, {%r414, %r420, %r417, %r423}, {%r1805, %r1875}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1938, %r1939}, {%r414, %r420, %r417, %r423}, {%r1814, %r1882}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1948, %r1949}, {%r414, %r420, %r417, %r423}, {%r1823, %r1889}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1958, %r1959}, {%r414, %r420, %r417, %r423}, {%r1832, %r1896}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1968, %r1969}, {%r414, %r420, %r417, %r423}, {%r1841, %r1903}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1978, %r1979}, {%r414, %r420, %r417, %r423}, {%r1850, %r1910}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1988, %r1989}, {%r414, %r420, %r417, %r423}, {%r1859, %r1917}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1998, %r1999}, {%r414, %r420, %r417, %r423}, {%r1868, %r1924}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2008, %r15, %r1928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2011, %r15, %r1929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2014, %r15, %r1938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2017, %r15, %r1939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2020, %r15, %r1948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2023, %r15, %r1949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2026, %r15, %r1958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2029, %r15, %r1959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2032, %r15, %r1968;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2035, %r15, %r1969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2038, %r15, %r1978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2041, %r15, %r1979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2044, %r15, %r1988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2047, %r15, %r1989;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2050, %r15, %r1998;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2053, %r15, %r1999;
	// end inline asm
	// begin inline asm
	mov.b32 %r2056, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2057, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2058, %r2008, %r2056;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2061, %r2058, %r2057;
	// end inline asm
	// begin inline asm
	mov.b32 %r2064, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2065, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2066, %r2011, %r2064;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2069, %r2066, %r2065;
	// end inline asm
	// begin inline asm
	mov.b32 %r2072, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2073, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2074, %r2014, %r2072;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2077, %r2074, %r2073;
	// end inline asm
	// begin inline asm
	mov.b32 %r2080, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2081, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2082, %r2017, %r2080;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2085, %r2082, %r2081;
	// end inline asm
	// begin inline asm
	mov.b32 %r2088, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2089, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2090, %r2020, %r2088;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2093, %r2090, %r2089;
	// end inline asm
	// begin inline asm
	mov.b32 %r2096, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2097, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2098, %r2023, %r2096;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2101, %r2098, %r2097;
	// end inline asm
	// begin inline asm
	mov.b32 %r2104, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2105, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2106, %r2026, %r2104;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2109, %r2106, %r2105;
	// end inline asm
	// begin inline asm
	mov.b32 %r2112, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2113, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2114, %r2029, %r2112;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2117, %r2114, %r2113;
	// end inline asm
	// begin inline asm
	mov.b32 %r2120, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2121, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2122, %r2032, %r2120;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2125, %r2122, %r2121;
	// end inline asm
	// begin inline asm
	mov.b32 %r2128, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2129, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2130, %r2035, %r2128;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2133, %r2130, %r2129;
	// end inline asm
	// begin inline asm
	mov.b32 %r2136, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2137, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2138, %r2038, %r2136;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2141, %r2138, %r2137;
	// end inline asm
	// begin inline asm
	mov.b32 %r2144, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2145, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2146, %r2041, %r2144;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2149, %r2146, %r2145;
	// end inline asm
	// begin inline asm
	mov.b32 %r2152, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2153, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2154, %r2044, %r2152;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2157, %r2154, %r2153;
	// end inline asm
	// begin inline asm
	mov.b32 %r2160, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2161, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2162, %r2047, %r2160;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2165, %r2162, %r2161;
	// end inline asm
	// begin inline asm
	mov.b32 %r2168, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2169, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2170, %r2050, %r2168;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2173, %r2170, %r2169;
	// end inline asm
	// begin inline asm
	mov.b32 %r2176, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2177, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2178, %r2053, %r2176;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2181, %r2178, %r2177;
	// end inline asm
	// begin inline asm
	mov.b32 %r2187, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2185, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2186, %r2187, %r2185;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2189, %r2061, %r2186;
	// end inline asm
	// begin inline asm
	mov.b32 %r2192, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2193, %r2187, %r2192;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2196, %r2069, %r2193;
	// end inline asm
	// begin inline asm
	mov.b32 %r2199, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2200, %r2187, %r2199;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2203, %r2077, %r2200;
	// end inline asm
	// begin inline asm
	mov.b32 %r2206, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2207, %r2187, %r2206;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2210, %r2085, %r2207;
	// end inline asm
	mov.u32 	%r2216, 25152;
	// begin inline asm
	prmt.b32 %r2213, %r2189, %r2203, %r2216;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2217, %r2196, %r2210, %r2216;
	// end inline asm
	shl.b32 	%r2224, %r2217, 4;
	mov.u32 	%r2222, 252645135;
	// begin inline asm
	lop3.b32 %r2221, %r2222, %r2213, %r2224, 202;
	// end inline asm
	xor.b32  	%r7740, %r2221, -2004318072;
	// begin inline asm
	mov.b32 %r2228, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2226, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2227, %r2228, %r2226;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2230, %r2093, %r2227;
	// end inline asm
	// begin inline asm
	mov.b32 %r2233, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2234, %r2228, %r2233;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2237, %r2101, %r2234;
	// end inline asm
	// begin inline asm
	mov.b32 %r2240, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2241, %r2228, %r2240;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2244, %r2109, %r2241;
	// end inline asm
	// begin inline asm
	mov.b32 %r2247, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2248, %r2228, %r2247;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2251, %r2117, %r2248;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2254, %r2230, %r2244, %r2216;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2258, %r2237, %r2251, %r2216;
	// end inline asm
	shl.b32 	%r2265, %r2258, 4;
	// begin inline asm
	lop3.b32 %r2262, %r2222, %r2254, %r2265, 202;
	// end inline asm
	xor.b32  	%r7741, %r2262, -2004318072;
	// begin inline asm
	mov.b32 %r2269, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2267, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2268, %r2269, %r2267;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2271, %r2125, %r2268;
	// end inline asm
	// begin inline asm
	mov.b32 %r2274, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2275, %r2269, %r2274;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2278, %r2133, %r2275;
	// end inline asm
	// begin inline asm
	mov.b32 %r2281, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2282, %r2269, %r2281;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2285, %r2141, %r2282;
	// end inline asm
	// begin inline asm
	mov.b32 %r2288, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2289, %r2269, %r2288;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2292, %r2149, %r2289;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2295, %r2271, %r2285, %r2216;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2299, %r2278, %r2292, %r2216;
	// end inline asm
	shl.b32 	%r2306, %r2299, 4;
	// begin inline asm
	lop3.b32 %r2303, %r2222, %r2295, %r2306, 202;
	// end inline asm
	xor.b32  	%r7742, %r2303, -2004318072;
	// begin inline asm
	mov.b32 %r2310, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2308, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2309, %r2310, %r2308;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2312, %r2157, %r2309;
	// end inline asm
	// begin inline asm
	mov.b32 %r2315, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2316, %r2310, %r2315;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2319, %r2165, %r2316;
	// end inline asm
	// begin inline asm
	mov.b32 %r2322, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2323, %r2310, %r2322;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2326, %r2173, %r2323;
	// end inline asm
	// begin inline asm
	mov.b32 %r2329, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2330, %r2310, %r2329;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2333, %r2181, %r2330;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2336, %r2312, %r2326, %r2216;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2340, %r2319, %r2333, %r2216;
	// end inline asm
	shl.b32 	%r2347, %r2340, 4;
	// begin inline asm
	lop3.b32 %r2344, %r2222, %r2336, %r2347, 202;
	// end inline asm
	xor.b32  	%r7743, %r2344, -2004318072;
	add.s64 	%rd91, %rd109, %rd15;
	st.shared.u32 	[%rd91], %r7740;
	add.s64 	%rd92, %rd109, %rd14;
	st.shared.u32 	[%rd92], %r7741;
	add.s64 	%rd93, %rd109, %rd13;
	st.shared.u32 	[%rd93], %r7742;
	add.s64 	%rd94, %rd109, %rd12;
	st.shared.u32 	[%rd94], %r7743;
	ld.shared.u32 	%r7812, [%rd87];
	ld.shared.u32 	%r7813, [%rd88];
	ld.shared.u32 	%r7814, [%rd89];
	ld.shared.u32 	%r7815, [%rd90];
	// begin inline asm
	mov.b32 %r2353, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2364, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2352, %r7812, -2004318072;
	// begin inline asm
	lop3.b32 %r2350, %r555, %r2352, %r2353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2354, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2355, %r2353, %r2354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2358, %r2350, %r2355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2361, %r566, %r2352, %r2364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2365, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2366, %r2364, %r2365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2369, %r2361, %r2366;
	// end inline asm
	shr.u32 	%r2374, %r2352, 8;
	// begin inline asm
	lop3.b32 %r2372, %r555, %r2374, %r2353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2376, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2377, %r2353, %r2376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2380, %r2372, %r2377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2383, %r566, %r2374, %r2364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2387, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2388, %r2364, %r2387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2391, %r2383, %r2388;
	// end inline asm
	// begin inline asm
	mov.b32 %r2399, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2410, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2398, %r7813, -2004318072;
	// begin inline asm
	lop3.b32 %r2396, %r555, %r2398, %r2399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2400, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2401, %r2399, %r2400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2404, %r2396, %r2401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2407, %r566, %r2398, %r2410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2411, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2412, %r2410, %r2411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2415, %r2407, %r2412;
	// end inline asm
	shr.u32 	%r2420, %r2398, 8;
	// begin inline asm
	lop3.b32 %r2418, %r555, %r2420, %r2399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2422, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2423, %r2399, %r2422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2426, %r2418, %r2423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2429, %r566, %r2420, %r2410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2433, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2434, %r2410, %r2433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2437, %r2429, %r2434;
	// end inline asm
	// begin inline asm
	mov.b32 %r2445, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2456, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2444, %r7814, -2004318072;
	// begin inline asm
	lop3.b32 %r2442, %r555, %r2444, %r2445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2446, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2447, %r2445, %r2446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2450, %r2442, %r2447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2453, %r566, %r2444, %r2456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2457, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2458, %r2456, %r2457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2461, %r2453, %r2458;
	// end inline asm
	shr.u32 	%r2466, %r2444, 8;
	// begin inline asm
	lop3.b32 %r2464, %r555, %r2466, %r2445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2468, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2469, %r2445, %r2468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2472, %r2464, %r2469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2475, %r566, %r2466, %r2456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2479, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2480, %r2456, %r2479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2483, %r2475, %r2480;
	// end inline asm
	// begin inline asm
	mov.b32 %r2491, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2502, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2490, %r7815, -2004318072;
	// begin inline asm
	lop3.b32 %r2488, %r555, %r2490, %r2491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2492, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2493, %r2491, %r2492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2496, %r2488, %r2493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2499, %r566, %r2490, %r2502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2503, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2504, %r2502, %r2503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2507, %r2499, %r2504;
	// end inline asm
	shr.u32 	%r2512, %r2490, 8;
	// begin inline asm
	lop3.b32 %r2510, %r555, %r2512, %r2491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2514, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2515, %r2491, %r2514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2518, %r2510, %r2515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2521, %r566, %r2512, %r2502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2525, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2526, %r2502, %r2525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2529, %r2521, %r2526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2532, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2534, %r2532, %r2358;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2537, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2539, %r2537, %r2369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2542, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2544, %r2542, %r2380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2547, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2549, %r2547, %r2391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2552, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2554, %r2552, %r2404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2557, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2559, %r2557, %r2415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2562, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2564, %r2562, %r2426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2567, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2569, %r2567, %r2437;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2572, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2574, %r2572, %r2450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2577, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2579, %r2577, %r2461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2582, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2584, %r2582, %r2472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2587, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2589, %r2587, %r2483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2592, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2594, %r2592, %r2496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2597, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2599, %r2597, %r2507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2602, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2604, %r2602, %r2518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2607, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2609, %r2607, %r2529;
	// end inline asm
	// begin inline asm
	mov.b32 %r2617, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2628, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2614, %r555, %r1068, %r2617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2618, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2619, %r2617, %r2618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2622, %r2614, %r2619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2625, %r566, %r1068, %r2628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2629, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2630, %r2628, %r2629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2633, %r2625, %r2630;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2636, %r555, %r1090, %r2617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2640, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2641, %r2617, %r2640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2644, %r2636, %r2641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2647, %r566, %r1090, %r2628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2651, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2652, %r2628, %r2651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2655, %r2647, %r2652;
	// end inline asm
	// begin inline asm
	mov.b32 %r2663, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2674, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2660, %r555, %r1114, %r2663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2664, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2665, %r2663, %r2664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2668, %r2660, %r2665;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2671, %r566, %r1114, %r2674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2675, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2676, %r2674, %r2675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2679, %r2671, %r2676;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2682, %r555, %r1136, %r2663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2686, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2687, %r2663, %r2686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2690, %r2682, %r2687;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2693, %r566, %r1136, %r2674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2697, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2698, %r2674, %r2697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2701, %r2693, %r2698;
	// end inline asm
	// begin inline asm
	mov.b32 %r2709, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2720, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2706, %r555, %r1160, %r2709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2710, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2711, %r2709, %r2710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2714, %r2706, %r2711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2717, %r566, %r1160, %r2720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2721, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2722, %r2720, %r2721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2725, %r2717, %r2722;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2728, %r555, %r1182, %r2709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2732, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2733, %r2709, %r2732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2736, %r2728, %r2733;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2739, %r566, %r1182, %r2720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2743, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2744, %r2720, %r2743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2747, %r2739, %r2744;
	// end inline asm
	// begin inline asm
	mov.b32 %r2755, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2766, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2752, %r555, %r1206, %r2755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2756, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2757, %r2755, %r2756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2760, %r2752, %r2757;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2763, %r566, %r1206, %r2766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2767, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2768, %r2766, %r2767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2771, %r2763, %r2768;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2774, %r555, %r1228, %r2755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2778, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2779, %r2755, %r2778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2782, %r2774, %r2779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2785, %r566, %r1228, %r2766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2789, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2790, %r2766, %r2789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2793, %r2785, %r2790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2796, %r203, %r2622, %r2534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2800, %r203, %r2633, %r2539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2804, %r203, %r2644, %r2544;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2808, %r203, %r2655, %r2549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2812, %r203, %r2668, %r2554;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2816, %r203, %r2679, %r2559;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2820, %r203, %r2690, %r2564;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2824, %r203, %r2701, %r2569;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2828, %r203, %r2714, %r2574;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2832, %r203, %r2725, %r2579;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2836, %r203, %r2736, %r2584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2840, %r203, %r2747, %r2589;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2844, %r203, %r2760, %r2594;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2848, %r203, %r2771, %r2599;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2852, %r203, %r2782, %r2604;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2856, %r203, %r2793, %r2609;
	// end inline asm
	// begin inline asm
	mov.b32 %r2865, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2876, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2862, %r555, %r1348, %r2865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2866, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2867, %r2865, %r2866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2870, %r2862, %r2867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2873, %r566, %r1348, %r2876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2877, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2878, %r2876, %r2877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2881, %r2873, %r2878;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2884, %r555, %r1370, %r2865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2888, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2889, %r2865, %r2888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2892, %r2884, %r2889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2895, %r566, %r1370, %r2876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2899, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2900, %r2876, %r2899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2903, %r2895, %r2900;
	// end inline asm
	// begin inline asm
	mov.b32 %r2911, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2922, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2908, %r555, %r1394, %r2911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2912, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2913, %r2911, %r2912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2916, %r2908, %r2913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2919, %r566, %r1394, %r2922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2923, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2924, %r2922, %r2923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2927, %r2919, %r2924;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2930, %r555, %r1416, %r2911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2934, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2935, %r2911, %r2934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2938, %r2930, %r2935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2941, %r566, %r1416, %r2922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2945, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2946, %r2922, %r2945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2949, %r2941, %r2946;
	// end inline asm
	// begin inline asm
	mov.b32 %r2957, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2968, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2954, %r555, %r1440, %r2957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2958, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2959, %r2957, %r2958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2962, %r2954, %r2959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2965, %r566, %r1440, %r2968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2969, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2970, %r2968, %r2969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2973, %r2965, %r2970;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2976, %r555, %r1462, %r2957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2980, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2981, %r2957, %r2980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2984, %r2976, %r2981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2987, %r566, %r1462, %r2968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2991, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2992, %r2968, %r2991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2995, %r2987, %r2992;
	// end inline asm
	// begin inline asm
	mov.b32 %r3003, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3014, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3000, %r555, %r1486, %r3003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3004, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3005, %r3003, %r3004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3008, %r3000, %r3005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3011, %r566, %r1486, %r3014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3015, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3016, %r3014, %r3015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3019, %r3011, %r3016;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3022, %r555, %r1508, %r3003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3026, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3027, %r3003, %r3026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3030, %r3022, %r3027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3033, %r566, %r1508, %r3014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3037, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3038, %r3014, %r3037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3041, %r3033, %r3038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3044, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3046, %r3044, %r2870, %r2796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3050, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3052, %r3050, %r2881, %r2800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3056, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3058, %r3056, %r2892, %r2804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3062, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3064, %r3062, %r2903, %r2808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3068, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3070, %r3068, %r2916, %r2812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3074, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3076, %r3074, %r2927, %r2816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3080, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3082, %r3080, %r2938, %r2820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3086, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3088, %r3086, %r2949, %r2824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3092, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3094, %r3092, %r2962, %r2828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3098, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3100, %r3098, %r2973, %r2832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3104, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3106, %r3104, %r2984, %r2836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3110, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3112, %r3110, %r2995, %r2840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3116, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3118, %r3116, %r3008, %r2844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3122, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3124, %r3122, %r3019, %r2848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3128, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3130, %r3128, %r3030, %r2852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3134, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3136, %r3134, %r3041, %r2856;
	// end inline asm
	// begin inline asm
	mov.b32 %r3145, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3156, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3142, %r555, %r556, %r3145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3146, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3147, %r3145, %r3146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3150, %r3142, %r3147;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3153, %r566, %r556, %r3156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3157, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3158, %r3156, %r3157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3161, %r3153, %r3158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3164, %r555, %r578, %r3145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3168, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3169, %r3145, %r3168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3172, %r3164, %r3169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3175, %r566, %r578, %r3156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3179, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3180, %r3156, %r3179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3183, %r3175, %r3180;
	// end inline asm
	// begin inline asm
	mov.b32 %r3191, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3202, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3188, %r555, %r602, %r3191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3192, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3193, %r3191, %r3192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3196, %r3188, %r3193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3199, %r566, %r602, %r3202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3203, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3204, %r3202, %r3203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3207, %r3199, %r3204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3210, %r555, %r624, %r3191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3214, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3215, %r3191, %r3214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3218, %r3210, %r3215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3221, %r566, %r624, %r3202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3225, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3226, %r3202, %r3225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3229, %r3221, %r3226;
	// end inline asm
	// begin inline asm
	mov.b32 %r3237, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3248, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3234, %r555, %r648, %r3237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3238, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3239, %r3237, %r3238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3242, %r3234, %r3239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3245, %r566, %r648, %r3248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3249, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3250, %r3248, %r3249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3253, %r3245, %r3250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3256, %r555, %r670, %r3237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3260, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3261, %r3237, %r3260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3264, %r3256, %r3261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3267, %r566, %r670, %r3248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3271, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3272, %r3248, %r3271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3275, %r3267, %r3272;
	// end inline asm
	// begin inline asm
	mov.b32 %r3283, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3294, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3280, %r555, %r694, %r3283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3284, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3285, %r3283, %r3284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3288, %r3280, %r3285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3291, %r566, %r694, %r3294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3295, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3296, %r3294, %r3295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3299, %r3291, %r3296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3302, %r555, %r716, %r3283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3306, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3307, %r3283, %r3306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3310, %r3302, %r3307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3313, %r566, %r716, %r3294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3317, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3318, %r3294, %r3317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3321, %r3313, %r3318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3395, %r239, %r3150, %r3046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3392, %r239, %r3161, %r3052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3404, %r239, %r3172, %r3058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3401, %r239, %r3183, %r3064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3413, %r239, %r3196, %r3070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3410, %r239, %r3207, %r3076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3422, %r239, %r3218, %r3082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3419, %r239, %r3229, %r3088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3431, %r239, %r3242, %r3094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3428, %r239, %r3253, %r3100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3440, %r239, %r3264, %r3106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3437, %r239, %r3275, %r3112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3449, %r239, %r3288, %r3118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3446, %r239, %r3299, %r3124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3458, %r239, %r3310, %r3130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3455, %r239, %r3321, %r3136;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3388, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3390, %r3388, %r3392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3393, %r285, %r3395, %r3390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3397, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3399, %r3397, %r3401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3402, %r285, %r3404, %r3399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3406, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3408, %r3406, %r3410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3411, %r285, %r3413, %r3408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3415, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3417, %r3415, %r3419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3420, %r285, %r3422, %r3417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3424, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3426, %r3424, %r3428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3429, %r285, %r3431, %r3426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3433, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3435, %r3433, %r3437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3438, %r285, %r3440, %r3435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3442, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3444, %r3442, %r3446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3447, %r285, %r3449, %r3444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3451, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3453, %r3451, %r3455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3456, %r285, %r3458, %r3453;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3460, %r288, %r3395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3463, %r285, %r3392, %r3460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3467, %r288, %r3404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3470, %r285, %r3401, %r3467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3474, %r288, %r3413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3477, %r285, %r3410, %r3474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3481, %r288, %r3422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3484, %r285, %r3419, %r3481;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3488, %r288, %r3431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3491, %r285, %r3428, %r3488;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3495, %r288, %r3440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3498, %r285, %r3437, %r3495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3502, %r288, %r3449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3505, %r285, %r3446, %r3502;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3509, %r288, %r3458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3512, %r285, %r3455, %r3509;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3603, %r3600}, {%r327, %r333, %r330, %r336}, {%r3393, %r3463}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3612, %r3609}, {%r327, %r333, %r330, %r336}, {%r3402, %r3470}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3621, %r3618}, {%r327, %r333, %r330, %r336}, {%r3411, %r3477}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3630, %r3627}, {%r327, %r333, %r330, %r336}, {%r3420, %r3484}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3639, %r3636}, {%r327, %r333, %r330, %r336}, {%r3429, %r3491}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3648, %r3645}, {%r327, %r333, %r330, %r336}, {%r3438, %r3498}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3657, %r3654}, {%r327, %r333, %r330, %r336}, {%r3447, %r3505}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3666, %r3663}, {%r327, %r333, %r330, %r336}, {%r3456, %r3512}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3596, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3598, %r3596, %r3600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3601, %r371, %r3603, %r3598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3605, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3607, %r3605, %r3609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3610, %r371, %r3612, %r3607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3614, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3616, %r3614, %r3618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3619, %r371, %r3621, %r3616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3623, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3625, %r3623, %r3627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3628, %r371, %r3630, %r3625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3632, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3634, %r3632, %r3636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3637, %r371, %r3639, %r3634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3641, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3643, %r3641, %r3645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3646, %r371, %r3648, %r3643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3650, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3652, %r3650, %r3654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3655, %r371, %r3657, %r3652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3659, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3661, %r3659, %r3663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3664, %r371, %r3666, %r3661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3668, %r374, %r3603;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3671, %r371, %r3600, %r3668;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3675, %r374, %r3612;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3678, %r371, %r3609, %r3675;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3682, %r374, %r3621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3685, %r371, %r3618, %r3682;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3689, %r374, %r3630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3692, %r371, %r3627, %r3689;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3696, %r374, %r3639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3699, %r371, %r3636, %r3696;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3703, %r374, %r3648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3706, %r371, %r3645, %r3703;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3710, %r374, %r3657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3713, %r371, %r3654, %r3710;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3717, %r374, %r3666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3720, %r371, %r3663, %r3717;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3724, %r3725}, {%r414, %r420, %r417, %r423}, {%r3601, %r3671}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3734, %r3735}, {%r414, %r420, %r417, %r423}, {%r3610, %r3678}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3744, %r3745}, {%r414, %r420, %r417, %r423}, {%r3619, %r3685}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3754, %r3755}, {%r414, %r420, %r417, %r423}, {%r3628, %r3692}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3764, %r3765}, {%r414, %r420, %r417, %r423}, {%r3637, %r3699}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3774, %r3775}, {%r414, %r420, %r417, %r423}, {%r3646, %r3706}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3784, %r3785}, {%r414, %r420, %r417, %r423}, {%r3655, %r3713}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3794, %r3795}, {%r414, %r420, %r417, %r423}, {%r3664, %r3720}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3804, %r15, %r3724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3807, %r15, %r3725;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3810, %r15, %r3734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3813, %r15, %r3735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3816, %r15, %r3744;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3819, %r15, %r3745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3822, %r15, %r3754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3825, %r15, %r3755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3828, %r15, %r3764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3831, %r15, %r3765;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3834, %r15, %r3774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3837, %r15, %r3775;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3840, %r15, %r3784;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3843, %r15, %r3785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3846, %r15, %r3794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3849, %r15, %r3795;
	// end inline asm
	// begin inline asm
	mov.b32 %r3852, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3853, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3854, %r3804, %r3852;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3857, %r3854, %r3853;
	// end inline asm
	// begin inline asm
	mov.b32 %r3860, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3861, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3862, %r3807, %r3860;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3865, %r3862, %r3861;
	// end inline asm
	// begin inline asm
	mov.b32 %r3868, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3869, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3870, %r3810, %r3868;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3873, %r3870, %r3869;
	// end inline asm
	// begin inline asm
	mov.b32 %r3876, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3877, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3878, %r3813, %r3876;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3881, %r3878, %r3877;
	// end inline asm
	// begin inline asm
	mov.b32 %r3884, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3885, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3886, %r3816, %r3884;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3889, %r3886, %r3885;
	// end inline asm
	// begin inline asm
	mov.b32 %r3892, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3893, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3894, %r3819, %r3892;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3897, %r3894, %r3893;
	// end inline asm
	// begin inline asm
	mov.b32 %r3900, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3901, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3902, %r3822, %r3900;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3905, %r3902, %r3901;
	// end inline asm
	// begin inline asm
	mov.b32 %r3908, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3909, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3910, %r3825, %r3908;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3913, %r3910, %r3909;
	// end inline asm
	// begin inline asm
	mov.b32 %r3916, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3917, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3918, %r3828, %r3916;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3921, %r3918, %r3917;
	// end inline asm
	// begin inline asm
	mov.b32 %r3924, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3925, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3926, %r3831, %r3924;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3929, %r3926, %r3925;
	// end inline asm
	// begin inline asm
	mov.b32 %r3932, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3933, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3934, %r3834, %r3932;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3937, %r3934, %r3933;
	// end inline asm
	// begin inline asm
	mov.b32 %r3940, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3941, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3942, %r3837, %r3940;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3945, %r3942, %r3941;
	// end inline asm
	// begin inline asm
	mov.b32 %r3948, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3949, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3950, %r3840, %r3948;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3953, %r3950, %r3949;
	// end inline asm
	// begin inline asm
	mov.b32 %r3956, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3957, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3958, %r3843, %r3956;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3961, %r3958, %r3957;
	// end inline asm
	// begin inline asm
	mov.b32 %r3964, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3965, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3966, %r3846, %r3964;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3969, %r3966, %r3965;
	// end inline asm
	// begin inline asm
	mov.b32 %r3972, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3973, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3974, %r3849, %r3972;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3977, %r3974, %r3973;
	// end inline asm
	// begin inline asm
	mov.b32 %r3983, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3981, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3982, %r3983, %r3981;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3985, %r3857, %r3982;
	// end inline asm
	// begin inline asm
	mov.b32 %r3988, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3989, %r3983, %r3988;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3992, %r3865, %r3989;
	// end inline asm
	// begin inline asm
	mov.b32 %r3995, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3996, %r3983, %r3995;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3999, %r3873, %r3996;
	// end inline asm
	// begin inline asm
	mov.b32 %r4002, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4003, %r3983, %r4002;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4006, %r3881, %r4003;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4009, %r3985, %r3999, %r2216;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4013, %r3992, %r4006, %r2216;
	// end inline asm
	shl.b32 	%r4020, %r4013, 4;
	// begin inline asm
	lop3.b32 %r4017, %r2222, %r4009, %r4020, 202;
	// end inline asm
	xor.b32  	%r7744, %r4017, -2004318072;
	// begin inline asm
	mov.b32 %r4024, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4022, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4023, %r4024, %r4022;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4026, %r3889, %r4023;
	// end inline asm
	// begin inline asm
	mov.b32 %r4029, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4030, %r4024, %r4029;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4033, %r3897, %r4030;
	// end inline asm
	// begin inline asm
	mov.b32 %r4036, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4037, %r4024, %r4036;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4040, %r3905, %r4037;
	// end inline asm
	// begin inline asm
	mov.b32 %r4043, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4044, %r4024, %r4043;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4047, %r3913, %r4044;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4050, %r4026, %r4040, %r2216;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4054, %r4033, %r4047, %r2216;
	// end inline asm
	shl.b32 	%r4061, %r4054, 4;
	// begin inline asm
	lop3.b32 %r4058, %r2222, %r4050, %r4061, 202;
	// end inline asm
	xor.b32  	%r7745, %r4058, -2004318072;
	// begin inline asm
	mov.b32 %r4065, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4063, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4064, %r4065, %r4063;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4067, %r3921, %r4064;
	// end inline asm
	// begin inline asm
	mov.b32 %r4070, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4071, %r4065, %r4070;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4074, %r3929, %r4071;
	// end inline asm
	// begin inline asm
	mov.b32 %r4077, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4078, %r4065, %r4077;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4081, %r3937, %r4078;
	// end inline asm
	// begin inline asm
	mov.b32 %r4084, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4085, %r4065, %r4084;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4088, %r3945, %r4085;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4091, %r4067, %r4081, %r2216;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4095, %r4074, %r4088, %r2216;
	// end inline asm
	shl.b32 	%r4102, %r4095, 4;
	// begin inline asm
	lop3.b32 %r4099, %r2222, %r4091, %r4102, 202;
	// end inline asm
	xor.b32  	%r7746, %r4099, -2004318072;
	// begin inline asm
	mov.b32 %r4106, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4104, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4105, %r4106, %r4104;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4108, %r3953, %r4105;
	// end inline asm
	// begin inline asm
	mov.b32 %r4111, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4112, %r4106, %r4111;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4115, %r3961, %r4112;
	// end inline asm
	// begin inline asm
	mov.b32 %r4118, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4119, %r4106, %r4118;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4122, %r3969, %r4119;
	// end inline asm
	// begin inline asm
	mov.b32 %r4125, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4126, %r4106, %r4125;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4129, %r3977, %r4126;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4132, %r4108, %r4122, %r2216;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4136, %r4115, %r4129, %r2216;
	// end inline asm
	shl.b32 	%r4143, %r4136, 4;
	// begin inline asm
	lop3.b32 %r4140, %r2222, %r4132, %r4143, 202;
	// end inline asm
	xor.b32  	%r7747, %r4140, -2004318072;
	st.shared.u32 	[%rd91], %r7744;
	st.shared.u32 	[%rd92], %r7745;
	st.shared.u32 	[%rd93], %r7746;
	st.shared.u32 	[%rd94], %r7747;
	ld.shared.u32 	%r7816, [%rd87];
	ld.shared.u32 	%r7817, [%rd88];
	ld.shared.u32 	%r7818, [%rd89];
	ld.shared.u32 	%r7819, [%rd90];
	// begin inline asm
	mov.b32 %r4149, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4160, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4148, %r7816, -2004318072;
	// begin inline asm
	lop3.b32 %r4146, %r555, %r4148, %r4149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4150, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4151, %r4149, %r4150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4154, %r4146, %r4151;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4157, %r566, %r4148, %r4160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4161, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4162, %r4160, %r4161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4165, %r4157, %r4162;
	// end inline asm
	shr.u32 	%r4170, %r4148, 8;
	// begin inline asm
	lop3.b32 %r4168, %r555, %r4170, %r4149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4172, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4173, %r4149, %r4172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4176, %r4168, %r4173;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4179, %r566, %r4170, %r4160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4183, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4184, %r4160, %r4183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4187, %r4179, %r4184;
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4206, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4194, %r7817, -2004318072;
	// begin inline asm
	lop3.b32 %r4192, %r555, %r4194, %r4195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4196, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4197, %r4195, %r4196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4200, %r4192, %r4197;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4203, %r566, %r4194, %r4206, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4207, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4208, %r4206, %r4207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4211, %r4203, %r4208;
	// end inline asm
	shr.u32 	%r4216, %r4194, 8;
	// begin inline asm
	lop3.b32 %r4214, %r555, %r4216, %r4195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4218, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4219, %r4195, %r4218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4222, %r4214, %r4219;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4225, %r566, %r4216, %r4206, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4229, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4230, %r4206, %r4229;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4233, %r4225, %r4230;
	// end inline asm
	// begin inline asm
	mov.b32 %r4241, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4252, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4240, %r7818, -2004318072;
	// begin inline asm
	lop3.b32 %r4238, %r555, %r4240, %r4241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4242, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4243, %r4241, %r4242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4246, %r4238, %r4243;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4249, %r566, %r4240, %r4252, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4253, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4254, %r4252, %r4253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4257, %r4249, %r4254;
	// end inline asm
	shr.u32 	%r4262, %r4240, 8;
	// begin inline asm
	lop3.b32 %r4260, %r555, %r4262, %r4241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4264, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4265, %r4241, %r4264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4268, %r4260, %r4265;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4271, %r566, %r4262, %r4252, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4275, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4276, %r4252, %r4275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4279, %r4271, %r4276;
	// end inline asm
	// begin inline asm
	mov.b32 %r4287, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4298, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4286, %r7819, -2004318072;
	// begin inline asm
	lop3.b32 %r4284, %r555, %r4286, %r4287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4288, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4289, %r4287, %r4288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4292, %r4284, %r4289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4295, %r566, %r4286, %r4298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4299, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4300, %r4298, %r4299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4303, %r4295, %r4300;
	// end inline asm
	shr.u32 	%r4308, %r4286, 8;
	// begin inline asm
	lop3.b32 %r4306, %r555, %r4308, %r4287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4310, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4311, %r4287, %r4310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4314, %r4306, %r4311;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4317, %r566, %r4308, %r4298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4321, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4322, %r4298, %r4321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4325, %r4317, %r4322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4328, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4330, %r4328, %r4154;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4333, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4335, %r4333, %r4165;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4338, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4340, %r4338, %r4176;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4343, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4345, %r4343, %r4187;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4348, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4350, %r4348, %r4200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4353, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4355, %r4353, %r4211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4358, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4360, %r4358, %r4222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4363, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4365, %r4363, %r4233;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4368, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4370, %r4368, %r4246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4373, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4375, %r4373, %r4257;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4378, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4380, %r4378, %r4268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4383, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4385, %r4383, %r4279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4388, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4390, %r4388, %r4292;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4393, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4395, %r4393, %r4303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4398, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4400, %r4398, %r4314;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4403, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4405, %r4403, %r4325;
	// end inline asm
	// begin inline asm
	mov.b32 %r4413, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4424, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4410, %r555, %r1348, %r4413, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4414, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4415, %r4413, %r4414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4418, %r4410, %r4415;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4421, %r566, %r1348, %r4424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4425, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4426, %r4424, %r4425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4429, %r4421, %r4426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4432, %r555, %r1370, %r4413, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4436, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4437, %r4413, %r4436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4440, %r4432, %r4437;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4443, %r566, %r1370, %r4424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4447, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4448, %r4424, %r4447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4451, %r4443, %r4448;
	// end inline asm
	// begin inline asm
	mov.b32 %r4459, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4470, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4456, %r555, %r1394, %r4459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4460, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4461, %r4459, %r4460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4464, %r4456, %r4461;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4467, %r566, %r1394, %r4470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4471, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4472, %r4470, %r4471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4475, %r4467, %r4472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4478, %r555, %r1416, %r4459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4482, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4483, %r4459, %r4482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4486, %r4478, %r4483;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4489, %r566, %r1416, %r4470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4493, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4494, %r4470, %r4493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4497, %r4489, %r4494;
	// end inline asm
	// begin inline asm
	mov.b32 %r4505, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4516, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4502, %r555, %r1440, %r4505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4506, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4507, %r4505, %r4506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4510, %r4502, %r4507;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4513, %r566, %r1440, %r4516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4517, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4518, %r4516, %r4517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4521, %r4513, %r4518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4524, %r555, %r1462, %r4505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4528, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4529, %r4505, %r4528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4532, %r4524, %r4529;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4535, %r566, %r1462, %r4516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4539, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4540, %r4516, %r4539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4543, %r4535, %r4540;
	// end inline asm
	// begin inline asm
	mov.b32 %r4551, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4562, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4548, %r555, %r1486, %r4551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4552, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4553, %r4551, %r4552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4556, %r4548, %r4553;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4559, %r566, %r1486, %r4562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4563, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4564, %r4562, %r4563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4567, %r4559, %r4564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4570, %r555, %r1508, %r4551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4574, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4575, %r4551, %r4574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4578, %r4570, %r4575;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4581, %r566, %r1508, %r4562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4585, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4586, %r4562, %r4585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4589, %r4581, %r4586;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4592, %r203, %r4418, %r4330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4596, %r203, %r4429, %r4335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4600, %r203, %r4440, %r4340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4604, %r203, %r4451, %r4345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4608, %r203, %r4464, %r4350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4612, %r203, %r4475, %r4355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4616, %r203, %r4486, %r4360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4620, %r203, %r4497, %r4365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4624, %r203, %r4510, %r4370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4628, %r203, %r4521, %r4375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4632, %r203, %r4532, %r4380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4636, %r203, %r4543, %r4385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4640, %r203, %r4556, %r4390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4644, %r203, %r4567, %r4395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4648, %r203, %r4578, %r4400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4652, %r203, %r4589, %r4405;
	// end inline asm
	// begin inline asm
	mov.b32 %r4661, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4672, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4658, %r555, %r556, %r4661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4662, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4663, %r4661, %r4662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4666, %r4658, %r4663;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4669, %r566, %r556, %r4672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4673, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4674, %r4672, %r4673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4677, %r4669, %r4674;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4680, %r555, %r578, %r4661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4684, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4685, %r4661, %r4684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4688, %r4680, %r4685;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4691, %r566, %r578, %r4672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4695, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4696, %r4672, %r4695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4699, %r4691, %r4696;
	// end inline asm
	// begin inline asm
	mov.b32 %r4707, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4718, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4704, %r555, %r602, %r4707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4708, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4709, %r4707, %r4708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4712, %r4704, %r4709;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4715, %r566, %r602, %r4718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4719, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4720, %r4718, %r4719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4723, %r4715, %r4720;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4726, %r555, %r624, %r4707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4730, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4731, %r4707, %r4730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4734, %r4726, %r4731;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4737, %r566, %r624, %r4718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4741, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4742, %r4718, %r4741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4745, %r4737, %r4742;
	// end inline asm
	// begin inline asm
	mov.b32 %r4753, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4764, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4750, %r555, %r648, %r4753, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4754, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4755, %r4753, %r4754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4758, %r4750, %r4755;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4761, %r566, %r648, %r4764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4765, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4766, %r4764, %r4765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4769, %r4761, %r4766;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4772, %r555, %r670, %r4753, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4776, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4777, %r4753, %r4776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4780, %r4772, %r4777;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4783, %r566, %r670, %r4764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4787, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4788, %r4764, %r4787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4791, %r4783, %r4788;
	// end inline asm
	// begin inline asm
	mov.b32 %r4799, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4810, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4796, %r555, %r694, %r4799, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4800, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4801, %r4799, %r4800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4804, %r4796, %r4801;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4807, %r566, %r694, %r4810, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4811, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4812, %r4810, %r4811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4815, %r4807, %r4812;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4818, %r555, %r716, %r4799, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4822, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4823, %r4799, %r4822;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4826, %r4818, %r4823;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4829, %r566, %r716, %r4810, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4833, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4834, %r4810, %r4833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4837, %r4829, %r4834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4840, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4842, %r4840, %r4666, %r4592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4846, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4848, %r4846, %r4677, %r4596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4852, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4854, %r4852, %r4688, %r4600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4858, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4860, %r4858, %r4699, %r4604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4864, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4866, %r4864, %r4712, %r4608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4870, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4872, %r4870, %r4723, %r4612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4876, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4878, %r4876, %r4734, %r4616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4882, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4884, %r4882, %r4745, %r4620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4888, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4890, %r4888, %r4758, %r4624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4894, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4896, %r4894, %r4769, %r4628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4900, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4902, %r4900, %r4780, %r4632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4906, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4908, %r4906, %r4791, %r4636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4912, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4914, %r4912, %r4804, %r4640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4918, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4920, %r4918, %r4815, %r4644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4924, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4926, %r4924, %r4826, %r4648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4930, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4932, %r4930, %r4837, %r4652;
	// end inline asm
	// begin inline asm
	mov.b32 %r4941, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4952, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4938, %r555, %r2352, %r4941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4942, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4943, %r4941, %r4942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4946, %r4938, %r4943;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4949, %r566, %r2352, %r4952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4953, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4954, %r4952, %r4953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4957, %r4949, %r4954;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4960, %r555, %r2374, %r4941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4964, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4965, %r4941, %r4964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4968, %r4960, %r4965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4971, %r566, %r2374, %r4952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4975, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4976, %r4952, %r4975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4979, %r4971, %r4976;
	// end inline asm
	// begin inline asm
	mov.b32 %r4987, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4998, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4984, %r555, %r2398, %r4987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4988, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4989, %r4987, %r4988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4992, %r4984, %r4989;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4995, %r566, %r2398, %r4998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4999, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5000, %r4998, %r4999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5003, %r4995, %r5000;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5006, %r555, %r2420, %r4987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5010, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5011, %r4987, %r5010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5014, %r5006, %r5011;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5017, %r566, %r2420, %r4998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5021, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5022, %r4998, %r5021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5025, %r5017, %r5022;
	// end inline asm
	// begin inline asm
	mov.b32 %r5033, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5044, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5030, %r555, %r2444, %r5033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5034, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5035, %r5033, %r5034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5038, %r5030, %r5035;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5041, %r566, %r2444, %r5044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5045, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5046, %r5044, %r5045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5049, %r5041, %r5046;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5052, %r555, %r2466, %r5033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5056, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5057, %r5033, %r5056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5060, %r5052, %r5057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5063, %r566, %r2466, %r5044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5067, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5068, %r5044, %r5067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5071, %r5063, %r5068;
	// end inline asm
	// begin inline asm
	mov.b32 %r5079, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5090, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5076, %r555, %r2490, %r5079, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5080, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5081, %r5079, %r5080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5084, %r5076, %r5081;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5087, %r566, %r2490, %r5090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5091, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5092, %r5090, %r5091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5095, %r5087, %r5092;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5098, %r555, %r2512, %r5079, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5102, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5103, %r5079, %r5102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5106, %r5098, %r5103;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5109, %r566, %r2512, %r5090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5113, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5114, %r5090, %r5113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5117, %r5109, %r5114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5191, %r239, %r4946, %r4842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5188, %r239, %r4957, %r4848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5200, %r239, %r4968, %r4854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5197, %r239, %r4979, %r4860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5209, %r239, %r4992, %r4866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5206, %r239, %r5003, %r4872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5218, %r239, %r5014, %r4878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5215, %r239, %r5025, %r4884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5227, %r239, %r5038, %r4890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5224, %r239, %r5049, %r4896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5236, %r239, %r5060, %r4902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5233, %r239, %r5071, %r4908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5245, %r239, %r5084, %r4914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5242, %r239, %r5095, %r4920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5254, %r239, %r5106, %r4926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5251, %r239, %r5117, %r4932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5184, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5186, %r5184, %r5188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5189, %r285, %r5191, %r5186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5193, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5195, %r5193, %r5197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5198, %r285, %r5200, %r5195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5202, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5204, %r5202, %r5206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5207, %r285, %r5209, %r5204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5211, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5213, %r5211, %r5215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5216, %r285, %r5218, %r5213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5220, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5222, %r5220, %r5224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5225, %r285, %r5227, %r5222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5229, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5231, %r5229, %r5233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5234, %r285, %r5236, %r5231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5238, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5240, %r5238, %r5242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5243, %r285, %r5245, %r5240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5247, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5249, %r5247, %r5251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5252, %r285, %r5254, %r5249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5256, %r288, %r5191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5259, %r285, %r5188, %r5256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5263, %r288, %r5200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5266, %r285, %r5197, %r5263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5270, %r288, %r5209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5273, %r285, %r5206, %r5270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5277, %r288, %r5218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5280, %r285, %r5215, %r5277;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5284, %r288, %r5227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5287, %r285, %r5224, %r5284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5291, %r288, %r5236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5294, %r285, %r5233, %r5291;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5298, %r288, %r5245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5301, %r285, %r5242, %r5298;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5305, %r288, %r5254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5308, %r285, %r5251, %r5305;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5399, %r5396}, {%r327, %r333, %r330, %r336}, {%r5189, %r5259}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5408, %r5405}, {%r327, %r333, %r330, %r336}, {%r5198, %r5266}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5417, %r5414}, {%r327, %r333, %r330, %r336}, {%r5207, %r5273}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5426, %r5423}, {%r327, %r333, %r330, %r336}, {%r5216, %r5280}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5435, %r5432}, {%r327, %r333, %r330, %r336}, {%r5225, %r5287}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5444, %r5441}, {%r327, %r333, %r330, %r336}, {%r5234, %r5294}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5453, %r5450}, {%r327, %r333, %r330, %r336}, {%r5243, %r5301}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5462, %r5459}, {%r327, %r333, %r330, %r336}, {%r5252, %r5308}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5392, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5394, %r5392, %r5396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5397, %r371, %r5399, %r5394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5401, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5403, %r5401, %r5405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5406, %r371, %r5408, %r5403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5410, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5412, %r5410, %r5414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5415, %r371, %r5417, %r5412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5419, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5421, %r5419, %r5423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5424, %r371, %r5426, %r5421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5428, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5430, %r5428, %r5432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5433, %r371, %r5435, %r5430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5437, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5439, %r5437, %r5441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5442, %r371, %r5444, %r5439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5446, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5448, %r5446, %r5450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5451, %r371, %r5453, %r5448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5455, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5457, %r5455, %r5459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5460, %r371, %r5462, %r5457;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5464, %r374, %r5399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5467, %r371, %r5396, %r5464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5471, %r374, %r5408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5474, %r371, %r5405, %r5471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5478, %r374, %r5417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5481, %r371, %r5414, %r5478;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5485, %r374, %r5426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5488, %r371, %r5423, %r5485;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5492, %r374, %r5435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5495, %r371, %r5432, %r5492;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5499, %r374, %r5444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5502, %r371, %r5441, %r5499;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5506, %r374, %r5453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5509, %r371, %r5450, %r5506;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5513, %r374, %r5462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5516, %r371, %r5459, %r5513;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5520, %r5521}, {%r414, %r420, %r417, %r423}, {%r5397, %r5467}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5530, %r5531}, {%r414, %r420, %r417, %r423}, {%r5406, %r5474}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5540, %r5541}, {%r414, %r420, %r417, %r423}, {%r5415, %r5481}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5550, %r5551}, {%r414, %r420, %r417, %r423}, {%r5424, %r5488}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5560, %r5561}, {%r414, %r420, %r417, %r423}, {%r5433, %r5495}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5570, %r5571}, {%r414, %r420, %r417, %r423}, {%r5442, %r5502}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5580, %r5581}, {%r414, %r420, %r417, %r423}, {%r5451, %r5509}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5590, %r5591}, {%r414, %r420, %r417, %r423}, {%r5460, %r5516}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5600, %r15, %r5520;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5603, %r15, %r5521;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5606, %r15, %r5530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5609, %r15, %r5531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5612, %r15, %r5540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5615, %r15, %r5541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5618, %r15, %r5550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5621, %r15, %r5551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5624, %r15, %r5560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5627, %r15, %r5561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5630, %r15, %r5570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5633, %r15, %r5571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5636, %r15, %r5580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5639, %r15, %r5581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5642, %r15, %r5590;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5645, %r15, %r5591;
	// end inline asm
	// begin inline asm
	mov.b32 %r5648, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5649, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5650, %r5600, %r5648;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5653, %r5650, %r5649;
	// end inline asm
	// begin inline asm
	mov.b32 %r5656, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5657, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5658, %r5603, %r5656;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5661, %r5658, %r5657;
	// end inline asm
	// begin inline asm
	mov.b32 %r5664, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5665, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5666, %r5606, %r5664;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5669, %r5666, %r5665;
	// end inline asm
	// begin inline asm
	mov.b32 %r5672, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5673, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5674, %r5609, %r5672;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5677, %r5674, %r5673;
	// end inline asm
	// begin inline asm
	mov.b32 %r5680, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5681, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5682, %r5612, %r5680;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5685, %r5682, %r5681;
	// end inline asm
	// begin inline asm
	mov.b32 %r5688, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5689, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5690, %r5615, %r5688;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5693, %r5690, %r5689;
	// end inline asm
	// begin inline asm
	mov.b32 %r5696, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5697, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5698, %r5618, %r5696;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5701, %r5698, %r5697;
	// end inline asm
	// begin inline asm
	mov.b32 %r5704, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5705, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5706, %r5621, %r5704;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5709, %r5706, %r5705;
	// end inline asm
	// begin inline asm
	mov.b32 %r5712, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5713, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5714, %r5624, %r5712;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5717, %r5714, %r5713;
	// end inline asm
	// begin inline asm
	mov.b32 %r5720, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5721, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5722, %r5627, %r5720;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5725, %r5722, %r5721;
	// end inline asm
	// begin inline asm
	mov.b32 %r5728, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5729, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5730, %r5630, %r5728;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5733, %r5730, %r5729;
	// end inline asm
	// begin inline asm
	mov.b32 %r5736, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5737, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5738, %r5633, %r5736;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5741, %r5738, %r5737;
	// end inline asm
	// begin inline asm
	mov.b32 %r5744, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5745, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5746, %r5636, %r5744;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5749, %r5746, %r5745;
	// end inline asm
	// begin inline asm
	mov.b32 %r5752, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5753, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5754, %r5639, %r5752;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5757, %r5754, %r5753;
	// end inline asm
	// begin inline asm
	mov.b32 %r5760, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5761, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5762, %r5642, %r5760;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5765, %r5762, %r5761;
	// end inline asm
	// begin inline asm
	mov.b32 %r5768, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5769, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5770, %r5645, %r5768;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5773, %r5770, %r5769;
	// end inline asm
	// begin inline asm
	mov.b32 %r5779, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5777, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5778, %r5779, %r5777;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5781, %r5653, %r5778;
	// end inline asm
	// begin inline asm
	mov.b32 %r5784, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5785, %r5779, %r5784;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5788, %r5661, %r5785;
	// end inline asm
	// begin inline asm
	mov.b32 %r5791, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5792, %r5779, %r5791;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5795, %r5669, %r5792;
	// end inline asm
	// begin inline asm
	mov.b32 %r5798, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5799, %r5779, %r5798;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5802, %r5677, %r5799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5805, %r5781, %r5795, %r2216;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5809, %r5788, %r5802, %r2216;
	// end inline asm
	shl.b32 	%r5816, %r5809, 4;
	// begin inline asm
	lop3.b32 %r5813, %r2222, %r5805, %r5816, 202;
	// end inline asm
	xor.b32  	%r7748, %r5813, -2004318072;
	// begin inline asm
	mov.b32 %r5820, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5818, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5819, %r5820, %r5818;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5822, %r5685, %r5819;
	// end inline asm
	// begin inline asm
	mov.b32 %r5825, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5826, %r5820, %r5825;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5829, %r5693, %r5826;
	// end inline asm
	// begin inline asm
	mov.b32 %r5832, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5833, %r5820, %r5832;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5836, %r5701, %r5833;
	// end inline asm
	// begin inline asm
	mov.b32 %r5839, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5840, %r5820, %r5839;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5843, %r5709, %r5840;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5846, %r5822, %r5836, %r2216;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5850, %r5829, %r5843, %r2216;
	// end inline asm
	shl.b32 	%r5857, %r5850, 4;
	// begin inline asm
	lop3.b32 %r5854, %r2222, %r5846, %r5857, 202;
	// end inline asm
	xor.b32  	%r7749, %r5854, -2004318072;
	// begin inline asm
	mov.b32 %r5861, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5859, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5860, %r5861, %r5859;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5863, %r5717, %r5860;
	// end inline asm
	// begin inline asm
	mov.b32 %r5866, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5867, %r5861, %r5866;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5870, %r5725, %r5867;
	// end inline asm
	// begin inline asm
	mov.b32 %r5873, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5874, %r5861, %r5873;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5877, %r5733, %r5874;
	// end inline asm
	// begin inline asm
	mov.b32 %r5880, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5881, %r5861, %r5880;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5884, %r5741, %r5881;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5887, %r5863, %r5877, %r2216;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5891, %r5870, %r5884, %r2216;
	// end inline asm
	shl.b32 	%r5898, %r5891, 4;
	// begin inline asm
	lop3.b32 %r5895, %r2222, %r5887, %r5898, 202;
	// end inline asm
	xor.b32  	%r7750, %r5895, -2004318072;
	// begin inline asm
	mov.b32 %r5902, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5900, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5901, %r5902, %r5900;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5904, %r5749, %r5901;
	// end inline asm
	// begin inline asm
	mov.b32 %r5907, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5908, %r5902, %r5907;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5911, %r5757, %r5908;
	// end inline asm
	// begin inline asm
	mov.b32 %r5914, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5915, %r5902, %r5914;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5918, %r5765, %r5915;
	// end inline asm
	// begin inline asm
	mov.b32 %r5921, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5922, %r5902, %r5921;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5925, %r5773, %r5922;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5928, %r5904, %r5918, %r2216;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5932, %r5911, %r5925, %r2216;
	// end inline asm
	shl.b32 	%r5939, %r5932, 4;
	// begin inline asm
	lop3.b32 %r5936, %r2222, %r5928, %r5939, 202;
	// end inline asm
	xor.b32  	%r7751, %r5936, -2004318072;
	st.shared.u32 	[%rd91], %r7748;
	st.shared.u32 	[%rd92], %r7749;
	st.shared.u32 	[%rd93], %r7750;
	st.shared.u32 	[%rd94], %r7751;
	ld.shared.u32 	%r7820, [%rd87];
	ld.shared.u32 	%r7821, [%rd88];
	ld.shared.u32 	%r7822, [%rd89];
	ld.shared.u32 	%r7823, [%rd90];
	// begin inline asm
	mov.b32 %r5945, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5956, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5944, %r7820, -2004318072;
	// begin inline asm
	lop3.b32 %r5942, %r555, %r5944, %r5945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5946, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5947, %r5945, %r5946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5950, %r5942, %r5947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5953, %r566, %r5944, %r5956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5957, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5958, %r5956, %r5957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5961, %r5953, %r5958;
	// end inline asm
	shr.u32 	%r5966, %r5944, 8;
	// begin inline asm
	lop3.b32 %r5964, %r555, %r5966, %r5945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5968, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5969, %r5945, %r5968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5972, %r5964, %r5969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5975, %r566, %r5966, %r5956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5979, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5980, %r5956, %r5979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5983, %r5975, %r5980;
	// end inline asm
	// begin inline asm
	mov.b32 %r5991, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6002, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5990, %r7821, -2004318072;
	// begin inline asm
	lop3.b32 %r5988, %r555, %r5990, %r5991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5992, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5993, %r5991, %r5992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5996, %r5988, %r5993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5999, %r566, %r5990, %r6002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6003, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6004, %r6002, %r6003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6007, %r5999, %r6004;
	// end inline asm
	shr.u32 	%r6012, %r5990, 8;
	// begin inline asm
	lop3.b32 %r6010, %r555, %r6012, %r5991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6014, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6015, %r5991, %r6014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6018, %r6010, %r6015;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6021, %r566, %r6012, %r6002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6025, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6026, %r6002, %r6025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6029, %r6021, %r6026;
	// end inline asm
	// begin inline asm
	mov.b32 %r6037, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6048, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6036, %r7822, -2004318072;
	// begin inline asm
	lop3.b32 %r6034, %r555, %r6036, %r6037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6038, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6039, %r6037, %r6038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6042, %r6034, %r6039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6045, %r566, %r6036, %r6048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6049, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6050, %r6048, %r6049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6053, %r6045, %r6050;
	// end inline asm
	shr.u32 	%r6058, %r6036, 8;
	// begin inline asm
	lop3.b32 %r6056, %r555, %r6058, %r6037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6060, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6061, %r6037, %r6060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6064, %r6056, %r6061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6067, %r566, %r6058, %r6048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6071, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6072, %r6048, %r6071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6075, %r6067, %r6072;
	// end inline asm
	// begin inline asm
	mov.b32 %r6083, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6094, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6082, %r7823, -2004318072;
	// begin inline asm
	lop3.b32 %r6080, %r555, %r6082, %r6083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6084, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6085, %r6083, %r6084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6088, %r6080, %r6085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6091, %r566, %r6082, %r6094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6095, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6096, %r6094, %r6095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6099, %r6091, %r6096;
	// end inline asm
	shr.u32 	%r6104, %r6082, 8;
	// begin inline asm
	lop3.b32 %r6102, %r555, %r6104, %r6083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6106, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6107, %r6083, %r6106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6110, %r6102, %r6107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6113, %r566, %r6104, %r6094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6117, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6118, %r6094, %r6117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6121, %r6113, %r6118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6124, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6126, %r6124, %r5950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6129, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6131, %r6129, %r5961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6134, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6136, %r6134, %r5972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6139, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6141, %r6139, %r5983;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6144, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6146, %r6144, %r5996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6149, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6151, %r6149, %r6007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6154, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6156, %r6154, %r6018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6159, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6161, %r6159, %r6029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6164, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6166, %r6164, %r6042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6169, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6171, %r6169, %r6053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6174, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6176, %r6174, %r6064;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6179, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6181, %r6179, %r6075;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6184, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6186, %r6184, %r6088;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6189, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6191, %r6189, %r6099;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6194, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6196, %r6194, %r6110;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6199, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6201, %r6199, %r6121;
	// end inline asm
	// begin inline asm
	mov.b32 %r6209, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6220, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6206, %r555, %r556, %r6209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6210, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6211, %r6209, %r6210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6214, %r6206, %r6211;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6217, %r566, %r556, %r6220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6221, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6222, %r6220, %r6221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6225, %r6217, %r6222;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6228, %r555, %r578, %r6209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6232, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6233, %r6209, %r6232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6236, %r6228, %r6233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6239, %r566, %r578, %r6220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6243, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6244, %r6220, %r6243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6247, %r6239, %r6244;
	// end inline asm
	// begin inline asm
	mov.b32 %r6255, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6266, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6252, %r555, %r602, %r6255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6256, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6257, %r6255, %r6256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6260, %r6252, %r6257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6263, %r566, %r602, %r6266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6267, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6268, %r6266, %r6267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6271, %r6263, %r6268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6274, %r555, %r624, %r6255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6278, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6279, %r6255, %r6278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6282, %r6274, %r6279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6285, %r566, %r624, %r6266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6289, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6290, %r6266, %r6289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6293, %r6285, %r6290;
	// end inline asm
	// begin inline asm
	mov.b32 %r6301, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6312, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6298, %r555, %r648, %r6301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6302, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6303, %r6301, %r6302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6306, %r6298, %r6303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6309, %r566, %r648, %r6312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6313, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6314, %r6312, %r6313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6317, %r6309, %r6314;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6320, %r555, %r670, %r6301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6324, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6325, %r6301, %r6324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6328, %r6320, %r6325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6331, %r566, %r670, %r6312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6335, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6336, %r6312, %r6335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6339, %r6331, %r6336;
	// end inline asm
	// begin inline asm
	mov.b32 %r6347, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6358, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6344, %r555, %r694, %r6347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6348, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6349, %r6347, %r6348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6352, %r6344, %r6349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6355, %r566, %r694, %r6358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6359, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6360, %r6358, %r6359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6363, %r6355, %r6360;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6366, %r555, %r716, %r6347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6370, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6371, %r6347, %r6370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6374, %r6366, %r6371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6377, %r566, %r716, %r6358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6381, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6382, %r6358, %r6381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6385, %r6377, %r6382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6388, %r203, %r6214, %r6126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6392, %r203, %r6225, %r6131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6396, %r203, %r6236, %r6136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6400, %r203, %r6247, %r6141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6404, %r203, %r6260, %r6146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6408, %r203, %r6271, %r6151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6412, %r203, %r6282, %r6156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6416, %r203, %r6293, %r6161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6420, %r203, %r6306, %r6166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6424, %r203, %r6317, %r6171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6428, %r203, %r6328, %r6176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6432, %r203, %r6339, %r6181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6436, %r203, %r6352, %r6186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6440, %r203, %r6363, %r6191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6444, %r203, %r6374, %r6196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6448, %r203, %r6385, %r6201;
	// end inline asm
	// begin inline asm
	mov.b32 %r6457, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6468, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6454, %r555, %r2352, %r6457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6458, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6459, %r6457, %r6458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6462, %r6454, %r6459;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6465, %r566, %r2352, %r6468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6469, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6470, %r6468, %r6469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6473, %r6465, %r6470;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6476, %r555, %r2374, %r6457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6480, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6481, %r6457, %r6480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6484, %r6476, %r6481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6487, %r566, %r2374, %r6468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6491, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6492, %r6468, %r6491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6495, %r6487, %r6492;
	// end inline asm
	// begin inline asm
	mov.b32 %r6503, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6514, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6500, %r555, %r2398, %r6503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6504, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6505, %r6503, %r6504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6508, %r6500, %r6505;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6511, %r566, %r2398, %r6514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6515, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6516, %r6514, %r6515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6519, %r6511, %r6516;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6522, %r555, %r2420, %r6503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6526, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6527, %r6503, %r6526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6530, %r6522, %r6527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6533, %r566, %r2420, %r6514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6537, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6538, %r6514, %r6537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6541, %r6533, %r6538;
	// end inline asm
	// begin inline asm
	mov.b32 %r6549, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6560, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6546, %r555, %r2444, %r6549, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6550, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6551, %r6549, %r6550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6554, %r6546, %r6551;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6557, %r566, %r2444, %r6560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6561, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6562, %r6560, %r6561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6565, %r6557, %r6562;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6568, %r555, %r2466, %r6549, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6572, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6573, %r6549, %r6572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6576, %r6568, %r6573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6579, %r566, %r2466, %r6560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6583, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6584, %r6560, %r6583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6587, %r6579, %r6584;
	// end inline asm
	// begin inline asm
	mov.b32 %r6595, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6606, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6592, %r555, %r2490, %r6595, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6596, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6597, %r6595, %r6596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6600, %r6592, %r6597;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6603, %r566, %r2490, %r6606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6607, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6608, %r6606, %r6607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6611, %r6603, %r6608;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6614, %r555, %r2512, %r6595, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6618, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6619, %r6595, %r6618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6622, %r6614, %r6619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6625, %r566, %r2512, %r6606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6629, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6630, %r6606, %r6629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6633, %r6625, %r6630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6636, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6638, %r6636, %r6462, %r6388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6642, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6644, %r6642, %r6473, %r6392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6648, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6650, %r6648, %r6484, %r6396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6654, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6656, %r6654, %r6495, %r6400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6660, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6662, %r6660, %r6508, %r6404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6666, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6668, %r6666, %r6519, %r6408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6672, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6674, %r6672, %r6530, %r6412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6678, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6680, %r6678, %r6541, %r6416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6684, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6686, %r6684, %r6554, %r6420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6690, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6692, %r6690, %r6565, %r6424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6696, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6698, %r6696, %r6576, %r6428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6702, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6704, %r6702, %r6587, %r6432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6708, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6710, %r6708, %r6600, %r6436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6714, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6716, %r6714, %r6611, %r6440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6720, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6722, %r6720, %r6622, %r6444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6726, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6728, %r6726, %r6633, %r6448;
	// end inline asm
	// begin inline asm
	mov.b32 %r6737, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6748, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6734, %r555, %r4148, %r6737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6738, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6739, %r6737, %r6738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6742, %r6734, %r6739;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6745, %r566, %r4148, %r6748, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6749, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6750, %r6748, %r6749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6753, %r6745, %r6750;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6756, %r555, %r4170, %r6737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6760, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6761, %r6737, %r6760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6764, %r6756, %r6761;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6767, %r566, %r4170, %r6748, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6771, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6772, %r6748, %r6771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6775, %r6767, %r6772;
	// end inline asm
	// begin inline asm
	mov.b32 %r6783, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6794, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6780, %r555, %r4194, %r6783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6784, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6785, %r6783, %r6784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6788, %r6780, %r6785;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6791, %r566, %r4194, %r6794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6795, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6796, %r6794, %r6795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6799, %r6791, %r6796;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6802, %r555, %r4216, %r6783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6806, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6807, %r6783, %r6806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6810, %r6802, %r6807;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6813, %r566, %r4216, %r6794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6817, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6818, %r6794, %r6817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6821, %r6813, %r6818;
	// end inline asm
	// begin inline asm
	mov.b32 %r6829, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6840, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6826, %r555, %r4240, %r6829, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6830, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6831, %r6829, %r6830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6834, %r6826, %r6831;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6837, %r566, %r4240, %r6840, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6841, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6842, %r6840, %r6841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6845, %r6837, %r6842;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6848, %r555, %r4262, %r6829, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6852, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6853, %r6829, %r6852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6856, %r6848, %r6853;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6859, %r566, %r4262, %r6840, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6863, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6864, %r6840, %r6863;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6867, %r6859, %r6864;
	// end inline asm
	// begin inline asm
	mov.b32 %r6875, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6886, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6872, %r555, %r4286, %r6875, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6876, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6877, %r6875, %r6876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6880, %r6872, %r6877;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6883, %r566, %r4286, %r6886, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6887, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6888, %r6886, %r6887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6891, %r6883, %r6888;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6894, %r555, %r4308, %r6875, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6898, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6899, %r6875, %r6898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6902, %r6894, %r6899;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6905, %r566, %r4308, %r6886, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6909, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6910, %r6886, %r6909;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6913, %r6905, %r6910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6987, %r239, %r6742, %r6638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6984, %r239, %r6753, %r6644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6996, %r239, %r6764, %r6650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6993, %r239, %r6775, %r6656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7005, %r239, %r6788, %r6662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7002, %r239, %r6799, %r6668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7014, %r239, %r6810, %r6674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7011, %r239, %r6821, %r6680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7023, %r239, %r6834, %r6686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7020, %r239, %r6845, %r6692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7032, %r239, %r6856, %r6698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7029, %r239, %r6867, %r6704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7041, %r239, %r6880, %r6710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7038, %r239, %r6891, %r6716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7050, %r239, %r6902, %r6722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7047, %r239, %r6913, %r6728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6980, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6982, %r6980, %r6984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6985, %r285, %r6987, %r6982;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6989, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6991, %r6989, %r6993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6994, %r285, %r6996, %r6991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6998, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7000, %r6998, %r7002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7003, %r285, %r7005, %r7000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7007, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7009, %r7007, %r7011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7012, %r285, %r7014, %r7009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7016, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7018, %r7016, %r7020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7021, %r285, %r7023, %r7018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7025, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7027, %r7025, %r7029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7030, %r285, %r7032, %r7027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7034, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7036, %r7034, %r7038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7039, %r285, %r7041, %r7036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7043, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7045, %r7043, %r7047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7048, %r285, %r7050, %r7045;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7052, %r288, %r6987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7055, %r285, %r6984, %r7052;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7059, %r288, %r6996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7062, %r285, %r6993, %r7059;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7066, %r288, %r7005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7069, %r285, %r7002, %r7066;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7073, %r288, %r7014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7076, %r285, %r7011, %r7073;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7080, %r288, %r7023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7083, %r285, %r7020, %r7080;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7087, %r288, %r7032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7090, %r285, %r7029, %r7087;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7094, %r288, %r7041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7097, %r285, %r7038, %r7094;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7101, %r288, %r7050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7104, %r285, %r7047, %r7101;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7195, %r7192}, {%r327, %r333, %r330, %r336}, {%r6985, %r7055}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7204, %r7201}, {%r327, %r333, %r330, %r336}, {%r6994, %r7062}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7213, %r7210}, {%r327, %r333, %r330, %r336}, {%r7003, %r7069}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7222, %r7219}, {%r327, %r333, %r330, %r336}, {%r7012, %r7076}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7231, %r7228}, {%r327, %r333, %r330, %r336}, {%r7021, %r7083}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7240, %r7237}, {%r327, %r333, %r330, %r336}, {%r7030, %r7090}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7249, %r7246}, {%r327, %r333, %r330, %r336}, {%r7039, %r7097}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7258, %r7255}, {%r327, %r333, %r330, %r336}, {%r7048, %r7104}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7188, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7190, %r7188, %r7192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7193, %r371, %r7195, %r7190;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7197, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7199, %r7197, %r7201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7202, %r371, %r7204, %r7199;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7206, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7208, %r7206, %r7210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7211, %r371, %r7213, %r7208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7215, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7217, %r7215, %r7219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7220, %r371, %r7222, %r7217;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7224, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7226, %r7224, %r7228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7229, %r371, %r7231, %r7226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7233, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7235, %r7233, %r7237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7238, %r371, %r7240, %r7235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7242, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7244, %r7242, %r7246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7247, %r371, %r7249, %r7244;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7251, %r374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7253, %r7251, %r7255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7256, %r371, %r7258, %r7253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7260, %r374, %r7195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7263, %r371, %r7192, %r7260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7267, %r374, %r7204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7270, %r371, %r7201, %r7267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7274, %r374, %r7213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7277, %r371, %r7210, %r7274;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7281, %r374, %r7222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7284, %r371, %r7219, %r7281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7288, %r374, %r7231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7291, %r371, %r7228, %r7288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7295, %r374, %r7240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7298, %r371, %r7237, %r7295;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7302, %r374, %r7249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7305, %r371, %r7246, %r7302;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7309, %r374, %r7258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7312, %r371, %r7255, %r7309;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7316, %r7317}, {%r414, %r420, %r417, %r423}, {%r7193, %r7263}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7326, %r7327}, {%r414, %r420, %r417, %r423}, {%r7202, %r7270}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7336, %r7337}, {%r414, %r420, %r417, %r423}, {%r7211, %r7277}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7346, %r7347}, {%r414, %r420, %r417, %r423}, {%r7220, %r7284}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7356, %r7357}, {%r414, %r420, %r417, %r423}, {%r7229, %r7291}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7366, %r7367}, {%r414, %r420, %r417, %r423}, {%r7238, %r7298}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7376, %r7377}, {%r414, %r420, %r417, %r423}, {%r7247, %r7305}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7386, %r7387}, {%r414, %r420, %r417, %r423}, {%r7256, %r7312}, {%r1728, %r1728};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7396, %r15, %r7316;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7399, %r15, %r7317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7402, %r15, %r7326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7405, %r15, %r7327;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7408, %r15, %r7336;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7411, %r15, %r7337;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7414, %r15, %r7346;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7417, %r15, %r7347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7420, %r15, %r7356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7423, %r15, %r7357;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7426, %r15, %r7366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7429, %r15, %r7367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7432, %r15, %r7376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7435, %r15, %r7377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7438, %r15, %r7386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7441, %r15, %r7387;
	// end inline asm
	// begin inline asm
	mov.b32 %r7444, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7445, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7446, %r7396, %r7444;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7449, %r7446, %r7445;
	// end inline asm
	// begin inline asm
	mov.b32 %r7452, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7453, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7454, %r7399, %r7452;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7457, %r7454, %r7453;
	// end inline asm
	// begin inline asm
	mov.b32 %r7460, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7461, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7462, %r7402, %r7460;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7465, %r7462, %r7461;
	// end inline asm
	// begin inline asm
	mov.b32 %r7468, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7469, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7470, %r7405, %r7468;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7473, %r7470, %r7469;
	// end inline asm
	// begin inline asm
	mov.b32 %r7476, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7477, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7478, %r7408, %r7476;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7481, %r7478, %r7477;
	// end inline asm
	// begin inline asm
	mov.b32 %r7484, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7485, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7486, %r7411, %r7484;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7489, %r7486, %r7485;
	// end inline asm
	// begin inline asm
	mov.b32 %r7492, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7493, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7494, %r7414, %r7492;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7497, %r7494, %r7493;
	// end inline asm
	// begin inline asm
	mov.b32 %r7500, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7501, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7502, %r7417, %r7500;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7505, %r7502, %r7501;
	// end inline asm
	// begin inline asm
	mov.b32 %r7508, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7509, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7510, %r7420, %r7508;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7513, %r7510, %r7509;
	// end inline asm
	// begin inline asm
	mov.b32 %r7516, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7517, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7518, %r7423, %r7516;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7521, %r7518, %r7517;
	// end inline asm
	// begin inline asm
	mov.b32 %r7524, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7525, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7526, %r7426, %r7524;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7529, %r7526, %r7525;
	// end inline asm
	// begin inline asm
	mov.b32 %r7532, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7533, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7534, %r7429, %r7532;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7537, %r7534, %r7533;
	// end inline asm
	// begin inline asm
	mov.b32 %r7540, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7541, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7542, %r7432, %r7540;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7545, %r7542, %r7541;
	// end inline asm
	// begin inline asm
	mov.b32 %r7548, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7549, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7550, %r7435, %r7548;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7553, %r7550, %r7549;
	// end inline asm
	// begin inline asm
	mov.b32 %r7556, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7557, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7558, %r7438, %r7556;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7561, %r7558, %r7557;
	// end inline asm
	// begin inline asm
	mov.b32 %r7564, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7565, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7566, %r7441, %r7564;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7569, %r7566, %r7565;
	// end inline asm
	// begin inline asm
	mov.b32 %r7575, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7573, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7574, %r7575, %r7573;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7577, %r7449, %r7574;
	// end inline asm
	// begin inline asm
	mov.b32 %r7580, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7581, %r7575, %r7580;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7584, %r7457, %r7581;
	// end inline asm
	// begin inline asm
	mov.b32 %r7587, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7588, %r7575, %r7587;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7591, %r7465, %r7588;
	// end inline asm
	// begin inline asm
	mov.b32 %r7594, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7595, %r7575, %r7594;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7598, %r7473, %r7595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7601, %r7577, %r7591, %r2216;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7605, %r7584, %r7598, %r2216;
	// end inline asm
	shl.b32 	%r7612, %r7605, 4;
	// begin inline asm
	lop3.b32 %r7609, %r2222, %r7601, %r7612, 202;
	// end inline asm
	xor.b32  	%r7752, %r7609, -2004318072;
	// begin inline asm
	mov.b32 %r7616, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7614, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7615, %r7616, %r7614;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7618, %r7481, %r7615;
	// end inline asm
	// begin inline asm
	mov.b32 %r7621, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7622, %r7616, %r7621;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7625, %r7489, %r7622;
	// end inline asm
	// begin inline asm
	mov.b32 %r7628, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7629, %r7616, %r7628;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7632, %r7497, %r7629;
	// end inline asm
	// begin inline asm
	mov.b32 %r7635, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7636, %r7616, %r7635;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7639, %r7505, %r7636;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7642, %r7618, %r7632, %r2216;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7646, %r7625, %r7639, %r2216;
	// end inline asm
	shl.b32 	%r7653, %r7646, 4;
	// begin inline asm
	lop3.b32 %r7650, %r2222, %r7642, %r7653, 202;
	// end inline asm
	xor.b32  	%r7753, %r7650, -2004318072;
	// begin inline asm
	mov.b32 %r7657, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7655, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7656, %r7657, %r7655;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7659, %r7513, %r7656;
	// end inline asm
	// begin inline asm
	mov.b32 %r7662, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7663, %r7657, %r7662;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7666, %r7521, %r7663;
	// end inline asm
	// begin inline asm
	mov.b32 %r7669, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7670, %r7657, %r7669;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7673, %r7529, %r7670;
	// end inline asm
	// begin inline asm
	mov.b32 %r7676, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7677, %r7657, %r7676;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7680, %r7537, %r7677;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7683, %r7659, %r7673, %r2216;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7687, %r7666, %r7680, %r2216;
	// end inline asm
	shl.b32 	%r7694, %r7687, 4;
	// begin inline asm
	lop3.b32 %r7691, %r2222, %r7683, %r7694, 202;
	// end inline asm
	xor.b32  	%r7754, %r7691, -2004318072;
	// begin inline asm
	mov.b32 %r7698, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7696, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7697, %r7698, %r7696;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7700, %r7545, %r7697;
	// end inline asm
	// begin inline asm
	mov.b32 %r7703, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7704, %r7698, %r7703;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7707, %r7553, %r7704;
	// end inline asm
	// begin inline asm
	mov.b32 %r7710, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7711, %r7698, %r7710;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7714, %r7561, %r7711;
	// end inline asm
	// begin inline asm
	mov.b32 %r7717, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7718, %r7698, %r7717;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7721, %r7569, %r7718;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7724, %r7700, %r7714, %r2216;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7728, %r7707, %r7721, %r2216;
	// end inline asm
	shl.b32 	%r7735, %r7728, 4;
	// begin inline asm
	lop3.b32 %r7732, %r2222, %r7724, %r7735, 202;
	// end inline asm
	xor.b32  	%r7755, %r7732, -2004318072;
	st.shared.u32 	[%rd91], %r7752;
	st.shared.u32 	[%rd92], %r7753;
	st.shared.u32 	[%rd93], %r7754;
	st.shared.u32 	[%rd94], %r7755;
	add.s32 	%r7811, %r7811, -64;
	add.s64 	%rd109, %rd109, 8324;
	setp.eq.s32 	%p229, %r7811, 0;
	@%p229 bra 	LBB0_119;
	bra.uni 	LBB0_118;
LBB0_119:                               // %guard_pass10531
                                        //   in Loop: Header=BB0_117 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7761, [%rd9];
	ld.shared.u32 	%r7762, [%rd10+128];
	ld.shared.u32 	%r7769, [%rd10+4];
	ld.shared.u32 	%r7770, [%rd10+132];
	// begin inline asm
	prmt.b32 %r7756, %r7761, %r7762, %r526;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7760, %r7761, %r7762, %r530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7764, %r7769, %r7770, %r526;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7768, %r7769, %r7770, %r530;
	// end inline asm
	selp.b32 	%r7772, %r7760, %r7756, %p225;
	shfl.sync.bfly.b32	%r164, %r7772, 8, 31, -1;
	selp.b32 	%r7773, %r7768, %r7764, %p225;
	shfl.sync.bfly.b32	%r165, %r7773, 8, 31, -1;
	setp.eq.s32 	%p231, %r7798, 0;
	@%p231 bra 	LBB0_121;
// %bb.120:                             // %L29303
                                        //   in Loop: Header=BB0_117 Depth=1
	selp.b32 	%r7774, %r165, %r7768, %p225;
	selp.b32 	%r7775, %r7764, %r165, %p225;
	selp.b32 	%r7776, %r164, %r7760, %p225;
	selp.b32 	%r7777, %r7756, %r164, %p225;
	shl.b32 	%r7778, %r7798, 12;
	or.b32  	%r7779, %r7778, %r101;
	or.b32  	%r7780, %r7779, %r97;
	or.b32  	%r7781, %r7780, %r98;
	cvt.s64.s32 	%rd95, %r7781;
	add.s64 	%rd96, %rd95, %rd11;
	shr.u64 	%rd97, %rd96, 35;
	add.s64 	%rd98, %rd96, %rd97;
	shr.s64 	%rd99, %rd98, 29;
	setp.lt.s64 	%p233, %rd96, 0;
	and.b64  	%rd100, %rd98, -536870912;
	setp.ne.s64 	%p234, %rd100, %rd96;
	and.pred  	%p235, %p233, %p234;
	selp.u64 	%rd101, 1, 0, %p235;
	sub.s64 	%rd102, %rd101, %rd99;
	shl.b64 	%rd103, %rd102, 29;
	add.s64 	%rd104, %rd103, %rd96;
	shl.b64 	%rd105, %rd104, 2;
	add.s64 	%rd106, %rd3, %rd105;
	st.global.v4.u32 	[%rd106], {%r7777, %r7775, %r7776, %r7774};
	bra.uni 	LBB0_121;
LBB0_122:                               // %L29533
	st.global.u32 	[%rd4], %r7785;
	ret;
LBB0_7:                                 // %L247
	mov.u32 	%r7784, 2;
	st.global.u32 	[%rd4], %r7784;
	mov.u64 	%rd107, exception2329;
	cvta.global.u64 	%rd108, %rd107;
	{ // callseq 16, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd108;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 16
	{ // callseq 17, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 17
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L8
	mov.u64 	%rd43, exception1;
	cvta.global.u64 	%rd44, %rd43;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd44;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_124:                               // %L29633
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9600, 
	(
	);
	} // callseq 3
	mov.u64 	%rd52, exception1;
	cvta.global.u64 	%rd53, %rd52;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd53;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_123:                               // %L29630
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9600, 
	(
	);
	} // callseq 7
	mov.u64 	%rd58, exception1;
	cvta.global.u64 	%rd59, %rd58;
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd59;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 8
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 9
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_149:                               // %L29627
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9600, 
	(
	);
	} // callseq 13
	mov.u64 	%rd72, exception1;
	cvta.global.u64 	%rd73, %rd72;
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd73;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 14
	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r166;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 15
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
