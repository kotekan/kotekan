// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan64(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2065[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<187>;
	.reg .b16 	%rs<272>;
	.reg .b32 	%r<2555>;
	.reg .f32 	%f<721>;
	.reg .b64 	%rd<152>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r106, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd37, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r113, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r113, 33407;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	// begin inline asm
	mov.u32 %r114, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p2, %r114, 33407;
	@%p2 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:                              // %L26
	ld.param.u32 	%r107, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	ld.param.u64 	%rd4, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r115, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r116, %r115, %r4;
	or.b32  	%r117, %r116, %r2;
	mul.wide.u32 	%rd42, %r117, 4;
	add.s64 	%rd5, %rd4, %rd42;
	mov.u32 	%r118, 1;
	st.global.u32 	[%rd5], %r118;
	setp.gt.u32 	%p3, %r107, 32767;
	@%p3 bra 	$L__BB0_9;
// %bb.5:                               // %L131
	ld.param.u32 	%r108, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p4, %r108, %r107;
	setp.gt.s32 	%p5, %r108, 65535;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB0_9;
// %bb.6:                               // %L138
	ld.param.u32 	%r109, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r119, %r108, %r107;
	and.b32  	%r120, %r119, 255;
	setp.ne.s32 	%p7, %r120, 0;
	setp.gt.u32 	%p8, %r109, 511;
	or.pred  	%p9, %p7, %p8;
	@%p9 bra 	$L__BB0_9;
// %bb.7:                               // %L149
	ld.param.u32 	%r110, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p10, %r110, %r109;
	setp.gt.s32 	%p11, %r110, 1023;
	or.pred  	%p12, %p10, %p11;
	@%p12 bra 	$L__BB0_9;
// %bb.8:                               // %L156
	not.b32 	%r121, %r109;
	add.s32 	%r122, %r121, %r110;
	and.b32  	%r123, %r122, 3;
	setp.eq.s32 	%p13, %r123, 0;
	@%p13 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;
$L__BB0_10:                             // %L269
	ld.param.u32 	%r111, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p14, %r111, 0;
	@%p14 bra 	$L__BB0_12;
// %bb.11:                              // %L271
	ld.param.u32 	%r112, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p15, %r111, %r112;
	setp.lt.s32 	%p16, %r112, 49;
	and.pred  	%p17, %p15, %p16;
	@%p17 bra 	$L__BB0_13;
	bra.uni 	$L__BB0_12;
$L__BB0_13:                             // %pass141
	bfe.u32 	%r79, %r4, 2, 1;
	shr.u32 	%r80, %r4, 4;
	shl.b32 	%r132, %r80, 1;
	shl.b32 	%r133, %r79, 2;
	shl.b32 	%r81, %r4, 3;
	and.b32  	%r134, %r81, 24;
	or.b32  	%r135, %r133, %r134;
	or.b32  	%r136, %r132, %r135;
	bfe.u32 	%r137, %r4, 3, 1;
	or.b32  	%r83, %r137, %r136;
	shl.b32 	%r84, %r83, 1;
	or.b32  	%r138, %r84, -255;
	cvt.rn.f32.s32 	%f46, %r138;
	mov.f32 	%f47, 0f44008000;
	div.approx.f32 	%f42, %f46, %f47;
	mov.f32 	%f71, 0f00000000;
	mul.f32 	%f44, %f42, 0f40800000;
	setp.neu.f32 	%p23, %f44, 0f00000000;
	mov.f32 	%f720, 0f3F800000;
	mov.f32 	%f713, %f720;
	@%p23 bra 	$L__BB0_14;
	bra.uni 	$L__BB0_15;
$L__BB0_14:                             // %L606
	add.f32 	%f74, %f44, %f44;
	mov.b32 	%r146, %f74;
	and.b32  	%r147, %r146, -2147483648;
	or.b32  	%r148, %r147, 1056964608;
	mov.b32 	%f75, %r148;
	add.f32 	%f76, %f74, %f75;
	cvt.rzi.f32.f32 	%f77, %f76;
	abs.f32 	%f78, %f74;
	setp.gt.f32 	%p24, %f78, 0f4B000000;
	selp.f32 	%f79, %f74, %f77, %p24;
	cvt.rzi.f32.f32 	%f80, %f74;
	setp.lt.f32 	%p25, %f78, 0f3F000000;
	selp.f32 	%f81, %f80, %f79, %p25;
	cvt.rzi.s32.f32 	%r149, %f81;
	fma.rn.f32 	%f82, %f81, 0fBF000000, %f44;
	mul.f32 	%f83, %f82, %f82;
	fma.rn.f32 	%f84, %f83, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f85, %f83, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f86, %f84, %f83, 0fC0A55DF6;
	fma.rn.f32 	%f87, %f85, %f83, 0f4081E0CF;
	fma.rn.f32 	%f88, %f83, %f82, 0f00000000;
	fma.rn.f32 	%f89, %f87, %f83, 0fC09DE9E6;
	fma.rn.f32 	%f90, %f86, %f88, 0f00000000;
	fma.rn.f32 	%f91, %f89, %f83, 0f3F800000;
	fma.rn.f32 	%f92, %f82, 0f40490FDB, %f90;
	and.b32  	%r150, %r149, 1;
	setp.eq.b32 	%p26, %r150, 1;
	selp.f32 	%f93, %f91, %f92, %p26;
	and.b32  	%r151, %r149, 2;
	setp.eq.s32 	%p27, %r151, 0;
	sub.f32 	%f95, %f71, %f93;
	selp.f32 	%f96, %f93, %f95, %p27;
	cvt.rzi.f32.f32 	%f97, %f44;
	setp.eq.f32 	%p28, %f44, %f97;
	mul.f32 	%f98, %f44, 0f00000000;
	selp.f32 	%f99, %f98, %f96, %p28;
	mul.f32 	%f100, %f42, 0f41490FDB;
	div.approx.f32 	%f713, %f99, %f100;
$L__BB0_15:                             // %L610
	or.b32  	%r152, %r84, -191;
	cvt.rn.f32.s32 	%f104, %r152;
	div.approx.f32 	%f4, %f104, %f47;
	mul.f32 	%f6, %f4, 0f40800000;
	setp.eq.f32 	%p34, %f6, 0f00000000;
	mov.f32 	%f714, %f720;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L624
	add.f32 	%f132, %f6, %f6;
	mov.b32 	%r160, %f132;
	and.b32  	%r161, %r160, -2147483648;
	or.b32  	%r162, %r161, 1056964608;
	mov.b32 	%f133, %r162;
	add.f32 	%f134, %f132, %f133;
	cvt.rzi.f32.f32 	%f135, %f134;
	abs.f32 	%f136, %f132;
	setp.gt.f32 	%p35, %f136, 0f4B000000;
	selp.f32 	%f137, %f132, %f135, %p35;
	cvt.rzi.f32.f32 	%f138, %f132;
	setp.lt.f32 	%p36, %f136, 0f3F000000;
	selp.f32 	%f139, %f138, %f137, %p36;
	cvt.rzi.s32.f32 	%r163, %f139;
	fma.rn.f32 	%f140, %f139, 0fBF000000, %f6;
	mul.f32 	%f141, %f140, %f140;
	fma.rn.f32 	%f142, %f141, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f143, %f141, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f144, %f142, %f141, 0fC0A55DF6;
	fma.rn.f32 	%f145, %f143, %f141, 0f4081E0CF;
	fma.rn.f32 	%f146, %f141, %f140, 0f00000000;
	fma.rn.f32 	%f147, %f145, %f141, 0fC09DE9E6;
	fma.rn.f32 	%f148, %f144, %f146, 0f00000000;
	fma.rn.f32 	%f149, %f147, %f141, 0f3F800000;
	fma.rn.f32 	%f150, %f140, 0f40490FDB, %f148;
	and.b32  	%r164, %r163, 1;
	setp.eq.b32 	%p37, %r164, 1;
	selp.f32 	%f151, %f149, %f150, %p37;
	and.b32  	%r165, %r163, 2;
	setp.eq.s32 	%p38, %r165, 0;
	sub.f32 	%f153, %f71, %f151;
	selp.f32 	%f154, %f151, %f153, %p38;
	cvt.rzi.f32.f32 	%f155, %f6;
	setp.eq.f32 	%p39, %f6, %f155;
	mul.f32 	%f156, %f6, 0f00000000;
	selp.f32 	%f157, %f156, %f154, %p39;
	mul.f32 	%f158, %f4, 0f41490FDB;
	div.approx.f32 	%f714, %f157, %f158;
$L__BB0_17:                             // %L628
	or.b32  	%r169, %r84, -127;
	cvt.rn.f32.s32 	%f163, %r169;
	div.approx.f32 	%f9, %f163, %f47;
	mul.f32 	%f11, %f9, 0f40800000;
	setp.eq.f32 	%p45, %f11, 0f00000000;
	mov.f32 	%f715, %f720;
	@%p45 bra 	$L__BB0_19;
// %bb.18:                              // %L704
	add.f32 	%f191, %f11, %f11;
	mov.b32 	%r177, %f191;
	and.b32  	%r178, %r177, -2147483648;
	or.b32  	%r179, %r178, 1056964608;
	mov.b32 	%f192, %r179;
	add.f32 	%f193, %f191, %f192;
	cvt.rzi.f32.f32 	%f194, %f193;
	abs.f32 	%f195, %f191;
	setp.gt.f32 	%p46, %f195, 0f4B000000;
	selp.f32 	%f196, %f191, %f194, %p46;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p47, %f195, 0f3F000000;
	selp.f32 	%f198, %f197, %f196, %p47;
	cvt.rzi.s32.f32 	%r180, %f198;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f11;
	mul.f32 	%f200, %f199, %f199;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	and.b32  	%r181, %r180, 1;
	setp.eq.b32 	%p48, %r181, 1;
	selp.f32 	%f210, %f208, %f209, %p48;
	and.b32  	%r182, %r180, 2;
	setp.eq.s32 	%p49, %r182, 0;
	sub.f32 	%f212, %f71, %f210;
	selp.f32 	%f213, %f210, %f212, %p49;
	cvt.rzi.f32.f32 	%f214, %f11;
	setp.eq.f32 	%p50, %f11, %f214;
	mul.f32 	%f215, %f11, 0f00000000;
	selp.f32 	%f216, %f215, %f213, %p50;
	mul.f32 	%f217, %f9, 0f41490FDB;
	div.approx.f32 	%f715, %f216, %f217;
$L__BB0_19:                             // %L708
	or.b32  	%r183, %r84, -63;
	cvt.rn.f32.s32 	%f221, %r183;
	div.approx.f32 	%f15, %f221, %f47;
	mul.f32 	%f17, %f15, 0f40800000;
	setp.eq.f32 	%p56, %f17, 0f00000000;
	mov.f32 	%f716, %f720;
	@%p56 bra 	$L__BB0_21;
// %bb.20:                              // %L722
	add.f32 	%f249, %f17, %f17;
	mov.b32 	%r191, %f249;
	and.b32  	%r192, %r191, -2147483648;
	or.b32  	%r193, %r192, 1056964608;
	mov.b32 	%f250, %r193;
	add.f32 	%f251, %f249, %f250;
	cvt.rzi.f32.f32 	%f252, %f251;
	abs.f32 	%f253, %f249;
	setp.gt.f32 	%p57, %f253, 0f4B000000;
	selp.f32 	%f254, %f249, %f252, %p57;
	cvt.rzi.f32.f32 	%f255, %f249;
	setp.lt.f32 	%p58, %f253, 0f3F000000;
	selp.f32 	%f256, %f255, %f254, %p58;
	cvt.rzi.s32.f32 	%r194, %f256;
	fma.rn.f32 	%f257, %f256, 0fBF000000, %f17;
	mul.f32 	%f258, %f257, %f257;
	fma.rn.f32 	%f259, %f258, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f260, %f258, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f261, %f259, %f258, 0fC0A55DF6;
	fma.rn.f32 	%f262, %f260, %f258, 0f4081E0CF;
	fma.rn.f32 	%f263, %f258, %f257, 0f00000000;
	fma.rn.f32 	%f264, %f262, %f258, 0fC09DE9E6;
	fma.rn.f32 	%f265, %f261, %f263, 0f00000000;
	fma.rn.f32 	%f266, %f264, %f258, 0f3F800000;
	fma.rn.f32 	%f267, %f257, 0f40490FDB, %f265;
	and.b32  	%r195, %r194, 1;
	setp.eq.b32 	%p59, %r195, 1;
	selp.f32 	%f268, %f266, %f267, %p59;
	and.b32  	%r196, %r194, 2;
	setp.eq.s32 	%p60, %r196, 0;
	sub.f32 	%f270, %f71, %f268;
	selp.f32 	%f271, %f268, %f270, %p60;
	cvt.rzi.f32.f32 	%f272, %f17;
	setp.eq.f32 	%p61, %f17, %f272;
	mul.f32 	%f273, %f17, 0f00000000;
	selp.f32 	%f274, %f273, %f271, %p61;
	mul.f32 	%f275, %f15, 0f41490FDB;
	div.approx.f32 	%f716, %f274, %f275;
$L__BB0_21:                             // %L726
	or.b32  	%r200, %r84, 1;
	cvt.rn.f32.s32 	%f280, %r200;
	div.approx.f32 	%f20, %f280, %f47;
	mul.f32 	%f22, %f20, 0f40800000;
	setp.eq.f32 	%p67, %f22, 0f00000000;
	mov.f32 	%f717, %f720;
	@%p67 bra 	$L__BB0_23;
// %bb.22:                              // %L802
	add.f32 	%f308, %f22, %f22;
	mov.b32 	%r208, %f308;
	and.b32  	%r209, %r208, -2147483648;
	or.b32  	%r210, %r209, 1056964608;
	mov.b32 	%f309, %r210;
	add.f32 	%f310, %f308, %f309;
	cvt.rzi.f32.f32 	%f311, %f310;
	abs.f32 	%f312, %f308;
	setp.gt.f32 	%p68, %f312, 0f4B000000;
	selp.f32 	%f313, %f308, %f311, %p68;
	cvt.rzi.f32.f32 	%f314, %f308;
	setp.lt.f32 	%p69, %f312, 0f3F000000;
	selp.f32 	%f315, %f314, %f313, %p69;
	cvt.rzi.s32.f32 	%r211, %f315;
	fma.rn.f32 	%f316, %f315, 0fBF000000, %f22;
	mul.f32 	%f317, %f316, %f316;
	fma.rn.f32 	%f318, %f317, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f319, %f317, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f320, %f318, %f317, 0fC0A55DF6;
	fma.rn.f32 	%f321, %f319, %f317, 0f4081E0CF;
	fma.rn.f32 	%f322, %f317, %f316, 0f00000000;
	fma.rn.f32 	%f323, %f321, %f317, 0fC09DE9E6;
	fma.rn.f32 	%f324, %f320, %f322, 0f00000000;
	fma.rn.f32 	%f325, %f323, %f317, 0f3F800000;
	fma.rn.f32 	%f326, %f316, 0f40490FDB, %f324;
	and.b32  	%r212, %r211, 1;
	setp.eq.b32 	%p70, %r212, 1;
	selp.f32 	%f327, %f325, %f326, %p70;
	and.b32  	%r213, %r211, 2;
	setp.eq.s32 	%p71, %r213, 0;
	sub.f32 	%f329, %f71, %f327;
	selp.f32 	%f330, %f327, %f329, %p71;
	cvt.rzi.f32.f32 	%f331, %f22;
	setp.eq.f32 	%p72, %f22, %f331;
	mul.f32 	%f332, %f22, 0f00000000;
	selp.f32 	%f333, %f332, %f330, %p72;
	mul.f32 	%f334, %f20, 0f41490FDB;
	div.approx.f32 	%f717, %f333, %f334;
$L__BB0_23:                             // %L806
	or.b32  	%r214, %r84, 65;
	cvt.rn.f32.s32 	%f338, %r214;
	div.approx.f32 	%f26, %f338, %f47;
	mul.f32 	%f28, %f26, 0f40800000;
	setp.eq.f32 	%p78, %f28, 0f00000000;
	mov.f32 	%f718, %f720;
	@%p78 bra 	$L__BB0_25;
// %bb.24:                              // %L820
	add.f32 	%f366, %f28, %f28;
	mov.b32 	%r222, %f366;
	and.b32  	%r223, %r222, -2147483648;
	or.b32  	%r224, %r223, 1056964608;
	mov.b32 	%f367, %r224;
	add.f32 	%f368, %f366, %f367;
	cvt.rzi.f32.f32 	%f369, %f368;
	abs.f32 	%f370, %f366;
	setp.gt.f32 	%p79, %f370, 0f4B000000;
	selp.f32 	%f371, %f366, %f369, %p79;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p80, %f370, 0f3F000000;
	selp.f32 	%f373, %f372, %f371, %p80;
	cvt.rzi.s32.f32 	%r225, %f373;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f28;
	mul.f32 	%f375, %f374, %f374;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	and.b32  	%r226, %r225, 1;
	setp.eq.b32 	%p81, %r226, 1;
	selp.f32 	%f385, %f383, %f384, %p81;
	and.b32  	%r227, %r225, 2;
	setp.eq.s32 	%p82, %r227, 0;
	sub.f32 	%f387, %f71, %f385;
	selp.f32 	%f388, %f385, %f387, %p82;
	cvt.rzi.f32.f32 	%f389, %f28;
	setp.eq.f32 	%p83, %f28, %f389;
	mul.f32 	%f390, %f28, 0f00000000;
	selp.f32 	%f391, %f390, %f388, %p83;
	mul.f32 	%f392, %f26, 0f41490FDB;
	div.approx.f32 	%f718, %f391, %f392;
$L__BB0_25:                             // %L824
	or.b32  	%r231, %r84, 129;
	cvt.rn.f32.s32 	%f397, %r231;
	div.approx.f32 	%f31, %f397, %f47;
	mul.f32 	%f33, %f31, 0f40800000;
	setp.eq.f32 	%p89, %f33, 0f00000000;
	mov.f32 	%f719, %f720;
	@%p89 bra 	$L__BB0_27;
// %bb.26:                              // %L900
	add.f32 	%f425, %f33, %f33;
	mov.b32 	%r239, %f425;
	and.b32  	%r240, %r239, -2147483648;
	or.b32  	%r241, %r240, 1056964608;
	mov.b32 	%f426, %r241;
	add.f32 	%f427, %f425, %f426;
	cvt.rzi.f32.f32 	%f428, %f427;
	abs.f32 	%f429, %f425;
	setp.gt.f32 	%p90, %f429, 0f4B000000;
	selp.f32 	%f430, %f425, %f428, %p90;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p91, %f429, 0f3F000000;
	selp.f32 	%f432, %f431, %f430, %p91;
	cvt.rzi.s32.f32 	%r242, %f432;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f33;
	mul.f32 	%f434, %f433, %f433;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	and.b32  	%r243, %r242, 1;
	setp.eq.b32 	%p92, %r243, 1;
	selp.f32 	%f444, %f442, %f443, %p92;
	and.b32  	%r244, %r242, 2;
	setp.eq.s32 	%p93, %r244, 0;
	sub.f32 	%f446, %f71, %f444;
	selp.f32 	%f447, %f444, %f446, %p93;
	cvt.rzi.f32.f32 	%f448, %f33;
	setp.eq.f32 	%p94, %f33, %f448;
	mul.f32 	%f449, %f33, 0f00000000;
	selp.f32 	%f450, %f449, %f447, %p94;
	mul.f32 	%f451, %f31, 0f41490FDB;
	div.approx.f32 	%f719, %f450, %f451;
$L__BB0_27:                             // %L904
	or.b32  	%r245, %r84, 193;
	cvt.rn.f32.s32 	%f455, %r245;
	div.approx.f32 	%f37, %f455, %f47;
	mul.f32 	%f39, %f37, 0f40800000;
	setp.eq.f32 	%p100, %f39, 0f00000000;
	@%p100 bra 	$L__BB0_29;
// %bb.28:                              // %L918
	add.f32 	%f483, %f39, %f39;
	mov.b32 	%r253, %f483;
	and.b32  	%r254, %r253, -2147483648;
	or.b32  	%r255, %r254, 1056964608;
	mov.b32 	%f484, %r255;
	add.f32 	%f485, %f483, %f484;
	cvt.rzi.f32.f32 	%f486, %f485;
	abs.f32 	%f487, %f483;
	setp.gt.f32 	%p101, %f487, 0f4B000000;
	selp.f32 	%f488, %f483, %f486, %p101;
	cvt.rzi.f32.f32 	%f489, %f483;
	setp.lt.f32 	%p102, %f487, 0f3F000000;
	selp.f32 	%f490, %f489, %f488, %p102;
	cvt.rzi.s32.f32 	%r256, %f490;
	fma.rn.f32 	%f491, %f490, 0fBF000000, %f39;
	mul.f32 	%f492, %f491, %f491;
	fma.rn.f32 	%f493, %f492, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f494, %f492, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f495, %f493, %f492, 0fC0A55DF6;
	fma.rn.f32 	%f496, %f494, %f492, 0f4081E0CF;
	fma.rn.f32 	%f497, %f492, %f491, 0f00000000;
	fma.rn.f32 	%f498, %f496, %f492, 0fC09DE9E6;
	fma.rn.f32 	%f499, %f495, %f497, 0f00000000;
	fma.rn.f32 	%f500, %f498, %f492, 0f3F800000;
	fma.rn.f32 	%f501, %f491, 0f40490FDB, %f499;
	and.b32  	%r257, %r256, 1;
	setp.eq.b32 	%p103, %r257, 1;
	selp.f32 	%f502, %f500, %f501, %p103;
	and.b32  	%r258, %r256, 2;
	setp.eq.s32 	%p104, %r258, 0;
	sub.f32 	%f504, %f71, %f502;
	selp.f32 	%f505, %f502, %f504, %p104;
	cvt.rzi.f32.f32 	%f506, %f39;
	setp.eq.f32 	%p105, %f39, %f506;
	mul.f32 	%f507, %f39, 0f00000000;
	selp.f32 	%f508, %f507, %f505, %p105;
	mul.f32 	%f509, %f37, 0f41490FDB;
	div.approx.f32 	%f720, %f508, %f509;
$L__BB0_29:                             // %L922
	setp.le.s32 	%p148, %r108, %r107;
	mov.u32 	%r2526, 0;
	@%p148 bra 	$L__BB0_40;
// %bb.30:                              // %L1517.lr.ph
	abs.f32 	%f48, %f42;
	abs.f32 	%f106, %f4;
	abs.f32 	%f165, %f9;
	abs.f32 	%f223, %f15;
	abs.f32 	%f282, %f20;
	abs.f32 	%f340, %f26;
	setp.gt.f32 	%p18, %f48, 0f4B800000;
	mul.f32 	%f49, %f42, 0f00000000;
	setp.gt.f32 	%p29, %f106, 0f4B800000;
	mul.f32 	%f107, %f4, 0f00000000;
	setp.gt.f32 	%p40, %f165, 0f4B800000;
	mul.f32 	%f166, %f9, 0f00000000;
	setp.gt.f32 	%p51, %f223, 0f4B800000;
	mul.f32 	%f224, %f15, 0f00000000;
	setp.gt.f32 	%p62, %f282, 0f4B800000;
	mul.f32 	%f283, %f20, 0f00000000;
	setp.gt.f32 	%p73, %f340, 0f4B800000;
	mul.f32 	%f341, %f26, 0f00000000;
	abs.f32 	%f399, %f31;
	selp.f32 	%f50, %f49, %f42, %p18;
	selp.f32 	%f108, %f107, %f4, %p29;
	selp.f32 	%f167, %f166, %f9, %p40;
	selp.f32 	%f225, %f224, %f15, %p51;
	selp.f32 	%f284, %f283, %f20, %p62;
	selp.f32 	%f342, %f341, %f26, %p73;
	setp.gt.f32 	%p84, %f399, 0f4B800000;
	mul.f32 	%f400, %f31, 0f00000000;
	add.f32 	%f51, %f50, %f50;
	add.f32 	%f109, %f108, %f108;
	add.f32 	%f168, %f167, %f167;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f285, %f284, %f284;
	add.f32 	%f343, %f342, %f342;
	selp.f32 	%f401, %f400, %f31, %p84;
	abs.f32 	%f457, %f37;
	mov.b32 	%r139, %f51;
	mov.b32 	%r153, %f109;
	mov.b32 	%r170, %f168;
	mov.b32 	%r184, %f226;
	mov.b32 	%r201, %f285;
	mov.b32 	%r215, %f343;
	add.f32 	%f402, %f401, %f401;
	setp.gt.f32 	%p95, %f457, 0f4B800000;
	mul.f32 	%f458, %f37, 0f00000000;
	and.b32  	%r140, %r139, -2147483648;
	and.b32  	%r154, %r153, -2147483648;
	and.b32  	%r171, %r170, -2147483648;
	and.b32  	%r185, %r184, -2147483648;
	and.b32  	%r202, %r201, -2147483648;
	and.b32  	%r216, %r215, -2147483648;
	mov.b32 	%r232, %f402;
	selp.f32 	%f459, %f458, %f37, %p95;
	or.b32  	%r141, %r140, 1056964608;
	or.b32  	%r155, %r154, 1056964608;
	or.b32  	%r172, %r171, 1056964608;
	or.b32  	%r186, %r185, 1056964608;
	or.b32  	%r203, %r202, 1056964608;
	or.b32  	%r217, %r216, 1056964608;
	and.b32  	%r233, %r232, -2147483648;
	add.f32 	%f460, %f459, %f459;
	shr.u32 	%r124, %r3, 3;
	mov.b32 	%f52, %r141;
	mov.b32 	%f110, %r155;
	mov.b32 	%f169, %r172;
	mov.b32 	%f227, %r186;
	mov.b32 	%f286, %r203;
	mov.b32 	%f344, %r217;
	or.b32  	%r234, %r233, 1056964608;
	mov.b32 	%r246, %f460;
	cvt.u16.u32 	%rs1, %r124;
	add.f32 	%f53, %f51, %f52;
	abs.f32 	%f55, %f51;
	add.f32 	%f111, %f109, %f110;
	abs.f32 	%f113, %f109;
	add.f32 	%f170, %f168, %f169;
	abs.f32 	%f172, %f168;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f287, %f285, %f286;
	abs.f32 	%f289, %f285;
	add.f32 	%f345, %f343, %f344;
	abs.f32 	%f347, %f343;
	mov.b32 	%f403, %r234;
	and.b32  	%r247, %r246, -2147483648;
	and.b16  	%rs2, %rs1, 255;
	cvt.rzi.f32.f32 	%f54, %f53;
	setp.gt.f32 	%p19, %f55, 0f4B000000;
	cvt.rzi.f32.f32 	%f112, %f111;
	setp.gt.f32 	%p30, %f113, 0f4B000000;
	cvt.rzi.f32.f32 	%f171, %f170;
	setp.gt.f32 	%p41, %f172, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p52, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f288, %f287;
	setp.gt.f32 	%p63, %f289, 0f4B000000;
	cvt.rzi.f32.f32 	%f346, %f345;
	setp.gt.f32 	%p74, %f347, 0f4B000000;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	or.b32  	%r248, %r247, 1056964608;
	mul.lo.s16 	%rs3, %rs2, 171;
	selp.f32 	%f56, %f51, %f54, %p19;
	cvt.rzi.f32.f32 	%f57, %f51;
	setp.lt.f32 	%p20, %f55, 0f3F000000;
	selp.f32 	%f114, %f109, %f112, %p30;
	cvt.rzi.f32.f32 	%f115, %f109;
	setp.lt.f32 	%p31, %f113, 0f3F000000;
	selp.f32 	%f173, %f168, %f171, %p41;
	cvt.rzi.f32.f32 	%f174, %f168;
	setp.lt.f32 	%p42, %f172, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p52;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p53, %f230, 0f3F000000;
	selp.f32 	%f290, %f285, %f288, %p63;
	cvt.rzi.f32.f32 	%f291, %f285;
	setp.lt.f32 	%p64, %f289, 0f3F000000;
	selp.f32 	%f348, %f343, %f346, %p74;
	cvt.rzi.f32.f32 	%f349, %f343;
	setp.lt.f32 	%p75, %f347, 0f3F000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p85, %f406, 0f4B000000;
	mov.b32 	%f461, %r248;
	shr.u16 	%rs4, %rs3, 13;
	selp.f32 	%f58, %f57, %f56, %p20;
	selp.f32 	%f116, %f115, %f114, %p31;
	selp.f32 	%f175, %f174, %f173, %p42;
	selp.f32 	%f233, %f232, %f231, %p53;
	selp.f32 	%f292, %f291, %f290, %p64;
	selp.f32 	%f350, %f349, %f348, %p75;
	selp.f32 	%f407, %f402, %f405, %p85;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p86, %f406, 0f3F000000;
	add.f32 	%f462, %f460, %f461;
	abs.f32 	%f464, %f460;
	mul.lo.s16 	%rs5, %rs4, 48;
	fma.rn.f32 	%f59, %f58, 0fBF000000, %f50;
	fma.rn.f32 	%f117, %f116, 0fBF000000, %f108;
	fma.rn.f32 	%f176, %f175, 0fBF000000, %f167;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f293, %f292, 0fBF000000, %f284;
	fma.rn.f32 	%f351, %f350, 0fBF000000, %f342;
	selp.f32 	%f409, %f408, %f407, %p86;
	cvt.rzi.f32.f32 	%f463, %f462;
	setp.gt.f32 	%p96, %f464, 0f4B000000;
	sub.s16 	%rs6, %rs1, %rs5;
	mul.f32 	%f60, %f59, %f59;
	mul.f32 	%f118, %f117, %f117;
	mul.f32 	%f177, %f176, %f176;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f294, %f293, %f293;
	mul.f32 	%f352, %f351, %f351;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	selp.f32 	%f465, %f460, %f463, %p96;
	cvt.rzi.f32.f32 	%f466, %f460;
	setp.lt.f32 	%p97, %f464, 0f3F000000;
	shl.b32 	%r68, %r4, 1;
	and.b16  	%rs7, %rs6, 255;
	cvt.rzi.s32.f32 	%r142, %f58;
	fma.rn.f32 	%f61, %f60, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f62, %f60, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r156, %f116;
	fma.rn.f32 	%f119, %f118, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f120, %f118, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r173, %f175;
	fma.rn.f32 	%f178, %f177, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f179, %f177, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r187, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r204, %f292;
	fma.rn.f32 	%f295, %f294, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f296, %f294, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r218, %f350;
	fma.rn.f32 	%f353, %f352, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f354, %f352, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f411, %f410, %f410;
	selp.f32 	%f467, %f466, %f465, %p97;
	and.b32  	%r69, %r68, 8;
	mul.wide.u16 	%r71, %rs7, 64;
	shl.b32 	%r72, %r4, 2;
	add.s32 	%r143, %r142, 1;
	fma.rn.f32 	%f63, %f61, %f60, 0fC0A55DF6;
	fma.rn.f32 	%f64, %f62, %f60, 0f4081E0CF;
	fma.rn.f32 	%f65, %f60, %f59, 0f00000000;
	add.s32 	%r157, %r156, 1;
	fma.rn.f32 	%f121, %f119, %f118, 0fC0A55DF6;
	fma.rn.f32 	%f122, %f120, %f118, 0f4081E0CF;
	fma.rn.f32 	%f123, %f118, %f117, 0f00000000;
	add.s32 	%r174, %r173, 1;
	fma.rn.f32 	%f180, %f178, %f177, 0fC0A55DF6;
	fma.rn.f32 	%f181, %f179, %f177, 0f4081E0CF;
	fma.rn.f32 	%f182, %f177, %f176, 0f00000000;
	add.s32 	%r188, %r187, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r205, %r204, 1;
	fma.rn.f32 	%f297, %f295, %f294, 0fC0A55DF6;
	fma.rn.f32 	%f298, %f296, %f294, 0f4081E0CF;
	fma.rn.f32 	%f299, %f294, %f293, 0f00000000;
	add.s32 	%r219, %r218, 1;
	fma.rn.f32 	%f355, %f353, %f352, 0fC0A55DF6;
	fma.rn.f32 	%f356, %f354, %f352, 0f4081E0CF;
	fma.rn.f32 	%f357, %f352, %f351, 0f00000000;
	cvt.rzi.s32.f32 	%r235, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f468, %f467, 0fBF000000, %f459;
	and.b32  	%r73, %r72, 32;
	or.b32  	%r126, %r71, %r69;
	fma.rn.f32 	%f66, %f64, %f60, 0fC09DE9E6;
	fma.rn.f32 	%f67, %f63, %f65, 0f00000000;
	and.b32  	%r144, %r143, 1;
	fma.rn.f32 	%f124, %f122, %f118, 0fC09DE9E6;
	fma.rn.f32 	%f125, %f121, %f123, 0f00000000;
	and.b32  	%r158, %r157, 1;
	fma.rn.f32 	%f183, %f181, %f177, 0fC09DE9E6;
	fma.rn.f32 	%f184, %f180, %f182, 0f00000000;
	and.b32  	%r175, %r174, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r189, %r188, 1;
	fma.rn.f32 	%f300, %f298, %f294, 0fC09DE9E6;
	fma.rn.f32 	%f301, %f297, %f299, 0f00000000;
	and.b32  	%r206, %r205, 1;
	fma.rn.f32 	%f358, %f356, %f352, 0fC09DE9E6;
	fma.rn.f32 	%f359, %f355, %f357, 0f00000000;
	and.b32  	%r220, %r219, 1;
	add.s32 	%r236, %r235, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	mul.f32 	%f469, %f468, %f468;
	or.b32  	%r127, %r126, %r73;
	and.b32  	%r74, %r4, 16;
	fma.rn.f32 	%f68, %f66, %f60, 0f3F800000;
	fma.rn.f32 	%f69, %f59, 0f40490FDB, %f67;
	setp.eq.b32 	%p21, %r144, 1;
	fma.rn.f32 	%f126, %f124, %f118, 0f3F800000;
	fma.rn.f32 	%f127, %f117, 0f40490FDB, %f125;
	setp.eq.b32 	%p32, %r158, 1;
	fma.rn.f32 	%f185, %f183, %f177, 0f3F800000;
	fma.rn.f32 	%f186, %f176, 0f40490FDB, %f184;
	setp.eq.b32 	%p43, %r175, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p54, %r189, 1;
	fma.rn.f32 	%f302, %f300, %f294, 0f3F800000;
	fma.rn.f32 	%f303, %f293, 0f40490FDB, %f301;
	setp.eq.b32 	%p65, %r206, 1;
	fma.rn.f32 	%f360, %f358, %f352, 0f3F800000;
	fma.rn.f32 	%f361, %f351, 0f40490FDB, %f359;
	setp.eq.b32 	%p76, %r220, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r237, %r236, 1;
	cvt.rzi.s32.f32 	%r249, %f467;
	fma.rn.f32 	%f470, %f469, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f471, %f469, 0f3E684E12, 0fBFAAD2E0;
	or.b32  	%r128, %r127, %r74;
	and.b32  	%r75, %r72, 4;
	selp.f32 	%f70, %f68, %f69, %p21;
	and.b32  	%r145, %r143, 2;
	selp.f32 	%f128, %f126, %f127, %p32;
	and.b32  	%r159, %r157, 2;
	selp.f32 	%f187, %f185, %f186, %p43;
	and.b32  	%r176, %r174, 2;
	selp.f32 	%f245, %f243, %f244, %p54;
	and.b32  	%r190, %r188, 2;
	selp.f32 	%f304, %f302, %f303, %p65;
	and.b32  	%r207, %r205, 2;
	selp.f32 	%f362, %f360, %f361, %p76;
	and.b32  	%r221, %r219, 2;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p87, %r237, 1;
	add.s32 	%r250, %r249, 1;
	fma.rn.f32 	%f472, %f470, %f469, 0fC0A55DF6;
	fma.rn.f32 	%f473, %f471, %f469, 0f4081E0CF;
	fma.rn.f32 	%f474, %f469, %f468, 0f00000000;
	or.b32  	%r129, %r128, %r75;
	and.b32  	%r76, %r4, 2;
	setp.eq.s32 	%p22, %r145, 0;
	sub.f32 	%f72, %f71, %f70;
	setp.eq.s32 	%p33, %r159, 0;
	sub.f32 	%f130, %f71, %f128;
	setp.eq.s32 	%p44, %r176, 0;
	sub.f32 	%f189, %f71, %f187;
	setp.eq.s32 	%p55, %r190, 0;
	sub.f32 	%f247, %f71, %f245;
	setp.eq.s32 	%p66, %r207, 0;
	sub.f32 	%f306, %f71, %f304;
	setp.eq.s32 	%p77, %r221, 0;
	sub.f32 	%f364, %f71, %f362;
	selp.f32 	%f421, %f419, %f420, %p87;
	and.b32  	%r238, %r236, 2;
	fma.rn.f32 	%f475, %f473, %f469, 0fC09DE9E6;
	fma.rn.f32 	%f476, %f472, %f474, 0f00000000;
	and.b32  	%r251, %r250, 1;
	or.b32  	%r130, %r129, %r76;
	selp.f32 	%f73, %f70, %f72, %p22;
	selp.f32 	%f131, %f128, %f130, %p33;
	selp.f32 	%f190, %f187, %f189, %p44;
	selp.f32 	%f248, %f245, %f247, %p55;
	selp.f32 	%f307, %f304, %f306, %p66;
	selp.f32 	%f365, %f362, %f364, %p77;
	setp.eq.s32 	%p88, %r238, 0;
	sub.f32 	%f423, %f71, %f421;
	fma.rn.f32 	%f477, %f475, %f469, 0f3F800000;
	fma.rn.f32 	%f478, %f468, 0f40490FDB, %f476;
	setp.eq.b32 	%p98, %r251, 1;
	bfe.u32 	%r131, %r130, 1, 7;
	mul.f32 	%f43, %f73, %f73;
	mul.f32 	%f5, %f131, %f131;
	mul.f32 	%f10, %f190, %f190;
	mul.f32 	%f16, %f248, %f248;
	mul.f32 	%f21, %f307, %f307;
	mul.f32 	%f27, %f365, %f365;
	selp.f32 	%f424, %f421, %f423, %p88;
	selp.f32 	%f479, %f477, %f478, %p98;
	and.b32  	%r252, %r250, 2;
	ld.param.u64 	%rd1, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd43, %r131, 4;
	mul.f32 	%f102, %f713, %f43;
	mov.f32 	%f103, 0f42800000;
	mul.f32 	%f160, %f714, %f5;
	mul.f32 	%f219, %f715, %f10;
	mul.f32 	%f277, %f716, %f16;
	mul.f32 	%f336, %f717, %f21;
	mul.f32 	%f394, %f718, %f27;
	mul.f32 	%f32, %f424, %f424;
	setp.eq.s32 	%p99, %r252, 0;
	sub.f32 	%f481, %f71, %f479;
	cvt.u32.u16 	%r125, %rs6;
	add.s64 	%rd44, %rd1, %rd43;
	div.approx.f32 	%f3, %f102, %f103;
	div.approx.f32 	%f162, %f160, %f103;
	div.approx.f32 	%f14, %f219, %f103;
	div.approx.f32 	%f279, %f277, %f103;
	div.approx.f32 	%f25, %f336, %f103;
	div.approx.f32 	%f396, %f394, %f103;
	mul.f32 	%f453, %f719, %f32;
	selp.f32 	%f482, %f479, %f481, %p99;
	ld.param.u64 	%rd2, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	and.b32  	%r70, %r125, 255;
	ld.global.u32 	%r77, [%rd44];
	shr.u32 	%r78, %r4, 1;
	shr.u32 	%r82, %r4, 3;
	mov.b32 	%r168, %f162;
	mov.b32 	%r167, %f3;
	mov.b32 	%r199, %f279;
	mov.b32 	%r198, %f14;
	mov.b32 	%r230, %f396;
	mov.b32 	%r229, %f25;
	div.approx.f32 	%f36, %f453, %f103;
	mul.f32 	%f38, %f482, %f482;
	// begin inline asm
	cvt.rn.f16x2.f32 %r166, %r168, %r167;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r197, %r199, %r198;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r228, %r230, %r229;
	// end inline asm
	mul.f32 	%f510, %f720, %f38;
	div.approx.f32 	%f512, %f510, %f103;
	mov.b32 	%r261, %f512;
	mov.b32 	%r260, %f36;
	// begin inline asm
	cvt.rn.f16x2.f32 %r259, %r261, %r260;
	// end inline asm
	mul.lo.s32 	%r298, %r83, 63;
	and.b32  	%r299, %r298, 127;
	cvt.rn.f32.s32 	%f513, %r299;
	div.approx.f32 	%f514, %f513, %f103;
	add.f32 	%f515, %f514, %f514;
	mov.b32 	%r300, %f515;
	and.b32  	%r301, %r300, -2147483648;
	or.b32  	%r302, %r301, 1056964608;
	mov.b32 	%f516, %r302;
	add.f32 	%f517, %f515, %f516;
	cvt.rzi.f32.f32 	%f518, %f517;
	abs.f32 	%f519, %f515;
	setp.gt.f32 	%p106, %f519, 0f4B000000;
	selp.f32 	%f520, %f515, %f518, %p106;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p107, %f519, 0f3F000000;
	selp.f32 	%f522, %f521, %f520, %p107;
	cvt.rzi.s32.f32 	%r303, %f522;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f514;
	mul.f32 	%f524, %f523, %f523;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	and.b32  	%r304, %r303, 1;
	setp.eq.b32 	%p108, %r304, 1;
	selp.f32 	%f534, %f532, %f533, %p108;
	selp.f32 	%f535, %f533, %f532, %p108;
	and.b32  	%r305, %r303, 2;
	setp.eq.s32 	%p109, %r305, 0;
	neg.f32 	%f536, %f534;
	selp.f32 	%f537, %f534, %f536, %p109;
	add.s32 	%r306, %r303, 1;
	and.b32  	%r307, %r306, 2;
	setp.eq.s32 	%p110, %r307, 0;
	sub.f32 	%f539, %f71, %f535;
	selp.f32 	%f540, %f535, %f539, %p110;
	cvt.rzi.f32.f32 	%f541, %f514;
	setp.eq.f32 	%p111, %f541, %f514;
	mul.f32 	%f542, %f514, 0f00000000;
	selp.f32 	%f543, %f542, %f537, %p111;
	abs.f32 	%f544, %f514;
	setp.gt.f32 	%p112, %f544, 0f4B800000;
	add.f32 	%f545, %f543, 0f3F800000;
	selp.f32 	%f546, %f545, %f540, %p112;
	add.s32 	%r308, %r298, 96;
	and.b32  	%r309, %r308, 127;
	cvt.rn.f32.s32 	%f547, %r309;
	div.approx.f32 	%f548, %f547, %f103;
	add.f32 	%f549, %f548, %f548;
	mov.b32 	%r310, %f549;
	and.b32  	%r311, %r310, -2147483648;
	or.b32  	%r312, %r311, 1056964608;
	mov.b32 	%f550, %r312;
	add.f32 	%f551, %f549, %f550;
	cvt.rzi.f32.f32 	%f552, %f551;
	abs.f32 	%f553, %f549;
	setp.gt.f32 	%p113, %f553, 0f4B000000;
	selp.f32 	%f554, %f549, %f552, %p113;
	cvt.rzi.f32.f32 	%f555, %f549;
	setp.lt.f32 	%p114, %f553, 0f3F000000;
	selp.f32 	%f556, %f555, %f554, %p114;
	cvt.rzi.s32.f32 	%r313, %f556;
	fma.rn.f32 	%f557, %f556, 0fBF000000, %f548;
	mul.f32 	%f558, %f557, %f557;
	fma.rn.f32 	%f559, %f558, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f560, %f558, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f561, %f559, %f558, 0fC0A55DF6;
	fma.rn.f32 	%f562, %f560, %f558, 0f4081E0CF;
	fma.rn.f32 	%f563, %f558, %f557, 0f00000000;
	fma.rn.f32 	%f564, %f562, %f558, 0fC09DE9E6;
	fma.rn.f32 	%f565, %f561, %f563, 0f00000000;
	fma.rn.f32 	%f566, %f564, %f558, 0f3F800000;
	fma.rn.f32 	%f567, %f557, 0f40490FDB, %f565;
	and.b32  	%r314, %r313, 1;
	setp.eq.b32 	%p115, %r314, 1;
	selp.f32 	%f568, %f566, %f567, %p115;
	selp.f32 	%f569, %f567, %f566, %p115;
	and.b32  	%r315, %r313, 2;
	setp.eq.s32 	%p116, %r315, 0;
	neg.f32 	%f570, %f568;
	selp.f32 	%f571, %f568, %f570, %p116;
	add.s32 	%r316, %r313, 1;
	and.b32  	%r317, %r316, 2;
	setp.eq.s32 	%p117, %r317, 0;
	sub.f32 	%f572, %f71, %f569;
	selp.f32 	%f573, %f569, %f572, %p117;
	cvt.rzi.f32.f32 	%f574, %f548;
	setp.eq.f32 	%p118, %f574, %f548;
	mul.f32 	%f575, %f548, 0f00000000;
	selp.f32 	%f576, %f575, %f571, %p118;
	abs.f32 	%f577, %f548;
	setp.gt.f32 	%p119, %f577, 0f4B800000;
	add.f32 	%f578, %f576, 0f3F800000;
	selp.f32 	%f579, %f578, %f573, %p119;
	mov.b32 	%r263, %f546;
	mov.b32 	%r264, %f579;
	// begin inline asm
	cvt.rn.f16x2.f32 %r262, %r264, %r263;
	// end inline asm
	mov.b32 	%r266, %f543;
	mov.b32 	%r267, %f576;
	// begin inline asm
	cvt.rn.f16x2.f32 %r265, %r267, %r266;
	// end inline asm
	and.b32  	%r318, %r82, 2;
	and.b32  	%r319, %r78, 4;
	or.b32  	%r320, %r79, %r318;
	or.b32  	%r321, %r320, %r319;
	and.b32  	%r322, %r68, 6;
	mul.lo.s32 	%r323, %r321, %r322;
	and.b32  	%r324, %r323, 14;
	cvt.rn.f32.s32 	%f580, %r324;
	mov.f32 	%f581, 0f41000000;
	div.approx.f32 	%f582, %f580, %f581;
	add.f32 	%f583, %f582, %f582;
	mov.b32 	%r325, %f583;
	and.b32  	%r326, %r325, -2147483648;
	or.b32  	%r327, %r326, 1056964608;
	mov.b32 	%f584, %r327;
	add.f32 	%f585, %f583, %f584;
	cvt.rzi.f32.f32 	%f586, %f585;
	abs.f32 	%f587, %f583;
	setp.gt.f32 	%p120, %f587, 0f4B000000;
	selp.f32 	%f588, %f583, %f586, %p120;
	cvt.rzi.f32.f32 	%f589, %f583;
	setp.lt.f32 	%p121, %f587, 0f3F000000;
	selp.f32 	%f590, %f589, %f588, %p121;
	cvt.rzi.s32.f32 	%r328, %f590;
	fma.rn.f32 	%f591, %f590, 0fBF000000, %f582;
	mul.f32 	%f592, %f591, %f591;
	fma.rn.f32 	%f593, %f592, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f594, %f592, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f595, %f593, %f592, 0fC0A55DF6;
	fma.rn.f32 	%f596, %f594, %f592, 0f4081E0CF;
	fma.rn.f32 	%f597, %f592, %f591, 0f00000000;
	fma.rn.f32 	%f598, %f596, %f592, 0fC09DE9E6;
	fma.rn.f32 	%f599, %f595, %f597, 0f00000000;
	fma.rn.f32 	%f600, %f598, %f592, 0f3F800000;
	fma.rn.f32 	%f601, %f591, 0f40490FDB, %f599;
	and.b32  	%r329, %r328, 1;
	setp.eq.b32 	%p122, %r329, 1;
	selp.f32 	%f602, %f600, %f601, %p122;
	selp.f32 	%f603, %f601, %f600, %p122;
	and.b32  	%r330, %r328, 2;
	setp.eq.s32 	%p123, %r330, 0;
	neg.f32 	%f604, %f602;
	selp.f32 	%f605, %f602, %f604, %p123;
	add.s32 	%r331, %r328, 1;
	and.b32  	%r332, %r331, 2;
	setp.eq.s32 	%p124, %r332, 0;
	sub.f32 	%f606, %f71, %f603;
	selp.f32 	%f607, %f603, %f606, %p124;
	cvt.rzi.f32.f32 	%f608, %f582;
	setp.eq.f32 	%p125, %f608, %f582;
	mul.f32 	%f609, %f582, 0f00000000;
	selp.f32 	%f610, %f609, %f605, %p125;
	abs.f32 	%f611, %f582;
	setp.gt.f32 	%p126, %f611, 0f4B800000;
	add.f32 	%f612, %f610, 0f3F800000;
	selp.f32 	%f613, %f612, %f607, %p126;
	or.b32  	%r333, %r68, 8;
	mul.lo.s32 	%r334, %r321, %r333;
	and.b32  	%r335, %r334, 14;
	cvt.rn.f32.s32 	%f614, %r335;
	div.approx.f32 	%f615, %f614, %f581;
	add.f32 	%f616, %f615, %f615;
	mov.b32 	%r336, %f616;
	and.b32  	%r337, %r336, -2147483648;
	or.b32  	%r338, %r337, 1056964608;
	mov.b32 	%f617, %r338;
	add.f32 	%f618, %f616, %f617;
	cvt.rzi.f32.f32 	%f619, %f618;
	abs.f32 	%f620, %f616;
	setp.gt.f32 	%p127, %f620, 0f4B000000;
	selp.f32 	%f621, %f616, %f619, %p127;
	cvt.rzi.f32.f32 	%f622, %f616;
	setp.lt.f32 	%p128, %f620, 0f3F000000;
	selp.f32 	%f623, %f622, %f621, %p128;
	cvt.rzi.s32.f32 	%r339, %f623;
	fma.rn.f32 	%f624, %f623, 0fBF000000, %f615;
	mul.f32 	%f625, %f624, %f624;
	fma.rn.f32 	%f626, %f625, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f627, %f625, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f628, %f626, %f625, 0fC0A55DF6;
	fma.rn.f32 	%f629, %f627, %f625, 0f4081E0CF;
	fma.rn.f32 	%f630, %f625, %f624, 0f00000000;
	fma.rn.f32 	%f631, %f629, %f625, 0fC09DE9E6;
	fma.rn.f32 	%f632, %f628, %f630, 0f00000000;
	fma.rn.f32 	%f633, %f631, %f625, 0f3F800000;
	fma.rn.f32 	%f634, %f624, 0f40490FDB, %f632;
	and.b32  	%r340, %r339, 1;
	setp.eq.b32 	%p129, %r340, 1;
	selp.f32 	%f635, %f633, %f634, %p129;
	selp.f32 	%f636, %f634, %f633, %p129;
	and.b32  	%r341, %r339, 2;
	setp.eq.s32 	%p130, %r341, 0;
	neg.f32 	%f637, %f635;
	selp.f32 	%f638, %f635, %f637, %p130;
	add.s32 	%r342, %r339, 1;
	and.b32  	%r343, %r342, 2;
	setp.eq.s32 	%p131, %r343, 0;
	sub.f32 	%f639, %f71, %f636;
	selp.f32 	%f640, %f636, %f639, %p131;
	cvt.rzi.f32.f32 	%f641, %f615;
	setp.eq.f32 	%p132, %f641, %f615;
	mul.f32 	%f642, %f615, 0f00000000;
	selp.f32 	%f643, %f642, %f638, %p132;
	abs.f32 	%f644, %f615;
	setp.gt.f32 	%p133, %f644, 0f4B800000;
	add.f32 	%f645, %f643, 0f3F800000;
	selp.f32 	%f646, %f645, %f640, %p133;
	mov.b32 	%r269, %f613;
	mov.b32 	%r270, %f646;
	// begin inline asm
	cvt.rn.f16x2.f32 %r268, %r270, %r269;
	// end inline asm
	mov.b32 	%r272, %f610;
	mov.b32 	%r273, %f643;
	// begin inline asm
	cvt.rn.f16x2.f32 %r271, %r273, %r272;
	// end inline asm
	xor.b32  	%r293, %r272, -2147483648;
	xor.b32  	%r294, %r273, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r274, %r294, %r293;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r277, %r270, %r269;
	// end inline asm
	cvt.rn.f32.s32 	%f647, %r323;
	div.approx.f32 	%f648, %f647, %f103;
	add.f32 	%f649, %f648, %f648;
	mov.b32 	%r344, %f649;
	and.b32  	%r345, %r344, -2147483648;
	or.b32  	%r346, %r345, 1056964608;
	mov.b32 	%f650, %r346;
	add.f32 	%f651, %f649, %f650;
	cvt.rzi.f32.f32 	%f652, %f651;
	abs.f32 	%f653, %f649;
	setp.gt.f32 	%p134, %f653, 0f4B000000;
	selp.f32 	%f654, %f649, %f652, %p134;
	cvt.rzi.f32.f32 	%f655, %f649;
	setp.lt.f32 	%p135, %f653, 0f3F000000;
	selp.f32 	%f656, %f655, %f654, %p135;
	cvt.rzi.s32.f32 	%r347, %f656;
	fma.rn.f32 	%f657, %f656, 0fBF000000, %f648;
	mul.f32 	%f658, %f657, %f657;
	fma.rn.f32 	%f659, %f658, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f660, %f658, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f661, %f659, %f658, 0fC0A55DF6;
	fma.rn.f32 	%f662, %f660, %f658, 0f4081E0CF;
	fma.rn.f32 	%f663, %f658, %f657, 0f00000000;
	fma.rn.f32 	%f664, %f662, %f658, 0fC09DE9E6;
	fma.rn.f32 	%f665, %f661, %f663, 0f00000000;
	fma.rn.f32 	%f666, %f664, %f658, 0f3F800000;
	fma.rn.f32 	%f667, %f657, 0f40490FDB, %f665;
	and.b32  	%r348, %r347, 1;
	setp.eq.b32 	%p136, %r348, 1;
	selp.f32 	%f668, %f666, %f667, %p136;
	selp.f32 	%f669, %f667, %f666, %p136;
	and.b32  	%r349, %r347, 2;
	setp.eq.s32 	%p137, %r349, 0;
	neg.f32 	%f670, %f668;
	selp.f32 	%f671, %f668, %f670, %p137;
	add.s32 	%r350, %r347, 1;
	and.b32  	%r351, %r350, 2;
	setp.eq.s32 	%p138, %r351, 0;
	sub.f32 	%f672, %f71, %f669;
	selp.f32 	%f673, %f669, %f672, %p138;
	cvt.rzi.f32.f32 	%f674, %f648;
	setp.eq.f32 	%p139, %f674, %f648;
	mul.f32 	%f675, %f648, 0f00000000;
	selp.f32 	%f676, %f675, %f671, %p139;
	mov.b32 	%r352, %f676;
	abs.f32 	%f677, %f648;
	setp.gt.f32 	%p140, %f677, 0f4B800000;
	add.f32 	%f678, %f676, 0f3F800000;
	selp.f32 	%f679, %f678, %f673, %p140;
	shl.b32 	%r353, %r321, 3;
	add.s32 	%r354, %r323, %r353;
	cvt.rn.f32.s32 	%f680, %r354;
	div.approx.f32 	%f681, %f680, %f103;
	add.f32 	%f682, %f681, %f681;
	mov.b32 	%r355, %f682;
	and.b32  	%r356, %r355, -2147483648;
	or.b32  	%r357, %r356, 1056964608;
	mov.b32 	%f683, %r357;
	add.f32 	%f684, %f682, %f683;
	cvt.rzi.f32.f32 	%f685, %f684;
	abs.f32 	%f686, %f682;
	setp.gt.f32 	%p141, %f686, 0f4B000000;
	selp.f32 	%f687, %f682, %f685, %p141;
	cvt.rzi.f32.f32 	%f688, %f682;
	setp.lt.f32 	%p142, %f686, 0f3F000000;
	selp.f32 	%f689, %f688, %f687, %p142;
	cvt.rzi.s32.f32 	%r358, %f689;
	fma.rn.f32 	%f690, %f689, 0fBF000000, %f681;
	mul.f32 	%f691, %f690, %f690;
	fma.rn.f32 	%f692, %f691, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f693, %f691, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f694, %f692, %f691, 0fC0A55DF6;
	fma.rn.f32 	%f695, %f693, %f691, 0f4081E0CF;
	fma.rn.f32 	%f696, %f691, %f690, 0f00000000;
	fma.rn.f32 	%f697, %f695, %f691, 0fC09DE9E6;
	fma.rn.f32 	%f698, %f694, %f696, 0f00000000;
	fma.rn.f32 	%f699, %f697, %f691, 0f3F800000;
	fma.rn.f32 	%f700, %f690, 0f40490FDB, %f698;
	and.b32  	%r359, %r358, 1;
	setp.eq.b32 	%p143, %r359, 1;
	selp.f32 	%f701, %f699, %f700, %p143;
	selp.f32 	%f702, %f700, %f699, %p143;
	and.b32  	%r360, %r358, 2;
	setp.eq.s32 	%p144, %r360, 0;
	neg.f32 	%f703, %f701;
	selp.f32 	%f704, %f701, %f703, %p144;
	add.s32 	%r361, %r358, 1;
	and.b32  	%r362, %r361, 2;
	setp.eq.s32 	%p145, %r362, 0;
	sub.f32 	%f705, %f71, %f702;
	selp.f32 	%f706, %f702, %f705, %p145;
	cvt.rzi.f32.f32 	%f707, %f681;
	setp.eq.f32 	%p146, %f707, %f681;
	mul.f32 	%f708, %f681, 0f00000000;
	selp.f32 	%f709, %f708, %f704, %p146;
	mov.b32 	%r363, %f709;
	abs.f32 	%f710, %f681;
	setp.gt.f32 	%p147, %f710, 0f4B800000;
	add.f32 	%f711, %f709, 0f3F800000;
	selp.f32 	%f712, %f711, %f706, %p147;
	mov.b32 	%r282, %f712;
	mov.b32 	%r281, %f679;
	// begin inline asm
	cvt.rn.f16x2.f32 %r280, %r282, %r281;
	// end inline asm
	xor.b32  	%r285, %r363, -2147483648;
	xor.b32  	%r284, %r352, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r283, %r285, %r284;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r286, %r270, %r269;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r289, %r273, %r272;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r292, %r294, %r293;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r295, %r270, %r269;
	// end inline asm
	shl.b32 	%r365, %r111, 8;
	shl.b32 	%r366, %r3, 5;
	and.b32  	%r367, %r72, 28;
	and.b32  	%r368, %r366, 96;
	or.b32  	%r21, %r368, %r367;
	shl.b32 	%r369, %r70, 8;
	or.b32  	%r22, %r73, %r1;
	and.b32  	%r23, %r366, 128;
	or.b32  	%r370, %r21, %r23;
	or.b32  	%r371, %r370, %r369;
	add.s32 	%r24, %r371, %r365;
	bfe.s32 	%r372, %r4, 3, 1;
	and.b32  	%r25, %r4, 8;
	shl.b32 	%r373, %r4, 4;
	or.b32  	%r374, %r373, %r25;
	shr.u32 	%r375, %r374, 2;
	and.b32  	%r376, %r375, 30;
	and.b32  	%r378, %r4, 4;
	or.b32  	%r26, %r134, %r378;
	shr.u32 	%r379, %r1, 1;
	and.b32  	%r380, %r2, 32;
	or.b32  	%r381, %r380, %r379;
	or.b32  	%r382, %r74, %r73;
	or.b32  	%r383, %r71, %r382;
	or.b32  	%r384, %r383, %r75;
	or.b32  	%r385, %r384, %r69;
	or.b32  	%r386, %r385, %r76;
	bfe.u32 	%r387, %r386, 1, 5;
	mul.lo.s32 	%r388, %r387, 65;
	add.s32 	%r389, %r381, %r388;
	or.b32  	%r390, %r381, 8;
	add.s32 	%r391, %r390, %r388;
	or.b32  	%r392, %r381, 16;
	add.s32 	%r393, %r392, %r388;
	or.b32  	%r394, %r381, 24;
	add.s32 	%r395, %r394, %r388;
	shl.b32 	%r396, %r1, 1;
	or.b32  	%r397, %r396, %r80;
	mul.lo.s32 	%r398, %r397, 65;
	add.s32 	%r399, %r376, %r398;
	mul.wide.u32 	%rd45, %r399, 4;
	mov.u64 	%rd46, shmem;
	add.s64 	%rd6, %rd46, %rd45;
	cvt.u64.u32 	%rd47, %r376;
	cvt.u64.u32 	%rd48, %r398;
	add.s64 	%rd49, %rd48, %rd47;
	shl.b64 	%rd50, %rd49, 2;
	add.s64 	%rd7, %rd46, %rd50;
	shl.b32 	%r400, %r109, 16;
	add.s32 	%r401, %r400, -196608;
	shl.b32 	%r402, %r1, 10;
	and.b32  	%r403, %r71, 192;
	or.b32  	%r404, %r403, %r82;
	shl.b32 	%r405, %r404, 8;
	or.b32  	%r27, %r405, %r402;
	cvt.s64.s32 	%rd8, %r401;
	shr.u32 	%r406, %r74, 4;
	mul.lo.s32 	%r407, %r406, 65;
	shr.u32 	%r408, %r1, 3;
	mul.lo.s32 	%r409, %r408, 130;
	bfe.s32 	%r410, %r1, 2, 1;
	and.b32  	%r411, %r1, 4;
	setp.eq.s32 	%p149, %r411, 0;
	and.b32  	%r412, %r410, 260;
	bfe.s32 	%r413, %r1, 1, 1;
	and.b32  	%r414, %r1, 2;
	setp.eq.s32 	%p150, %r414, 0;
	and.b32  	%r415, %r413, 520;
	and.b32  	%r416, %r1, 1;
	neg.s32 	%r417, %r416;
	setp.eq.b32 	%p151, %r416, 1;
	and.b32  	%r418, %r417, 1040;
	add.s32 	%r419, %r418, %r376;
	add.s32 	%r420, %r419, %r407;
	add.s32 	%r421, %r420, %r409;
	add.s32 	%r422, %r421, %r412;
	add.s32 	%r423, %r422, %r415;
	mul.wide.u32 	%rd51, %r423, 4;
	add.s64 	%rd9, %rd46, %rd51;
	selp.b64 	%rd52, 0, 520, %p150;
	selp.b64 	%rd53, 0, 260, %p149;
	cvt.u64.u32 	%rd54, %r409;
	cvt.u64.u32 	%rd55, %r407;
	selp.b64 	%rd56, 1040, 0, %p151;
	add.s64 	%rd57, %rd47, %rd56;
	add.s64 	%rd58, %rd57, %rd55;
	add.s64 	%rd59, %rd58, %rd54;
	add.s64 	%rd60, %rd59, %rd53;
	add.s64 	%rd61, %rd60, %rd52;
	shl.b64 	%rd62, %rd61, 2;
	add.s64 	%rd10, %rd46, %rd62;
	cvt.u64.u32 	%rd63, %r422;
	add.s64 	%rd64, %rd63, %rd52;
	shl.b64 	%rd65, %rd64, 2;
	add.s64 	%rd11, %rd46, %rd65;
	add.s32 	%r424, %r423, 2113;
	mul.wide.u32 	%rd66, %r424, 4;
	add.s64 	%rd12, %rd46, %rd66;
	add.s32 	%r425, %r423, 2082;
	mul.wide.u32 	%rd67, %r425, 4;
	add.s64 	%rd13, %rd46, %rd67;
	add.s32 	%r426, %r423, 2114;
	mul.wide.u32 	%rd68, %r426, 4;
	add.s64 	%rd14, %rd46, %rd68;
	add.s32 	%r427, %r423, 4194;
	mul.wide.u32 	%rd69, %r427, 4;
	add.s64 	%rd15, %rd46, %rd69;
	add.s32 	%r428, %r423, 4163;
	mul.wide.u32 	%rd70, %r428, 4;
	add.s64 	%rd16, %rd46, %rd70;
	add.s32 	%r429, %r423, 4195;
	mul.wide.u32 	%rd71, %r429, 4;
	add.s64 	%rd17, %rd46, %rd71;
	add.s32 	%r430, %r423, 6275;
	mul.wide.u32 	%rd72, %r430, 4;
	add.s64 	%rd18, %rd46, %rd72;
	add.s32 	%r431, %r423, 6244;
	mul.wide.u32 	%rd73, %r431, 4;
	add.s64 	%rd19, %rd46, %rd73;
	add.s32 	%r432, %r423, 6276;
	mul.wide.u32 	%rd74, %r432, 4;
	add.s64 	%rd20, %rd46, %rd74;
	setp.lt.u32 	%p152, %r4, 16;
	selp.b32 	%r28, 0, 520, %p152;
	and.b32  	%r433, %r372, 1040;
	or.b32  	%r29, %r381, %r433;
	or.b32  	%r30, %r390, %r433;
	add.s32 	%r31, %r392, %r433;
	add.s32 	%r32, %r394, %r433;
	mul.wide.u32 	%rd75, %r395, 4;
	add.s64 	%rd21, %rd46, %rd75;
	mul.wide.u32 	%rd76, %r393, 4;
	add.s64 	%rd22, %rd46, %rd76;
	mul.wide.u32 	%rd77, %r391, 4;
	add.s64 	%rd23, %rd46, %rd77;
	mul.wide.u32 	%rd78, %r389, 4;
	add.s64 	%rd24, %rd46, %rd78;
	mov.u16 	%rs243, 25600;
	mov.u16 	%rs245, 21504;
	mov.u16 	%rs253, 18432;
	mov.u16 	%rs267, -14592;
	mov.u32 	%r2528, %r2526;
	mov.u32 	%r2529, %r2526;
	mov.u32 	%r2530, %r2526;
	mov.u32 	%r2531, %r2526;
	mov.u32 	%r2532, %r2526;
	mov.u32 	%r2533, %r2526;
	mov.u32 	%r2534, %r2526;
	mov.u32 	%r2535, %r2526;
	mov.u32 	%r2550, %r2526;
	mov.u32 	%r2551, %r2526;
	mov.u32 	%r2552, %r2526;
	mov.u32 	%r2553, %r2526;
	mov.u32 	%r45, %r2526;
	bra.uni 	$L__BB0_31;
$L__BB0_39:                             // %pass10370
                                        //   in Loop: Header=BB0_31 Depth=1
	or.b32  	%r2518, %r2527, %r21;
	or.b32  	%r2519, %r2518, %r23;
	or.b32  	%r2520, %r2519, %r27;
	or.b32  	%r2521, %r2520, 196608;
	cvt.s64.s32 	%rd132, %r2521;
	add.s64 	%rd133, %rd132, %rd8;
	shr.u64 	%rd134, %rd133, 39;
	add.s64 	%rd135, %rd133, %rd134;
	shr.s64 	%rd136, %rd135, 25;
	setp.lt.s64 	%p181, %rd133, 0;
	and.b64  	%rd137, %rd135, -33554432;
	setp.ne.s64 	%p182, %rd137, %rd133;
	and.pred  	%p183, %p181, %p182;
	selp.u64 	%rd138, 1, 0, %p183;
	sub.s64 	%rd139, %rd138, %rd136;
	shl.b64 	%rd140, %rd139, 25;
	add.s64 	%rd141, %rd140, %rd133;
	shl.b64 	%rd142, %rd141, 2;
	add.s64 	%rd143, %rd3, %rd142;
	st.global.v4.u32 	[%rd143], {%r102, %r104, %r103, %r105};
	setp.ne.s32 	%p184, %r45, 32512;
	add.s32 	%r45, %r45, 256;
	add.s32 	%r2522, %r45, %r107;
	setp.lt.s32 	%p185, %r2522, %r108;
	and.pred  	%p186, %p184, %p185;
	@%p186 bra 	$L__BB0_31;
	bra.uni 	$L__BB0_40;
$L__BB0_31:                             // %L1517
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_32 Depth 2
	setp.eq.s32 	%p153, %r25, 0;
	or.b32  	%r499, %r45, %r4;
	and.b32  	%r500, %r499, 32528;
	or.b32  	%r501, %r22, %r500;
	add.s32 	%r502, %r501, %r107;
	mad.lo.s32 	%r503, %r502, 12288, %r24;
	mul.hi.s32 	%r504, %r503, 715827883;
	shr.u32 	%r505, %r504, 31;
	shr.s32 	%r506, %r504, 26;
	add.s32 	%r507, %r506, %r505;
	setp.lt.s32 	%p154, %r503, 0;
	mul.lo.s32 	%r508, %r507, 402653184;
	setp.ne.s32 	%p155, %r508, %r503;
	and.pred  	%p156, %p154, %p155;
	selp.s32 	%r509, -1, 0, %p156;
	add.s32 	%r510, %r507, %r509;
	or.b32  	%r511, %r503, 1;
	mad.lo.s32 	%r512, %r510, -402653184, %r511;
	mul.wide.s32 	%rd79, %r512, 4;
	add.s64 	%rd80, %rd2, %rd79;
	ld.global.v4.u32 	{%r513, %r514, %r515, %r516}, [%rd80+-4];
	or.b32  	%r517, %r501, 64;
	add.s32 	%r518, %r517, %r107;
	mad.lo.s32 	%r519, %r518, 12288, %r24;
	mul.hi.s32 	%r520, %r519, 715827883;
	shr.u32 	%r521, %r520, 31;
	shr.s32 	%r522, %r520, 26;
	add.s32 	%r523, %r522, %r521;
	setp.lt.s32 	%p157, %r519, 0;
	mul.lo.s32 	%r524, %r523, 402653184;
	setp.ne.s32 	%p158, %r524, %r519;
	and.pred  	%p159, %p157, %p158;
	selp.s32 	%r525, -1, 0, %p159;
	add.s32 	%r526, %r523, %r525;
	or.b32  	%r527, %r519, 1;
	mad.lo.s32 	%r528, %r526, -402653184, %r527;
	mul.wide.s32 	%rd81, %r528, 4;
	add.s64 	%rd82, %rd2, %rd81;
	ld.global.v4.u32 	{%r529, %r530, %r531, %r532}, [%rd82+-4];
	or.b32  	%r533, %r501, 128;
	add.s32 	%r534, %r533, %r107;
	mad.lo.s32 	%r535, %r534, 12288, %r24;
	mul.hi.s32 	%r536, %r535, 715827883;
	shr.u32 	%r537, %r536, 31;
	shr.s32 	%r538, %r536, 26;
	add.s32 	%r539, %r538, %r537;
	setp.lt.s32 	%p160, %r535, 0;
	mul.lo.s32 	%r540, %r539, 402653184;
	setp.ne.s32 	%p161, %r540, %r535;
	and.pred  	%p162, %p160, %p161;
	selp.s32 	%r541, -1, 0, %p162;
	add.s32 	%r542, %r539, %r541;
	or.b32  	%r543, %r535, 1;
	mad.lo.s32 	%r544, %r542, -402653184, %r543;
	mul.wide.s32 	%rd83, %r544, 4;
	add.s64 	%rd84, %rd2, %rd83;
	ld.global.v4.u32 	{%r545, %r546, %r547, %r548}, [%rd84+-4];
	or.b32  	%r549, %r501, 192;
	add.s32 	%r550, %r549, %r107;
	mad.lo.s32 	%r551, %r550, 12288, %r24;
	mul.hi.s32 	%r552, %r551, 715827883;
	shr.u32 	%r553, %r552, 31;
	shr.s32 	%r554, %r552, 26;
	add.s32 	%r555, %r554, %r553;
	setp.lt.s32 	%p163, %r551, 0;
	mul.lo.s32 	%r556, %r555, 402653184;
	setp.ne.s32 	%p164, %r556, %r551;
	and.pred  	%p165, %p163, %p164;
	selp.s32 	%r557, -1, 0, %p165;
	add.s32 	%r558, %r555, %r557;
	or.b32  	%r559, %r551, 1;
	mad.lo.s32 	%r560, %r558, -402653184, %r559;
	mul.wide.s32 	%rd85, %r560, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.v4.u32 	{%r561, %r562, %r563, %r564}, [%rd86+-4];
	selp.b32 	%r565, %r515, %r513, %p153;
	shfl.sync.bfly.b32	%r566, %r565, 8, 31, -1;
	selp.b32 	%r435, %r513, %r566, %p153;
	selp.b32 	%r436, %r566, %r515, %p153;
	selp.b32 	%r567, %r516, %r514, %p153;
	shfl.sync.bfly.b32	%r568, %r567, 8, 31, -1;
	selp.b32 	%r443, %r514, %r568, %p153;
	selp.b32 	%r444, %r568, %r516, %p153;
	selp.b32 	%r569, %r531, %r529, %p153;
	shfl.sync.bfly.b32	%r570, %r569, 8, 31, -1;
	selp.b32 	%r451, %r529, %r570, %p153;
	selp.b32 	%r452, %r570, %r531, %p153;
	selp.b32 	%r571, %r532, %r530, %p153;
	shfl.sync.bfly.b32	%r572, %r571, 8, 31, -1;
	selp.b32 	%r459, %r530, %r572, %p153;
	selp.b32 	%r460, %r572, %r532, %p153;
	selp.b32 	%r573, %r547, %r545, %p153;
	shfl.sync.bfly.b32	%r574, %r573, 8, 31, -1;
	selp.b32 	%r467, %r545, %r574, %p153;
	selp.b32 	%r468, %r574, %r547, %p153;
	selp.b32 	%r575, %r548, %r546, %p153;
	shfl.sync.bfly.b32	%r576, %r575, 8, 31, -1;
	selp.b32 	%r475, %r546, %r576, %p153;
	selp.b32 	%r476, %r576, %r548, %p153;
	selp.b32 	%r577, %r563, %r561, %p153;
	shfl.sync.bfly.b32	%r578, %r577, 8, 31, -1;
	selp.b32 	%r483, %r561, %r578, %p153;
	selp.b32 	%r484, %r578, %r563, %p153;
	selp.b32 	%r579, %r564, %r562, %p153;
	shfl.sync.bfly.b32	%r580, %r579, 8, 31, -1;
	selp.b32 	%r491, %r562, %r580, %p153;
	selp.b32 	%r492, %r580, %r564, %p153;
	mov.u32 	%r493, 21520;
	// begin inline asm
	prmt.b32 %r434, %r435, %r436, %r493;
	// end inline asm
	mov.u32 	%r497, 30258;
	// begin inline asm
	prmt.b32 %r438, %r435, %r436, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r442, %r443, %r444, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r446, %r443, %r444, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r450, %r451, %r452, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r454, %r451, %r452, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r458, %r459, %r460, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r462, %r459, %r460, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r466, %r467, %r468, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r470, %r467, %r468, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r474, %r475, %r476, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r478, %r475, %r476, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r482, %r483, %r484, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r486, %r483, %r484, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r490, %r491, %r492, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r494, %r491, %r492, %r497;
	// end inline asm
	st.shared.u32 	[%rd9], %r434;
	st.shared.u32 	[%rd10+128], %r438;
	st.shared.u32 	[%rd10+4], %r442;
	st.shared.u32 	[%rd10+132], %r446;
	st.shared.u32 	[%rd11+8324], %r450;
	st.shared.u32 	[%rd12], %r454;
	st.shared.u32 	[%rd13], %r458;
	st.shared.u32 	[%rd14], %r462;
	st.shared.u32 	[%rd11+16648], %r466;
	st.shared.u32 	[%rd15], %r470;
	st.shared.u32 	[%rd16], %r474;
	st.shared.u32 	[%rd17], %r478;
	st.shared.u32 	[%rd11+24972], %r482;
	st.shared.u32 	[%rd18], %r486;
	st.shared.u32 	[%rd19], %r490;
	st.shared.u32 	[%rd20], %r494;
	bar.sync 	0;
	or.b32  	%r46, %r26, %r45;
	shr.u32 	%r2541, %r46, 6;
	mov.u64 	%rd148, %rd24;
	mov.u64 	%rd149, %rd23;
	mov.u64 	%rd150, %rd22;
	mov.u64 	%rd151, %rd21;
	mov.u32 	%r2542, %r2528;
	mov.u32 	%r2543, %r2529;
	mov.u32 	%r2544, %r2530;
	mov.u32 	%r2545, %r2531;
	mov.u32 	%r2546, %r2532;
	mov.u32 	%r2547, %r2533;
	mov.u32 	%r2548, %r2534;
	mov.u32 	%r2549, %r2535;
	mov.u32 	%r2554, %r2526;
$L__BB0_32:                             // %L11794
                                        //   Parent Loop BB0_31 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r2535, %r2553;
	mov.u32 	%r2534, %r2552;
	mov.u32 	%r2533, %r2551;
	mov.u32 	%r2532, %r2550;
	mov.u32 	%r2531, %r2549;
	mov.u32 	%r2530, %r2548;
	mov.u32 	%r2529, %r2547;
	mov.u32 	%r2528, %r2546;
	add.s32 	%r2393, %r46, %r2554;
	bfe.s32 	%r2394, %r2393, 4, 1;
	and.b32  	%r2395, %r2394, 65;
	bfe.s32 	%r2396, %r2393, 3, 1;
	and.b32  	%r2397, %r2396, 130;
	bfe.s32 	%r2398, %r2393, 2, 1;
	and.b32  	%r2399, %r2398, 260;
	and.b32  	%r2400, %r2541, 3;
	mul.lo.s32 	%r2401, %r2400, 2081;
	add.s32 	%r2402, %r29, %r2395;
	add.s32 	%r2403, %r2402, %r2397;
	add.s32 	%r2404, %r2403, %r2399;
	add.s32 	%r2405, %r2404, %r2401;
	add.s32 	%r2406, %r2405, %r28;
	mul.wide.u32 	%rd87, %r2406, 4;
	add.s64 	%rd89, %rd46, %rd87;
	ld.shared.u32 	%r2550, [%rd89];
	// begin inline asm
	mov.b32 %r586, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r597, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r585, %r2550, -2004318072;
	mov.u32 	%r584, 983055;
	// begin inline asm
	lop3.b32 %r583, %r584, %r585, %r586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r587, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r588, %r586, %r587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r591, %r583, %r588;
	// end inline asm
	mov.u32 	%r595, 15728880;
	// begin inline asm
	lop3.b32 %r594, %r595, %r585, %r597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r598, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r599, %r597, %r598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r602, %r594, %r599;
	// end inline asm
	shr.u32 	%r607, %r585, 8;
	// begin inline asm
	lop3.b32 %r605, %r584, %r607, %r586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r609, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r610, %r586, %r609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r613, %r605, %r610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r616, %r595, %r607, %r597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r620, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r621, %r597, %r620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r624, %r616, %r621;
	// end inline asm
	// begin inline asm
	mov.b32 %r632, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r643, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r631, %r2542, -2004318072;
	// begin inline asm
	lop3.b32 %r629, %r584, %r631, %r632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r633, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r634, %r632, %r633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r637, %r629, %r634;
	// end inline asm
	// begin inline asm
	lop3.b32 %r640, %r595, %r631, %r643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r644, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r645, %r643, %r644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r648, %r640, %r645;
	// end inline asm
	shr.u32 	%r653, %r631, 8;
	// begin inline asm
	lop3.b32 %r651, %r584, %r653, %r632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r655, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r656, %r632, %r655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r659, %r651, %r656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r662, %r595, %r653, %r643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r666, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r667, %r643, %r666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r670, %r662, %r667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r675, %r166, %r637, %r2526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r681, %r166, %r648, %r2526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r687, %r166, %r659, %r2526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r693, %r166, %r670, %r2526;
	// end inline asm
	// begin inline asm
	mov.b32 %r702, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r713, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r701, %r2528, -2004318072;
	// begin inline asm
	lop3.b32 %r699, %r584, %r701, %r702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r703, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r704, %r702, %r703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r707, %r699, %r704;
	// end inline asm
	// begin inline asm
	lop3.b32 %r710, %r595, %r701, %r713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r714, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r715, %r713, %r714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r718, %r710, %r715;
	// end inline asm
	shr.u32 	%r723, %r701, 8;
	// begin inline asm
	lop3.b32 %r721, %r584, %r723, %r702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r725, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r726, %r702, %r725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r729, %r721, %r726;
	// end inline asm
	// begin inline asm
	lop3.b32 %r732, %r595, %r723, %r713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r736, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r737, %r713, %r736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r740, %r732, %r737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r743, %r197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r745, %r743, %r707, %r675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r749, %r197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r751, %r749, %r718, %r681;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r755, %r197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r757, %r755, %r729, %r687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r761, %r197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r763, %r761, %r740, %r693;
	// end inline asm
	// begin inline asm
	mov.b32 %r772, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r783, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r771, %r2532, -2004318072;
	// begin inline asm
	lop3.b32 %r769, %r584, %r771, %r772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r773, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r774, %r772, %r773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r777, %r769, %r774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r780, %r595, %r771, %r783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r784, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r785, %r783, %r784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r788, %r780, %r785;
	// end inline asm
	shr.u32 	%r793, %r771, 8;
	// begin inline asm
	lop3.b32 %r791, %r584, %r793, %r772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r795, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r796, %r772, %r795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r799, %r791, %r796;
	// end inline asm
	// begin inline asm
	lop3.b32 %r802, %r595, %r793, %r783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r806, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r807, %r783, %r806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r810, %r802, %r807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r815, %r228, %r777, %r745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r821, %r228, %r788, %r751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r827, %r228, %r799, %r757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r833, %r228, %r810, %r763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r837, %r259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r868, %r837, %r591, %r815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r843, %r259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r865, %r843, %r602, %r821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r849, %r259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r877, %r849, %r613, %r827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r855, %r259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r874, %r855, %r624, %r833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r861, %r265;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r863, %r861, %r865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r866, %r262, %r868, %r863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r870, %r265;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r872, %r870, %r874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r875, %r262, %r877, %r872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r879, %r265, %r868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r882, %r262, %r865, %r879;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r886, %r265, %r877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r889, %r262, %r874, %r886;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r920, %r917}, {%r268, %r274, %r271, %r277}, {%r866, %r882}, {%r2526, %r2526};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r929, %r926}, {%r268, %r274, %r271, %r277}, {%r875, %r889}, {%r2526, %r2526};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r913, %r283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r915, %r913, %r917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r918, %r280, %r920, %r915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r922, %r283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r924, %r922, %r926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r927, %r280, %r929, %r924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r931, %r283, %r920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r934, %r280, %r917, %r931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r938, %r283, %r929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r941, %r280, %r926, %r938;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r945, %r946}, {%r286, %r292, %r289, %r295}, {%r918, %r934}, {%r2526, %r2526};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r955, %r956}, {%r286, %r292, %r289, %r295}, {%r927, %r941}, {%r2526, %r2526};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r965, %r77, %r945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r968, %r77, %r946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r971, %r77, %r955;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r974, %r77, %r956;
	// end inline asm
	// begin inline asm
	mov.b32 %r977, {%rs267, %rs267};
	// end inline asm
	mov.u16 	%rs58, 18176;
	// begin inline asm
	mov.b32 %r978, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r979, %r965, %r977;
	// end inline asm
	// begin inline asm
	min.f16x2 %r982, %r979, %r978;
	// end inline asm
	// begin inline asm
	mov.b32 %r985, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r986, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r987, %r968, %r985;
	// end inline asm
	// begin inline asm
	min.f16x2 %r990, %r987, %r986;
	// end inline asm
	// begin inline asm
	mov.b32 %r993, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r994, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r995, %r971, %r993;
	// end inline asm
	// begin inline asm
	min.f16x2 %r998, %r995, %r994;
	// end inline asm
	// begin inline asm
	mov.b32 %r1001, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1002, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1003, %r974, %r1001;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1006, %r1003, %r1002;
	// end inline asm
	mov.u16 	%rs72, 26112;
	// begin inline asm
	mov.b32 %r1012, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1010, %r982, %r1012;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1013, %r990, %r1012;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1016, %r998, %r1012;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1019, %r1006, %r1012;
	// end inline asm
	mov.u32 	%r1025, 25152;
	// begin inline asm
	prmt.b32 %r1022, %r1010, %r1016, %r1025;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1026, %r1013, %r1019, %r1025;
	// end inline asm
	shl.b32 	%r1033, %r1026, 4;
	mov.u32 	%r1031, 252645135;
	// begin inline asm
	lop3.b32 %r1030, %r1031, %r1022, %r1033, 202;
	// end inline asm
	st.shared.u32 	[%rd148], %r1030;
	add.s32 	%r2407, %r30, %r2395;
	add.s32 	%r2408, %r2407, %r2397;
	add.s32 	%r2409, %r2408, %r2399;
	add.s32 	%r2410, %r2409, %r2401;
	add.s32 	%r2411, %r2410, %r28;
	mul.wide.u32 	%rd90, %r2411, 4;
	add.s64 	%rd91, %rd46, %rd90;
	ld.shared.u32 	%r2551, [%rd91];
	// begin inline asm
	mov.b32 %r1039, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r1050, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1038, %r2551, -2004318072;
	// begin inline asm
	lop3.b32 %r1036, %r584, %r1038, %r1039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1040, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1041, %r1039, %r1040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1044, %r1036, %r1041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1047, %r595, %r1038, %r1050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1051, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1052, %r1050, %r1051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1055, %r1047, %r1052;
	// end inline asm
	shr.u32 	%r1060, %r1038, 8;
	// begin inline asm
	lop3.b32 %r1058, %r584, %r1060, %r1039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1062, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1063, %r1039, %r1062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1066, %r1058, %r1063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1069, %r595, %r1060, %r1050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1073, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1074, %r1050, %r1073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1077, %r1069, %r1074;
	// end inline asm
	// begin inline asm
	mov.b32 %r1085, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r1096, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1084, %r2543, -2004318072;
	// begin inline asm
	lop3.b32 %r1082, %r584, %r1084, %r1085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1086, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1087, %r1085, %r1086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1090, %r1082, %r1087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1093, %r595, %r1084, %r1096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1097, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1098, %r1096, %r1097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1101, %r1093, %r1098;
	// end inline asm
	shr.u32 	%r1106, %r1084, 8;
	// begin inline asm
	lop3.b32 %r1104, %r584, %r1106, %r1085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1108, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1109, %r1085, %r1108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1112, %r1104, %r1109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1115, %r595, %r1106, %r1096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1119, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1120, %r1096, %r1119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1123, %r1115, %r1120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1128, %r166, %r1090, %r2526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1134, %r166, %r1101, %r2526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1140, %r166, %r1112, %r2526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1146, %r166, %r1123, %r2526;
	// end inline asm
	// begin inline asm
	mov.b32 %r1155, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r1166, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1154, %r2529, -2004318072;
	// begin inline asm
	lop3.b32 %r1152, %r584, %r1154, %r1155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1156, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1157, %r1155, %r1156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1160, %r1152, %r1157;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1163, %r595, %r1154, %r1166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1167, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1168, %r1166, %r1167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1171, %r1163, %r1168;
	// end inline asm
	shr.u32 	%r1176, %r1154, 8;
	// begin inline asm
	lop3.b32 %r1174, %r584, %r1176, %r1155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1178, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1179, %r1155, %r1178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1182, %r1174, %r1179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1185, %r595, %r1176, %r1166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1189, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1190, %r1166, %r1189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1193, %r1185, %r1190;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1196, %r197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1198, %r1196, %r1160, %r1128;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1202, %r197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1204, %r1202, %r1171, %r1134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1208, %r197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1210, %r1208, %r1182, %r1140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1214, %r197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1216, %r1214, %r1193, %r1146;
	// end inline asm
	// begin inline asm
	mov.b32 %r1225, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r1236, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1224, %r2533, -2004318072;
	// begin inline asm
	lop3.b32 %r1222, %r584, %r1224, %r1225, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1226, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1227, %r1225, %r1226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1230, %r1222, %r1227;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1233, %r595, %r1224, %r1236, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1237, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1238, %r1236, %r1237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1241, %r1233, %r1238;
	// end inline asm
	shr.u32 	%r1246, %r1224, 8;
	// begin inline asm
	lop3.b32 %r1244, %r584, %r1246, %r1225, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1248, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1249, %r1225, %r1248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1252, %r1244, %r1249;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1255, %r595, %r1246, %r1236, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1259, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1260, %r1236, %r1259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1263, %r1255, %r1260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1268, %r228, %r1230, %r1198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1274, %r228, %r1241, %r1204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1280, %r228, %r1252, %r1210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1286, %r228, %r1263, %r1216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1290, %r259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1321, %r1290, %r1044, %r1268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1296, %r259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1318, %r1296, %r1055, %r1274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1302, %r259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1330, %r1302, %r1066, %r1280;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1308, %r259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1327, %r1308, %r1077, %r1286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1314, %r265;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1316, %r1314, %r1318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1319, %r262, %r1321, %r1316;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1323, %r265;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1325, %r1323, %r1327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1328, %r262, %r1330, %r1325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1332, %r265, %r1321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1335, %r262, %r1318, %r1332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1339, %r265, %r1330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1342, %r262, %r1327, %r1339;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1373, %r1370}, {%r268, %r274, %r271, %r277}, {%r1319, %r1335}, {%r2526, %r2526};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1382, %r1379}, {%r268, %r274, %r271, %r277}, {%r1328, %r1342}, {%r2526, %r2526};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1366, %r283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1368, %r1366, %r1370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1371, %r280, %r1373, %r1368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1375, %r283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1377, %r1375, %r1379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1380, %r280, %r1382, %r1377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1384, %r283, %r1373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1387, %r280, %r1370, %r1384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1391, %r283, %r1382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1394, %r280, %r1379, %r1391;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1398, %r1399}, {%r286, %r292, %r289, %r295}, {%r1371, %r1387}, {%r2526, %r2526};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1408, %r1409}, {%r286, %r292, %r289, %r295}, {%r1380, %r1394}, {%r2526, %r2526};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1418, %r77, %r1398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1421, %r77, %r1399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1424, %r77, %r1408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1427, %r77, %r1409;
	// end inline asm
	// begin inline asm
	mov.b32 %r1430, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1431, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1432, %r1418, %r1430;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1435, %r1432, %r1431;
	// end inline asm
	// begin inline asm
	mov.b32 %r1438, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1439, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1440, %r1421, %r1438;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1443, %r1440, %r1439;
	// end inline asm
	// begin inline asm
	mov.b32 %r1446, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1447, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1448, %r1424, %r1446;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1451, %r1448, %r1447;
	// end inline asm
	// begin inline asm
	mov.b32 %r1454, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1455, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1456, %r1427, %r1454;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1459, %r1456, %r1455;
	// end inline asm
	// begin inline asm
	mov.b32 %r1465, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1463, %r1435, %r1465;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1466, %r1443, %r1465;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1469, %r1451, %r1465;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1472, %r1459, %r1465;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1475, %r1463, %r1469, %r1025;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1479, %r1466, %r1472, %r1025;
	// end inline asm
	shl.b32 	%r1486, %r1479, 4;
	// begin inline asm
	lop3.b32 %r1483, %r1031, %r1475, %r1486, 202;
	// end inline asm
	st.shared.u32 	[%rd149], %r1483;
	add.s32 	%r2412, %r31, %r2395;
	add.s32 	%r2413, %r2412, %r2397;
	add.s32 	%r2414, %r2413, %r2399;
	add.s32 	%r2415, %r2414, %r2401;
	add.s32 	%r2416, %r2415, %r28;
	mul.wide.u32 	%rd92, %r2416, 4;
	add.s64 	%rd93, %rd46, %rd92;
	ld.shared.u32 	%r2552, [%rd93];
	// begin inline asm
	mov.b32 %r1492, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r1503, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1491, %r2552, -2004318072;
	// begin inline asm
	lop3.b32 %r1489, %r584, %r1491, %r1492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1493, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1494, %r1492, %r1493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1497, %r1489, %r1494;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1500, %r595, %r1491, %r1503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1504, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1505, %r1503, %r1504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1508, %r1500, %r1505;
	// end inline asm
	shr.u32 	%r1513, %r1491, 8;
	// begin inline asm
	lop3.b32 %r1511, %r584, %r1513, %r1492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1515, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1516, %r1492, %r1515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1519, %r1511, %r1516;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1522, %r595, %r1513, %r1503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1526, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1527, %r1503, %r1526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1530, %r1522, %r1527;
	// end inline asm
	// begin inline asm
	mov.b32 %r1538, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r1549, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1537, %r2544, -2004318072;
	// begin inline asm
	lop3.b32 %r1535, %r584, %r1537, %r1538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1539, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1540, %r1538, %r1539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1543, %r1535, %r1540;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1546, %r595, %r1537, %r1549, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1550, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1551, %r1549, %r1550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1554, %r1546, %r1551;
	// end inline asm
	shr.u32 	%r1559, %r1537, 8;
	// begin inline asm
	lop3.b32 %r1557, %r584, %r1559, %r1538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1561, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1562, %r1538, %r1561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1565, %r1557, %r1562;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1568, %r595, %r1559, %r1549, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1572, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1573, %r1549, %r1572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1576, %r1568, %r1573;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1581, %r166, %r1543, %r2526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1587, %r166, %r1554, %r2526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1593, %r166, %r1565, %r2526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1599, %r166, %r1576, %r2526;
	// end inline asm
	// begin inline asm
	mov.b32 %r1608, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r1619, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1607, %r2530, -2004318072;
	// begin inline asm
	lop3.b32 %r1605, %r584, %r1607, %r1608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1609, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1610, %r1608, %r1609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1613, %r1605, %r1610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1616, %r595, %r1607, %r1619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1620, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1621, %r1619, %r1620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1624, %r1616, %r1621;
	// end inline asm
	shr.u32 	%r1629, %r1607, 8;
	// begin inline asm
	lop3.b32 %r1627, %r584, %r1629, %r1608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1631, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1632, %r1608, %r1631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1635, %r1627, %r1632;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1638, %r595, %r1629, %r1619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1642, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1643, %r1619, %r1642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1646, %r1638, %r1643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1649, %r197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1651, %r1649, %r1613, %r1581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1655, %r197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1657, %r1655, %r1624, %r1587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1661, %r197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1663, %r1661, %r1635, %r1593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1667, %r197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1669, %r1667, %r1646, %r1599;
	// end inline asm
	// begin inline asm
	mov.b32 %r1678, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r1689, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1677, %r2534, -2004318072;
	// begin inline asm
	lop3.b32 %r1675, %r584, %r1677, %r1678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1679, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1680, %r1678, %r1679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1683, %r1675, %r1680;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1686, %r595, %r1677, %r1689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1690, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1691, %r1689, %r1690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1694, %r1686, %r1691;
	// end inline asm
	shr.u32 	%r1699, %r1677, 8;
	// begin inline asm
	lop3.b32 %r1697, %r584, %r1699, %r1678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1701, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1702, %r1678, %r1701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1705, %r1697, %r1702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1708, %r595, %r1699, %r1689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1712, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1713, %r1689, %r1712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1716, %r1708, %r1713;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1721, %r228, %r1683, %r1651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1727, %r228, %r1694, %r1657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1733, %r228, %r1705, %r1663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1739, %r228, %r1716, %r1669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1743, %r259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1774, %r1743, %r1497, %r1721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1749, %r259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1771, %r1749, %r1508, %r1727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1755, %r259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1783, %r1755, %r1519, %r1733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1761, %r259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1780, %r1761, %r1530, %r1739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1767, %r265;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1769, %r1767, %r1771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1772, %r262, %r1774, %r1769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1776, %r265;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1778, %r1776, %r1780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1781, %r262, %r1783, %r1778;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1785, %r265, %r1774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1788, %r262, %r1771, %r1785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1792, %r265, %r1783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r262, %r1780, %r1792;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1826, %r1823}, {%r268, %r274, %r271, %r277}, {%r1772, %r1788}, {%r2526, %r2526};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1835, %r1832}, {%r268, %r274, %r271, %r277}, {%r1781, %r1795}, {%r2526, %r2526};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1819, %r283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1821, %r1819, %r1823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1824, %r280, %r1826, %r1821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1828, %r283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1830, %r1828, %r1832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1833, %r280, %r1835, %r1830;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1837, %r283, %r1826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1840, %r280, %r1823, %r1837;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1844, %r283, %r1835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1847, %r280, %r1832, %r1844;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1851, %r1852}, {%r286, %r292, %r289, %r295}, {%r1824, %r1840}, {%r2526, %r2526};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1861, %r1862}, {%r286, %r292, %r289, %r295}, {%r1833, %r1847}, {%r2526, %r2526};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1871, %r77, %r1851;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1874, %r77, %r1852;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1877, %r77, %r1861;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1880, %r77, %r1862;
	// end inline asm
	// begin inline asm
	mov.b32 %r1883, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1884, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1885, %r1871, %r1883;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1888, %r1885, %r1884;
	// end inline asm
	// begin inline asm
	mov.b32 %r1891, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1892, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1893, %r1874, %r1891;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1896, %r1893, %r1892;
	// end inline asm
	// begin inline asm
	mov.b32 %r1899, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1900, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1901, %r1877, %r1899;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1904, %r1901, %r1900;
	// end inline asm
	// begin inline asm
	mov.b32 %r1907, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r1908, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1909, %r1880, %r1907;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1912, %r1909, %r1908;
	// end inline asm
	// begin inline asm
	mov.b32 %r1918, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1916, %r1888, %r1918;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1919, %r1896, %r1918;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1922, %r1904, %r1918;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1925, %r1912, %r1918;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1928, %r1916, %r1922, %r1025;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1932, %r1919, %r1925, %r1025;
	// end inline asm
	shl.b32 	%r1939, %r1932, 4;
	// begin inline asm
	lop3.b32 %r1936, %r1031, %r1928, %r1939, 202;
	// end inline asm
	st.shared.u32 	[%rd150], %r1936;
	add.s32 	%r2417, %r32, %r2395;
	add.s32 	%r2418, %r2417, %r2397;
	add.s32 	%r2419, %r2418, %r2399;
	add.s32 	%r2420, %r2419, %r2401;
	add.s32 	%r2421, %r2420, %r28;
	mul.wide.u32 	%rd94, %r2421, 4;
	add.s64 	%rd95, %rd46, %rd94;
	ld.shared.u32 	%r2553, [%rd95];
	// begin inline asm
	mov.b32 %r1945, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r1956, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1944, %r2553, -2004318072;
	// begin inline asm
	lop3.b32 %r1942, %r584, %r1944, %r1945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1946, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1947, %r1945, %r1946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1950, %r1942, %r1947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1953, %r595, %r1944, %r1956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1957, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1958, %r1956, %r1957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1961, %r1953, %r1958;
	// end inline asm
	shr.u32 	%r1966, %r1944, 8;
	// begin inline asm
	lop3.b32 %r1964, %r584, %r1966, %r1945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1968, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1969, %r1945, %r1968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1972, %r1964, %r1969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1975, %r595, %r1966, %r1956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1979, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1980, %r1956, %r1979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1983, %r1975, %r1980;
	// end inline asm
	// begin inline asm
	mov.b32 %r1991, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r2002, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r1990, %r2545, -2004318072;
	// begin inline asm
	lop3.b32 %r1988, %r584, %r1990, %r1991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1992, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1993, %r1991, %r1992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1996, %r1988, %r1993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1999, %r595, %r1990, %r2002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2003, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2004, %r2002, %r2003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2007, %r1999, %r2004;
	// end inline asm
	shr.u32 	%r2012, %r1990, 8;
	// begin inline asm
	lop3.b32 %r2010, %r584, %r2012, %r1991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2014, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2015, %r1991, %r2014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2018, %r2010, %r2015;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2021, %r595, %r2012, %r2002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2025, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2026, %r2002, %r2025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2029, %r2021, %r2026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2034, %r166, %r1996, %r2526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2040, %r166, %r2007, %r2526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2046, %r166, %r2018, %r2526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2052, %r166, %r2029, %r2526;
	// end inline asm
	// begin inline asm
	mov.b32 %r2061, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r2072, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r2060, %r2531, -2004318072;
	// begin inline asm
	lop3.b32 %r2058, %r584, %r2060, %r2061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2062, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2063, %r2061, %r2062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2066, %r2058, %r2063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2069, %r595, %r2060, %r2072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2073, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2074, %r2072, %r2073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2077, %r2069, %r2074;
	// end inline asm
	shr.u32 	%r2082, %r2060, 8;
	// begin inline asm
	lop3.b32 %r2080, %r584, %r2082, %r2061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2084, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2085, %r2061, %r2084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2088, %r2080, %r2085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2091, %r595, %r2082, %r2072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2095, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2096, %r2072, %r2095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2099, %r2091, %r2096;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2102, %r197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2104, %r2102, %r2066, %r2034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2108, %r197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2110, %r2108, %r2077, %r2040;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2114, %r197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2116, %r2114, %r2088, %r2046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2120, %r197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2122, %r2120, %r2099, %r2052;
	// end inline asm
	// begin inline asm
	mov.b32 %r2131, {%rs243, %rs243};
	// end inline asm
	// begin inline asm
	mov.b32 %r2142, {%rs245, %rs245};
	// end inline asm
	xor.b32  	%r2130, %r2535, -2004318072;
	// begin inline asm
	lop3.b32 %r2128, %r584, %r2130, %r2131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2132, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2133, %r2131, %r2132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2136, %r2128, %r2133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2139, %r595, %r2130, %r2142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2143, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2144, %r2142, %r2143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2147, %r2139, %r2144;
	// end inline asm
	shr.u32 	%r2152, %r2130, 8;
	// begin inline asm
	lop3.b32 %r2150, %r584, %r2152, %r2131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2154, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2155, %r2131, %r2154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2158, %r2150, %r2155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2161, %r595, %r2152, %r2142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2165, {%rs253, %rs253};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2166, %r2142, %r2165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2169, %r2161, %r2166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2174, %r228, %r2136, %r2104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2180, %r228, %r2147, %r2110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2186, %r228, %r2158, %r2116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2192, %r228, %r2169, %r2122;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2196, %r259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2227, %r2196, %r1950, %r2174;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2202, %r259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2224, %r2202, %r1961, %r2180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2208, %r259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2236, %r2208, %r1972, %r2186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2214, %r259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2233, %r2214, %r1983, %r2192;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2220, %r265;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2222, %r2220, %r2224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2225, %r262, %r2227, %r2222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2229, %r265;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2231, %r2229, %r2233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2234, %r262, %r2236, %r2231;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2238, %r265, %r2227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2241, %r262, %r2224, %r2238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2245, %r265, %r2236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2248, %r262, %r2233, %r2245;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2279, %r2276}, {%r268, %r274, %r271, %r277}, {%r2225, %r2241}, {%r2526, %r2526};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2288, %r2285}, {%r268, %r274, %r271, %r277}, {%r2234, %r2248}, {%r2526, %r2526};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2272, %r283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2274, %r2272, %r2276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2277, %r280, %r2279, %r2274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2281, %r283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2283, %r2281, %r2285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2286, %r280, %r2288, %r2283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2290, %r283, %r2279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2293, %r280, %r2276, %r2290;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2297, %r283, %r2288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2300, %r280, %r2285, %r2297;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2304, %r2305}, {%r286, %r292, %r289, %r295}, {%r2277, %r2293}, {%r2526, %r2526};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2314, %r2315}, {%r286, %r292, %r289, %r295}, {%r2286, %r2300}, {%r2526, %r2526};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2324, %r77, %r2304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2327, %r77, %r2305;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2330, %r77, %r2314;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2333, %r77, %r2315;
	// end inline asm
	// begin inline asm
	mov.b32 %r2336, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r2337, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2338, %r2324, %r2336;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2341, %r2338, %r2337;
	// end inline asm
	// begin inline asm
	mov.b32 %r2344, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r2345, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2346, %r2327, %r2344;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2349, %r2346, %r2345;
	// end inline asm
	// begin inline asm
	mov.b32 %r2352, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r2353, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2354, %r2330, %r2352;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2357, %r2354, %r2353;
	// end inline asm
	// begin inline asm
	mov.b32 %r2360, {%rs267, %rs267};
	// end inline asm
	// begin inline asm
	mov.b32 %r2361, {%rs58, %rs58};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2362, %r2333, %r2360;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2365, %r2362, %r2361;
	// end inline asm
	// begin inline asm
	mov.b32 %r2371, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2369, %r2341, %r2371;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2372, %r2349, %r2371;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2375, %r2357, %r2371;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2378, %r2365, %r2371;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2381, %r2369, %r2375, %r1025;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2385, %r2372, %r2378, %r1025;
	// end inline asm
	shl.b32 	%r2392, %r2385, 4;
	// begin inline asm
	lop3.b32 %r2389, %r1031, %r2381, %r2392, 202;
	// end inline asm
	st.shared.u32 	[%rd151], %r2389;
	add.s32 	%r2554, %r2554, 64;
	add.s64 	%rd151, %rd151, 8324;
	add.s64 	%rd150, %rd150, 8324;
	add.s64 	%rd149, %rd149, 8324;
	add.s64 	%rd148, %rd148, 8324;
	add.s32 	%r2541, %r2541, 1;
	setp.eq.s32 	%p166, %r2554, 256;
	mov.u32 	%r2542, %r2528;
	mov.u32 	%r2543, %r2529;
	mov.u32 	%r2544, %r2530;
	mov.u32 	%r2545, %r2531;
	mov.u32 	%r2546, %r2532;
	mov.u32 	%r2547, %r2533;
	mov.u32 	%r2548, %r2534;
	mov.u32 	%r2549, %r2535;
	@%p166 bra 	$L__BB0_33;
	bra.uni 	$L__BB0_32;
$L__BB0_33:                             // %guard_exit10925
                                        //   in Loop: Header=BB0_31 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r2427, [%rd6];
	ld.shared.u32 	%r2428, [%rd7+128];
	ld.shared.u32 	%r2435, [%rd7+4];
	ld.shared.u32 	%r2436, [%rd7+132];
	ld.shared.u32 	%r2443, [%rd6+8324];
	ld.shared.u32 	%r2444, [%rd7+8452];
	ld.shared.u32 	%r2451, [%rd7+8328];
	ld.shared.u32 	%r2452, [%rd7+8456];
	ld.shared.u32 	%r2459, [%rd6+16648];
	ld.shared.u32 	%r2460, [%rd7+16776];
	ld.shared.u32 	%r2467, [%rd7+16652];
	ld.shared.u32 	%r2468, [%rd7+16780];
	ld.shared.u32 	%r2475, [%rd6+24972];
	ld.shared.u32 	%r2476, [%rd7+25100];
	ld.shared.u32 	%r2483, [%rd7+24976];
	ld.shared.u32 	%r2484, [%rd7+25104];
	// begin inline asm
	prmt.b32 %r2422, %r2427, %r2428, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2426, %r2427, %r2428, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2430, %r2435, %r2436, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2434, %r2435, %r2436, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2438, %r2443, %r2444, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2442, %r2443, %r2444, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2446, %r2451, %r2452, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2450, %r2451, %r2452, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2454, %r2459, %r2460, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2458, %r2459, %r2460, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2462, %r2467, %r2468, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2466, %r2467, %r2468, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2470, %r2475, %r2476, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2474, %r2475, %r2476, %r497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2478, %r2483, %r2484, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2482, %r2483, %r2484, %r497;
	// end inline asm
	selp.b32 	%r2486, %r2426, %r2422, %p153;
	shfl.sync.bfly.b32	%r92, %r2486, 8, 31, -1;
	selp.b32 	%r2487, %r2434, %r2430, %p153;
	shfl.sync.bfly.b32	%r93, %r2487, 8, 31, -1;
	selp.b32 	%r2488, %r2442, %r2438, %p153;
	shfl.sync.bfly.b32	%r2489, %r2488, 8, 31, -1;
	selp.b32 	%r2490, %r2450, %r2446, %p153;
	shfl.sync.bfly.b32	%r2491, %r2490, 8, 31, -1;
	selp.b32 	%r2492, %r2458, %r2454, %p153;
	shfl.sync.bfly.b32	%r2493, %r2492, 8, 31, -1;
	selp.b32 	%r2494, %r2466, %r2462, %p153;
	shfl.sync.bfly.b32	%r2495, %r2494, 8, 31, -1;
	selp.b32 	%r2496, %r2474, %r2470, %p153;
	shfl.sync.bfly.b32	%r2497, %r2496, 8, 31, -1;
	selp.b32 	%r2498, %r2482, %r2478, %p153;
	shfl.sync.bfly.b32	%r2499, %r2498, 8, 31, -1;
	and.b32  	%r2500, %r45, 32512;
	setp.eq.s32 	%p168, %r2500, 0;
	shl.b32 	%r2527, %r45, 10;
	@%p168 bra 	$L__BB0_35;
// %bb.34:                              // %pass10049
                                        //   in Loop: Header=BB0_31 Depth=1
	selp.b32 	%r2501, %r93, %r2434, %p153;
	selp.b32 	%r2502, %r2430, %r93, %p153;
	selp.b32 	%r2503, %r92, %r2426, %p153;
	selp.b32 	%r2504, %r2422, %r92, %p153;
	or.b32  	%r2506, %r2527, %r21;
	or.b32  	%r2507, %r2506, %r23;
	or.b32  	%r2508, %r27, %r2507;
	cvt.u64.u32 	%rd96, %r2508;
	add.s64 	%rd97, %rd96, %rd8;
	shr.u64 	%rd98, %rd97, 39;
	add.s64 	%rd99, %rd97, %rd98;
	shr.s64 	%rd100, %rd99, 25;
	setp.lt.s64 	%p170, %rd97, 0;
	and.b64  	%rd101, %rd99, -33554432;
	setp.ne.s64 	%p171, %rd101, %rd97;
	and.pred  	%p172, %p170, %p171;
	selp.u64 	%rd102, 1, 0, %p172;
	sub.s64 	%rd103, %rd102, %rd100;
	shl.b64 	%rd104, %rd103, 25;
	add.s64 	%rd105, %rd104, %rd97;
	shl.b64 	%rd106, %rd105, 2;
	add.s64 	%rd107, %rd3, %rd106;
	st.global.v4.u32 	[%rd107], {%r2504, %r2502, %r2503, %r2501};
$L__BB0_35:                             // %pass10113
                                        //   in Loop: Header=BB0_31 Depth=1
	or.b32  	%r86, %r45, 64;
	setp.lt.u32 	%p173, %r86, 192;
	@%p173 bra 	$L__BB0_37;
// %bb.36:                              // %pass10156
                                        //   in Loop: Header=BB0_31 Depth=1
	selp.b32 	%r94, %r2438, %r2489, %p153;
	selp.b32 	%r95, %r2489, %r2442, %p153;
	selp.b32 	%r96, %r2446, %r2491, %p153;
	selp.b32 	%r97, %r2491, %r2450, %p153;
	shl.b32 	%r2509, %r86, 10;
	or.b32  	%r2510, %r2509, %r21;
	or.b32  	%r2511, %r2510, %r23;
	or.b32  	%r2512, %r27, %r2511;
	cvt.u64.u32 	%rd108, %r2512;
	add.s64 	%rd109, %rd108, %rd8;
	shr.u64 	%rd110, %rd109, 39;
	add.s64 	%rd111, %rd109, %rd110;
	shr.s64 	%rd112, %rd111, 25;
	setp.lt.s64 	%p174, %rd109, 0;
	and.b64  	%rd113, %rd111, -33554432;
	setp.ne.s64 	%p175, %rd113, %rd109;
	and.pred  	%p176, %p174, %p175;
	selp.u64 	%rd114, 1, 0, %p176;
	sub.s64 	%rd115, %rd114, %rd112;
	shl.b64 	%rd116, %rd115, 25;
	add.s64 	%rd117, %rd116, %rd109;
	shl.b64 	%rd118, %rd117, 2;
	add.s64 	%rd119, %rd3, %rd118;
	st.global.v4.u32 	[%rd119], {%r94, %r96, %r95, %r97};
$L__BB0_37:                             // %pass10220
                                        //   in Loop: Header=BB0_31 Depth=1
	or.b32  	%r87, %r45, 128;
	selp.b32 	%r102, %r2470, %r2497, %p153;
	selp.b32 	%r103, %r2497, %r2474, %p153;
	selp.b32 	%r104, %r2478, %r2499, %p153;
	selp.b32 	%r105, %r2499, %r2482, %p153;
	setp.lt.u32 	%p177, %r87, 192;
	@%p177 bra 	$L__BB0_39;
// %bb.38:                              // %pass10263
                                        //   in Loop: Header=BB0_31 Depth=1
	selp.b32 	%r98, %r2454, %r2493, %p153;
	selp.b32 	%r99, %r2493, %r2458, %p153;
	selp.b32 	%r100, %r2462, %r2495, %p153;
	selp.b32 	%r101, %r2495, %r2466, %p153;
	shl.b32 	%r2513, %r87, 10;
	or.b32  	%r2514, %r2513, %r21;
	or.b32  	%r2515, %r2514, %r23;
	or.b32  	%r2516, %r27, %r2515;
	cvt.u64.u32 	%rd120, %r2516;
	add.s64 	%rd121, %rd120, %rd8;
	shr.u64 	%rd122, %rd121, 39;
	add.s64 	%rd123, %rd121, %rd122;
	shr.s64 	%rd124, %rd123, 25;
	setp.lt.s64 	%p178, %rd121, 0;
	and.b64  	%rd125, %rd123, -33554432;
	setp.ne.s64 	%p179, %rd125, %rd121;
	and.pred  	%p180, %p178, %p179;
	selp.u64 	%rd126, 1, 0, %p180;
	sub.s64 	%rd127, %rd126, %rd124;
	shl.b64 	%rd128, %rd127, 25;
	add.s64 	%rd129, %rd128, %rd121;
	shl.b64 	%rd130, %rd129, 2;
	add.s64 	%rd131, %rd3, %rd130;
	st.global.v4.u32 	[%rd131], {%r98, %r100, %r99, %r101};
	bra.uni 	$L__BB0_39;
$L__BB0_40:                             // %L23086
	st.global.u32 	[%rd5], %r2526;
	ret;
$L__BB0_9:                              // %L177
	mov.u32 	%r2525, 2;
	st.global.u32 	[%rd5], %r2525;
	mov.u64 	%rd146, exception2065;
	cvta.global.u64 	%rd147, %rd146;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd147;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd37;
	st.param.b32 	[param0+8], %r106;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_12:                             // %L283
	mov.u32 	%r2524, 3;
	st.global.u32 	[%rd5], %r2524;
	mov.u64 	%rd144, exception2065;
	cvta.global.u64 	%rd145, %rd144;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd145;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd37;
	st.param.b32 	[param0+8], %r106;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd38, exception1;
	cvta.global.u64 	%rd39, %rd38;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd39;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd37;
	st.param.b32 	[param0+8], %r106;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_3:                              // %L24
	mov.u64 	%rd40, exception1;
	cvta.global.u64 	%rd41, %rd40;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd41;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd37;
	st.param.b32 	[param0+8], %r106;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
