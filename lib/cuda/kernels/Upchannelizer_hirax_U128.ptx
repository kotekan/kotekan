// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5817[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception15841[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<310>;
	.reg .b16 	%rs<2396>;
	.reg .b32 	%r<16344>;
	.reg .f32 	%f<1310>;
	.reg .b64 	%rd<115>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r219, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd22, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r226, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r226, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd23, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r220, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r227, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r228, %r227, %r4;
	or.b32  	%r229, %r228, %r2;
	mul.wide.u32 	%rd29, %r229, 4;
	add.s64 	%rd3, %rd23, %rd29;
	mov.u32 	%r230, 1;
	st.global.u32 	[%rd3], %r230;
	setp.gt.u32 	%p2, %r220, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L119
	ld.param.u32 	%r221, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r221, %r220;
	setp.gt.s32 	%p4, %r221, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L126
	ld.param.u32 	%r222, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r231, %r221, %r220;
	and.b32  	%r232, %r231, 255;
	setp.ne.s32 	%p6, %r232, 0;
	setp.gt.u32 	%p7, %r222, 255;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L137
	ld.param.u32 	%r223, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r223, %r222;
	setp.gt.s32 	%p10, %r223, 511;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L144
	sub.s32 	%r233, %r223, %r222;
	and.b32  	%r234, %r233, 1;
	setp.eq.b32 	%p12, %r234, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r224, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p15, %r224, 0;
	@%p15 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r225, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p16, %r224, %r225;
	setp.lt.s32 	%p17, %r225, 65;
	and.pred  	%p18, %p16, %p17;
	@%p18 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass180
	bfe.u32 	%r127, %r4, 1, 1;
	and.b32  	%r128, %r4, 1;
	bfe.u32 	%r130, %r4, 2, 1;
	shr.u32 	%r131, %r4, 4;
	shl.b32 	%r242, %r131, 2;
	shl.b32 	%r243, %r130, 3;
	shl.b32 	%r244, %r128, 4;
	shl.b32 	%r245, %r127, 5;
	or.b32  	%r246, %r244, %r245;
	or.b32  	%r247, %r243, %r246;
	or.b32  	%r248, %r242, %r247;
	bfe.u32 	%r133, %r4, 3, 1;
	shl.b32 	%r249, %r133, 1;
	or.b32  	%r134, %r249, %r248;
	or.b32  	%r135, %r134, 64;
	mov.f32 	%f221, 0f40000000;
	mov.f32 	%f222, 0f43FF8000;
	div.approx.f32 	%f140, %f222, %f221;
	cvt.rn.f32.s32 	%f223, %r134;
	sub.f32 	%f224, %f223, %f140;
	mov.f32 	%f253, 0f43000000;
	div.approx.f32 	%f142, %f224, %f253;
	setp.ne.f32 	%p24, %f142, 0f00000000;
	mov.f32 	%f1277, 0f3F800000;
	mov.f32 	%f1262, %f1277;
	@%p24 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L767
	sin.approx.f32 	%f254, %f142;
	div.approx.f32 	%f1262, %f254, %f142;
$L__BB0_13:                             // %L770
	cvt.rn.f32.s32 	%f257, %r135;
	sub.f32 	%f258, %f257, %f140;
	div.approx.f32 	%f5, %f258, %f253;
	setp.eq.f32 	%p30, %f5, 0f00000000;
	mov.f32 	%f1263, %f1277;
	@%p30 bra 	$L__BB0_15;
// %bb.14:                              // %L787
	sin.approx.f32 	%f288, %f5;
	div.approx.f32 	%f1263, %f288, %f5;
$L__BB0_15:                             // %L790
	or.b32  	%r267, %r134, 1;
	or.b32  	%r6, %r134, 65;
	cvt.rn.f32.s32 	%f292, %r267;
	sub.f32 	%f293, %f292, %f140;
	div.approx.f32 	%f9, %f293, %f253;
	setp.eq.f32 	%p36, %f9, 0f00000000;
	mov.f32 	%f1264, %f1277;
	@%p36 bra 	$L__BB0_17;
// %bb.16:                              // %L869
	sin.approx.f32 	%f323, %f9;
	div.approx.f32 	%f1264, %f323, %f9;
$L__BB0_17:                             // %L872
	cvt.rn.f32.s32 	%f326, %r6;
	sub.f32 	%f327, %f326, %f140;
	div.approx.f32 	%f14, %f327, %f253;
	setp.eq.f32 	%p42, %f14, 0f00000000;
	mov.f32 	%f1265, %f1277;
	@%p42 bra 	$L__BB0_19;
// %bb.18:                              // %L889
	sin.approx.f32 	%f357, %f14;
	div.approx.f32 	%f1265, %f357, %f14;
$L__BB0_19:                             // %L892
	or.b32  	%r285, %r134, 128;
	or.b32  	%r8, %r134, 192;
	cvt.rn.f32.s32 	%f361, %r285;
	sub.f32 	%f362, %f361, %f140;
	div.approx.f32 	%f18, %f362, %f253;
	setp.eq.f32 	%p48, %f18, 0f00000000;
	mov.f32 	%f1266, %f1277;
	@%p48 bra 	$L__BB0_21;
// %bb.20:                              // %L971
	sin.approx.f32 	%f392, %f18;
	div.approx.f32 	%f1266, %f392, %f18;
$L__BB0_21:                             // %L974
	mov.f32 	%f225, 0f44004000;
	cvt.rn.f32.s32 	%f395, %r8;
	sub.f32 	%f396, %f395, %f140;
	div.approx.f32 	%f23, %f396, %f253;
	setp.eq.f32 	%p54, %f23, 0f00000000;
	mov.f32 	%f1267, %f1277;
	@%p54 bra 	$L__BB0_23;
// %bb.22:                              // %L991
	sin.approx.f32 	%f426, %f23;
	div.approx.f32 	%f1267, %f426, %f23;
$L__BB0_23:                             // %L994
	div.approx.f32 	%f226, %f224, %f225;
	div.approx.f32 	%f260, %f258, %f225;
	div.approx.f32 	%f295, %f293, %f225;
	div.approx.f32 	%f329, %f327, %f225;
	div.approx.f32 	%f364, %f362, %f225;
	div.approx.f32 	%f398, %f396, %f225;
	or.b32  	%r303, %r134, 129;
	or.b32  	%r10, %r134, 193;
	cvt.rn.f32.s32 	%f430, %r303;
	sub.f32 	%f431, %f430, %f140;
	div.approx.f32 	%f433, %f431, %f225;
	div.approx.f32 	%f27, %f431, %f253;
	setp.eq.f32 	%p60, %f27, 0f00000000;
	mov.f32 	%f1268, %f1277;
	@%p60 bra 	$L__BB0_25;
// %bb.24:                              // %L1073
	sin.approx.f32 	%f461, %f27;
	div.approx.f32 	%f1268, %f461, %f27;
$L__BB0_25:                             // %L1076
	abs.f32 	%f227, %f226;
	abs.f32 	%f261, %f260;
	abs.f32 	%f296, %f295;
	abs.f32 	%f330, %f329;
	abs.f32 	%f365, %f364;
	abs.f32 	%f399, %f398;
	abs.f32 	%f434, %f433;
	cvt.rn.f32.s32 	%f464, %r10;
	sub.f32 	%f465, %f464, %f140;
	div.approx.f32 	%f467, %f465, %f225;
	abs.f32 	%f468, %f467;
	div.approx.f32 	%f32, %f465, %f253;
	setp.eq.f32 	%p66, %f32, 0f00000000;
	mov.f32 	%f1269, %f1277;
	@%p66 bra 	$L__BB0_27;
// %bb.26:                              // %L1093
	sin.approx.f32 	%f495, %f32;
	div.approx.f32 	%f1269, %f495, %f32;
$L__BB0_27:                             // %L1096
	setp.gt.f32 	%p19, %f227, 0f4B800000;
	mul.f32 	%f228, %f226, 0f00000000;
	setp.gt.f32 	%p25, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p31, %f296, 0f4B800000;
	mul.f32 	%f297, %f295, 0f00000000;
	setp.gt.f32 	%p37, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p43, %f365, 0f4B800000;
	mul.f32 	%f366, %f364, 0f00000000;
	setp.gt.f32 	%p49, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p55, %f434, 0f4B800000;
	mul.f32 	%f435, %f433, 0f00000000;
	setp.gt.f32 	%p61, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	or.b32  	%r321, %r134, 256;
	or.b32  	%r12, %r134, 320;
	cvt.rn.f32.s32 	%f499, %r321;
	sub.f32 	%f500, %f499, %f140;
	div.approx.f32 	%f502, %f500, %f225;
	abs.f32 	%f503, %f502;
	setp.gt.f32 	%p67, %f503, 0f4B800000;
	mul.f32 	%f504, %f502, 0f00000000;
	div.approx.f32 	%f36, %f500, %f253;
	setp.eq.f32 	%p72, %f36, 0f00000000;
	mov.f32 	%f1270, %f1277;
	@%p72 bra 	$L__BB0_29;
// %bb.28:                              // %L1175
	sin.approx.f32 	%f530, %f36;
	div.approx.f32 	%f1270, %f530, %f36;
$L__BB0_29:                             // %L1178
	selp.f32 	%f229, %f228, %f226, %p19;
	selp.f32 	%f263, %f262, %f260, %p25;
	selp.f32 	%f298, %f297, %f295, %p31;
	selp.f32 	%f332, %f331, %f329, %p37;
	selp.f32 	%f367, %f366, %f364, %p43;
	selp.f32 	%f401, %f400, %f398, %p49;
	selp.f32 	%f436, %f435, %f433, %p55;
	selp.f32 	%f470, %f469, %f467, %p61;
	selp.f32 	%f505, %f504, %f502, %p67;
	cvt.rn.f32.s32 	%f533, %r12;
	sub.f32 	%f534, %f533, %f140;
	div.approx.f32 	%f536, %f534, %f225;
	abs.f32 	%f537, %f536;
	setp.gt.f32 	%p73, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	selp.f32 	%f539, %f538, %f536, %p73;
	div.approx.f32 	%f41, %f534, %f253;
	setp.eq.f32 	%p78, %f41, 0f00000000;
	mov.f32 	%f1271, %f1277;
	@%p78 bra 	$L__BB0_31;
// %bb.30:                              // %L1195
	sin.approx.f32 	%f564, %f41;
	div.approx.f32 	%f1271, %f564, %f41;
$L__BB0_31:                             // %L1198
	add.f32 	%f230, %f229, %f229;
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f299, %f298, %f298;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f368, %f367, %f367;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f437, %f436, %f436;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f506, %f505, %f505;
	add.f32 	%f540, %f539, %f539;
	or.b32  	%r339, %r134, 257;
	or.b32  	%r14, %r134, 321;
	cvt.rn.f32.s32 	%f568, %r339;
	sub.f32 	%f569, %f568, %f140;
	div.approx.f32 	%f571, %f569, %f225;
	abs.f32 	%f572, %f571;
	setp.gt.f32 	%p79, %f572, 0f4B800000;
	mul.f32 	%f573, %f571, 0f00000000;
	selp.f32 	%f574, %f573, %f571, %p79;
	add.f32 	%f575, %f574, %f574;
	div.approx.f32 	%f45, %f569, %f253;
	setp.eq.f32 	%p84, %f45, 0f00000000;
	mov.f32 	%f1272, %f1277;
	@%p84 bra 	$L__BB0_33;
// %bb.32:                              // %L1277
	sin.approx.f32 	%f599, %f45;
	div.approx.f32 	%f1272, %f599, %f45;
$L__BB0_33:                             // %L1280
	mov.b32 	%r250, %f230;
	mov.b32 	%r257, %f264;
	mov.b32 	%r268, %f299;
	mov.b32 	%r275, %f333;
	mov.b32 	%r286, %f368;
	mov.b32 	%r293, %f402;
	mov.b32 	%r304, %f437;
	mov.b32 	%r311, %f471;
	mov.b32 	%r322, %f506;
	mov.b32 	%r329, %f540;
	mov.b32 	%r340, %f575;
	cvt.rn.f32.s32 	%f602, %r14;
	sub.f32 	%f603, %f602, %f140;
	div.approx.f32 	%f605, %f603, %f225;
	abs.f32 	%f606, %f605;
	setp.gt.f32 	%p85, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	selp.f32 	%f608, %f607, %f605, %p85;
	add.f32 	%f609, %f608, %f608;
	mov.b32 	%r347, %f609;
	div.approx.f32 	%f50, %f603, %f253;
	setp.eq.f32 	%p90, %f50, 0f00000000;
	mov.f32 	%f1273, %f1277;
	@%p90 bra 	$L__BB0_35;
// %bb.34:                              // %L1297
	sin.approx.f32 	%f633, %f50;
	div.approx.f32 	%f1273, %f633, %f50;
$L__BB0_35:                             // %L1300
	and.b32  	%r251, %r250, -2147483648;
	and.b32  	%r258, %r257, -2147483648;
	and.b32  	%r269, %r268, -2147483648;
	and.b32  	%r276, %r275, -2147483648;
	and.b32  	%r287, %r286, -2147483648;
	and.b32  	%r294, %r293, -2147483648;
	and.b32  	%r305, %r304, -2147483648;
	and.b32  	%r312, %r311, -2147483648;
	and.b32  	%r323, %r322, -2147483648;
	and.b32  	%r330, %r329, -2147483648;
	and.b32  	%r341, %r340, -2147483648;
	and.b32  	%r348, %r347, -2147483648;
	or.b32  	%r357, %r134, 384;
	or.b32  	%r16, %r134, 448;
	cvt.rn.f32.s32 	%f637, %r357;
	sub.f32 	%f638, %f637, %f140;
	div.approx.f32 	%f640, %f638, %f225;
	abs.f32 	%f641, %f640;
	setp.gt.f32 	%p91, %f641, 0f4B800000;
	mul.f32 	%f642, %f640, 0f00000000;
	selp.f32 	%f643, %f642, %f640, %p91;
	add.f32 	%f644, %f643, %f643;
	mov.b32 	%r358, %f644;
	and.b32  	%r359, %r358, -2147483648;
	div.approx.f32 	%f54, %f638, %f253;
	setp.eq.f32 	%p96, %f54, 0f00000000;
	mov.f32 	%f1274, %f1277;
	@%p96 bra 	$L__BB0_37;
// %bb.36:                              // %L1379
	sin.approx.f32 	%f668, %f54;
	div.approx.f32 	%f1274, %f668, %f54;
$L__BB0_37:                             // %L1382
	or.b32  	%r252, %r251, 1056964608;
	or.b32  	%r259, %r258, 1056964608;
	or.b32  	%r270, %r269, 1056964608;
	or.b32  	%r277, %r276, 1056964608;
	or.b32  	%r288, %r287, 1056964608;
	or.b32  	%r295, %r294, 1056964608;
	or.b32  	%r306, %r305, 1056964608;
	or.b32  	%r313, %r312, 1056964608;
	or.b32  	%r324, %r323, 1056964608;
	or.b32  	%r331, %r330, 1056964608;
	or.b32  	%r342, %r341, 1056964608;
	or.b32  	%r349, %r348, 1056964608;
	or.b32  	%r360, %r359, 1056964608;
	cvt.rn.f32.s32 	%f671, %r16;
	sub.f32 	%f672, %f671, %f140;
	div.approx.f32 	%f674, %f672, %f225;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p97, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	selp.f32 	%f677, %f676, %f674, %p97;
	add.f32 	%f678, %f677, %f677;
	mov.b32 	%r365, %f678;
	and.b32  	%r366, %r365, -2147483648;
	or.b32  	%r367, %r366, 1056964608;
	div.approx.f32 	%f59, %f672, %f253;
	setp.eq.f32 	%p102, %f59, 0f00000000;
	mov.f32 	%f1275, %f1277;
	@%p102 bra 	$L__BB0_39;
// %bb.38:                              // %L1399
	sin.approx.f32 	%f702, %f59;
	div.approx.f32 	%f1275, %f702, %f59;
$L__BB0_39:                             // %L1402
	mov.b32 	%f231, %r252;
	mov.b32 	%f265, %r259;
	mov.b32 	%f300, %r270;
	mov.b32 	%f334, %r277;
	mov.b32 	%f369, %r288;
	mov.b32 	%f403, %r295;
	mov.b32 	%f438, %r306;
	mov.b32 	%f472, %r313;
	mov.b32 	%f507, %r324;
	mov.b32 	%f541, %r331;
	mov.b32 	%f576, %r342;
	mov.b32 	%f610, %r349;
	mov.b32 	%f645, %r360;
	mov.b32 	%f679, %r367;
	or.b32  	%r375, %r134, 385;
	or.b32  	%r18, %r134, 449;
	cvt.rn.f32.s32 	%f706, %r375;
	sub.f32 	%f707, %f706, %f140;
	div.approx.f32 	%f709, %f707, %f225;
	abs.f32 	%f710, %f709;
	setp.gt.f32 	%p103, %f710, 0f4B800000;
	mul.f32 	%f711, %f709, 0f00000000;
	selp.f32 	%f712, %f711, %f709, %p103;
	add.f32 	%f713, %f712, %f712;
	mov.b32 	%r376, %f713;
	and.b32  	%r377, %r376, -2147483648;
	or.b32  	%r378, %r377, 1056964608;
	mov.b32 	%f714, %r378;
	div.approx.f32 	%f63, %f707, %f253;
	setp.eq.f32 	%p108, %f63, 0f00000000;
	mov.f32 	%f1276, %f1277;
	@%p108 bra 	$L__BB0_41;
// %bb.40:                              // %L1481
	sin.approx.f32 	%f737, %f63;
	div.approx.f32 	%f1276, %f737, %f63;
$L__BB0_41:                             // %L1484
	add.f32 	%f232, %f230, %f231;
	abs.f32 	%f234, %f230;
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f301, %f299, %f300;
	abs.f32 	%f303, %f299;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f370, %f368, %f369;
	abs.f32 	%f372, %f368;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f439, %f437, %f438;
	abs.f32 	%f441, %f437;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f508, %f506, %f507;
	abs.f32 	%f510, %f506;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f577, %f575, %f576;
	abs.f32 	%f579, %f575;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f646, %f644, %f645;
	abs.f32 	%f648, %f644;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f715, %f713, %f714;
	abs.f32 	%f717, %f713;
	shr.u32 	%r126, %r4, 1;
	shr.u32 	%r132, %r4, 3;
	cvt.rn.f32.s32 	%f740, %r18;
	sub.f32 	%f741, %f740, %f140;
	div.approx.f32 	%f743, %f741, %f225;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p109, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p109;
	add.f32 	%f747, %f746, %f746;
	mov.b32 	%r383, %f747;
	and.b32  	%r384, %r383, -2147483648;
	or.b32  	%r385, %r384, 1056964608;
	mov.b32 	%f748, %r385;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	div.approx.f32 	%f68, %f741, %f253;
	setp.eq.f32 	%p114, %f68, 0f00000000;
	@%p114 bra 	$L__BB0_43;
// %bb.42:                              // %L1501
	sin.approx.f32 	%f771, %f68;
	div.approx.f32 	%f1277, %f771, %f68;
$L__BB0_43:                             // %L1504
	cvt.rzi.f32.f32 	%f233, %f232;
	setp.gt.f32 	%p20, %f234, 0f4B000000;
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p26, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f302, %f301;
	setp.gt.f32 	%p32, %f303, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p38, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f371, %f370;
	setp.gt.f32 	%p44, %f372, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p50, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f440, %f439;
	setp.gt.f32 	%p56, %f441, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p62, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f509, %f508;
	setp.gt.f32 	%p68, %f510, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p74, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f578, %f577;
	setp.gt.f32 	%p80, %f579, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p86, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f647, %f646;
	setp.gt.f32 	%p92, %f648, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p98, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f716, %f715;
	setp.gt.f32 	%p104, %f717, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p110, %f751, 0f4B000000;
	mul.lo.s32 	%r405, %r134, 127;
	and.b32  	%r406, %r405, 255;
	cvt.rn.f32.s32 	%f774, %r406;
	div.approx.f32 	%f776, %f774, %f253;
	add.f32 	%f777, %f776, %f776;
	mov.b32 	%r407, %f777;
	and.b32  	%r408, %r407, -2147483648;
	or.b32  	%r409, %r408, 1056964608;
	mov.b32 	%f778, %r409;
	add.f32 	%f779, %f777, %f778;
	cvt.rzi.f32.f32 	%f780, %f779;
	abs.f32 	%f781, %f777;
	setp.gt.f32 	%p115, %f781, 0f4B000000;
	selp.f32 	%f782, %f777, %f780, %p115;
	cvt.rzi.f32.f32 	%f783, %f777;
	setp.lt.f32 	%p116, %f781, 0f3F000000;
	add.s32 	%r415, %r405, 192;
	and.b32  	%r416, %r415, 255;
	cvt.rn.f32.s32 	%f809, %r416;
	div.approx.f32 	%f810, %f809, %f253;
	add.f32 	%f811, %f810, %f810;
	mov.b32 	%r417, %f811;
	and.b32  	%r418, %r417, -2147483648;
	or.b32  	%r419, %r418, 1056964608;
	mov.b32 	%f812, %r419;
	add.f32 	%f813, %f811, %f812;
	cvt.rzi.f32.f32 	%f814, %f813;
	abs.f32 	%f815, %f811;
	setp.gt.f32 	%p122, %f815, 0f4B000000;
	selp.f32 	%f816, %f811, %f814, %p122;
	cvt.rzi.f32.f32 	%f817, %f811;
	setp.lt.f32 	%p123, %f815, 0f3F000000;
	and.b32  	%r425, %r132, 2;
	and.b32  	%r426, %r126, 4;
	or.b32  	%r427, %r130, %r425;
	or.b32  	%r24, %r427, %r426;
	and.b32  	%r428, %r4, 3;
	mul.lo.s32 	%r429, %r428, %r24;
	shl.b32 	%r430, %r429, 1;
	neg.s32 	%r431, %r430;
	cvt.rn.f32.s32 	%f842, %r431;
	mov.f32 	%f843, 0f41000000;
	div.approx.f32 	%f71, %f842, %f843;
	abs.f32 	%f1296, %f71;
	setp.lt.f32 	%p129, %f1296, 0f40000000;
	@%p129 bra 	$L__BB0_125;
// %bb.44:
	setp.gtu.f32 	%p130, %f1296, 0f4B800000;
	@%p130 bra 	$L__BB0_121;
	bra.uni 	$L__BB0_45;
$L__BB0_121:
	mov.b32 	%r137, %f1296;
	and.b32  	%r432, %r137, 8388607;
	or.b32  	%r16311, %r432, 1065353216;
	mov.b32 	%f1295, %r16311;
	add.s32 	%r433, %r137, -1073741824;
	and.b32  	%r16312, %r433, -8388608;
	setp.eq.s32 	%p136, %r16312, 0;
	@%p136 bra 	$L__BB0_124;
// %bb.122:                             // %__nv_fmaf_rn.exit4.i.i.i1712.preheader
	mov.f32 	%f853, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f852,%f853;
	// end inline asm
$L__BB0_123:                            // %__nv_fmaf_rn.exit4.i.i.i1712
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r434, %r16312, 192937984;
	add.s32 	%r435, %r16311, %r434;
	mov.b32 	%f854, %r435;
	mul.f32 	%f855, %f852, %f854;
	sub.f32 	%f856, %f854, %f855;
	fma.rn.f32 	%f857, %f856, %f852, %f855;
	sub.f32 	%f858, %f854, %f857;
	fma.rz.f32 	%f859, %f858, %f852, %f857;
	cvt.rzi.f32.f32 	%f860, %f859;
	sub.f32 	%f1295, %f854, %f860;
	sub.s32 	%r16312, %r16312, %r434;
	mov.b32 	%r16311, %f1295;
	setp.ne.s32 	%p137, %r16312, 0;
	setp.ne.s32 	%p138, %r16311, 0;
	and.pred  	%p139, %p137, %p138;
	@%p139 bra 	$L__BB0_123;
$L__BB0_124:                            // %__internal_fmodf_slowpath_mod.exit.i.i1714
	setp.gt.u32 	%p140, %r137, 2139095039;
	selp.f32 	%f861, 0f7FFFFFFF, 0f4B800000, %p140;
	mul.f32 	%f862, %f1295, 0f34000000;
	mul.f32 	%f1296, %f861, %f862;
	bra.uni 	$L__BB0_125;
$L__BB0_45:                             // %__nv_fast_fdividef.exit.i.i.i1691
	div.approx.f32 	%f845, %f1296, %f221;
	cvt.rzi.f32.f32 	%f1294, %f845;
	fma.rn.f32 	%f144, %f1294, 0fC0000000, %f1296;
	mov.b32 	%r136, %f144;
	setp.lt.u32 	%p131, %r136, 1073741824;
	@%p131 bra 	$L__BB0_120;
// %bb.46:
	setp.lt.u32 	%p132, %r136, -2147483647;
	@%p132 bra 	$L__BB0_118;
// %bb.47:
	add.f32 	%f850, %f1294, 0fBF800000;
	setp.lt.f32 	%p135, %f144, 0fC0000000;
	add.f32 	%f851, %f850, 0fBF800000;
	selp.f32 	%f1294, %f851, %f850, %p135;
	bra.uni 	$L__BB0_120;
$L__BB0_118:
	add.f32 	%f1294, %f1294, 0f3F800000;
	setp.ltu.f32 	%p133, %f144, 0f40800000;
	@%p133 bra 	$L__BB0_120;
// %bb.119:                             // %__nv_fmaf_rn.exit.i.i.i1695
	add.f32 	%f846, %f1294, 0f3F800000;
	fma.rn.f32 	%f848, %f221, 0fC0400000, %f144;
	setp.ge.f32 	%p134, %f848, 0f00000000;
	add.f32 	%f849, %f846, 0f3F800000;
	selp.f32 	%f1294, %f849, %f846, %p134;
$L__BB0_120:                            // %__internal_fmodf_fastpath_quot.exit.i.i1698
	fma.rn.f32 	%f1296, %f1294, 0fC0000000, %f1296;
$L__BB0_125:                            // %__internal_fmodf_kernel.exit.i1717
	selp.f32 	%f235, %f230, %f233, %p20;
	cvt.rzi.f32.f32 	%f236, %f230;
	setp.lt.f32 	%p21, %f234, 0f3F000000;
	selp.f32 	%f269, %f264, %f267, %p26;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p27, %f268, 0f3F000000;
	selp.f32 	%f304, %f299, %f302, %p32;
	cvt.rzi.f32.f32 	%f305, %f299;
	setp.lt.f32 	%p33, %f303, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p38;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p39, %f337, 0f3F000000;
	selp.f32 	%f373, %f368, %f371, %p44;
	cvt.rzi.f32.f32 	%f374, %f368;
	setp.lt.f32 	%p45, %f372, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p50;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p51, %f406, 0f3F000000;
	selp.f32 	%f442, %f437, %f440, %p56;
	cvt.rzi.f32.f32 	%f443, %f437;
	setp.lt.f32 	%p57, %f441, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p62;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p63, %f475, 0f3F000000;
	selp.f32 	%f511, %f506, %f509, %p68;
	cvt.rzi.f32.f32 	%f512, %f506;
	setp.lt.f32 	%p69, %f510, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p74;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p75, %f544, 0f3F000000;
	selp.f32 	%f580, %f575, %f578, %p80;
	cvt.rzi.f32.f32 	%f581, %f575;
	setp.lt.f32 	%p81, %f579, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p86;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p87, %f613, 0f3F000000;
	selp.f32 	%f649, %f644, %f647, %p92;
	cvt.rzi.f32.f32 	%f650, %f644;
	setp.lt.f32 	%p93, %f648, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p98;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p99, %f682, 0f3F000000;
	selp.f32 	%f718, %f713, %f716, %p104;
	cvt.rzi.f32.f32 	%f719, %f713;
	setp.lt.f32 	%p105, %f717, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p110;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p111, %f751, 0f3F000000;
	selp.f32 	%f784, %f783, %f782, %p116;
	selp.f32 	%f818, %f817, %f816, %p123;
	shl.b32 	%r119, %r4, 1;
	abs.f32 	%f863, %f1296;
	setp.gtu.f32 	%p141, %f863, 0f7F800000;
	@%p141 bra 	$L__BB0_127;
// %bb.126:
	mov.b32 	%r436, %f71;
	and.b32  	%r437, %r436, -2147483648;
	mov.b32 	%r438, %f1296;
	or.b32  	%r439, %r437, %r438;
	mov.b32 	%f1296, %r439;
$L__BB0_127:                            // %__nv_fmodf.exit1718
	selp.f32 	%f237, %f236, %f235, %p21;
	selp.f32 	%f271, %f270, %f269, %p27;
	selp.f32 	%f306, %f305, %f304, %p33;
	selp.f32 	%f340, %f339, %f338, %p39;
	selp.f32 	%f375, %f374, %f373, %p45;
	selp.f32 	%f409, %f408, %f407, %p51;
	selp.f32 	%f444, %f443, %f442, %p57;
	selp.f32 	%f478, %f477, %f476, %p63;
	selp.f32 	%f513, %f512, %f511, %p69;
	selp.f32 	%f547, %f546, %f545, %p75;
	selp.f32 	%f582, %f581, %f580, %p81;
	selp.f32 	%f616, %f615, %f614, %p87;
	selp.f32 	%f651, %f650, %f649, %p93;
	selp.f32 	%f685, %f684, %f683, %p99;
	selp.f32 	%f720, %f719, %f718, %p105;
	selp.f32 	%f754, %f753, %f752, %p111;
	fma.rn.f32 	%f785, %f784, 0fBF000000, %f776;
	fma.rn.f32 	%f819, %f818, 0fBF000000, %f810;
	add.f32 	%f864, %f1296, %f1296;
	mov.b32 	%r440, %f864;
	and.b32  	%r441, %r440, -2147483648;
	or.b32  	%r442, %r441, 1056964608;
	mov.b32 	%f865, %r442;
	add.f32 	%f866, %f864, %f865;
	cvt.rzi.f32.f32 	%f867, %f866;
	abs.f32 	%f868, %f864;
	setp.gt.f32 	%p142, %f868, 0f4B000000;
	selp.f32 	%f869, %f864, %f867, %p142;
	cvt.rzi.f32.f32 	%f870, %f864;
	setp.lt.f32 	%p143, %f868, 0f3F000000;
	selp.f32 	%f871, %f870, %f869, %p143;
	fma.rn.f32 	%f872, %f871, 0fBF000000, %f1296;
	and.b32  	%r448, %r119, 6;
	mov.u32 	%r449, -8;
	sub.s32 	%r450, %r449, %r448;
	mul.lo.s32 	%r451, %r24, %r450;
	cvt.rn.f32.s32 	%f894, %r451;
	div.approx.f32 	%f160, %f894, %f843;
	abs.f32 	%f1280, %f160;
	setp.lt.f32 	%p149, %f1280, 0f40000000;
	@%p149 bra 	$L__BB0_59;
// %bb.48:
	setp.gtu.f32 	%p150, %f1280, 0f4B800000;
	@%p150 bra 	$L__BB0_55;
	bra.uni 	$L__BB0_49;
$L__BB0_55:
	mov.b32 	%r26, %f1280;
	and.b32  	%r452, %r26, 8388607;
	or.b32  	%r16278, %r452, 1065353216;
	mov.b32 	%f1279, %r16278;
	add.s32 	%r453, %r26, -1073741824;
	and.b32  	%r16279, %r453, -8388608;
	setp.eq.s32 	%p156, %r16279, 0;
	@%p156 bra 	$L__BB0_58;
// %bb.56:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f905, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f904,%f905;
	// end inline asm
$L__BB0_57:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r454, %r16279, 192937984;
	add.s32 	%r455, %r16278, %r454;
	mov.b32 	%f906, %r455;
	mul.f32 	%f907, %f904, %f906;
	sub.f32 	%f908, %f906, %f907;
	fma.rn.f32 	%f909, %f908, %f904, %f907;
	sub.f32 	%f910, %f906, %f909;
	fma.rz.f32 	%f911, %f910, %f904, %f909;
	cvt.rzi.f32.f32 	%f912, %f911;
	sub.f32 	%f1279, %f906, %f912;
	sub.s32 	%r16279, %r16279, %r454;
	mov.b32 	%r16278, %f1279;
	setp.ne.s32 	%p157, %r16279, 0;
	setp.ne.s32 	%p158, %r16278, 0;
	and.pred  	%p159, %p157, %p158;
	@%p159 bra 	$L__BB0_57;
$L__BB0_58:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p160, %r26, 2139095039;
	selp.f32 	%f913, 0f7FFFFFFF, 0f4B800000, %p160;
	mul.f32 	%f914, %f1279, 0f34000000;
	mul.f32 	%f1280, %f913, %f914;
	bra.uni 	$L__BB0_59;
$L__BB0_49:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f897, %f1280, %f221;
	cvt.rzi.f32.f32 	%f1278, %f897;
	fma.rn.f32 	%f74, %f1278, 0fC0000000, %f1280;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p151, %r25, 1073741824;
	@%p151 bra 	$L__BB0_54;
// %bb.50:
	setp.lt.u32 	%p152, %r25, -2147483647;
	@%p152 bra 	$L__BB0_52;
// %bb.51:
	add.f32 	%f902, %f1278, 0fBF800000;
	setp.lt.f32 	%p155, %f74, 0fC0000000;
	add.f32 	%f903, %f902, 0fBF800000;
	selp.f32 	%f1278, %f903, %f902, %p155;
	bra.uni 	$L__BB0_54;
$L__BB0_52:
	add.f32 	%f1278, %f1278, 0f3F800000;
	setp.ltu.f32 	%p153, %f74, 0f40800000;
	@%p153 bra 	$L__BB0_54;
// %bb.53:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f898, %f1278, 0f3F800000;
	fma.rn.f32 	%f900, %f221, 0fC0400000, %f74;
	setp.ge.f32 	%p154, %f900, 0f00000000;
	add.f32 	%f901, %f898, 0f3F800000;
	selp.f32 	%f1278, %f901, %f898, %p154;
$L__BB0_54:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1280, %f1278, 0fC0000000, %f1280;
$L__BB0_59:                             // %__internal_fmodf_kernel.exit.i
	fma.rn.f32 	%f238, %f237, 0fBF000000, %f229;
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f307, %f306, 0fBF000000, %f298;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f376, %f375, 0fBF000000, %f367;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f445, %f444, 0fBF000000, %f436;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f514, %f513, 0fBF000000, %f505;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f583, %f582, 0fBF000000, %f574;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f652, %f651, 0fBF000000, %f643;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f721, %f720, 0fBF000000, %f712;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	mul.f32 	%f786, %f785, %f785;
	mul.f32 	%f820, %f819, %f819;
	mul.f32 	%f873, %f872, %f872;
	abs.f32 	%f915, %f1280;
	setp.gtu.f32 	%p161, %f915, 0f7F800000;
	@%p161 bra 	$L__BB0_61;
// %bb.60:
	mov.b32 	%r456, %f160;
	and.b32  	%r457, %r456, -2147483648;
	mov.b32 	%r458, %f1280;
	or.b32  	%r459, %r457, %r458;
	mov.b32 	%f1280, %r459;
$L__BB0_61:                             // %__nv_fmodf.exit
	mul.f32 	%f239, %f238, %f238;
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f308, %f307, %f307;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f377, %f376, %f376;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f446, %f445, %f445;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f515, %f514, %f514;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f584, %f583, %f583;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f653, %f652, %f652;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f722, %f721, %f721;
	mul.f32 	%f756, %f755, %f755;
	fma.rn.f32 	%f787, %f786, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f788, %f786, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f821, %f820, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f822, %f820, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f874, %f873, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f875, %f873, 0f3E684E12, 0fBFAAD2E0;
	add.f32 	%f916, %f1280, %f1280;
	mov.b32 	%r472, %f916;
	and.b32  	%r473, %r472, -2147483648;
	or.b32  	%r474, %r473, 1056964608;
	mov.b32 	%f917, %r474;
	add.f32 	%f918, %f916, %f917;
	cvt.rzi.f32.f32 	%f919, %f918;
	abs.f32 	%f920, %f916;
	setp.gt.f32 	%p162, %f920, 0f4B000000;
	selp.f32 	%f921, %f916, %f919, %p162;
	cvt.rzi.f32.f32 	%f922, %f916;
	setp.lt.f32 	%p163, %f920, 0f3F000000;
	selp.f32 	%f923, %f922, %f921, %p163;
	fma.rn.f32 	%f924, %f923, 0fBF000000, %f1280;
	mul.f32 	%f925, %f924, %f924;
	fma.rn.f32 	%f926, %f925, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f927, %f925, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r480, %r128, 2147483646;
	shl.b32 	%r481, %r127, 2;
	sub.s32 	%r482, %r480, %r481;
	mul.lo.s32 	%r483, %r482, %r24;
	shl.b32 	%r37, %r483, 1;
	cvt.rn.f32.s32 	%f88, %r37;
	mov.f32 	%f948, 0f42800000;
	div.approx.f32 	%f89, %f88, %f948;
	abs.f32 	%f1300, %f89;
	setp.lt.f32 	%p169, %f1300, 0f40000000;
	@%p169 bra 	$L__BB0_135;
// %bb.62:
	setp.gtu.f32 	%p170, %f1300, 0f4B800000;
	@%p170 bra 	$L__BB0_131;
	bra.uni 	$L__BB0_63;
$L__BB0_131:
	mov.b32 	%r145, %f1300;
	and.b32  	%r484, %r145, 8388607;
	or.b32  	%r16313, %r484, 1065353216;
	mov.b32 	%f1299, %r16313;
	add.s32 	%r485, %r145, -1073741824;
	and.b32  	%r16314, %r485, -8388608;
	setp.eq.s32 	%p176, %r16314, 0;
	@%p176 bra 	$L__BB0_134;
// %bb.132:                             // %__nv_fmaf_rn.exit4.i.i.i1743.preheader
	mov.f32 	%f958, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f957,%f958;
	// end inline asm
$L__BB0_133:                            // %__nv_fmaf_rn.exit4.i.i.i1743
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r486, %r16314, 192937984;
	add.s32 	%r487, %r16313, %r486;
	mov.b32 	%f959, %r487;
	mul.f32 	%f960, %f957, %f959;
	sub.f32 	%f961, %f959, %f960;
	fma.rn.f32 	%f962, %f961, %f957, %f960;
	sub.f32 	%f963, %f959, %f962;
	fma.rz.f32 	%f964, %f963, %f957, %f962;
	cvt.rzi.f32.f32 	%f965, %f964;
	sub.f32 	%f1299, %f959, %f965;
	sub.s32 	%r16314, %r16314, %r486;
	mov.b32 	%r16313, %f1299;
	setp.ne.s32 	%p177, %r16314, 0;
	setp.ne.s32 	%p178, %r16313, 0;
	and.pred  	%p179, %p177, %p178;
	@%p179 bra 	$L__BB0_133;
$L__BB0_134:                            // %__internal_fmodf_slowpath_mod.exit.i.i1745
	setp.gt.u32 	%p180, %r145, 2139095039;
	selp.f32 	%f966, 0f7FFFFFFF, 0f4B800000, %p180;
	mul.f32 	%f967, %f1299, 0f34000000;
	mul.f32 	%f1300, %f966, %f967;
	bra.uni 	$L__BB0_135;
$L__BB0_63:                             // %__nv_fast_fdividef.exit.i.i.i1722
	div.approx.f32 	%f950, %f1300, %f221;
	cvt.rzi.f32.f32 	%f1298, %f950;
	fma.rn.f32 	%f163, %f1298, 0fC0000000, %f1300;
	mov.b32 	%r144, %f163;
	setp.lt.u32 	%p171, %r144, 1073741824;
	@%p171 bra 	$L__BB0_130;
// %bb.64:
	setp.lt.u32 	%p172, %r144, -2147483647;
	@%p172 bra 	$L__BB0_128;
// %bb.65:
	add.f32 	%f955, %f1298, 0fBF800000;
	setp.lt.f32 	%p175, %f163, 0fC0000000;
	add.f32 	%f956, %f955, 0fBF800000;
	selp.f32 	%f1298, %f956, %f955, %p175;
	bra.uni 	$L__BB0_130;
$L__BB0_128:
	add.f32 	%f1298, %f1298, 0f3F800000;
	setp.ltu.f32 	%p173, %f163, 0f40800000;
	@%p173 bra 	$L__BB0_130;
// %bb.129:                             // %__nv_fmaf_rn.exit.i.i.i1726
	add.f32 	%f951, %f1298, 0f3F800000;
	fma.rn.f32 	%f953, %f221, 0fC0400000, %f163;
	setp.ge.f32 	%p174, %f953, 0f00000000;
	add.f32 	%f954, %f951, 0f3F800000;
	selp.f32 	%f1298, %f954, %f951, %p174;
$L__BB0_130:                            // %__internal_fmodf_fastpath_quot.exit.i.i1729
	fma.rn.f32 	%f1300, %f1298, 0fC0000000, %f1300;
$L__BB0_135:                            // %__internal_fmodf_kernel.exit.i1748
	shl.b32 	%r118, %r4, 2;
	and.b32  	%r120, %r119, 8;
	and.b32  	%r236, %r4, 18;
	cvt.rzi.s32.f32 	%r253, %f237;
	fma.rn.f32 	%f240, %f239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f241, %f239, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r260, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r271, %f306;
	fma.rn.f32 	%f309, %f308, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f310, %f308, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r278, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r289, %f375;
	fma.rn.f32 	%f378, %f377, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f379, %f377, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r296, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r307, %f444;
	fma.rn.f32 	%f447, %f446, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f448, %f446, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r314, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r325, %f513;
	fma.rn.f32 	%f516, %f515, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f517, %f515, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r332, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r343, %f582;
	fma.rn.f32 	%f585, %f584, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f586, %f584, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r350, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r361, %f651;
	fma.rn.f32 	%f654, %f653, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f655, %f653, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r368, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r379, %f720;
	fma.rn.f32 	%f723, %f722, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f724, %f722, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r386, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r410, %f784;
	fma.rn.f32 	%f789, %f787, %f786, 0fC0A55DF6;
	fma.rn.f32 	%f790, %f788, %f786, 0f4081E0CF;
	fma.rn.f32 	%f791, %f786, %f785, 0f00000000;
	cvt.rzi.s32.f32 	%r420, %f818;
	fma.rn.f32 	%f823, %f821, %f820, 0fC0A55DF6;
	fma.rn.f32 	%f824, %f822, %f820, 0f4081E0CF;
	fma.rn.f32 	%f825, %f820, %f819, 0f00000000;
	cvt.rzi.s32.f32 	%r443, %f871;
	fma.rn.f32 	%f876, %f874, %f873, 0fC0A55DF6;
	fma.rn.f32 	%f877, %f875, %f873, 0f4081E0CF;
	fma.rn.f32 	%f878, %f873, %f872, 0f00000000;
	cvt.rzi.s32.f32 	%r475, %f923;
	fma.rn.f32 	%f928, %f926, %f925, 0fC0A55DF6;
	fma.rn.f32 	%f929, %f927, %f925, 0f4081E0CF;
	fma.rn.f32 	%f930, %f925, %f924, 0f00000000;
	abs.f32 	%f968, %f1300;
	setp.gtu.f32 	%p181, %f968, 0f7F800000;
	@%p181 bra 	$L__BB0_137;
// %bb.136:
	mov.b32 	%r488, %f89;
	and.b32  	%r489, %r488, -2147483648;
	mov.b32 	%r490, %f1300;
	or.b32  	%r491, %r489, %r490;
	mov.b32 	%f1300, %r491;
$L__BB0_137:                            // %__nv_fmodf.exit1749
	shl.b32 	%r122, %r3, 5;
	or.b32  	%r237, %r236, %r120;
	and.b32  	%r238, %r118, 36;
	add.s32 	%r254, %r253, 1;
	fma.rn.f32 	%f242, %f240, %f239, 0fC0A55DF6;
	fma.rn.f32 	%f243, %f241, %f239, 0f4081E0CF;
	fma.rn.f32 	%f244, %f239, %f238, 0f00000000;
	add.s32 	%r261, %r260, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r272, %r271, 1;
	fma.rn.f32 	%f311, %f309, %f308, 0fC0A55DF6;
	fma.rn.f32 	%f312, %f310, %f308, 0f4081E0CF;
	fma.rn.f32 	%f313, %f308, %f307, 0f00000000;
	add.s32 	%r279, %r278, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r290, %r289, 1;
	fma.rn.f32 	%f380, %f378, %f377, 0fC0A55DF6;
	fma.rn.f32 	%f381, %f379, %f377, 0f4081E0CF;
	fma.rn.f32 	%f382, %f377, %f376, 0f00000000;
	add.s32 	%r297, %r296, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r308, %r307, 1;
	fma.rn.f32 	%f449, %f447, %f446, 0fC0A55DF6;
	fma.rn.f32 	%f450, %f448, %f446, 0f4081E0CF;
	fma.rn.f32 	%f451, %f446, %f445, 0f00000000;
	add.s32 	%r315, %r314, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r326, %r325, 1;
	fma.rn.f32 	%f518, %f516, %f515, 0fC0A55DF6;
	fma.rn.f32 	%f519, %f517, %f515, 0f4081E0CF;
	fma.rn.f32 	%f520, %f515, %f514, 0f00000000;
	add.s32 	%r333, %r332, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r344, %r343, 1;
	fma.rn.f32 	%f587, %f585, %f584, 0fC0A55DF6;
	fma.rn.f32 	%f588, %f586, %f584, 0f4081E0CF;
	fma.rn.f32 	%f589, %f584, %f583, 0f00000000;
	add.s32 	%r351, %r350, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r362, %r361, 1;
	fma.rn.f32 	%f656, %f654, %f653, 0fC0A55DF6;
	fma.rn.f32 	%f657, %f655, %f653, 0f4081E0CF;
	fma.rn.f32 	%f658, %f653, %f652, 0f00000000;
	add.s32 	%r369, %r368, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r380, %r379, 1;
	fma.rn.f32 	%f725, %f723, %f722, 0fC0A55DF6;
	fma.rn.f32 	%f726, %f724, %f722, 0f4081E0CF;
	fma.rn.f32 	%f727, %f722, %f721, 0f00000000;
	add.s32 	%r387, %r386, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	fma.rn.f32 	%f792, %f790, %f786, 0fC09DE9E6;
	fma.rn.f32 	%f793, %f789, %f791, 0f00000000;
	and.b32  	%r411, %r410, 1;
	fma.rn.f32 	%f826, %f824, %f820, 0fC09DE9E6;
	fma.rn.f32 	%f827, %f823, %f825, 0f00000000;
	and.b32  	%r421, %r420, 1;
	fma.rn.f32 	%f879, %f877, %f873, 0fC09DE9E6;
	fma.rn.f32 	%f880, %f876, %f878, 0f00000000;
	and.b32  	%r444, %r443, 1;
	fma.rn.f32 	%f931, %f929, %f925, 0fC09DE9E6;
	fma.rn.f32 	%f932, %f928, %f930, 0f00000000;
	and.b32  	%r476, %r475, 1;
	add.f32 	%f969, %f1300, %f1300;
	mov.b32 	%r492, %f969;
	and.b32  	%r493, %r492, -2147483648;
	or.b32  	%r494, %r493, 1056964608;
	mov.b32 	%f970, %r494;
	add.f32 	%f971, %f969, %f970;
	cvt.rzi.f32.f32 	%f972, %f971;
	abs.f32 	%f973, %f969;
	setp.gt.f32 	%p182, %f973, 0f4B000000;
	selp.f32 	%f974, %f969, %f972, %p182;
	cvt.rzi.f32.f32 	%f975, %f969;
	setp.lt.f32 	%p183, %f973, 0f3F000000;
	selp.f32 	%f976, %f975, %f974, %p183;
	cvt.rzi.s32.f32 	%r495, %f976;
	fma.rn.f32 	%f977, %f976, 0fBF000000, %f1300;
	mul.f32 	%f978, %f977, %f977;
	fma.rn.f32 	%f979, %f978, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f980, %f978, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f981, %f979, %f978, 0fC0A55DF6;
	fma.rn.f32 	%f982, %f980, %f978, 0f4081E0CF;
	fma.rn.f32 	%f983, %f978, %f977, 0f00000000;
	shl.b32 	%r500, %r24, 4;
	sub.s32 	%r501, %r37, %r500;
	cvt.rn.f32.s32 	%f179, %r501;
	div.approx.f32 	%f180, %f179, %f948;
	abs.f32 	%f1284, %f180;
	setp.lt.f32 	%p189, %f1284, 0f40000000;
	@%p189 bra 	$L__BB0_77;
// %bb.66:
	setp.gtu.f32 	%p190, %f1284, 0f4B800000;
	@%p190 bra 	$L__BB0_73;
	bra.uni 	$L__BB0_67;
$L__BB0_73:
	mov.b32 	%r39, %f1284;
	and.b32  	%r502, %r39, 8388607;
	or.b32  	%r16280, %r502, 1065353216;
	mov.b32 	%f1283, %r16280;
	add.s32 	%r503, %r39, -1073741824;
	and.b32  	%r16281, %r503, -8388608;
	setp.eq.s32 	%p196, %r16281, 0;
	@%p196 bra 	$L__BB0_76;
// %bb.74:                              // %__nv_fmaf_rn.exit4.i.i.i1619.preheader
	mov.f32 	%f1009, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1008,%f1009;
	// end inline asm
$L__BB0_75:                             // %__nv_fmaf_rn.exit4.i.i.i1619
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r504, %r16281, 192937984;
	add.s32 	%r505, %r16280, %r504;
	mov.b32 	%f1010, %r505;
	mul.f32 	%f1011, %f1008, %f1010;
	sub.f32 	%f1012, %f1010, %f1011;
	fma.rn.f32 	%f1013, %f1012, %f1008, %f1011;
	sub.f32 	%f1014, %f1010, %f1013;
	fma.rz.f32 	%f1015, %f1014, %f1008, %f1013;
	cvt.rzi.f32.f32 	%f1016, %f1015;
	sub.f32 	%f1283, %f1010, %f1016;
	sub.s32 	%r16281, %r16281, %r504;
	mov.b32 	%r16280, %f1283;
	setp.ne.s32 	%p197, %r16281, 0;
	setp.ne.s32 	%p198, %r16280, 0;
	and.pred  	%p199, %p197, %p198;
	@%p199 bra 	$L__BB0_75;
$L__BB0_76:                             // %__internal_fmodf_slowpath_mod.exit.i.i1621
	setp.gt.u32 	%p200, %r39, 2139095039;
	selp.f32 	%f1017, 0f7FFFFFFF, 0f4B800000, %p200;
	mul.f32 	%f1018, %f1283, 0f34000000;
	mul.f32 	%f1284, %f1017, %f1018;
	bra.uni 	$L__BB0_77;
$L__BB0_67:                             // %__nv_fast_fdividef.exit.i.i.i1598
	div.approx.f32 	%f1001, %f1284, %f221;
	cvt.rzi.f32.f32 	%f1282, %f1001;
	fma.rn.f32 	%f92, %f1282, 0fC0000000, %f1284;
	mov.b32 	%r38, %f92;
	setp.lt.u32 	%p191, %r38, 1073741824;
	@%p191 bra 	$L__BB0_72;
// %bb.68:
	setp.lt.u32 	%p192, %r38, -2147483647;
	@%p192 bra 	$L__BB0_70;
// %bb.69:
	add.f32 	%f1006, %f1282, 0fBF800000;
	setp.lt.f32 	%p195, %f92, 0fC0000000;
	add.f32 	%f1007, %f1006, 0fBF800000;
	selp.f32 	%f1282, %f1007, %f1006, %p195;
	bra.uni 	$L__BB0_72;
$L__BB0_70:
	add.f32 	%f1282, %f1282, 0f3F800000;
	setp.ltu.f32 	%p193, %f92, 0f40800000;
	@%p193 bra 	$L__BB0_72;
// %bb.71:                              // %__nv_fmaf_rn.exit.i.i.i1602
	add.f32 	%f1002, %f1282, 0f3F800000;
	fma.rn.f32 	%f1004, %f221, 0fC0400000, %f92;
	setp.ge.f32 	%p194, %f1004, 0f00000000;
	add.f32 	%f1005, %f1002, 0f3F800000;
	selp.f32 	%f1282, %f1005, %f1002, %p194;
$L__BB0_72:                             // %__internal_fmodf_fastpath_quot.exit.i.i1605
	fma.rn.f32 	%f1284, %f1282, 0fC0000000, %f1284;
$L__BB0_77:                             // %__internal_fmodf_kernel.exit.i1624
	and.b32  	%r235, %r122, 8064;
	or.b32  	%r123, %r237, %r238;
	fma.rn.f32 	%f245, %f243, %f239, 0fC09DE9E6;
	fma.rn.f32 	%f246, %f242, %f244, 0f00000000;
	and.b32  	%r255, %r254, 1;
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r262, %r261, 1;
	fma.rn.f32 	%f314, %f312, %f308, 0fC09DE9E6;
	fma.rn.f32 	%f315, %f311, %f313, 0f00000000;
	and.b32  	%r273, %r272, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r280, %r279, 1;
	fma.rn.f32 	%f383, %f381, %f377, 0fC09DE9E6;
	fma.rn.f32 	%f384, %f380, %f382, 0f00000000;
	and.b32  	%r291, %r290, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r298, %r297, 1;
	fma.rn.f32 	%f452, %f450, %f446, 0fC09DE9E6;
	fma.rn.f32 	%f453, %f449, %f451, 0f00000000;
	and.b32  	%r309, %r308, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r316, %r315, 1;
	fma.rn.f32 	%f521, %f519, %f515, 0fC09DE9E6;
	fma.rn.f32 	%f522, %f518, %f520, 0f00000000;
	and.b32  	%r327, %r326, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r334, %r333, 1;
	fma.rn.f32 	%f590, %f588, %f584, 0fC09DE9E6;
	fma.rn.f32 	%f591, %f587, %f589, 0f00000000;
	and.b32  	%r345, %r344, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r352, %r351, 1;
	fma.rn.f32 	%f659, %f657, %f653, 0fC09DE9E6;
	fma.rn.f32 	%f660, %f656, %f658, 0f00000000;
	and.b32  	%r363, %r362, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r370, %r369, 1;
	fma.rn.f32 	%f728, %f726, %f722, 0fC09DE9E6;
	fma.rn.f32 	%f729, %f725, %f727, 0f00000000;
	and.b32  	%r381, %r380, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r388, %r387, 1;
	fma.rn.f32 	%f794, %f792, %f786, 0f3F800000;
	fma.rn.f32 	%f795, %f785, 0f40490FDB, %f793;
	setp.eq.b32 	%p117, %r411, 1;
	fma.rn.f32 	%f828, %f826, %f820, 0f3F800000;
	fma.rn.f32 	%f829, %f819, 0f40490FDB, %f827;
	setp.eq.b32 	%p124, %r421, 1;
	fma.rn.f32 	%f881, %f879, %f873, 0f3F800000;
	fma.rn.f32 	%f882, %f872, 0f40490FDB, %f880;
	setp.eq.b32 	%p144, %r444, 1;
	fma.rn.f32 	%f933, %f931, %f925, 0f3F800000;
	fma.rn.f32 	%f934, %f924, 0f40490FDB, %f932;
	setp.eq.b32 	%p164, %r476, 1;
	fma.rn.f32 	%f984, %f982, %f978, 0fC09DE9E6;
	fma.rn.f32 	%f985, %f981, %f983, 0f00000000;
	and.b32  	%r496, %r495, 1;
	abs.f32 	%f1019, %f1284;
	setp.gtu.f32 	%p201, %f1019, 0f7F800000;
	@%p201 bra 	$L__BB0_79;
// %bb.78:
	mov.b32 	%r506, %f180;
	and.b32  	%r507, %r506, -2147483648;
	mov.b32 	%r508, %f1284;
	or.b32  	%r509, %r507, %r508;
	mov.b32 	%f1284, %r509;
$L__BB0_79:                             // %__nv_fmodf.exit1625
	or.b32  	%r239, %r123, %r235;
	fma.rn.f32 	%f247, %f245, %f239, 0f3F800000;
	fma.rn.f32 	%f248, %f238, 0f40490FDB, %f246;
	setp.eq.b32 	%p22, %r255, 1;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p28, %r262, 1;
	fma.rn.f32 	%f316, %f314, %f308, 0f3F800000;
	fma.rn.f32 	%f317, %f307, 0f40490FDB, %f315;
	setp.eq.b32 	%p34, %r273, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p40, %r280, 1;
	fma.rn.f32 	%f385, %f383, %f377, 0f3F800000;
	fma.rn.f32 	%f386, %f376, 0f40490FDB, %f384;
	setp.eq.b32 	%p46, %r291, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p52, %r298, 1;
	fma.rn.f32 	%f454, %f452, %f446, 0f3F800000;
	fma.rn.f32 	%f455, %f445, 0f40490FDB, %f453;
	setp.eq.b32 	%p58, %r309, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p64, %r316, 1;
	fma.rn.f32 	%f523, %f521, %f515, 0f3F800000;
	fma.rn.f32 	%f524, %f514, 0f40490FDB, %f522;
	setp.eq.b32 	%p70, %r327, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p76, %r334, 1;
	fma.rn.f32 	%f592, %f590, %f584, 0f3F800000;
	fma.rn.f32 	%f593, %f583, 0f40490FDB, %f591;
	setp.eq.b32 	%p82, %r345, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p88, %r352, 1;
	fma.rn.f32 	%f661, %f659, %f653, 0f3F800000;
	fma.rn.f32 	%f662, %f652, 0f40490FDB, %f660;
	setp.eq.b32 	%p94, %r363, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p100, %r370, 1;
	fma.rn.f32 	%f730, %f728, %f722, 0f3F800000;
	fma.rn.f32 	%f731, %f721, 0f40490FDB, %f729;
	setp.eq.b32 	%p106, %r381, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p112, %r388, 1;
	selp.f32 	%f796, %f794, %f795, %p117;
	and.b32  	%r412, %r410, 2;
	selp.f32 	%f830, %f828, %f829, %p124;
	and.b32  	%r422, %r420, 2;
	selp.f32 	%f883, %f881, %f882, %p144;
	and.b32  	%r445, %r443, 2;
	selp.f32 	%f935, %f933, %f934, %p164;
	and.b32  	%r477, %r475, 2;
	fma.rn.f32 	%f986, %f984, %f978, 0f3F800000;
	fma.rn.f32 	%f987, %f977, 0f40490FDB, %f985;
	setp.eq.b32 	%p184, %r496, 1;
	add.f32 	%f1020, %f1284, %f1284;
	mov.b32 	%r516, %f1020;
	and.b32  	%r517, %r516, -2147483648;
	or.b32  	%r518, %r517, 1056964608;
	mov.b32 	%f1021, %r518;
	add.f32 	%f1022, %f1020, %f1021;
	cvt.rzi.f32.f32 	%f1023, %f1022;
	abs.f32 	%f1024, %f1020;
	setp.gt.f32 	%p202, %f1024, 0f4B000000;
	selp.f32 	%f1025, %f1020, %f1023, %p202;
	cvt.rzi.f32.f32 	%f1026, %f1020;
	setp.lt.f32 	%p203, %f1024, 0f3F000000;
	selp.f32 	%f1027, %f1026, %f1025, %p203;
	cvt.rzi.s32.f32 	%r519, %f1027;
	fma.rn.f32 	%f1028, %f1027, 0fBF000000, %f1284;
	mul.f32 	%f1029, %f1028, %f1028;
	fma.rn.f32 	%f1030, %f1029, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1031, %f1029, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1032, %f1030, %f1029, 0fC0A55DF6;
	fma.rn.f32 	%f1033, %f1031, %f1029, 0f4081E0CF;
	fma.rn.f32 	%f1034, %f1029, %f1028, 0f00000000;
	fma.rn.f32 	%f1035, %f1033, %f1029, 0fC09DE9E6;
	fma.rn.f32 	%f1036, %f1032, %f1034, 0f00000000;
	fma.rn.f32 	%f1037, %f1035, %f1029, 0f3F800000;
	fma.rn.f32 	%f1038, %f1028, 0f40490FDB, %f1036;
	and.b32  	%r520, %r519, 1;
	setp.eq.b32 	%p204, %r520, 1;
	div.approx.f32 	%f106, %f88, %f843;
	abs.f32 	%f1304, %f106;
	setp.lt.f32 	%p209, %f1304, 0f40000000;
	@%p209 bra 	$L__BB0_145;
// %bb.80:
	setp.gtu.f32 	%p210, %f1304, 0f4B800000;
	@%p210 bra 	$L__BB0_141;
	bra.uni 	$L__BB0_81;
$L__BB0_141:
	mov.b32 	%r153, %f1304;
	and.b32  	%r524, %r153, 8388607;
	or.b32  	%r16315, %r524, 1065353216;
	mov.b32 	%f1303, %r16315;
	add.s32 	%r525, %r153, -1073741824;
	and.b32  	%r16316, %r525, -8388608;
	setp.eq.s32 	%p216, %r16316, 0;
	@%p216 bra 	$L__BB0_144;
// %bb.142:                             // %__nv_fmaf_rn.exit4.i.i.i1774.preheader
	mov.f32 	%f1062, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1061,%f1062;
	// end inline asm
$L__BB0_143:                            // %__nv_fmaf_rn.exit4.i.i.i1774
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r526, %r16316, 192937984;
	add.s32 	%r527, %r16315, %r526;
	mov.b32 	%f1063, %r527;
	mul.f32 	%f1064, %f1061, %f1063;
	sub.f32 	%f1065, %f1063, %f1064;
	fma.rn.f32 	%f1066, %f1065, %f1061, %f1064;
	sub.f32 	%f1067, %f1063, %f1066;
	fma.rz.f32 	%f1068, %f1067, %f1061, %f1066;
	cvt.rzi.f32.f32 	%f1069, %f1068;
	sub.f32 	%f1303, %f1063, %f1069;
	sub.s32 	%r16316, %r16316, %r526;
	mov.b32 	%r16315, %f1303;
	setp.ne.s32 	%p217, %r16316, 0;
	setp.ne.s32 	%p218, %r16315, 0;
	and.pred  	%p219, %p217, %p218;
	@%p219 bra 	$L__BB0_143;
$L__BB0_144:                            // %__internal_fmodf_slowpath_mod.exit.i.i1776
	setp.gt.u32 	%p220, %r153, 2139095039;
	selp.f32 	%f1070, 0f7FFFFFFF, 0f4B800000, %p220;
	mul.f32 	%f1071, %f1303, 0f34000000;
	mul.f32 	%f1304, %f1070, %f1071;
	bra.uni 	$L__BB0_145;
$L__BB0_81:                             // %__nv_fast_fdividef.exit.i.i.i1753
	div.approx.f32 	%f1054, %f1304, %f221;
	cvt.rzi.f32.f32 	%f1302, %f1054;
	fma.rn.f32 	%f183, %f1302, 0fC0000000, %f1304;
	mov.b32 	%r152, %f183;
	setp.lt.u32 	%p211, %r152, 1073741824;
	@%p211 bra 	$L__BB0_140;
// %bb.82:
	setp.lt.u32 	%p212, %r152, -2147483647;
	@%p212 bra 	$L__BB0_138;
// %bb.83:
	add.f32 	%f1059, %f1302, 0fBF800000;
	setp.lt.f32 	%p215, %f183, 0fC0000000;
	add.f32 	%f1060, %f1059, 0fBF800000;
	selp.f32 	%f1302, %f1060, %f1059, %p215;
	bra.uni 	$L__BB0_140;
$L__BB0_138:
	add.f32 	%f1302, %f1302, 0f3F800000;
	setp.ltu.f32 	%p213, %f183, 0f40800000;
	@%p213 bra 	$L__BB0_140;
// %bb.139:                             // %__nv_fmaf_rn.exit.i.i.i1757
	add.f32 	%f1055, %f1302, 0f3F800000;
	fma.rn.f32 	%f1057, %f221, 0fC0400000, %f183;
	setp.ge.f32 	%p214, %f1057, 0f00000000;
	add.f32 	%f1058, %f1055, 0f3F800000;
	selp.f32 	%f1302, %f1058, %f1055, %p214;
$L__BB0_140:                            // %__internal_fmodf_fastpath_quot.exit.i.i1760
	fma.rn.f32 	%f1304, %f1302, 0fC0000000, %f1304;
$L__BB0_145:                            // %__internal_fmodf_kernel.exit.i1779
	cvt.u16.u32 	%rs2, %r239;
	selp.f32 	%f249, %f247, %f248, %p22;
	and.b32  	%r256, %r254, 2;
	mov.f32 	%f250, 0f00000000;
	selp.f32 	%f283, %f281, %f282, %p28;
	and.b32  	%r263, %r261, 2;
	selp.f32 	%f318, %f316, %f317, %p34;
	and.b32  	%r274, %r272, 2;
	selp.f32 	%f352, %f350, %f351, %p40;
	and.b32  	%r281, %r279, 2;
	selp.f32 	%f387, %f385, %f386, %p46;
	and.b32  	%r292, %r290, 2;
	selp.f32 	%f421, %f419, %f420, %p52;
	and.b32  	%r299, %r297, 2;
	selp.f32 	%f456, %f454, %f455, %p58;
	and.b32  	%r310, %r308, 2;
	selp.f32 	%f490, %f488, %f489, %p64;
	and.b32  	%r317, %r315, 2;
	selp.f32 	%f525, %f523, %f524, %p70;
	and.b32  	%r328, %r326, 2;
	selp.f32 	%f559, %f557, %f558, %p76;
	and.b32  	%r335, %r333, 2;
	selp.f32 	%f594, %f592, %f593, %p82;
	and.b32  	%r346, %r344, 2;
	selp.f32 	%f628, %f626, %f627, %p88;
	and.b32  	%r353, %r351, 2;
	selp.f32 	%f663, %f661, %f662, %p94;
	and.b32  	%r364, %r362, 2;
	selp.f32 	%f697, %f695, %f696, %p100;
	and.b32  	%r371, %r369, 2;
	selp.f32 	%f732, %f730, %f731, %p106;
	and.b32  	%r382, %r380, 2;
	selp.f32 	%f766, %f764, %f765, %p112;
	and.b32  	%r389, %r387, 2;
	setp.eq.s32 	%p118, %r412, 0;
	neg.f32 	%f798, %f796;
	add.s32 	%r413, %r410, 1;
	cvt.rzi.f32.f32 	%f803, %f776;
	setp.eq.s32 	%p125, %r422, 0;
	neg.f32 	%f832, %f830;
	add.s32 	%r423, %r420, 1;
	cvt.rzi.f32.f32 	%f836, %f810;
	setp.eq.s32 	%p145, %r445, 0;
	neg.f32 	%f885, %f883;
	add.s32 	%r446, %r443, 1;
	cvt.rzi.f32.f32 	%f890, %f1296;
	setp.eq.s32 	%p165, %r477, 0;
	neg.f32 	%f937, %f935;
	add.s32 	%r478, %r475, 1;
	cvt.rzi.f32.f32 	%f942, %f1280;
	selp.f32 	%f988, %f986, %f987, %p184;
	and.b32  	%r497, %r495, 2;
	selp.f32 	%f1039, %f1037, %f1038, %p204;
	and.b32  	%r521, %r519, 2;
	abs.f32 	%f1072, %f1304;
	setp.gtu.f32 	%p221, %f1072, 0f7F800000;
	@%p221 bra 	$L__BB0_147;
// %bb.146:
	mov.b32 	%r528, %f106;
	and.b32  	%r529, %r528, -2147483648;
	mov.b32 	%r530, %f1304;
	or.b32  	%r531, %r529, %r530;
	mov.b32 	%f1304, %r531;
$L__BB0_147:                            // %__nv_fmodf.exit1780
	shr.u16 	%rs3, %rs2, 1;
	setp.eq.s32 	%p23, %r256, 0;
	sub.f32 	%f251, %f250, %f249;
	setp.eq.s32 	%p29, %r263, 0;
	sub.f32 	%f285, %f250, %f283;
	setp.eq.s32 	%p35, %r274, 0;
	sub.f32 	%f320, %f250, %f318;
	setp.eq.s32 	%p41, %r281, 0;
	sub.f32 	%f354, %f250, %f352;
	setp.eq.s32 	%p47, %r292, 0;
	sub.f32 	%f389, %f250, %f387;
	setp.eq.s32 	%p53, %r299, 0;
	sub.f32 	%f423, %f250, %f421;
	setp.eq.s32 	%p59, %r310, 0;
	sub.f32 	%f458, %f250, %f456;
	setp.eq.s32 	%p65, %r317, 0;
	sub.f32 	%f492, %f250, %f490;
	setp.eq.s32 	%p71, %r328, 0;
	sub.f32 	%f527, %f250, %f525;
	setp.eq.s32 	%p77, %r335, 0;
	sub.f32 	%f561, %f250, %f559;
	setp.eq.s32 	%p83, %r346, 0;
	sub.f32 	%f596, %f250, %f594;
	setp.eq.s32 	%p89, %r353, 0;
	sub.f32 	%f630, %f250, %f628;
	setp.eq.s32 	%p95, %r364, 0;
	sub.f32 	%f665, %f250, %f663;
	setp.eq.s32 	%p101, %r371, 0;
	sub.f32 	%f699, %f250, %f697;
	setp.eq.s32 	%p107, %r382, 0;
	sub.f32 	%f734, %f250, %f732;
	setp.eq.s32 	%p113, %r389, 0;
	sub.f32 	%f768, %f250, %f766;
	selp.f32 	%f797, %f795, %f794, %p117;
	selp.f32 	%f799, %f796, %f798, %p118;
	and.b32  	%r414, %r413, 2;
	setp.eq.f32 	%p120, %f803, %f776;
	mul.f32 	%f804, %f776, 0f00000000;
	selp.f32 	%f831, %f829, %f828, %p124;
	selp.f32 	%f833, %f830, %f832, %p125;
	and.b32  	%r424, %r423, 2;
	setp.eq.f32 	%p127, %f836, %f810;
	mul.f32 	%f837, %f810, 0f00000000;
	selp.f32 	%f884, %f882, %f881, %p144;
	selp.f32 	%f886, %f883, %f885, %p145;
	and.b32  	%r447, %r446, 2;
	setp.eq.f32 	%p147, %f890, %f1296;
	mul.f32 	%f891, %f1296, 0f00000000;
	selp.f32 	%f936, %f934, %f933, %p164;
	selp.f32 	%f938, %f935, %f937, %p165;
	and.b32  	%r479, %r478, 2;
	setp.eq.f32 	%p167, %f942, %f1280;
	mul.f32 	%f943, %f1280, 0f00000000;
	setp.eq.s32 	%p185, %r497, 0;
	neg.f32 	%f990, %f988;
	add.s32 	%r498, %r495, 1;
	cvt.rzi.f32.f32 	%f995, %f1300;
	setp.eq.s32 	%p205, %r521, 0;
	neg.f32 	%f1041, %f1039;
	add.s32 	%r522, %r519, 1;
	cvt.rzi.f32.f32 	%f1046, %f1284;
	add.f32 	%f1073, %f1304, %f1304;
	mov.b32 	%r532, %f1073;
	and.b32  	%r533, %r532, -2147483648;
	or.b32  	%r534, %r533, 1056964608;
	mov.b32 	%f1074, %r534;
	add.f32 	%f1075, %f1073, %f1074;
	cvt.rzi.f32.f32 	%f1076, %f1075;
	abs.f32 	%f1077, %f1073;
	setp.gt.f32 	%p222, %f1077, 0f4B000000;
	selp.f32 	%f1078, %f1073, %f1076, %p222;
	cvt.rzi.f32.f32 	%f1079, %f1073;
	setp.lt.f32 	%p223, %f1077, 0f3F000000;
	selp.f32 	%f1080, %f1079, %f1078, %p223;
	cvt.rzi.s32.f32 	%r535, %f1080;
	fma.rn.f32 	%f1081, %f1080, 0fBF000000, %f1304;
	mul.f32 	%f1082, %f1081, %f1081;
	fma.rn.f32 	%f1083, %f1082, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1084, %f1082, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1085, %f1083, %f1082, 0fC0A55DF6;
	fma.rn.f32 	%f1086, %f1084, %f1082, 0f4081E0CF;
	fma.rn.f32 	%f1087, %f1082, %f1081, 0f00000000;
	fma.rn.f32 	%f1088, %f1086, %f1082, 0fC09DE9E6;
	fma.rn.f32 	%f1089, %f1085, %f1087, 0f00000000;
	fma.rn.f32 	%f1090, %f1088, %f1082, 0f3F800000;
	fma.rn.f32 	%f1091, %f1081, 0f40490FDB, %f1089;
	and.b32  	%r536, %r535, 1;
	setp.eq.b32 	%p224, %r536, 1;
	selp.f32 	%f1092, %f1090, %f1091, %p224;
	selp.f32 	%f1093, %f1091, %f1090, %p224;
	and.b32  	%r537, %r535, 2;
	setp.eq.s32 	%p225, %r537, 0;
	neg.f32 	%f1094, %f1092;
	selp.f32 	%f1095, %f1092, %f1094, %p225;
	add.s32 	%r538, %r535, 1;
	and.b32  	%r539, %r538, 2;
	cvt.rzi.f32.f32 	%f1099, %f1304;
	setp.eq.f32 	%p227, %f1099, %f1304;
	mul.f32 	%f1100, %f1304, 0f00000000;
	div.approx.f32 	%f199, %f179, %f843;
	abs.f32 	%f1288, %f199;
	setp.lt.f32 	%p229, %f1288, 0f40000000;
	@%p229 bra 	$L__BB0_95;
// %bb.84:
	setp.gtu.f32 	%p230, %f1288, 0f4B800000;
	@%p230 bra 	$L__BB0_91;
	bra.uni 	$L__BB0_85;
$L__BB0_91:
	mov.b32 	%r49, %f1288;
	and.b32  	%r540, %r49, 8388607;
	or.b32  	%r16282, %r540, 1065353216;
	mov.b32 	%f1287, %r16282;
	add.s32 	%r541, %r49, -1073741824;
	and.b32  	%r16283, %r541, -8388608;
	setp.eq.s32 	%p236, %r16283, 0;
	@%p236 bra 	$L__BB0_94;
// %bb.92:                              // %__nv_fmaf_rn.exit4.i.i.i1650.preheader
	mov.f32 	%f1113, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1112,%f1113;
	// end inline asm
$L__BB0_93:                             // %__nv_fmaf_rn.exit4.i.i.i1650
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r542, %r16283, 192937984;
	add.s32 	%r543, %r16282, %r542;
	mov.b32 	%f1114, %r543;
	mul.f32 	%f1115, %f1112, %f1114;
	sub.f32 	%f1116, %f1114, %f1115;
	fma.rn.f32 	%f1117, %f1116, %f1112, %f1115;
	sub.f32 	%f1118, %f1114, %f1117;
	fma.rz.f32 	%f1119, %f1118, %f1112, %f1117;
	cvt.rzi.f32.f32 	%f1120, %f1119;
	sub.f32 	%f1287, %f1114, %f1120;
	sub.s32 	%r16283, %r16283, %r542;
	mov.b32 	%r16282, %f1287;
	setp.ne.s32 	%p237, %r16283, 0;
	setp.ne.s32 	%p238, %r16282, 0;
	and.pred  	%p239, %p237, %p238;
	@%p239 bra 	$L__BB0_93;
$L__BB0_94:                             // %__internal_fmodf_slowpath_mod.exit.i.i1652
	setp.gt.u32 	%p240, %r49, 2139095039;
	selp.f32 	%f1121, 0f7FFFFFFF, 0f4B800000, %p240;
	mul.f32 	%f1122, %f1287, 0f34000000;
	mul.f32 	%f1288, %f1121, %f1122;
	bra.uni 	$L__BB0_95;
$L__BB0_85:                             // %__nv_fast_fdividef.exit.i.i.i1629
	div.approx.f32 	%f1105, %f1288, %f221;
	cvt.rzi.f32.f32 	%f1286, %f1105;
	fma.rn.f32 	%f109, %f1286, 0fC0000000, %f1288;
	mov.b32 	%r48, %f109;
	setp.lt.u32 	%p231, %r48, 1073741824;
	@%p231 bra 	$L__BB0_90;
// %bb.86:
	setp.lt.u32 	%p232, %r48, -2147483647;
	@%p232 bra 	$L__BB0_88;
// %bb.87:
	add.f32 	%f1110, %f1286, 0fBF800000;
	setp.lt.f32 	%p235, %f109, 0fC0000000;
	add.f32 	%f1111, %f1110, 0fBF800000;
	selp.f32 	%f1286, %f1111, %f1110, %p235;
	bra.uni 	$L__BB0_90;
$L__BB0_88:
	add.f32 	%f1286, %f1286, 0f3F800000;
	setp.ltu.f32 	%p233, %f109, 0f40800000;
	@%p233 bra 	$L__BB0_90;
// %bb.89:                              // %__nv_fmaf_rn.exit.i.i.i1633
	add.f32 	%f1106, %f1286, 0f3F800000;
	fma.rn.f32 	%f1108, %f221, 0fC0400000, %f109;
	setp.ge.f32 	%p234, %f1108, 0f00000000;
	add.f32 	%f1109, %f1106, 0f3F800000;
	selp.f32 	%f1286, %f1109, %f1106, %p234;
$L__BB0_90:                             // %__internal_fmodf_fastpath_quot.exit.i.i1636
	fma.rn.f32 	%f1288, %f1286, 0fC0000000, %f1288;
$L__BB0_95:                             // %__internal_fmodf_kernel.exit.i1655
	or.b16  	%rs1, %rs3, 32;
	selp.f32 	%f252, %f249, %f251, %p23;
	selp.f32 	%f286, %f283, %f285, %p29;
	selp.f32 	%f321, %f318, %f320, %p35;
	selp.f32 	%f355, %f352, %f354, %p41;
	selp.f32 	%f390, %f387, %f389, %p47;
	selp.f32 	%f424, %f421, %f423, %p53;
	selp.f32 	%f459, %f456, %f458, %p59;
	selp.f32 	%f493, %f490, %f492, %p65;
	selp.f32 	%f528, %f525, %f527, %p71;
	selp.f32 	%f562, %f559, %f561, %p77;
	selp.f32 	%f597, %f594, %f596, %p83;
	selp.f32 	%f631, %f628, %f630, %p89;
	selp.f32 	%f666, %f663, %f665, %p95;
	selp.f32 	%f700, %f697, %f699, %p101;
	selp.f32 	%f735, %f732, %f734, %p107;
	selp.f32 	%f769, %f766, %f768, %p113;
	setp.eq.s32 	%p119, %r414, 0;
	sub.f32 	%f801, %f250, %f797;
	selp.f32 	%f805, %f804, %f799, %p120;
	abs.f32 	%f806, %f776;
	setp.eq.s32 	%p126, %r424, 0;
	sub.f32 	%f834, %f250, %f831;
	selp.f32 	%f838, %f837, %f833, %p127;
	abs.f32 	%f839, %f810;
	setp.eq.s32 	%p146, %r447, 0;
	sub.f32 	%f888, %f250, %f884;
	selp.f32 	%f158, %f891, %f886, %p147;
	abs.f32 	%f892, %f1296;
	setp.eq.s32 	%p166, %r479, 0;
	sub.f32 	%f940, %f250, %f936;
	selp.f32 	%f944, %f943, %f938, %p167;
	abs.f32 	%f945, %f1280;
	selp.f32 	%f989, %f987, %f986, %p184;
	selp.f32 	%f991, %f988, %f990, %p185;
	and.b32  	%r499, %r498, 2;
	setp.eq.f32 	%p187, %f995, %f1300;
	mul.f32 	%f996, %f1300, 0f00000000;
	selp.f32 	%f1040, %f1038, %f1037, %p204;
	selp.f32 	%f1042, %f1039, %f1041, %p205;
	and.b32  	%r523, %r522, 2;
	setp.eq.f32 	%p207, %f1046, %f1284;
	mul.f32 	%f1047, %f1284, 0f00000000;
	setp.eq.s32 	%p226, %r539, 0;
	sub.f32 	%f1097, %f250, %f1093;
	selp.f32 	%f197, %f1100, %f1095, %p227;
	abs.f32 	%f1101, %f1304;
	and.b32  	%r121, %r4, 16;
	abs.f32 	%f1123, %f1288;
	setp.gtu.f32 	%p241, %f1123, 0f7F800000;
	@%p241 bra 	$L__BB0_97;
// %bb.96:
	mov.b32 	%r544, %f199;
	and.b32  	%r545, %r544, -2147483648;
	mov.b32 	%r546, %f1288;
	or.b32  	%r547, %r545, %r546;
	mov.b32 	%f1288, %r547;
$L__BB0_97:                             // %__nv_fmodf.exit1656
	and.b16  	%rs4, %rs1, 4095;
	mul.f32 	%f141, %f252, %f252;
	mul.f32 	%f4, %f286, %f286;
	mul.f32 	%f8, %f321, %f321;
	mul.f32 	%f13, %f355, %f355;
	mul.f32 	%f17, %f390, %f390;
	mul.f32 	%f22, %f424, %f424;
	mul.f32 	%f26, %f459, %f459;
	mul.f32 	%f31, %f493, %f493;
	mul.f32 	%f35, %f528, %f528;
	mul.f32 	%f40, %f562, %f562;
	mul.f32 	%f44, %f597, %f597;
	mul.f32 	%f49, %f631, %f631;
	mul.f32 	%f53, %f666, %f666;
	mul.f32 	%f58, %f700, %f700;
	mul.f32 	%f62, %f735, %f735;
	mul.f32 	%f67, %f769, %f769;
	selp.f32 	%f802, %f797, %f801, %p119;
	setp.gt.f32 	%p121, %f806, 0f4B800000;
	add.f32 	%f807, %f805, 0f3F800000;
	selp.f32 	%f835, %f831, %f834, %p126;
	setp.gt.f32 	%p128, %f839, 0f4B800000;
	add.f32 	%f840, %f838, 0f3F800000;
	selp.f32 	%f889, %f884, %f888, %p146;
	setp.gt.f32 	%p148, %f892, 0f4B800000;
	add.f32 	%f893, %f158, 0f3F800000;
	selp.f32 	%f941, %f936, %f940, %p166;
	setp.gt.f32 	%p168, %f945, 0f4B800000;
	add.f32 	%f946, %f944, 0f3F800000;
	setp.eq.s32 	%p186, %r499, 0;
	sub.f32 	%f993, %f250, %f989;
	selp.f32 	%f177, %f996, %f991, %p187;
	abs.f32 	%f997, %f1300;
	setp.eq.s32 	%p206, %r523, 0;
	sub.f32 	%f1044, %f250, %f1040;
	selp.f32 	%f1048, %f1047, %f1042, %p207;
	abs.f32 	%f1049, %f1284;
	selp.f32 	%f1098, %f1093, %f1097, %p226;
	setp.gt.f32 	%p228, %f1101, 0f4B800000;
	add.f32 	%f1102, %f197, 0f3F800000;
	add.f32 	%f1124, %f1288, %f1288;
	mov.b32 	%r560, %f1124;
	and.b32  	%r561, %r560, -2147483648;
	or.b32  	%r562, %r561, 1056964608;
	mov.b32 	%f1125, %r562;
	add.f32 	%f1126, %f1124, %f1125;
	cvt.rzi.f32.f32 	%f1127, %f1126;
	abs.f32 	%f1128, %f1124;
	setp.gt.f32 	%p242, %f1128, 0f4B000000;
	selp.f32 	%f1129, %f1124, %f1127, %p242;
	cvt.rzi.f32.f32 	%f1130, %f1124;
	setp.lt.f32 	%p243, %f1128, 0f3F000000;
	selp.f32 	%f1131, %f1130, %f1129, %p243;
	cvt.rzi.s32.f32 	%r563, %f1131;
	fma.rn.f32 	%f1132, %f1131, 0fBF000000, %f1288;
	mul.f32 	%f1133, %f1132, %f1132;
	fma.rn.f32 	%f1134, %f1133, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1135, %f1133, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1136, %f1134, %f1133, 0fC0A55DF6;
	fma.rn.f32 	%f1137, %f1135, %f1133, 0f4081E0CF;
	fma.rn.f32 	%f1138, %f1133, %f1132, 0f00000000;
	fma.rn.f32 	%f1139, %f1137, %f1133, 0fC09DE9E6;
	fma.rn.f32 	%f1140, %f1136, %f1138, 0f00000000;
	fma.rn.f32 	%f1141, %f1139, %f1133, 0f3F800000;
	fma.rn.f32 	%f1142, %f1132, 0f40490FDB, %f1140;
	and.b32  	%r564, %r563, 1;
	setp.eq.b32 	%p244, %r564, 1;
	selp.f32 	%f1143, %f1141, %f1142, %p244;
	selp.f32 	%f1144, %f1142, %f1141, %p244;
	and.b32  	%r565, %r563, 2;
	setp.eq.s32 	%p245, %r565, 0;
	neg.f32 	%f1145, %f1143;
	selp.f32 	%f1146, %f1143, %f1145, %p245;
	add.s32 	%r566, %r563, 1;
	and.b32  	%r567, %r566, 2;
	setp.eq.s32 	%p246, %r567, 0;
	sub.f32 	%f1148, %f250, %f1144;
	selp.f32 	%f1149, %f1144, %f1148, %p246;
	cvt.rzi.f32.f32 	%f1150, %f1288;
	setp.eq.f32 	%p247, %f1150, %f1288;
	mul.f32 	%f1151, %f1288, 0f00000000;
	selp.f32 	%f1152, %f1151, %f1146, %p247;
	abs.f32 	%f1153, %f1288;
	setp.gt.f32 	%p248, %f1153, 0f4B800000;
	add.f32 	%f1154, %f1152, 0f3F800000;
	mul.lo.s32 	%r568, %r130, 2147483640;
	cvt.u16.u32 	%rs5, %r4;
	shr.u16 	%rs6, %rs5, 8;
	shl.b16 	%rs7, %rs5, 8;
	or.b16  	%rs8, %rs7, %rs6;
	shl.b16 	%rs9, %rs8, 4;
	shr.u16 	%rs10, %rs8, 4;
	and.b16  	%rs11, %rs10, 3840;
	or.b16  	%rs12, %rs11, %rs9;
	and.b16  	%rs13, %rs12, 13107;
	shl.b16 	%rs14, %rs13, 2;
	shr.u16 	%rs15, %rs12, 2;
	and.b16  	%rs16, %rs15, 13107;
	or.b16  	%rs17, %rs16, %rs14;
	and.b16  	%rs18, %rs17, 20480;
	shl.b16 	%rs19, %rs18, 1;
	shr.u16 	%rs20, %rs17, 1;
	and.b16  	%rs21, %rs20, 16384;
	or.b16  	%rs22, %rs21, %rs19;
	shr.u16 	%rs23, %rs22, 13;
	sub.s32 	%r569, %r568, %r121;
	mad.lo.s32 	%r570, %r133, 2147483616, %r569;
	or.b16  	%rs24, %rs23, 1;
	cvt.u32.u16 	%r571, %rs24;
	and.b16  	%rs25, %rs23, 6;
	cvt.u32.u16 	%r572, %rs25;
	sub.s32 	%r573, %r570, %r572;
	shl.b32 	%r574, %r573, 1;
	cvt.rn.f32.s32 	%f1156, %r574;
	div.approx.f32 	%f123, %f1156, %f253;
	abs.f32 	%f1308, %f123;
	setp.lt.f32 	%p249, %f1308, 0f40000000;
	@%p249 bra 	$L__BB0_155;
// %bb.98:
	setp.gtu.f32 	%p250, %f1308, 0f4B800000;
	@%p250 bra 	$L__BB0_151;
	bra.uni 	$L__BB0_99;
$L__BB0_151:
	mov.b32 	%r161, %f1308;
	and.b32  	%r575, %r161, 8388607;
	or.b32  	%r16317, %r575, 1065353216;
	mov.b32 	%f1307, %r16317;
	add.s32 	%r576, %r161, -1073741824;
	and.b32  	%r16318, %r576, -8388608;
	setp.eq.s32 	%p256, %r16318, 0;
	@%p256 bra 	$L__BB0_154;
// %bb.152:                             // %__nv_fmaf_rn.exit4.i.i.i1805.preheader
	mov.f32 	%f1167, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1166,%f1167;
	// end inline asm
$L__BB0_153:                            // %__nv_fmaf_rn.exit4.i.i.i1805
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r577, %r16318, 192937984;
	add.s32 	%r578, %r16317, %r577;
	mov.b32 	%f1168, %r578;
	mul.f32 	%f1169, %f1166, %f1168;
	sub.f32 	%f1170, %f1168, %f1169;
	fma.rn.f32 	%f1171, %f1170, %f1166, %f1169;
	sub.f32 	%f1172, %f1168, %f1171;
	fma.rz.f32 	%f1173, %f1172, %f1166, %f1171;
	cvt.rzi.f32.f32 	%f1174, %f1173;
	sub.f32 	%f1307, %f1168, %f1174;
	sub.s32 	%r16318, %r16318, %r577;
	mov.b32 	%r16317, %f1307;
	setp.ne.s32 	%p257, %r16318, 0;
	setp.ne.s32 	%p258, %r16317, 0;
	and.pred  	%p259, %p257, %p258;
	@%p259 bra 	$L__BB0_153;
$L__BB0_154:                            // %__internal_fmodf_slowpath_mod.exit.i.i1807
	setp.gt.u32 	%p260, %r161, 2139095039;
	selp.f32 	%f1175, 0f7FFFFFFF, 0f4B800000, %p260;
	mul.f32 	%f1176, %f1307, 0f34000000;
	mul.f32 	%f1308, %f1175, %f1176;
	bra.uni 	$L__BB0_155;
$L__BB0_99:                             // %__nv_fast_fdividef.exit.i.i.i1784
	div.approx.f32 	%f1159, %f1308, %f221;
	cvt.rzi.f32.f32 	%f1306, %f1159;
	fma.rn.f32 	%f202, %f1306, 0fC0000000, %f1308;
	mov.b32 	%r160, %f202;
	setp.lt.u32 	%p251, %r160, 1073741824;
	@%p251 bra 	$L__BB0_150;
// %bb.100:
	setp.lt.u32 	%p252, %r160, -2147483647;
	@%p252 bra 	$L__BB0_148;
// %bb.101:
	add.f32 	%f1164, %f1306, 0fBF800000;
	setp.lt.f32 	%p255, %f202, 0fC0000000;
	add.f32 	%f1165, %f1164, 0fBF800000;
	selp.f32 	%f1306, %f1165, %f1164, %p255;
	bra.uni 	$L__BB0_150;
$L__BB0_148:
	add.f32 	%f1306, %f1306, 0f3F800000;
	setp.ltu.f32 	%p253, %f202, 0f40800000;
	@%p253 bra 	$L__BB0_150;
// %bb.149:                             // %__nv_fmaf_rn.exit.i.i.i1788
	add.f32 	%f1160, %f1306, 0f3F800000;
	fma.rn.f32 	%f1162, %f221, 0fC0400000, %f202;
	setp.ge.f32 	%p254, %f1162, 0f00000000;
	add.f32 	%f1163, %f1160, 0f3F800000;
	selp.f32 	%f1306, %f1163, %f1160, %p254;
$L__BB0_150:                            // %__internal_fmodf_fastpath_quot.exit.i.i1791
	fma.rn.f32 	%f1308, %f1306, 0fC0000000, %f1308;
$L__BB0_155:                            // %__internal_fmodf_kernel.exit.i1810
	shr.u32 	%r240, %r239, 1;
	cvt.u32.u16 	%r241, %rs4;
	mul.f32 	%f256, %f141, 0f3B8B2FF9;
	mul.f32 	%f290, %f4, 0f3B8B2FF9;
	mul.f32 	%f325, %f8, 0f3B8B2FF9;
	mul.f32 	%f359, %f13, 0f3B8B2FF9;
	mul.f32 	%f394, %f17, 0f3B8B2FF9;
	mul.f32 	%f428, %f22, 0f3B8B2FF9;
	mul.f32 	%f463, %f26, 0f3B8B2FF9;
	mul.f32 	%f497, %f31, 0f3B8B2FF9;
	mul.f32 	%f532, %f35, 0f3B8B2FF9;
	mul.f32 	%f566, %f40, 0f3B8B2FF9;
	mul.f32 	%f601, %f44, 0f3B8B2FF9;
	mul.f32 	%f635, %f49, 0f3B8B2FF9;
	mul.f32 	%f670, %f53, 0f3B8B2FF9;
	mul.f32 	%f704, %f58, 0f3B8B2FF9;
	mul.f32 	%f739, %f62, 0f3B8B2FF9;
	mul.f32 	%f772, %f67, 0f3B8B2FF9;
	selp.f32 	%f808, %f807, %f802, %p121;
	selp.f32 	%f841, %f840, %f835, %p128;
	selp.f32 	%f159, %f893, %f889, %p148;
	selp.f32 	%f947, %f946, %f941, %p168;
	selp.f32 	%f994, %f989, %f993, %p186;
	setp.gt.f32 	%p188, %f997, 0f4B800000;
	add.f32 	%f998, %f177, 0f3F800000;
	selp.f32 	%f1045, %f1040, %f1044, %p206;
	setp.gt.f32 	%p208, %f1049, 0f4B800000;
	add.f32 	%f1050, %f1048, 0f3F800000;
	selp.f32 	%f198, %f1102, %f1098, %p228;
	selp.f32 	%f1155, %f1154, %f1149, %p248;
	sub.s32 	%r60, %r570, %r571;
	abs.f32 	%f1177, %f1308;
	setp.gtu.f32 	%p261, %f1177, 0f7F800000;
	@%p261 bra 	$L__BB0_157;
// %bb.156:
	mov.b32 	%r579, %f123;
	and.b32  	%r580, %r579, -2147483648;
	mov.b32 	%r581, %f1308;
	or.b32  	%r582, %r580, %r581;
	mov.b32 	%f1308, %r582;
$L__BB0_157:                            // %__nv_fmodf.exit1811
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd30, %r240, 4;
	mul.wide.u32 	%rd32, %r241, 4;
	mul.f32 	%f3, %f256, %f1262;
	mul.f32 	%f291, %f290, %f1263;
	mul.f32 	%f12, %f325, %f1264;
	mul.f32 	%f360, %f359, %f1265;
	mul.f32 	%f21, %f394, %f1266;
	mul.f32 	%f429, %f428, %f1267;
	mul.f32 	%f30, %f463, %f1268;
	mul.f32 	%f498, %f497, %f1269;
	mul.f32 	%f39, %f532, %f1270;
	mul.f32 	%f567, %f566, %f1271;
	mul.f32 	%f48, %f601, %f1272;
	mul.f32 	%f636, %f635, %f1273;
	mul.f32 	%f57, %f670, %f1274;
	mul.f32 	%f705, %f704, %f1275;
	mul.f32 	%f66, %f739, %f1276;
	mul.f32 	%f773, %f772, %f1277;
	mov.b32 	%r397, %f808;
	mov.b32 	%r398, %f841;
	mov.b32 	%r403, %f805;
	mov.b32 	%r404, %f838;
	mov.b32 	%r471, %f947;
	mov.b32 	%r470, %f159;
	mov.b32 	%r468, %f944;
	mov.b32 	%r467, %f158;
	selp.f32 	%f178, %f998, %f994, %p188;
	selp.f32 	%f1051, %f1050, %f1045, %p208;
	mov.b32 	%r559, %f1155;
	mov.b32 	%r558, %f198;
	mov.b32 	%r556, %f1152;
	mov.b32 	%r555, %f197;
	add.f32 	%f1178, %f1308, %f1308;
	mov.b32 	%r583, %f1178;
	and.b32  	%r584, %r583, -2147483648;
	or.b32  	%r585, %r584, 1056964608;
	mov.b32 	%f1179, %r585;
	add.f32 	%f1180, %f1178, %f1179;
	cvt.rzi.f32.f32 	%f1181, %f1180;
	abs.f32 	%f1182, %f1178;
	setp.gt.f32 	%p262, %f1182, 0f4B000000;
	selp.f32 	%f1183, %f1178, %f1181, %p262;
	cvt.rzi.f32.f32 	%f1184, %f1178;
	setp.lt.f32 	%p263, %f1182, 0f3F000000;
	selp.f32 	%f1185, %f1184, %f1183, %p263;
	cvt.rzi.s32.f32 	%r586, %f1185;
	fma.rn.f32 	%f1186, %f1185, 0fBF000000, %f1308;
	mul.f32 	%f1187, %f1186, %f1186;
	fma.rn.f32 	%f1188, %f1187, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1189, %f1187, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1190, %f1188, %f1187, 0fC0A55DF6;
	fma.rn.f32 	%f1191, %f1189, %f1187, 0f4081E0CF;
	fma.rn.f32 	%f1192, %f1187, %f1186, 0f00000000;
	fma.rn.f32 	%f1193, %f1191, %f1187, 0fC09DE9E6;
	fma.rn.f32 	%f1194, %f1190, %f1192, 0f00000000;
	fma.rn.f32 	%f1195, %f1193, %f1187, 0f3F800000;
	fma.rn.f32 	%f1196, %f1186, 0f40490FDB, %f1194;
	and.b32  	%r587, %r586, 1;
	setp.eq.b32 	%p264, %r587, 1;
	selp.f32 	%f1197, %f1195, %f1196, %p264;
	selp.f32 	%f1198, %f1196, %f1195, %p264;
	and.b32  	%r588, %r586, 2;
	setp.eq.s32 	%p265, %r588, 0;
	neg.f32 	%f1199, %f1197;
	selp.f32 	%f1200, %f1197, %f1199, %p265;
	add.s32 	%r589, %r586, 1;
	and.b32  	%r590, %r589, 2;
	setp.eq.s32 	%p266, %r590, 0;
	sub.f32 	%f1202, %f250, %f1198;
	selp.f32 	%f1203, %f1198, %f1202, %p266;
	cvt.rzi.f32.f32 	%f1204, %f1308;
	setp.eq.f32 	%p267, %f1204, %f1308;
	mul.f32 	%f1205, %f1308, 0f00000000;
	selp.f32 	%f216, %f1205, %f1200, %p267;
	abs.f32 	%f1206, %f1308;
	setp.gt.f32 	%p268, %f1206, 0f4B800000;
	add.f32 	%f1207, %f216, 0f3F800000;
	shl.b32 	%r591, %r60, 1;
	cvt.rn.f32.s32 	%f1208, %r591;
	div.approx.f32 	%f218, %f1208, %f253;
	abs.f32 	%f1292, %f218;
	setp.lt.f32 	%p269, %f1292, 0f40000000;
	@%p269 bra 	$L__BB0_113;
// %bb.102:
	setp.gtu.f32 	%p270, %f1292, 0f4B800000;
	@%p270 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_103;
$L__BB0_109:
	mov.b32 	%r62, %f1292;
	and.b32  	%r592, %r62, 8388607;
	or.b32  	%r16284, %r592, 1065353216;
	mov.b32 	%f1291, %r16284;
	add.s32 	%r593, %r62, -1073741824;
	and.b32  	%r16285, %r593, -8388608;
	setp.eq.s32 	%p276, %r16285, 0;
	@%p276 bra 	$L__BB0_112;
// %bb.110:                             // %__nv_fmaf_rn.exit4.i.i.i1681.preheader
	mov.f32 	%f1219, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1218,%f1219;
	// end inline asm
$L__BB0_111:                            // %__nv_fmaf_rn.exit4.i.i.i1681
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r594, %r16285, 192937984;
	add.s32 	%r595, %r16284, %r594;
	mov.b32 	%f1220, %r595;
	mul.f32 	%f1221, %f1218, %f1220;
	sub.f32 	%f1222, %f1220, %f1221;
	fma.rn.f32 	%f1223, %f1222, %f1218, %f1221;
	sub.f32 	%f1224, %f1220, %f1223;
	fma.rz.f32 	%f1225, %f1224, %f1218, %f1223;
	cvt.rzi.f32.f32 	%f1226, %f1225;
	sub.f32 	%f1291, %f1220, %f1226;
	sub.s32 	%r16285, %r16285, %r594;
	mov.b32 	%r16284, %f1291;
	setp.ne.s32 	%p277, %r16285, 0;
	setp.ne.s32 	%p278, %r16284, 0;
	and.pred  	%p279, %p277, %p278;
	@%p279 bra 	$L__BB0_111;
$L__BB0_112:                            // %__internal_fmodf_slowpath_mod.exit.i.i1683
	setp.gt.u32 	%p280, %r62, 2139095039;
	selp.f32 	%f1227, 0f7FFFFFFF, 0f4B800000, %p280;
	mul.f32 	%f1228, %f1291, 0f34000000;
	mul.f32 	%f1292, %f1227, %f1228;
	bra.uni 	$L__BB0_113;
$L__BB0_103:                            // %__nv_fast_fdividef.exit.i.i.i1660
	div.approx.f32 	%f1211, %f1292, %f221;
	cvt.rzi.f32.f32 	%f1290, %f1211;
	fma.rn.f32 	%f126, %f1290, 0fC0000000, %f1292;
	mov.b32 	%r61, %f126;
	setp.lt.u32 	%p271, %r61, 1073741824;
	@%p271 bra 	$L__BB0_108;
// %bb.104:
	setp.lt.u32 	%p272, %r61, -2147483647;
	@%p272 bra 	$L__BB0_106;
// %bb.105:
	add.f32 	%f1216, %f1290, 0fBF800000;
	setp.lt.f32 	%p275, %f126, 0fC0000000;
	add.f32 	%f1217, %f1216, 0fBF800000;
	selp.f32 	%f1290, %f1217, %f1216, %p275;
	bra.uni 	$L__BB0_108;
$L__BB0_106:
	add.f32 	%f1290, %f1290, 0f3F800000;
	setp.ltu.f32 	%p273, %f126, 0f40800000;
	@%p273 bra 	$L__BB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i1664
	add.f32 	%f1212, %f1290, 0f3F800000;
	fma.rn.f32 	%f1214, %f221, 0fC0400000, %f126;
	setp.ge.f32 	%p274, %f1214, 0f00000000;
	add.f32 	%f1215, %f1212, 0f3F800000;
	selp.f32 	%f1290, %f1215, %f1212, %p274;
$L__BB0_108:                            // %__internal_fmodf_fastpath_quot.exit.i.i1667
	fma.rn.f32 	%f1292, %f1290, 0fC0000000, %f1292;
$L__BB0_113:                            // %__internal_fmodf_kernel.exit.i1686
	add.s64 	%rd31, %rd1, %rd30;
	add.s64 	%rd33, %rd1, %rd32;
	shr.u32 	%r129, %r4, 2;
	mov.b32 	%r266, %f291;
	mov.b32 	%r265, %f3;
	mov.b32 	%r284, %f360;
	mov.b32 	%r283, %f12;
	mov.b32 	%r302, %f429;
	mov.b32 	%r301, %f21;
	mov.b32 	%r320, %f498;
	mov.b32 	%r319, %f30;
	mov.b32 	%r338, %f567;
	mov.b32 	%r337, %f39;
	mov.b32 	%r356, %f636;
	mov.b32 	%r355, %f48;
	mov.b32 	%r374, %f705;
	mov.b32 	%r373, %f57;
	mov.b32 	%r392, %f773;
	mov.b32 	%r391, %f66;
	xor.b32  	%r465, %r468, -2147483648;
	xor.b32  	%r464, %r467, -2147483648;
	mov.b32 	%r512, %f1051;
	mov.b32 	%r511, %f178;
	mov.b32 	%r515, %f1048;
	mov.b32 	%r514, %f177;
	xor.b32  	%r553, %r556, -2147483648;
	xor.b32  	%r552, %r555, -2147483648;
	selp.f32 	%f217, %f1207, %f1203, %p268;
	abs.f32 	%f1229, %f1292;
	setp.gtu.f32 	%p281, %f1229, 0f7F800000;
	@%p281 bra 	$L__BB0_115;
// %bb.114:
	mov.b32 	%r596, %f218;
	and.b32  	%r597, %r596, -2147483648;
	mov.b32 	%r598, %f1292;
	or.b32  	%r599, %r597, %r598;
	mov.b32 	%f1292, %r599;
$L__BB0_115:                            // %__nv_fmodf.exit1687
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.global.u32 	%r124, [%rd31];
	ld.global.u32 	%r125, [%rd33];
	// begin inline asm
	cvt.rn.f16x2.f32 %r264, %r266, %r265;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r282, %r284, %r283;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r300, %r302, %r301;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r318, %r320, %r319;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r336, %r338, %r337;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r354, %r356, %r355;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r372, %r374, %r373;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r390, %r392, %r391;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r393, %r398, %r397;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r396, %r398, %r397;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r399, %r404, %r403;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r402, %r404, %r403;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r460, %r471, %r470;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r463, %r465, %r464;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r466, %r468, %r467;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r469, %r471, %r470;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r510, %r512, %r511;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r513, %r515, %r514;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r548, %r559, %r558;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r551, %r553, %r552;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r554, %r556, %r555;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r557, %r559, %r558;
	// end inline asm
	add.f32 	%f1230, %f1292, %f1292;
	mov.b32 	%r607, %f1230;
	and.b32  	%r608, %r607, -2147483648;
	or.b32  	%r609, %r608, 1056964608;
	mov.b32 	%f1231, %r609;
	add.f32 	%f1232, %f1230, %f1231;
	cvt.rzi.f32.f32 	%f1233, %f1232;
	abs.f32 	%f1234, %f1230;
	setp.gt.f32 	%p282, %f1234, 0f4B000000;
	selp.f32 	%f1235, %f1230, %f1233, %p282;
	cvt.rzi.f32.f32 	%f1236, %f1230;
	setp.lt.f32 	%p283, %f1234, 0f3F000000;
	selp.f32 	%f1237, %f1236, %f1235, %p283;
	cvt.rzi.s32.f32 	%r610, %f1237;
	fma.rn.f32 	%f1238, %f1237, 0fBF000000, %f1292;
	mul.f32 	%f1239, %f1238, %f1238;
	fma.rn.f32 	%f1240, %f1239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1241, %f1239, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1242, %f1240, %f1239, 0fC0A55DF6;
	fma.rn.f32 	%f1243, %f1241, %f1239, 0f4081E0CF;
	fma.rn.f32 	%f1244, %f1239, %f1238, 0f00000000;
	fma.rn.f32 	%f1245, %f1243, %f1239, 0fC09DE9E6;
	fma.rn.f32 	%f1246, %f1242, %f1244, 0f00000000;
	fma.rn.f32 	%f1247, %f1245, %f1239, 0f3F800000;
	fma.rn.f32 	%f1248, %f1238, 0f40490FDB, %f1246;
	and.b32  	%r611, %r610, 1;
	setp.eq.b32 	%p284, %r611, 1;
	selp.f32 	%f1249, %f1247, %f1248, %p284;
	selp.f32 	%f1250, %f1248, %f1247, %p284;
	and.b32  	%r612, %r610, 2;
	setp.eq.s32 	%p285, %r612, 0;
	neg.f32 	%f1251, %f1249;
	selp.f32 	%f1252, %f1249, %f1251, %p285;
	add.s32 	%r613, %r610, 1;
	and.b32  	%r614, %r613, 2;
	setp.eq.s32 	%p286, %r614, 0;
	sub.f32 	%f1254, %f250, %f1250;
	selp.f32 	%f1255, %f1250, %f1254, %p286;
	cvt.rzi.f32.f32 	%f1256, %f1292;
	setp.eq.f32 	%p287, %f1256, %f1292;
	mul.f32 	%f1257, %f1292, 0f00000000;
	selp.f32 	%f1258, %f1257, %f1252, %p287;
	abs.f32 	%f1259, %f1292;
	setp.gt.f32 	%p288, %f1259, 0f4B800000;
	add.f32 	%f1260, %f1258, 0f3F800000;
	selp.f32 	%f1261, %f1260, %f1255, %p288;
	mov.b32 	%r602, %f1261;
	mov.b32 	%r601, %f217;
	// begin inline asm
	cvt.rn.f16x2.f32 %r600, %r602, %r601;
	// end inline asm
	mov.b32 	%r605, %f1258;
	mov.b32 	%r604, %f216;
	// begin inline asm
	cvt.rn.f16x2.f32 %r603, %r605, %r604;
	// end inline asm
	shl.b32 	%r615, %r220, 13;
	shl.b32 	%r616, %r224, 7;
	and.b32  	%r617, %r118, 28;
	and.b32  	%r618, %r122, 96;
	or.b32  	%r619, %r618, %r617;
	shl.b32 	%r620, %r4, 3;
	and.b32  	%r621, %r620, 64;
	or.b32  	%r71, %r621, %r1;
	or.b32  	%r622, %r619, %r615;
	add.s32 	%r72, %r622, %r616;
	bfe.s32 	%r623, %r4, 3, 1;
	and.b32  	%r73, %r4, 8;
	shl.b32 	%r624, %r4, 4;
	or.b32  	%r625, %r73, %r624;
	shr.u32 	%r626, %r625, 2;
	and.b32  	%r627, %r626, 30;
	and.b32  	%r628, %r129, 6;
	or.b32  	%r629, %r120, %r628;
	and.b32  	%r630, %r624, 48;
	shr.u32 	%r631, %r1, 1;
	and.b32  	%r632, %r2, 32;
	or.b32  	%r633, %r632, %r631;
	or.b32  	%r634, %r633, 8;
	or.b32  	%r635, %r633, 16;
	or.b32  	%r636, %r633, 24;
	or.b32  	%r74, %r630, %r629;
	shr.u32 	%r637, %r123, 1;
	mul.lo.s32 	%r638, %r637, 65;
	add.s32 	%r75, %r633, %r638;
	add.s32 	%r76, %r634, %r638;
	add.s32 	%r77, %r635, %r638;
	add.s32 	%r78, %r636, %r638;
	and.b16  	%rs26, %rs1, 63;
	mul.lo.s16 	%rs27, %rs26, 65;
	cvt.u32.u16 	%r639, %rs27;
	add.s32 	%r79, %r633, %r639;
	add.s32 	%r80, %r634, %r639;
	add.s32 	%r81, %r635, %r639;
	add.s32 	%r82, %r636, %r639;
	shl.b32 	%r640, %r1, 1;
	or.b32  	%r641, %r131, %r640;
	mul.lo.s32 	%r642, %r641, 65;
	add.s32 	%r643, %r627, %r642;
	mul.wide.u32 	%rd34, %r643, 4;
	mov.u64 	%rd35, shmem;
	add.s64 	%rd4, %rd35, %rd34;
	cvt.u64.u32 	%rd36, %r627;
	cvt.u64.u32 	%rd37, %r642;
	add.s64 	%rd38, %rd37, %rd36;
	shl.b64 	%rd39, %rd38, 2;
	add.s64 	%rd5, %rd35, %rd39;
	or.b32  	%r644, %r641, 32;
	mul.lo.s32 	%r645, %r644, 65;
	add.s32 	%r646, %r627, %r645;
	mul.wide.u32 	%rd40, %r646, 4;
	add.s64 	%rd6, %rd35, %rd40;
	cvt.u64.u32 	%rd41, %r645;
	add.s64 	%rd42, %rd41, %rd36;
	shl.b64 	%rd43, %rd42, 2;
	add.s64 	%rd7, %rd35, %rd43;
	shr.u32 	%r647, %r120, 3;
	setp.gt.u32 	%p289, %r4, 15;
	bfe.u32 	%r648, %r624, 5, 1;
	and.b32  	%r83, %r119, 32;
	shr.u32 	%r649, %r1, 3;
	mul.lo.s32 	%r650, %r649, 260;
	bfe.s32 	%r651, %r1, 1, 1;
	and.b32  	%r652, %r1, 2;
	setp.eq.s32 	%p290, %r652, 0;
	and.b32  	%r653, %r651, 1040;
	bfe.s32 	%r654, %r1, 2, 1;
	and.b32  	%r655, %r1, 4;
	setp.eq.s32 	%p291, %r655, 0;
	and.b32  	%r656, %r654, 520;
	mul.lo.s32 	%r657, %r131, 65;
	and.b32  	%r658, %r1, 1;
	neg.s32 	%r659, %r658;
	and.b32  	%r660, %r659, 2080;
	or.b32  	%r661, %r660, %r627;
	add.s32 	%r662, %r661, %r653;
	add.s32 	%r663, %r662, %r650;
	add.s32 	%r664, %r663, %r656;
	add.s32 	%r665, %r664, %r657;
	mul.wide.u32 	%rd44, %r665, 4;
	add.s64 	%rd8, %rd35, %rd44;
	cvt.u64.u32 	%rd45, %r657;
	selp.b64 	%rd46, 0, 520, %p291;
	cvt.u64.u32 	%rd47, %r650;
	selp.b64 	%rd48, 0, 1040, %p290;
	cvt.u64.u32 	%rd49, %r661;
	add.s64 	%rd50, %rd49, %rd48;
	add.s64 	%rd51, %rd50, %rd47;
	add.s64 	%rd52, %rd51, %rd46;
	add.s64 	%rd53, %rd52, %rd45;
	shl.b64 	%rd54, %rd53, 2;
	add.s64 	%rd9, %rd35, %rd54;
	cvt.u64.u32 	%rd55, %r663;
	add.s64 	%rd56, %rd55, %rd46;
	add.s64 	%rd57, %rd56, %rd45;
	shl.b64 	%rd58, %rd57, 2;
	add.s64 	%rd10, %rd35, %rd58;
	add.s32 	%r666, %r665, 162;
	mul.wide.u32 	%rd59, %r666, 4;
	add.s64 	%rd11, %rd35, %rd59;
	add.s32 	%r667, %r665, 131;
	mul.wide.u32 	%rd60, %r667, 4;
	add.s64 	%rd12, %rd35, %rd60;
	add.s32 	%r668, %r665, 163;
	mul.wide.u32 	%rd61, %r668, 4;
	add.s64 	%rd13, %rd35, %rd61;
	add.s32 	%r669, %r665, 4193;
	mul.wide.u32 	%rd62, %r669, 4;
	add.s64 	%rd14, %rd35, %rd62;
	add.s32 	%r670, %r665, 4162;
	mul.wide.u32 	%rd63, %r670, 4;
	add.s64 	%rd15, %rd35, %rd63;
	add.s32 	%r671, %r665, 4194;
	mul.wide.u32 	%rd64, %r671, 4;
	add.s64 	%rd16, %rd35, %rd64;
	add.s32 	%r672, %r665, 4291;
	mul.wide.u32 	%rd65, %r672, 4;
	add.s64 	%rd17, %rd35, %rd65;
	add.s32 	%r673, %r665, 4323;
	mul.wide.u32 	%rd66, %r673, 4;
	add.s64 	%rd18, %rd35, %rd66;
	add.s32 	%r674, %r665, 4292;
	mul.wide.u32 	%rd67, %r674, 4;
	add.s64 	%rd19, %rd35, %rd67;
	add.s32 	%r675, %r665, 4324;
	mul.wide.u32 	%rd68, %r675, 4;
	add.s64 	%rd20, %rd35, %rd68;
	mul.lo.s32 	%r676, %r647, 260;
	and.b32  	%r677, %r623, 1040;
	setp.eq.s32 	%p292, %r128, 0;
	selp.b32 	%r678, 0, 130, %p292;
	selp.b32 	%r679, 520, 0, %p289;
	mul.lo.s32 	%r84, %r648, 65;
	or.b32  	%r680, %r633, %r677;
	add.s32 	%r681, %r680, %r676;
	add.s32 	%r682, %r681, %r678;
	add.s32 	%r683, %r682, %r679;
	add.s32 	%r85, %r683, %r84;
	or.b32  	%r684, %r634, %r677;
	add.s32 	%r685, %r684, %r676;
	add.s32 	%r686, %r685, %r678;
	add.s32 	%r687, %r686, %r679;
	add.s32 	%r86, %r687, %r84;
	add.s32 	%r688, %r635, %r677;
	add.s32 	%r689, %r688, %r676;
	add.s32 	%r690, %r689, %r678;
	add.s32 	%r691, %r690, %r679;
	add.s32 	%r87, %r691, %r84;
	add.s32 	%r692, %r636, %r677;
	add.s32 	%r693, %r692, %r676;
	add.s32 	%r694, %r693, %r678;
	add.s32 	%r695, %r694, %r679;
	add.s32 	%r88, %r695, %r84;
	add.s32 	%r89, %r633, 2080;
	add.s32 	%r90, %r634, 2080;
	add.s32 	%r91, %r635, 2080;
	add.s32 	%r92, %r636, 2080;
	add.s32 	%r696, %r646, 4193;
	mul.wide.u32 	%rd69, %r696, 4;
	add.s64 	%rd21, %rd35, %rd69;
	mov.u32 	%r16286, 0;
	setp.eq.s32 	%p294, %r73, 0;
	mov.u16 	%rs2387, 25600;
	mov.u16 	%rs2179, 21504;
	mov.u16 	%rs2395, 18432;
	mov.u32 	%r16287, %r16286;
	mov.u32 	%r16288, %r16286;
	mov.u32 	%r16289, %r16286;
	mov.u32 	%r16290, %r16286;
	mov.u32 	%r16291, %r16286;
	mov.u32 	%r16292, %r16286;
	mov.u32 	%r16293, %r16286;
	mov.u32 	%r16294, %r16286;
	mov.u32 	%r16295, %r16286;
	mov.u32 	%r16296, %r16286;
	mov.u32 	%r16297, %r16286;
	mov.u32 	%r16298, %r16286;
	mov.u32 	%r16299, %r16286;
	mov.u32 	%r16300, %r16286;
	mov.u32 	%r16301, %r16286;
	mov.u32 	%r16302, %r16286;
	mov.u32 	%r16303, %r16286;
	mov.u32 	%r16304, %r16286;
	mov.u32 	%r16305, %r16286;
	mov.u32 	%r16306, %r16286;
	mov.u32 	%r16307, %r16286;
	mov.u32 	%r16308, %r16286;
	mov.u32 	%r16309, %r16286;
	mov.u32 	%r16310, %r16286;
$L__BB0_116:                            // %L2125
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_159 Depth 2
	add.s32 	%r697, %r16310, %r220;
	setp.lt.s32 	%p293, %r697, %r221;
	@%p293 bra 	$L__BB0_158;
	bra.uni 	$L__BB0_117;
$L__BB0_158:                            // %pass837
                                        //   in Loop: Header=BB0_116 Depth=1
	or.b32  	%r764, %r16310, %r83;
	or.b32  	%r765, %r71, %r764;
	shl.b32 	%r766, %r765, 13;
	add.s32 	%r767, %r72, %r766;
	shr.s32 	%r768, %r767, 31;
	shr.u32 	%r769, %r768, 4;
	add.s32 	%r770, %r767, %r769;
	shr.s32 	%r771, %r770, 28;
	setp.lt.s32 	%p295, %r767, 0;
	and.b32  	%r772, %r770, -268435456;
	setp.ne.s32 	%p296, %r772, %r767;
	and.pred  	%p297, %p295, %p296;
	selp.u32 	%r773, 1, 0, %p297;
	sub.s32 	%r774, %r773, %r771;
	shl.b32 	%r775, %r774, 28;
	add.s32 	%r776, %r775, %r767;
	mul.wide.s32 	%rd70, %r776, 4;
	add.s64 	%rd71, %rd2, %rd70;
	ld.global.v4.u32 	{%r777, %r778, %r779, %r780}, [%rd71];
	or.b32  	%r781, %r766, 131072;
	add.s32 	%r782, %r72, %r781;
	shr.s32 	%r783, %r782, 31;
	shr.u32 	%r784, %r783, 4;
	add.s32 	%r785, %r782, %r784;
	shr.s32 	%r786, %r785, 28;
	setp.lt.s32 	%p298, %r782, 0;
	and.b32  	%r787, %r785, -268435456;
	setp.ne.s32 	%p299, %r787, %r782;
	and.pred  	%p300, %p298, %p299;
	selp.u32 	%r788, 1, 0, %p300;
	sub.s32 	%r789, %r788, %r786;
	shl.b32 	%r790, %r789, 28;
	add.s32 	%r791, %r790, %r782;
	mul.wide.s32 	%rd72, %r791, 4;
	add.s64 	%rd73, %rd2, %rd72;
	ld.global.v4.u32 	{%r792, %r793, %r794, %r795}, [%rd73];
	or.b32  	%r796, %r766, 1048576;
	add.s32 	%r797, %r72, %r796;
	shr.s32 	%r798, %r797, 31;
	shr.u32 	%r799, %r798, 4;
	add.s32 	%r800, %r797, %r799;
	shr.s32 	%r801, %r800, 28;
	setp.lt.s32 	%p301, %r797, 0;
	and.b32  	%r802, %r800, -268435456;
	setp.ne.s32 	%p302, %r802, %r797;
	and.pred  	%p303, %p301, %p302;
	selp.u32 	%r803, 1, 0, %p303;
	sub.s32 	%r804, %r803, %r801;
	shl.b32 	%r805, %r804, 28;
	add.s32 	%r806, %r805, %r797;
	mul.wide.s32 	%rd74, %r806, 4;
	add.s64 	%rd75, %rd2, %rd74;
	ld.global.v4.u32 	{%r807, %r808, %r809, %r810}, [%rd75];
	or.b32  	%r811, %r766, 1179648;
	add.s32 	%r812, %r72, %r811;
	shr.s32 	%r813, %r812, 31;
	shr.u32 	%r814, %r813, 4;
	add.s32 	%r815, %r812, %r814;
	shr.s32 	%r816, %r815, 28;
	setp.lt.s32 	%p304, %r812, 0;
	and.b32  	%r817, %r815, -268435456;
	setp.ne.s32 	%p305, %r817, %r812;
	and.pred  	%p306, %p304, %p305;
	selp.u32 	%r818, 1, 0, %p306;
	sub.s32 	%r819, %r818, %r816;
	shl.b32 	%r820, %r819, 28;
	add.s32 	%r821, %r820, %r812;
	mul.wide.s32 	%rd76, %r821, 4;
	add.s64 	%rd77, %rd2, %rd76;
	ld.global.v4.u32 	{%r822, %r823, %r824, %r825}, [%rd77];
	selp.b32 	%r826, %r779, %r777, %p294;
	shfl.sync.bfly.b32	%r827, %r826, 8, 31, -1;
	selp.b32 	%r700, %r777, %r827, %p294;
	selp.b32 	%r701, %r827, %r779, %p294;
	selp.b32 	%r828, %r780, %r778, %p294;
	shfl.sync.bfly.b32	%r829, %r828, 8, 31, -1;
	selp.b32 	%r708, %r778, %r829, %p294;
	selp.b32 	%r709, %r829, %r780, %p294;
	selp.b32 	%r830, %r794, %r792, %p294;
	shfl.sync.bfly.b32	%r831, %r830, 8, 31, -1;
	selp.b32 	%r716, %r792, %r831, %p294;
	selp.b32 	%r717, %r831, %r794, %p294;
	selp.b32 	%r832, %r795, %r793, %p294;
	shfl.sync.bfly.b32	%r833, %r832, 8, 31, -1;
	selp.b32 	%r724, %r793, %r833, %p294;
	selp.b32 	%r725, %r833, %r795, %p294;
	selp.b32 	%r834, %r809, %r807, %p294;
	shfl.sync.bfly.b32	%r835, %r834, 8, 31, -1;
	selp.b32 	%r732, %r807, %r835, %p294;
	selp.b32 	%r733, %r835, %r809, %p294;
	selp.b32 	%r836, %r810, %r808, %p294;
	shfl.sync.bfly.b32	%r837, %r836, 8, 31, -1;
	selp.b32 	%r740, %r808, %r837, %p294;
	selp.b32 	%r741, %r837, %r810, %p294;
	selp.b32 	%r838, %r824, %r822, %p294;
	shfl.sync.bfly.b32	%r839, %r838, 8, 31, -1;
	selp.b32 	%r748, %r822, %r839, %p294;
	selp.b32 	%r749, %r839, %r824, %p294;
	selp.b32 	%r840, %r825, %r823, %p294;
	shfl.sync.bfly.b32	%r841, %r840, 8, 31, -1;
	selp.b32 	%r756, %r823, %r841, %p294;
	selp.b32 	%r757, %r841, %r825, %p294;
	mov.u32 	%r16198, 21520;
	// begin inline asm
	prmt.b32 %r699, %r700, %r701, %r16198;
	// end inline asm
	mov.u32 	%r16202, 30258;
	// begin inline asm
	prmt.b32 %r703, %r700, %r701, %r16202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r707, %r708, %r709, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r711, %r708, %r709, %r16202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r715, %r716, %r717, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r719, %r716, %r717, %r16202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r723, %r724, %r725, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r727, %r724, %r725, %r16202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r731, %r732, %r733, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r735, %r732, %r733, %r16202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r739, %r740, %r741, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r743, %r740, %r741, %r16202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r747, %r748, %r749, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r751, %r748, %r749, %r16202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r755, %r756, %r757, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r759, %r756, %r757, %r16202;
	// end inline asm
	st.shared.u32 	[%rd8], %r699;
	st.shared.u32 	[%rd9+128], %r703;
	st.shared.u32 	[%rd9+4], %r707;
	st.shared.u32 	[%rd9+132], %r711;
	st.shared.u32 	[%rd10+520], %r715;
	st.shared.u32 	[%rd11], %r719;
	st.shared.u32 	[%rd12], %r723;
	st.shared.u32 	[%rd13], %r727;
	st.shared.u32 	[%rd8+16644], %r731;
	st.shared.u32 	[%rd14], %r735;
	st.shared.u32 	[%rd15], %r739;
	st.shared.u32 	[%rd16], %r743;
	st.shared.u32 	[%rd17], %r747;
	st.shared.u32 	[%rd18], %r751;
	st.shared.u32 	[%rd19], %r755;
	st.shared.u32 	[%rd20], %r759;
	bar.sync 	0;
	or.b32  	%r842, %r74, %r16310;
	or.b32  	%r168, %r842, 1;
	mov.u32 	%r3187, 0;
	mov.u32 	%r16319, %r3187;
$L__BB0_159:                            // %pass6356
                                        //   Parent Loop BB0_116 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.eq.s32 	%p307, %r16319, 0;
	selp.b32 	%r16107, 0, 4161, %p307;
	add.s32 	%r16108, %r85, %r16107;
	mul.wide.u32 	%rd78, %r16108, 4;
	add.s64 	%rd80, %rd35, %rd78;
	ld.shared.u32 	%r16109, [%rd80];
	add.s32 	%r16110, %r86, %r16107;
	mul.wide.u32 	%rd81, %r16110, 4;
	add.s64 	%rd82, %rd35, %rd81;
	ld.shared.u32 	%r16111, [%rd82];
	add.s32 	%r16112, %r87, %r16107;
	mul.wide.u32 	%rd83, %r16112, 4;
	add.s64 	%rd84, %rd35, %rd83;
	ld.shared.u32 	%r16113, [%rd84];
	add.s32 	%r16114, %r88, %r16107;
	mul.wide.u32 	%rd85, %r16114, 4;
	add.s64 	%rd86, %rd35, %rd85;
	ld.shared.u32 	%r16115, [%rd86];
	add.s32 	%r16116, %r168, %r16319;
	bfe.s32 	%r16117, %r16116, 3, 1;
	and.b32  	%r16118, %r16117, 260;
	bfe.s32 	%r16119, %r16116, 1, 1;
	and.b32  	%r16120, %r16119, 1040;
	bfe.s32 	%r16121, %r16116, 4, 1;
	and.b32  	%r16122, %r16121, 130;
	bfe.s32 	%r16123, %r16116, 2, 1;
	and.b32  	%r16124, %r16123, 520;
	bfe.s32 	%r16125, %r16116, 7, 1;
	and.b32  	%r16126, %r16125, 4161;
	or.b32  	%r16127, %r89, %r16120;
	add.s32 	%r16128, %r16127, %r16118;
	add.s32 	%r16129, %r16128, %r16122;
	add.s32 	%r16130, %r16129, %r16124;
	add.s32 	%r16131, %r16130, %r84;
	add.s32 	%r16132, %r16131, %r16126;
	mul.wide.u32 	%rd87, %r16132, 4;
	add.s64 	%rd88, %rd35, %rd87;
	ld.shared.u32 	%r16133, [%rd88];
	or.b32  	%r16134, %r90, %r16120;
	add.s32 	%r16135, %r16134, %r16118;
	add.s32 	%r16136, %r16135, %r16122;
	add.s32 	%r16137, %r16136, %r16124;
	add.s32 	%r16138, %r16137, %r84;
	add.s32 	%r16139, %r16138, %r16126;
	mul.wide.u32 	%rd89, %r16139, 4;
	add.s64 	%rd90, %rd35, %rd89;
	ld.shared.u32 	%r16140, [%rd90];
	add.s32 	%r16141, %r91, %r16120;
	add.s32 	%r16142, %r16141, %r16118;
	add.s32 	%r16143, %r16142, %r16122;
	add.s32 	%r16144, %r16143, %r16124;
	add.s32 	%r16145, %r16144, %r84;
	add.s32 	%r16146, %r16145, %r16126;
	mul.wide.u32 	%rd91, %r16146, 4;
	add.s64 	%rd92, %rd35, %rd91;
	ld.shared.u32 	%r16147, [%rd92];
	add.s32 	%r16148, %r92, %r16120;
	add.s32 	%r16149, %r16148, %r16118;
	add.s32 	%r16150, %r16149, %r16122;
	add.s32 	%r16151, %r16150, %r16124;
	add.s32 	%r16152, %r16151, %r84;
	add.s32 	%r16153, %r16152, %r16126;
	mul.wide.u32 	%rd93, %r16153, 4;
	add.s64 	%rd94, %rd35, %rd93;
	ld.shared.u32 	%r16154, [%rd94];
	// begin inline asm
	mov.b32 %r848, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r859, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r847, %r16109, -2004318072;
	mov.u32 	%r846, 983055;
	// begin inline asm
	lop3.b32 %r845, %r846, %r847, %r848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r849, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r850, %r848, %r849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r853, %r845, %r850;
	// end inline asm
	mov.u32 	%r857, 15728880;
	// begin inline asm
	lop3.b32 %r856, %r857, %r847, %r859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r860, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r861, %r859, %r860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r864, %r856, %r861;
	// end inline asm
	shr.u32 	%r869, %r847, 8;
	// begin inline asm
	lop3.b32 %r867, %r846, %r869, %r848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r871, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r872, %r848, %r871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r875, %r867, %r872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r878, %r857, %r869, %r859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r882, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r883, %r859, %r882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r886, %r878, %r883;
	// end inline asm
	// begin inline asm
	mov.b32 %r894, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r905, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r893, %r16111, -2004318072;
	// begin inline asm
	lop3.b32 %r891, %r846, %r893, %r894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r895, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r896, %r894, %r895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r899, %r891, %r896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r902, %r857, %r893, %r905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r907, %r905, %r906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r910, %r902, %r907;
	// end inline asm
	shr.u32 	%r915, %r893, 8;
	// begin inline asm
	lop3.b32 %r913, %r846, %r915, %r894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r917, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r918, %r894, %r917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r921, %r913, %r918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r924, %r857, %r915, %r905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r928, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r929, %r905, %r928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r932, %r924, %r929;
	// end inline asm
	// begin inline asm
	mov.b32 %r940, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r951, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r939, %r16113, -2004318072;
	// begin inline asm
	lop3.b32 %r937, %r846, %r939, %r940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r941, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r942, %r940, %r941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r945, %r937, %r942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r948, %r857, %r939, %r951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r953, %r951, %r952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r956, %r948, %r953;
	// end inline asm
	shr.u32 	%r961, %r939, 8;
	// begin inline asm
	lop3.b32 %r959, %r846, %r961, %r940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r963, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r964, %r940, %r963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r967, %r959, %r964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r970, %r857, %r961, %r951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r974, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r975, %r951, %r974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r978, %r970, %r975;
	// end inline asm
	// begin inline asm
	mov.b32 %r986, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r997, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r985, %r16115, -2004318072;
	// begin inline asm
	lop3.b32 %r983, %r846, %r985, %r986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r987, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r988, %r986, %r987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r991, %r983, %r988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r994, %r857, %r985, %r997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r998, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r999, %r997, %r998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1002, %r994, %r999;
	// end inline asm
	shr.u32 	%r1007, %r985, 8;
	// begin inline asm
	lop3.b32 %r1005, %r846, %r1007, %r986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1009, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1010, %r986, %r1009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1013, %r1005, %r1010;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1016, %r857, %r1007, %r997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1020, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1021, %r997, %r1020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1024, %r1016, %r1021;
	// end inline asm
	// begin inline asm
	mov.b32 %r1032, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1043, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1031, %r16133, -2004318072;
	// begin inline asm
	lop3.b32 %r1029, %r846, %r1031, %r1032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1033, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1034, %r1032, %r1033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1037, %r1029, %r1034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1040, %r857, %r1031, %r1043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1044, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1045, %r1043, %r1044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1048, %r1040, %r1045;
	// end inline asm
	shr.u32 	%r1053, %r1031, 8;
	// begin inline asm
	lop3.b32 %r1051, %r846, %r1053, %r1032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1055, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1056, %r1032, %r1055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1059, %r1051, %r1056;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1062, %r857, %r1053, %r1043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1066, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1067, %r1043, %r1066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1070, %r1062, %r1067;
	// end inline asm
	// begin inline asm
	mov.b32 %r1078, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1089, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1077, %r16140, -2004318072;
	// begin inline asm
	lop3.b32 %r1075, %r846, %r1077, %r1078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1079, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1080, %r1078, %r1079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1083, %r1075, %r1080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1086, %r857, %r1077, %r1089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1090, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1091, %r1089, %r1090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1094, %r1086, %r1091;
	// end inline asm
	shr.u32 	%r1099, %r1077, 8;
	// begin inline asm
	lop3.b32 %r1097, %r846, %r1099, %r1078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1101, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1102, %r1078, %r1101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1105, %r1097, %r1102;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1108, %r857, %r1099, %r1089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1112, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1113, %r1089, %r1112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1116, %r1108, %r1113;
	// end inline asm
	// begin inline asm
	mov.b32 %r1124, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1135, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1123, %r16147, -2004318072;
	// begin inline asm
	lop3.b32 %r1121, %r846, %r1123, %r1124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1125, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1126, %r1124, %r1125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1129, %r1121, %r1126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1132, %r857, %r1123, %r1135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1136, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1137, %r1135, %r1136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1140, %r1132, %r1137;
	// end inline asm
	shr.u32 	%r1145, %r1123, 8;
	// begin inline asm
	lop3.b32 %r1143, %r846, %r1145, %r1124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1147, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1148, %r1124, %r1147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1151, %r1143, %r1148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1154, %r857, %r1145, %r1135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1158, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1159, %r1135, %r1158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1162, %r1154, %r1159;
	// end inline asm
	// begin inline asm
	mov.b32 %r1170, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1181, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1169, %r16154, -2004318072;
	// begin inline asm
	lop3.b32 %r1167, %r846, %r1169, %r1170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1171, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1172, %r1170, %r1171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1175, %r1167, %r1172;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1178, %r857, %r1169, %r1181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1182, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1183, %r1181, %r1182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1186, %r1178, %r1183;
	// end inline asm
	shr.u32 	%r1191, %r1169, 8;
	// begin inline asm
	lop3.b32 %r1189, %r846, %r1191, %r1170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1193, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1194, %r1170, %r1193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1197, %r1189, %r1194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1200, %r857, %r1191, %r1181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1204, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1205, %r1181, %r1204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1208, %r1200, %r1205;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1211, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1213, %r1211, %r853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1216, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1218, %r1216, %r864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1221, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1223, %r1221, %r875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1226, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1228, %r1226, %r886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1231, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1233, %r1231, %r899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1236, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1238, %r1236, %r910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1241, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1243, %r1241, %r921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1246, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1248, %r1246, %r932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1251, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1253, %r1251, %r945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1256, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1258, %r1256, %r956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1261, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1263, %r1261, %r967;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1266, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1268, %r1266, %r978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1271, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1273, %r1271, %r991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1276, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1278, %r1276, %r1002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1281, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1283, %r1281, %r1013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1286, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1288, %r1286, %r1024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1291, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1293, %r1291, %r1037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1296, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1298, %r1296, %r1048;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1301, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1303, %r1301, %r1059;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1306, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1308, %r1306, %r1070;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1311, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1313, %r1311, %r1083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1316, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1318, %r1316, %r1094;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1321, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1323, %r1321, %r1105;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1326, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1328, %r1326, %r1116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1331, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1333, %r1331, %r1129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1336, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1338, %r1336, %r1140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1341, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1343, %r1341, %r1151;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1346, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1348, %r1346, %r1162;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1351, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1353, %r1351, %r1175;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1356, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1358, %r1356, %r1186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1361, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1363, %r1361, %r1197;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1366, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1368, %r1366, %r1208;
	// end inline asm
	// begin inline asm
	mov.b32 %r1376, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1387, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1375, %r16286, -2004318072;
	// begin inline asm
	lop3.b32 %r1373, %r846, %r1375, %r1376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1377, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1378, %r1376, %r1377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1381, %r1373, %r1378;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1384, %r857, %r1375, %r1387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1388, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1389, %r1387, %r1388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1392, %r1384, %r1389;
	// end inline asm
	shr.u32 	%r1397, %r1375, 8;
	// begin inline asm
	lop3.b32 %r1395, %r846, %r1397, %r1376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1399, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1400, %r1376, %r1399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1403, %r1395, %r1400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1406, %r857, %r1397, %r1387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1410, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1411, %r1387, %r1410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1414, %r1406, %r1411;
	// end inline asm
	// begin inline asm
	mov.b32 %r1422, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1433, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1421, %r16287, -2004318072;
	// begin inline asm
	lop3.b32 %r1419, %r846, %r1421, %r1422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1423, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1424, %r1422, %r1423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1427, %r1419, %r1424;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1430, %r857, %r1421, %r1433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1434, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1435, %r1433, %r1434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1438, %r1430, %r1435;
	// end inline asm
	shr.u32 	%r1443, %r1421, 8;
	// begin inline asm
	lop3.b32 %r1441, %r846, %r1443, %r1422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1445, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1446, %r1422, %r1445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1449, %r1441, %r1446;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1452, %r857, %r1443, %r1433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1456, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1457, %r1433, %r1456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1460, %r1452, %r1457;
	// end inline asm
	// begin inline asm
	mov.b32 %r1468, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1479, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1467, %r16288, -2004318072;
	// begin inline asm
	lop3.b32 %r1465, %r846, %r1467, %r1468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1469, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1470, %r1468, %r1469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1473, %r1465, %r1470;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1476, %r857, %r1467, %r1479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1480, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1481, %r1479, %r1480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1484, %r1476, %r1481;
	// end inline asm
	shr.u32 	%r1489, %r1467, 8;
	// begin inline asm
	lop3.b32 %r1487, %r846, %r1489, %r1468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1491, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1492, %r1468, %r1491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1495, %r1487, %r1492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1498, %r857, %r1489, %r1479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1502, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1503, %r1479, %r1502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1506, %r1498, %r1503;
	// end inline asm
	// begin inline asm
	mov.b32 %r1514, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1525, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1513, %r16289, -2004318072;
	// begin inline asm
	lop3.b32 %r1511, %r846, %r1513, %r1514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1515, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1516, %r1514, %r1515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1519, %r1511, %r1516;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1522, %r857, %r1513, %r1525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1526, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1527, %r1525, %r1526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1530, %r1522, %r1527;
	// end inline asm
	shr.u32 	%r1535, %r1513, 8;
	// begin inline asm
	lop3.b32 %r1533, %r846, %r1535, %r1514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1537, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1538, %r1514, %r1537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1541, %r1533, %r1538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1544, %r857, %r1535, %r1525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1548, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1549, %r1525, %r1548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1552, %r1544, %r1549;
	// end inline asm
	// begin inline asm
	mov.b32 %r1560, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1571, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1559, %r16298, -2004318072;
	// begin inline asm
	lop3.b32 %r1557, %r846, %r1559, %r1560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1561, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1562, %r1560, %r1561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1565, %r1557, %r1562;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1568, %r857, %r1559, %r1571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1572, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1573, %r1571, %r1572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1576, %r1568, %r1573;
	// end inline asm
	shr.u32 	%r1581, %r1559, 8;
	// begin inline asm
	lop3.b32 %r1579, %r846, %r1581, %r1560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1583, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1584, %r1560, %r1583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1587, %r1579, %r1584;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1590, %r857, %r1581, %r1571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1594, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1595, %r1571, %r1594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1598, %r1590, %r1595;
	// end inline asm
	// begin inline asm
	mov.b32 %r1606, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1617, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1605, %r16299, -2004318072;
	// begin inline asm
	lop3.b32 %r1603, %r846, %r1605, %r1606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1607, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1608, %r1606, %r1607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1611, %r1603, %r1608;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1614, %r857, %r1605, %r1617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1618, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1619, %r1617, %r1618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1622, %r1614, %r1619;
	// end inline asm
	shr.u32 	%r1627, %r1605, 8;
	// begin inline asm
	lop3.b32 %r1625, %r846, %r1627, %r1606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1629, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1630, %r1606, %r1629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1633, %r1625, %r1630;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1636, %r857, %r1627, %r1617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1640, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1641, %r1617, %r1640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1644, %r1636, %r1641;
	// end inline asm
	// begin inline asm
	mov.b32 %r1652, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1663, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1651, %r16300, -2004318072;
	// begin inline asm
	lop3.b32 %r1649, %r846, %r1651, %r1652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1653, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1654, %r1652, %r1653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1657, %r1649, %r1654;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1660, %r857, %r1651, %r1663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1664, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1665, %r1663, %r1664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1668, %r1660, %r1665;
	// end inline asm
	shr.u32 	%r1673, %r1651, 8;
	// begin inline asm
	lop3.b32 %r1671, %r846, %r1673, %r1652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1675, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1676, %r1652, %r1675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1679, %r1671, %r1676;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1682, %r857, %r1673, %r1663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1686, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1687, %r1663, %r1686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1690, %r1682, %r1687;
	// end inline asm
	// begin inline asm
	mov.b32 %r1698, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1709, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1697, %r16301, -2004318072;
	// begin inline asm
	lop3.b32 %r1695, %r846, %r1697, %r1698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1699, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1700, %r1698, %r1699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1703, %r1695, %r1700;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1706, %r857, %r1697, %r1709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1710, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1711, %r1709, %r1710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1714, %r1706, %r1711;
	// end inline asm
	shr.u32 	%r1719, %r1697, 8;
	// begin inline asm
	lop3.b32 %r1717, %r846, %r1719, %r1698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1721, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1722, %r1698, %r1721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1725, %r1717, %r1722;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1728, %r857, %r1719, %r1709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1732, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1733, %r1709, %r1732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1736, %r1728, %r1733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1739, %r264, %r1381, %r1213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1743, %r264, %r1392, %r1218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1747, %r264, %r1403, %r1223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1751, %r264, %r1414, %r1228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1755, %r264, %r1427, %r1233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1759, %r264, %r1438, %r1238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1763, %r264, %r1449, %r1243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1767, %r264, %r1460, %r1248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1771, %r264, %r1473, %r1253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1775, %r264, %r1484, %r1258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r264, %r1495, %r1263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1783, %r264, %r1506, %r1268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r264, %r1519, %r1273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r264, %r1530, %r1278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r264, %r1541, %r1283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1799, %r264, %r1552, %r1288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r282, %r1565, %r1293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1807, %r282, %r1576, %r1298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1811, %r282, %r1587, %r1303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1815, %r282, %r1598, %r1308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1819, %r282, %r1611, %r1313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1823, %r282, %r1622, %r1318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1827, %r282, %r1633, %r1323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1831, %r282, %r1644, %r1328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1835, %r282, %r1657, %r1333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1839, %r282, %r1668, %r1338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1843, %r282, %r1679, %r1343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1847, %r282, %r1690, %r1348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1851, %r282, %r1703, %r1353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1855, %r282, %r1714, %r1358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1859, %r282, %r1725, %r1363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1863, %r282, %r1736, %r1368;
	// end inline asm
	// begin inline asm
	mov.b32 %r1872, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1883, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1871, %r16290, -2004318072;
	// begin inline asm
	lop3.b32 %r1869, %r846, %r1871, %r1872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1873, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1874, %r1872, %r1873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1877, %r1869, %r1874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1880, %r857, %r1871, %r1883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1884, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1885, %r1883, %r1884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1888, %r1880, %r1885;
	// end inline asm
	shr.u32 	%r1893, %r1871, 8;
	// begin inline asm
	lop3.b32 %r1891, %r846, %r1893, %r1872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1895, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1896, %r1872, %r1895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1899, %r1891, %r1896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1902, %r857, %r1893, %r1883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1906, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1907, %r1883, %r1906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1910, %r1902, %r1907;
	// end inline asm
	// begin inline asm
	mov.b32 %r1918, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1929, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1917, %r16291, -2004318072;
	// begin inline asm
	lop3.b32 %r1915, %r846, %r1917, %r1918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1919, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1920, %r1918, %r1919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1923, %r1915, %r1920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1926, %r857, %r1917, %r1929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1930, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1931, %r1929, %r1930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1934, %r1926, %r1931;
	// end inline asm
	shr.u32 	%r1939, %r1917, 8;
	// begin inline asm
	lop3.b32 %r1937, %r846, %r1939, %r1918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1941, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1942, %r1918, %r1941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1945, %r1937, %r1942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1948, %r857, %r1939, %r1929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1952, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1953, %r1929, %r1952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1956, %r1948, %r1953;
	// end inline asm
	// begin inline asm
	mov.b32 %r1964, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1975, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1963, %r16292, -2004318072;
	// begin inline asm
	lop3.b32 %r1961, %r846, %r1963, %r1964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1965, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1966, %r1964, %r1965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1969, %r1961, %r1966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1972, %r857, %r1963, %r1975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1976, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1977, %r1975, %r1976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1980, %r1972, %r1977;
	// end inline asm
	shr.u32 	%r1985, %r1963, 8;
	// begin inline asm
	lop3.b32 %r1983, %r846, %r1985, %r1964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1987, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1988, %r1964, %r1987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1991, %r1983, %r1988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1994, %r857, %r1985, %r1975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1998, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1999, %r1975, %r1998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2002, %r1994, %r1999;
	// end inline asm
	// begin inline asm
	mov.b32 %r2010, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2021, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2009, %r16293, -2004318072;
	// begin inline asm
	lop3.b32 %r2007, %r846, %r2009, %r2010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2011, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2012, %r2010, %r2011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2015, %r2007, %r2012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2018, %r857, %r2009, %r2021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2022, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2023, %r2021, %r2022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2026, %r2018, %r2023;
	// end inline asm
	shr.u32 	%r2031, %r2009, 8;
	// begin inline asm
	lop3.b32 %r2029, %r846, %r2031, %r2010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2033, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2034, %r2010, %r2033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2037, %r2029, %r2034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2040, %r857, %r2031, %r2021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2044, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2045, %r2021, %r2044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2048, %r2040, %r2045;
	// end inline asm
	// begin inline asm
	mov.b32 %r2056, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2067, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2055, %r16302, -2004318072;
	// begin inline asm
	lop3.b32 %r2053, %r846, %r2055, %r2056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2057, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2058, %r2056, %r2057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2061, %r2053, %r2058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2064, %r857, %r2055, %r2067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2068, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2069, %r2067, %r2068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2072, %r2064, %r2069;
	// end inline asm
	shr.u32 	%r2077, %r2055, 8;
	// begin inline asm
	lop3.b32 %r2075, %r846, %r2077, %r2056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2079, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2080, %r2056, %r2079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2083, %r2075, %r2080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2086, %r857, %r2077, %r2067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2090, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2091, %r2067, %r2090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2094, %r2086, %r2091;
	// end inline asm
	// begin inline asm
	mov.b32 %r2102, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2113, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2101, %r16303, -2004318072;
	// begin inline asm
	lop3.b32 %r2099, %r846, %r2101, %r2102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2103, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2104, %r2102, %r2103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2107, %r2099, %r2104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2110, %r857, %r2101, %r2113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2114, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2115, %r2113, %r2114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2118, %r2110, %r2115;
	// end inline asm
	shr.u32 	%r2123, %r2101, 8;
	// begin inline asm
	lop3.b32 %r2121, %r846, %r2123, %r2102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2125, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2126, %r2102, %r2125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2129, %r2121, %r2126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2132, %r857, %r2123, %r2113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2136, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2137, %r2113, %r2136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2140, %r2132, %r2137;
	// end inline asm
	// begin inline asm
	mov.b32 %r2148, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2159, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2147, %r16304, -2004318072;
	// begin inline asm
	lop3.b32 %r2145, %r846, %r2147, %r2148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2149, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2150, %r2148, %r2149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2153, %r2145, %r2150;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2156, %r857, %r2147, %r2159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2160, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2161, %r2159, %r2160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2164, %r2156, %r2161;
	// end inline asm
	shr.u32 	%r2169, %r2147, 8;
	// begin inline asm
	lop3.b32 %r2167, %r846, %r2169, %r2148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2171, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2172, %r2148, %r2171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2175, %r2167, %r2172;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2178, %r857, %r2169, %r2159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2182, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2183, %r2159, %r2182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2186, %r2178, %r2183;
	// end inline asm
	// begin inline asm
	mov.b32 %r2194, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2205, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2193, %r16305, -2004318072;
	// begin inline asm
	lop3.b32 %r2191, %r846, %r2193, %r2194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2195, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2196, %r2194, %r2195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2199, %r2191, %r2196;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2202, %r857, %r2193, %r2205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2206, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2207, %r2205, %r2206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2210, %r2202, %r2207;
	// end inline asm
	shr.u32 	%r2215, %r2193, 8;
	// begin inline asm
	lop3.b32 %r2213, %r846, %r2215, %r2194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2217, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2218, %r2194, %r2217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2221, %r2213, %r2218;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2224, %r857, %r2215, %r2205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2228, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2229, %r2205, %r2228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2232, %r2224, %r2229;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2235, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2237, %r2235, %r1877, %r1739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2241, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2243, %r2241, %r1888, %r1743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2247, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2249, %r2247, %r1899, %r1747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2253, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2255, %r2253, %r1910, %r1751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2259, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2261, %r2259, %r1923, %r1755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2265, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2267, %r2265, %r1934, %r1759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2271, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2273, %r2271, %r1945, %r1763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2277, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2279, %r2277, %r1956, %r1767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2283, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2285, %r2283, %r1969, %r1771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2289, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2291, %r2289, %r1980, %r1775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2295, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2297, %r2295, %r1991, %r1779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2301, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2303, %r2301, %r2002, %r1783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2307, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2309, %r2307, %r2015, %r1787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2313, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2315, %r2313, %r2026, %r1791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2319, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2321, %r2319, %r2037, %r1795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2325, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2327, %r2325, %r2048, %r1799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2331, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2333, %r2331, %r2061, %r1803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2337, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2339, %r2337, %r2072, %r1807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2343, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2345, %r2343, %r2083, %r1811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2349, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2351, %r2349, %r2094, %r1815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2355, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2357, %r2355, %r2107, %r1819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2361, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2363, %r2361, %r2118, %r1823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2367, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2369, %r2367, %r2129, %r1827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2373, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2375, %r2373, %r2140, %r1831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2379, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2381, %r2379, %r2153, %r1835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2385, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2387, %r2385, %r2164, %r1839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2391, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2393, %r2391, %r2175, %r1843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2397, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2399, %r2397, %r2186, %r1847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2403, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2405, %r2403, %r2199, %r1851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2409, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2411, %r2409, %r2210, %r1855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2415, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2417, %r2415, %r2221, %r1859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2421, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2423, %r2421, %r2232, %r1863;
	// end inline asm
	// begin inline asm
	mov.b32 %r2432, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2443, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2431, %r16294, -2004318072;
	// begin inline asm
	lop3.b32 %r2429, %r846, %r2431, %r2432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2433, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2434, %r2432, %r2433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2437, %r2429, %r2434;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2440, %r857, %r2431, %r2443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2444, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2445, %r2443, %r2444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2448, %r2440, %r2445;
	// end inline asm
	shr.u32 	%r2453, %r2431, 8;
	// begin inline asm
	lop3.b32 %r2451, %r846, %r2453, %r2432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2455, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2456, %r2432, %r2455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2459, %r2451, %r2456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2462, %r857, %r2453, %r2443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2466, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2467, %r2443, %r2466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2470, %r2462, %r2467;
	// end inline asm
	// begin inline asm
	mov.b32 %r2478, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2489, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2477, %r16295, -2004318072;
	// begin inline asm
	lop3.b32 %r2475, %r846, %r2477, %r2478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2479, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2480, %r2478, %r2479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2483, %r2475, %r2480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2486, %r857, %r2477, %r2489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2490, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2491, %r2489, %r2490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2494, %r2486, %r2491;
	// end inline asm
	shr.u32 	%r2499, %r2477, 8;
	// begin inline asm
	lop3.b32 %r2497, %r846, %r2499, %r2478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2501, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2502, %r2478, %r2501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2505, %r2497, %r2502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2508, %r857, %r2499, %r2489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2512, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2513, %r2489, %r2512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2516, %r2508, %r2513;
	// end inline asm
	// begin inline asm
	mov.b32 %r2524, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2535, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2523, %r16296, -2004318072;
	// begin inline asm
	lop3.b32 %r2521, %r846, %r2523, %r2524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2525, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2526, %r2524, %r2525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2529, %r2521, %r2526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2532, %r857, %r2523, %r2535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2536, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2537, %r2535, %r2536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2540, %r2532, %r2537;
	// end inline asm
	shr.u32 	%r2545, %r2523, 8;
	// begin inline asm
	lop3.b32 %r2543, %r846, %r2545, %r2524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2547, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2548, %r2524, %r2547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2551, %r2543, %r2548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2554, %r857, %r2545, %r2535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2558, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2559, %r2535, %r2558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2562, %r2554, %r2559;
	// end inline asm
	// begin inline asm
	mov.b32 %r2570, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2581, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2569, %r16297, -2004318072;
	// begin inline asm
	lop3.b32 %r2567, %r846, %r2569, %r2570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2571, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2572, %r2570, %r2571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2575, %r2567, %r2572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2578, %r857, %r2569, %r2581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2582, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2583, %r2581, %r2582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2586, %r2578, %r2583;
	// end inline asm
	shr.u32 	%r2591, %r2569, 8;
	// begin inline asm
	lop3.b32 %r2589, %r846, %r2591, %r2570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2593, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2594, %r2570, %r2593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2597, %r2589, %r2594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2600, %r857, %r2591, %r2581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2604, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2605, %r2581, %r2604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2608, %r2600, %r2605;
	// end inline asm
	// begin inline asm
	mov.b32 %r2616, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2627, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2615, %r16306, -2004318072;
	// begin inline asm
	lop3.b32 %r2613, %r846, %r2615, %r2616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2617, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2618, %r2616, %r2617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2621, %r2613, %r2618;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2624, %r857, %r2615, %r2627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2628, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2629, %r2627, %r2628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2632, %r2624, %r2629;
	// end inline asm
	shr.u32 	%r2637, %r2615, 8;
	// begin inline asm
	lop3.b32 %r2635, %r846, %r2637, %r2616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2639, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2640, %r2616, %r2639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2643, %r2635, %r2640;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2646, %r857, %r2637, %r2627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2650, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2651, %r2627, %r2650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2654, %r2646, %r2651;
	// end inline asm
	// begin inline asm
	mov.b32 %r2662, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2673, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2661, %r16307, -2004318072;
	// begin inline asm
	lop3.b32 %r2659, %r846, %r2661, %r2662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2663, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2664, %r2662, %r2663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2667, %r2659, %r2664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2670, %r857, %r2661, %r2673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2674, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2675, %r2673, %r2674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2678, %r2670, %r2675;
	// end inline asm
	shr.u32 	%r2683, %r2661, 8;
	// begin inline asm
	lop3.b32 %r2681, %r846, %r2683, %r2662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2685, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2686, %r2662, %r2685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2689, %r2681, %r2686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2692, %r857, %r2683, %r2673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2696, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2697, %r2673, %r2696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2700, %r2692, %r2697;
	// end inline asm
	// begin inline asm
	mov.b32 %r2708, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2719, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2707, %r16308, -2004318072;
	// begin inline asm
	lop3.b32 %r2705, %r846, %r2707, %r2708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2709, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2710, %r2708, %r2709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2713, %r2705, %r2710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2716, %r857, %r2707, %r2719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2720, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2721, %r2719, %r2720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2724, %r2716, %r2721;
	// end inline asm
	shr.u32 	%r2729, %r2707, 8;
	// begin inline asm
	lop3.b32 %r2727, %r846, %r2729, %r2708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2731, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2732, %r2708, %r2731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2735, %r2727, %r2732;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2738, %r857, %r2729, %r2719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2742, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2743, %r2719, %r2742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2746, %r2738, %r2743;
	// end inline asm
	// begin inline asm
	mov.b32 %r2754, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2765, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2753, %r16309, -2004318072;
	// begin inline asm
	lop3.b32 %r2751, %r846, %r2753, %r2754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2755, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2756, %r2754, %r2755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2759, %r2751, %r2756;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2762, %r857, %r2753, %r2765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2766, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2767, %r2765, %r2766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2770, %r2762, %r2767;
	// end inline asm
	shr.u32 	%r2775, %r2753, 8;
	// begin inline asm
	lop3.b32 %r2773, %r846, %r2775, %r2754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2777, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2778, %r2754, %r2777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2781, %r2773, %r2778;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2784, %r857, %r2775, %r2765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2788, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2789, %r2765, %r2788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2792, %r2784, %r2789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2930, %r336, %r2437, %r2237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2927, %r336, %r2448, %r2243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2939, %r336, %r2459, %r2249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2936, %r336, %r2470, %r2255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2948, %r336, %r2483, %r2261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2945, %r336, %r2494, %r2267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2957, %r336, %r2505, %r2273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2954, %r336, %r2516, %r2279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2966, %r336, %r2529, %r2285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2963, %r336, %r2540, %r2291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2975, %r336, %r2551, %r2297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2972, %r336, %r2562, %r2303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2984, %r336, %r2575, %r2309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2981, %r336, %r2586, %r2315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2993, %r336, %r2597, %r2321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2990, %r336, %r2608, %r2327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3002, %r354, %r2621, %r2333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2999, %r354, %r2632, %r2339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3011, %r354, %r2643, %r2345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3008, %r354, %r2654, %r2351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3020, %r354, %r2667, %r2357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3017, %r354, %r2678, %r2363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r354, %r2689, %r2369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3026, %r354, %r2700, %r2375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r354, %r2713, %r2381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3035, %r354, %r2724, %r2387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3047, %r354, %r2735, %r2393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3044, %r354, %r2746, %r2399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3056, %r354, %r2759, %r2405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3053, %r354, %r2770, %r2411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3065, %r354, %r2781, %r2417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3062, %r354, %r2792, %r2423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2923, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2925, %r2923, %r2927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2928, %r393, %r2930, %r2925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2932, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2934, %r2932, %r2936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2937, %r393, %r2939, %r2934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2941, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2943, %r2941, %r2945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2946, %r393, %r2948, %r2943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2950, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2952, %r2950, %r2954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2955, %r393, %r2957, %r2952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2959, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2961, %r2959, %r2963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2964, %r393, %r2966, %r2961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2968, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2970, %r2968, %r2972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2973, %r393, %r2975, %r2970;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2977, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2979, %r2977, %r2981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2982, %r393, %r2984, %r2979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2986, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2988, %r2986, %r2990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2991, %r393, %r2993, %r2988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2995, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2997, %r2995, %r2999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3000, %r396, %r3002, %r2997;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3004, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3006, %r3004, %r3008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3009, %r396, %r3011, %r3006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3013, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3015, %r3013, %r3017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3018, %r396, %r3020, %r3015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3022, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3024, %r3022, %r3026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3027, %r396, %r3029, %r3024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3031, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3033, %r3031, %r3035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3036, %r396, %r3038, %r3033;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3040, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3042, %r3040, %r3044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3045, %r396, %r3047, %r3042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3049, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3051, %r3049, %r3053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3054, %r396, %r3056, %r3051;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3058, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3060, %r3058, %r3062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3063, %r396, %r3065, %r3060;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3067, %r399, %r2930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3070, %r393, %r2927, %r3067;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3074, %r399, %r2939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3077, %r393, %r2936, %r3074;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3081, %r399, %r2948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3084, %r393, %r2945, %r3081;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3088, %r399, %r2957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3091, %r393, %r2954, %r3088;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3095, %r399, %r2966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3098, %r393, %r2963, %r3095;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3102, %r399, %r2975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3105, %r393, %r2972, %r3102;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3109, %r399, %r2984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3112, %r393, %r2981, %r3109;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3116, %r399, %r2993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3119, %r393, %r2990, %r3116;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3123, %r402, %r3002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3126, %r396, %r2999, %r3123;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3130, %r402, %r3011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3133, %r396, %r3008, %r3130;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3137, %r402, %r3020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3140, %r396, %r3017, %r3137;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3144, %r402, %r3029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3147, %r396, %r3026, %r3144;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3151, %r402, %r3038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3154, %r396, %r3035, %r3151;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3158, %r402, %r3047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3161, %r396, %r3044, %r3158;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3165, %r402, %r3056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3168, %r396, %r3053, %r3165;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3172, %r402, %r3065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3175, %r396, %r3062, %r3172;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3346, %r3343}, {%r460, %r466, %r463, %r469}, {%r2928, %r3070}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3355, %r3352}, {%r460, %r466, %r463, %r469}, {%r2937, %r3077}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3364, %r3361}, {%r460, %r466, %r463, %r469}, {%r2946, %r3084}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3373, %r3370}, {%r460, %r466, %r463, %r469}, {%r2955, %r3091}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3382, %r3379}, {%r460, %r466, %r463, %r469}, {%r2964, %r3098}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3391, %r3388}, {%r460, %r466, %r463, %r469}, {%r2973, %r3105}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3400, %r3397}, {%r460, %r466, %r463, %r469}, {%r2982, %r3112}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3409, %r3406}, {%r460, %r466, %r463, %r469}, {%r2991, %r3119}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3418, %r3415}, {%r460, %r466, %r463, %r469}, {%r3000, %r3126}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3427, %r3424}, {%r460, %r466, %r463, %r469}, {%r3009, %r3133}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3436, %r3433}, {%r460, %r466, %r463, %r469}, {%r3018, %r3140}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3445, %r3442}, {%r460, %r466, %r463, %r469}, {%r3027, %r3147}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3454, %r3451}, {%r460, %r466, %r463, %r469}, {%r3036, %r3154}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3463, %r3460}, {%r460, %r466, %r463, %r469}, {%r3045, %r3161}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3472, %r3469}, {%r460, %r466, %r463, %r469}, {%r3054, %r3168}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3481, %r3478}, {%r460, %r466, %r463, %r469}, {%r3063, %r3175}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3339, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3341, %r3339, %r3343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3344, %r510, %r3346, %r3341;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3348, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3350, %r3348, %r3352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3353, %r510, %r3355, %r3350;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3357, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3359, %r3357, %r3361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3362, %r510, %r3364, %r3359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3366, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3368, %r3366, %r3370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3371, %r510, %r3373, %r3368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3375, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3377, %r3375, %r3379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3380, %r510, %r3382, %r3377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3384, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3386, %r3384, %r3388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3389, %r510, %r3391, %r3386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3393, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3395, %r3393, %r3397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3398, %r510, %r3400, %r3395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3402, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3404, %r3402, %r3406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3407, %r510, %r3409, %r3404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3411, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3413, %r3411, %r3415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3416, %r510, %r3418, %r3413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3420, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3422, %r3420, %r3424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3425, %r510, %r3427, %r3422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3429, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3431, %r3429, %r3433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3434, %r510, %r3436, %r3431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3438, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3440, %r3438, %r3442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3443, %r510, %r3445, %r3440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3447, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3449, %r3447, %r3451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3452, %r510, %r3454, %r3449;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3456, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3458, %r3456, %r3460;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3461, %r510, %r3463, %r3458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3465, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3467, %r3465, %r3469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3470, %r510, %r3472, %r3467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3474, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3476, %r3474, %r3478;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3479, %r510, %r3481, %r3476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3483, %r513, %r3346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3486, %r510, %r3343, %r3483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3490, %r513, %r3355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3493, %r510, %r3352, %r3490;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3497, %r513, %r3364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3500, %r510, %r3361, %r3497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3504, %r513, %r3373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3507, %r510, %r3370, %r3504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3511, %r513, %r3382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3514, %r510, %r3379, %r3511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3518, %r513, %r3391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3521, %r510, %r3388, %r3518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3525, %r513, %r3400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3528, %r510, %r3397, %r3525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3532, %r513, %r3409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3535, %r510, %r3406, %r3532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3539, %r513, %r3418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3542, %r510, %r3415, %r3539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3546, %r513, %r3427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3549, %r510, %r3424, %r3546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3553, %r513, %r3436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3556, %r510, %r3433, %r3553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3560, %r513, %r3445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3563, %r510, %r3442, %r3560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3567, %r513, %r3454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3570, %r510, %r3451, %r3567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3574, %r513, %r3463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3577, %r510, %r3460, %r3574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3581, %r513, %r3472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3584, %r510, %r3469, %r3581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3588, %r513, %r3481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3591, %r510, %r3478, %r3588;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3884, %r3887}, {%r548, %r554, %r551, %r557}, {%r3344, %r3486}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3890, %r3893}, {%r548, %r554, %r551, %r557}, {%r3353, %r3493}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3896, %r3899}, {%r548, %r554, %r551, %r557}, {%r3362, %r3500}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3902, %r3905}, {%r548, %r554, %r551, %r557}, {%r3371, %r3507}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3908, %r3911}, {%r548, %r554, %r551, %r557}, {%r3380, %r3514}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3914, %r3917}, {%r548, %r554, %r551, %r557}, {%r3389, %r3521}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3920, %r3923}, {%r548, %r554, %r551, %r557}, {%r3398, %r3528}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3926, %r3929}, {%r548, %r554, %r551, %r557}, {%r3407, %r3535}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3885, %r3888}, {%r548, %r554, %r551, %r557}, {%r3416, %r3542}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3891, %r3894}, {%r548, %r554, %r551, %r557}, {%r3425, %r3549}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3897, %r3900}, {%r548, %r554, %r551, %r557}, {%r3434, %r3556}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3903, %r3906}, {%r548, %r554, %r551, %r557}, {%r3443, %r3563}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3909, %r3912}, {%r548, %r554, %r551, %r557}, {%r3452, %r3570}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3915, %r3918}, {%r548, %r554, %r551, %r557}, {%r3461, %r3577}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3921, %r3924}, {%r548, %r554, %r551, %r557}, {%r3470, %r3584}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3927, %r3930}, {%r548, %r554, %r551, %r557}, {%r3479, %r3591}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3883, %r3884, %r3885;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3886, %r3887, %r3888;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3889, %r3890, %r3891;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3892, %r3893, %r3894;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3895, %r3896, %r3897;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3898, %r3899, %r3900;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3901, %r3902, %r3903;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3904, %r3905, %r3906;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3907, %r3908, %r3909;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3910, %r3911, %r3912;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3913, %r3914, %r3915;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3916, %r3917, %r3918;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3919, %r3920, %r3921;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3922, %r3923, %r3924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3925, %r3926, %r3927;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3928, %r3929, %r3930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3931, %r3884, %r3885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3934, %r3887, %r3888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3937, %r3890, %r3891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3940, %r3893, %r3894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3943, %r3896, %r3897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3946, %r3899, %r3900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3949, %r3902, %r3903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3952, %r3905, %r3906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3955, %r3908, %r3909;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3958, %r3911, %r3912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3961, %r3914, %r3915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3964, %r3917, %r3918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3967, %r3920, %r3921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3970, %r3923, %r3924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3973, %r3926, %r3927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3976, %r3929, %r3930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3979, %r124, %r3883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3982, %r124, %r3886;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3985, %r124, %r3889;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3988, %r124, %r3892;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3991, %r124, %r3895;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3994, %r124, %r3898;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3997, %r124, %r3901;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4000, %r124, %r3904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4003, %r124, %r3907;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4006, %r124, %r3910;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4009, %r124, %r3913;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4012, %r124, %r3916;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4015, %r124, %r3919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4018, %r124, %r3922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4021, %r124, %r3925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4024, %r124, %r3928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4027, %r125, %r3931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4030, %r125, %r3934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4033, %r125, %r3937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4036, %r125, %r3940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4039, %r125, %r3943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4042, %r125, %r3946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4045, %r125, %r3949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4048, %r125, %r3952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4051, %r125, %r3955;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4054, %r125, %r3958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4057, %r125, %r3961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4060, %r125, %r3964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4063, %r125, %r3967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4066, %r125, %r3970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4069, %r125, %r3973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4072, %r125, %r3976;
	// end inline asm
	mov.u16 	%rs412, -14592;
	// begin inline asm
	mov.b32 %r4075, {%rs412, %rs412};
	// end inline asm
	mov.u16 	%rs414, 18176;
	// begin inline asm
	mov.b32 %r4076, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4077, %r3979, %r4075;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4080, %r4077, %r4076;
	// end inline asm
	// begin inline asm
	mov.b32 %r4083, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4084, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4085, %r3982, %r4083;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4088, %r4085, %r4084;
	// end inline asm
	// begin inline asm
	mov.b32 %r4091, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4092, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4093, %r3985, %r4091;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4096, %r4093, %r4092;
	// end inline asm
	// begin inline asm
	mov.b32 %r4099, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4100, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4101, %r3988, %r4099;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4104, %r4101, %r4100;
	// end inline asm
	// begin inline asm
	mov.b32 %r4107, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4108, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4109, %r3991, %r4107;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4112, %r4109, %r4108;
	// end inline asm
	// begin inline asm
	mov.b32 %r4115, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4116, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4117, %r3994, %r4115;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4120, %r4117, %r4116;
	// end inline asm
	// begin inline asm
	mov.b32 %r4123, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4124, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4125, %r3997, %r4123;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4128, %r4125, %r4124;
	// end inline asm
	// begin inline asm
	mov.b32 %r4131, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4132, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4133, %r4000, %r4131;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4136, %r4133, %r4132;
	// end inline asm
	// begin inline asm
	mov.b32 %r4139, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4140, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4141, %r4003, %r4139;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4144, %r4141, %r4140;
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4148, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4149, %r4006, %r4147;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4152, %r4149, %r4148;
	// end inline asm
	// begin inline asm
	mov.b32 %r4155, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4156, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4157, %r4009, %r4155;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4160, %r4157, %r4156;
	// end inline asm
	// begin inline asm
	mov.b32 %r4163, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4164, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4165, %r4012, %r4163;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4168, %r4165, %r4164;
	// end inline asm
	// begin inline asm
	mov.b32 %r4171, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4172, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4173, %r4015, %r4171;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4176, %r4173, %r4172;
	// end inline asm
	// begin inline asm
	mov.b32 %r4179, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4180, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4181, %r4018, %r4179;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4184, %r4181, %r4180;
	// end inline asm
	// begin inline asm
	mov.b32 %r4187, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4188, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4189, %r4021, %r4187;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4192, %r4189, %r4188;
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4196, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4197, %r4024, %r4195;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4200, %r4197, %r4196;
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4204, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4205, %r4027, %r4203;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4208, %r4205, %r4204;
	// end inline asm
	// begin inline asm
	mov.b32 %r4211, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4212, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4213, %r4030, %r4211;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4216, %r4213, %r4212;
	// end inline asm
	// begin inline asm
	mov.b32 %r4219, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4220, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4221, %r4033, %r4219;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4224, %r4221, %r4220;
	// end inline asm
	// begin inline asm
	mov.b32 %r4227, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4228, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4229, %r4036, %r4227;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4232, %r4229, %r4228;
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4236, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4237, %r4039, %r4235;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4240, %r4237, %r4236;
	// end inline asm
	// begin inline asm
	mov.b32 %r4243, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4244, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4245, %r4042, %r4243;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4248, %r4245, %r4244;
	// end inline asm
	// begin inline asm
	mov.b32 %r4251, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4252, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4253, %r4045, %r4251;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4256, %r4253, %r4252;
	// end inline asm
	// begin inline asm
	mov.b32 %r4259, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4260, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4261, %r4048, %r4259;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4264, %r4261, %r4260;
	// end inline asm
	// begin inline asm
	mov.b32 %r4267, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4268, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4269, %r4051, %r4267;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4272, %r4269, %r4268;
	// end inline asm
	// begin inline asm
	mov.b32 %r4275, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4276, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4277, %r4054, %r4275;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4280, %r4277, %r4276;
	// end inline asm
	// begin inline asm
	mov.b32 %r4283, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4284, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4285, %r4057, %r4283;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4288, %r4285, %r4284;
	// end inline asm
	// begin inline asm
	mov.b32 %r4291, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4292, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4293, %r4060, %r4291;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4296, %r4293, %r4292;
	// end inline asm
	// begin inline asm
	mov.b32 %r4299, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4300, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4301, %r4063, %r4299;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4304, %r4301, %r4300;
	// end inline asm
	// begin inline asm
	mov.b32 %r4307, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4308, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4309, %r4066, %r4307;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4312, %r4309, %r4308;
	// end inline asm
	// begin inline asm
	mov.b32 %r4315, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4316, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4317, %r4069, %r4315;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4320, %r4317, %r4316;
	// end inline asm
	// begin inline asm
	mov.b32 %r4323, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4324, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4325, %r4072, %r4323;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4328, %r4325, %r4324;
	// end inline asm
	// begin inline asm
	mov.b32 %r4334, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4332, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4333, %r4334, %r4332;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4336, %r4080, %r4333;
	// end inline asm
	// begin inline asm
	mov.b32 %r4339, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4340, %r4334, %r4339;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4343, %r4088, %r4340;
	// end inline asm
	// begin inline asm
	mov.b32 %r4346, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4347, %r4334, %r4346;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4350, %r4096, %r4347;
	// end inline asm
	// begin inline asm
	mov.b32 %r4353, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4354, %r4334, %r4353;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4357, %r4104, %r4354;
	// end inline asm
	mov.u32 	%r4363, 25152;
	// begin inline asm
	prmt.b32 %r4360, %r4336, %r4350, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4364, %r4343, %r4357, %r4363;
	// end inline asm
	shl.b32 	%r4371, %r4364, 4;
	mov.u32 	%r4369, 252645135;
	// begin inline asm
	lop3.b32 %r4368, %r4369, %r4360, %r4371, 202;
	// end inline asm
	xor.b32  	%r16155, %r4368, -2004318072;
	// begin inline asm
	mov.b32 %r4375, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4373, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4374, %r4375, %r4373;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4377, %r4112, %r4374;
	// end inline asm
	// begin inline asm
	mov.b32 %r4380, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4381, %r4375, %r4380;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4384, %r4120, %r4381;
	// end inline asm
	// begin inline asm
	mov.b32 %r4387, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4388, %r4375, %r4387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4391, %r4128, %r4388;
	// end inline asm
	// begin inline asm
	mov.b32 %r4394, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4395, %r4375, %r4394;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4398, %r4136, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4401, %r4377, %r4391, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4405, %r4384, %r4398, %r4363;
	// end inline asm
	shl.b32 	%r4412, %r4405, 4;
	// begin inline asm
	lop3.b32 %r4409, %r4369, %r4401, %r4412, 202;
	// end inline asm
	xor.b32  	%r16156, %r4409, -2004318072;
	// begin inline asm
	mov.b32 %r4416, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4414, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4415, %r4416, %r4414;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4418, %r4144, %r4415;
	// end inline asm
	// begin inline asm
	mov.b32 %r4421, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4422, %r4416, %r4421;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4425, %r4152, %r4422;
	// end inline asm
	// begin inline asm
	mov.b32 %r4428, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4429, %r4416, %r4428;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4432, %r4160, %r4429;
	// end inline asm
	// begin inline asm
	mov.b32 %r4435, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4436, %r4416, %r4435;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4439, %r4168, %r4436;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4442, %r4418, %r4432, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4446, %r4425, %r4439, %r4363;
	// end inline asm
	shl.b32 	%r4453, %r4446, 4;
	// begin inline asm
	lop3.b32 %r4450, %r4369, %r4442, %r4453, 202;
	// end inline asm
	xor.b32  	%r16157, %r4450, -2004318072;
	// begin inline asm
	mov.b32 %r4457, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4455, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4456, %r4457, %r4455;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4459, %r4176, %r4456;
	// end inline asm
	// begin inline asm
	mov.b32 %r4462, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4463, %r4457, %r4462;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4466, %r4184, %r4463;
	// end inline asm
	// begin inline asm
	mov.b32 %r4469, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4470, %r4457, %r4469;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4473, %r4192, %r4470;
	// end inline asm
	// begin inline asm
	mov.b32 %r4476, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4477, %r4457, %r4476;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4480, %r4200, %r4477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4483, %r4459, %r4473, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4487, %r4466, %r4480, %r4363;
	// end inline asm
	shl.b32 	%r4494, %r4487, 4;
	// begin inline asm
	lop3.b32 %r4491, %r4369, %r4483, %r4494, 202;
	// end inline asm
	xor.b32  	%r16158, %r4491, -2004318072;
	// begin inline asm
	mov.b32 %r4498, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4496, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4497, %r4498, %r4496;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4500, %r4208, %r4497;
	// end inline asm
	// begin inline asm
	mov.b32 %r4503, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4504, %r4498, %r4503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4507, %r4216, %r4504;
	// end inline asm
	// begin inline asm
	mov.b32 %r4510, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4511, %r4498, %r4510;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4514, %r4224, %r4511;
	// end inline asm
	// begin inline asm
	mov.b32 %r4517, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4518, %r4498, %r4517;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4521, %r4232, %r4518;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4524, %r4500, %r4514, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4528, %r4507, %r4521, %r4363;
	// end inline asm
	shl.b32 	%r4535, %r4528, 4;
	// begin inline asm
	lop3.b32 %r4532, %r4369, %r4524, %r4535, 202;
	// end inline asm
	xor.b32  	%r16159, %r4532, -2004318072;
	// begin inline asm
	mov.b32 %r4539, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4537, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4538, %r4539, %r4537;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4541, %r4240, %r4538;
	// end inline asm
	// begin inline asm
	mov.b32 %r4544, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4545, %r4539, %r4544;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4548, %r4248, %r4545;
	// end inline asm
	// begin inline asm
	mov.b32 %r4551, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4552, %r4539, %r4551;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4555, %r4256, %r4552;
	// end inline asm
	// begin inline asm
	mov.b32 %r4558, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4559, %r4539, %r4558;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4562, %r4264, %r4559;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4565, %r4541, %r4555, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4569, %r4548, %r4562, %r4363;
	// end inline asm
	shl.b32 	%r4576, %r4569, 4;
	// begin inline asm
	lop3.b32 %r4573, %r4369, %r4565, %r4576, 202;
	// end inline asm
	xor.b32  	%r16160, %r4573, -2004318072;
	// begin inline asm
	mov.b32 %r4580, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4578, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4579, %r4580, %r4578;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4582, %r4272, %r4579;
	// end inline asm
	// begin inline asm
	mov.b32 %r4585, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4586, %r4580, %r4585;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4589, %r4280, %r4586;
	// end inline asm
	// begin inline asm
	mov.b32 %r4592, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4593, %r4580, %r4592;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4596, %r4288, %r4593;
	// end inline asm
	// begin inline asm
	mov.b32 %r4599, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4600, %r4580, %r4599;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4603, %r4296, %r4600;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4606, %r4582, %r4596, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4610, %r4589, %r4603, %r4363;
	// end inline asm
	shl.b32 	%r4617, %r4610, 4;
	// begin inline asm
	lop3.b32 %r4614, %r4369, %r4606, %r4617, 202;
	// end inline asm
	xor.b32  	%r16161, %r4614, -2004318072;
	// begin inline asm
	mov.b32 %r4621, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4619, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4620, %r4621, %r4619;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4623, %r4304, %r4620;
	// end inline asm
	// begin inline asm
	mov.b32 %r4626, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4627, %r4621, %r4626;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4630, %r4312, %r4627;
	// end inline asm
	// begin inline asm
	mov.b32 %r4633, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4634, %r4621, %r4633;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4637, %r4320, %r4634;
	// end inline asm
	// begin inline asm
	mov.b32 %r4640, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4641, %r4621, %r4640;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4644, %r4328, %r4641;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4647, %r4623, %r4637, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4651, %r4630, %r4644, %r4363;
	// end inline asm
	shl.b32 	%r4658, %r4651, 4;
	// begin inline asm
	lop3.b32 %r4655, %r4369, %r4647, %r4658, 202;
	// end inline asm
	xor.b32  	%r16162, %r4655, -2004318072;
	add.s32 	%r16163, %r75, %r16107;
	mul.wide.u32 	%rd95, %r16163, 4;
	add.s64 	%rd96, %rd35, %rd95;
	st.shared.u32 	[%rd96], %r16155;
	add.s32 	%r16164, %r76, %r16107;
	mul.wide.u32 	%rd97, %r16164, 4;
	add.s64 	%rd98, %rd35, %rd97;
	st.shared.u32 	[%rd98], %r16156;
	add.s32 	%r16165, %r77, %r16107;
	mul.wide.u32 	%rd99, %r16165, 4;
	add.s64 	%rd100, %rd35, %rd99;
	st.shared.u32 	[%rd100], %r16157;
	add.s32 	%r16166, %r78, %r16107;
	mul.wide.u32 	%rd101, %r16166, 4;
	add.s64 	%rd102, %rd35, %rd101;
	st.shared.u32 	[%rd102], %r16158;
	add.s32 	%r16167, %r79, %r16107;
	mul.wide.u32 	%rd103, %r16167, 4;
	add.s64 	%rd104, %rd35, %rd103;
	st.shared.u32 	[%rd104], %r16159;
	add.s32 	%r16168, %r80, %r16107;
	mul.wide.u32 	%rd105, %r16168, 4;
	add.s64 	%rd106, %rd35, %rd105;
	st.shared.u32 	[%rd106], %r16160;
	add.s32 	%r16169, %r81, %r16107;
	mul.wide.u32 	%rd107, %r16169, 4;
	add.s64 	%rd108, %rd35, %rd107;
	st.shared.u32 	[%rd108], %r16161;
	add.s32 	%r16170, %r82, %r16107;
	mul.wide.u32 	%rd109, %r16170, 4;
	add.s64 	%rd110, %rd35, %rd109;
	st.shared.u32 	[%rd110], %r16162;
	ld.shared.u32 	%r16286, [%rd80];
	ld.shared.u32 	%r16287, [%rd82];
	ld.shared.u32 	%r16288, [%rd84];
	ld.shared.u32 	%r16289, [%rd86];
	ld.shared.u32 	%r16298, [%rd88];
	ld.shared.u32 	%r16299, [%rd90];
	ld.shared.u32 	%r16300, [%rd92];
	ld.shared.u32 	%r16301, [%rd94];
	// begin inline asm
	mov.b32 %r4664, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4675, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4663, %r16286, -2004318072;
	// begin inline asm
	lop3.b32 %r4661, %r846, %r4663, %r4664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4665, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4666, %r4664, %r4665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4669, %r4661, %r4666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4672, %r857, %r4663, %r4675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4676, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4677, %r4675, %r4676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4680, %r4672, %r4677;
	// end inline asm
	shr.u32 	%r4685, %r4663, 8;
	// begin inline asm
	lop3.b32 %r4683, %r846, %r4685, %r4664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4687, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4688, %r4664, %r4687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4691, %r4683, %r4688;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4694, %r857, %r4685, %r4675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4698, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4699, %r4675, %r4698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4702, %r4694, %r4699;
	// end inline asm
	// begin inline asm
	mov.b32 %r4710, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4721, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4709, %r16287, -2004318072;
	// begin inline asm
	lop3.b32 %r4707, %r846, %r4709, %r4710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4711, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4712, %r4710, %r4711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4715, %r4707, %r4712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4718, %r857, %r4709, %r4721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4722, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4723, %r4721, %r4722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4726, %r4718, %r4723;
	// end inline asm
	shr.u32 	%r4731, %r4709, 8;
	// begin inline asm
	lop3.b32 %r4729, %r846, %r4731, %r4710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4733, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4734, %r4710, %r4733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4737, %r4729, %r4734;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4740, %r857, %r4731, %r4721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4744, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4745, %r4721, %r4744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4748, %r4740, %r4745;
	// end inline asm
	// begin inline asm
	mov.b32 %r4756, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4767, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4755, %r16288, -2004318072;
	// begin inline asm
	lop3.b32 %r4753, %r846, %r4755, %r4756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4757, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4758, %r4756, %r4757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4761, %r4753, %r4758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4764, %r857, %r4755, %r4767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4768, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4769, %r4767, %r4768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4772, %r4764, %r4769;
	// end inline asm
	shr.u32 	%r4777, %r4755, 8;
	// begin inline asm
	lop3.b32 %r4775, %r846, %r4777, %r4756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4779, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4780, %r4756, %r4779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4783, %r4775, %r4780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4786, %r857, %r4777, %r4767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4790, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4791, %r4767, %r4790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4794, %r4786, %r4791;
	// end inline asm
	// begin inline asm
	mov.b32 %r4802, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4813, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4801, %r16289, -2004318072;
	// begin inline asm
	lop3.b32 %r4799, %r846, %r4801, %r4802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4803, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4804, %r4802, %r4803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4807, %r4799, %r4804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4810, %r857, %r4801, %r4813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4814, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4815, %r4813, %r4814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4818, %r4810, %r4815;
	// end inline asm
	shr.u32 	%r4823, %r4801, 8;
	// begin inline asm
	lop3.b32 %r4821, %r846, %r4823, %r4802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4825, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4826, %r4802, %r4825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4829, %r4821, %r4826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4832, %r857, %r4823, %r4813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4836, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4837, %r4813, %r4836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4840, %r4832, %r4837;
	// end inline asm
	// begin inline asm
	mov.b32 %r4848, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4859, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4847, %r16298, -2004318072;
	// begin inline asm
	lop3.b32 %r4845, %r846, %r4847, %r4848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4849, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4850, %r4848, %r4849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4853, %r4845, %r4850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4856, %r857, %r4847, %r4859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4860, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4861, %r4859, %r4860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4864, %r4856, %r4861;
	// end inline asm
	shr.u32 	%r4869, %r4847, 8;
	// begin inline asm
	lop3.b32 %r4867, %r846, %r4869, %r4848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4871, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4872, %r4848, %r4871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4875, %r4867, %r4872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4878, %r857, %r4869, %r4859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4882, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4883, %r4859, %r4882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4886, %r4878, %r4883;
	// end inline asm
	// begin inline asm
	mov.b32 %r4894, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4905, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4893, %r16299, -2004318072;
	// begin inline asm
	lop3.b32 %r4891, %r846, %r4893, %r4894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4895, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4896, %r4894, %r4895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4899, %r4891, %r4896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4902, %r857, %r4893, %r4905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4906, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4907, %r4905, %r4906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4910, %r4902, %r4907;
	// end inline asm
	shr.u32 	%r4915, %r4893, 8;
	// begin inline asm
	lop3.b32 %r4913, %r846, %r4915, %r4894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4917, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4918, %r4894, %r4917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4921, %r4913, %r4918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4924, %r857, %r4915, %r4905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4928, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4929, %r4905, %r4928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4932, %r4924, %r4929;
	// end inline asm
	// begin inline asm
	mov.b32 %r4940, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4951, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4939, %r16300, -2004318072;
	// begin inline asm
	lop3.b32 %r4937, %r846, %r4939, %r4940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4941, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4942, %r4940, %r4941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4945, %r4937, %r4942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4948, %r857, %r4939, %r4951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4952, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4953, %r4951, %r4952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4956, %r4948, %r4953;
	// end inline asm
	shr.u32 	%r4961, %r4939, 8;
	// begin inline asm
	lop3.b32 %r4959, %r846, %r4961, %r4940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4963, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4964, %r4940, %r4963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4967, %r4959, %r4964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4970, %r857, %r4961, %r4951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4974, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4975, %r4951, %r4974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4978, %r4970, %r4975;
	// end inline asm
	// begin inline asm
	mov.b32 %r4986, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4997, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4985, %r16301, -2004318072;
	// begin inline asm
	lop3.b32 %r4983, %r846, %r4985, %r4986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4987, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4988, %r4986, %r4987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4991, %r4983, %r4988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4994, %r857, %r4985, %r4997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4998, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4999, %r4997, %r4998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5002, %r4994, %r4999;
	// end inline asm
	shr.u32 	%r5007, %r4985, 8;
	// begin inline asm
	lop3.b32 %r5005, %r846, %r5007, %r4986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5009, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5010, %r4986, %r5009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5013, %r5005, %r5010;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5016, %r857, %r5007, %r4997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5020, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5021, %r4997, %r5020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5024, %r5016, %r5021;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5027, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5029, %r5027, %r4669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5032, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5034, %r5032, %r4680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5037, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5039, %r5037, %r4691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5042, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5044, %r5042, %r4702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5047, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5049, %r5047, %r4715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5052, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5054, %r5052, %r4726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5057, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5059, %r5057, %r4737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5062, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5064, %r5062, %r4748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5067, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5069, %r5067, %r4761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5072, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5074, %r5072, %r4772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5077, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5079, %r5077, %r4783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5082, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5084, %r5082, %r4794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5087, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5089, %r5087, %r4807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5092, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5094, %r5092, %r4818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5097, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5099, %r5097, %r4829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5102, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5104, %r5102, %r4840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5107, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5109, %r5107, %r4853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5112, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5114, %r5112, %r4864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5117, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5119, %r5117, %r4875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5122, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5124, %r5122, %r4886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5127, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5129, %r5127, %r4899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5132, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5134, %r5132, %r4910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5137, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5139, %r5137, %r4921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5142, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5144, %r5142, %r4932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5147, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5149, %r5147, %r4945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5152, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5154, %r5152, %r4956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5157, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5159, %r5157, %r4967;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5162, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5164, %r5162, %r4978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5167, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5169, %r5167, %r4991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5172, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5174, %r5172, %r5002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5177, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5179, %r5177, %r5013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5182, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5184, %r5182, %r5024;
	// end inline asm
	// begin inline asm
	mov.b32 %r5192, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5203, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5189, %r846, %r1871, %r5192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5193, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5194, %r5192, %r5193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5197, %r5189, %r5194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5200, %r857, %r1871, %r5203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5204, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5205, %r5203, %r5204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5208, %r5200, %r5205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5211, %r846, %r1893, %r5192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5215, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5216, %r5192, %r5215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5219, %r5211, %r5216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5222, %r857, %r1893, %r5203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5226, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5227, %r5203, %r5226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5230, %r5222, %r5227;
	// end inline asm
	// begin inline asm
	mov.b32 %r5238, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5249, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5235, %r846, %r1917, %r5238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5239, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5240, %r5238, %r5239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5243, %r5235, %r5240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5246, %r857, %r1917, %r5249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5250, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5251, %r5249, %r5250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5254, %r5246, %r5251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5257, %r846, %r1939, %r5238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5261, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5262, %r5238, %r5261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5265, %r5257, %r5262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5268, %r857, %r1939, %r5249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5272, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5273, %r5249, %r5272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5276, %r5268, %r5273;
	// end inline asm
	// begin inline asm
	mov.b32 %r5284, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5295, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5281, %r846, %r1963, %r5284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5285, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5286, %r5284, %r5285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5289, %r5281, %r5286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5292, %r857, %r1963, %r5295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5296, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5297, %r5295, %r5296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5300, %r5292, %r5297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5303, %r846, %r1985, %r5284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5307, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5308, %r5284, %r5307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5311, %r5303, %r5308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5314, %r857, %r1985, %r5295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5318, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5319, %r5295, %r5318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5322, %r5314, %r5319;
	// end inline asm
	// begin inline asm
	mov.b32 %r5330, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5341, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5327, %r846, %r2009, %r5330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5331, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5332, %r5330, %r5331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5335, %r5327, %r5332;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5338, %r857, %r2009, %r5341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5342, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5343, %r5341, %r5342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5346, %r5338, %r5343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5349, %r846, %r2031, %r5330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5353, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5354, %r5330, %r5353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5357, %r5349, %r5354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5360, %r857, %r2031, %r5341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5364, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5365, %r5341, %r5364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5368, %r5360, %r5365;
	// end inline asm
	// begin inline asm
	mov.b32 %r5376, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5387, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5373, %r846, %r2055, %r5376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5377, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5378, %r5376, %r5377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5381, %r5373, %r5378;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5384, %r857, %r2055, %r5387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5388, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5389, %r5387, %r5388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5392, %r5384, %r5389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5395, %r846, %r2077, %r5376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5399, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5400, %r5376, %r5399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5403, %r5395, %r5400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5406, %r857, %r2077, %r5387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5410, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5411, %r5387, %r5410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5414, %r5406, %r5411;
	// end inline asm
	// begin inline asm
	mov.b32 %r5422, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5433, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5419, %r846, %r2101, %r5422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5423, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5424, %r5422, %r5423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5427, %r5419, %r5424;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5430, %r857, %r2101, %r5433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5434, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5435, %r5433, %r5434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5438, %r5430, %r5435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5441, %r846, %r2123, %r5422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5445, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5446, %r5422, %r5445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5449, %r5441, %r5446;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5452, %r857, %r2123, %r5433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5456, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5457, %r5433, %r5456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5460, %r5452, %r5457;
	// end inline asm
	// begin inline asm
	mov.b32 %r5468, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5479, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5465, %r846, %r2147, %r5468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5469, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5470, %r5468, %r5469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5473, %r5465, %r5470;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5476, %r857, %r2147, %r5479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5480, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5481, %r5479, %r5480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5484, %r5476, %r5481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5487, %r846, %r2169, %r5468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5491, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5492, %r5468, %r5491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5495, %r5487, %r5492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5498, %r857, %r2169, %r5479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5502, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5503, %r5479, %r5502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5506, %r5498, %r5503;
	// end inline asm
	// begin inline asm
	mov.b32 %r5514, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5525, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5511, %r846, %r2193, %r5514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5515, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5516, %r5514, %r5515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5519, %r5511, %r5516;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5522, %r857, %r2193, %r5525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5526, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5527, %r5525, %r5526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5530, %r5522, %r5527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5533, %r846, %r2215, %r5514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5537, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5538, %r5514, %r5537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5541, %r5533, %r5538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5544, %r857, %r2215, %r5525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5548, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5549, %r5525, %r5548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5552, %r5544, %r5549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5555, %r264, %r5197, %r5029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5559, %r264, %r5208, %r5034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5563, %r264, %r5219, %r5039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5567, %r264, %r5230, %r5044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5571, %r264, %r5243, %r5049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5575, %r264, %r5254, %r5054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5579, %r264, %r5265, %r5059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5583, %r264, %r5276, %r5064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5587, %r264, %r5289, %r5069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5591, %r264, %r5300, %r5074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5595, %r264, %r5311, %r5079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5599, %r264, %r5322, %r5084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5603, %r264, %r5335, %r5089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5607, %r264, %r5346, %r5094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5611, %r264, %r5357, %r5099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5615, %r264, %r5368, %r5104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5619, %r282, %r5381, %r5109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5623, %r282, %r5392, %r5114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5627, %r282, %r5403, %r5119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5631, %r282, %r5414, %r5124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5635, %r282, %r5427, %r5129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5639, %r282, %r5438, %r5134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5643, %r282, %r5449, %r5139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5647, %r282, %r5460, %r5144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5651, %r282, %r5473, %r5149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5655, %r282, %r5484, %r5154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5659, %r282, %r5495, %r5159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5663, %r282, %r5506, %r5164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5667, %r282, %r5519, %r5169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5671, %r282, %r5530, %r5174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5675, %r282, %r5541, %r5179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5679, %r282, %r5552, %r5184;
	// end inline asm
	// begin inline asm
	mov.b32 %r5688, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5699, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5685, %r846, %r2431, %r5688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5689, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5690, %r5688, %r5689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5693, %r5685, %r5690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5696, %r857, %r2431, %r5699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5700, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5701, %r5699, %r5700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5704, %r5696, %r5701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5707, %r846, %r2453, %r5688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5711, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5712, %r5688, %r5711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5715, %r5707, %r5712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5718, %r857, %r2453, %r5699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5722, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5723, %r5699, %r5722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5726, %r5718, %r5723;
	// end inline asm
	// begin inline asm
	mov.b32 %r5734, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5745, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5731, %r846, %r2477, %r5734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5735, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5736, %r5734, %r5735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5739, %r5731, %r5736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5742, %r857, %r2477, %r5745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5746, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5747, %r5745, %r5746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5750, %r5742, %r5747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5753, %r846, %r2499, %r5734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5757, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5758, %r5734, %r5757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5761, %r5753, %r5758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5764, %r857, %r2499, %r5745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5768, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5769, %r5745, %r5768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5772, %r5764, %r5769;
	// end inline asm
	// begin inline asm
	mov.b32 %r5780, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5791, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5777, %r846, %r2523, %r5780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5781, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5782, %r5780, %r5781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5785, %r5777, %r5782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5788, %r857, %r2523, %r5791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5792, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5793, %r5791, %r5792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5796, %r5788, %r5793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5799, %r846, %r2545, %r5780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5803, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5804, %r5780, %r5803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5807, %r5799, %r5804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5810, %r857, %r2545, %r5791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5814, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5815, %r5791, %r5814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5818, %r5810, %r5815;
	// end inline asm
	// begin inline asm
	mov.b32 %r5826, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5837, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5823, %r846, %r2569, %r5826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5827, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5828, %r5826, %r5827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5831, %r5823, %r5828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5834, %r857, %r2569, %r5837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5838, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5839, %r5837, %r5838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5842, %r5834, %r5839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5845, %r846, %r2591, %r5826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5849, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5850, %r5826, %r5849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5853, %r5845, %r5850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5856, %r857, %r2591, %r5837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5860, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5861, %r5837, %r5860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5864, %r5856, %r5861;
	// end inline asm
	// begin inline asm
	mov.b32 %r5872, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5883, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5869, %r846, %r2615, %r5872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5873, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5874, %r5872, %r5873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5877, %r5869, %r5874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5880, %r857, %r2615, %r5883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5884, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5885, %r5883, %r5884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5888, %r5880, %r5885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5891, %r846, %r2637, %r5872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5895, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5896, %r5872, %r5895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5899, %r5891, %r5896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5902, %r857, %r2637, %r5883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5906, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5907, %r5883, %r5906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5910, %r5902, %r5907;
	// end inline asm
	// begin inline asm
	mov.b32 %r5918, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5929, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5915, %r846, %r2661, %r5918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5919, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5920, %r5918, %r5919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5923, %r5915, %r5920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5926, %r857, %r2661, %r5929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5930, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5931, %r5929, %r5930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5934, %r5926, %r5931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5937, %r846, %r2683, %r5918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5941, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5942, %r5918, %r5941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5945, %r5937, %r5942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5948, %r857, %r2683, %r5929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5952, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5953, %r5929, %r5952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5956, %r5948, %r5953;
	// end inline asm
	// begin inline asm
	mov.b32 %r5964, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5975, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5961, %r846, %r2707, %r5964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5965, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5966, %r5964, %r5965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5969, %r5961, %r5966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5972, %r857, %r2707, %r5975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5976, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5977, %r5975, %r5976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5980, %r5972, %r5977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5983, %r846, %r2729, %r5964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5987, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5988, %r5964, %r5987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5991, %r5983, %r5988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5994, %r857, %r2729, %r5975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5998, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5999, %r5975, %r5998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6002, %r5994, %r5999;
	// end inline asm
	// begin inline asm
	mov.b32 %r6010, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6021, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6007, %r846, %r2753, %r6010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6011, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6012, %r6010, %r6011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6015, %r6007, %r6012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6018, %r857, %r2753, %r6021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6022, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6023, %r6021, %r6022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6026, %r6018, %r6023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6029, %r846, %r2775, %r6010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6033, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6034, %r6010, %r6033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6037, %r6029, %r6034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6040, %r857, %r2775, %r6021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6044, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6045, %r6021, %r6044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6048, %r6040, %r6045;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6051, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6053, %r6051, %r5693, %r5555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6057, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6059, %r6057, %r5704, %r5559;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6063, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6065, %r6063, %r5715, %r5563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6069, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6071, %r6069, %r5726, %r5567;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6075, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6077, %r6075, %r5739, %r5571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6081, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6083, %r6081, %r5750, %r5575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6087, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6089, %r6087, %r5761, %r5579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6093, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6095, %r6093, %r5772, %r5583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6099, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6101, %r6099, %r5785, %r5587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6105, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6107, %r6105, %r5796, %r5591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6111, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6113, %r6111, %r5807, %r5595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6117, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6119, %r6117, %r5818, %r5599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6123, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6125, %r6123, %r5831, %r5603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6129, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6131, %r6129, %r5842, %r5607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6135, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6137, %r6135, %r5853, %r5611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6141, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6143, %r6141, %r5864, %r5615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6147, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6149, %r6147, %r5877, %r5619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6153, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6155, %r6153, %r5888, %r5623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6159, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6161, %r6159, %r5899, %r5627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6165, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6167, %r6165, %r5910, %r5631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6171, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6173, %r6171, %r5923, %r5635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6177, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6179, %r6177, %r5934, %r5639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6183, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6185, %r6183, %r5945, %r5643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6189, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6191, %r6189, %r5956, %r5647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6195, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6197, %r6195, %r5969, %r5651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6201, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6203, %r6201, %r5980, %r5655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6207, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6209, %r6207, %r5991, %r5659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6213, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6215, %r6213, %r6002, %r5663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6219, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6221, %r6219, %r6015, %r5667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6225, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6227, %r6225, %r6026, %r5671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6231, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6233, %r6231, %r6037, %r5675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6237, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6239, %r6237, %r6048, %r5679;
	// end inline asm
	// begin inline asm
	mov.b32 %r6248, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6259, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6245, %r846, %r847, %r6248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6249, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6250, %r6248, %r6249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6253, %r6245, %r6250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6256, %r857, %r847, %r6259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6260, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6261, %r6259, %r6260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6264, %r6256, %r6261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6267, %r846, %r869, %r6248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6271, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6272, %r6248, %r6271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6275, %r6267, %r6272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6278, %r857, %r869, %r6259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6282, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6283, %r6259, %r6282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6286, %r6278, %r6283;
	// end inline asm
	// begin inline asm
	mov.b32 %r6294, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6305, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6291, %r846, %r893, %r6294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6295, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6296, %r6294, %r6295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6299, %r6291, %r6296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6302, %r857, %r893, %r6305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6306, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6307, %r6305, %r6306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6310, %r6302, %r6307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6313, %r846, %r915, %r6294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6317, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6318, %r6294, %r6317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6321, %r6313, %r6318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6324, %r857, %r915, %r6305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6328, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6329, %r6305, %r6328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6332, %r6324, %r6329;
	// end inline asm
	// begin inline asm
	mov.b32 %r6340, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6351, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6337, %r846, %r939, %r6340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6341, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6342, %r6340, %r6341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6345, %r6337, %r6342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6348, %r857, %r939, %r6351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6352, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6353, %r6351, %r6352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6356, %r6348, %r6353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6359, %r846, %r961, %r6340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6363, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6364, %r6340, %r6363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6367, %r6359, %r6364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6370, %r857, %r961, %r6351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6374, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6375, %r6351, %r6374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6378, %r6370, %r6375;
	// end inline asm
	// begin inline asm
	mov.b32 %r6386, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6397, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6383, %r846, %r985, %r6386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6387, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6388, %r6386, %r6387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6391, %r6383, %r6388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6394, %r857, %r985, %r6397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6398, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6399, %r6397, %r6398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6402, %r6394, %r6399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6405, %r846, %r1007, %r6386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6409, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6410, %r6386, %r6409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6413, %r6405, %r6410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6416, %r857, %r1007, %r6397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6420, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6421, %r6397, %r6420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6424, %r6416, %r6421;
	// end inline asm
	// begin inline asm
	mov.b32 %r6432, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6443, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6429, %r846, %r1031, %r6432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6433, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6434, %r6432, %r6433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6437, %r6429, %r6434;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6440, %r857, %r1031, %r6443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6444, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6445, %r6443, %r6444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6448, %r6440, %r6445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6451, %r846, %r1053, %r6432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6455, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6456, %r6432, %r6455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6459, %r6451, %r6456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6462, %r857, %r1053, %r6443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6466, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6467, %r6443, %r6466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6470, %r6462, %r6467;
	// end inline asm
	// begin inline asm
	mov.b32 %r6478, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6489, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6475, %r846, %r1077, %r6478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6479, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6480, %r6478, %r6479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6483, %r6475, %r6480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6486, %r857, %r1077, %r6489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6490, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6491, %r6489, %r6490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6494, %r6486, %r6491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6497, %r846, %r1099, %r6478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6501, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6502, %r6478, %r6501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6505, %r6497, %r6502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6508, %r857, %r1099, %r6489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6512, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6513, %r6489, %r6512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6516, %r6508, %r6513;
	// end inline asm
	// begin inline asm
	mov.b32 %r6524, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6535, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6521, %r846, %r1123, %r6524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6525, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6526, %r6524, %r6525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6529, %r6521, %r6526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6532, %r857, %r1123, %r6535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6536, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6537, %r6535, %r6536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6540, %r6532, %r6537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6543, %r846, %r1145, %r6524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6547, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6548, %r6524, %r6547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6551, %r6543, %r6548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6554, %r857, %r1145, %r6535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6558, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6559, %r6535, %r6558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6562, %r6554, %r6559;
	// end inline asm
	// begin inline asm
	mov.b32 %r6570, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6581, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6567, %r846, %r1169, %r6570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6571, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6572, %r6570, %r6571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6575, %r6567, %r6572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6578, %r857, %r1169, %r6581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6582, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6583, %r6581, %r6582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6586, %r6578, %r6583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6589, %r846, %r1191, %r6570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6593, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6594, %r6570, %r6593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6597, %r6589, %r6594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6600, %r857, %r1191, %r6581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6604, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6605, %r6581, %r6604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6608, %r6600, %r6605;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6746, %r336, %r6253, %r6053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6743, %r336, %r6264, %r6059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6755, %r336, %r6275, %r6065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6752, %r336, %r6286, %r6071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6764, %r336, %r6299, %r6077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6761, %r336, %r6310, %r6083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6773, %r336, %r6321, %r6089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6770, %r336, %r6332, %r6095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6782, %r336, %r6345, %r6101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6779, %r336, %r6356, %r6107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6791, %r336, %r6367, %r6113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6788, %r336, %r6378, %r6119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6800, %r336, %r6391, %r6125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6797, %r336, %r6402, %r6131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6809, %r336, %r6413, %r6137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6806, %r336, %r6424, %r6143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6818, %r354, %r6437, %r6149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6815, %r354, %r6448, %r6155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r354, %r6459, %r6161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6824, %r354, %r6470, %r6167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6836, %r354, %r6483, %r6173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6833, %r354, %r6494, %r6179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r354, %r6505, %r6185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6842, %r354, %r6516, %r6191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6854, %r354, %r6529, %r6197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6851, %r354, %r6540, %r6203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6863, %r354, %r6551, %r6209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6860, %r354, %r6562, %r6215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6872, %r354, %r6575, %r6221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6869, %r354, %r6586, %r6227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6881, %r354, %r6597, %r6233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6878, %r354, %r6608, %r6239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6739, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6741, %r6739, %r6743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6744, %r393, %r6746, %r6741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6748, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6750, %r6748, %r6752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6753, %r393, %r6755, %r6750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6757, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6759, %r6757, %r6761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6762, %r393, %r6764, %r6759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6766, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6768, %r6766, %r6770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6771, %r393, %r6773, %r6768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6775, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6777, %r6775, %r6779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6780, %r393, %r6782, %r6777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6784, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6786, %r6784, %r6788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6789, %r393, %r6791, %r6786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6793, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6795, %r6793, %r6797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6798, %r393, %r6800, %r6795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6802, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6804, %r6802, %r6806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6807, %r393, %r6809, %r6804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6811, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6813, %r6811, %r6815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6816, %r396, %r6818, %r6813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6820, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6822, %r6820, %r6824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6825, %r396, %r6827, %r6822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6829, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6831, %r6829, %r6833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6834, %r396, %r6836, %r6831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6838, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6840, %r6838, %r6842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6843, %r396, %r6845, %r6840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6847, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6849, %r6847, %r6851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6852, %r396, %r6854, %r6849;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6856, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6858, %r6856, %r6860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6861, %r396, %r6863, %r6858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6865, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6867, %r6865, %r6869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6870, %r396, %r6872, %r6867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6874, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6876, %r6874, %r6878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6879, %r396, %r6881, %r6876;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6883, %r399, %r6746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6886, %r393, %r6743, %r6883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6890, %r399, %r6755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6893, %r393, %r6752, %r6890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6897, %r399, %r6764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6900, %r393, %r6761, %r6897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6904, %r399, %r6773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6907, %r393, %r6770, %r6904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6911, %r399, %r6782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6914, %r393, %r6779, %r6911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6918, %r399, %r6791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6921, %r393, %r6788, %r6918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6925, %r399, %r6800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6928, %r393, %r6797, %r6925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6932, %r399, %r6809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6935, %r393, %r6806, %r6932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6939, %r402, %r6818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6942, %r396, %r6815, %r6939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6946, %r402, %r6827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6949, %r396, %r6824, %r6946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6953, %r402, %r6836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6956, %r396, %r6833, %r6953;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6960, %r402, %r6845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6963, %r396, %r6842, %r6960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6967, %r402, %r6854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6970, %r396, %r6851, %r6967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6974, %r402, %r6863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6977, %r396, %r6860, %r6974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6981, %r402, %r6872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6984, %r396, %r6869, %r6981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6988, %r402, %r6881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6991, %r396, %r6878, %r6988;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7162, %r7159}, {%r460, %r466, %r463, %r469}, {%r6744, %r6886}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7171, %r7168}, {%r460, %r466, %r463, %r469}, {%r6753, %r6893}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7180, %r7177}, {%r460, %r466, %r463, %r469}, {%r6762, %r6900}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7189, %r7186}, {%r460, %r466, %r463, %r469}, {%r6771, %r6907}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7198, %r7195}, {%r460, %r466, %r463, %r469}, {%r6780, %r6914}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7207, %r7204}, {%r460, %r466, %r463, %r469}, {%r6789, %r6921}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7216, %r7213}, {%r460, %r466, %r463, %r469}, {%r6798, %r6928}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7225, %r7222}, {%r460, %r466, %r463, %r469}, {%r6807, %r6935}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7234, %r7231}, {%r460, %r466, %r463, %r469}, {%r6816, %r6942}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7243, %r7240}, {%r460, %r466, %r463, %r469}, {%r6825, %r6949}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7252, %r7249}, {%r460, %r466, %r463, %r469}, {%r6834, %r6956}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7261, %r7258}, {%r460, %r466, %r463, %r469}, {%r6843, %r6963}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7270, %r7267}, {%r460, %r466, %r463, %r469}, {%r6852, %r6970}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7279, %r7276}, {%r460, %r466, %r463, %r469}, {%r6861, %r6977}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7288, %r7285}, {%r460, %r466, %r463, %r469}, {%r6870, %r6984}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7297, %r7294}, {%r460, %r466, %r463, %r469}, {%r6879, %r6991}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7155, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7157, %r7155, %r7159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7160, %r510, %r7162, %r7157;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7164, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7166, %r7164, %r7168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7169, %r510, %r7171, %r7166;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7173, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7175, %r7173, %r7177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7178, %r510, %r7180, %r7175;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7182, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7184, %r7182, %r7186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7187, %r510, %r7189, %r7184;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7191, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7193, %r7191, %r7195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7196, %r510, %r7198, %r7193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7200, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7202, %r7200, %r7204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7205, %r510, %r7207, %r7202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7209, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7211, %r7209, %r7213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7214, %r510, %r7216, %r7211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7218, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7220, %r7218, %r7222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7223, %r510, %r7225, %r7220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7227, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7229, %r7227, %r7231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7232, %r510, %r7234, %r7229;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7236, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7238, %r7236, %r7240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7241, %r510, %r7243, %r7238;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7245, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7247, %r7245, %r7249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7250, %r510, %r7252, %r7247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7254, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7256, %r7254, %r7258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7259, %r510, %r7261, %r7256;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7263, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7265, %r7263, %r7267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7268, %r510, %r7270, %r7265;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7272, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7274, %r7272, %r7276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7277, %r510, %r7279, %r7274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7281, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7283, %r7281, %r7285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7286, %r510, %r7288, %r7283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7290, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7292, %r7290, %r7294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7295, %r510, %r7297, %r7292;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7299, %r513, %r7162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7302, %r510, %r7159, %r7299;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7306, %r513, %r7171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7309, %r510, %r7168, %r7306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7313, %r513, %r7180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7316, %r510, %r7177, %r7313;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7320, %r513, %r7189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7323, %r510, %r7186, %r7320;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7327, %r513, %r7198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7330, %r510, %r7195, %r7327;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7334, %r513, %r7207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7337, %r510, %r7204, %r7334;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7341, %r513, %r7216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7344, %r510, %r7213, %r7341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7348, %r513, %r7225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7351, %r510, %r7222, %r7348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7355, %r513, %r7234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7358, %r510, %r7231, %r7355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7362, %r513, %r7243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7365, %r510, %r7240, %r7362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7369, %r513, %r7252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7372, %r510, %r7249, %r7369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7376, %r513, %r7261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7379, %r510, %r7258, %r7376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7383, %r513, %r7270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7386, %r510, %r7267, %r7383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7390, %r513, %r7279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7393, %r510, %r7276, %r7390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7397, %r513, %r7288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7400, %r510, %r7285, %r7397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7404, %r513, %r7297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7407, %r510, %r7294, %r7404;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7700, %r7703}, {%r548, %r554, %r551, %r557}, {%r7160, %r7302}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7706, %r7709}, {%r548, %r554, %r551, %r557}, {%r7169, %r7309}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7712, %r7715}, {%r548, %r554, %r551, %r557}, {%r7178, %r7316}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7718, %r7721}, {%r548, %r554, %r551, %r557}, {%r7187, %r7323}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7724, %r7727}, {%r548, %r554, %r551, %r557}, {%r7196, %r7330}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7730, %r7733}, {%r548, %r554, %r551, %r557}, {%r7205, %r7337}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7736, %r7739}, {%r548, %r554, %r551, %r557}, {%r7214, %r7344}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7742, %r7745}, {%r548, %r554, %r551, %r557}, {%r7223, %r7351}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7701, %r7704}, {%r548, %r554, %r551, %r557}, {%r7232, %r7358}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7707, %r7710}, {%r548, %r554, %r551, %r557}, {%r7241, %r7365}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7713, %r7716}, {%r548, %r554, %r551, %r557}, {%r7250, %r7372}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7719, %r7722}, {%r548, %r554, %r551, %r557}, {%r7259, %r7379}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7725, %r7728}, {%r548, %r554, %r551, %r557}, {%r7268, %r7386}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7731, %r7734}, {%r548, %r554, %r551, %r557}, {%r7277, %r7393}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7737, %r7740}, {%r548, %r554, %r551, %r557}, {%r7286, %r7400}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7743, %r7746}, {%r548, %r554, %r551, %r557}, {%r7295, %r7407}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7699, %r7700, %r7701;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7702, %r7703, %r7704;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7705, %r7706, %r7707;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7708, %r7709, %r7710;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7711, %r7712, %r7713;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7714, %r7715, %r7716;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7717, %r7718, %r7719;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7720, %r7721, %r7722;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7723, %r7724, %r7725;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7726, %r7727, %r7728;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7729, %r7730, %r7731;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7732, %r7733, %r7734;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7735, %r7736, %r7737;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7738, %r7739, %r7740;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7741, %r7742, %r7743;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7744, %r7745, %r7746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7747, %r7700, %r7701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7750, %r7703, %r7704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7753, %r7706, %r7707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7756, %r7709, %r7710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7759, %r7712, %r7713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7762, %r7715, %r7716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7765, %r7718, %r7719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7768, %r7721, %r7722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7771, %r7724, %r7725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7774, %r7727, %r7728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7777, %r7730, %r7731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7780, %r7733, %r7734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7783, %r7736, %r7737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7786, %r7739, %r7740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7789, %r7742, %r7743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7792, %r7745, %r7746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7795, %r124, %r7699;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7798, %r124, %r7702;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7801, %r124, %r7705;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7804, %r124, %r7708;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7807, %r124, %r7711;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7810, %r124, %r7714;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7813, %r124, %r7717;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7816, %r124, %r7720;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7819, %r124, %r7723;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7822, %r124, %r7726;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7825, %r124, %r7729;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7828, %r124, %r7732;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7831, %r124, %r7735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7834, %r124, %r7738;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7837, %r124, %r7741;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7840, %r124, %r7744;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7843, %r125, %r7747;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7846, %r125, %r7750;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7849, %r125, %r7753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7852, %r125, %r7756;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7855, %r125, %r7759;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7858, %r125, %r7762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7861, %r125, %r7765;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7864, %r125, %r7768;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7867, %r125, %r7771;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7870, %r125, %r7774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7873, %r125, %r7777;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7876, %r125, %r7780;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7879, %r125, %r7783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7882, %r125, %r7786;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7885, %r125, %r7789;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7888, %r125, %r7792;
	// end inline asm
	// begin inline asm
	mov.b32 %r7891, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7892, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7893, %r7795, %r7891;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7896, %r7893, %r7892;
	// end inline asm
	// begin inline asm
	mov.b32 %r7899, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7900, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7901, %r7798, %r7899;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7904, %r7901, %r7900;
	// end inline asm
	// begin inline asm
	mov.b32 %r7907, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7908, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7909, %r7801, %r7907;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7912, %r7909, %r7908;
	// end inline asm
	// begin inline asm
	mov.b32 %r7915, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7916, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7917, %r7804, %r7915;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7920, %r7917, %r7916;
	// end inline asm
	// begin inline asm
	mov.b32 %r7923, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7924, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7925, %r7807, %r7923;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7928, %r7925, %r7924;
	// end inline asm
	// begin inline asm
	mov.b32 %r7931, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7932, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7933, %r7810, %r7931;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7936, %r7933, %r7932;
	// end inline asm
	// begin inline asm
	mov.b32 %r7939, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7940, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7941, %r7813, %r7939;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7944, %r7941, %r7940;
	// end inline asm
	// begin inline asm
	mov.b32 %r7947, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7948, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7949, %r7816, %r7947;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7952, %r7949, %r7948;
	// end inline asm
	// begin inline asm
	mov.b32 %r7955, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7956, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7957, %r7819, %r7955;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7960, %r7957, %r7956;
	// end inline asm
	// begin inline asm
	mov.b32 %r7963, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7964, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7965, %r7822, %r7963;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7968, %r7965, %r7964;
	// end inline asm
	// begin inline asm
	mov.b32 %r7971, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7972, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7973, %r7825, %r7971;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7976, %r7973, %r7972;
	// end inline asm
	// begin inline asm
	mov.b32 %r7979, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7980, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7981, %r7828, %r7979;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7984, %r7981, %r7980;
	// end inline asm
	// begin inline asm
	mov.b32 %r7987, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7988, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7989, %r7831, %r7987;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7992, %r7989, %r7988;
	// end inline asm
	// begin inline asm
	mov.b32 %r7995, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7996, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7997, %r7834, %r7995;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8000, %r7997, %r7996;
	// end inline asm
	// begin inline asm
	mov.b32 %r8003, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8004, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8005, %r7837, %r8003;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8008, %r8005, %r8004;
	// end inline asm
	// begin inline asm
	mov.b32 %r8011, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8012, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8013, %r7840, %r8011;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8016, %r8013, %r8012;
	// end inline asm
	// begin inline asm
	mov.b32 %r8019, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8020, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8021, %r7843, %r8019;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8024, %r8021, %r8020;
	// end inline asm
	// begin inline asm
	mov.b32 %r8027, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8028, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8029, %r7846, %r8027;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8032, %r8029, %r8028;
	// end inline asm
	// begin inline asm
	mov.b32 %r8035, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8036, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8037, %r7849, %r8035;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8040, %r8037, %r8036;
	// end inline asm
	// begin inline asm
	mov.b32 %r8043, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8044, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8045, %r7852, %r8043;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8048, %r8045, %r8044;
	// end inline asm
	// begin inline asm
	mov.b32 %r8051, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8052, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8053, %r7855, %r8051;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8056, %r8053, %r8052;
	// end inline asm
	// begin inline asm
	mov.b32 %r8059, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8060, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8061, %r7858, %r8059;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8064, %r8061, %r8060;
	// end inline asm
	// begin inline asm
	mov.b32 %r8067, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8068, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8069, %r7861, %r8067;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8072, %r8069, %r8068;
	// end inline asm
	// begin inline asm
	mov.b32 %r8075, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8076, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8077, %r7864, %r8075;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8080, %r8077, %r8076;
	// end inline asm
	// begin inline asm
	mov.b32 %r8083, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8084, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8085, %r7867, %r8083;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8088, %r8085, %r8084;
	// end inline asm
	// begin inline asm
	mov.b32 %r8091, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8092, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8093, %r7870, %r8091;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8096, %r8093, %r8092;
	// end inline asm
	// begin inline asm
	mov.b32 %r8099, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8100, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8101, %r7873, %r8099;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8104, %r8101, %r8100;
	// end inline asm
	// begin inline asm
	mov.b32 %r8107, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8108, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8109, %r7876, %r8107;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8112, %r8109, %r8108;
	// end inline asm
	// begin inline asm
	mov.b32 %r8115, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8116, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8117, %r7879, %r8115;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8120, %r8117, %r8116;
	// end inline asm
	// begin inline asm
	mov.b32 %r8123, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8124, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8125, %r7882, %r8123;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8128, %r8125, %r8124;
	// end inline asm
	// begin inline asm
	mov.b32 %r8131, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8132, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8133, %r7885, %r8131;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8136, %r8133, %r8132;
	// end inline asm
	// begin inline asm
	mov.b32 %r8139, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8140, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8141, %r7888, %r8139;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8144, %r8141, %r8140;
	// end inline asm
	// begin inline asm
	mov.b32 %r8150, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8148, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8149, %r8150, %r8148;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8152, %r7896, %r8149;
	// end inline asm
	// begin inline asm
	mov.b32 %r8155, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8156, %r8150, %r8155;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8159, %r7904, %r8156;
	// end inline asm
	// begin inline asm
	mov.b32 %r8162, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8163, %r8150, %r8162;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8166, %r7912, %r8163;
	// end inline asm
	// begin inline asm
	mov.b32 %r8169, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8170, %r8150, %r8169;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8173, %r7920, %r8170;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8176, %r8152, %r8166, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8180, %r8159, %r8173, %r4363;
	// end inline asm
	shl.b32 	%r8187, %r8180, 4;
	// begin inline asm
	lop3.b32 %r8184, %r4369, %r8176, %r8187, 202;
	// end inline asm
	xor.b32  	%r16171, %r8184, -2004318072;
	// begin inline asm
	mov.b32 %r8191, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8189, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8190, %r8191, %r8189;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8193, %r7928, %r8190;
	// end inline asm
	// begin inline asm
	mov.b32 %r8196, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8197, %r8191, %r8196;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8200, %r7936, %r8197;
	// end inline asm
	// begin inline asm
	mov.b32 %r8203, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8204, %r8191, %r8203;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8207, %r7944, %r8204;
	// end inline asm
	// begin inline asm
	mov.b32 %r8210, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8211, %r8191, %r8210;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8214, %r7952, %r8211;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8217, %r8193, %r8207, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8221, %r8200, %r8214, %r4363;
	// end inline asm
	shl.b32 	%r8228, %r8221, 4;
	// begin inline asm
	lop3.b32 %r8225, %r4369, %r8217, %r8228, 202;
	// end inline asm
	xor.b32  	%r16172, %r8225, -2004318072;
	// begin inline asm
	mov.b32 %r8232, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8230, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8231, %r8232, %r8230;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8234, %r7960, %r8231;
	// end inline asm
	// begin inline asm
	mov.b32 %r8237, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8238, %r8232, %r8237;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8241, %r7968, %r8238;
	// end inline asm
	// begin inline asm
	mov.b32 %r8244, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8245, %r8232, %r8244;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8248, %r7976, %r8245;
	// end inline asm
	// begin inline asm
	mov.b32 %r8251, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8252, %r8232, %r8251;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8255, %r7984, %r8252;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8258, %r8234, %r8248, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8262, %r8241, %r8255, %r4363;
	// end inline asm
	shl.b32 	%r8269, %r8262, 4;
	// begin inline asm
	lop3.b32 %r8266, %r4369, %r8258, %r8269, 202;
	// end inline asm
	xor.b32  	%r16173, %r8266, -2004318072;
	// begin inline asm
	mov.b32 %r8273, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8271, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8272, %r8273, %r8271;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8275, %r7992, %r8272;
	// end inline asm
	// begin inline asm
	mov.b32 %r8278, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8279, %r8273, %r8278;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8282, %r8000, %r8279;
	// end inline asm
	// begin inline asm
	mov.b32 %r8285, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8286, %r8273, %r8285;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8289, %r8008, %r8286;
	// end inline asm
	// begin inline asm
	mov.b32 %r8292, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8293, %r8273, %r8292;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8296, %r8016, %r8293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8299, %r8275, %r8289, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8303, %r8282, %r8296, %r4363;
	// end inline asm
	shl.b32 	%r8310, %r8303, 4;
	// begin inline asm
	lop3.b32 %r8307, %r4369, %r8299, %r8310, 202;
	// end inline asm
	xor.b32  	%r16174, %r8307, -2004318072;
	// begin inline asm
	mov.b32 %r8314, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8312, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8313, %r8314, %r8312;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8316, %r8024, %r8313;
	// end inline asm
	// begin inline asm
	mov.b32 %r8319, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8320, %r8314, %r8319;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8323, %r8032, %r8320;
	// end inline asm
	// begin inline asm
	mov.b32 %r8326, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8327, %r8314, %r8326;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8330, %r8040, %r8327;
	// end inline asm
	// begin inline asm
	mov.b32 %r8333, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8334, %r8314, %r8333;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8337, %r8048, %r8334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8340, %r8316, %r8330, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8344, %r8323, %r8337, %r4363;
	// end inline asm
	shl.b32 	%r8351, %r8344, 4;
	// begin inline asm
	lop3.b32 %r8348, %r4369, %r8340, %r8351, 202;
	// end inline asm
	xor.b32  	%r16175, %r8348, -2004318072;
	// begin inline asm
	mov.b32 %r8355, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8353, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8354, %r8355, %r8353;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8357, %r8056, %r8354;
	// end inline asm
	// begin inline asm
	mov.b32 %r8360, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8361, %r8355, %r8360;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8364, %r8064, %r8361;
	// end inline asm
	// begin inline asm
	mov.b32 %r8367, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8368, %r8355, %r8367;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8371, %r8072, %r8368;
	// end inline asm
	// begin inline asm
	mov.b32 %r8374, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8375, %r8355, %r8374;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8378, %r8080, %r8375;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8381, %r8357, %r8371, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8385, %r8364, %r8378, %r4363;
	// end inline asm
	shl.b32 	%r8392, %r8385, 4;
	// begin inline asm
	lop3.b32 %r8389, %r4369, %r8381, %r8392, 202;
	// end inline asm
	xor.b32  	%r16176, %r8389, -2004318072;
	// begin inline asm
	mov.b32 %r8396, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8394, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8395, %r8396, %r8394;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8398, %r8088, %r8395;
	// end inline asm
	// begin inline asm
	mov.b32 %r8401, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8402, %r8396, %r8401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8405, %r8096, %r8402;
	// end inline asm
	// begin inline asm
	mov.b32 %r8408, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8409, %r8396, %r8408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8412, %r8104, %r8409;
	// end inline asm
	// begin inline asm
	mov.b32 %r8415, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8416, %r8396, %r8415;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8419, %r8112, %r8416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8422, %r8398, %r8412, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8426, %r8405, %r8419, %r4363;
	// end inline asm
	shl.b32 	%r8433, %r8426, 4;
	// begin inline asm
	lop3.b32 %r8430, %r4369, %r8422, %r8433, 202;
	// end inline asm
	xor.b32  	%r16177, %r8430, -2004318072;
	// begin inline asm
	mov.b32 %r8437, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8435, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8436, %r8437, %r8435;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8439, %r8120, %r8436;
	// end inline asm
	// begin inline asm
	mov.b32 %r8442, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8443, %r8437, %r8442;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8446, %r8128, %r8443;
	// end inline asm
	// begin inline asm
	mov.b32 %r8449, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8450, %r8437, %r8449;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8453, %r8136, %r8450;
	// end inline asm
	// begin inline asm
	mov.b32 %r8456, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8457, %r8437, %r8456;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8460, %r8144, %r8457;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8463, %r8439, %r8453, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8467, %r8446, %r8460, %r4363;
	// end inline asm
	shl.b32 	%r8474, %r8467, 4;
	// begin inline asm
	lop3.b32 %r8471, %r4369, %r8463, %r8474, 202;
	// end inline asm
	xor.b32  	%r16178, %r8471, -2004318072;
	st.shared.u32 	[%rd96], %r16171;
	st.shared.u32 	[%rd98], %r16172;
	st.shared.u32 	[%rd100], %r16173;
	st.shared.u32 	[%rd102], %r16174;
	st.shared.u32 	[%rd104], %r16175;
	st.shared.u32 	[%rd106], %r16176;
	st.shared.u32 	[%rd108], %r16177;
	st.shared.u32 	[%rd110], %r16178;
	ld.shared.u32 	%r16290, [%rd80];
	ld.shared.u32 	%r16291, [%rd82];
	ld.shared.u32 	%r16292, [%rd84];
	ld.shared.u32 	%r16293, [%rd86];
	ld.shared.u32 	%r16302, [%rd88];
	ld.shared.u32 	%r16303, [%rd90];
	ld.shared.u32 	%r16304, [%rd92];
	ld.shared.u32 	%r16305, [%rd94];
	// begin inline asm
	mov.b32 %r8480, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8491, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8479, %r16290, -2004318072;
	// begin inline asm
	lop3.b32 %r8477, %r846, %r8479, %r8480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8481, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8482, %r8480, %r8481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8485, %r8477, %r8482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8488, %r857, %r8479, %r8491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8492, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8493, %r8491, %r8492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8496, %r8488, %r8493;
	// end inline asm
	shr.u32 	%r8501, %r8479, 8;
	// begin inline asm
	lop3.b32 %r8499, %r846, %r8501, %r8480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8503, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8504, %r8480, %r8503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8507, %r8499, %r8504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8510, %r857, %r8501, %r8491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8514, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8515, %r8491, %r8514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8518, %r8510, %r8515;
	// end inline asm
	// begin inline asm
	mov.b32 %r8526, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8537, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8525, %r16291, -2004318072;
	// begin inline asm
	lop3.b32 %r8523, %r846, %r8525, %r8526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8527, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8528, %r8526, %r8527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8531, %r8523, %r8528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8534, %r857, %r8525, %r8537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8538, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8539, %r8537, %r8538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8542, %r8534, %r8539;
	// end inline asm
	shr.u32 	%r8547, %r8525, 8;
	// begin inline asm
	lop3.b32 %r8545, %r846, %r8547, %r8526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8549, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8550, %r8526, %r8549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8553, %r8545, %r8550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8556, %r857, %r8547, %r8537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8560, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8561, %r8537, %r8560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8564, %r8556, %r8561;
	// end inline asm
	// begin inline asm
	mov.b32 %r8572, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8583, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8571, %r16292, -2004318072;
	// begin inline asm
	lop3.b32 %r8569, %r846, %r8571, %r8572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8573, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8574, %r8572, %r8573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8577, %r8569, %r8574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8580, %r857, %r8571, %r8583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8584, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8585, %r8583, %r8584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8588, %r8580, %r8585;
	// end inline asm
	shr.u32 	%r8593, %r8571, 8;
	// begin inline asm
	lop3.b32 %r8591, %r846, %r8593, %r8572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8595, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8596, %r8572, %r8595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8599, %r8591, %r8596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8602, %r857, %r8593, %r8583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8606, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8607, %r8583, %r8606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8610, %r8602, %r8607;
	// end inline asm
	// begin inline asm
	mov.b32 %r8618, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8629, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8617, %r16293, -2004318072;
	// begin inline asm
	lop3.b32 %r8615, %r846, %r8617, %r8618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8619, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8620, %r8618, %r8619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8623, %r8615, %r8620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8626, %r857, %r8617, %r8629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8630, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8631, %r8629, %r8630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8634, %r8626, %r8631;
	// end inline asm
	shr.u32 	%r8639, %r8617, 8;
	// begin inline asm
	lop3.b32 %r8637, %r846, %r8639, %r8618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8641, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8642, %r8618, %r8641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8645, %r8637, %r8642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8648, %r857, %r8639, %r8629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8652, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8653, %r8629, %r8652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8656, %r8648, %r8653;
	// end inline asm
	// begin inline asm
	mov.b32 %r8664, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8675, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8663, %r16302, -2004318072;
	// begin inline asm
	lop3.b32 %r8661, %r846, %r8663, %r8664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8665, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8666, %r8664, %r8665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8669, %r8661, %r8666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8672, %r857, %r8663, %r8675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8676, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8677, %r8675, %r8676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8680, %r8672, %r8677;
	// end inline asm
	shr.u32 	%r8685, %r8663, 8;
	// begin inline asm
	lop3.b32 %r8683, %r846, %r8685, %r8664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8687, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8688, %r8664, %r8687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8691, %r8683, %r8688;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8694, %r857, %r8685, %r8675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8698, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8699, %r8675, %r8698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8702, %r8694, %r8699;
	// end inline asm
	// begin inline asm
	mov.b32 %r8710, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8721, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8709, %r16303, -2004318072;
	// begin inline asm
	lop3.b32 %r8707, %r846, %r8709, %r8710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8711, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8712, %r8710, %r8711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8715, %r8707, %r8712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8718, %r857, %r8709, %r8721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8722, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8723, %r8721, %r8722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8726, %r8718, %r8723;
	// end inline asm
	shr.u32 	%r8731, %r8709, 8;
	// begin inline asm
	lop3.b32 %r8729, %r846, %r8731, %r8710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8733, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8734, %r8710, %r8733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8737, %r8729, %r8734;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8740, %r857, %r8731, %r8721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8744, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8745, %r8721, %r8744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8748, %r8740, %r8745;
	// end inline asm
	// begin inline asm
	mov.b32 %r8756, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8767, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8755, %r16304, -2004318072;
	// begin inline asm
	lop3.b32 %r8753, %r846, %r8755, %r8756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8757, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8758, %r8756, %r8757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8761, %r8753, %r8758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8764, %r857, %r8755, %r8767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8768, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8769, %r8767, %r8768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8772, %r8764, %r8769;
	// end inline asm
	shr.u32 	%r8777, %r8755, 8;
	// begin inline asm
	lop3.b32 %r8775, %r846, %r8777, %r8756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8779, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8780, %r8756, %r8779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8783, %r8775, %r8780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8786, %r857, %r8777, %r8767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8790, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8791, %r8767, %r8790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8794, %r8786, %r8791;
	// end inline asm
	// begin inline asm
	mov.b32 %r8802, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8813, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8801, %r16305, -2004318072;
	// begin inline asm
	lop3.b32 %r8799, %r846, %r8801, %r8802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8803, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8804, %r8802, %r8803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8807, %r8799, %r8804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8810, %r857, %r8801, %r8813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8814, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8815, %r8813, %r8814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8818, %r8810, %r8815;
	// end inline asm
	shr.u32 	%r8823, %r8801, 8;
	// begin inline asm
	lop3.b32 %r8821, %r846, %r8823, %r8802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8825, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8826, %r8802, %r8825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8829, %r8821, %r8826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8832, %r857, %r8823, %r8813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8836, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8837, %r8813, %r8836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8840, %r8832, %r8837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8843, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8845, %r8843, %r8485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8848, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8850, %r8848, %r8496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8853, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8855, %r8853, %r8507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8858, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8860, %r8858, %r8518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8863, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8865, %r8863, %r8531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8868, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8870, %r8868, %r8542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8873, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8875, %r8873, %r8553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8878, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8880, %r8878, %r8564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8883, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8885, %r8883, %r8577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8888, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8890, %r8888, %r8588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8893, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8895, %r8893, %r8599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8898, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8900, %r8898, %r8610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8903, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8905, %r8903, %r8623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8908, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8910, %r8908, %r8634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8913, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8915, %r8913, %r8645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8918, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8920, %r8918, %r8656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8923, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8925, %r8923, %r8669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8928, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8930, %r8928, %r8680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8933, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8935, %r8933, %r8691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8938, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8940, %r8938, %r8702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8943, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8945, %r8943, %r8715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8948, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8950, %r8948, %r8726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8953, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8955, %r8953, %r8737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8958, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8960, %r8958, %r8748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8963, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8965, %r8963, %r8761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8968, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8970, %r8968, %r8772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8973, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8975, %r8973, %r8783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8978, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8980, %r8978, %r8794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8983, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8985, %r8983, %r8807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8988, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8990, %r8988, %r8818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8993, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8995, %r8993, %r8829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8998, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9000, %r8998, %r8840;
	// end inline asm
	// begin inline asm
	mov.b32 %r9008, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9019, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9005, %r846, %r2431, %r9008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9009, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9010, %r9008, %r9009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9013, %r9005, %r9010;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9016, %r857, %r2431, %r9019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9020, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9021, %r9019, %r9020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9024, %r9016, %r9021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9027, %r846, %r2453, %r9008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9031, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9032, %r9008, %r9031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9035, %r9027, %r9032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9038, %r857, %r2453, %r9019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9042, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9043, %r9019, %r9042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9046, %r9038, %r9043;
	// end inline asm
	// begin inline asm
	mov.b32 %r9054, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9065, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9051, %r846, %r2477, %r9054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9055, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9056, %r9054, %r9055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9059, %r9051, %r9056;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9062, %r857, %r2477, %r9065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9066, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9067, %r9065, %r9066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9070, %r9062, %r9067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9073, %r846, %r2499, %r9054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9077, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9078, %r9054, %r9077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9081, %r9073, %r9078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9084, %r857, %r2499, %r9065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9088, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9089, %r9065, %r9088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9092, %r9084, %r9089;
	// end inline asm
	// begin inline asm
	mov.b32 %r9100, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9111, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9097, %r846, %r2523, %r9100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9101, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9102, %r9100, %r9101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9105, %r9097, %r9102;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9108, %r857, %r2523, %r9111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9112, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9113, %r9111, %r9112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9116, %r9108, %r9113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9119, %r846, %r2545, %r9100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9123, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9124, %r9100, %r9123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9127, %r9119, %r9124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9130, %r857, %r2545, %r9111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9134, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9135, %r9111, %r9134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9138, %r9130, %r9135;
	// end inline asm
	// begin inline asm
	mov.b32 %r9146, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9157, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9143, %r846, %r2569, %r9146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9147, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9148, %r9146, %r9147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9151, %r9143, %r9148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9154, %r857, %r2569, %r9157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9158, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9159, %r9157, %r9158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9162, %r9154, %r9159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9165, %r846, %r2591, %r9146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9169, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9170, %r9146, %r9169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9173, %r9165, %r9170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9176, %r857, %r2591, %r9157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9180, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9181, %r9157, %r9180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9184, %r9176, %r9181;
	// end inline asm
	// begin inline asm
	mov.b32 %r9192, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9203, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9189, %r846, %r2615, %r9192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9193, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9194, %r9192, %r9193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9197, %r9189, %r9194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9200, %r857, %r2615, %r9203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9204, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9205, %r9203, %r9204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9208, %r9200, %r9205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9211, %r846, %r2637, %r9192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9215, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9216, %r9192, %r9215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9219, %r9211, %r9216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9222, %r857, %r2637, %r9203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9226, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9227, %r9203, %r9226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9230, %r9222, %r9227;
	// end inline asm
	// begin inline asm
	mov.b32 %r9238, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9249, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9235, %r846, %r2661, %r9238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9239, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9240, %r9238, %r9239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9243, %r9235, %r9240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9246, %r857, %r2661, %r9249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9250, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9251, %r9249, %r9250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9254, %r9246, %r9251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9257, %r846, %r2683, %r9238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9261, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9262, %r9238, %r9261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9265, %r9257, %r9262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9268, %r857, %r2683, %r9249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9272, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9273, %r9249, %r9272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9276, %r9268, %r9273;
	// end inline asm
	// begin inline asm
	mov.b32 %r9284, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9295, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9281, %r846, %r2707, %r9284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9285, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9286, %r9284, %r9285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9289, %r9281, %r9286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9292, %r857, %r2707, %r9295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9296, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9297, %r9295, %r9296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9300, %r9292, %r9297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9303, %r846, %r2729, %r9284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9307, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9308, %r9284, %r9307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9311, %r9303, %r9308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9314, %r857, %r2729, %r9295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9318, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9319, %r9295, %r9318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9322, %r9314, %r9319;
	// end inline asm
	// begin inline asm
	mov.b32 %r9330, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9341, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9327, %r846, %r2753, %r9330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9331, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9332, %r9330, %r9331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9335, %r9327, %r9332;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9338, %r857, %r2753, %r9341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9342, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9343, %r9341, %r9342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9346, %r9338, %r9343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9349, %r846, %r2775, %r9330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9353, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9354, %r9330, %r9353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9357, %r9349, %r9354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9360, %r857, %r2775, %r9341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9364, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9365, %r9341, %r9364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9368, %r9360, %r9365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9371, %r264, %r9013, %r8845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9375, %r264, %r9024, %r8850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9379, %r264, %r9035, %r8855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9383, %r264, %r9046, %r8860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9387, %r264, %r9059, %r8865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9391, %r264, %r9070, %r8870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9395, %r264, %r9081, %r8875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9399, %r264, %r9092, %r8880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9403, %r264, %r9105, %r8885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9407, %r264, %r9116, %r8890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9411, %r264, %r9127, %r8895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9415, %r264, %r9138, %r8900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9419, %r264, %r9151, %r8905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9423, %r264, %r9162, %r8910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9427, %r264, %r9173, %r8915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9431, %r264, %r9184, %r8920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9435, %r282, %r9197, %r8925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9439, %r282, %r9208, %r8930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9443, %r282, %r9219, %r8935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9447, %r282, %r9230, %r8940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9451, %r282, %r9243, %r8945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9455, %r282, %r9254, %r8950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9459, %r282, %r9265, %r8955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9463, %r282, %r9276, %r8960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9467, %r282, %r9289, %r8965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9471, %r282, %r9300, %r8970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9475, %r282, %r9311, %r8975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9479, %r282, %r9322, %r8980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9483, %r282, %r9335, %r8985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9487, %r282, %r9346, %r8990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9491, %r282, %r9357, %r8995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9495, %r282, %r9368, %r9000;
	// end inline asm
	// begin inline asm
	mov.b32 %r9504, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9515, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9501, %r846, %r847, %r9504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9505, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9506, %r9504, %r9505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9509, %r9501, %r9506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9512, %r857, %r847, %r9515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9516, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9517, %r9515, %r9516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9520, %r9512, %r9517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9523, %r846, %r869, %r9504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9527, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9528, %r9504, %r9527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9531, %r9523, %r9528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9534, %r857, %r869, %r9515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9538, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9539, %r9515, %r9538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9542, %r9534, %r9539;
	// end inline asm
	// begin inline asm
	mov.b32 %r9550, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9561, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9547, %r846, %r893, %r9550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9551, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9552, %r9550, %r9551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9555, %r9547, %r9552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9558, %r857, %r893, %r9561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9562, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9563, %r9561, %r9562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9566, %r9558, %r9563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9569, %r846, %r915, %r9550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9573, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9574, %r9550, %r9573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9577, %r9569, %r9574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9580, %r857, %r915, %r9561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9584, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9585, %r9561, %r9584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9588, %r9580, %r9585;
	// end inline asm
	// begin inline asm
	mov.b32 %r9596, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9607, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9593, %r846, %r939, %r9596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9597, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9598, %r9596, %r9597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9601, %r9593, %r9598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9604, %r857, %r939, %r9607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9608, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9609, %r9607, %r9608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9612, %r9604, %r9609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9615, %r846, %r961, %r9596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9619, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9620, %r9596, %r9619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9623, %r9615, %r9620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9626, %r857, %r961, %r9607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9630, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9631, %r9607, %r9630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9634, %r9626, %r9631;
	// end inline asm
	// begin inline asm
	mov.b32 %r9642, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9653, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9639, %r846, %r985, %r9642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9643, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9644, %r9642, %r9643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9647, %r9639, %r9644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9650, %r857, %r985, %r9653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9654, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9655, %r9653, %r9654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9658, %r9650, %r9655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9661, %r846, %r1007, %r9642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9665, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9666, %r9642, %r9665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9669, %r9661, %r9666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9672, %r857, %r1007, %r9653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9676, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9677, %r9653, %r9676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9680, %r9672, %r9677;
	// end inline asm
	// begin inline asm
	mov.b32 %r9688, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9699, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9685, %r846, %r1031, %r9688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9689, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9690, %r9688, %r9689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9693, %r9685, %r9690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9696, %r857, %r1031, %r9699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9700, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9701, %r9699, %r9700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9704, %r9696, %r9701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9707, %r846, %r1053, %r9688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9711, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9712, %r9688, %r9711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9715, %r9707, %r9712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9718, %r857, %r1053, %r9699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9722, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9723, %r9699, %r9722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9726, %r9718, %r9723;
	// end inline asm
	// begin inline asm
	mov.b32 %r9734, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9745, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9731, %r846, %r1077, %r9734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9735, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9736, %r9734, %r9735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9739, %r9731, %r9736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9742, %r857, %r1077, %r9745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9746, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9747, %r9745, %r9746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9750, %r9742, %r9747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9753, %r846, %r1099, %r9734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9757, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9758, %r9734, %r9757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9761, %r9753, %r9758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9764, %r857, %r1099, %r9745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9768, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9769, %r9745, %r9768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9772, %r9764, %r9769;
	// end inline asm
	// begin inline asm
	mov.b32 %r9780, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9791, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9777, %r846, %r1123, %r9780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9781, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9782, %r9780, %r9781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9785, %r9777, %r9782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9788, %r857, %r1123, %r9791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9792, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9793, %r9791, %r9792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9796, %r9788, %r9793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9799, %r846, %r1145, %r9780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9803, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9804, %r9780, %r9803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9807, %r9799, %r9804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9810, %r857, %r1145, %r9791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9814, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9815, %r9791, %r9814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9818, %r9810, %r9815;
	// end inline asm
	// begin inline asm
	mov.b32 %r9826, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9837, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9823, %r846, %r1169, %r9826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9827, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9828, %r9826, %r9827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9831, %r9823, %r9828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9834, %r857, %r1169, %r9837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9838, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9839, %r9837, %r9838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9842, %r9834, %r9839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9845, %r846, %r1191, %r9826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9849, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9850, %r9826, %r9849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9853, %r9845, %r9850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9856, %r857, %r1191, %r9837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9860, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9861, %r9837, %r9860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9864, %r9856, %r9861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9867, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9869, %r9867, %r9509, %r9371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9873, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9875, %r9873, %r9520, %r9375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9879, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9881, %r9879, %r9531, %r9379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9885, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9887, %r9885, %r9542, %r9383;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9891, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9893, %r9891, %r9555, %r9387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9897, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9899, %r9897, %r9566, %r9391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9903, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9905, %r9903, %r9577, %r9395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9909, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9911, %r9909, %r9588, %r9399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9915, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9917, %r9915, %r9601, %r9403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9921, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9923, %r9921, %r9612, %r9407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9927, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9929, %r9927, %r9623, %r9411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9933, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9935, %r9933, %r9634, %r9415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9939, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9941, %r9939, %r9647, %r9419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9945, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9947, %r9945, %r9658, %r9423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9951, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9953, %r9951, %r9669, %r9427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9957, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9959, %r9957, %r9680, %r9431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9963, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9965, %r9963, %r9693, %r9435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9969, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9971, %r9969, %r9704, %r9439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9975, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9977, %r9975, %r9715, %r9443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9981, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9983, %r9981, %r9726, %r9447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9987, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9989, %r9987, %r9739, %r9451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9993, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9995, %r9993, %r9750, %r9455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9999, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10001, %r9999, %r9761, %r9459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10005, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10007, %r10005, %r9772, %r9463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10011, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10013, %r10011, %r9785, %r9467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10017, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10019, %r10017, %r9796, %r9471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10023, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10025, %r10023, %r9807, %r9475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10029, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10031, %r10029, %r9818, %r9479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10035, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10037, %r10035, %r9831, %r9483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10041, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10043, %r10041, %r9842, %r9487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10047, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10049, %r10047, %r9853, %r9491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10053, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10055, %r10053, %r9864, %r9495;
	// end inline asm
	// begin inline asm
	mov.b32 %r10064, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10075, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10061, %r846, %r4663, %r10064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10065, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10066, %r10064, %r10065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10069, %r10061, %r10066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10072, %r857, %r4663, %r10075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10076, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10077, %r10075, %r10076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10080, %r10072, %r10077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10083, %r846, %r4685, %r10064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10087, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10088, %r10064, %r10087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10091, %r10083, %r10088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10094, %r857, %r4685, %r10075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10098, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10099, %r10075, %r10098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10102, %r10094, %r10099;
	// end inline asm
	// begin inline asm
	mov.b32 %r10110, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10121, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10107, %r846, %r4709, %r10110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10111, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10112, %r10110, %r10111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10115, %r10107, %r10112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10118, %r857, %r4709, %r10121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10122, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10123, %r10121, %r10122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10126, %r10118, %r10123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10129, %r846, %r4731, %r10110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10133, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10134, %r10110, %r10133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10137, %r10129, %r10134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10140, %r857, %r4731, %r10121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10144, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10145, %r10121, %r10144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10148, %r10140, %r10145;
	// end inline asm
	// begin inline asm
	mov.b32 %r10156, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10167, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10153, %r846, %r4755, %r10156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10157, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10158, %r10156, %r10157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10161, %r10153, %r10158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10164, %r857, %r4755, %r10167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10168, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10169, %r10167, %r10168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10172, %r10164, %r10169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10175, %r846, %r4777, %r10156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10179, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10180, %r10156, %r10179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10183, %r10175, %r10180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10186, %r857, %r4777, %r10167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10190, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10191, %r10167, %r10190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10194, %r10186, %r10191;
	// end inline asm
	// begin inline asm
	mov.b32 %r10202, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10213, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10199, %r846, %r4801, %r10202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10203, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10204, %r10202, %r10203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10207, %r10199, %r10204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10210, %r857, %r4801, %r10213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10214, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10215, %r10213, %r10214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10218, %r10210, %r10215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10221, %r846, %r4823, %r10202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10225, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10226, %r10202, %r10225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10229, %r10221, %r10226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10232, %r857, %r4823, %r10213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10236, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10237, %r10213, %r10236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10240, %r10232, %r10237;
	// end inline asm
	// begin inline asm
	mov.b32 %r10248, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10259, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10245, %r846, %r4847, %r10248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10249, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10250, %r10248, %r10249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10253, %r10245, %r10250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10256, %r857, %r4847, %r10259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10260, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10261, %r10259, %r10260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10264, %r10256, %r10261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10267, %r846, %r4869, %r10248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10271, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10272, %r10248, %r10271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10275, %r10267, %r10272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10278, %r857, %r4869, %r10259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10282, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10283, %r10259, %r10282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10286, %r10278, %r10283;
	// end inline asm
	// begin inline asm
	mov.b32 %r10294, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10305, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10291, %r846, %r4893, %r10294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10295, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10296, %r10294, %r10295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10299, %r10291, %r10296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10302, %r857, %r4893, %r10305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10306, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10307, %r10305, %r10306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10310, %r10302, %r10307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10313, %r846, %r4915, %r10294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10317, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10318, %r10294, %r10317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10321, %r10313, %r10318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10324, %r857, %r4915, %r10305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10328, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10329, %r10305, %r10328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10332, %r10324, %r10329;
	// end inline asm
	// begin inline asm
	mov.b32 %r10340, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10351, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10337, %r846, %r4939, %r10340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10341, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10342, %r10340, %r10341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10345, %r10337, %r10342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10348, %r857, %r4939, %r10351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10352, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10353, %r10351, %r10352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10356, %r10348, %r10353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10359, %r846, %r4961, %r10340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10363, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10364, %r10340, %r10363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10367, %r10359, %r10364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10370, %r857, %r4961, %r10351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10374, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10375, %r10351, %r10374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10378, %r10370, %r10375;
	// end inline asm
	// begin inline asm
	mov.b32 %r10386, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10397, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10383, %r846, %r4985, %r10386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10387, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10388, %r10386, %r10387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10391, %r10383, %r10388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10394, %r857, %r4985, %r10397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10398, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10399, %r10397, %r10398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10402, %r10394, %r10399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10405, %r846, %r5007, %r10386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10409, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10410, %r10386, %r10409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10413, %r10405, %r10410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10416, %r857, %r5007, %r10397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10420, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10421, %r10397, %r10420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10424, %r10416, %r10421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10562, %r336, %r10069, %r9869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10559, %r336, %r10080, %r9875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10571, %r336, %r10091, %r9881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10568, %r336, %r10102, %r9887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10580, %r336, %r10115, %r9893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10577, %r336, %r10126, %r9899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10589, %r336, %r10137, %r9905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10586, %r336, %r10148, %r9911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10598, %r336, %r10161, %r9917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10595, %r336, %r10172, %r9923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10607, %r336, %r10183, %r9929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10604, %r336, %r10194, %r9935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10616, %r336, %r10207, %r9941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10613, %r336, %r10218, %r9947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10625, %r336, %r10229, %r9953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10622, %r336, %r10240, %r9959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10634, %r354, %r10253, %r9965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10631, %r354, %r10264, %r9971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10643, %r354, %r10275, %r9977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10640, %r354, %r10286, %r9983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10652, %r354, %r10299, %r9989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10649, %r354, %r10310, %r9995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10661, %r354, %r10321, %r10001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10658, %r354, %r10332, %r10007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10670, %r354, %r10345, %r10013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10667, %r354, %r10356, %r10019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10679, %r354, %r10367, %r10025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10676, %r354, %r10378, %r10031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10688, %r354, %r10391, %r10037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10685, %r354, %r10402, %r10043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10697, %r354, %r10413, %r10049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10694, %r354, %r10424, %r10055;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10555, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10557, %r10555, %r10559;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10560, %r393, %r10562, %r10557;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10564, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10566, %r10564, %r10568;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10569, %r393, %r10571, %r10566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10573, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10575, %r10573, %r10577;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10578, %r393, %r10580, %r10575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10582, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10584, %r10582, %r10586;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10587, %r393, %r10589, %r10584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10591, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10593, %r10591, %r10595;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10596, %r393, %r10598, %r10593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10600, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10602, %r10600, %r10604;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10605, %r393, %r10607, %r10602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10609, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10611, %r10609, %r10613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10614, %r393, %r10616, %r10611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10618, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10620, %r10618, %r10622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10623, %r393, %r10625, %r10620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10627, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10629, %r10627, %r10631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10632, %r396, %r10634, %r10629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10636, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10638, %r10636, %r10640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10641, %r396, %r10643, %r10638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10645, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10647, %r10645, %r10649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10650, %r396, %r10652, %r10647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10654, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10656, %r10654, %r10658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10659, %r396, %r10661, %r10656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10663, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10665, %r10663, %r10667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10668, %r396, %r10670, %r10665;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10672, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10674, %r10672, %r10676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10677, %r396, %r10679, %r10674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10681, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10683, %r10681, %r10685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10686, %r396, %r10688, %r10683;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10690, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10692, %r10690, %r10694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10695, %r396, %r10697, %r10692;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10699, %r399, %r10562;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10702, %r393, %r10559, %r10699;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10706, %r399, %r10571;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10709, %r393, %r10568, %r10706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10713, %r399, %r10580;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10716, %r393, %r10577, %r10713;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10720, %r399, %r10589;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10723, %r393, %r10586, %r10720;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10727, %r399, %r10598;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10730, %r393, %r10595, %r10727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10734, %r399, %r10607;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10737, %r393, %r10604, %r10734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10741, %r399, %r10616;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10744, %r393, %r10613, %r10741;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10748, %r399, %r10625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10751, %r393, %r10622, %r10748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10755, %r402, %r10634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10758, %r396, %r10631, %r10755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10762, %r402, %r10643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10765, %r396, %r10640, %r10762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10769, %r402, %r10652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10772, %r396, %r10649, %r10769;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10776, %r402, %r10661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10779, %r396, %r10658, %r10776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10783, %r402, %r10670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10786, %r396, %r10667, %r10783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10790, %r402, %r10679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10793, %r396, %r10676, %r10790;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10797, %r402, %r10688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10800, %r396, %r10685, %r10797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10804, %r402, %r10697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10807, %r396, %r10694, %r10804;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10978, %r10975}, {%r460, %r466, %r463, %r469}, {%r10560, %r10702}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10987, %r10984}, {%r460, %r466, %r463, %r469}, {%r10569, %r10709}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10996, %r10993}, {%r460, %r466, %r463, %r469}, {%r10578, %r10716}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11005, %r11002}, {%r460, %r466, %r463, %r469}, {%r10587, %r10723}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11014, %r11011}, {%r460, %r466, %r463, %r469}, {%r10596, %r10730}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11023, %r11020}, {%r460, %r466, %r463, %r469}, {%r10605, %r10737}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11032, %r11029}, {%r460, %r466, %r463, %r469}, {%r10614, %r10744}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11041, %r11038}, {%r460, %r466, %r463, %r469}, {%r10623, %r10751}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11050, %r11047}, {%r460, %r466, %r463, %r469}, {%r10632, %r10758}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11059, %r11056}, {%r460, %r466, %r463, %r469}, {%r10641, %r10765}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11068, %r11065}, {%r460, %r466, %r463, %r469}, {%r10650, %r10772}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11077, %r11074}, {%r460, %r466, %r463, %r469}, {%r10659, %r10779}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11086, %r11083}, {%r460, %r466, %r463, %r469}, {%r10668, %r10786}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11095, %r11092}, {%r460, %r466, %r463, %r469}, {%r10677, %r10793}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11104, %r11101}, {%r460, %r466, %r463, %r469}, {%r10686, %r10800}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11113, %r11110}, {%r460, %r466, %r463, %r469}, {%r10695, %r10807}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10971, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10973, %r10971, %r10975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10976, %r510, %r10978, %r10973;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10980, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10982, %r10980, %r10984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10985, %r510, %r10987, %r10982;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10989, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10991, %r10989, %r10993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10994, %r510, %r10996, %r10991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10998, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11000, %r10998, %r11002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11003, %r510, %r11005, %r11000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11007, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11009, %r11007, %r11011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11012, %r510, %r11014, %r11009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11016, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11018, %r11016, %r11020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11021, %r510, %r11023, %r11018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11025, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11027, %r11025, %r11029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11030, %r510, %r11032, %r11027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11034, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11036, %r11034, %r11038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11039, %r510, %r11041, %r11036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11043, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11045, %r11043, %r11047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11048, %r510, %r11050, %r11045;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11052, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11054, %r11052, %r11056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11057, %r510, %r11059, %r11054;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11061, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11063, %r11061, %r11065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11066, %r510, %r11068, %r11063;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11070, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11072, %r11070, %r11074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11075, %r510, %r11077, %r11072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11079, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11081, %r11079, %r11083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11084, %r510, %r11086, %r11081;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11088, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11090, %r11088, %r11092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11093, %r510, %r11095, %r11090;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11097, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11099, %r11097, %r11101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11102, %r510, %r11104, %r11099;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11106, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11108, %r11106, %r11110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11111, %r510, %r11113, %r11108;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11115, %r513, %r10978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11118, %r510, %r10975, %r11115;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11122, %r513, %r10987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11125, %r510, %r10984, %r11122;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11129, %r513, %r10996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11132, %r510, %r10993, %r11129;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11136, %r513, %r11005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11139, %r510, %r11002, %r11136;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11143, %r513, %r11014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11146, %r510, %r11011, %r11143;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11150, %r513, %r11023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11153, %r510, %r11020, %r11150;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11157, %r513, %r11032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11160, %r510, %r11029, %r11157;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11164, %r513, %r11041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11167, %r510, %r11038, %r11164;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11171, %r513, %r11050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11174, %r510, %r11047, %r11171;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11178, %r513, %r11059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11181, %r510, %r11056, %r11178;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11185, %r513, %r11068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11188, %r510, %r11065, %r11185;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11192, %r513, %r11077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11195, %r510, %r11074, %r11192;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11199, %r513, %r11086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11202, %r510, %r11083, %r11199;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11206, %r513, %r11095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11209, %r510, %r11092, %r11206;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11213, %r513, %r11104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11216, %r510, %r11101, %r11213;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11220, %r513, %r11113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11223, %r510, %r11110, %r11220;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11516, %r11519}, {%r548, %r554, %r551, %r557}, {%r10976, %r11118}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11522, %r11525}, {%r548, %r554, %r551, %r557}, {%r10985, %r11125}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11528, %r11531}, {%r548, %r554, %r551, %r557}, {%r10994, %r11132}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11534, %r11537}, {%r548, %r554, %r551, %r557}, {%r11003, %r11139}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11540, %r11543}, {%r548, %r554, %r551, %r557}, {%r11012, %r11146}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11546, %r11549}, {%r548, %r554, %r551, %r557}, {%r11021, %r11153}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11552, %r11555}, {%r548, %r554, %r551, %r557}, {%r11030, %r11160}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11558, %r11561}, {%r548, %r554, %r551, %r557}, {%r11039, %r11167}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11517, %r11520}, {%r548, %r554, %r551, %r557}, {%r11048, %r11174}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11523, %r11526}, {%r548, %r554, %r551, %r557}, {%r11057, %r11181}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11529, %r11532}, {%r548, %r554, %r551, %r557}, {%r11066, %r11188}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11535, %r11538}, {%r548, %r554, %r551, %r557}, {%r11075, %r11195}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11541, %r11544}, {%r548, %r554, %r551, %r557}, {%r11084, %r11202}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11547, %r11550}, {%r548, %r554, %r551, %r557}, {%r11093, %r11209}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11553, %r11556}, {%r548, %r554, %r551, %r557}, {%r11102, %r11216}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11559, %r11562}, {%r548, %r554, %r551, %r557}, {%r11111, %r11223}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11515, %r11516, %r11517;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11518, %r11519, %r11520;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11521, %r11522, %r11523;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11524, %r11525, %r11526;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11527, %r11528, %r11529;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11530, %r11531, %r11532;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11533, %r11534, %r11535;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11536, %r11537, %r11538;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11539, %r11540, %r11541;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11542, %r11543, %r11544;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11545, %r11546, %r11547;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11548, %r11549, %r11550;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11551, %r11552, %r11553;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11554, %r11555, %r11556;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11557, %r11558, %r11559;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11560, %r11561, %r11562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11563, %r11516, %r11517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11566, %r11519, %r11520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11569, %r11522, %r11523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11572, %r11525, %r11526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11575, %r11528, %r11529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11578, %r11531, %r11532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11581, %r11534, %r11535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11584, %r11537, %r11538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11587, %r11540, %r11541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11590, %r11543, %r11544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11593, %r11546, %r11547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11596, %r11549, %r11550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11599, %r11552, %r11553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11602, %r11555, %r11556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11605, %r11558, %r11559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11608, %r11561, %r11562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11611, %r124, %r11515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11614, %r124, %r11518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11617, %r124, %r11521;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11620, %r124, %r11524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11623, %r124, %r11527;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11626, %r124, %r11530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11629, %r124, %r11533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11632, %r124, %r11536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11635, %r124, %r11539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11638, %r124, %r11542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11641, %r124, %r11545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11644, %r124, %r11548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11647, %r124, %r11551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11650, %r124, %r11554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11653, %r124, %r11557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11656, %r124, %r11560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11659, %r125, %r11563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11662, %r125, %r11566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11665, %r125, %r11569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11668, %r125, %r11572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11671, %r125, %r11575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11674, %r125, %r11578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11677, %r125, %r11581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11680, %r125, %r11584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11683, %r125, %r11587;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11686, %r125, %r11590;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11689, %r125, %r11593;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11692, %r125, %r11596;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11695, %r125, %r11599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11698, %r125, %r11602;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11701, %r125, %r11605;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11704, %r125, %r11608;
	// end inline asm
	// begin inline asm
	mov.b32 %r11707, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11708, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11709, %r11611, %r11707;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11712, %r11709, %r11708;
	// end inline asm
	// begin inline asm
	mov.b32 %r11715, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11716, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11717, %r11614, %r11715;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11720, %r11717, %r11716;
	// end inline asm
	// begin inline asm
	mov.b32 %r11723, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11724, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11725, %r11617, %r11723;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11728, %r11725, %r11724;
	// end inline asm
	// begin inline asm
	mov.b32 %r11731, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11732, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11733, %r11620, %r11731;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11736, %r11733, %r11732;
	// end inline asm
	// begin inline asm
	mov.b32 %r11739, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11740, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11741, %r11623, %r11739;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11744, %r11741, %r11740;
	// end inline asm
	// begin inline asm
	mov.b32 %r11747, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11748, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11749, %r11626, %r11747;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11752, %r11749, %r11748;
	// end inline asm
	// begin inline asm
	mov.b32 %r11755, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11756, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11757, %r11629, %r11755;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11760, %r11757, %r11756;
	// end inline asm
	// begin inline asm
	mov.b32 %r11763, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11764, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11765, %r11632, %r11763;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11768, %r11765, %r11764;
	// end inline asm
	// begin inline asm
	mov.b32 %r11771, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11772, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11773, %r11635, %r11771;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11776, %r11773, %r11772;
	// end inline asm
	// begin inline asm
	mov.b32 %r11779, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11780, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11781, %r11638, %r11779;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11784, %r11781, %r11780;
	// end inline asm
	// begin inline asm
	mov.b32 %r11787, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11788, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11789, %r11641, %r11787;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11792, %r11789, %r11788;
	// end inline asm
	// begin inline asm
	mov.b32 %r11795, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11796, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11797, %r11644, %r11795;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11800, %r11797, %r11796;
	// end inline asm
	// begin inline asm
	mov.b32 %r11803, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11804, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11805, %r11647, %r11803;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11808, %r11805, %r11804;
	// end inline asm
	// begin inline asm
	mov.b32 %r11811, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11812, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11813, %r11650, %r11811;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11816, %r11813, %r11812;
	// end inline asm
	// begin inline asm
	mov.b32 %r11819, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11820, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11821, %r11653, %r11819;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11824, %r11821, %r11820;
	// end inline asm
	// begin inline asm
	mov.b32 %r11827, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11828, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11829, %r11656, %r11827;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11832, %r11829, %r11828;
	// end inline asm
	// begin inline asm
	mov.b32 %r11835, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11836, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11837, %r11659, %r11835;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11840, %r11837, %r11836;
	// end inline asm
	// begin inline asm
	mov.b32 %r11843, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11844, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11845, %r11662, %r11843;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11848, %r11845, %r11844;
	// end inline asm
	// begin inline asm
	mov.b32 %r11851, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11852, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11853, %r11665, %r11851;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11856, %r11853, %r11852;
	// end inline asm
	// begin inline asm
	mov.b32 %r11859, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11860, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11861, %r11668, %r11859;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11864, %r11861, %r11860;
	// end inline asm
	// begin inline asm
	mov.b32 %r11867, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11868, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11869, %r11671, %r11867;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11872, %r11869, %r11868;
	// end inline asm
	// begin inline asm
	mov.b32 %r11875, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11876, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11877, %r11674, %r11875;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11880, %r11877, %r11876;
	// end inline asm
	// begin inline asm
	mov.b32 %r11883, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11884, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11885, %r11677, %r11883;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11888, %r11885, %r11884;
	// end inline asm
	// begin inline asm
	mov.b32 %r11891, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11892, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11893, %r11680, %r11891;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11896, %r11893, %r11892;
	// end inline asm
	// begin inline asm
	mov.b32 %r11899, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11900, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11901, %r11683, %r11899;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11904, %r11901, %r11900;
	// end inline asm
	// begin inline asm
	mov.b32 %r11907, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11908, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11909, %r11686, %r11907;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11912, %r11909, %r11908;
	// end inline asm
	// begin inline asm
	mov.b32 %r11915, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11916, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11917, %r11689, %r11915;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11920, %r11917, %r11916;
	// end inline asm
	// begin inline asm
	mov.b32 %r11923, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11924, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11925, %r11692, %r11923;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11928, %r11925, %r11924;
	// end inline asm
	// begin inline asm
	mov.b32 %r11931, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11932, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11933, %r11695, %r11931;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11936, %r11933, %r11932;
	// end inline asm
	// begin inline asm
	mov.b32 %r11939, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11940, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11941, %r11698, %r11939;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11944, %r11941, %r11940;
	// end inline asm
	// begin inline asm
	mov.b32 %r11947, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11948, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11949, %r11701, %r11947;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11952, %r11949, %r11948;
	// end inline asm
	// begin inline asm
	mov.b32 %r11955, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11956, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11957, %r11704, %r11955;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11960, %r11957, %r11956;
	// end inline asm
	// begin inline asm
	mov.b32 %r11966, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r11964, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11965, %r11966, %r11964;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11968, %r11712, %r11965;
	// end inline asm
	// begin inline asm
	mov.b32 %r11971, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11972, %r11966, %r11971;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11975, %r11720, %r11972;
	// end inline asm
	// begin inline asm
	mov.b32 %r11978, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11979, %r11966, %r11978;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11982, %r11728, %r11979;
	// end inline asm
	// begin inline asm
	mov.b32 %r11985, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11986, %r11966, %r11985;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11989, %r11736, %r11986;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11992, %r11968, %r11982, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11996, %r11975, %r11989, %r4363;
	// end inline asm
	shl.b32 	%r12003, %r11996, 4;
	// begin inline asm
	lop3.b32 %r12000, %r4369, %r11992, %r12003, 202;
	// end inline asm
	xor.b32  	%r16179, %r12000, -2004318072;
	// begin inline asm
	mov.b32 %r12007, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12005, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12006, %r12007, %r12005;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12009, %r11744, %r12006;
	// end inline asm
	// begin inline asm
	mov.b32 %r12012, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12013, %r12007, %r12012;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12016, %r11752, %r12013;
	// end inline asm
	// begin inline asm
	mov.b32 %r12019, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12020, %r12007, %r12019;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12023, %r11760, %r12020;
	// end inline asm
	// begin inline asm
	mov.b32 %r12026, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12027, %r12007, %r12026;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12030, %r11768, %r12027;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12033, %r12009, %r12023, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12037, %r12016, %r12030, %r4363;
	// end inline asm
	shl.b32 	%r12044, %r12037, 4;
	// begin inline asm
	lop3.b32 %r12041, %r4369, %r12033, %r12044, 202;
	// end inline asm
	xor.b32  	%r16180, %r12041, -2004318072;
	// begin inline asm
	mov.b32 %r12048, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12046, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12047, %r12048, %r12046;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12050, %r11776, %r12047;
	// end inline asm
	// begin inline asm
	mov.b32 %r12053, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12054, %r12048, %r12053;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12057, %r11784, %r12054;
	// end inline asm
	// begin inline asm
	mov.b32 %r12060, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12061, %r12048, %r12060;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12064, %r11792, %r12061;
	// end inline asm
	// begin inline asm
	mov.b32 %r12067, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12068, %r12048, %r12067;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12071, %r11800, %r12068;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12074, %r12050, %r12064, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12078, %r12057, %r12071, %r4363;
	// end inline asm
	shl.b32 	%r12085, %r12078, 4;
	// begin inline asm
	lop3.b32 %r12082, %r4369, %r12074, %r12085, 202;
	// end inline asm
	xor.b32  	%r16181, %r12082, -2004318072;
	// begin inline asm
	mov.b32 %r12089, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12087, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12088, %r12089, %r12087;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12091, %r11808, %r12088;
	// end inline asm
	// begin inline asm
	mov.b32 %r12094, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12095, %r12089, %r12094;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12098, %r11816, %r12095;
	// end inline asm
	// begin inline asm
	mov.b32 %r12101, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12102, %r12089, %r12101;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12105, %r11824, %r12102;
	// end inline asm
	// begin inline asm
	mov.b32 %r12108, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12109, %r12089, %r12108;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12112, %r11832, %r12109;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12115, %r12091, %r12105, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12119, %r12098, %r12112, %r4363;
	// end inline asm
	shl.b32 	%r12126, %r12119, 4;
	// begin inline asm
	lop3.b32 %r12123, %r4369, %r12115, %r12126, 202;
	// end inline asm
	xor.b32  	%r16182, %r12123, -2004318072;
	// begin inline asm
	mov.b32 %r12130, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12128, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12129, %r12130, %r12128;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12132, %r11840, %r12129;
	// end inline asm
	// begin inline asm
	mov.b32 %r12135, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12136, %r12130, %r12135;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12139, %r11848, %r12136;
	// end inline asm
	// begin inline asm
	mov.b32 %r12142, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12143, %r12130, %r12142;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12146, %r11856, %r12143;
	// end inline asm
	// begin inline asm
	mov.b32 %r12149, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12150, %r12130, %r12149;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12153, %r11864, %r12150;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12156, %r12132, %r12146, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12160, %r12139, %r12153, %r4363;
	// end inline asm
	shl.b32 	%r12167, %r12160, 4;
	// begin inline asm
	lop3.b32 %r12164, %r4369, %r12156, %r12167, 202;
	// end inline asm
	xor.b32  	%r16183, %r12164, -2004318072;
	// begin inline asm
	mov.b32 %r12171, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12169, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12170, %r12171, %r12169;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12173, %r11872, %r12170;
	// end inline asm
	// begin inline asm
	mov.b32 %r12176, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12177, %r12171, %r12176;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12180, %r11880, %r12177;
	// end inline asm
	// begin inline asm
	mov.b32 %r12183, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12184, %r12171, %r12183;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12187, %r11888, %r12184;
	// end inline asm
	// begin inline asm
	mov.b32 %r12190, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12191, %r12171, %r12190;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12194, %r11896, %r12191;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12197, %r12173, %r12187, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12201, %r12180, %r12194, %r4363;
	// end inline asm
	shl.b32 	%r12208, %r12201, 4;
	// begin inline asm
	lop3.b32 %r12205, %r4369, %r12197, %r12208, 202;
	// end inline asm
	xor.b32  	%r16184, %r12205, -2004318072;
	// begin inline asm
	mov.b32 %r12212, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12210, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12211, %r12212, %r12210;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12214, %r11904, %r12211;
	// end inline asm
	// begin inline asm
	mov.b32 %r12217, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12218, %r12212, %r12217;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12221, %r11912, %r12218;
	// end inline asm
	// begin inline asm
	mov.b32 %r12224, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12225, %r12212, %r12224;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12228, %r11920, %r12225;
	// end inline asm
	// begin inline asm
	mov.b32 %r12231, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12232, %r12212, %r12231;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12235, %r11928, %r12232;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12238, %r12214, %r12228, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12242, %r12221, %r12235, %r4363;
	// end inline asm
	shl.b32 	%r12249, %r12242, 4;
	// begin inline asm
	lop3.b32 %r12246, %r4369, %r12238, %r12249, 202;
	// end inline asm
	xor.b32  	%r16185, %r12246, -2004318072;
	// begin inline asm
	mov.b32 %r12253, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12251, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12252, %r12253, %r12251;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12255, %r11936, %r12252;
	// end inline asm
	// begin inline asm
	mov.b32 %r12258, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12259, %r12253, %r12258;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12262, %r11944, %r12259;
	// end inline asm
	// begin inline asm
	mov.b32 %r12265, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12266, %r12253, %r12265;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12269, %r11952, %r12266;
	// end inline asm
	// begin inline asm
	mov.b32 %r12272, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12273, %r12253, %r12272;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12276, %r11960, %r12273;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12279, %r12255, %r12269, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12283, %r12262, %r12276, %r4363;
	// end inline asm
	shl.b32 	%r12290, %r12283, 4;
	// begin inline asm
	lop3.b32 %r12287, %r4369, %r12279, %r12290, 202;
	// end inline asm
	xor.b32  	%r16186, %r12287, -2004318072;
	st.shared.u32 	[%rd96], %r16179;
	st.shared.u32 	[%rd98], %r16180;
	st.shared.u32 	[%rd100], %r16181;
	st.shared.u32 	[%rd102], %r16182;
	st.shared.u32 	[%rd104], %r16183;
	st.shared.u32 	[%rd106], %r16184;
	st.shared.u32 	[%rd108], %r16185;
	st.shared.u32 	[%rd110], %r16186;
	ld.shared.u32 	%r16294, [%rd80];
	ld.shared.u32 	%r16295, [%rd82];
	ld.shared.u32 	%r16296, [%rd84];
	ld.shared.u32 	%r16297, [%rd86];
	ld.shared.u32 	%r16306, [%rd88];
	ld.shared.u32 	%r16307, [%rd90];
	ld.shared.u32 	%r16308, [%rd92];
	ld.shared.u32 	%r16309, [%rd94];
	// begin inline asm
	mov.b32 %r12296, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12307, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12295, %r16294, -2004318072;
	// begin inline asm
	lop3.b32 %r12293, %r846, %r12295, %r12296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12297, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12298, %r12296, %r12297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12301, %r12293, %r12298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12304, %r857, %r12295, %r12307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12308, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12309, %r12307, %r12308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12312, %r12304, %r12309;
	// end inline asm
	shr.u32 	%r12317, %r12295, 8;
	// begin inline asm
	lop3.b32 %r12315, %r846, %r12317, %r12296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12319, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12320, %r12296, %r12319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12323, %r12315, %r12320;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12326, %r857, %r12317, %r12307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12330, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12331, %r12307, %r12330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12334, %r12326, %r12331;
	// end inline asm
	// begin inline asm
	mov.b32 %r12342, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12353, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12341, %r16295, -2004318072;
	// begin inline asm
	lop3.b32 %r12339, %r846, %r12341, %r12342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12343, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12344, %r12342, %r12343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12347, %r12339, %r12344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12350, %r857, %r12341, %r12353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12354, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12355, %r12353, %r12354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12358, %r12350, %r12355;
	// end inline asm
	shr.u32 	%r12363, %r12341, 8;
	// begin inline asm
	lop3.b32 %r12361, %r846, %r12363, %r12342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12365, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12366, %r12342, %r12365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12369, %r12361, %r12366;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12372, %r857, %r12363, %r12353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12376, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12377, %r12353, %r12376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12380, %r12372, %r12377;
	// end inline asm
	// begin inline asm
	mov.b32 %r12388, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12399, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12387, %r16296, -2004318072;
	// begin inline asm
	lop3.b32 %r12385, %r846, %r12387, %r12388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12389, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12390, %r12388, %r12389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12393, %r12385, %r12390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12396, %r857, %r12387, %r12399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12400, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12401, %r12399, %r12400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12404, %r12396, %r12401;
	// end inline asm
	shr.u32 	%r12409, %r12387, 8;
	// begin inline asm
	lop3.b32 %r12407, %r846, %r12409, %r12388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12411, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12412, %r12388, %r12411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12415, %r12407, %r12412;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12418, %r857, %r12409, %r12399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12422, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12423, %r12399, %r12422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12426, %r12418, %r12423;
	// end inline asm
	// begin inline asm
	mov.b32 %r12434, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12445, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12433, %r16297, -2004318072;
	// begin inline asm
	lop3.b32 %r12431, %r846, %r12433, %r12434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12435, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12436, %r12434, %r12435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12439, %r12431, %r12436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12442, %r857, %r12433, %r12445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12446, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12447, %r12445, %r12446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12450, %r12442, %r12447;
	// end inline asm
	shr.u32 	%r12455, %r12433, 8;
	// begin inline asm
	lop3.b32 %r12453, %r846, %r12455, %r12434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12457, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12458, %r12434, %r12457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12461, %r12453, %r12458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12464, %r857, %r12455, %r12445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12468, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12469, %r12445, %r12468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12472, %r12464, %r12469;
	// end inline asm
	// begin inline asm
	mov.b32 %r12480, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12491, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12479, %r16306, -2004318072;
	// begin inline asm
	lop3.b32 %r12477, %r846, %r12479, %r12480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12481, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12482, %r12480, %r12481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12485, %r12477, %r12482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12488, %r857, %r12479, %r12491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12492, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12493, %r12491, %r12492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12496, %r12488, %r12493;
	// end inline asm
	shr.u32 	%r12501, %r12479, 8;
	// begin inline asm
	lop3.b32 %r12499, %r846, %r12501, %r12480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12503, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12504, %r12480, %r12503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12507, %r12499, %r12504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12510, %r857, %r12501, %r12491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12514, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12515, %r12491, %r12514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12518, %r12510, %r12515;
	// end inline asm
	// begin inline asm
	mov.b32 %r12526, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12537, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12525, %r16307, -2004318072;
	// begin inline asm
	lop3.b32 %r12523, %r846, %r12525, %r12526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12527, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12528, %r12526, %r12527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12531, %r12523, %r12528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12534, %r857, %r12525, %r12537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12538, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12539, %r12537, %r12538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12542, %r12534, %r12539;
	// end inline asm
	shr.u32 	%r12547, %r12525, 8;
	// begin inline asm
	lop3.b32 %r12545, %r846, %r12547, %r12526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12549, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12550, %r12526, %r12549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12553, %r12545, %r12550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12556, %r857, %r12547, %r12537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12560, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12561, %r12537, %r12560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12564, %r12556, %r12561;
	// end inline asm
	// begin inline asm
	mov.b32 %r12572, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12583, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12571, %r16308, -2004318072;
	// begin inline asm
	lop3.b32 %r12569, %r846, %r12571, %r12572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12573, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12574, %r12572, %r12573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12577, %r12569, %r12574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12580, %r857, %r12571, %r12583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12584, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12585, %r12583, %r12584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12588, %r12580, %r12585;
	// end inline asm
	shr.u32 	%r12593, %r12571, 8;
	// begin inline asm
	lop3.b32 %r12591, %r846, %r12593, %r12572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12595, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12596, %r12572, %r12595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12599, %r12591, %r12596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12602, %r857, %r12593, %r12583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12606, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12607, %r12583, %r12606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12610, %r12602, %r12607;
	// end inline asm
	// begin inline asm
	mov.b32 %r12618, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12629, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12617, %r16309, -2004318072;
	// begin inline asm
	lop3.b32 %r12615, %r846, %r12617, %r12618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12619, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12620, %r12618, %r12619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12623, %r12615, %r12620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12626, %r857, %r12617, %r12629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12630, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12631, %r12629, %r12630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12634, %r12626, %r12631;
	// end inline asm
	shr.u32 	%r12639, %r12617, 8;
	// begin inline asm
	lop3.b32 %r12637, %r846, %r12639, %r12618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12641, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12642, %r12618, %r12641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12645, %r12637, %r12642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12648, %r857, %r12639, %r12629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12652, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12653, %r12629, %r12652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12656, %r12648, %r12653;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12659, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12661, %r12659, %r12301;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12664, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12666, %r12664, %r12312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12669, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12671, %r12669, %r12323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12674, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12676, %r12674, %r12334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12679, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12681, %r12679, %r12347;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12684, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12686, %r12684, %r12358;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12689, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12691, %r12689, %r12369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12694, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12696, %r12694, %r12380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12699, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12701, %r12699, %r12393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12704, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12706, %r12704, %r12404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12709, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12711, %r12709, %r12415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12714, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12716, %r12714, %r12426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12719, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12721, %r12719, %r12439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12724, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12726, %r12724, %r12450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12729, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12731, %r12729, %r12461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12734, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12736, %r12734, %r12472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12739, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12741, %r12739, %r12485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12744, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12746, %r12744, %r12496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12749, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12751, %r12749, %r12507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12754, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12756, %r12754, %r12518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12759, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12761, %r12759, %r12531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12764, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12766, %r12764, %r12542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12769, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12771, %r12769, %r12553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12774, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12776, %r12774, %r12564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12779, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12781, %r12779, %r12577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12784, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12786, %r12784, %r12588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12789, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12791, %r12789, %r12599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12794, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12796, %r12794, %r12610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12799, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12801, %r12799, %r12623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12804, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12806, %r12804, %r12634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12809, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12811, %r12809, %r12645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12814, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12816, %r12814, %r12656;
	// end inline asm
	// begin inline asm
	mov.b32 %r12824, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12835, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12821, %r846, %r847, %r12824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12825, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12826, %r12824, %r12825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12829, %r12821, %r12826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12832, %r857, %r847, %r12835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12836, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12837, %r12835, %r12836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12840, %r12832, %r12837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12843, %r846, %r869, %r12824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12847, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12848, %r12824, %r12847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12851, %r12843, %r12848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12854, %r857, %r869, %r12835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12858, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12859, %r12835, %r12858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12862, %r12854, %r12859;
	// end inline asm
	// begin inline asm
	mov.b32 %r12870, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12881, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12867, %r846, %r893, %r12870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12871, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12872, %r12870, %r12871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12875, %r12867, %r12872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12878, %r857, %r893, %r12881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12882, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12883, %r12881, %r12882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12886, %r12878, %r12883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12889, %r846, %r915, %r12870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12893, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12894, %r12870, %r12893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12897, %r12889, %r12894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12900, %r857, %r915, %r12881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12904, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12905, %r12881, %r12904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12908, %r12900, %r12905;
	// end inline asm
	// begin inline asm
	mov.b32 %r12916, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12927, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12913, %r846, %r939, %r12916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12917, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12918, %r12916, %r12917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12921, %r12913, %r12918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12924, %r857, %r939, %r12927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12928, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12929, %r12927, %r12928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12932, %r12924, %r12929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12935, %r846, %r961, %r12916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12939, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12940, %r12916, %r12939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12943, %r12935, %r12940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12946, %r857, %r961, %r12927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12950, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12951, %r12927, %r12950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12954, %r12946, %r12951;
	// end inline asm
	// begin inline asm
	mov.b32 %r12962, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12973, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12959, %r846, %r985, %r12962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12963, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12964, %r12962, %r12963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12967, %r12959, %r12964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12970, %r857, %r985, %r12973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12974, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12975, %r12973, %r12974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12978, %r12970, %r12975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12981, %r846, %r1007, %r12962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12985, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12986, %r12962, %r12985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12989, %r12981, %r12986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12992, %r857, %r1007, %r12973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12996, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12997, %r12973, %r12996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13000, %r12992, %r12997;
	// end inline asm
	// begin inline asm
	mov.b32 %r13008, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13019, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13005, %r846, %r1031, %r13008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13009, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13010, %r13008, %r13009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13013, %r13005, %r13010;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13016, %r857, %r1031, %r13019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13020, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13021, %r13019, %r13020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13024, %r13016, %r13021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13027, %r846, %r1053, %r13008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13031, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13032, %r13008, %r13031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13035, %r13027, %r13032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13038, %r857, %r1053, %r13019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13042, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13043, %r13019, %r13042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13046, %r13038, %r13043;
	// end inline asm
	// begin inline asm
	mov.b32 %r13054, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13065, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13051, %r846, %r1077, %r13054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13055, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13056, %r13054, %r13055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13059, %r13051, %r13056;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13062, %r857, %r1077, %r13065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13066, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13067, %r13065, %r13066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13070, %r13062, %r13067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13073, %r846, %r1099, %r13054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13077, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13078, %r13054, %r13077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13081, %r13073, %r13078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13084, %r857, %r1099, %r13065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13088, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13089, %r13065, %r13088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13092, %r13084, %r13089;
	// end inline asm
	// begin inline asm
	mov.b32 %r13100, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13111, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13097, %r846, %r1123, %r13100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13101, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13102, %r13100, %r13101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13105, %r13097, %r13102;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13108, %r857, %r1123, %r13111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13112, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13113, %r13111, %r13112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13116, %r13108, %r13113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13119, %r846, %r1145, %r13100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13123, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13124, %r13100, %r13123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13127, %r13119, %r13124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13130, %r857, %r1145, %r13111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13134, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13135, %r13111, %r13134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13138, %r13130, %r13135;
	// end inline asm
	// begin inline asm
	mov.b32 %r13146, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13157, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13143, %r846, %r1169, %r13146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13147, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13148, %r13146, %r13147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13151, %r13143, %r13148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13154, %r857, %r1169, %r13157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13158, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13159, %r13157, %r13158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13162, %r13154, %r13159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13165, %r846, %r1191, %r13146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13169, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13170, %r13146, %r13169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13173, %r13165, %r13170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13176, %r857, %r1191, %r13157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13180, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13181, %r13157, %r13180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13184, %r13176, %r13181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13187, %r264, %r12829, %r12661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13191, %r264, %r12840, %r12666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13195, %r264, %r12851, %r12671;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13199, %r264, %r12862, %r12676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13203, %r264, %r12875, %r12681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13207, %r264, %r12886, %r12686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13211, %r264, %r12897, %r12691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13215, %r264, %r12908, %r12696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13219, %r264, %r12921, %r12701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13223, %r264, %r12932, %r12706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13227, %r264, %r12943, %r12711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13231, %r264, %r12954, %r12716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13235, %r264, %r12967, %r12721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13239, %r264, %r12978, %r12726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13243, %r264, %r12989, %r12731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13247, %r264, %r13000, %r12736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13251, %r282, %r13013, %r12741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13255, %r282, %r13024, %r12746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13259, %r282, %r13035, %r12751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13263, %r282, %r13046, %r12756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13267, %r282, %r13059, %r12761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13271, %r282, %r13070, %r12766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13275, %r282, %r13081, %r12771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13279, %r282, %r13092, %r12776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13283, %r282, %r13105, %r12781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13287, %r282, %r13116, %r12786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13291, %r282, %r13127, %r12791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13295, %r282, %r13138, %r12796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13299, %r282, %r13151, %r12801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13303, %r282, %r13162, %r12806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13307, %r282, %r13173, %r12811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13311, %r282, %r13184, %r12816;
	// end inline asm
	// begin inline asm
	mov.b32 %r13320, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13331, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13317, %r846, %r4663, %r13320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13321, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13322, %r13320, %r13321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13325, %r13317, %r13322;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13328, %r857, %r4663, %r13331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13332, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13333, %r13331, %r13332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13336, %r13328, %r13333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13339, %r846, %r4685, %r13320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13343, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13344, %r13320, %r13343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13347, %r13339, %r13344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13350, %r857, %r4685, %r13331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13354, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13355, %r13331, %r13354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13358, %r13350, %r13355;
	// end inline asm
	// begin inline asm
	mov.b32 %r13366, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13377, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13363, %r846, %r4709, %r13366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13367, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13368, %r13366, %r13367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13371, %r13363, %r13368;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13374, %r857, %r4709, %r13377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13378, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13379, %r13377, %r13378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13382, %r13374, %r13379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13385, %r846, %r4731, %r13366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13389, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13390, %r13366, %r13389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13393, %r13385, %r13390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13396, %r857, %r4731, %r13377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13400, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13401, %r13377, %r13400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13404, %r13396, %r13401;
	// end inline asm
	// begin inline asm
	mov.b32 %r13412, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13423, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13409, %r846, %r4755, %r13412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13413, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13414, %r13412, %r13413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13417, %r13409, %r13414;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13420, %r857, %r4755, %r13423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13424, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13425, %r13423, %r13424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13428, %r13420, %r13425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13431, %r846, %r4777, %r13412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13435, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13436, %r13412, %r13435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13439, %r13431, %r13436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13442, %r857, %r4777, %r13423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13446, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13447, %r13423, %r13446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13450, %r13442, %r13447;
	// end inline asm
	// begin inline asm
	mov.b32 %r13458, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13469, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13455, %r846, %r4801, %r13458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13459, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13460, %r13458, %r13459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13463, %r13455, %r13460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13466, %r857, %r4801, %r13469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13470, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13471, %r13469, %r13470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13474, %r13466, %r13471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13477, %r846, %r4823, %r13458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13481, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13482, %r13458, %r13481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13485, %r13477, %r13482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13488, %r857, %r4823, %r13469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13492, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13493, %r13469, %r13492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13496, %r13488, %r13493;
	// end inline asm
	// begin inline asm
	mov.b32 %r13504, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13515, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13501, %r846, %r4847, %r13504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13505, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13506, %r13504, %r13505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13509, %r13501, %r13506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13512, %r857, %r4847, %r13515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13516, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13517, %r13515, %r13516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13520, %r13512, %r13517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13523, %r846, %r4869, %r13504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13527, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13528, %r13504, %r13527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13531, %r13523, %r13528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13534, %r857, %r4869, %r13515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13538, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13539, %r13515, %r13538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13542, %r13534, %r13539;
	// end inline asm
	// begin inline asm
	mov.b32 %r13550, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13561, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13547, %r846, %r4893, %r13550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13551, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13552, %r13550, %r13551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13555, %r13547, %r13552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13558, %r857, %r4893, %r13561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13562, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13563, %r13561, %r13562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13566, %r13558, %r13563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13569, %r846, %r4915, %r13550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13573, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13574, %r13550, %r13573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13577, %r13569, %r13574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13580, %r857, %r4915, %r13561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13584, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13585, %r13561, %r13584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13588, %r13580, %r13585;
	// end inline asm
	// begin inline asm
	mov.b32 %r13596, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13607, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13593, %r846, %r4939, %r13596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13597, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13598, %r13596, %r13597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13601, %r13593, %r13598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13604, %r857, %r4939, %r13607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13608, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13609, %r13607, %r13608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13612, %r13604, %r13609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13615, %r846, %r4961, %r13596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13619, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13620, %r13596, %r13619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13623, %r13615, %r13620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13626, %r857, %r4961, %r13607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13630, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13631, %r13607, %r13630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13634, %r13626, %r13631;
	// end inline asm
	// begin inline asm
	mov.b32 %r13642, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13653, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13639, %r846, %r4985, %r13642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13643, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13644, %r13642, %r13643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13647, %r13639, %r13644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13650, %r857, %r4985, %r13653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13654, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13655, %r13653, %r13654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13658, %r13650, %r13655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13661, %r846, %r5007, %r13642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13665, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13666, %r13642, %r13665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13669, %r13661, %r13666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13672, %r857, %r5007, %r13653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13676, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13677, %r13653, %r13676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13680, %r13672, %r13677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13683, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13685, %r13683, %r13325, %r13187;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13689, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13691, %r13689, %r13336, %r13191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13695, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13697, %r13695, %r13347, %r13195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13701, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13703, %r13701, %r13358, %r13199;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13707, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13709, %r13707, %r13371, %r13203;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13713, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13715, %r13713, %r13382, %r13207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13719, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13721, %r13719, %r13393, %r13211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13725, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13727, %r13725, %r13404, %r13215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13731, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13733, %r13731, %r13417, %r13219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13737, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13739, %r13737, %r13428, %r13223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13743, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13745, %r13743, %r13439, %r13227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13749, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13751, %r13749, %r13450, %r13231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13755, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13757, %r13755, %r13463, %r13235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13761, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13763, %r13761, %r13474, %r13239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13767, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13769, %r13767, %r13485, %r13243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13773, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13775, %r13773, %r13496, %r13247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13779, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13781, %r13779, %r13509, %r13251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13785, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13787, %r13785, %r13520, %r13255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13791, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13793, %r13791, %r13531, %r13259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13797, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13799, %r13797, %r13542, %r13263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13803, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13805, %r13803, %r13555, %r13267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13809, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13811, %r13809, %r13566, %r13271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13815, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13817, %r13815, %r13577, %r13275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13821, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13823, %r13821, %r13588, %r13279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13827, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13829, %r13827, %r13601, %r13283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13833, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13835, %r13833, %r13612, %r13287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13839, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13841, %r13839, %r13623, %r13291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13845, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13847, %r13845, %r13634, %r13295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13851, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13853, %r13851, %r13647, %r13299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13857, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13859, %r13857, %r13658, %r13303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13863, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13865, %r13863, %r13669, %r13307;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13869, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13871, %r13869, %r13680, %r13311;
	// end inline asm
	// begin inline asm
	mov.b32 %r13880, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13891, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13877, %r846, %r8479, %r13880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13881, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13882, %r13880, %r13881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13885, %r13877, %r13882;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13888, %r857, %r8479, %r13891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13892, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13893, %r13891, %r13892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13896, %r13888, %r13893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13899, %r846, %r8501, %r13880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13903, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13904, %r13880, %r13903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13907, %r13899, %r13904;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13910, %r857, %r8501, %r13891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13914, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13915, %r13891, %r13914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13918, %r13910, %r13915;
	// end inline asm
	// begin inline asm
	mov.b32 %r13926, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13937, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13923, %r846, %r8525, %r13926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13927, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13928, %r13926, %r13927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13931, %r13923, %r13928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13934, %r857, %r8525, %r13937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13938, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13939, %r13937, %r13938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13942, %r13934, %r13939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13945, %r846, %r8547, %r13926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13949, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13950, %r13926, %r13949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13953, %r13945, %r13950;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13956, %r857, %r8547, %r13937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13960, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13961, %r13937, %r13960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13964, %r13956, %r13961;
	// end inline asm
	// begin inline asm
	mov.b32 %r13972, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13983, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13969, %r846, %r8571, %r13972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13973, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13974, %r13972, %r13973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13977, %r13969, %r13974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13980, %r857, %r8571, %r13983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13984, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13985, %r13983, %r13984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13988, %r13980, %r13985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13991, %r846, %r8593, %r13972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13995, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13996, %r13972, %r13995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13999, %r13991, %r13996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14002, %r857, %r8593, %r13983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14006, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14007, %r13983, %r14006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14010, %r14002, %r14007;
	// end inline asm
	// begin inline asm
	mov.b32 %r14018, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14029, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14015, %r846, %r8617, %r14018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14019, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14020, %r14018, %r14019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14023, %r14015, %r14020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14026, %r857, %r8617, %r14029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14030, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14031, %r14029, %r14030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14034, %r14026, %r14031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14037, %r846, %r8639, %r14018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14041, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14042, %r14018, %r14041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14045, %r14037, %r14042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14048, %r857, %r8639, %r14029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14052, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14053, %r14029, %r14052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14056, %r14048, %r14053;
	// end inline asm
	// begin inline asm
	mov.b32 %r14064, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14075, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14061, %r846, %r8663, %r14064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14065, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14066, %r14064, %r14065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14069, %r14061, %r14066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14072, %r857, %r8663, %r14075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14076, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14077, %r14075, %r14076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14080, %r14072, %r14077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14083, %r846, %r8685, %r14064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14087, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14088, %r14064, %r14087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14091, %r14083, %r14088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14094, %r857, %r8685, %r14075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14098, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14099, %r14075, %r14098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14102, %r14094, %r14099;
	// end inline asm
	// begin inline asm
	mov.b32 %r14110, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14121, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14107, %r846, %r8709, %r14110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14111, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14112, %r14110, %r14111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14115, %r14107, %r14112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14118, %r857, %r8709, %r14121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14122, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14123, %r14121, %r14122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14126, %r14118, %r14123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14129, %r846, %r8731, %r14110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14133, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14134, %r14110, %r14133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14137, %r14129, %r14134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14140, %r857, %r8731, %r14121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14144, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14145, %r14121, %r14144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14148, %r14140, %r14145;
	// end inline asm
	// begin inline asm
	mov.b32 %r14156, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14167, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14153, %r846, %r8755, %r14156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14157, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14158, %r14156, %r14157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14161, %r14153, %r14158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14164, %r857, %r8755, %r14167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14168, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14169, %r14167, %r14168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14172, %r14164, %r14169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14175, %r846, %r8777, %r14156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14179, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14180, %r14156, %r14179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14183, %r14175, %r14180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14186, %r857, %r8777, %r14167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14190, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14191, %r14167, %r14190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14194, %r14186, %r14191;
	// end inline asm
	// begin inline asm
	mov.b32 %r14202, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14213, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14199, %r846, %r8801, %r14202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14203, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14204, %r14202, %r14203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14207, %r14199, %r14204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14210, %r857, %r8801, %r14213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14214, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14215, %r14213, %r14214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14218, %r14210, %r14215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14221, %r846, %r8823, %r14202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14225, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14226, %r14202, %r14225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14229, %r14221, %r14226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14232, %r857, %r8823, %r14213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14236, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14237, %r14213, %r14236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14240, %r14232, %r14237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14378, %r336, %r13885, %r13685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14375, %r336, %r13896, %r13691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14387, %r336, %r13907, %r13697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14384, %r336, %r13918, %r13703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14396, %r336, %r13931, %r13709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14393, %r336, %r13942, %r13715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14405, %r336, %r13953, %r13721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14402, %r336, %r13964, %r13727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14414, %r336, %r13977, %r13733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14411, %r336, %r13988, %r13739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14423, %r336, %r13999, %r13745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14420, %r336, %r14010, %r13751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14432, %r336, %r14023, %r13757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14429, %r336, %r14034, %r13763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14441, %r336, %r14045, %r13769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14438, %r336, %r14056, %r13775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14450, %r354, %r14069, %r13781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14447, %r354, %r14080, %r13787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14459, %r354, %r14091, %r13793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14456, %r354, %r14102, %r13799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14468, %r354, %r14115, %r13805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14465, %r354, %r14126, %r13811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14477, %r354, %r14137, %r13817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14474, %r354, %r14148, %r13823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14486, %r354, %r14161, %r13829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14483, %r354, %r14172, %r13835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14495, %r354, %r14183, %r13841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14492, %r354, %r14194, %r13847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14504, %r354, %r14207, %r13853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14501, %r354, %r14218, %r13859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14513, %r354, %r14229, %r13865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14510, %r354, %r14240, %r13871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14371, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14373, %r14371, %r14375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14376, %r393, %r14378, %r14373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14380, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14382, %r14380, %r14384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14385, %r393, %r14387, %r14382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14389, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14391, %r14389, %r14393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14394, %r393, %r14396, %r14391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14398, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14400, %r14398, %r14402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14403, %r393, %r14405, %r14400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14407, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14409, %r14407, %r14411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14412, %r393, %r14414, %r14409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14416, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14418, %r14416, %r14420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14421, %r393, %r14423, %r14418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14425, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14427, %r14425, %r14429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14430, %r393, %r14432, %r14427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14434, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14436, %r14434, %r14438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14439, %r393, %r14441, %r14436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14443, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14445, %r14443, %r14447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14448, %r396, %r14450, %r14445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14452, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14454, %r14452, %r14456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14457, %r396, %r14459, %r14454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14461, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14463, %r14461, %r14465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14466, %r396, %r14468, %r14463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14470, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14472, %r14470, %r14474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14475, %r396, %r14477, %r14472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14479, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14481, %r14479, %r14483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14484, %r396, %r14486, %r14481;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14488, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14490, %r14488, %r14492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14493, %r396, %r14495, %r14490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14497, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14499, %r14497, %r14501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14502, %r396, %r14504, %r14499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14506, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14508, %r14506, %r14510;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14511, %r396, %r14513, %r14508;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14515, %r399, %r14378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14518, %r393, %r14375, %r14515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14522, %r399, %r14387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14525, %r393, %r14384, %r14522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14529, %r399, %r14396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14532, %r393, %r14393, %r14529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14536, %r399, %r14405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14539, %r393, %r14402, %r14536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14543, %r399, %r14414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14546, %r393, %r14411, %r14543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14550, %r399, %r14423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14553, %r393, %r14420, %r14550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14557, %r399, %r14432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14560, %r393, %r14429, %r14557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14564, %r399, %r14441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14567, %r393, %r14438, %r14564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14571, %r402, %r14450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14574, %r396, %r14447, %r14571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14578, %r402, %r14459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14581, %r396, %r14456, %r14578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14585, %r402, %r14468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14588, %r396, %r14465, %r14585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14592, %r402, %r14477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14595, %r396, %r14474, %r14592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14599, %r402, %r14486;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14602, %r396, %r14483, %r14599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14606, %r402, %r14495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14609, %r396, %r14492, %r14606;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14613, %r402, %r14504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14616, %r396, %r14501, %r14613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14620, %r402, %r14513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14623, %r396, %r14510, %r14620;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14794, %r14791}, {%r460, %r466, %r463, %r469}, {%r14376, %r14518}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14803, %r14800}, {%r460, %r466, %r463, %r469}, {%r14385, %r14525}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14812, %r14809}, {%r460, %r466, %r463, %r469}, {%r14394, %r14532}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14821, %r14818}, {%r460, %r466, %r463, %r469}, {%r14403, %r14539}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14830, %r14827}, {%r460, %r466, %r463, %r469}, {%r14412, %r14546}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14839, %r14836}, {%r460, %r466, %r463, %r469}, {%r14421, %r14553}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14848, %r14845}, {%r460, %r466, %r463, %r469}, {%r14430, %r14560}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14857, %r14854}, {%r460, %r466, %r463, %r469}, {%r14439, %r14567}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14866, %r14863}, {%r460, %r466, %r463, %r469}, {%r14448, %r14574}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14875, %r14872}, {%r460, %r466, %r463, %r469}, {%r14457, %r14581}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14884, %r14881}, {%r460, %r466, %r463, %r469}, {%r14466, %r14588}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14893, %r14890}, {%r460, %r466, %r463, %r469}, {%r14475, %r14595}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14902, %r14899}, {%r460, %r466, %r463, %r469}, {%r14484, %r14602}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14911, %r14908}, {%r460, %r466, %r463, %r469}, {%r14493, %r14609}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14920, %r14917}, {%r460, %r466, %r463, %r469}, {%r14502, %r14616}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14929, %r14926}, {%r460, %r466, %r463, %r469}, {%r14511, %r14623}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14787, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14789, %r14787, %r14791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14792, %r510, %r14794, %r14789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14796, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14798, %r14796, %r14800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14801, %r510, %r14803, %r14798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14805, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14807, %r14805, %r14809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14810, %r510, %r14812, %r14807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14814, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14816, %r14814, %r14818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14819, %r510, %r14821, %r14816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14823, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14825, %r14823, %r14827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14828, %r510, %r14830, %r14825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14832, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14834, %r14832, %r14836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14837, %r510, %r14839, %r14834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14841, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14843, %r14841, %r14845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14846, %r510, %r14848, %r14843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14850, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14852, %r14850, %r14854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14855, %r510, %r14857, %r14852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14859, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14861, %r14859, %r14863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14864, %r510, %r14866, %r14861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14868, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14870, %r14868, %r14872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14873, %r510, %r14875, %r14870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14877, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14879, %r14877, %r14881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14882, %r510, %r14884, %r14879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14886, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14888, %r14886, %r14890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14891, %r510, %r14893, %r14888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14895, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14897, %r14895, %r14899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14900, %r510, %r14902, %r14897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14904, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14906, %r14904, %r14908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14909, %r510, %r14911, %r14906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14913, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14915, %r14913, %r14917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14918, %r510, %r14920, %r14915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14922, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14924, %r14922, %r14926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14927, %r510, %r14929, %r14924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14931, %r513, %r14794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14934, %r510, %r14791, %r14931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14938, %r513, %r14803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14941, %r510, %r14800, %r14938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14945, %r513, %r14812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14948, %r510, %r14809, %r14945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14952, %r513, %r14821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14955, %r510, %r14818, %r14952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14959, %r513, %r14830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14962, %r510, %r14827, %r14959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14966, %r513, %r14839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14969, %r510, %r14836, %r14966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14973, %r513, %r14848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14976, %r510, %r14845, %r14973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14980, %r513, %r14857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14983, %r510, %r14854, %r14980;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14987, %r513, %r14866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14990, %r510, %r14863, %r14987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14994, %r513, %r14875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14997, %r510, %r14872, %r14994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15001, %r513, %r14884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15004, %r510, %r14881, %r15001;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15008, %r513, %r14893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15011, %r510, %r14890, %r15008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15015, %r513, %r14902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15018, %r510, %r14899, %r15015;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15022, %r513, %r14911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15025, %r510, %r14908, %r15022;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15029, %r513, %r14920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15032, %r510, %r14917, %r15029;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15036, %r513, %r14929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15039, %r510, %r14926, %r15036;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15332, %r15335}, {%r548, %r554, %r551, %r557}, {%r14792, %r14934}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15338, %r15341}, {%r548, %r554, %r551, %r557}, {%r14801, %r14941}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15344, %r15347}, {%r548, %r554, %r551, %r557}, {%r14810, %r14948}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15350, %r15353}, {%r548, %r554, %r551, %r557}, {%r14819, %r14955}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15356, %r15359}, {%r548, %r554, %r551, %r557}, {%r14828, %r14962}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15362, %r15365}, {%r548, %r554, %r551, %r557}, {%r14837, %r14969}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15368, %r15371}, {%r548, %r554, %r551, %r557}, {%r14846, %r14976}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15374, %r15377}, {%r548, %r554, %r551, %r557}, {%r14855, %r14983}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15333, %r15336}, {%r548, %r554, %r551, %r557}, {%r14864, %r14990}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15339, %r15342}, {%r548, %r554, %r551, %r557}, {%r14873, %r14997}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15345, %r15348}, {%r548, %r554, %r551, %r557}, {%r14882, %r15004}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15351, %r15354}, {%r548, %r554, %r551, %r557}, {%r14891, %r15011}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15357, %r15360}, {%r548, %r554, %r551, %r557}, {%r14900, %r15018}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15363, %r15366}, {%r548, %r554, %r551, %r557}, {%r14909, %r15025}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15369, %r15372}, {%r548, %r554, %r551, %r557}, {%r14918, %r15032}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15375, %r15378}, {%r548, %r554, %r551, %r557}, {%r14927, %r15039}, {%r3187, %r3187};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15331, %r15332, %r15333;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15334, %r15335, %r15336;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15337, %r15338, %r15339;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15340, %r15341, %r15342;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15343, %r15344, %r15345;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15346, %r15347, %r15348;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15349, %r15350, %r15351;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15352, %r15353, %r15354;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15355, %r15356, %r15357;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15358, %r15359, %r15360;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15361, %r15362, %r15363;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15364, %r15365, %r15366;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15367, %r15368, %r15369;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15370, %r15371, %r15372;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15373, %r15374, %r15375;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15376, %r15377, %r15378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15379, %r15332, %r15333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15382, %r15335, %r15336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15385, %r15338, %r15339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15388, %r15341, %r15342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15391, %r15344, %r15345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15394, %r15347, %r15348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15397, %r15350, %r15351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15400, %r15353, %r15354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15403, %r15356, %r15357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15406, %r15359, %r15360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15409, %r15362, %r15363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15412, %r15365, %r15366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15415, %r15368, %r15369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15418, %r15371, %r15372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15421, %r15374, %r15375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15424, %r15377, %r15378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15427, %r124, %r15331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15430, %r124, %r15334;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15433, %r124, %r15337;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15436, %r124, %r15340;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15439, %r124, %r15343;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15442, %r124, %r15346;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15445, %r124, %r15349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15448, %r124, %r15352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15451, %r124, %r15355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15454, %r124, %r15358;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15457, %r124, %r15361;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15460, %r124, %r15364;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15463, %r124, %r15367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15466, %r124, %r15370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15469, %r124, %r15373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15472, %r124, %r15376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15475, %r125, %r15379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15478, %r125, %r15382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15481, %r125, %r15385;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15484, %r125, %r15388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15487, %r125, %r15391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15490, %r125, %r15394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15493, %r125, %r15397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15496, %r125, %r15400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15499, %r125, %r15403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15502, %r125, %r15406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15505, %r125, %r15409;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15508, %r125, %r15412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15511, %r125, %r15415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15514, %r125, %r15418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15517, %r125, %r15421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15520, %r125, %r15424;
	// end inline asm
	// begin inline asm
	mov.b32 %r15523, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15524, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15525, %r15427, %r15523;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15528, %r15525, %r15524;
	// end inline asm
	// begin inline asm
	mov.b32 %r15531, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15532, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15533, %r15430, %r15531;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15536, %r15533, %r15532;
	// end inline asm
	// begin inline asm
	mov.b32 %r15539, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15540, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15541, %r15433, %r15539;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15544, %r15541, %r15540;
	// end inline asm
	// begin inline asm
	mov.b32 %r15547, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15548, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15549, %r15436, %r15547;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15552, %r15549, %r15548;
	// end inline asm
	// begin inline asm
	mov.b32 %r15555, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15556, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15557, %r15439, %r15555;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15560, %r15557, %r15556;
	// end inline asm
	// begin inline asm
	mov.b32 %r15563, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15564, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15565, %r15442, %r15563;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15568, %r15565, %r15564;
	// end inline asm
	// begin inline asm
	mov.b32 %r15571, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15572, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15573, %r15445, %r15571;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15576, %r15573, %r15572;
	// end inline asm
	// begin inline asm
	mov.b32 %r15579, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15580, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15581, %r15448, %r15579;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15584, %r15581, %r15580;
	// end inline asm
	// begin inline asm
	mov.b32 %r15587, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15588, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15589, %r15451, %r15587;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15592, %r15589, %r15588;
	// end inline asm
	// begin inline asm
	mov.b32 %r15595, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15596, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15597, %r15454, %r15595;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15600, %r15597, %r15596;
	// end inline asm
	// begin inline asm
	mov.b32 %r15603, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15604, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15605, %r15457, %r15603;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15608, %r15605, %r15604;
	// end inline asm
	// begin inline asm
	mov.b32 %r15611, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15612, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15613, %r15460, %r15611;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15616, %r15613, %r15612;
	// end inline asm
	// begin inline asm
	mov.b32 %r15619, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15620, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15621, %r15463, %r15619;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15624, %r15621, %r15620;
	// end inline asm
	// begin inline asm
	mov.b32 %r15627, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15628, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15629, %r15466, %r15627;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15632, %r15629, %r15628;
	// end inline asm
	// begin inline asm
	mov.b32 %r15635, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15636, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15637, %r15469, %r15635;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15640, %r15637, %r15636;
	// end inline asm
	// begin inline asm
	mov.b32 %r15643, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15644, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15645, %r15472, %r15643;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15648, %r15645, %r15644;
	// end inline asm
	// begin inline asm
	mov.b32 %r15651, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15652, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15653, %r15475, %r15651;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15656, %r15653, %r15652;
	// end inline asm
	// begin inline asm
	mov.b32 %r15659, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15660, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15661, %r15478, %r15659;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15664, %r15661, %r15660;
	// end inline asm
	// begin inline asm
	mov.b32 %r15667, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15668, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15669, %r15481, %r15667;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15672, %r15669, %r15668;
	// end inline asm
	// begin inline asm
	mov.b32 %r15675, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15676, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15677, %r15484, %r15675;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15680, %r15677, %r15676;
	// end inline asm
	// begin inline asm
	mov.b32 %r15683, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15684, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15685, %r15487, %r15683;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15688, %r15685, %r15684;
	// end inline asm
	// begin inline asm
	mov.b32 %r15691, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15692, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15693, %r15490, %r15691;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15696, %r15693, %r15692;
	// end inline asm
	// begin inline asm
	mov.b32 %r15699, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15700, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15701, %r15493, %r15699;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15704, %r15701, %r15700;
	// end inline asm
	// begin inline asm
	mov.b32 %r15707, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15708, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15709, %r15496, %r15707;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15712, %r15709, %r15708;
	// end inline asm
	// begin inline asm
	mov.b32 %r15715, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15716, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15717, %r15499, %r15715;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15720, %r15717, %r15716;
	// end inline asm
	// begin inline asm
	mov.b32 %r15723, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15724, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15725, %r15502, %r15723;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15728, %r15725, %r15724;
	// end inline asm
	// begin inline asm
	mov.b32 %r15731, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15732, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15733, %r15505, %r15731;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15736, %r15733, %r15732;
	// end inline asm
	// begin inline asm
	mov.b32 %r15739, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15740, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15741, %r15508, %r15739;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15744, %r15741, %r15740;
	// end inline asm
	// begin inline asm
	mov.b32 %r15747, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15748, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15749, %r15511, %r15747;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15752, %r15749, %r15748;
	// end inline asm
	// begin inline asm
	mov.b32 %r15755, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15756, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15757, %r15514, %r15755;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15760, %r15757, %r15756;
	// end inline asm
	// begin inline asm
	mov.b32 %r15763, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15764, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15765, %r15517, %r15763;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15768, %r15765, %r15764;
	// end inline asm
	// begin inline asm
	mov.b32 %r15771, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15772, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15773, %r15520, %r15771;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15776, %r15773, %r15772;
	// end inline asm
	// begin inline asm
	mov.b32 %r15782, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15780, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15781, %r15782, %r15780;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15784, %r15528, %r15781;
	// end inline asm
	// begin inline asm
	mov.b32 %r15787, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15788, %r15782, %r15787;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15791, %r15536, %r15788;
	// end inline asm
	// begin inline asm
	mov.b32 %r15794, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15795, %r15782, %r15794;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15798, %r15544, %r15795;
	// end inline asm
	// begin inline asm
	mov.b32 %r15801, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15802, %r15782, %r15801;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15805, %r15552, %r15802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15808, %r15784, %r15798, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15812, %r15791, %r15805, %r4363;
	// end inline asm
	shl.b32 	%r15819, %r15812, 4;
	// begin inline asm
	lop3.b32 %r15816, %r4369, %r15808, %r15819, 202;
	// end inline asm
	xor.b32  	%r16187, %r15816, -2004318072;
	// begin inline asm
	mov.b32 %r15823, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15821, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15822, %r15823, %r15821;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15825, %r15560, %r15822;
	// end inline asm
	// begin inline asm
	mov.b32 %r15828, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15829, %r15823, %r15828;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15832, %r15568, %r15829;
	// end inline asm
	// begin inline asm
	mov.b32 %r15835, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15836, %r15823, %r15835;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15839, %r15576, %r15836;
	// end inline asm
	// begin inline asm
	mov.b32 %r15842, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15843, %r15823, %r15842;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15846, %r15584, %r15843;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15849, %r15825, %r15839, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15853, %r15832, %r15846, %r4363;
	// end inline asm
	shl.b32 	%r15860, %r15853, 4;
	// begin inline asm
	lop3.b32 %r15857, %r4369, %r15849, %r15860, 202;
	// end inline asm
	xor.b32  	%r16188, %r15857, -2004318072;
	// begin inline asm
	mov.b32 %r15864, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15862, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15863, %r15864, %r15862;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15866, %r15592, %r15863;
	// end inline asm
	// begin inline asm
	mov.b32 %r15869, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15870, %r15864, %r15869;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15873, %r15600, %r15870;
	// end inline asm
	// begin inline asm
	mov.b32 %r15876, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15877, %r15864, %r15876;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15880, %r15608, %r15877;
	// end inline asm
	// begin inline asm
	mov.b32 %r15883, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15884, %r15864, %r15883;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15887, %r15616, %r15884;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15890, %r15866, %r15880, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15894, %r15873, %r15887, %r4363;
	// end inline asm
	shl.b32 	%r15901, %r15894, 4;
	// begin inline asm
	lop3.b32 %r15898, %r4369, %r15890, %r15901, 202;
	// end inline asm
	xor.b32  	%r16189, %r15898, -2004318072;
	// begin inline asm
	mov.b32 %r15905, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15903, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15904, %r15905, %r15903;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15907, %r15624, %r15904;
	// end inline asm
	// begin inline asm
	mov.b32 %r15910, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15911, %r15905, %r15910;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15914, %r15632, %r15911;
	// end inline asm
	// begin inline asm
	mov.b32 %r15917, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15918, %r15905, %r15917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15921, %r15640, %r15918;
	// end inline asm
	// begin inline asm
	mov.b32 %r15924, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15925, %r15905, %r15924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15928, %r15648, %r15925;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15931, %r15907, %r15921, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15935, %r15914, %r15928, %r4363;
	// end inline asm
	shl.b32 	%r15942, %r15935, 4;
	// begin inline asm
	lop3.b32 %r15939, %r4369, %r15931, %r15942, 202;
	// end inline asm
	xor.b32  	%r16190, %r15939, -2004318072;
	// begin inline asm
	mov.b32 %r15946, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15944, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15945, %r15946, %r15944;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15948, %r15656, %r15945;
	// end inline asm
	// begin inline asm
	mov.b32 %r15951, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15952, %r15946, %r15951;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15955, %r15664, %r15952;
	// end inline asm
	// begin inline asm
	mov.b32 %r15958, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15959, %r15946, %r15958;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15962, %r15672, %r15959;
	// end inline asm
	// begin inline asm
	mov.b32 %r15965, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15966, %r15946, %r15965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15969, %r15680, %r15966;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15972, %r15948, %r15962, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15976, %r15955, %r15969, %r4363;
	// end inline asm
	shl.b32 	%r15983, %r15976, 4;
	// begin inline asm
	lop3.b32 %r15980, %r4369, %r15972, %r15983, 202;
	// end inline asm
	xor.b32  	%r16191, %r15980, -2004318072;
	// begin inline asm
	mov.b32 %r15987, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15985, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15986, %r15987, %r15985;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15989, %r15688, %r15986;
	// end inline asm
	// begin inline asm
	mov.b32 %r15992, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15993, %r15987, %r15992;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15996, %r15696, %r15993;
	// end inline asm
	// begin inline asm
	mov.b32 %r15999, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16000, %r15987, %r15999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16003, %r15704, %r16000;
	// end inline asm
	// begin inline asm
	mov.b32 %r16006, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16007, %r15987, %r16006;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16010, %r15712, %r16007;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16013, %r15989, %r16003, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16017, %r15996, %r16010, %r4363;
	// end inline asm
	shl.b32 	%r16024, %r16017, 4;
	// begin inline asm
	lop3.b32 %r16021, %r4369, %r16013, %r16024, 202;
	// end inline asm
	xor.b32  	%r16192, %r16021, -2004318072;
	// begin inline asm
	mov.b32 %r16028, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r16026, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16027, %r16028, %r16026;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16030, %r15720, %r16027;
	// end inline asm
	// begin inline asm
	mov.b32 %r16033, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16034, %r16028, %r16033;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16037, %r15728, %r16034;
	// end inline asm
	// begin inline asm
	mov.b32 %r16040, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16041, %r16028, %r16040;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16044, %r15736, %r16041;
	// end inline asm
	// begin inline asm
	mov.b32 %r16047, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16048, %r16028, %r16047;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16051, %r15744, %r16048;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16054, %r16030, %r16044, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16058, %r16037, %r16051, %r4363;
	// end inline asm
	shl.b32 	%r16065, %r16058, 4;
	// begin inline asm
	lop3.b32 %r16062, %r4369, %r16054, %r16065, 202;
	// end inline asm
	xor.b32  	%r16193, %r16062, -2004318072;
	// begin inline asm
	mov.b32 %r16069, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r16067, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16068, %r16069, %r16067;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16071, %r15752, %r16068;
	// end inline asm
	// begin inline asm
	mov.b32 %r16074, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16075, %r16069, %r16074;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16078, %r15760, %r16075;
	// end inline asm
	// begin inline asm
	mov.b32 %r16081, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16082, %r16069, %r16081;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16085, %r15768, %r16082;
	// end inline asm
	// begin inline asm
	mov.b32 %r16088, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16089, %r16069, %r16088;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16092, %r15776, %r16089;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16095, %r16071, %r16085, %r4363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16099, %r16078, %r16092, %r4363;
	// end inline asm
	shl.b32 	%r16106, %r16099, 4;
	// begin inline asm
	lop3.b32 %r16103, %r4369, %r16095, %r16106, 202;
	// end inline asm
	xor.b32  	%r16194, %r16103, -2004318072;
	st.shared.u32 	[%rd96], %r16187;
	st.shared.u32 	[%rd98], %r16188;
	st.shared.u32 	[%rd100], %r16189;
	st.shared.u32 	[%rd102], %r16190;
	st.shared.u32 	[%rd104], %r16191;
	st.shared.u32 	[%rd106], %r16192;
	st.shared.u32 	[%rd108], %r16193;
	st.shared.u32 	[%rd110], %r16194;
	add.s32 	%r16319, %r16319, 128;
	setp.ne.s32 	%p308, %r16319, 256;
	@%p308 bra 	$L__BB0_159;
// %bb.160:                             // %guard_exit29693
                                        //   in Loop: Header=BB0_116 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16200, [%rd4];
	ld.shared.u32 	%r16201, [%rd5+128];
	ld.shared.u32 	%r16208, [%rd5+4];
	ld.shared.u32 	%r16209, [%rd5+132];
	ld.shared.u32 	%r16216, [%rd6];
	ld.shared.u32 	%r16217, [%rd7+128];
	ld.shared.u32 	%r16224, [%rd7+4];
	ld.shared.u32 	%r16225, [%rd7+132];
	ld.shared.u32 	%r16232, [%rd4+16644];
	ld.shared.u32 	%r16233, [%rd5+16772];
	ld.shared.u32 	%r16240, [%rd5+16648];
	ld.shared.u32 	%r16241, [%rd5+16776];
	ld.shared.u32 	%r16248, [%rd6+16644];
	ld.shared.u32 	%r16249, [%rd21];
	ld.shared.u32 	%r16256, [%rd7+16648];
	ld.shared.u32 	%r16257, [%rd7+16776];
	// begin inline asm
	prmt.b32 %r16195, %r16200, %r16201, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16199, %r16200, %r16201, %r16202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16203, %r16208, %r16209, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16207, %r16208, %r16209, %r16202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16211, %r16216, %r16217, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16215, %r16216, %r16217, %r16202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16219, %r16224, %r16225, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16223, %r16224, %r16225, %r16202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16227, %r16232, %r16233, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16231, %r16232, %r16233, %r16202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16235, %r16240, %r16241, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16239, %r16240, %r16241, %r16202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16243, %r16248, %r16249, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16247, %r16248, %r16249, %r16202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16251, %r16256, %r16257, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16255, %r16256, %r16257, %r16202;
	// end inline asm
	selp.b32 	%r16260, %r16199, %r16195, %p294;
	shfl.sync.bfly.b32	%r16261, %r16260, 8, 31, -1;
	selp.b32 	%r16262, %r16207, %r16203, %p294;
	shfl.sync.bfly.b32	%r16263, %r16262, 8, 31, -1;
	selp.b32 	%r16264, %r16215, %r16211, %p294;
	shfl.sync.bfly.b32	%r16265, %r16264, 8, 31, -1;
	selp.b32 	%r16266, %r16223, %r16219, %p294;
	shfl.sync.bfly.b32	%r16267, %r16266, 8, 31, -1;
	selp.b32 	%r16268, %r16231, %r16227, %p294;
	shfl.sync.bfly.b32	%r16269, %r16268, 8, 31, -1;
	selp.b32 	%r16270, %r16239, %r16235, %p294;
	shfl.sync.bfly.b32	%r16271, %r16270, 8, 31, -1;
	selp.b32 	%r16272, %r16247, %r16243, %p294;
	shfl.sync.bfly.b32	%r16273, %r16272, 8, 31, -1;
	selp.b32 	%r16274, %r16255, %r16251, %p294;
	shfl.sync.bfly.b32	%r16275, %r16274, 8, 31, -1;
	mov.u32 	%r16310, 256;
	bra.uni 	$L__BB0_116;
$L__BB0_117:                            // %L70688
	mov.u32 	%r698, 0;
	st.global.u32 	[%rd3], %r698;
	ret;
$L__BB0_7:                              // %L166
	mov.u32 	%r16277, 2;
	st.global.u32 	[%rd3], %r16277;
	mov.u64 	%rd113, exception5817;
	cvta.global.u64 	%rd114, %rd113;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd114;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r219;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r16276, 3;
	st.global.u32 	[%rd3], %r16276;
	mov.u64 	%rd111, exception5817;
	cvta.global.u64 	%rd112, %rd111;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd112;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r219;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd27, exception15841;
	cvta.global.u64 	%rd28, %rd27;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd28;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r219;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
