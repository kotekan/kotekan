// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_17535
(
	.param .align 8 .b8 julia_power_by_squaring_17535_param_0[16],
	.param .b64 julia_power_by_squaring_17535_param_1,
	.param .b64 julia_power_by_squaring_17535_param_2
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5812[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<306>;
	.reg .b16 	%rs<2396>;
	.reg .b32 	%r<16339>;
	.reg .f32 	%f<1310>;
	.reg .b64 	%rd<121>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r219, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd22, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r224, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r224, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd23, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u32 	%r220, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r225, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r226, %r225, %r4;
	or.b32  	%r227, %r226, %r2;
	mul.wide.u32 	%rd29, %r227, 4;
	add.s64 	%rd3, %rd23, %rd29;
	mov.u32 	%r228, 1;
	st.global.u32 	[%rd3], %r228;
	setp.lt.s32 	%p2, %r220, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L114
	ld.param.u32 	%r221, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r221, %r220;
	setp.gt.s32 	%p4, %r221, 65536;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L124
	ld.param.u32 	%r222, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r229, %r221, %r220;
	and.b32  	%r230, %r229, 255;
	setp.ne.s32 	%p6, %r230, 0;
	setp.lt.s32 	%p7, %r222, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L130
	ld.param.u32 	%r223, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r223, %r222;
	setp.gt.s32 	%p10, %r223, 512;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L140
	sub.s32 	%r231, %r223, %r222;
	and.b32  	%r232, %r231, 1;
	setp.eq.b32 	%p12, %r232, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass137
	bfe.u32 	%r135, %r4, 1, 1;
	and.b32  	%r136, %r4, 1;
	bfe.u32 	%r138, %r4, 2, 1;
	shr.u32 	%r139, %r4, 4;
	shl.b32 	%r240, %r139, 2;
	shl.b32 	%r241, %r138, 3;
	shl.b32 	%r242, %r136, 4;
	shl.b32 	%r243, %r135, 5;
	or.b32  	%r244, %r242, %r243;
	or.b32  	%r245, %r241, %r244;
	or.b32  	%r246, %r240, %r245;
	bfe.u32 	%r141, %r4, 3, 1;
	shl.b32 	%r247, %r141, 1;
	or.b32  	%r142, %r247, %r246;
	or.b32  	%r143, %r142, 64;
	mov.f32 	%f221, 0f40000000;
	mov.f32 	%f222, 0f43FF8000;
	div.approx.f32 	%f159, %f222, %f221;
	cvt.rn.f32.s32 	%f223, %r142;
	sub.f32 	%f224, %f223, %f159;
	mov.f32 	%f253, 0f43000000;
	div.approx.f32 	%f161, %f224, %f253;
	setp.ne.f32 	%p20, %f161, 0f00000000;
	mov.f32 	%f1277, 0f3F800000;
	mov.f32 	%f1262, %f1277;
	@%p20 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L648
	sin.approx.f32 	%f254, %f161;
	div.approx.f32 	%f1262, %f254, %f161;
$L__BB0_10:                             // %L651
	cvt.rn.f32.s32 	%f257, %r143;
	sub.f32 	%f258, %f257, %f159;
	div.approx.f32 	%f5, %f258, %f253;
	setp.eq.f32 	%p26, %f5, 0f00000000;
	mov.f32 	%f1263, %f1277;
	@%p26 bra 	$L__BB0_12;
// %bb.11:                              // %L668
	sin.approx.f32 	%f288, %f5;
	div.approx.f32 	%f1263, %f288, %f5;
$L__BB0_12:                             // %L671
	or.b32  	%r265, %r142, 1;
	or.b32  	%r6, %r142, 65;
	cvt.rn.f32.s32 	%f292, %r265;
	sub.f32 	%f293, %f292, %f159;
	div.approx.f32 	%f9, %f293, %f253;
	setp.eq.f32 	%p32, %f9, 0f00000000;
	mov.f32 	%f1264, %f1277;
	@%p32 bra 	$L__BB0_14;
// %bb.13:                              // %L750
	sin.approx.f32 	%f323, %f9;
	div.approx.f32 	%f1264, %f323, %f9;
$L__BB0_14:                             // %L753
	cvt.rn.f32.s32 	%f326, %r6;
	sub.f32 	%f327, %f326, %f159;
	div.approx.f32 	%f14, %f327, %f253;
	setp.eq.f32 	%p38, %f14, 0f00000000;
	mov.f32 	%f1265, %f1277;
	@%p38 bra 	$L__BB0_16;
// %bb.15:                              // %L770
	sin.approx.f32 	%f357, %f14;
	div.approx.f32 	%f1265, %f357, %f14;
$L__BB0_16:                             // %L773
	or.b32  	%r283, %r142, 128;
	or.b32  	%r8, %r142, 192;
	cvt.rn.f32.s32 	%f361, %r283;
	sub.f32 	%f362, %f361, %f159;
	div.approx.f32 	%f18, %f362, %f253;
	setp.eq.f32 	%p44, %f18, 0f00000000;
	mov.f32 	%f1266, %f1277;
	@%p44 bra 	$L__BB0_18;
// %bb.17:                              // %L852
	sin.approx.f32 	%f392, %f18;
	div.approx.f32 	%f1266, %f392, %f18;
$L__BB0_18:                             // %L855
	mov.f32 	%f225, 0f44004000;
	cvt.rn.f32.s32 	%f395, %r8;
	sub.f32 	%f396, %f395, %f159;
	div.approx.f32 	%f23, %f396, %f253;
	setp.eq.f32 	%p50, %f23, 0f00000000;
	mov.f32 	%f1267, %f1277;
	@%p50 bra 	$L__BB0_20;
// %bb.19:                              // %L872
	sin.approx.f32 	%f426, %f23;
	div.approx.f32 	%f1267, %f426, %f23;
$L__BB0_20:                             // %L875
	div.approx.f32 	%f226, %f224, %f225;
	div.approx.f32 	%f260, %f258, %f225;
	div.approx.f32 	%f295, %f293, %f225;
	div.approx.f32 	%f329, %f327, %f225;
	div.approx.f32 	%f364, %f362, %f225;
	div.approx.f32 	%f398, %f396, %f225;
	or.b32  	%r301, %r142, 129;
	or.b32  	%r10, %r142, 193;
	cvt.rn.f32.s32 	%f430, %r301;
	sub.f32 	%f431, %f430, %f159;
	div.approx.f32 	%f433, %f431, %f225;
	div.approx.f32 	%f27, %f431, %f253;
	setp.eq.f32 	%p56, %f27, 0f00000000;
	mov.f32 	%f1268, %f1277;
	@%p56 bra 	$L__BB0_22;
// %bb.21:                              // %L954
	sin.approx.f32 	%f461, %f27;
	div.approx.f32 	%f1268, %f461, %f27;
$L__BB0_22:                             // %L957
	abs.f32 	%f227, %f226;
	abs.f32 	%f261, %f260;
	abs.f32 	%f296, %f295;
	abs.f32 	%f330, %f329;
	abs.f32 	%f365, %f364;
	abs.f32 	%f399, %f398;
	abs.f32 	%f434, %f433;
	cvt.rn.f32.s32 	%f464, %r10;
	sub.f32 	%f465, %f464, %f159;
	div.approx.f32 	%f467, %f465, %f225;
	abs.f32 	%f468, %f467;
	div.approx.f32 	%f32, %f465, %f253;
	setp.eq.f32 	%p62, %f32, 0f00000000;
	mov.f32 	%f1269, %f1277;
	@%p62 bra 	$L__BB0_24;
// %bb.23:                              // %L974
	sin.approx.f32 	%f495, %f32;
	div.approx.f32 	%f1269, %f495, %f32;
$L__BB0_24:                             // %L977
	setp.gt.f32 	%p15, %f227, 0f4B800000;
	mul.f32 	%f228, %f226, 0f00000000;
	setp.gt.f32 	%p21, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p27, %f296, 0f4B800000;
	mul.f32 	%f297, %f295, 0f00000000;
	setp.gt.f32 	%p33, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p39, %f365, 0f4B800000;
	mul.f32 	%f366, %f364, 0f00000000;
	setp.gt.f32 	%p45, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p51, %f434, 0f4B800000;
	mul.f32 	%f435, %f433, 0f00000000;
	setp.gt.f32 	%p57, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	shl.b32 	%r127, %r4, 1;
	or.b32  	%r319, %r142, 256;
	or.b32  	%r12, %r142, 320;
	cvt.rn.f32.s32 	%f499, %r319;
	sub.f32 	%f500, %f499, %f159;
	div.approx.f32 	%f502, %f500, %f225;
	abs.f32 	%f503, %f502;
	setp.gt.f32 	%p63, %f503, 0f4B800000;
	mul.f32 	%f504, %f502, 0f00000000;
	div.approx.f32 	%f36, %f500, %f253;
	setp.eq.f32 	%p68, %f36, 0f00000000;
	mov.f32 	%f1270, %f1277;
	@%p68 bra 	$L__BB0_26;
// %bb.25:                              // %L1056
	sin.approx.f32 	%f530, %f36;
	div.approx.f32 	%f1270, %f530, %f36;
$L__BB0_26:                             // %L1059
	selp.f32 	%f229, %f228, %f226, %p15;
	selp.f32 	%f263, %f262, %f260, %p21;
	selp.f32 	%f298, %f297, %f295, %p27;
	selp.f32 	%f332, %f331, %f329, %p33;
	selp.f32 	%f367, %f366, %f364, %p39;
	selp.f32 	%f401, %f400, %f398, %p45;
	selp.f32 	%f436, %f435, %f433, %p51;
	selp.f32 	%f470, %f469, %f467, %p57;
	selp.f32 	%f505, %f504, %f502, %p63;
	shl.b32 	%r126, %r4, 2;
	and.b32  	%r128, %r127, 8;
	and.b32  	%r234, %r4, 18;
	cvt.rn.f32.s32 	%f533, %r12;
	sub.f32 	%f534, %f533, %f159;
	div.approx.f32 	%f536, %f534, %f225;
	abs.f32 	%f537, %f536;
	setp.gt.f32 	%p69, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	selp.f32 	%f539, %f538, %f536, %p69;
	div.approx.f32 	%f41, %f534, %f253;
	setp.eq.f32 	%p74, %f41, 0f00000000;
	mov.f32 	%f1271, %f1277;
	@%p74 bra 	$L__BB0_28;
// %bb.27:                              // %L1076
	sin.approx.f32 	%f564, %f41;
	div.approx.f32 	%f1271, %f564, %f41;
$L__BB0_28:                             // %L1079
	add.f32 	%f230, %f229, %f229;
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f299, %f298, %f298;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f368, %f367, %f367;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f437, %f436, %f436;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f506, %f505, %f505;
	add.f32 	%f540, %f539, %f539;
	shl.b32 	%r130, %r3, 5;
	or.b32  	%r235, %r234, %r128;
	and.b32  	%r236, %r126, 36;
	or.b32  	%r337, %r142, 257;
	or.b32  	%r14, %r142, 321;
	cvt.rn.f32.s32 	%f568, %r337;
	sub.f32 	%f569, %f568, %f159;
	div.approx.f32 	%f571, %f569, %f225;
	abs.f32 	%f572, %f571;
	setp.gt.f32 	%p75, %f572, 0f4B800000;
	mul.f32 	%f573, %f571, 0f00000000;
	selp.f32 	%f574, %f573, %f571, %p75;
	add.f32 	%f575, %f574, %f574;
	div.approx.f32 	%f45, %f569, %f253;
	setp.eq.f32 	%p80, %f45, 0f00000000;
	mov.f32 	%f1272, %f1277;
	@%p80 bra 	$L__BB0_30;
// %bb.29:                              // %L1158
	sin.approx.f32 	%f599, %f45;
	div.approx.f32 	%f1272, %f599, %f45;
$L__BB0_30:                             // %L1161
	mov.b32 	%r248, %f230;
	mov.b32 	%r255, %f264;
	mov.b32 	%r266, %f299;
	mov.b32 	%r273, %f333;
	mov.b32 	%r284, %f368;
	mov.b32 	%r291, %f402;
	mov.b32 	%r302, %f437;
	mov.b32 	%r309, %f471;
	mov.b32 	%r320, %f506;
	mov.b32 	%r327, %f540;
	mov.b32 	%r338, %f575;
	and.b32  	%r233, %r130, 8064;
	or.b32  	%r131, %r235, %r236;
	cvt.rn.f32.s32 	%f602, %r14;
	sub.f32 	%f603, %f602, %f159;
	div.approx.f32 	%f605, %f603, %f225;
	abs.f32 	%f606, %f605;
	setp.gt.f32 	%p81, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	selp.f32 	%f608, %f607, %f605, %p81;
	add.f32 	%f609, %f608, %f608;
	mov.b32 	%r345, %f609;
	div.approx.f32 	%f50, %f603, %f253;
	setp.eq.f32 	%p86, %f50, 0f00000000;
	mov.f32 	%f1273, %f1277;
	@%p86 bra 	$L__BB0_32;
// %bb.31:                              // %L1178
	sin.approx.f32 	%f633, %f50;
	div.approx.f32 	%f1273, %f633, %f50;
$L__BB0_32:                             // %L1181
	and.b32  	%r249, %r248, -2147483648;
	and.b32  	%r256, %r255, -2147483648;
	and.b32  	%r267, %r266, -2147483648;
	and.b32  	%r274, %r273, -2147483648;
	and.b32  	%r285, %r284, -2147483648;
	and.b32  	%r292, %r291, -2147483648;
	and.b32  	%r303, %r302, -2147483648;
	and.b32  	%r310, %r309, -2147483648;
	and.b32  	%r321, %r320, -2147483648;
	and.b32  	%r328, %r327, -2147483648;
	and.b32  	%r339, %r338, -2147483648;
	and.b32  	%r346, %r345, -2147483648;
	or.b32  	%r237, %r131, %r233;
	or.b32  	%r355, %r142, 384;
	or.b32  	%r16, %r142, 448;
	cvt.rn.f32.s32 	%f637, %r355;
	sub.f32 	%f638, %f637, %f159;
	div.approx.f32 	%f640, %f638, %f225;
	abs.f32 	%f641, %f640;
	setp.gt.f32 	%p87, %f641, 0f4B800000;
	mul.f32 	%f642, %f640, 0f00000000;
	selp.f32 	%f643, %f642, %f640, %p87;
	add.f32 	%f644, %f643, %f643;
	mov.b32 	%r356, %f644;
	and.b32  	%r357, %r356, -2147483648;
	div.approx.f32 	%f54, %f638, %f253;
	setp.eq.f32 	%p92, %f54, 0f00000000;
	mov.f32 	%f1274, %f1277;
	@%p92 bra 	$L__BB0_34;
// %bb.33:                              // %L1260
	sin.approx.f32 	%f668, %f54;
	div.approx.f32 	%f1274, %f668, %f54;
$L__BB0_34:                             // %L1263
	or.b32  	%r250, %r249, 1056964608;
	or.b32  	%r257, %r256, 1056964608;
	or.b32  	%r268, %r267, 1056964608;
	or.b32  	%r275, %r274, 1056964608;
	or.b32  	%r286, %r285, 1056964608;
	or.b32  	%r293, %r292, 1056964608;
	or.b32  	%r304, %r303, 1056964608;
	or.b32  	%r311, %r310, 1056964608;
	or.b32  	%r322, %r321, 1056964608;
	or.b32  	%r329, %r328, 1056964608;
	or.b32  	%r340, %r339, 1056964608;
	or.b32  	%r347, %r346, 1056964608;
	or.b32  	%r358, %r357, 1056964608;
	cvt.u16.u32 	%rs2, %r237;
	cvt.rn.f32.s32 	%f671, %r16;
	sub.f32 	%f672, %f671, %f159;
	div.approx.f32 	%f674, %f672, %f225;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p93, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	selp.f32 	%f677, %f676, %f674, %p93;
	add.f32 	%f678, %f677, %f677;
	mov.b32 	%r363, %f678;
	and.b32  	%r364, %r363, -2147483648;
	or.b32  	%r365, %r364, 1056964608;
	div.approx.f32 	%f59, %f672, %f253;
	setp.eq.f32 	%p98, %f59, 0f00000000;
	mov.f32 	%f1275, %f1277;
	@%p98 bra 	$L__BB0_36;
// %bb.35:                              // %L1280
	sin.approx.f32 	%f702, %f59;
	div.approx.f32 	%f1275, %f702, %f59;
$L__BB0_36:                             // %L1283
	mov.b32 	%f231, %r250;
	mov.b32 	%f265, %r257;
	mov.b32 	%f300, %r268;
	mov.b32 	%f334, %r275;
	mov.b32 	%f369, %r286;
	mov.b32 	%f403, %r293;
	mov.b32 	%f438, %r304;
	mov.b32 	%f472, %r311;
	mov.b32 	%f507, %r322;
	mov.b32 	%f541, %r329;
	mov.b32 	%f576, %r340;
	mov.b32 	%f610, %r347;
	mov.b32 	%f645, %r358;
	mov.b32 	%f679, %r365;
	shr.u16 	%rs3, %rs2, 1;
	or.b32  	%r373, %r142, 385;
	or.b32  	%r18, %r142, 449;
	cvt.rn.f32.s32 	%f706, %r373;
	sub.f32 	%f707, %f706, %f159;
	div.approx.f32 	%f709, %f707, %f225;
	abs.f32 	%f710, %f709;
	setp.gt.f32 	%p99, %f710, 0f4B800000;
	mul.f32 	%f711, %f709, 0f00000000;
	selp.f32 	%f712, %f711, %f709, %p99;
	add.f32 	%f713, %f712, %f712;
	mov.b32 	%r374, %f713;
	and.b32  	%r375, %r374, -2147483648;
	or.b32  	%r376, %r375, 1056964608;
	mov.b32 	%f714, %r376;
	div.approx.f32 	%f63, %f707, %f253;
	setp.eq.f32 	%p104, %f63, 0f00000000;
	mov.f32 	%f1276, %f1277;
	@%p104 bra 	$L__BB0_38;
// %bb.37:                              // %L1362
	sin.approx.f32 	%f737, %f63;
	div.approx.f32 	%f1276, %f737, %f63;
$L__BB0_38:                             // %L1365
	add.f32 	%f232, %f230, %f231;
	abs.f32 	%f234, %f230;
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f301, %f299, %f300;
	abs.f32 	%f303, %f299;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f370, %f368, %f369;
	abs.f32 	%f372, %f368;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f439, %f437, %f438;
	abs.f32 	%f441, %f437;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f508, %f506, %f507;
	abs.f32 	%f510, %f506;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f577, %f575, %f576;
	abs.f32 	%f579, %f575;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f646, %f644, %f645;
	abs.f32 	%f648, %f644;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f715, %f713, %f714;
	abs.f32 	%f717, %f713;
	or.b16  	%rs1, %rs3, 32;
	shr.u32 	%r134, %r4, 1;
	shr.u32 	%r140, %r4, 3;
	cvt.rn.f32.s32 	%f740, %r18;
	sub.f32 	%f741, %f740, %f159;
	div.approx.f32 	%f743, %f741, %f225;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p105, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p105;
	add.f32 	%f747, %f746, %f746;
	mov.b32 	%r381, %f747;
	and.b32  	%r382, %r381, -2147483648;
	or.b32  	%r383, %r382, 1056964608;
	mov.b32 	%f748, %r383;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	div.approx.f32 	%f68, %f741, %f253;
	setp.eq.f32 	%p110, %f68, 0f00000000;
	@%p110 bra 	$L__BB0_40;
// %bb.39:                              // %L1382
	sin.approx.f32 	%f771, %f68;
	div.approx.f32 	%f1277, %f771, %f68;
$L__BB0_40:                             // %L1385
	cvt.rzi.f32.f32 	%f233, %f232;
	setp.gt.f32 	%p16, %f234, 0f4B000000;
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p22, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f302, %f301;
	setp.gt.f32 	%p28, %f303, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p34, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f371, %f370;
	setp.gt.f32 	%p40, %f372, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p46, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f440, %f439;
	setp.gt.f32 	%p52, %f441, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p58, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f509, %f508;
	setp.gt.f32 	%p64, %f510, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p70, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f578, %f577;
	setp.gt.f32 	%p76, %f579, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p82, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f647, %f646;
	setp.gt.f32 	%p88, %f648, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p94, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f716, %f715;
	setp.gt.f32 	%p100, %f717, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p106, %f751, 0f4B000000;
	and.b16  	%rs4, %rs1, 4095;
	mul.lo.s32 	%r403, %r142, 127;
	and.b32  	%r404, %r403, 255;
	cvt.rn.f32.s32 	%f774, %r404;
	div.approx.f32 	%f776, %f774, %f253;
	add.f32 	%f777, %f776, %f776;
	mov.b32 	%r405, %f777;
	and.b32  	%r406, %r405, -2147483648;
	or.b32  	%r407, %r406, 1056964608;
	mov.b32 	%f778, %r407;
	add.f32 	%f779, %f777, %f778;
	cvt.rzi.f32.f32 	%f780, %f779;
	abs.f32 	%f781, %f777;
	setp.gt.f32 	%p111, %f781, 0f4B000000;
	selp.f32 	%f782, %f777, %f780, %p111;
	cvt.rzi.f32.f32 	%f783, %f777;
	setp.lt.f32 	%p112, %f781, 0f3F000000;
	add.s32 	%r413, %r403, 192;
	and.b32  	%r414, %r413, 255;
	cvt.rn.f32.s32 	%f809, %r414;
	div.approx.f32 	%f810, %f809, %f253;
	add.f32 	%f811, %f810, %f810;
	mov.b32 	%r415, %f811;
	and.b32  	%r416, %r415, -2147483648;
	or.b32  	%r417, %r416, 1056964608;
	mov.b32 	%f812, %r417;
	add.f32 	%f813, %f811, %f812;
	cvt.rzi.f32.f32 	%f814, %f813;
	abs.f32 	%f815, %f811;
	setp.gt.f32 	%p118, %f815, 0f4B000000;
	selp.f32 	%f816, %f811, %f814, %p118;
	cvt.rzi.f32.f32 	%f817, %f811;
	setp.lt.f32 	%p119, %f815, 0f3F000000;
	and.b32  	%r423, %r140, 2;
	and.b32  	%r424, %r134, 4;
	or.b32  	%r425, %r138, %r423;
	or.b32  	%r24, %r425, %r424;
	and.b32  	%r426, %r4, 3;
	mul.lo.s32 	%r427, %r426, %r24;
	shl.b32 	%r428, %r427, 1;
	neg.s32 	%r429, %r428;
	cvt.rn.f32.s32 	%f842, %r429;
	mov.f32 	%f843, 0f41000000;
	div.approx.f32 	%f71, %f842, %f843;
	abs.f32 	%f1300, %f71;
	setp.lt.f32 	%p125, %f1300, 0f40000000;
	@%p125 bra 	$L__BB0_132;
// %bb.41:
	setp.gtu.f32 	%p126, %f1300, 0f4B800000;
	@%p126 bra 	$L__BB0_128;
	bra.uni 	$L__BB0_42;
$L__BB0_128:
	mov.b32 	%r145, %f1300;
	and.b32  	%r430, %r145, 8388607;
	or.b32  	%r16308, %r430, 1065353216;
	mov.b32 	%f1299, %r16308;
	add.s32 	%r431, %r145, -1073741824;
	and.b32  	%r16309, %r431, -8388608;
	setp.eq.s32 	%p132, %r16309, 0;
	@%p132 bra 	$L__BB0_131;
// %bb.129:                             // %__nv_fmaf_rn.exit4.i.i.i1743.preheader
	mov.f32 	%f853, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f852,%f853;
	// end inline asm
$L__BB0_130:                            // %__nv_fmaf_rn.exit4.i.i.i1743
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r432, %r16309, 192937984;
	add.s32 	%r433, %r16308, %r432;
	mov.b32 	%f854, %r433;
	mul.f32 	%f855, %f852, %f854;
	sub.f32 	%f856, %f854, %f855;
	fma.rn.f32 	%f857, %f856, %f852, %f855;
	sub.f32 	%f858, %f854, %f857;
	fma.rz.f32 	%f859, %f858, %f852, %f857;
	cvt.rzi.f32.f32 	%f860, %f859;
	sub.f32 	%f1299, %f854, %f860;
	sub.s32 	%r16309, %r16309, %r432;
	mov.b32 	%r16308, %f1299;
	setp.ne.s32 	%p133, %r16309, 0;
	setp.ne.s32 	%p134, %r16308, 0;
	and.pred  	%p135, %p133, %p134;
	@%p135 bra 	$L__BB0_130;
$L__BB0_131:                            // %__internal_fmodf_slowpath_mod.exit.i.i1745
	setp.gt.u32 	%p136, %r145, 2139095039;
	selp.f32 	%f861, 0f7FFFFFFF, 0f4B800000, %p136;
	mul.f32 	%f862, %f1299, 0f34000000;
	mul.f32 	%f1300, %f861, %f862;
	bra.uni 	$L__BB0_132;
$L__BB0_42:                             // %__nv_fast_fdividef.exit.i.i.i1722
	div.approx.f32 	%f845, %f1300, %f221;
	cvt.rzi.f32.f32 	%f1298, %f845;
	fma.rn.f32 	%f163, %f1298, 0fC0000000, %f1300;
	mov.b32 	%r144, %f163;
	setp.lt.u32 	%p127, %r144, 1073741824;
	@%p127 bra 	$L__BB0_127;
// %bb.43:
	setp.lt.u32 	%p128, %r144, -2147483647;
	@%p128 bra 	$L__BB0_125;
// %bb.44:
	add.f32 	%f850, %f1298, 0fBF800000;
	setp.lt.f32 	%p131, %f163, 0fC0000000;
	add.f32 	%f851, %f850, 0fBF800000;
	selp.f32 	%f1298, %f851, %f850, %p131;
	bra.uni 	$L__BB0_127;
$L__BB0_125:
	add.f32 	%f1298, %f1298, 0f3F800000;
	setp.ltu.f32 	%p129, %f163, 0f40800000;
	@%p129 bra 	$L__BB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i1726
	add.f32 	%f846, %f1298, 0f3F800000;
	fma.rn.f32 	%f848, %f221, 0fC0400000, %f163;
	setp.ge.f32 	%p130, %f848, 0f00000000;
	add.f32 	%f849, %f846, 0f3F800000;
	selp.f32 	%f1298, %f849, %f846, %p130;
$L__BB0_127:                            // %__internal_fmodf_fastpath_quot.exit.i.i1729
	fma.rn.f32 	%f1300, %f1298, 0fC0000000, %f1300;
$L__BB0_132:                            // %__internal_fmodf_kernel.exit.i1748
	selp.f32 	%f235, %f230, %f233, %p16;
	cvt.rzi.f32.f32 	%f236, %f230;
	setp.lt.f32 	%p17, %f234, 0f3F000000;
	selp.f32 	%f269, %f264, %f267, %p22;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p23, %f268, 0f3F000000;
	selp.f32 	%f304, %f299, %f302, %p28;
	cvt.rzi.f32.f32 	%f305, %f299;
	setp.lt.f32 	%p29, %f303, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p34;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p35, %f337, 0f3F000000;
	selp.f32 	%f373, %f368, %f371, %p40;
	cvt.rzi.f32.f32 	%f374, %f368;
	setp.lt.f32 	%p41, %f372, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p46;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p47, %f406, 0f3F000000;
	selp.f32 	%f442, %f437, %f440, %p52;
	cvt.rzi.f32.f32 	%f443, %f437;
	setp.lt.f32 	%p53, %f441, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p58;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p59, %f475, 0f3F000000;
	selp.f32 	%f511, %f506, %f509, %p64;
	cvt.rzi.f32.f32 	%f512, %f506;
	setp.lt.f32 	%p65, %f510, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p70;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p71, %f544, 0f3F000000;
	selp.f32 	%f580, %f575, %f578, %p76;
	cvt.rzi.f32.f32 	%f581, %f575;
	setp.lt.f32 	%p77, %f579, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p82;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p83, %f613, 0f3F000000;
	selp.f32 	%f649, %f644, %f647, %p88;
	cvt.rzi.f32.f32 	%f650, %f644;
	setp.lt.f32 	%p89, %f648, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p94;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p95, %f682, 0f3F000000;
	selp.f32 	%f718, %f713, %f716, %p100;
	cvt.rzi.f32.f32 	%f719, %f713;
	setp.lt.f32 	%p101, %f717, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p106;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p107, %f751, 0f3F000000;
	selp.f32 	%f784, %f783, %f782, %p112;
	selp.f32 	%f818, %f817, %f816, %p119;
	shr.u32 	%r238, %r237, 1;
	cvt.u32.u16 	%r239, %rs4;
	abs.f32 	%f863, %f1300;
	setp.gtu.f32 	%p137, %f863, 0f7F800000;
	@%p137 bra 	$L__BB0_134;
// %bb.133:
	mov.b32 	%r434, %f71;
	and.b32  	%r435, %r434, -2147483648;
	mov.b32 	%r436, %f1300;
	or.b32  	%r437, %r435, %r436;
	mov.b32 	%f1300, %r437;
$L__BB0_134:                            // %__nv_fmodf.exit1749
	selp.f32 	%f237, %f236, %f235, %p17;
	selp.f32 	%f271, %f270, %f269, %p23;
	selp.f32 	%f306, %f305, %f304, %p29;
	selp.f32 	%f340, %f339, %f338, %p35;
	selp.f32 	%f375, %f374, %f373, %p41;
	selp.f32 	%f409, %f408, %f407, %p47;
	selp.f32 	%f444, %f443, %f442, %p53;
	selp.f32 	%f478, %f477, %f476, %p59;
	selp.f32 	%f513, %f512, %f511, %p65;
	selp.f32 	%f547, %f546, %f545, %p71;
	selp.f32 	%f582, %f581, %f580, %p77;
	selp.f32 	%f616, %f615, %f614, %p83;
	selp.f32 	%f651, %f650, %f649, %p89;
	selp.f32 	%f685, %f684, %f683, %p95;
	selp.f32 	%f720, %f719, %f718, %p101;
	selp.f32 	%f754, %f753, %f752, %p107;
	fma.rn.f32 	%f785, %f784, 0fBF000000, %f776;
	fma.rn.f32 	%f819, %f818, 0fBF000000, %f810;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd30, %r238, 4;
	mul.wide.u32 	%rd32, %r239, 4;
	add.f32 	%f864, %f1300, %f1300;
	mov.b32 	%r438, %f864;
	and.b32  	%r439, %r438, -2147483648;
	or.b32  	%r440, %r439, 1056964608;
	mov.b32 	%f865, %r440;
	add.f32 	%f866, %f864, %f865;
	cvt.rzi.f32.f32 	%f867, %f866;
	abs.f32 	%f868, %f864;
	setp.gt.f32 	%p138, %f868, 0f4B000000;
	selp.f32 	%f869, %f864, %f867, %p138;
	cvt.rzi.f32.f32 	%f870, %f864;
	setp.lt.f32 	%p139, %f868, 0f3F000000;
	selp.f32 	%f871, %f870, %f869, %p139;
	fma.rn.f32 	%f872, %f871, 0fBF000000, %f1300;
	and.b32  	%r446, %r127, 6;
	mov.u32 	%r447, -8;
	sub.s32 	%r448, %r447, %r446;
	mul.lo.s32 	%r449, %r24, %r448;
	cvt.rn.f32.s32 	%f894, %r449;
	div.approx.f32 	%f179, %f894, %f843;
	abs.f32 	%f1280, %f179;
	setp.lt.f32 	%p145, %f1280, 0f40000000;
	@%p145 bra 	$L__BB0_56;
// %bb.45:
	setp.gtu.f32 	%p146, %f1280, 0f4B800000;
	@%p146 bra 	$L__BB0_52;
	bra.uni 	$L__BB0_46;
$L__BB0_52:
	mov.b32 	%r26, %f1280;
	and.b32  	%r450, %r26, 8388607;
	or.b32  	%r16273, %r450, 1065353216;
	mov.b32 	%f1279, %r16273;
	add.s32 	%r451, %r26, -1073741824;
	and.b32  	%r16274, %r451, -8388608;
	setp.eq.s32 	%p152, %r16274, 0;
	@%p152 bra 	$L__BB0_55;
// %bb.53:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f905, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f904,%f905;
	// end inline asm
$L__BB0_54:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r452, %r16274, 192937984;
	add.s32 	%r453, %r16273, %r452;
	mov.b32 	%f906, %r453;
	mul.f32 	%f907, %f904, %f906;
	sub.f32 	%f908, %f906, %f907;
	fma.rn.f32 	%f909, %f908, %f904, %f907;
	sub.f32 	%f910, %f906, %f909;
	fma.rz.f32 	%f911, %f910, %f904, %f909;
	cvt.rzi.f32.f32 	%f912, %f911;
	sub.f32 	%f1279, %f906, %f912;
	sub.s32 	%r16274, %r16274, %r452;
	mov.b32 	%r16273, %f1279;
	setp.ne.s32 	%p153, %r16274, 0;
	setp.ne.s32 	%p154, %r16273, 0;
	and.pred  	%p155, %p153, %p154;
	@%p155 bra 	$L__BB0_54;
$L__BB0_55:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p156, %r26, 2139095039;
	selp.f32 	%f913, 0f7FFFFFFF, 0f4B800000, %p156;
	mul.f32 	%f914, %f1279, 0f34000000;
	mul.f32 	%f1280, %f913, %f914;
	bra.uni 	$L__BB0_56;
$L__BB0_46:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f897, %f1280, %f221;
	cvt.rzi.f32.f32 	%f1278, %f897;
	fma.rn.f32 	%f74, %f1278, 0fC0000000, %f1280;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p147, %r25, 1073741824;
	@%p147 bra 	$L__BB0_51;
// %bb.47:
	setp.lt.u32 	%p148, %r25, -2147483647;
	@%p148 bra 	$L__BB0_49;
// %bb.48:
	add.f32 	%f902, %f1278, 0fBF800000;
	setp.lt.f32 	%p151, %f74, 0fC0000000;
	add.f32 	%f903, %f902, 0fBF800000;
	selp.f32 	%f1278, %f903, %f902, %p151;
	bra.uni 	$L__BB0_51;
$L__BB0_49:
	add.f32 	%f1278, %f1278, 0f3F800000;
	setp.ltu.f32 	%p149, %f74, 0f40800000;
	@%p149 bra 	$L__BB0_51;
// %bb.50:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f898, %f1278, 0f3F800000;
	fma.rn.f32 	%f900, %f221, 0fC0400000, %f74;
	setp.ge.f32 	%p150, %f900, 0f00000000;
	add.f32 	%f901, %f898, 0f3F800000;
	selp.f32 	%f1278, %f901, %f898, %p150;
$L__BB0_51:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1280, %f1278, 0fC0000000, %f1280;
$L__BB0_56:                             // %__internal_fmodf_kernel.exit.i
	fma.rn.f32 	%f238, %f237, 0fBF000000, %f229;
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f307, %f306, 0fBF000000, %f298;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f376, %f375, 0fBF000000, %f367;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f445, %f444, 0fBF000000, %f436;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f514, %f513, 0fBF000000, %f505;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f583, %f582, 0fBF000000, %f574;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f652, %f651, 0fBF000000, %f643;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f721, %f720, 0fBF000000, %f712;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	mul.f32 	%f786, %f785, %f785;
	mul.f32 	%f820, %f819, %f819;
	mul.f32 	%f873, %f872, %f872;
	add.s64 	%rd31, %rd1, %rd30;
	add.s64 	%rd33, %rd1, %rd32;
	abs.f32 	%f915, %f1280;
	setp.gtu.f32 	%p157, %f915, 0f7F800000;
	@%p157 bra 	$L__BB0_58;
// %bb.57:
	mov.b32 	%r454, %f179;
	and.b32  	%r455, %r454, -2147483648;
	mov.b32 	%r456, %f1280;
	or.b32  	%r457, %r455, %r456;
	mov.b32 	%f1280, %r457;
$L__BB0_58:                             // %__nv_fmodf.exit
	mul.f32 	%f239, %f238, %f238;
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f308, %f307, %f307;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f377, %f376, %f376;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f446, %f445, %f445;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f515, %f514, %f514;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f584, %f583, %f583;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f653, %f652, %f652;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f722, %f721, %f721;
	mul.f32 	%f756, %f755, %f755;
	fma.rn.f32 	%f787, %f786, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f788, %f786, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f821, %f820, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f822, %f820, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f874, %f873, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f875, %f873, 0f3E684E12, 0fBFAAD2E0;
	ld.global.u32 	%r132, [%rd31];
	ld.global.u32 	%r133, [%rd33];
	add.f32 	%f916, %f1280, %f1280;
	mov.b32 	%r470, %f916;
	and.b32  	%r471, %r470, -2147483648;
	or.b32  	%r472, %r471, 1056964608;
	mov.b32 	%f917, %r472;
	add.f32 	%f918, %f916, %f917;
	cvt.rzi.f32.f32 	%f919, %f918;
	abs.f32 	%f920, %f916;
	setp.gt.f32 	%p158, %f920, 0f4B000000;
	selp.f32 	%f921, %f916, %f919, %p158;
	cvt.rzi.f32.f32 	%f922, %f916;
	setp.lt.f32 	%p159, %f920, 0f3F000000;
	selp.f32 	%f923, %f922, %f921, %p159;
	fma.rn.f32 	%f924, %f923, 0fBF000000, %f1280;
	mul.f32 	%f925, %f924, %f924;
	fma.rn.f32 	%f926, %f925, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f927, %f925, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r478, %r136, 2147483646;
	shl.b32 	%r479, %r135, 2;
	sub.s32 	%r480, %r478, %r479;
	mul.lo.s32 	%r481, %r480, %r24;
	shl.b32 	%r37, %r481, 1;
	mov.u64 	%rd34, 2;
	mov.u64 	%rd35, 6;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r219;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd34;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd35;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_17535, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd36, [retval0+0];
	} // callseq 2
	cvt.rn.f32.s32 	%f88, %r37;
	cvt.rn.f32.s64 	%f948, %rd36;
	div.approx.f32 	%f89, %f88, %f948;
	abs.f32 	%f1304, %f89;
	setp.lt.f32 	%p165, %f1304, 0f40000000;
	@%p165 bra 	$L__BB0_142;
// %bb.59:
	setp.gtu.f32 	%p166, %f1304, 0f4B800000;
	@%p166 bra 	$L__BB0_138;
	bra.uni 	$L__BB0_60;
$L__BB0_138:
	mov.b32 	%r153, %f1304;
	and.b32  	%r482, %r153, 8388607;
	or.b32  	%r16310, %r482, 1065353216;
	mov.b32 	%f1303, %r16310;
	add.s32 	%r483, %r153, -1073741824;
	and.b32  	%r16311, %r483, -8388608;
	setp.eq.s32 	%p172, %r16311, 0;
	@%p172 bra 	$L__BB0_141;
// %bb.139:                             // %__nv_fmaf_rn.exit4.i.i.i1774.preheader
	mov.f32 	%f958, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f957,%f958;
	// end inline asm
$L__BB0_140:                            // %__nv_fmaf_rn.exit4.i.i.i1774
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r484, %r16311, 192937984;
	add.s32 	%r485, %r16310, %r484;
	mov.b32 	%f959, %r485;
	mul.f32 	%f960, %f957, %f959;
	sub.f32 	%f961, %f959, %f960;
	fma.rn.f32 	%f962, %f961, %f957, %f960;
	sub.f32 	%f963, %f959, %f962;
	fma.rz.f32 	%f964, %f963, %f957, %f962;
	cvt.rzi.f32.f32 	%f965, %f964;
	sub.f32 	%f1303, %f959, %f965;
	sub.s32 	%r16311, %r16311, %r484;
	mov.b32 	%r16310, %f1303;
	setp.ne.s32 	%p173, %r16311, 0;
	setp.ne.s32 	%p174, %r16310, 0;
	and.pred  	%p175, %p173, %p174;
	@%p175 bra 	$L__BB0_140;
$L__BB0_141:                            // %__internal_fmodf_slowpath_mod.exit.i.i1776
	setp.gt.u32 	%p176, %r153, 2139095039;
	selp.f32 	%f966, 0f7FFFFFFF, 0f4B800000, %p176;
	mul.f32 	%f967, %f1303, 0f34000000;
	mul.f32 	%f1304, %f966, %f967;
	bra.uni 	$L__BB0_142;
$L__BB0_60:                             // %__nv_fast_fdividef.exit.i.i.i1753
	div.approx.f32 	%f950, %f1304, %f221;
	cvt.rzi.f32.f32 	%f1302, %f950;
	fma.rn.f32 	%f182, %f1302, 0fC0000000, %f1304;
	mov.b32 	%r152, %f182;
	setp.lt.u32 	%p167, %r152, 1073741824;
	@%p167 bra 	$L__BB0_137;
// %bb.61:
	setp.lt.u32 	%p168, %r152, -2147483647;
	@%p168 bra 	$L__BB0_135;
// %bb.62:
	add.f32 	%f955, %f1302, 0fBF800000;
	setp.lt.f32 	%p171, %f182, 0fC0000000;
	add.f32 	%f956, %f955, 0fBF800000;
	selp.f32 	%f1302, %f956, %f955, %p171;
	bra.uni 	$L__BB0_137;
$L__BB0_135:
	add.f32 	%f1302, %f1302, 0f3F800000;
	setp.ltu.f32 	%p169, %f182, 0f40800000;
	@%p169 bra 	$L__BB0_137;
// %bb.136:                             // %__nv_fmaf_rn.exit.i.i.i1757
	add.f32 	%f951, %f1302, 0f3F800000;
	fma.rn.f32 	%f953, %f221, 0fC0400000, %f182;
	setp.ge.f32 	%p170, %f953, 0f00000000;
	add.f32 	%f954, %f951, 0f3F800000;
	selp.f32 	%f1302, %f954, %f951, %p170;
$L__BB0_137:                            // %__internal_fmodf_fastpath_quot.exit.i.i1760
	fma.rn.f32 	%f1304, %f1302, 0fC0000000, %f1304;
$L__BB0_142:                            // %__internal_fmodf_kernel.exit.i1779
	cvt.rzi.s32.f32 	%r251, %f237;
	fma.rn.f32 	%f240, %f239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f241, %f239, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r258, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r269, %f306;
	fma.rn.f32 	%f309, %f308, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f310, %f308, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r276, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r287, %f375;
	fma.rn.f32 	%f378, %f377, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f379, %f377, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r294, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r305, %f444;
	fma.rn.f32 	%f447, %f446, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f448, %f446, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r312, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r323, %f513;
	fma.rn.f32 	%f516, %f515, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f517, %f515, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r330, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r341, %f582;
	fma.rn.f32 	%f585, %f584, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f586, %f584, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r348, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r359, %f651;
	fma.rn.f32 	%f654, %f653, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f655, %f653, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r366, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r377, %f720;
	fma.rn.f32 	%f723, %f722, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f724, %f722, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r384, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r408, %f784;
	fma.rn.f32 	%f789, %f787, %f786, 0fC0A55DF6;
	fma.rn.f32 	%f790, %f788, %f786, 0f4081E0CF;
	fma.rn.f32 	%f791, %f786, %f785, 0f00000000;
	cvt.rzi.s32.f32 	%r418, %f818;
	fma.rn.f32 	%f823, %f821, %f820, 0fC0A55DF6;
	fma.rn.f32 	%f824, %f822, %f820, 0f4081E0CF;
	fma.rn.f32 	%f825, %f820, %f819, 0f00000000;
	cvt.rzi.s32.f32 	%r441, %f871;
	fma.rn.f32 	%f876, %f874, %f873, 0fC0A55DF6;
	fma.rn.f32 	%f877, %f875, %f873, 0f4081E0CF;
	fma.rn.f32 	%f878, %f873, %f872, 0f00000000;
	cvt.rzi.s32.f32 	%r473, %f923;
	fma.rn.f32 	%f928, %f926, %f925, 0fC0A55DF6;
	fma.rn.f32 	%f929, %f927, %f925, 0f4081E0CF;
	fma.rn.f32 	%f930, %f925, %f924, 0f00000000;
	abs.f32 	%f968, %f1304;
	setp.gtu.f32 	%p177, %f968, 0f7F800000;
	@%p177 bra 	$L__BB0_144;
// %bb.143:
	mov.b32 	%r486, %f89;
	and.b32  	%r487, %r486, -2147483648;
	mov.b32 	%r488, %f1304;
	or.b32  	%r489, %r487, %r488;
	mov.b32 	%f1304, %r489;
$L__BB0_144:                            // %__nv_fmodf.exit1780
	add.s32 	%r252, %r251, 1;
	fma.rn.f32 	%f242, %f240, %f239, 0fC0A55DF6;
	fma.rn.f32 	%f243, %f241, %f239, 0f4081E0CF;
	fma.rn.f32 	%f244, %f239, %f238, 0f00000000;
	add.s32 	%r259, %r258, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r270, %r269, 1;
	fma.rn.f32 	%f311, %f309, %f308, 0fC0A55DF6;
	fma.rn.f32 	%f312, %f310, %f308, 0f4081E0CF;
	fma.rn.f32 	%f313, %f308, %f307, 0f00000000;
	add.s32 	%r277, %r276, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r288, %r287, 1;
	fma.rn.f32 	%f380, %f378, %f377, 0fC0A55DF6;
	fma.rn.f32 	%f381, %f379, %f377, 0f4081E0CF;
	fma.rn.f32 	%f382, %f377, %f376, 0f00000000;
	add.s32 	%r295, %r294, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r306, %r305, 1;
	fma.rn.f32 	%f449, %f447, %f446, 0fC0A55DF6;
	fma.rn.f32 	%f450, %f448, %f446, 0f4081E0CF;
	fma.rn.f32 	%f451, %f446, %f445, 0f00000000;
	add.s32 	%r313, %r312, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r324, %r323, 1;
	fma.rn.f32 	%f518, %f516, %f515, 0fC0A55DF6;
	fma.rn.f32 	%f519, %f517, %f515, 0f4081E0CF;
	fma.rn.f32 	%f520, %f515, %f514, 0f00000000;
	add.s32 	%r331, %r330, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r342, %r341, 1;
	fma.rn.f32 	%f587, %f585, %f584, 0fC0A55DF6;
	fma.rn.f32 	%f588, %f586, %f584, 0f4081E0CF;
	fma.rn.f32 	%f589, %f584, %f583, 0f00000000;
	add.s32 	%r349, %r348, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r360, %r359, 1;
	fma.rn.f32 	%f656, %f654, %f653, 0fC0A55DF6;
	fma.rn.f32 	%f657, %f655, %f653, 0f4081E0CF;
	fma.rn.f32 	%f658, %f653, %f652, 0f00000000;
	add.s32 	%r367, %r366, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r378, %r377, 1;
	fma.rn.f32 	%f725, %f723, %f722, 0fC0A55DF6;
	fma.rn.f32 	%f726, %f724, %f722, 0f4081E0CF;
	fma.rn.f32 	%f727, %f722, %f721, 0f00000000;
	add.s32 	%r385, %r384, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	fma.rn.f32 	%f792, %f790, %f786, 0fC09DE9E6;
	fma.rn.f32 	%f793, %f789, %f791, 0f00000000;
	and.b32  	%r409, %r408, 1;
	fma.rn.f32 	%f826, %f824, %f820, 0fC09DE9E6;
	fma.rn.f32 	%f827, %f823, %f825, 0f00000000;
	and.b32  	%r419, %r418, 1;
	fma.rn.f32 	%f879, %f877, %f873, 0fC09DE9E6;
	fma.rn.f32 	%f880, %f876, %f878, 0f00000000;
	and.b32  	%r442, %r441, 1;
	fma.rn.f32 	%f931, %f929, %f925, 0fC09DE9E6;
	fma.rn.f32 	%f932, %f928, %f930, 0f00000000;
	and.b32  	%r474, %r473, 1;
	add.f32 	%f969, %f1304, %f1304;
	mov.b32 	%r490, %f969;
	and.b32  	%r491, %r490, -2147483648;
	or.b32  	%r492, %r491, 1056964608;
	mov.b32 	%f970, %r492;
	add.f32 	%f971, %f969, %f970;
	cvt.rzi.f32.f32 	%f972, %f971;
	abs.f32 	%f973, %f969;
	setp.gt.f32 	%p178, %f973, 0f4B000000;
	selp.f32 	%f974, %f969, %f972, %p178;
	cvt.rzi.f32.f32 	%f975, %f969;
	setp.lt.f32 	%p179, %f973, 0f3F000000;
	selp.f32 	%f976, %f975, %f974, %p179;
	cvt.rzi.s32.f32 	%r493, %f976;
	fma.rn.f32 	%f977, %f976, 0fBF000000, %f1304;
	mul.f32 	%f978, %f977, %f977;
	fma.rn.f32 	%f979, %f978, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f980, %f978, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f981, %f979, %f978, 0fC0A55DF6;
	fma.rn.f32 	%f982, %f980, %f978, 0f4081E0CF;
	fma.rn.f32 	%f983, %f978, %f977, 0f00000000;
	shl.b32 	%r498, %r24, 4;
	sub.s32 	%r499, %r37, %r498;
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r219;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd34;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd35;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_17535, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd40, [retval0+0];
	} // callseq 3
	cvt.rn.f32.s32 	%f198, %r499;
	cvt.rn.f32.s64 	%f999, %rd40;
	div.approx.f32 	%f199, %f198, %f999;
	abs.f32 	%f1284, %f199;
	setp.lt.f32 	%p185, %f1284, 0f40000000;
	@%p185 bra 	$L__BB0_74;
// %bb.63:
	setp.gtu.f32 	%p186, %f1284, 0f4B800000;
	@%p186 bra 	$L__BB0_70;
	bra.uni 	$L__BB0_64;
$L__BB0_70:
	mov.b32 	%r39, %f1284;
	and.b32  	%r500, %r39, 8388607;
	or.b32  	%r16275, %r500, 1065353216;
	mov.b32 	%f1283, %r16275;
	add.s32 	%r501, %r39, -1073741824;
	and.b32  	%r16276, %r501, -8388608;
	setp.eq.s32 	%p192, %r16276, 0;
	@%p192 bra 	$L__BB0_73;
// %bb.71:                              // %__nv_fmaf_rn.exit4.i.i.i1619.preheader
	mov.f32 	%f1009, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1008,%f1009;
	// end inline asm
$L__BB0_72:                             // %__nv_fmaf_rn.exit4.i.i.i1619
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r502, %r16276, 192937984;
	add.s32 	%r503, %r16275, %r502;
	mov.b32 	%f1010, %r503;
	mul.f32 	%f1011, %f1008, %f1010;
	sub.f32 	%f1012, %f1010, %f1011;
	fma.rn.f32 	%f1013, %f1012, %f1008, %f1011;
	sub.f32 	%f1014, %f1010, %f1013;
	fma.rz.f32 	%f1015, %f1014, %f1008, %f1013;
	cvt.rzi.f32.f32 	%f1016, %f1015;
	sub.f32 	%f1283, %f1010, %f1016;
	sub.s32 	%r16276, %r16276, %r502;
	mov.b32 	%r16275, %f1283;
	setp.ne.s32 	%p193, %r16276, 0;
	setp.ne.s32 	%p194, %r16275, 0;
	and.pred  	%p195, %p193, %p194;
	@%p195 bra 	$L__BB0_72;
$L__BB0_73:                             // %__internal_fmodf_slowpath_mod.exit.i.i1621
	setp.gt.u32 	%p196, %r39, 2139095039;
	selp.f32 	%f1017, 0f7FFFFFFF, 0f4B800000, %p196;
	mul.f32 	%f1018, %f1283, 0f34000000;
	mul.f32 	%f1284, %f1017, %f1018;
	bra.uni 	$L__BB0_74;
$L__BB0_64:                             // %__nv_fast_fdividef.exit.i.i.i1598
	div.approx.f32 	%f1001, %f1284, %f221;
	cvt.rzi.f32.f32 	%f1282, %f1001;
	fma.rn.f32 	%f92, %f1282, 0fC0000000, %f1284;
	mov.b32 	%r38, %f92;
	setp.lt.u32 	%p187, %r38, 1073741824;
	@%p187 bra 	$L__BB0_69;
// %bb.65:
	setp.lt.u32 	%p188, %r38, -2147483647;
	@%p188 bra 	$L__BB0_67;
// %bb.66:
	add.f32 	%f1006, %f1282, 0fBF800000;
	setp.lt.f32 	%p191, %f92, 0fC0000000;
	add.f32 	%f1007, %f1006, 0fBF800000;
	selp.f32 	%f1282, %f1007, %f1006, %p191;
	bra.uni 	$L__BB0_69;
$L__BB0_67:
	add.f32 	%f1282, %f1282, 0f3F800000;
	setp.ltu.f32 	%p189, %f92, 0f40800000;
	@%p189 bra 	$L__BB0_69;
// %bb.68:                              // %__nv_fmaf_rn.exit.i.i.i1602
	add.f32 	%f1002, %f1282, 0f3F800000;
	fma.rn.f32 	%f1004, %f221, 0fC0400000, %f92;
	setp.ge.f32 	%p190, %f1004, 0f00000000;
	add.f32 	%f1005, %f1002, 0f3F800000;
	selp.f32 	%f1282, %f1005, %f1002, %p190;
$L__BB0_69:                             // %__internal_fmodf_fastpath_quot.exit.i.i1605
	fma.rn.f32 	%f1284, %f1282, 0fC0000000, %f1284;
$L__BB0_74:                             // %__internal_fmodf_kernel.exit.i1624
	fma.rn.f32 	%f245, %f243, %f239, 0fC09DE9E6;
	fma.rn.f32 	%f246, %f242, %f244, 0f00000000;
	and.b32  	%r253, %r252, 1;
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r260, %r259, 1;
	fma.rn.f32 	%f314, %f312, %f308, 0fC09DE9E6;
	fma.rn.f32 	%f315, %f311, %f313, 0f00000000;
	and.b32  	%r271, %r270, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r278, %r277, 1;
	fma.rn.f32 	%f383, %f381, %f377, 0fC09DE9E6;
	fma.rn.f32 	%f384, %f380, %f382, 0f00000000;
	and.b32  	%r289, %r288, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r296, %r295, 1;
	fma.rn.f32 	%f452, %f450, %f446, 0fC09DE9E6;
	fma.rn.f32 	%f453, %f449, %f451, 0f00000000;
	and.b32  	%r307, %r306, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r314, %r313, 1;
	fma.rn.f32 	%f521, %f519, %f515, 0fC09DE9E6;
	fma.rn.f32 	%f522, %f518, %f520, 0f00000000;
	and.b32  	%r325, %r324, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r332, %r331, 1;
	fma.rn.f32 	%f590, %f588, %f584, 0fC09DE9E6;
	fma.rn.f32 	%f591, %f587, %f589, 0f00000000;
	and.b32  	%r343, %r342, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r350, %r349, 1;
	fma.rn.f32 	%f659, %f657, %f653, 0fC09DE9E6;
	fma.rn.f32 	%f660, %f656, %f658, 0f00000000;
	and.b32  	%r361, %r360, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r368, %r367, 1;
	fma.rn.f32 	%f728, %f726, %f722, 0fC09DE9E6;
	fma.rn.f32 	%f729, %f725, %f727, 0f00000000;
	and.b32  	%r379, %r378, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r386, %r385, 1;
	fma.rn.f32 	%f794, %f792, %f786, 0f3F800000;
	fma.rn.f32 	%f795, %f785, 0f40490FDB, %f793;
	setp.eq.b32 	%p113, %r409, 1;
	fma.rn.f32 	%f828, %f826, %f820, 0f3F800000;
	fma.rn.f32 	%f829, %f819, 0f40490FDB, %f827;
	setp.eq.b32 	%p120, %r419, 1;
	fma.rn.f32 	%f881, %f879, %f873, 0f3F800000;
	fma.rn.f32 	%f882, %f872, 0f40490FDB, %f880;
	setp.eq.b32 	%p140, %r442, 1;
	fma.rn.f32 	%f933, %f931, %f925, 0f3F800000;
	fma.rn.f32 	%f934, %f924, 0f40490FDB, %f932;
	setp.eq.b32 	%p160, %r474, 1;
	fma.rn.f32 	%f984, %f982, %f978, 0fC09DE9E6;
	fma.rn.f32 	%f985, %f981, %f983, 0f00000000;
	and.b32  	%r494, %r493, 1;
	abs.f32 	%f1019, %f1284;
	setp.gtu.f32 	%p197, %f1019, 0f7F800000;
	@%p197 bra 	$L__BB0_76;
// %bb.75:
	mov.b32 	%r504, %f199;
	and.b32  	%r505, %r504, -2147483648;
	mov.b32 	%r506, %f1284;
	or.b32  	%r507, %r505, %r506;
	mov.b32 	%f1284, %r507;
$L__BB0_76:                             // %__nv_fmodf.exit1625
	fma.rn.f32 	%f247, %f245, %f239, 0f3F800000;
	fma.rn.f32 	%f248, %f238, 0f40490FDB, %f246;
	setp.eq.b32 	%p18, %r253, 1;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p24, %r260, 1;
	fma.rn.f32 	%f316, %f314, %f308, 0f3F800000;
	fma.rn.f32 	%f317, %f307, 0f40490FDB, %f315;
	setp.eq.b32 	%p30, %r271, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p36, %r278, 1;
	fma.rn.f32 	%f385, %f383, %f377, 0f3F800000;
	fma.rn.f32 	%f386, %f376, 0f40490FDB, %f384;
	setp.eq.b32 	%p42, %r289, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p48, %r296, 1;
	fma.rn.f32 	%f454, %f452, %f446, 0f3F800000;
	fma.rn.f32 	%f455, %f445, 0f40490FDB, %f453;
	setp.eq.b32 	%p54, %r307, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p60, %r314, 1;
	fma.rn.f32 	%f523, %f521, %f515, 0f3F800000;
	fma.rn.f32 	%f524, %f514, 0f40490FDB, %f522;
	setp.eq.b32 	%p66, %r325, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p72, %r332, 1;
	fma.rn.f32 	%f592, %f590, %f584, 0f3F800000;
	fma.rn.f32 	%f593, %f583, 0f40490FDB, %f591;
	setp.eq.b32 	%p78, %r343, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p84, %r350, 1;
	fma.rn.f32 	%f661, %f659, %f653, 0f3F800000;
	fma.rn.f32 	%f662, %f652, 0f40490FDB, %f660;
	setp.eq.b32 	%p90, %r361, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p96, %r368, 1;
	fma.rn.f32 	%f730, %f728, %f722, 0f3F800000;
	fma.rn.f32 	%f731, %f721, 0f40490FDB, %f729;
	setp.eq.b32 	%p102, %r379, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p108, %r386, 1;
	selp.f32 	%f796, %f794, %f795, %p113;
	and.b32  	%r410, %r408, 2;
	selp.f32 	%f830, %f828, %f829, %p120;
	and.b32  	%r420, %r418, 2;
	selp.f32 	%f883, %f881, %f882, %p140;
	and.b32  	%r443, %r441, 2;
	selp.f32 	%f935, %f933, %f934, %p160;
	and.b32  	%r475, %r473, 2;
	fma.rn.f32 	%f986, %f984, %f978, 0f3F800000;
	fma.rn.f32 	%f987, %f977, 0f40490FDB, %f985;
	setp.eq.b32 	%p180, %r494, 1;
	add.f32 	%f1020, %f1284, %f1284;
	mov.b32 	%r514, %f1020;
	and.b32  	%r515, %r514, -2147483648;
	or.b32  	%r516, %r515, 1056964608;
	mov.b32 	%f1021, %r516;
	add.f32 	%f1022, %f1020, %f1021;
	cvt.rzi.f32.f32 	%f1023, %f1022;
	abs.f32 	%f1024, %f1020;
	setp.gt.f32 	%p198, %f1024, 0f4B000000;
	selp.f32 	%f1025, %f1020, %f1023, %p198;
	cvt.rzi.f32.f32 	%f1026, %f1020;
	setp.lt.f32 	%p199, %f1024, 0f3F000000;
	selp.f32 	%f1027, %f1026, %f1025, %p199;
	cvt.rzi.s32.f32 	%r517, %f1027;
	fma.rn.f32 	%f1028, %f1027, 0fBF000000, %f1284;
	mul.f32 	%f1029, %f1028, %f1028;
	fma.rn.f32 	%f1030, %f1029, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1031, %f1029, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1032, %f1030, %f1029, 0fC0A55DF6;
	fma.rn.f32 	%f1033, %f1031, %f1029, 0f4081E0CF;
	fma.rn.f32 	%f1034, %f1029, %f1028, 0f00000000;
	fma.rn.f32 	%f1035, %f1033, %f1029, 0fC09DE9E6;
	fma.rn.f32 	%f1036, %f1032, %f1034, 0f00000000;
	fma.rn.f32 	%f1037, %f1035, %f1029, 0f3F800000;
	fma.rn.f32 	%f1038, %f1028, 0f40490FDB, %f1036;
	and.b32  	%r518, %r517, 1;
	setp.eq.b32 	%p200, %r518, 1;
	div.approx.f32 	%f106, %f88, %f843;
	abs.f32 	%f1308, %f106;
	setp.lt.f32 	%p205, %f1308, 0f40000000;
	@%p205 bra 	$L__BB0_152;
// %bb.77:
	setp.gtu.f32 	%p206, %f1308, 0f4B800000;
	@%p206 bra 	$L__BB0_148;
	bra.uni 	$L__BB0_78;
$L__BB0_148:
	mov.b32 	%r161, %f1308;
	and.b32  	%r522, %r161, 8388607;
	or.b32  	%r16312, %r522, 1065353216;
	mov.b32 	%f1307, %r16312;
	add.s32 	%r523, %r161, -1073741824;
	and.b32  	%r16313, %r523, -8388608;
	setp.eq.s32 	%p212, %r16313, 0;
	@%p212 bra 	$L__BB0_151;
// %bb.149:                             // %__nv_fmaf_rn.exit4.i.i.i1805.preheader
	mov.f32 	%f1062, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1061,%f1062;
	// end inline asm
$L__BB0_150:                            // %__nv_fmaf_rn.exit4.i.i.i1805
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r524, %r16313, 192937984;
	add.s32 	%r525, %r16312, %r524;
	mov.b32 	%f1063, %r525;
	mul.f32 	%f1064, %f1061, %f1063;
	sub.f32 	%f1065, %f1063, %f1064;
	fma.rn.f32 	%f1066, %f1065, %f1061, %f1064;
	sub.f32 	%f1067, %f1063, %f1066;
	fma.rz.f32 	%f1068, %f1067, %f1061, %f1066;
	cvt.rzi.f32.f32 	%f1069, %f1068;
	sub.f32 	%f1307, %f1063, %f1069;
	sub.s32 	%r16313, %r16313, %r524;
	mov.b32 	%r16312, %f1307;
	setp.ne.s32 	%p213, %r16313, 0;
	setp.ne.s32 	%p214, %r16312, 0;
	and.pred  	%p215, %p213, %p214;
	@%p215 bra 	$L__BB0_150;
$L__BB0_151:                            // %__internal_fmodf_slowpath_mod.exit.i.i1807
	setp.gt.u32 	%p216, %r161, 2139095039;
	selp.f32 	%f1070, 0f7FFFFFFF, 0f4B800000, %p216;
	mul.f32 	%f1071, %f1307, 0f34000000;
	mul.f32 	%f1308, %f1070, %f1071;
	bra.uni 	$L__BB0_152;
$L__BB0_78:                             // %__nv_fast_fdividef.exit.i.i.i1784
	div.approx.f32 	%f1054, %f1308, %f221;
	cvt.rzi.f32.f32 	%f1306, %f1054;
	fma.rn.f32 	%f202, %f1306, 0fC0000000, %f1308;
	mov.b32 	%r160, %f202;
	setp.lt.u32 	%p207, %r160, 1073741824;
	@%p207 bra 	$L__BB0_147;
// %bb.79:
	setp.lt.u32 	%p208, %r160, -2147483647;
	@%p208 bra 	$L__BB0_145;
// %bb.80:
	add.f32 	%f1059, %f1306, 0fBF800000;
	setp.lt.f32 	%p211, %f202, 0fC0000000;
	add.f32 	%f1060, %f1059, 0fBF800000;
	selp.f32 	%f1306, %f1060, %f1059, %p211;
	bra.uni 	$L__BB0_147;
$L__BB0_145:
	add.f32 	%f1306, %f1306, 0f3F800000;
	setp.ltu.f32 	%p209, %f202, 0f40800000;
	@%p209 bra 	$L__BB0_147;
// %bb.146:                             // %__nv_fmaf_rn.exit.i.i.i1788
	add.f32 	%f1055, %f1306, 0f3F800000;
	fma.rn.f32 	%f1057, %f221, 0fC0400000, %f202;
	setp.ge.f32 	%p210, %f1057, 0f00000000;
	add.f32 	%f1058, %f1055, 0f3F800000;
	selp.f32 	%f1306, %f1058, %f1055, %p210;
$L__BB0_147:                            // %__internal_fmodf_fastpath_quot.exit.i.i1791
	fma.rn.f32 	%f1308, %f1306, 0fC0000000, %f1308;
$L__BB0_152:                            // %__internal_fmodf_kernel.exit.i1810
	selp.f32 	%f249, %f247, %f248, %p18;
	and.b32  	%r254, %r252, 2;
	mov.f32 	%f250, 0f00000000;
	selp.f32 	%f283, %f281, %f282, %p24;
	and.b32  	%r261, %r259, 2;
	selp.f32 	%f318, %f316, %f317, %p30;
	and.b32  	%r272, %r270, 2;
	selp.f32 	%f352, %f350, %f351, %p36;
	and.b32  	%r279, %r277, 2;
	selp.f32 	%f387, %f385, %f386, %p42;
	and.b32  	%r290, %r288, 2;
	selp.f32 	%f421, %f419, %f420, %p48;
	and.b32  	%r297, %r295, 2;
	selp.f32 	%f456, %f454, %f455, %p54;
	and.b32  	%r308, %r306, 2;
	selp.f32 	%f490, %f488, %f489, %p60;
	and.b32  	%r315, %r313, 2;
	selp.f32 	%f525, %f523, %f524, %p66;
	and.b32  	%r326, %r324, 2;
	selp.f32 	%f559, %f557, %f558, %p72;
	and.b32  	%r333, %r331, 2;
	selp.f32 	%f594, %f592, %f593, %p78;
	and.b32  	%r344, %r342, 2;
	selp.f32 	%f628, %f626, %f627, %p84;
	and.b32  	%r351, %r349, 2;
	selp.f32 	%f663, %f661, %f662, %p90;
	and.b32  	%r362, %r360, 2;
	selp.f32 	%f697, %f695, %f696, %p96;
	and.b32  	%r369, %r367, 2;
	selp.f32 	%f732, %f730, %f731, %p102;
	and.b32  	%r380, %r378, 2;
	selp.f32 	%f766, %f764, %f765, %p108;
	and.b32  	%r387, %r385, 2;
	setp.eq.s32 	%p114, %r410, 0;
	neg.f32 	%f798, %f796;
	add.s32 	%r411, %r408, 1;
	cvt.rzi.f32.f32 	%f803, %f776;
	setp.eq.s32 	%p121, %r420, 0;
	neg.f32 	%f832, %f830;
	add.s32 	%r421, %r418, 1;
	cvt.rzi.f32.f32 	%f836, %f810;
	setp.eq.s32 	%p141, %r443, 0;
	neg.f32 	%f885, %f883;
	add.s32 	%r444, %r441, 1;
	cvt.rzi.f32.f32 	%f890, %f1300;
	setp.eq.s32 	%p161, %r475, 0;
	neg.f32 	%f937, %f935;
	add.s32 	%r476, %r473, 1;
	cvt.rzi.f32.f32 	%f942, %f1280;
	selp.f32 	%f988, %f986, %f987, %p180;
	and.b32  	%r495, %r493, 2;
	selp.f32 	%f1039, %f1037, %f1038, %p200;
	and.b32  	%r519, %r517, 2;
	abs.f32 	%f1072, %f1308;
	setp.gtu.f32 	%p217, %f1072, 0f7F800000;
	@%p217 bra 	$L__BB0_154;
// %bb.153:
	mov.b32 	%r526, %f106;
	and.b32  	%r527, %r526, -2147483648;
	mov.b32 	%r528, %f1308;
	or.b32  	%r529, %r527, %r528;
	mov.b32 	%f1308, %r529;
$L__BB0_154:                            // %__nv_fmodf.exit1811
	setp.eq.s32 	%p19, %r254, 0;
	sub.f32 	%f251, %f250, %f249;
	setp.eq.s32 	%p25, %r261, 0;
	sub.f32 	%f285, %f250, %f283;
	setp.eq.s32 	%p31, %r272, 0;
	sub.f32 	%f320, %f250, %f318;
	setp.eq.s32 	%p37, %r279, 0;
	sub.f32 	%f354, %f250, %f352;
	setp.eq.s32 	%p43, %r290, 0;
	sub.f32 	%f389, %f250, %f387;
	setp.eq.s32 	%p49, %r297, 0;
	sub.f32 	%f423, %f250, %f421;
	setp.eq.s32 	%p55, %r308, 0;
	sub.f32 	%f458, %f250, %f456;
	setp.eq.s32 	%p61, %r315, 0;
	sub.f32 	%f492, %f250, %f490;
	setp.eq.s32 	%p67, %r326, 0;
	sub.f32 	%f527, %f250, %f525;
	setp.eq.s32 	%p73, %r333, 0;
	sub.f32 	%f561, %f250, %f559;
	setp.eq.s32 	%p79, %r344, 0;
	sub.f32 	%f596, %f250, %f594;
	setp.eq.s32 	%p85, %r351, 0;
	sub.f32 	%f630, %f250, %f628;
	setp.eq.s32 	%p91, %r362, 0;
	sub.f32 	%f665, %f250, %f663;
	setp.eq.s32 	%p97, %r369, 0;
	sub.f32 	%f699, %f250, %f697;
	setp.eq.s32 	%p103, %r380, 0;
	sub.f32 	%f734, %f250, %f732;
	setp.eq.s32 	%p109, %r387, 0;
	sub.f32 	%f768, %f250, %f766;
	selp.f32 	%f797, %f795, %f794, %p113;
	selp.f32 	%f799, %f796, %f798, %p114;
	and.b32  	%r412, %r411, 2;
	setp.eq.f32 	%p116, %f803, %f776;
	mul.f32 	%f804, %f776, 0f00000000;
	selp.f32 	%f831, %f829, %f828, %p120;
	selp.f32 	%f833, %f830, %f832, %p121;
	and.b32  	%r422, %r421, 2;
	setp.eq.f32 	%p123, %f836, %f810;
	mul.f32 	%f837, %f810, 0f00000000;
	selp.f32 	%f884, %f882, %f881, %p140;
	selp.f32 	%f886, %f883, %f885, %p141;
	and.b32  	%r445, %r444, 2;
	setp.eq.f32 	%p143, %f890, %f1300;
	mul.f32 	%f891, %f1300, 0f00000000;
	selp.f32 	%f936, %f934, %f933, %p160;
	selp.f32 	%f938, %f935, %f937, %p161;
	and.b32  	%r477, %r476, 2;
	setp.eq.f32 	%p163, %f942, %f1280;
	mul.f32 	%f943, %f1280, 0f00000000;
	setp.eq.s32 	%p181, %r495, 0;
	neg.f32 	%f990, %f988;
	add.s32 	%r496, %r493, 1;
	cvt.rzi.f32.f32 	%f995, %f1304;
	setp.eq.s32 	%p201, %r519, 0;
	neg.f32 	%f1041, %f1039;
	add.s32 	%r520, %r517, 1;
	cvt.rzi.f32.f32 	%f1046, %f1284;
	add.f32 	%f1073, %f1308, %f1308;
	mov.b32 	%r530, %f1073;
	and.b32  	%r531, %r530, -2147483648;
	or.b32  	%r532, %r531, 1056964608;
	mov.b32 	%f1074, %r532;
	add.f32 	%f1075, %f1073, %f1074;
	cvt.rzi.f32.f32 	%f1076, %f1075;
	abs.f32 	%f1077, %f1073;
	setp.gt.f32 	%p218, %f1077, 0f4B000000;
	selp.f32 	%f1078, %f1073, %f1076, %p218;
	cvt.rzi.f32.f32 	%f1079, %f1073;
	setp.lt.f32 	%p219, %f1077, 0f3F000000;
	selp.f32 	%f1080, %f1079, %f1078, %p219;
	cvt.rzi.s32.f32 	%r533, %f1080;
	fma.rn.f32 	%f1081, %f1080, 0fBF000000, %f1308;
	mul.f32 	%f1082, %f1081, %f1081;
	fma.rn.f32 	%f1083, %f1082, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1084, %f1082, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1085, %f1083, %f1082, 0fC0A55DF6;
	fma.rn.f32 	%f1086, %f1084, %f1082, 0f4081E0CF;
	fma.rn.f32 	%f1087, %f1082, %f1081, 0f00000000;
	fma.rn.f32 	%f1088, %f1086, %f1082, 0fC09DE9E6;
	fma.rn.f32 	%f1089, %f1085, %f1087, 0f00000000;
	fma.rn.f32 	%f1090, %f1088, %f1082, 0f3F800000;
	fma.rn.f32 	%f1091, %f1081, 0f40490FDB, %f1089;
	and.b32  	%r534, %r533, 1;
	setp.eq.b32 	%p220, %r534, 1;
	selp.f32 	%f1092, %f1090, %f1091, %p220;
	selp.f32 	%f1093, %f1091, %f1090, %p220;
	and.b32  	%r535, %r533, 2;
	setp.eq.s32 	%p221, %r535, 0;
	neg.f32 	%f1094, %f1092;
	selp.f32 	%f1095, %f1092, %f1094, %p221;
	add.s32 	%r536, %r533, 1;
	and.b32  	%r537, %r536, 2;
	cvt.rzi.f32.f32 	%f1099, %f1308;
	setp.eq.f32 	%p223, %f1099, %f1308;
	mul.f32 	%f1100, %f1308, 0f00000000;
	div.approx.f32 	%f218, %f198, %f843;
	abs.f32 	%f1288, %f218;
	setp.lt.f32 	%p225, %f1288, 0f40000000;
	@%p225 bra 	$L__BB0_92;
// %bb.81:
	setp.gtu.f32 	%p226, %f1288, 0f4B800000;
	@%p226 bra 	$L__BB0_88;
	bra.uni 	$L__BB0_82;
$L__BB0_88:
	mov.b32 	%r49, %f1288;
	and.b32  	%r538, %r49, 8388607;
	or.b32  	%r16277, %r538, 1065353216;
	mov.b32 	%f1287, %r16277;
	add.s32 	%r539, %r49, -1073741824;
	and.b32  	%r16278, %r539, -8388608;
	setp.eq.s32 	%p232, %r16278, 0;
	@%p232 bra 	$L__BB0_91;
// %bb.89:                              // %__nv_fmaf_rn.exit4.i.i.i1650.preheader
	mov.f32 	%f1113, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1112,%f1113;
	// end inline asm
$L__BB0_90:                             // %__nv_fmaf_rn.exit4.i.i.i1650
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r540, %r16278, 192937984;
	add.s32 	%r541, %r16277, %r540;
	mov.b32 	%f1114, %r541;
	mul.f32 	%f1115, %f1112, %f1114;
	sub.f32 	%f1116, %f1114, %f1115;
	fma.rn.f32 	%f1117, %f1116, %f1112, %f1115;
	sub.f32 	%f1118, %f1114, %f1117;
	fma.rz.f32 	%f1119, %f1118, %f1112, %f1117;
	cvt.rzi.f32.f32 	%f1120, %f1119;
	sub.f32 	%f1287, %f1114, %f1120;
	sub.s32 	%r16278, %r16278, %r540;
	mov.b32 	%r16277, %f1287;
	setp.ne.s32 	%p233, %r16278, 0;
	setp.ne.s32 	%p234, %r16277, 0;
	and.pred  	%p235, %p233, %p234;
	@%p235 bra 	$L__BB0_90;
$L__BB0_91:                             // %__internal_fmodf_slowpath_mod.exit.i.i1652
	setp.gt.u32 	%p236, %r49, 2139095039;
	selp.f32 	%f1121, 0f7FFFFFFF, 0f4B800000, %p236;
	mul.f32 	%f1122, %f1287, 0f34000000;
	mul.f32 	%f1288, %f1121, %f1122;
	bra.uni 	$L__BB0_92;
$L__BB0_82:                             // %__nv_fast_fdividef.exit.i.i.i1629
	div.approx.f32 	%f1105, %f1288, %f221;
	cvt.rzi.f32.f32 	%f1286, %f1105;
	fma.rn.f32 	%f109, %f1286, 0fC0000000, %f1288;
	mov.b32 	%r48, %f109;
	setp.lt.u32 	%p227, %r48, 1073741824;
	@%p227 bra 	$L__BB0_87;
// %bb.83:
	setp.lt.u32 	%p228, %r48, -2147483647;
	@%p228 bra 	$L__BB0_85;
// %bb.84:
	add.f32 	%f1110, %f1286, 0fBF800000;
	setp.lt.f32 	%p231, %f109, 0fC0000000;
	add.f32 	%f1111, %f1110, 0fBF800000;
	selp.f32 	%f1286, %f1111, %f1110, %p231;
	bra.uni 	$L__BB0_87;
$L__BB0_85:
	add.f32 	%f1286, %f1286, 0f3F800000;
	setp.ltu.f32 	%p229, %f109, 0f40800000;
	@%p229 bra 	$L__BB0_87;
// %bb.86:                              // %__nv_fmaf_rn.exit.i.i.i1633
	add.f32 	%f1106, %f1286, 0f3F800000;
	fma.rn.f32 	%f1108, %f221, 0fC0400000, %f109;
	setp.ge.f32 	%p230, %f1108, 0f00000000;
	add.f32 	%f1109, %f1106, 0f3F800000;
	selp.f32 	%f1286, %f1109, %f1106, %p230;
$L__BB0_87:                             // %__internal_fmodf_fastpath_quot.exit.i.i1636
	fma.rn.f32 	%f1288, %f1286, 0fC0000000, %f1288;
$L__BB0_92:                             // %__internal_fmodf_kernel.exit.i1655
	selp.f32 	%f252, %f249, %f251, %p19;
	selp.f32 	%f286, %f283, %f285, %p25;
	selp.f32 	%f321, %f318, %f320, %p31;
	selp.f32 	%f355, %f352, %f354, %p37;
	selp.f32 	%f390, %f387, %f389, %p43;
	selp.f32 	%f424, %f421, %f423, %p49;
	selp.f32 	%f459, %f456, %f458, %p55;
	selp.f32 	%f493, %f490, %f492, %p61;
	selp.f32 	%f528, %f525, %f527, %p67;
	selp.f32 	%f562, %f559, %f561, %p73;
	selp.f32 	%f597, %f594, %f596, %p79;
	selp.f32 	%f631, %f628, %f630, %p85;
	selp.f32 	%f666, %f663, %f665, %p91;
	selp.f32 	%f700, %f697, %f699, %p97;
	selp.f32 	%f735, %f732, %f734, %p103;
	selp.f32 	%f769, %f766, %f768, %p109;
	setp.eq.s32 	%p115, %r412, 0;
	sub.f32 	%f801, %f250, %f797;
	selp.f32 	%f805, %f804, %f799, %p116;
	abs.f32 	%f806, %f776;
	setp.eq.s32 	%p122, %r422, 0;
	sub.f32 	%f834, %f250, %f831;
	selp.f32 	%f838, %f837, %f833, %p123;
	abs.f32 	%f839, %f810;
	setp.eq.s32 	%p142, %r445, 0;
	sub.f32 	%f888, %f250, %f884;
	selp.f32 	%f177, %f891, %f886, %p143;
	abs.f32 	%f892, %f1300;
	setp.eq.s32 	%p162, %r477, 0;
	sub.f32 	%f940, %f250, %f936;
	selp.f32 	%f944, %f943, %f938, %p163;
	abs.f32 	%f945, %f1280;
	selp.f32 	%f989, %f987, %f986, %p180;
	selp.f32 	%f991, %f988, %f990, %p181;
	and.b32  	%r497, %r496, 2;
	setp.eq.f32 	%p183, %f995, %f1304;
	mul.f32 	%f996, %f1304, 0f00000000;
	selp.f32 	%f1040, %f1038, %f1037, %p200;
	selp.f32 	%f1042, %f1039, %f1041, %p201;
	and.b32  	%r521, %r520, 2;
	setp.eq.f32 	%p203, %f1046, %f1284;
	mul.f32 	%f1047, %f1284, 0f00000000;
	setp.eq.s32 	%p222, %r537, 0;
	sub.f32 	%f1097, %f250, %f1093;
	selp.f32 	%f216, %f1100, %f1095, %p223;
	abs.f32 	%f1101, %f1308;
	and.b32  	%r129, %r4, 16;
	abs.f32 	%f1123, %f1288;
	setp.gtu.f32 	%p237, %f1123, 0f7F800000;
	@%p237 bra 	$L__BB0_94;
// %bb.93:
	mov.b32 	%r542, %f218;
	and.b32  	%r543, %r542, -2147483648;
	mov.b32 	%r544, %f1288;
	or.b32  	%r545, %r543, %r544;
	mov.b32 	%f1288, %r545;
$L__BB0_94:                             // %__nv_fmodf.exit1656
	mul.f32 	%f160, %f252, %f252;
	mul.f32 	%f4, %f286, %f286;
	mul.f32 	%f8, %f321, %f321;
	mul.f32 	%f13, %f355, %f355;
	mul.f32 	%f17, %f390, %f390;
	mul.f32 	%f22, %f424, %f424;
	mul.f32 	%f26, %f459, %f459;
	mul.f32 	%f31, %f493, %f493;
	mul.f32 	%f35, %f528, %f528;
	mul.f32 	%f40, %f562, %f562;
	mul.f32 	%f44, %f597, %f597;
	mul.f32 	%f49, %f631, %f631;
	mul.f32 	%f53, %f666, %f666;
	mul.f32 	%f58, %f700, %f700;
	mul.f32 	%f62, %f735, %f735;
	mul.f32 	%f67, %f769, %f769;
	selp.f32 	%f802, %f797, %f801, %p115;
	setp.gt.f32 	%p117, %f806, 0f4B800000;
	add.f32 	%f807, %f805, 0f3F800000;
	selp.f32 	%f835, %f831, %f834, %p122;
	setp.gt.f32 	%p124, %f839, 0f4B800000;
	add.f32 	%f840, %f838, 0f3F800000;
	selp.f32 	%f889, %f884, %f888, %p142;
	setp.gt.f32 	%p144, %f892, 0f4B800000;
	add.f32 	%f893, %f177, 0f3F800000;
	selp.f32 	%f941, %f936, %f940, %p162;
	setp.gt.f32 	%p164, %f945, 0f4B800000;
	add.f32 	%f946, %f944, 0f3F800000;
	setp.eq.s32 	%p182, %r497, 0;
	sub.f32 	%f993, %f250, %f989;
	selp.f32 	%f196, %f996, %f991, %p183;
	abs.f32 	%f997, %f1304;
	setp.eq.s32 	%p202, %r521, 0;
	sub.f32 	%f1044, %f250, %f1040;
	selp.f32 	%f1048, %f1047, %f1042, %p203;
	abs.f32 	%f1049, %f1284;
	selp.f32 	%f1098, %f1093, %f1097, %p222;
	setp.gt.f32 	%p224, %f1101, 0f4B800000;
	add.f32 	%f1102, %f216, 0f3F800000;
	add.f32 	%f1124, %f1288, %f1288;
	mov.b32 	%r558, %f1124;
	and.b32  	%r559, %r558, -2147483648;
	or.b32  	%r560, %r559, 1056964608;
	mov.b32 	%f1125, %r560;
	add.f32 	%f1126, %f1124, %f1125;
	cvt.rzi.f32.f32 	%f1127, %f1126;
	abs.f32 	%f1128, %f1124;
	setp.gt.f32 	%p238, %f1128, 0f4B000000;
	selp.f32 	%f1129, %f1124, %f1127, %p238;
	cvt.rzi.f32.f32 	%f1130, %f1124;
	setp.lt.f32 	%p239, %f1128, 0f3F000000;
	selp.f32 	%f1131, %f1130, %f1129, %p239;
	cvt.rzi.s32.f32 	%r561, %f1131;
	fma.rn.f32 	%f1132, %f1131, 0fBF000000, %f1288;
	mul.f32 	%f1133, %f1132, %f1132;
	fma.rn.f32 	%f1134, %f1133, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1135, %f1133, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1136, %f1134, %f1133, 0fC0A55DF6;
	fma.rn.f32 	%f1137, %f1135, %f1133, 0f4081E0CF;
	fma.rn.f32 	%f1138, %f1133, %f1132, 0f00000000;
	fma.rn.f32 	%f1139, %f1137, %f1133, 0fC09DE9E6;
	fma.rn.f32 	%f1140, %f1136, %f1138, 0f00000000;
	fma.rn.f32 	%f1141, %f1139, %f1133, 0f3F800000;
	fma.rn.f32 	%f1142, %f1132, 0f40490FDB, %f1140;
	and.b32  	%r562, %r561, 1;
	setp.eq.b32 	%p240, %r562, 1;
	selp.f32 	%f1143, %f1141, %f1142, %p240;
	selp.f32 	%f1144, %f1142, %f1141, %p240;
	and.b32  	%r563, %r561, 2;
	setp.eq.s32 	%p241, %r563, 0;
	neg.f32 	%f1145, %f1143;
	selp.f32 	%f1146, %f1143, %f1145, %p241;
	add.s32 	%r564, %r561, 1;
	and.b32  	%r565, %r564, 2;
	setp.eq.s32 	%p242, %r565, 0;
	sub.f32 	%f1148, %f250, %f1144;
	selp.f32 	%f1149, %f1144, %f1148, %p242;
	cvt.rzi.f32.f32 	%f1150, %f1288;
	setp.eq.f32 	%p243, %f1150, %f1288;
	mul.f32 	%f1151, %f1288, 0f00000000;
	selp.f32 	%f1152, %f1151, %f1146, %p243;
	abs.f32 	%f1153, %f1288;
	setp.gt.f32 	%p244, %f1153, 0f4B800000;
	add.f32 	%f1154, %f1152, 0f3F800000;
	mul.lo.s32 	%r566, %r138, 2147483640;
	cvt.u16.u32 	%rs5, %r4;
	shr.u16 	%rs6, %rs5, 8;
	shl.b16 	%rs7, %rs5, 8;
	or.b16  	%rs8, %rs7, %rs6;
	shl.b16 	%rs9, %rs8, 4;
	shr.u16 	%rs10, %rs8, 4;
	and.b16  	%rs11, %rs10, 3840;
	or.b16  	%rs12, %rs11, %rs9;
	and.b16  	%rs13, %rs12, 13107;
	shl.b16 	%rs14, %rs13, 2;
	shr.u16 	%rs15, %rs12, 2;
	and.b16  	%rs16, %rs15, 13107;
	or.b16  	%rs17, %rs16, %rs14;
	and.b16  	%rs18, %rs17, 20480;
	shl.b16 	%rs19, %rs18, 1;
	shr.u16 	%rs20, %rs17, 1;
	and.b16  	%rs21, %rs20, 16384;
	or.b16  	%rs22, %rs21, %rs19;
	shr.u16 	%rs23, %rs22, 13;
	sub.s32 	%r567, %r566, %r129;
	mad.lo.s32 	%r568, %r141, 2147483616, %r567;
	or.b16  	%rs24, %rs23, 1;
	cvt.u32.u16 	%r569, %rs24;
	and.b16  	%rs25, %rs23, 6;
	cvt.u32.u16 	%r570, %rs25;
	sub.s32 	%r571, %r568, %r570;
	shl.b32 	%r572, %r571, 1;
	cvt.rn.f32.s32 	%f1156, %r572;
	div.approx.f32 	%f123, %f1156, %f253;
	abs.f32 	%f1292, %f123;
	setp.lt.f32 	%p245, %f1292, 0f40000000;
	@%p245 bra 	$L__BB0_106;
// %bb.95:
	setp.gtu.f32 	%p246, %f1292, 0f4B800000;
	@%p246 bra 	$L__BB0_102;
	bra.uni 	$L__BB0_96;
$L__BB0_102:
	mov.b32 	%r62, %f1292;
	and.b32  	%r573, %r62, 8388607;
	or.b32  	%r16279, %r573, 1065353216;
	mov.b32 	%f1291, %r16279;
	add.s32 	%r574, %r62, -1073741824;
	and.b32  	%r16280, %r574, -8388608;
	setp.eq.s32 	%p252, %r16280, 0;
	@%p252 bra 	$L__BB0_105;
// %bb.103:                             // %__nv_fmaf_rn.exit4.i.i.i1681.preheader
	mov.f32 	%f1167, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1166,%f1167;
	// end inline asm
$L__BB0_104:                            // %__nv_fmaf_rn.exit4.i.i.i1681
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r575, %r16280, 192937984;
	add.s32 	%r576, %r16279, %r575;
	mov.b32 	%f1168, %r576;
	mul.f32 	%f1169, %f1166, %f1168;
	sub.f32 	%f1170, %f1168, %f1169;
	fma.rn.f32 	%f1171, %f1170, %f1166, %f1169;
	sub.f32 	%f1172, %f1168, %f1171;
	fma.rz.f32 	%f1173, %f1172, %f1166, %f1171;
	cvt.rzi.f32.f32 	%f1174, %f1173;
	sub.f32 	%f1291, %f1168, %f1174;
	sub.s32 	%r16280, %r16280, %r575;
	mov.b32 	%r16279, %f1291;
	setp.ne.s32 	%p253, %r16280, 0;
	setp.ne.s32 	%p254, %r16279, 0;
	and.pred  	%p255, %p253, %p254;
	@%p255 bra 	$L__BB0_104;
$L__BB0_105:                            // %__internal_fmodf_slowpath_mod.exit.i.i1683
	setp.gt.u32 	%p256, %r62, 2139095039;
	selp.f32 	%f1175, 0f7FFFFFFF, 0f4B800000, %p256;
	mul.f32 	%f1176, %f1291, 0f34000000;
	mul.f32 	%f1292, %f1175, %f1176;
	bra.uni 	$L__BB0_106;
$L__BB0_96:                             // %__nv_fast_fdividef.exit.i.i.i1660
	div.approx.f32 	%f1159, %f1292, %f221;
	cvt.rzi.f32.f32 	%f1290, %f1159;
	fma.rn.f32 	%f126, %f1290, 0fC0000000, %f1292;
	mov.b32 	%r61, %f126;
	setp.lt.u32 	%p247, %r61, 1073741824;
	@%p247 bra 	$L__BB0_101;
// %bb.97:
	setp.lt.u32 	%p248, %r61, -2147483647;
	@%p248 bra 	$L__BB0_99;
// %bb.98:
	add.f32 	%f1164, %f1290, 0fBF800000;
	setp.lt.f32 	%p251, %f126, 0fC0000000;
	add.f32 	%f1165, %f1164, 0fBF800000;
	selp.f32 	%f1290, %f1165, %f1164, %p251;
	bra.uni 	$L__BB0_101;
$L__BB0_99:
	add.f32 	%f1290, %f1290, 0f3F800000;
	setp.ltu.f32 	%p249, %f126, 0f40800000;
	@%p249 bra 	$L__BB0_101;
// %bb.100:                             // %__nv_fmaf_rn.exit.i.i.i1664
	add.f32 	%f1160, %f1290, 0f3F800000;
	fma.rn.f32 	%f1162, %f221, 0fC0400000, %f126;
	setp.ge.f32 	%p250, %f1162, 0f00000000;
	add.f32 	%f1163, %f1160, 0f3F800000;
	selp.f32 	%f1290, %f1163, %f1160, %p250;
$L__BB0_101:                            // %__internal_fmodf_fastpath_quot.exit.i.i1667
	fma.rn.f32 	%f1292, %f1290, 0fC0000000, %f1292;
$L__BB0_106:                            // %__internal_fmodf_kernel.exit.i1686
	mul.f32 	%f256, %f160, 0f3B8B2FF9;
	mul.f32 	%f290, %f4, 0f3B8B2FF9;
	mul.f32 	%f325, %f8, 0f3B8B2FF9;
	mul.f32 	%f359, %f13, 0f3B8B2FF9;
	mul.f32 	%f394, %f17, 0f3B8B2FF9;
	mul.f32 	%f428, %f22, 0f3B8B2FF9;
	mul.f32 	%f463, %f26, 0f3B8B2FF9;
	mul.f32 	%f497, %f31, 0f3B8B2FF9;
	mul.f32 	%f532, %f35, 0f3B8B2FF9;
	mul.f32 	%f566, %f40, 0f3B8B2FF9;
	mul.f32 	%f601, %f44, 0f3B8B2FF9;
	mul.f32 	%f635, %f49, 0f3B8B2FF9;
	mul.f32 	%f670, %f53, 0f3B8B2FF9;
	mul.f32 	%f704, %f58, 0f3B8B2FF9;
	mul.f32 	%f739, %f62, 0f3B8B2FF9;
	mul.f32 	%f772, %f67, 0f3B8B2FF9;
	selp.f32 	%f808, %f807, %f802, %p117;
	selp.f32 	%f841, %f840, %f835, %p124;
	selp.f32 	%f178, %f893, %f889, %p144;
	selp.f32 	%f947, %f946, %f941, %p164;
	selp.f32 	%f994, %f989, %f993, %p182;
	setp.gt.f32 	%p184, %f997, 0f4B800000;
	add.f32 	%f998, %f196, 0f3F800000;
	selp.f32 	%f1045, %f1040, %f1044, %p202;
	setp.gt.f32 	%p204, %f1049, 0f4B800000;
	add.f32 	%f1050, %f1048, 0f3F800000;
	selp.f32 	%f217, %f1102, %f1098, %p224;
	selp.f32 	%f1155, %f1154, %f1149, %p244;
	sub.s32 	%r60, %r568, %r569;
	abs.f32 	%f1177, %f1292;
	setp.gtu.f32 	%p257, %f1177, 0f7F800000;
	@%p257 bra 	$L__BB0_108;
// %bb.107:
	mov.b32 	%r577, %f123;
	and.b32  	%r578, %r577, -2147483648;
	mov.b32 	%r579, %f1292;
	or.b32  	%r580, %r578, %r579;
	mov.b32 	%f1292, %r580;
$L__BB0_108:                            // %__nv_fmodf.exit1687
	mul.f32 	%f3, %f256, %f1262;
	mul.f32 	%f291, %f290, %f1263;
	mul.f32 	%f12, %f325, %f1264;
	mul.f32 	%f360, %f359, %f1265;
	mul.f32 	%f21, %f394, %f1266;
	mul.f32 	%f429, %f428, %f1267;
	mul.f32 	%f30, %f463, %f1268;
	mul.f32 	%f498, %f497, %f1269;
	mul.f32 	%f39, %f532, %f1270;
	mul.f32 	%f567, %f566, %f1271;
	mul.f32 	%f48, %f601, %f1272;
	mul.f32 	%f636, %f635, %f1273;
	mul.f32 	%f57, %f670, %f1274;
	mul.f32 	%f705, %f704, %f1275;
	mul.f32 	%f66, %f739, %f1276;
	mul.f32 	%f773, %f772, %f1277;
	mov.b32 	%r392, %f808;
	mov.b32 	%r393, %f841;
	mov.b32 	%r398, %f805;
	mov.b32 	%r399, %f838;
	mov.b32 	%r460, %f947;
	mov.b32 	%r459, %f178;
	mov.b32 	%r466, %f944;
	mov.b32 	%r465, %f177;
	selp.f32 	%f197, %f998, %f994, %p184;
	selp.f32 	%f1051, %f1050, %f1045, %p204;
	mov.b32 	%r548, %f1155;
	mov.b32 	%r547, %f217;
	mov.b32 	%r554, %f1152;
	mov.b32 	%r553, %f216;
	add.f32 	%f1178, %f1292, %f1292;
	mov.b32 	%r581, %f1178;
	and.b32  	%r582, %r581, -2147483648;
	or.b32  	%r583, %r582, 1056964608;
	mov.b32 	%f1179, %r583;
	add.f32 	%f1180, %f1178, %f1179;
	cvt.rzi.f32.f32 	%f1181, %f1180;
	abs.f32 	%f1182, %f1178;
	setp.gt.f32 	%p258, %f1182, 0f4B000000;
	selp.f32 	%f1183, %f1178, %f1181, %p258;
	cvt.rzi.f32.f32 	%f1184, %f1178;
	setp.lt.f32 	%p259, %f1182, 0f3F000000;
	selp.f32 	%f1185, %f1184, %f1183, %p259;
	cvt.rzi.s32.f32 	%r584, %f1185;
	fma.rn.f32 	%f1186, %f1185, 0fBF000000, %f1292;
	mul.f32 	%f1187, %f1186, %f1186;
	fma.rn.f32 	%f1188, %f1187, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1189, %f1187, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1190, %f1188, %f1187, 0fC0A55DF6;
	fma.rn.f32 	%f1191, %f1189, %f1187, 0f4081E0CF;
	fma.rn.f32 	%f1192, %f1187, %f1186, 0f00000000;
	fma.rn.f32 	%f1193, %f1191, %f1187, 0fC09DE9E6;
	fma.rn.f32 	%f1194, %f1190, %f1192, 0f00000000;
	fma.rn.f32 	%f1195, %f1193, %f1187, 0f3F800000;
	fma.rn.f32 	%f1196, %f1186, 0f40490FDB, %f1194;
	and.b32  	%r585, %r584, 1;
	setp.eq.b32 	%p260, %r585, 1;
	selp.f32 	%f1197, %f1195, %f1196, %p260;
	selp.f32 	%f1198, %f1196, %f1195, %p260;
	and.b32  	%r586, %r584, 2;
	setp.eq.s32 	%p261, %r586, 0;
	neg.f32 	%f1199, %f1197;
	selp.f32 	%f1200, %f1197, %f1199, %p261;
	add.s32 	%r587, %r584, 1;
	and.b32  	%r588, %r587, 2;
	setp.eq.s32 	%p262, %r588, 0;
	sub.f32 	%f1202, %f250, %f1198;
	selp.f32 	%f1203, %f1198, %f1202, %p262;
	cvt.rzi.f32.f32 	%f1204, %f1292;
	setp.eq.f32 	%p263, %f1204, %f1292;
	mul.f32 	%f1205, %f1292, 0f00000000;
	selp.f32 	%f140, %f1205, %f1200, %p263;
	abs.f32 	%f1206, %f1292;
	setp.gt.f32 	%p264, %f1206, 0f4B800000;
	add.f32 	%f1207, %f140, 0f3F800000;
	shl.b32 	%r589, %r60, 1;
	cvt.rn.f32.s32 	%f1208, %r589;
	div.approx.f32 	%f142, %f1208, %f253;
	abs.f32 	%f1296, %f142;
	setp.lt.f32 	%p265, %f1296, 0f40000000;
	@%p265 bra 	$L__BB0_120;
// %bb.109:
	setp.gtu.f32 	%p266, %f1296, 0f4B800000;
	@%p266 bra 	$L__BB0_116;
	bra.uni 	$L__BB0_110;
$L__BB0_116:
	mov.b32 	%r70, %f1296;
	and.b32  	%r590, %r70, 8388607;
	or.b32  	%r16281, %r590, 1065353216;
	mov.b32 	%f1295, %r16281;
	add.s32 	%r591, %r70, -1073741824;
	and.b32  	%r16282, %r591, -8388608;
	setp.eq.s32 	%p272, %r16282, 0;
	@%p272 bra 	$L__BB0_119;
// %bb.117:                             // %__nv_fmaf_rn.exit4.i.i.i1712.preheader
	mov.f32 	%f1219, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1218,%f1219;
	// end inline asm
$L__BB0_118:                            // %__nv_fmaf_rn.exit4.i.i.i1712
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r592, %r16282, 192937984;
	add.s32 	%r593, %r16281, %r592;
	mov.b32 	%f1220, %r593;
	mul.f32 	%f1221, %f1218, %f1220;
	sub.f32 	%f1222, %f1220, %f1221;
	fma.rn.f32 	%f1223, %f1222, %f1218, %f1221;
	sub.f32 	%f1224, %f1220, %f1223;
	fma.rz.f32 	%f1225, %f1224, %f1218, %f1223;
	cvt.rzi.f32.f32 	%f1226, %f1225;
	sub.f32 	%f1295, %f1220, %f1226;
	sub.s32 	%r16282, %r16282, %r592;
	mov.b32 	%r16281, %f1295;
	setp.ne.s32 	%p273, %r16282, 0;
	setp.ne.s32 	%p274, %r16281, 0;
	and.pred  	%p275, %p273, %p274;
	@%p275 bra 	$L__BB0_118;
$L__BB0_119:                            // %__internal_fmodf_slowpath_mod.exit.i.i1714
	setp.gt.u32 	%p276, %r70, 2139095039;
	selp.f32 	%f1227, 0f7FFFFFFF, 0f4B800000, %p276;
	mul.f32 	%f1228, %f1295, 0f34000000;
	mul.f32 	%f1296, %f1227, %f1228;
	bra.uni 	$L__BB0_120;
$L__BB0_110:                            // %__nv_fast_fdividef.exit.i.i.i1691
	div.approx.f32 	%f1211, %f1296, %f221;
	cvt.rzi.f32.f32 	%f1294, %f1211;
	fma.rn.f32 	%f145, %f1294, 0fC0000000, %f1296;
	mov.b32 	%r69, %f145;
	setp.lt.u32 	%p267, %r69, 1073741824;
	@%p267 bra 	$L__BB0_115;
// %bb.111:
	setp.lt.u32 	%p268, %r69, -2147483647;
	@%p268 bra 	$L__BB0_113;
// %bb.112:
	add.f32 	%f1216, %f1294, 0fBF800000;
	setp.lt.f32 	%p271, %f145, 0fC0000000;
	add.f32 	%f1217, %f1216, 0fBF800000;
	selp.f32 	%f1294, %f1217, %f1216, %p271;
	bra.uni 	$L__BB0_115;
$L__BB0_113:
	add.f32 	%f1294, %f1294, 0f3F800000;
	setp.ltu.f32 	%p269, %f145, 0f40800000;
	@%p269 bra 	$L__BB0_115;
// %bb.114:                             // %__nv_fmaf_rn.exit.i.i.i1695
	add.f32 	%f1212, %f1294, 0f3F800000;
	fma.rn.f32 	%f1214, %f221, 0fC0400000, %f145;
	setp.ge.f32 	%p270, %f1214, 0f00000000;
	add.f32 	%f1215, %f1212, 0f3F800000;
	selp.f32 	%f1294, %f1215, %f1212, %p270;
$L__BB0_115:                            // %__internal_fmodf_fastpath_quot.exit.i.i1698
	fma.rn.f32 	%f1296, %f1294, 0fC0000000, %f1296;
$L__BB0_120:                            // %__internal_fmodf_kernel.exit.i1717
	shr.u32 	%r137, %r4, 2;
	mov.b32 	%r264, %f291;
	mov.b32 	%r263, %f3;
	mov.b32 	%r282, %f360;
	mov.b32 	%r281, %f12;
	mov.b32 	%r300, %f429;
	mov.b32 	%r299, %f21;
	mov.b32 	%r318, %f498;
	mov.b32 	%r317, %f30;
	mov.b32 	%r336, %f567;
	mov.b32 	%r335, %f39;
	mov.b32 	%r354, %f636;
	mov.b32 	%r353, %f48;
	mov.b32 	%r372, %f705;
	mov.b32 	%r371, %f57;
	mov.b32 	%r390, %f773;
	mov.b32 	%r389, %f66;
	xor.b32  	%r463, %r466, -2147483648;
	xor.b32  	%r462, %r465, -2147483648;
	mov.b32 	%r510, %f1051;
	mov.b32 	%r509, %f197;
	mov.b32 	%r513, %f1048;
	mov.b32 	%r512, %f196;
	xor.b32  	%r551, %r554, -2147483648;
	xor.b32  	%r550, %r553, -2147483648;
	selp.f32 	%f141, %f1207, %f1203, %p264;
	abs.f32 	%f1229, %f1296;
	setp.gtu.f32 	%p277, %f1229, 0f7F800000;
	@%p277 bra 	$L__BB0_122;
// %bb.121:
	mov.b32 	%r594, %f142;
	and.b32  	%r595, %r594, -2147483648;
	mov.b32 	%r596, %f1296;
	or.b32  	%r597, %r595, %r596;
	mov.b32 	%f1296, %r597;
$L__BB0_122:                            // %__nv_fmodf.exit1718
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	// begin inline asm
	cvt.rn.f16x2.f32 %r262, %r264, %r263;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r280, %r282, %r281;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r298, %r300, %r299;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r316, %r318, %r317;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r334, %r336, %r335;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r352, %r354, %r353;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r370, %r372, %r371;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r388, %r390, %r389;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r391, %r393, %r392;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r394, %r393, %r392;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r397, %r399, %r398;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r400, %r399, %r398;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r458, %r460, %r459;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r461, %r463, %r462;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r464, %r466, %r465;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r467, %r460, %r459;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r508, %r510, %r509;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r511, %r513, %r512;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r546, %r548, %r547;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r549, %r551, %r550;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r552, %r554, %r553;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r555, %r548, %r547;
	// end inline asm
	add.f32 	%f1230, %f1296, %f1296;
	mov.b32 	%r605, %f1230;
	and.b32  	%r606, %r605, -2147483648;
	or.b32  	%r607, %r606, 1056964608;
	mov.b32 	%f1231, %r607;
	add.f32 	%f1232, %f1230, %f1231;
	cvt.rzi.f32.f32 	%f1233, %f1232;
	abs.f32 	%f1234, %f1230;
	setp.gt.f32 	%p278, %f1234, 0f4B000000;
	selp.f32 	%f1235, %f1230, %f1233, %p278;
	cvt.rzi.f32.f32 	%f1236, %f1230;
	setp.lt.f32 	%p279, %f1234, 0f3F000000;
	selp.f32 	%f1237, %f1236, %f1235, %p279;
	cvt.rzi.s32.f32 	%r608, %f1237;
	fma.rn.f32 	%f1238, %f1237, 0fBF000000, %f1296;
	mul.f32 	%f1239, %f1238, %f1238;
	fma.rn.f32 	%f1240, %f1239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1241, %f1239, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1242, %f1240, %f1239, 0fC0A55DF6;
	fma.rn.f32 	%f1243, %f1241, %f1239, 0f4081E0CF;
	fma.rn.f32 	%f1244, %f1239, %f1238, 0f00000000;
	fma.rn.f32 	%f1245, %f1243, %f1239, 0fC09DE9E6;
	fma.rn.f32 	%f1246, %f1242, %f1244, 0f00000000;
	fma.rn.f32 	%f1247, %f1245, %f1239, 0f3F800000;
	fma.rn.f32 	%f1248, %f1238, 0f40490FDB, %f1246;
	and.b32  	%r609, %r608, 1;
	setp.eq.b32 	%p280, %r609, 1;
	selp.f32 	%f1249, %f1247, %f1248, %p280;
	selp.f32 	%f1250, %f1248, %f1247, %p280;
	and.b32  	%r610, %r608, 2;
	setp.eq.s32 	%p281, %r610, 0;
	neg.f32 	%f1251, %f1249;
	selp.f32 	%f1252, %f1249, %f1251, %p281;
	add.s32 	%r611, %r608, 1;
	and.b32  	%r612, %r611, 2;
	setp.eq.s32 	%p282, %r612, 0;
	sub.f32 	%f1254, %f250, %f1250;
	selp.f32 	%f1255, %f1250, %f1254, %p282;
	cvt.rzi.f32.f32 	%f1256, %f1296;
	setp.eq.f32 	%p283, %f1256, %f1296;
	mul.f32 	%f1257, %f1296, 0f00000000;
	selp.f32 	%f1258, %f1257, %f1252, %p283;
	abs.f32 	%f1259, %f1296;
	setp.gt.f32 	%p284, %f1259, 0f4B800000;
	add.f32 	%f1260, %f1258, 0f3F800000;
	selp.f32 	%f1261, %f1260, %f1255, %p284;
	mov.b32 	%r600, %f1261;
	mov.b32 	%r599, %f141;
	// begin inline asm
	cvt.rn.f16x2.f32 %r598, %r600, %r599;
	// end inline asm
	mov.b32 	%r603, %f1258;
	mov.b32 	%r602, %f140;
	// begin inline asm
	cvt.rn.f16x2.f32 %r601, %r603, %r602;
	// end inline asm
	shl.b32 	%r613, %r220, 13;
	and.b32  	%r614, %r126, 28;
	and.b32  	%r615, %r130, 96;
	or.b32  	%r616, %r615, %r614;
	shl.b32 	%r617, %r4, 3;
	and.b32  	%r618, %r617, 64;
	or.b32  	%r79, %r618, %r1;
	or.b32  	%r80, %r616, %r613;
	bfe.s32 	%r619, %r4, 3, 1;
	and.b32  	%r81, %r4, 8;
	shl.b32 	%r620, %r4, 4;
	or.b32  	%r621, %r81, %r620;
	shr.u32 	%r622, %r621, 2;
	and.b32  	%r623, %r622, 30;
	and.b32  	%r624, %r137, 6;
	or.b32  	%r625, %r128, %r624;
	and.b32  	%r626, %r620, 48;
	shr.u32 	%r627, %r1, 1;
	and.b32  	%r628, %r2, 32;
	or.b32  	%r629, %r628, %r627;
	or.b32  	%r630, %r629, 8;
	or.b32  	%r631, %r629, 16;
	or.b32  	%r632, %r629, 24;
	or.b32  	%r82, %r626, %r625;
	shr.u32 	%r633, %r131, 1;
	mul.lo.s32 	%r634, %r633, 65;
	add.s32 	%r83, %r629, %r634;
	add.s32 	%r84, %r630, %r634;
	add.s32 	%r85, %r631, %r634;
	add.s32 	%r86, %r632, %r634;
	and.b16  	%rs26, %rs1, 63;
	mul.lo.s16 	%rs27, %rs26, 65;
	cvt.u32.u16 	%r635, %rs27;
	add.s32 	%r87, %r629, %r635;
	add.s32 	%r88, %r630, %r635;
	add.s32 	%r89, %r631, %r635;
	add.s32 	%r90, %r632, %r635;
	shl.b32 	%r636, %r1, 1;
	or.b32  	%r637, %r139, %r636;
	mul.lo.s32 	%r638, %r637, 65;
	add.s32 	%r639, %r623, %r638;
	mul.wide.u32 	%rd42, %r639, 4;
	mov.u64 	%rd43, shmem;
	add.s64 	%rd4, %rd43, %rd42;
	cvt.u64.u32 	%rd44, %r623;
	cvt.u64.u32 	%rd45, %r638;
	add.s64 	%rd46, %rd45, %rd44;
	shl.b64 	%rd47, %rd46, 2;
	add.s64 	%rd5, %rd43, %rd47;
	or.b32  	%r640, %r637, 32;
	mul.lo.s32 	%r641, %r640, 65;
	add.s32 	%r642, %r623, %r641;
	mul.wide.u32 	%rd48, %r642, 4;
	add.s64 	%rd6, %rd43, %rd48;
	cvt.u64.u32 	%rd49, %r641;
	add.s64 	%rd50, %rd49, %rd44;
	shl.b64 	%rd51, %rd50, 2;
	add.s64 	%rd7, %rd43, %rd51;
	shr.u32 	%r643, %r128, 3;
	setp.gt.u32 	%p285, %r4, 15;
	bfe.u32 	%r644, %r620, 5, 1;
	and.b32  	%r91, %r127, 32;
	shr.u32 	%r645, %r1, 3;
	mul.lo.s32 	%r646, %r645, 260;
	bfe.s32 	%r647, %r1, 1, 1;
	and.b32  	%r648, %r1, 2;
	setp.eq.s32 	%p286, %r648, 0;
	and.b32  	%r649, %r647, 1040;
	bfe.s32 	%r650, %r1, 2, 1;
	and.b32  	%r651, %r1, 4;
	setp.eq.s32 	%p287, %r651, 0;
	and.b32  	%r652, %r650, 520;
	mul.lo.s32 	%r653, %r139, 65;
	and.b32  	%r654, %r1, 1;
	neg.s32 	%r655, %r654;
	and.b32  	%r656, %r655, 2080;
	or.b32  	%r657, %r656, %r623;
	add.s32 	%r658, %r657, %r649;
	add.s32 	%r659, %r658, %r646;
	add.s32 	%r660, %r659, %r652;
	add.s32 	%r661, %r660, %r653;
	mul.wide.u32 	%rd52, %r661, 4;
	add.s64 	%rd8, %rd43, %rd52;
	cvt.u64.u32 	%rd53, %r653;
	selp.b64 	%rd54, 0, 520, %p287;
	cvt.u64.u32 	%rd55, %r646;
	selp.b64 	%rd56, 0, 1040, %p286;
	cvt.u64.u32 	%rd57, %r657;
	add.s64 	%rd58, %rd57, %rd56;
	add.s64 	%rd59, %rd58, %rd55;
	add.s64 	%rd60, %rd59, %rd54;
	add.s64 	%rd61, %rd60, %rd53;
	shl.b64 	%rd62, %rd61, 2;
	add.s64 	%rd9, %rd43, %rd62;
	cvt.u64.u32 	%rd63, %r659;
	add.s64 	%rd64, %rd63, %rd54;
	add.s64 	%rd65, %rd64, %rd53;
	shl.b64 	%rd66, %rd65, 2;
	add.s64 	%rd10, %rd43, %rd66;
	add.s32 	%r662, %r661, 162;
	mul.wide.u32 	%rd67, %r662, 4;
	add.s64 	%rd11, %rd43, %rd67;
	add.s32 	%r663, %r661, 131;
	mul.wide.u32 	%rd68, %r663, 4;
	add.s64 	%rd12, %rd43, %rd68;
	add.s32 	%r664, %r661, 163;
	mul.wide.u32 	%rd69, %r664, 4;
	add.s64 	%rd13, %rd43, %rd69;
	add.s32 	%r665, %r661, 4193;
	mul.wide.u32 	%rd70, %r665, 4;
	add.s64 	%rd14, %rd43, %rd70;
	add.s32 	%r666, %r661, 4162;
	mul.wide.u32 	%rd71, %r666, 4;
	add.s64 	%rd15, %rd43, %rd71;
	add.s32 	%r667, %r661, 4194;
	mul.wide.u32 	%rd72, %r667, 4;
	add.s64 	%rd16, %rd43, %rd72;
	add.s32 	%r668, %r661, 4291;
	mul.wide.u32 	%rd73, %r668, 4;
	add.s64 	%rd17, %rd43, %rd73;
	add.s32 	%r669, %r661, 4323;
	mul.wide.u32 	%rd74, %r669, 4;
	add.s64 	%rd18, %rd43, %rd74;
	add.s32 	%r670, %r661, 4292;
	mul.wide.u32 	%rd75, %r670, 4;
	add.s64 	%rd19, %rd43, %rd75;
	add.s32 	%r671, %r661, 4324;
	mul.wide.u32 	%rd76, %r671, 4;
	add.s64 	%rd20, %rd43, %rd76;
	mul.lo.s32 	%r672, %r643, 260;
	and.b32  	%r673, %r619, 1040;
	setp.eq.s32 	%p288, %r136, 0;
	selp.b32 	%r674, 0, 130, %p288;
	selp.b32 	%r675, 520, 0, %p285;
	mul.lo.s32 	%r92, %r644, 65;
	or.b32  	%r676, %r629, %r673;
	add.s32 	%r677, %r676, %r672;
	add.s32 	%r678, %r677, %r674;
	add.s32 	%r679, %r678, %r675;
	add.s32 	%r93, %r679, %r92;
	or.b32  	%r680, %r630, %r673;
	add.s32 	%r681, %r680, %r672;
	add.s32 	%r682, %r681, %r674;
	add.s32 	%r683, %r682, %r675;
	add.s32 	%r94, %r683, %r92;
	add.s32 	%r684, %r631, %r673;
	add.s32 	%r685, %r684, %r672;
	add.s32 	%r686, %r685, %r674;
	add.s32 	%r687, %r686, %r675;
	add.s32 	%r95, %r687, %r92;
	add.s32 	%r688, %r632, %r673;
	add.s32 	%r689, %r688, %r672;
	add.s32 	%r690, %r689, %r674;
	add.s32 	%r691, %r690, %r675;
	add.s32 	%r96, %r691, %r92;
	add.s32 	%r97, %r629, 2080;
	add.s32 	%r98, %r630, 2080;
	add.s32 	%r99, %r631, 2080;
	add.s32 	%r100, %r632, 2080;
	add.s32 	%r692, %r642, 4193;
	mul.wide.u32 	%rd77, %r692, 4;
	add.s64 	%rd21, %rd43, %rd77;
	mov.u32 	%r16283, 0;
	setp.eq.s32 	%p290, %r81, 0;
	mov.u16 	%rs2387, 25600;
	mov.u16 	%rs2179, 21504;
	mov.u16 	%rs2395, 18432;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16285, %r16283;
	mov.u32 	%r16286, %r16283;
	mov.u32 	%r16287, %r16283;
	mov.u32 	%r16288, %r16283;
	mov.u32 	%r16289, %r16283;
	mov.u32 	%r16290, %r16283;
	mov.u32 	%r16291, %r16283;
	mov.u32 	%r16292, %r16283;
	mov.u32 	%r16293, %r16283;
	mov.u32 	%r16294, %r16283;
	mov.u32 	%r16295, %r16283;
	mov.u32 	%r16296, %r16283;
	mov.u32 	%r16297, %r16283;
	mov.u32 	%r16298, %r16283;
	mov.u32 	%r16299, %r16283;
	mov.u32 	%r16300, %r16283;
	mov.u32 	%r16301, %r16283;
	mov.u32 	%r16302, %r16283;
	mov.u32 	%r16303, %r16283;
	mov.u32 	%r16304, %r16283;
	mov.u32 	%r16305, %r16283;
	mov.u32 	%r16306, %r16283;
	mov.u32 	%r16307, %r16283;
$L__BB0_123:                            // %L2066
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_156 Depth 2
	add.s32 	%r693, %r16307, %r220;
	setp.lt.s32 	%p289, %r693, %r221;
	@%p289 bra 	$L__BB0_155;
	bra.uni 	$L__BB0_124;
$L__BB0_155:                            // %pass806
                                        //   in Loop: Header=BB0_123 Depth=1
	or.b32  	%r760, %r16307, %r91;
	or.b32  	%r761, %r79, %r760;
	shl.b32 	%r762, %r761, 13;
	add.s32 	%r763, %r80, %r762;
	shr.s32 	%r764, %r763, 31;
	shr.u32 	%r765, %r764, 4;
	add.s32 	%r766, %r763, %r765;
	shr.s32 	%r767, %r766, 28;
	setp.lt.s32 	%p291, %r763, 0;
	and.b32  	%r768, %r766, -268435456;
	setp.ne.s32 	%p292, %r768, %r763;
	and.pred  	%p293, %p291, %p292;
	selp.u32 	%r769, 1, 0, %p293;
	sub.s32 	%r770, %r769, %r767;
	shl.b32 	%r771, %r770, 28;
	add.s32 	%r772, %r771, %r763;
	mul.wide.s32 	%rd78, %r772, 4;
	add.s64 	%rd79, %rd2, %rd78;
	ld.global.v4.u32 	{%r773, %r774, %r775, %r776}, [%rd79];
	or.b32  	%r777, %r762, 131072;
	add.s32 	%r778, %r80, %r777;
	shr.s32 	%r779, %r778, 31;
	shr.u32 	%r780, %r779, 4;
	add.s32 	%r781, %r778, %r780;
	shr.s32 	%r782, %r781, 28;
	setp.lt.s32 	%p294, %r778, 0;
	and.b32  	%r783, %r781, -268435456;
	setp.ne.s32 	%p295, %r783, %r778;
	and.pred  	%p296, %p294, %p295;
	selp.u32 	%r784, 1, 0, %p296;
	sub.s32 	%r785, %r784, %r782;
	shl.b32 	%r786, %r785, 28;
	add.s32 	%r787, %r786, %r778;
	mul.wide.s32 	%rd80, %r787, 4;
	add.s64 	%rd81, %rd2, %rd80;
	ld.global.v4.u32 	{%r788, %r789, %r790, %r791}, [%rd81];
	or.b32  	%r792, %r762, 1048576;
	add.s32 	%r793, %r80, %r792;
	shr.s32 	%r794, %r793, 31;
	shr.u32 	%r795, %r794, 4;
	add.s32 	%r796, %r793, %r795;
	shr.s32 	%r797, %r796, 28;
	setp.lt.s32 	%p297, %r793, 0;
	and.b32  	%r798, %r796, -268435456;
	setp.ne.s32 	%p298, %r798, %r793;
	and.pred  	%p299, %p297, %p298;
	selp.u32 	%r799, 1, 0, %p299;
	sub.s32 	%r800, %r799, %r797;
	shl.b32 	%r801, %r800, 28;
	add.s32 	%r802, %r801, %r793;
	mul.wide.s32 	%rd82, %r802, 4;
	add.s64 	%rd83, %rd2, %rd82;
	ld.global.v4.u32 	{%r803, %r804, %r805, %r806}, [%rd83];
	or.b32  	%r807, %r762, 1179648;
	add.s32 	%r808, %r80, %r807;
	shr.s32 	%r809, %r808, 31;
	shr.u32 	%r810, %r809, 4;
	add.s32 	%r811, %r808, %r810;
	shr.s32 	%r812, %r811, 28;
	setp.lt.s32 	%p300, %r808, 0;
	and.b32  	%r813, %r811, -268435456;
	setp.ne.s32 	%p301, %r813, %r808;
	and.pred  	%p302, %p300, %p301;
	selp.u32 	%r814, 1, 0, %p302;
	sub.s32 	%r815, %r814, %r812;
	shl.b32 	%r816, %r815, 28;
	add.s32 	%r817, %r816, %r808;
	mul.wide.s32 	%rd84, %r817, 4;
	add.s64 	%rd85, %rd2, %rd84;
	ld.global.v4.u32 	{%r818, %r819, %r820, %r821}, [%rd85];
	selp.b32 	%r822, %r775, %r773, %p290;
	shfl.sync.bfly.b32	%r823, %r822, 8, 31, -1;
	selp.b32 	%r696, %r773, %r823, %p290;
	selp.b32 	%r697, %r823, %r775, %p290;
	selp.b32 	%r824, %r776, %r774, %p290;
	shfl.sync.bfly.b32	%r825, %r824, 8, 31, -1;
	selp.b32 	%r704, %r774, %r825, %p290;
	selp.b32 	%r705, %r825, %r776, %p290;
	selp.b32 	%r826, %r790, %r788, %p290;
	shfl.sync.bfly.b32	%r827, %r826, 8, 31, -1;
	selp.b32 	%r712, %r788, %r827, %p290;
	selp.b32 	%r713, %r827, %r790, %p290;
	selp.b32 	%r828, %r791, %r789, %p290;
	shfl.sync.bfly.b32	%r829, %r828, 8, 31, -1;
	selp.b32 	%r720, %r789, %r829, %p290;
	selp.b32 	%r721, %r829, %r791, %p290;
	selp.b32 	%r830, %r805, %r803, %p290;
	shfl.sync.bfly.b32	%r831, %r830, 8, 31, -1;
	selp.b32 	%r728, %r803, %r831, %p290;
	selp.b32 	%r729, %r831, %r805, %p290;
	selp.b32 	%r832, %r806, %r804, %p290;
	shfl.sync.bfly.b32	%r833, %r832, 8, 31, -1;
	selp.b32 	%r736, %r804, %r833, %p290;
	selp.b32 	%r737, %r833, %r806, %p290;
	selp.b32 	%r834, %r820, %r818, %p290;
	shfl.sync.bfly.b32	%r835, %r834, 8, 31, -1;
	selp.b32 	%r744, %r818, %r835, %p290;
	selp.b32 	%r745, %r835, %r820, %p290;
	selp.b32 	%r836, %r821, %r819, %p290;
	shfl.sync.bfly.b32	%r837, %r836, 8, 31, -1;
	selp.b32 	%r752, %r819, %r837, %p290;
	selp.b32 	%r753, %r837, %r821, %p290;
	mov.u32 	%r16194, 21520;
	// begin inline asm
	prmt.b32 %r695, %r696, %r697, %r16194;
	// end inline asm
	mov.u32 	%r16198, 30258;
	// begin inline asm
	prmt.b32 %r699, %r696, %r697, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r703, %r704, %r705, %r16194;
	// end inline asm
	// begin inline asm
	prmt.b32 %r707, %r704, %r705, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r711, %r712, %r713, %r16194;
	// end inline asm
	// begin inline asm
	prmt.b32 %r715, %r712, %r713, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r719, %r720, %r721, %r16194;
	// end inline asm
	// begin inline asm
	prmt.b32 %r723, %r720, %r721, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r727, %r728, %r729, %r16194;
	// end inline asm
	// begin inline asm
	prmt.b32 %r731, %r728, %r729, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r735, %r736, %r737, %r16194;
	// end inline asm
	// begin inline asm
	prmt.b32 %r739, %r736, %r737, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r743, %r744, %r745, %r16194;
	// end inline asm
	// begin inline asm
	prmt.b32 %r747, %r744, %r745, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r751, %r752, %r753, %r16194;
	// end inline asm
	// begin inline asm
	prmt.b32 %r755, %r752, %r753, %r16198;
	// end inline asm
	st.shared.u32 	[%rd8], %r695;
	st.shared.u32 	[%rd9+128], %r699;
	st.shared.u32 	[%rd9+4], %r703;
	st.shared.u32 	[%rd9+132], %r707;
	st.shared.u32 	[%rd10+520], %r711;
	st.shared.u32 	[%rd11], %r715;
	st.shared.u32 	[%rd12], %r719;
	st.shared.u32 	[%rd13], %r723;
	st.shared.u32 	[%rd8+16644], %r727;
	st.shared.u32 	[%rd14], %r731;
	st.shared.u32 	[%rd15], %r735;
	st.shared.u32 	[%rd16], %r739;
	st.shared.u32 	[%rd17], %r743;
	st.shared.u32 	[%rd18], %r747;
	st.shared.u32 	[%rd19], %r751;
	st.shared.u32 	[%rd20], %r755;
	bar.sync 	0;
	or.b32  	%r838, %r82, %r16307;
	or.b32  	%r168, %r838, 1;
	mov.u32 	%r3183, 0;
	mov.u32 	%r16314, %r3183;
$L__BB0_156:                            // %pass6325
                                        //   Parent Loop BB0_123 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.eq.s32 	%p303, %r16314, 0;
	selp.b32 	%r16103, 0, 4161, %p303;
	add.s32 	%r16104, %r93, %r16103;
	mul.wide.u32 	%rd86, %r16104, 4;
	add.s64 	%rd88, %rd43, %rd86;
	ld.shared.u32 	%r16105, [%rd88];
	add.s32 	%r16106, %r94, %r16103;
	mul.wide.u32 	%rd89, %r16106, 4;
	add.s64 	%rd90, %rd43, %rd89;
	ld.shared.u32 	%r16107, [%rd90];
	add.s32 	%r16108, %r95, %r16103;
	mul.wide.u32 	%rd91, %r16108, 4;
	add.s64 	%rd92, %rd43, %rd91;
	ld.shared.u32 	%r16109, [%rd92];
	add.s32 	%r16110, %r96, %r16103;
	mul.wide.u32 	%rd93, %r16110, 4;
	add.s64 	%rd94, %rd43, %rd93;
	ld.shared.u32 	%r16111, [%rd94];
	add.s32 	%r16112, %r168, %r16314;
	bfe.s32 	%r16113, %r16112, 3, 1;
	and.b32  	%r16114, %r16113, 260;
	bfe.s32 	%r16115, %r16112, 1, 1;
	and.b32  	%r16116, %r16115, 1040;
	bfe.s32 	%r16117, %r16112, 4, 1;
	and.b32  	%r16118, %r16117, 130;
	bfe.s32 	%r16119, %r16112, 2, 1;
	and.b32  	%r16120, %r16119, 520;
	bfe.s32 	%r16121, %r16112, 7, 1;
	and.b32  	%r16122, %r16121, 4161;
	or.b32  	%r16123, %r97, %r16116;
	add.s32 	%r16124, %r16123, %r16114;
	add.s32 	%r16125, %r16124, %r16118;
	add.s32 	%r16126, %r16125, %r16120;
	add.s32 	%r16127, %r16126, %r92;
	add.s32 	%r16128, %r16127, %r16122;
	mul.wide.u32 	%rd95, %r16128, 4;
	add.s64 	%rd96, %rd43, %rd95;
	ld.shared.u32 	%r16129, [%rd96];
	or.b32  	%r16130, %r98, %r16116;
	add.s32 	%r16131, %r16130, %r16114;
	add.s32 	%r16132, %r16131, %r16118;
	add.s32 	%r16133, %r16132, %r16120;
	add.s32 	%r16134, %r16133, %r92;
	add.s32 	%r16135, %r16134, %r16122;
	mul.wide.u32 	%rd97, %r16135, 4;
	add.s64 	%rd98, %rd43, %rd97;
	ld.shared.u32 	%r16136, [%rd98];
	add.s32 	%r16137, %r99, %r16116;
	add.s32 	%r16138, %r16137, %r16114;
	add.s32 	%r16139, %r16138, %r16118;
	add.s32 	%r16140, %r16139, %r16120;
	add.s32 	%r16141, %r16140, %r92;
	add.s32 	%r16142, %r16141, %r16122;
	mul.wide.u32 	%rd99, %r16142, 4;
	add.s64 	%rd100, %rd43, %rd99;
	ld.shared.u32 	%r16143, [%rd100];
	add.s32 	%r16144, %r100, %r16116;
	add.s32 	%r16145, %r16144, %r16114;
	add.s32 	%r16146, %r16145, %r16118;
	add.s32 	%r16147, %r16146, %r16120;
	add.s32 	%r16148, %r16147, %r92;
	add.s32 	%r16149, %r16148, %r16122;
	mul.wide.u32 	%rd101, %r16149, 4;
	add.s64 	%rd102, %rd43, %rd101;
	ld.shared.u32 	%r16150, [%rd102];
	// begin inline asm
	mov.b32 %r844, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r855, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r843, %r16105, -2004318072;
	mov.u32 	%r842, 983055;
	// begin inline asm
	lop3.b32 %r841, %r842, %r843, %r844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r845, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r846, %r844, %r845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r849, %r841, %r846;
	// end inline asm
	mov.u32 	%r853, 15728880;
	// begin inline asm
	lop3.b32 %r852, %r853, %r843, %r855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r856, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r857, %r855, %r856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r860, %r852, %r857;
	// end inline asm
	shr.u32 	%r865, %r843, 8;
	// begin inline asm
	lop3.b32 %r863, %r842, %r865, %r844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r867, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r868, %r844, %r867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r871, %r863, %r868;
	// end inline asm
	// begin inline asm
	lop3.b32 %r874, %r853, %r865, %r855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r878, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r879, %r855, %r878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r882, %r874, %r879;
	// end inline asm
	// begin inline asm
	mov.b32 %r890, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r901, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r889, %r16107, -2004318072;
	// begin inline asm
	lop3.b32 %r887, %r842, %r889, %r890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r891, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r892, %r890, %r891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r895, %r887, %r892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r898, %r853, %r889, %r901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r902, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r903, %r901, %r902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r906, %r898, %r903;
	// end inline asm
	shr.u32 	%r911, %r889, 8;
	// begin inline asm
	lop3.b32 %r909, %r842, %r911, %r890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r913, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r914, %r890, %r913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r917, %r909, %r914;
	// end inline asm
	// begin inline asm
	lop3.b32 %r920, %r853, %r911, %r901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r924, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r925, %r901, %r924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r928, %r920, %r925;
	// end inline asm
	// begin inline asm
	mov.b32 %r936, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r947, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r935, %r16109, -2004318072;
	// begin inline asm
	lop3.b32 %r933, %r842, %r935, %r936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r937, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r938, %r936, %r937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r941, %r933, %r938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r944, %r853, %r935, %r947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r948, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r949, %r947, %r948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r952, %r944, %r949;
	// end inline asm
	shr.u32 	%r957, %r935, 8;
	// begin inline asm
	lop3.b32 %r955, %r842, %r957, %r936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r959, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r960, %r936, %r959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r963, %r955, %r960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r966, %r853, %r957, %r947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r970, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r971, %r947, %r970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r974, %r966, %r971;
	// end inline asm
	// begin inline asm
	mov.b32 %r982, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r993, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r981, %r16111, -2004318072;
	// begin inline asm
	lop3.b32 %r979, %r842, %r981, %r982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r983, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r984, %r982, %r983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r987, %r979, %r984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r990, %r853, %r981, %r993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r994, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r995, %r993, %r994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r998, %r990, %r995;
	// end inline asm
	shr.u32 	%r1003, %r981, 8;
	// begin inline asm
	lop3.b32 %r1001, %r842, %r1003, %r982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1005, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1006, %r982, %r1005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1009, %r1001, %r1006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1012, %r853, %r1003, %r993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1016, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1017, %r993, %r1016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1020, %r1012, %r1017;
	// end inline asm
	// begin inline asm
	mov.b32 %r1028, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1039, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1027, %r16129, -2004318072;
	// begin inline asm
	lop3.b32 %r1025, %r842, %r1027, %r1028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1029, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1030, %r1028, %r1029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1033, %r1025, %r1030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1036, %r853, %r1027, %r1039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1040, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1041, %r1039, %r1040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1044, %r1036, %r1041;
	// end inline asm
	shr.u32 	%r1049, %r1027, 8;
	// begin inline asm
	lop3.b32 %r1047, %r842, %r1049, %r1028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1051, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1052, %r1028, %r1051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1055, %r1047, %r1052;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1058, %r853, %r1049, %r1039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1062, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1063, %r1039, %r1062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1066, %r1058, %r1063;
	// end inline asm
	// begin inline asm
	mov.b32 %r1074, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1085, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1073, %r16136, -2004318072;
	// begin inline asm
	lop3.b32 %r1071, %r842, %r1073, %r1074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1075, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1076, %r1074, %r1075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1079, %r1071, %r1076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1082, %r853, %r1073, %r1085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1086, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1087, %r1085, %r1086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1090, %r1082, %r1087;
	// end inline asm
	shr.u32 	%r1095, %r1073, 8;
	// begin inline asm
	lop3.b32 %r1093, %r842, %r1095, %r1074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1097, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1098, %r1074, %r1097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1101, %r1093, %r1098;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1104, %r853, %r1095, %r1085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1108, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1109, %r1085, %r1108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1112, %r1104, %r1109;
	// end inline asm
	// begin inline asm
	mov.b32 %r1120, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1131, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1119, %r16143, -2004318072;
	// begin inline asm
	lop3.b32 %r1117, %r842, %r1119, %r1120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1121, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1122, %r1120, %r1121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1125, %r1117, %r1122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1128, %r853, %r1119, %r1131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1132, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1133, %r1131, %r1132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1136, %r1128, %r1133;
	// end inline asm
	shr.u32 	%r1141, %r1119, 8;
	// begin inline asm
	lop3.b32 %r1139, %r842, %r1141, %r1120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1143, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1144, %r1120, %r1143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1147, %r1139, %r1144;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1150, %r853, %r1141, %r1131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1154, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1155, %r1131, %r1154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1158, %r1150, %r1155;
	// end inline asm
	// begin inline asm
	mov.b32 %r1166, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1177, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1165, %r16150, -2004318072;
	// begin inline asm
	lop3.b32 %r1163, %r842, %r1165, %r1166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1167, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1168, %r1166, %r1167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1171, %r1163, %r1168;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1174, %r853, %r1165, %r1177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1178, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1179, %r1177, %r1178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1182, %r1174, %r1179;
	// end inline asm
	shr.u32 	%r1187, %r1165, 8;
	// begin inline asm
	lop3.b32 %r1185, %r842, %r1187, %r1166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1189, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1190, %r1166, %r1189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1193, %r1185, %r1190;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1196, %r853, %r1187, %r1177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1200, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1201, %r1177, %r1200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1204, %r1196, %r1201;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1207, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1209, %r1207, %r849;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1212, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1214, %r1212, %r860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1217, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1219, %r1217, %r871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1222, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1224, %r1222, %r882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1227, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1229, %r1227, %r895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1232, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1234, %r1232, %r906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1237, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1239, %r1237, %r917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1242, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1244, %r1242, %r928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1247, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1249, %r1247, %r941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1252, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1254, %r1252, %r952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1257, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1259, %r1257, %r963;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1262, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1264, %r1262, %r974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1267, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1269, %r1267, %r987;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1272, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1274, %r1272, %r998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1277, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1279, %r1277, %r1009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1282, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1284, %r1282, %r1020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1287, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1289, %r1287, %r1033;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1292, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1294, %r1292, %r1044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1297, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1299, %r1297, %r1055;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1302, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1304, %r1302, %r1066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1307, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1309, %r1307, %r1079;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1312, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1314, %r1312, %r1090;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1317, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1319, %r1317, %r1101;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1322, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1324, %r1322, %r1112;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1327, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1329, %r1327, %r1125;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1332, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1334, %r1332, %r1136;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1337, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1339, %r1337, %r1147;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1342, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1344, %r1342, %r1158;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1347, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1349, %r1347, %r1171;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1352, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1354, %r1352, %r1182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1357, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1359, %r1357, %r1193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1362, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1364, %r1362, %r1204;
	// end inline asm
	// begin inline asm
	mov.b32 %r1372, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1383, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1371, %r16283, -2004318072;
	// begin inline asm
	lop3.b32 %r1369, %r842, %r1371, %r1372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1373, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1374, %r1372, %r1373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1377, %r1369, %r1374;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1380, %r853, %r1371, %r1383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1384, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1385, %r1383, %r1384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1388, %r1380, %r1385;
	// end inline asm
	shr.u32 	%r1393, %r1371, 8;
	// begin inline asm
	lop3.b32 %r1391, %r842, %r1393, %r1372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1395, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1396, %r1372, %r1395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1399, %r1391, %r1396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1402, %r853, %r1393, %r1383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1406, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1407, %r1383, %r1406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1410, %r1402, %r1407;
	// end inline asm
	// begin inline asm
	mov.b32 %r1418, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1429, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1417, %r16284, -2004318072;
	// begin inline asm
	lop3.b32 %r1415, %r842, %r1417, %r1418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1419, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1420, %r1418, %r1419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1423, %r1415, %r1420;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1426, %r853, %r1417, %r1429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1430, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1431, %r1429, %r1430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1434, %r1426, %r1431;
	// end inline asm
	shr.u32 	%r1439, %r1417, 8;
	// begin inline asm
	lop3.b32 %r1437, %r842, %r1439, %r1418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1441, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1442, %r1418, %r1441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1445, %r1437, %r1442;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1448, %r853, %r1439, %r1429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1452, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1453, %r1429, %r1452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1456, %r1448, %r1453;
	// end inline asm
	// begin inline asm
	mov.b32 %r1464, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1475, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1463, %r16285, -2004318072;
	// begin inline asm
	lop3.b32 %r1461, %r842, %r1463, %r1464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1465, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1466, %r1464, %r1465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1469, %r1461, %r1466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1472, %r853, %r1463, %r1475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1476, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1477, %r1475, %r1476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1480, %r1472, %r1477;
	// end inline asm
	shr.u32 	%r1485, %r1463, 8;
	// begin inline asm
	lop3.b32 %r1483, %r842, %r1485, %r1464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1487, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1488, %r1464, %r1487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1491, %r1483, %r1488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1494, %r853, %r1485, %r1475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1498, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1499, %r1475, %r1498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1502, %r1494, %r1499;
	// end inline asm
	// begin inline asm
	mov.b32 %r1510, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1521, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1509, %r16286, -2004318072;
	// begin inline asm
	lop3.b32 %r1507, %r842, %r1509, %r1510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1511, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1512, %r1510, %r1511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1515, %r1507, %r1512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1518, %r853, %r1509, %r1521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1522, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1523, %r1521, %r1522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1526, %r1518, %r1523;
	// end inline asm
	shr.u32 	%r1531, %r1509, 8;
	// begin inline asm
	lop3.b32 %r1529, %r842, %r1531, %r1510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1533, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1534, %r1510, %r1533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1537, %r1529, %r1534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1540, %r853, %r1531, %r1521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1544, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1545, %r1521, %r1544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1548, %r1540, %r1545;
	// end inline asm
	// begin inline asm
	mov.b32 %r1556, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1567, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1555, %r16295, -2004318072;
	// begin inline asm
	lop3.b32 %r1553, %r842, %r1555, %r1556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1557, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1558, %r1556, %r1557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1561, %r1553, %r1558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1564, %r853, %r1555, %r1567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1568, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1569, %r1567, %r1568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1572, %r1564, %r1569;
	// end inline asm
	shr.u32 	%r1577, %r1555, 8;
	// begin inline asm
	lop3.b32 %r1575, %r842, %r1577, %r1556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1579, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1580, %r1556, %r1579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1583, %r1575, %r1580;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1586, %r853, %r1577, %r1567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1590, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1591, %r1567, %r1590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1594, %r1586, %r1591;
	// end inline asm
	// begin inline asm
	mov.b32 %r1602, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1613, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1601, %r16296, -2004318072;
	// begin inline asm
	lop3.b32 %r1599, %r842, %r1601, %r1602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1603, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1604, %r1602, %r1603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1607, %r1599, %r1604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1610, %r853, %r1601, %r1613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1614, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1615, %r1613, %r1614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1618, %r1610, %r1615;
	// end inline asm
	shr.u32 	%r1623, %r1601, 8;
	// begin inline asm
	lop3.b32 %r1621, %r842, %r1623, %r1602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1625, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1626, %r1602, %r1625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1629, %r1621, %r1626;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1632, %r853, %r1623, %r1613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1636, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1637, %r1613, %r1636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1640, %r1632, %r1637;
	// end inline asm
	// begin inline asm
	mov.b32 %r1648, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1659, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1647, %r16297, -2004318072;
	// begin inline asm
	lop3.b32 %r1645, %r842, %r1647, %r1648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1649, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1650, %r1648, %r1649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1653, %r1645, %r1650;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1656, %r853, %r1647, %r1659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1660, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1661, %r1659, %r1660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1664, %r1656, %r1661;
	// end inline asm
	shr.u32 	%r1669, %r1647, 8;
	// begin inline asm
	lop3.b32 %r1667, %r842, %r1669, %r1648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1671, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1672, %r1648, %r1671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1675, %r1667, %r1672;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1678, %r853, %r1669, %r1659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1682, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1683, %r1659, %r1682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1686, %r1678, %r1683;
	// end inline asm
	// begin inline asm
	mov.b32 %r1694, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1705, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1693, %r16298, -2004318072;
	// begin inline asm
	lop3.b32 %r1691, %r842, %r1693, %r1694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1695, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1696, %r1694, %r1695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1699, %r1691, %r1696;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1702, %r853, %r1693, %r1705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1706, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1707, %r1705, %r1706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1710, %r1702, %r1707;
	// end inline asm
	shr.u32 	%r1715, %r1693, 8;
	// begin inline asm
	lop3.b32 %r1713, %r842, %r1715, %r1694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1717, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1718, %r1694, %r1717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1721, %r1713, %r1718;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1724, %r853, %r1715, %r1705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1728, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1729, %r1705, %r1728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1732, %r1724, %r1729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1735, %r262, %r1377, %r1209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1739, %r262, %r1388, %r1214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1743, %r262, %r1399, %r1219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1747, %r262, %r1410, %r1224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1751, %r262, %r1423, %r1229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1755, %r262, %r1434, %r1234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1759, %r262, %r1445, %r1239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1763, %r262, %r1456, %r1244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1767, %r262, %r1469, %r1249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1771, %r262, %r1480, %r1254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1775, %r262, %r1491, %r1259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r262, %r1502, %r1264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1783, %r262, %r1515, %r1269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r262, %r1526, %r1274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r262, %r1537, %r1279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r262, %r1548, %r1284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1799, %r280, %r1561, %r1289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r280, %r1572, %r1294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1807, %r280, %r1583, %r1299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1811, %r280, %r1594, %r1304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1815, %r280, %r1607, %r1309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1819, %r280, %r1618, %r1314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1823, %r280, %r1629, %r1319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1827, %r280, %r1640, %r1324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1831, %r280, %r1653, %r1329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1835, %r280, %r1664, %r1334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1839, %r280, %r1675, %r1339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1843, %r280, %r1686, %r1344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1847, %r280, %r1699, %r1349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1851, %r280, %r1710, %r1354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1855, %r280, %r1721, %r1359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1859, %r280, %r1732, %r1364;
	// end inline asm
	// begin inline asm
	mov.b32 %r1868, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1879, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1867, %r16287, -2004318072;
	// begin inline asm
	lop3.b32 %r1865, %r842, %r1867, %r1868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1869, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1870, %r1868, %r1869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1873, %r1865, %r1870;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1876, %r853, %r1867, %r1879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1880, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1881, %r1879, %r1880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1884, %r1876, %r1881;
	// end inline asm
	shr.u32 	%r1889, %r1867, 8;
	// begin inline asm
	lop3.b32 %r1887, %r842, %r1889, %r1868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1891, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1892, %r1868, %r1891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1895, %r1887, %r1892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1898, %r853, %r1889, %r1879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1902, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1903, %r1879, %r1902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1906, %r1898, %r1903;
	// end inline asm
	// begin inline asm
	mov.b32 %r1914, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1925, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1913, %r16288, -2004318072;
	// begin inline asm
	lop3.b32 %r1911, %r842, %r1913, %r1914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1915, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1916, %r1914, %r1915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1919, %r1911, %r1916;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1922, %r853, %r1913, %r1925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1926, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1927, %r1925, %r1926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1930, %r1922, %r1927;
	// end inline asm
	shr.u32 	%r1935, %r1913, 8;
	// begin inline asm
	lop3.b32 %r1933, %r842, %r1935, %r1914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1937, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1938, %r1914, %r1937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1941, %r1933, %r1938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1944, %r853, %r1935, %r1925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1948, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1949, %r1925, %r1948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1952, %r1944, %r1949;
	// end inline asm
	// begin inline asm
	mov.b32 %r1960, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1971, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1959, %r16289, -2004318072;
	// begin inline asm
	lop3.b32 %r1957, %r842, %r1959, %r1960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1961, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1962, %r1960, %r1961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1965, %r1957, %r1962;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1968, %r853, %r1959, %r1971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1972, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1973, %r1971, %r1972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1976, %r1968, %r1973;
	// end inline asm
	shr.u32 	%r1981, %r1959, 8;
	// begin inline asm
	lop3.b32 %r1979, %r842, %r1981, %r1960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1983, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1984, %r1960, %r1983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1987, %r1979, %r1984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1990, %r853, %r1981, %r1971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1994, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1995, %r1971, %r1994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1998, %r1990, %r1995;
	// end inline asm
	// begin inline asm
	mov.b32 %r2006, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2017, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2005, %r16290, -2004318072;
	// begin inline asm
	lop3.b32 %r2003, %r842, %r2005, %r2006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2007, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2008, %r2006, %r2007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2011, %r2003, %r2008;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2014, %r853, %r2005, %r2017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2018, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2019, %r2017, %r2018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2022, %r2014, %r2019;
	// end inline asm
	shr.u32 	%r2027, %r2005, 8;
	// begin inline asm
	lop3.b32 %r2025, %r842, %r2027, %r2006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2029, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2030, %r2006, %r2029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2033, %r2025, %r2030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2036, %r853, %r2027, %r2017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2040, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2041, %r2017, %r2040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2044, %r2036, %r2041;
	// end inline asm
	// begin inline asm
	mov.b32 %r2052, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2063, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2051, %r16299, -2004318072;
	// begin inline asm
	lop3.b32 %r2049, %r842, %r2051, %r2052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2053, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2054, %r2052, %r2053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2057, %r2049, %r2054;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2060, %r853, %r2051, %r2063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2064, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2065, %r2063, %r2064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2068, %r2060, %r2065;
	// end inline asm
	shr.u32 	%r2073, %r2051, 8;
	// begin inline asm
	lop3.b32 %r2071, %r842, %r2073, %r2052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2075, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2076, %r2052, %r2075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2079, %r2071, %r2076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2082, %r853, %r2073, %r2063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2086, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2087, %r2063, %r2086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2090, %r2082, %r2087;
	// end inline asm
	// begin inline asm
	mov.b32 %r2098, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2109, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2097, %r16300, -2004318072;
	// begin inline asm
	lop3.b32 %r2095, %r842, %r2097, %r2098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2099, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2100, %r2098, %r2099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2103, %r2095, %r2100;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2106, %r853, %r2097, %r2109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2110, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2111, %r2109, %r2110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2114, %r2106, %r2111;
	// end inline asm
	shr.u32 	%r2119, %r2097, 8;
	// begin inline asm
	lop3.b32 %r2117, %r842, %r2119, %r2098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2121, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2122, %r2098, %r2121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2125, %r2117, %r2122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2128, %r853, %r2119, %r2109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2132, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2133, %r2109, %r2132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2136, %r2128, %r2133;
	// end inline asm
	// begin inline asm
	mov.b32 %r2144, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2155, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2143, %r16301, -2004318072;
	// begin inline asm
	lop3.b32 %r2141, %r842, %r2143, %r2144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2145, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2146, %r2144, %r2145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2149, %r2141, %r2146;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2152, %r853, %r2143, %r2155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2156, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2157, %r2155, %r2156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2160, %r2152, %r2157;
	// end inline asm
	shr.u32 	%r2165, %r2143, 8;
	// begin inline asm
	lop3.b32 %r2163, %r842, %r2165, %r2144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2167, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2168, %r2144, %r2167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2171, %r2163, %r2168;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2174, %r853, %r2165, %r2155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2178, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2179, %r2155, %r2178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2182, %r2174, %r2179;
	// end inline asm
	// begin inline asm
	mov.b32 %r2190, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2201, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2189, %r16302, -2004318072;
	// begin inline asm
	lop3.b32 %r2187, %r842, %r2189, %r2190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2191, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2192, %r2190, %r2191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2195, %r2187, %r2192;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2198, %r853, %r2189, %r2201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2202, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2203, %r2201, %r2202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2206, %r2198, %r2203;
	// end inline asm
	shr.u32 	%r2211, %r2189, 8;
	// begin inline asm
	lop3.b32 %r2209, %r842, %r2211, %r2190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2213, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2214, %r2190, %r2213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2217, %r2209, %r2214;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2220, %r853, %r2211, %r2201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2224, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2225, %r2201, %r2224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2228, %r2220, %r2225;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2231, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2233, %r2231, %r1873, %r1735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2237, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2239, %r2237, %r1884, %r1739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2243, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2245, %r2243, %r1895, %r1743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2249, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2251, %r2249, %r1906, %r1747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2255, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2257, %r2255, %r1919, %r1751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2261, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2263, %r2261, %r1930, %r1755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2267, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2269, %r2267, %r1941, %r1759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2273, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2275, %r2273, %r1952, %r1763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2279, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2281, %r2279, %r1965, %r1767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2285, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2287, %r2285, %r1976, %r1771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2291, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2293, %r2291, %r1987, %r1775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2297, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2299, %r2297, %r1998, %r1779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2303, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2305, %r2303, %r2011, %r1783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2309, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2311, %r2309, %r2022, %r1787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2315, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2317, %r2315, %r2033, %r1791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2321, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2323, %r2321, %r2044, %r1795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2327, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2329, %r2327, %r2057, %r1799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2333, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2335, %r2333, %r2068, %r1803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2339, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2341, %r2339, %r2079, %r1807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2345, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2347, %r2345, %r2090, %r1811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2351, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2353, %r2351, %r2103, %r1815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2357, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2359, %r2357, %r2114, %r1819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2363, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2365, %r2363, %r2125, %r1823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2369, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2371, %r2369, %r2136, %r1827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2375, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2377, %r2375, %r2149, %r1831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2381, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2383, %r2381, %r2160, %r1835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2387, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2389, %r2387, %r2171, %r1839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2393, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2395, %r2393, %r2182, %r1843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2399, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2401, %r2399, %r2195, %r1847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2405, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2407, %r2405, %r2206, %r1851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2411, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2413, %r2411, %r2217, %r1855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2417, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2419, %r2417, %r2228, %r1859;
	// end inline asm
	// begin inline asm
	mov.b32 %r2428, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2439, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2427, %r16291, -2004318072;
	// begin inline asm
	lop3.b32 %r2425, %r842, %r2427, %r2428, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2429, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2430, %r2428, %r2429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2433, %r2425, %r2430;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2436, %r853, %r2427, %r2439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2440, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2441, %r2439, %r2440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2444, %r2436, %r2441;
	// end inline asm
	shr.u32 	%r2449, %r2427, 8;
	// begin inline asm
	lop3.b32 %r2447, %r842, %r2449, %r2428, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2451, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2452, %r2428, %r2451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2455, %r2447, %r2452;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2458, %r853, %r2449, %r2439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2462, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2463, %r2439, %r2462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2466, %r2458, %r2463;
	// end inline asm
	// begin inline asm
	mov.b32 %r2474, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2485, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2473, %r16292, -2004318072;
	// begin inline asm
	lop3.b32 %r2471, %r842, %r2473, %r2474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2475, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2476, %r2474, %r2475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2479, %r2471, %r2476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2482, %r853, %r2473, %r2485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2486, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2487, %r2485, %r2486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2490, %r2482, %r2487;
	// end inline asm
	shr.u32 	%r2495, %r2473, 8;
	// begin inline asm
	lop3.b32 %r2493, %r842, %r2495, %r2474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2497, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2498, %r2474, %r2497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2501, %r2493, %r2498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2504, %r853, %r2495, %r2485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2508, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2509, %r2485, %r2508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2512, %r2504, %r2509;
	// end inline asm
	// begin inline asm
	mov.b32 %r2520, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2531, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2519, %r16293, -2004318072;
	// begin inline asm
	lop3.b32 %r2517, %r842, %r2519, %r2520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2521, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2522, %r2520, %r2521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2525, %r2517, %r2522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2528, %r853, %r2519, %r2531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2532, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2533, %r2531, %r2532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2536, %r2528, %r2533;
	// end inline asm
	shr.u32 	%r2541, %r2519, 8;
	// begin inline asm
	lop3.b32 %r2539, %r842, %r2541, %r2520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2543, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2544, %r2520, %r2543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2547, %r2539, %r2544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2550, %r853, %r2541, %r2531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2554, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2555, %r2531, %r2554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2558, %r2550, %r2555;
	// end inline asm
	// begin inline asm
	mov.b32 %r2566, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2577, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2565, %r16294, -2004318072;
	// begin inline asm
	lop3.b32 %r2563, %r842, %r2565, %r2566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2567, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2568, %r2566, %r2567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2571, %r2563, %r2568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2574, %r853, %r2565, %r2577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2578, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2579, %r2577, %r2578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2582, %r2574, %r2579;
	// end inline asm
	shr.u32 	%r2587, %r2565, 8;
	// begin inline asm
	lop3.b32 %r2585, %r842, %r2587, %r2566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2589, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2590, %r2566, %r2589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2593, %r2585, %r2590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2596, %r853, %r2587, %r2577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2600, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2601, %r2577, %r2600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2604, %r2596, %r2601;
	// end inline asm
	// begin inline asm
	mov.b32 %r2612, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2623, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2611, %r16303, -2004318072;
	// begin inline asm
	lop3.b32 %r2609, %r842, %r2611, %r2612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2613, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2614, %r2612, %r2613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2617, %r2609, %r2614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2620, %r853, %r2611, %r2623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2624, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2625, %r2623, %r2624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2628, %r2620, %r2625;
	// end inline asm
	shr.u32 	%r2633, %r2611, 8;
	// begin inline asm
	lop3.b32 %r2631, %r842, %r2633, %r2612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2635, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2636, %r2612, %r2635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2639, %r2631, %r2636;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2642, %r853, %r2633, %r2623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2646, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2647, %r2623, %r2646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2650, %r2642, %r2647;
	// end inline asm
	// begin inline asm
	mov.b32 %r2658, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2669, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2657, %r16304, -2004318072;
	// begin inline asm
	lop3.b32 %r2655, %r842, %r2657, %r2658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2659, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2660, %r2658, %r2659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2663, %r2655, %r2660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2666, %r853, %r2657, %r2669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2670, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2671, %r2669, %r2670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2674, %r2666, %r2671;
	// end inline asm
	shr.u32 	%r2679, %r2657, 8;
	// begin inline asm
	lop3.b32 %r2677, %r842, %r2679, %r2658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2681, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2682, %r2658, %r2681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2685, %r2677, %r2682;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2688, %r853, %r2679, %r2669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2692, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2693, %r2669, %r2692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2696, %r2688, %r2693;
	// end inline asm
	// begin inline asm
	mov.b32 %r2704, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2715, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2703, %r16305, -2004318072;
	// begin inline asm
	lop3.b32 %r2701, %r842, %r2703, %r2704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2705, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2706, %r2704, %r2705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2709, %r2701, %r2706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2712, %r853, %r2703, %r2715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2716, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2717, %r2715, %r2716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2720, %r2712, %r2717;
	// end inline asm
	shr.u32 	%r2725, %r2703, 8;
	// begin inline asm
	lop3.b32 %r2723, %r842, %r2725, %r2704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2727, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2728, %r2704, %r2727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2731, %r2723, %r2728;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2734, %r853, %r2725, %r2715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2738, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2739, %r2715, %r2738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2742, %r2734, %r2739;
	// end inline asm
	// begin inline asm
	mov.b32 %r2750, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2761, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2749, %r16306, -2004318072;
	// begin inline asm
	lop3.b32 %r2747, %r842, %r2749, %r2750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2751, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2752, %r2750, %r2751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2755, %r2747, %r2752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2758, %r853, %r2749, %r2761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2762, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2763, %r2761, %r2762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2766, %r2758, %r2763;
	// end inline asm
	shr.u32 	%r2771, %r2749, 8;
	// begin inline asm
	lop3.b32 %r2769, %r842, %r2771, %r2750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2773, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2774, %r2750, %r2773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2777, %r2769, %r2774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2780, %r853, %r2771, %r2761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2784, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2785, %r2761, %r2784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2788, %r2780, %r2785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2926, %r334, %r2433, %r2233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2923, %r334, %r2444, %r2239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2935, %r334, %r2455, %r2245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2932, %r334, %r2466, %r2251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2944, %r334, %r2479, %r2257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2941, %r334, %r2490, %r2263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2953, %r334, %r2501, %r2269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2950, %r334, %r2512, %r2275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2962, %r334, %r2525, %r2281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2959, %r334, %r2536, %r2287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2971, %r334, %r2547, %r2293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2968, %r334, %r2558, %r2299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2980, %r334, %r2571, %r2305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2977, %r334, %r2582, %r2311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2989, %r334, %r2593, %r2317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2986, %r334, %r2604, %r2323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2998, %r352, %r2617, %r2329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2995, %r352, %r2628, %r2335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3007, %r352, %r2639, %r2341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3004, %r352, %r2650, %r2347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3016, %r352, %r2663, %r2353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3013, %r352, %r2674, %r2359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3025, %r352, %r2685, %r2365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3022, %r352, %r2696, %r2371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3034, %r352, %r2709, %r2377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3031, %r352, %r2720, %r2383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3043, %r352, %r2731, %r2389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3040, %r352, %r2742, %r2395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3052, %r352, %r2755, %r2401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3049, %r352, %r2766, %r2407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3061, %r352, %r2777, %r2413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3058, %r352, %r2788, %r2419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2919, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2921, %r2919, %r2923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2924, %r391, %r2926, %r2921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2928, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2930, %r2928, %r2932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2933, %r391, %r2935, %r2930;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2937, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2939, %r2937, %r2941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2942, %r391, %r2944, %r2939;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2946, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2948, %r2946, %r2950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2951, %r391, %r2953, %r2948;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2955, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2957, %r2955, %r2959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2960, %r391, %r2962, %r2957;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2964, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2966, %r2964, %r2968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2969, %r391, %r2971, %r2966;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2973, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2975, %r2973, %r2977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2978, %r391, %r2980, %r2975;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2982, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2984, %r2982, %r2986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2987, %r391, %r2989, %r2984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2991, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2993, %r2991, %r2995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2996, %r394, %r2998, %r2993;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3000, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3002, %r3000, %r3004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3005, %r394, %r3007, %r3002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3009, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3011, %r3009, %r3013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3014, %r394, %r3016, %r3011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3018, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3020, %r3018, %r3022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3023, %r394, %r3025, %r3020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3027, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3029, %r3027, %r3031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3032, %r394, %r3034, %r3029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3036, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3038, %r3036, %r3040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3041, %r394, %r3043, %r3038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3045, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3047, %r3045, %r3049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3050, %r394, %r3052, %r3047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3054, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3056, %r3054, %r3058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3059, %r394, %r3061, %r3056;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3063, %r397, %r2926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3066, %r391, %r2923, %r3063;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3070, %r397, %r2935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3073, %r391, %r2932, %r3070;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3077, %r397, %r2944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3080, %r391, %r2941, %r3077;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3084, %r397, %r2953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3087, %r391, %r2950, %r3084;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3091, %r397, %r2962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3094, %r391, %r2959, %r3091;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3098, %r397, %r2971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3101, %r391, %r2968, %r3098;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3105, %r397, %r2980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3108, %r391, %r2977, %r3105;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3112, %r397, %r2989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3115, %r391, %r2986, %r3112;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3119, %r400, %r2998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3122, %r394, %r2995, %r3119;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3126, %r400, %r3007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3129, %r394, %r3004, %r3126;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3133, %r400, %r3016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3136, %r394, %r3013, %r3133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3140, %r400, %r3025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3143, %r394, %r3022, %r3140;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3147, %r400, %r3034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3150, %r394, %r3031, %r3147;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3154, %r400, %r3043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3157, %r394, %r3040, %r3154;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3161, %r400, %r3052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3164, %r394, %r3049, %r3161;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3168, %r400, %r3061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3171, %r394, %r3058, %r3168;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3342, %r3339}, {%r458, %r464, %r461, %r467}, {%r2924, %r3066}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3351, %r3348}, {%r458, %r464, %r461, %r467}, {%r2933, %r3073}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3360, %r3357}, {%r458, %r464, %r461, %r467}, {%r2942, %r3080}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3369, %r3366}, {%r458, %r464, %r461, %r467}, {%r2951, %r3087}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3378, %r3375}, {%r458, %r464, %r461, %r467}, {%r2960, %r3094}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3387, %r3384}, {%r458, %r464, %r461, %r467}, {%r2969, %r3101}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3396, %r3393}, {%r458, %r464, %r461, %r467}, {%r2978, %r3108}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3405, %r3402}, {%r458, %r464, %r461, %r467}, {%r2987, %r3115}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3414, %r3411}, {%r458, %r464, %r461, %r467}, {%r2996, %r3122}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3423, %r3420}, {%r458, %r464, %r461, %r467}, {%r3005, %r3129}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3432, %r3429}, {%r458, %r464, %r461, %r467}, {%r3014, %r3136}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3441, %r3438}, {%r458, %r464, %r461, %r467}, {%r3023, %r3143}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3450, %r3447}, {%r458, %r464, %r461, %r467}, {%r3032, %r3150}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3459, %r3456}, {%r458, %r464, %r461, %r467}, {%r3041, %r3157}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3468, %r3465}, {%r458, %r464, %r461, %r467}, {%r3050, %r3164}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3477, %r3474}, {%r458, %r464, %r461, %r467}, {%r3059, %r3171}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3335, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3337, %r3335, %r3339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3340, %r508, %r3342, %r3337;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3344, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3346, %r3344, %r3348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3349, %r508, %r3351, %r3346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3353, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3355, %r3353, %r3357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3358, %r508, %r3360, %r3355;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3362, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3364, %r3362, %r3366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3367, %r508, %r3369, %r3364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3371, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3373, %r3371, %r3375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3376, %r508, %r3378, %r3373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3380, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3382, %r3380, %r3384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3385, %r508, %r3387, %r3382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3389, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3391, %r3389, %r3393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3394, %r508, %r3396, %r3391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3398, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3400, %r3398, %r3402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3403, %r508, %r3405, %r3400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3407, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3409, %r3407, %r3411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3412, %r508, %r3414, %r3409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3416, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3418, %r3416, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3421, %r508, %r3423, %r3418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3425, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3427, %r3425, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3430, %r508, %r3432, %r3427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3434, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3436, %r3434, %r3438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3439, %r508, %r3441, %r3436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3443, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3445, %r3443, %r3447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3448, %r508, %r3450, %r3445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3452, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3454, %r3452, %r3456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3457, %r508, %r3459, %r3454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3461, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3463, %r3461, %r3465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3466, %r508, %r3468, %r3463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3470, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3472, %r3470, %r3474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3475, %r508, %r3477, %r3472;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3479, %r511, %r3342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3482, %r508, %r3339, %r3479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3486, %r511, %r3351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3489, %r508, %r3348, %r3486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3493, %r511, %r3360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3496, %r508, %r3357, %r3493;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3500, %r511, %r3369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3503, %r508, %r3366, %r3500;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3507, %r511, %r3378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3510, %r508, %r3375, %r3507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3514, %r511, %r3387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3517, %r508, %r3384, %r3514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3521, %r511, %r3396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3524, %r508, %r3393, %r3521;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3528, %r511, %r3405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3531, %r508, %r3402, %r3528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3535, %r511, %r3414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3538, %r508, %r3411, %r3535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3542, %r511, %r3423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3545, %r508, %r3420, %r3542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3549, %r511, %r3432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3552, %r508, %r3429, %r3549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3556, %r511, %r3441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3559, %r508, %r3438, %r3556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3563, %r511, %r3450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3566, %r508, %r3447, %r3563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3570, %r511, %r3459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3573, %r508, %r3456, %r3570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3577, %r511, %r3468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3580, %r508, %r3465, %r3577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3584, %r511, %r3477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3587, %r508, %r3474, %r3584;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3880, %r3883}, {%r546, %r552, %r549, %r555}, {%r3340, %r3482}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3886, %r3889}, {%r546, %r552, %r549, %r555}, {%r3349, %r3489}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3892, %r3895}, {%r546, %r552, %r549, %r555}, {%r3358, %r3496}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3898, %r3901}, {%r546, %r552, %r549, %r555}, {%r3367, %r3503}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3904, %r3907}, {%r546, %r552, %r549, %r555}, {%r3376, %r3510}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3910, %r3913}, {%r546, %r552, %r549, %r555}, {%r3385, %r3517}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3916, %r3919}, {%r546, %r552, %r549, %r555}, {%r3394, %r3524}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3922, %r3925}, {%r546, %r552, %r549, %r555}, {%r3403, %r3531}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3881, %r3884}, {%r546, %r552, %r549, %r555}, {%r3412, %r3538}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3887, %r3890}, {%r546, %r552, %r549, %r555}, {%r3421, %r3545}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3893, %r3896}, {%r546, %r552, %r549, %r555}, {%r3430, %r3552}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3899, %r3902}, {%r546, %r552, %r549, %r555}, {%r3439, %r3559}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3905, %r3908}, {%r546, %r552, %r549, %r555}, {%r3448, %r3566}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3911, %r3914}, {%r546, %r552, %r549, %r555}, {%r3457, %r3573}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3917, %r3920}, {%r546, %r552, %r549, %r555}, {%r3466, %r3580}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3923, %r3926}, {%r546, %r552, %r549, %r555}, {%r3475, %r3587}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3879, %r3880, %r3881;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3882, %r3883, %r3884;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3885, %r3886, %r3887;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3888, %r3889, %r3890;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3891, %r3892, %r3893;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3894, %r3895, %r3896;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3897, %r3898, %r3899;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3900, %r3901, %r3902;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3903, %r3904, %r3905;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3906, %r3907, %r3908;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3909, %r3910, %r3911;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3912, %r3913, %r3914;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3915, %r3916, %r3917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3918, %r3919, %r3920;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3921, %r3922, %r3923;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3924, %r3925, %r3926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3927, %r3880, %r3881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3930, %r3883, %r3884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3933, %r3886, %r3887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3936, %r3889, %r3890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3939, %r3892, %r3893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3942, %r3895, %r3896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3945, %r3898, %r3899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3948, %r3901, %r3902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3951, %r3904, %r3905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3954, %r3907, %r3908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3957, %r3910, %r3911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3960, %r3913, %r3914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3963, %r3916, %r3917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3966, %r3919, %r3920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3969, %r3922, %r3923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3972, %r3925, %r3926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3975, %r132, %r3879;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3978, %r132, %r3882;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3981, %r132, %r3885;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3984, %r132, %r3888;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3987, %r132, %r3891;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3990, %r132, %r3894;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3993, %r132, %r3897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3996, %r132, %r3900;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3999, %r132, %r3903;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4002, %r132, %r3906;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4005, %r132, %r3909;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4008, %r132, %r3912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4011, %r132, %r3915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4014, %r132, %r3918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4017, %r132, %r3921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4020, %r132, %r3924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4023, %r133, %r3927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4026, %r133, %r3930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4029, %r133, %r3933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4032, %r133, %r3936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4035, %r133, %r3939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4038, %r133, %r3942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4041, %r133, %r3945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4044, %r133, %r3948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4047, %r133, %r3951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4050, %r133, %r3954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4053, %r133, %r3957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4056, %r133, %r3960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4059, %r133, %r3963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4062, %r133, %r3966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4065, %r133, %r3969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4068, %r133, %r3972;
	// end inline asm
	mov.u16 	%rs412, -14592;
	// begin inline asm
	mov.b32 %r4071, {%rs412, %rs412};
	// end inline asm
	mov.u16 	%rs414, 18176;
	// begin inline asm
	mov.b32 %r4072, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4073, %r3975, %r4071;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4076, %r4073, %r4072;
	// end inline asm
	// begin inline asm
	mov.b32 %r4079, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4080, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4081, %r3978, %r4079;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4084, %r4081, %r4080;
	// end inline asm
	// begin inline asm
	mov.b32 %r4087, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4088, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4089, %r3981, %r4087;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4092, %r4089, %r4088;
	// end inline asm
	// begin inline asm
	mov.b32 %r4095, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4096, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4097, %r3984, %r4095;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4100, %r4097, %r4096;
	// end inline asm
	// begin inline asm
	mov.b32 %r4103, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4104, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4105, %r3987, %r4103;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4108, %r4105, %r4104;
	// end inline asm
	// begin inline asm
	mov.b32 %r4111, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4112, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4113, %r3990, %r4111;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4116, %r4113, %r4112;
	// end inline asm
	// begin inline asm
	mov.b32 %r4119, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4120, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4121, %r3993, %r4119;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4124, %r4121, %r4120;
	// end inline asm
	// begin inline asm
	mov.b32 %r4127, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4128, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4129, %r3996, %r4127;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4132, %r4129, %r4128;
	// end inline asm
	// begin inline asm
	mov.b32 %r4135, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4136, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4137, %r3999, %r4135;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4140, %r4137, %r4136;
	// end inline asm
	// begin inline asm
	mov.b32 %r4143, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4144, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4145, %r4002, %r4143;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4148, %r4145, %r4144;
	// end inline asm
	// begin inline asm
	mov.b32 %r4151, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4152, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4153, %r4005, %r4151;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4156, %r4153, %r4152;
	// end inline asm
	// begin inline asm
	mov.b32 %r4159, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4160, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4161, %r4008, %r4159;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4164, %r4161, %r4160;
	// end inline asm
	// begin inline asm
	mov.b32 %r4167, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4168, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4169, %r4011, %r4167;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4172, %r4169, %r4168;
	// end inline asm
	// begin inline asm
	mov.b32 %r4175, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4176, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4177, %r4014, %r4175;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4180, %r4177, %r4176;
	// end inline asm
	// begin inline asm
	mov.b32 %r4183, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4184, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4185, %r4017, %r4183;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4188, %r4185, %r4184;
	// end inline asm
	// begin inline asm
	mov.b32 %r4191, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4192, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4193, %r4020, %r4191;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4196, %r4193, %r4192;
	// end inline asm
	// begin inline asm
	mov.b32 %r4199, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4200, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4201, %r4023, %r4199;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4204, %r4201, %r4200;
	// end inline asm
	// begin inline asm
	mov.b32 %r4207, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4208, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4209, %r4026, %r4207;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4212, %r4209, %r4208;
	// end inline asm
	// begin inline asm
	mov.b32 %r4215, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4216, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4217, %r4029, %r4215;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4220, %r4217, %r4216;
	// end inline asm
	// begin inline asm
	mov.b32 %r4223, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4225, %r4032, %r4223;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4228, %r4225, %r4224;
	// end inline asm
	// begin inline asm
	mov.b32 %r4231, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4232, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4233, %r4035, %r4231;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4236, %r4233, %r4232;
	// end inline asm
	// begin inline asm
	mov.b32 %r4239, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4240, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4241, %r4038, %r4239;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4244, %r4241, %r4240;
	// end inline asm
	// begin inline asm
	mov.b32 %r4247, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4248, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4249, %r4041, %r4247;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4252, %r4249, %r4248;
	// end inline asm
	// begin inline asm
	mov.b32 %r4255, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4256, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4257, %r4044, %r4255;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4260, %r4257, %r4256;
	// end inline asm
	// begin inline asm
	mov.b32 %r4263, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4264, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4265, %r4047, %r4263;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4268, %r4265, %r4264;
	// end inline asm
	// begin inline asm
	mov.b32 %r4271, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4272, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4273, %r4050, %r4271;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4276, %r4273, %r4272;
	// end inline asm
	// begin inline asm
	mov.b32 %r4279, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4280, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4281, %r4053, %r4279;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4284, %r4281, %r4280;
	// end inline asm
	// begin inline asm
	mov.b32 %r4287, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4288, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4289, %r4056, %r4287;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4292, %r4289, %r4288;
	// end inline asm
	// begin inline asm
	mov.b32 %r4295, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4296, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4297, %r4059, %r4295;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4300, %r4297, %r4296;
	// end inline asm
	// begin inline asm
	mov.b32 %r4303, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4304, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4305, %r4062, %r4303;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4308, %r4305, %r4304;
	// end inline asm
	// begin inline asm
	mov.b32 %r4311, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4312, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4313, %r4065, %r4311;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4316, %r4313, %r4312;
	// end inline asm
	// begin inline asm
	mov.b32 %r4319, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4320, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4321, %r4068, %r4319;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4324, %r4321, %r4320;
	// end inline asm
	// begin inline asm
	mov.b32 %r4330, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4328, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4329, %r4330, %r4328;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4332, %r4076, %r4329;
	// end inline asm
	// begin inline asm
	mov.b32 %r4335, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4336, %r4330, %r4335;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4339, %r4084, %r4336;
	// end inline asm
	// begin inline asm
	mov.b32 %r4342, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4343, %r4330, %r4342;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4346, %r4092, %r4343;
	// end inline asm
	// begin inline asm
	mov.b32 %r4349, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4350, %r4330, %r4349;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4353, %r4100, %r4350;
	// end inline asm
	mov.u32 	%r4359, 25152;
	// begin inline asm
	prmt.b32 %r4356, %r4332, %r4346, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4360, %r4339, %r4353, %r4359;
	// end inline asm
	shl.b32 	%r4367, %r4360, 4;
	mov.u32 	%r4365, 252645135;
	// begin inline asm
	lop3.b32 %r4364, %r4365, %r4356, %r4367, 202;
	// end inline asm
	xor.b32  	%r16151, %r4364, -2004318072;
	// begin inline asm
	mov.b32 %r4371, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4369, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4370, %r4371, %r4369;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4373, %r4108, %r4370;
	// end inline asm
	// begin inline asm
	mov.b32 %r4376, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4377, %r4371, %r4376;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4380, %r4116, %r4377;
	// end inline asm
	// begin inline asm
	mov.b32 %r4383, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4384, %r4371, %r4383;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4387, %r4124, %r4384;
	// end inline asm
	// begin inline asm
	mov.b32 %r4390, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4391, %r4371, %r4390;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4394, %r4132, %r4391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4397, %r4373, %r4387, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4401, %r4380, %r4394, %r4359;
	// end inline asm
	shl.b32 	%r4408, %r4401, 4;
	// begin inline asm
	lop3.b32 %r4405, %r4365, %r4397, %r4408, 202;
	// end inline asm
	xor.b32  	%r16152, %r4405, -2004318072;
	// begin inline asm
	mov.b32 %r4412, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4410, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4411, %r4412, %r4410;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4414, %r4140, %r4411;
	// end inline asm
	// begin inline asm
	mov.b32 %r4417, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4418, %r4412, %r4417;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4421, %r4148, %r4418;
	// end inline asm
	// begin inline asm
	mov.b32 %r4424, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4425, %r4412, %r4424;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4428, %r4156, %r4425;
	// end inline asm
	// begin inline asm
	mov.b32 %r4431, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4432, %r4412, %r4431;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4435, %r4164, %r4432;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4438, %r4414, %r4428, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4442, %r4421, %r4435, %r4359;
	// end inline asm
	shl.b32 	%r4449, %r4442, 4;
	// begin inline asm
	lop3.b32 %r4446, %r4365, %r4438, %r4449, 202;
	// end inline asm
	xor.b32  	%r16153, %r4446, -2004318072;
	// begin inline asm
	mov.b32 %r4453, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4451, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4452, %r4453, %r4451;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4455, %r4172, %r4452;
	// end inline asm
	// begin inline asm
	mov.b32 %r4458, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4459, %r4453, %r4458;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4462, %r4180, %r4459;
	// end inline asm
	// begin inline asm
	mov.b32 %r4465, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4466, %r4453, %r4465;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4469, %r4188, %r4466;
	// end inline asm
	// begin inline asm
	mov.b32 %r4472, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4473, %r4453, %r4472;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4476, %r4196, %r4473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4479, %r4455, %r4469, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4483, %r4462, %r4476, %r4359;
	// end inline asm
	shl.b32 	%r4490, %r4483, 4;
	// begin inline asm
	lop3.b32 %r4487, %r4365, %r4479, %r4490, 202;
	// end inline asm
	xor.b32  	%r16154, %r4487, -2004318072;
	// begin inline asm
	mov.b32 %r4494, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4492, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4493, %r4494, %r4492;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4496, %r4204, %r4493;
	// end inline asm
	// begin inline asm
	mov.b32 %r4499, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4500, %r4494, %r4499;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4503, %r4212, %r4500;
	// end inline asm
	// begin inline asm
	mov.b32 %r4506, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4507, %r4494, %r4506;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4510, %r4220, %r4507;
	// end inline asm
	// begin inline asm
	mov.b32 %r4513, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4514, %r4494, %r4513;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4517, %r4228, %r4514;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4520, %r4496, %r4510, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4524, %r4503, %r4517, %r4359;
	// end inline asm
	shl.b32 	%r4531, %r4524, 4;
	// begin inline asm
	lop3.b32 %r4528, %r4365, %r4520, %r4531, 202;
	// end inline asm
	xor.b32  	%r16155, %r4528, -2004318072;
	// begin inline asm
	mov.b32 %r4535, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4533, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4534, %r4535, %r4533;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4537, %r4236, %r4534;
	// end inline asm
	// begin inline asm
	mov.b32 %r4540, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4541, %r4535, %r4540;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4544, %r4244, %r4541;
	// end inline asm
	// begin inline asm
	mov.b32 %r4547, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4548, %r4535, %r4547;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4551, %r4252, %r4548;
	// end inline asm
	// begin inline asm
	mov.b32 %r4554, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4555, %r4535, %r4554;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4558, %r4260, %r4555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4561, %r4537, %r4551, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4565, %r4544, %r4558, %r4359;
	// end inline asm
	shl.b32 	%r4572, %r4565, 4;
	// begin inline asm
	lop3.b32 %r4569, %r4365, %r4561, %r4572, 202;
	// end inline asm
	xor.b32  	%r16156, %r4569, -2004318072;
	// begin inline asm
	mov.b32 %r4576, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4574, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4575, %r4576, %r4574;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4578, %r4268, %r4575;
	// end inline asm
	// begin inline asm
	mov.b32 %r4581, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4582, %r4576, %r4581;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4585, %r4276, %r4582;
	// end inline asm
	// begin inline asm
	mov.b32 %r4588, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4589, %r4576, %r4588;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4592, %r4284, %r4589;
	// end inline asm
	// begin inline asm
	mov.b32 %r4595, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4596, %r4576, %r4595;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4599, %r4292, %r4596;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4602, %r4578, %r4592, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4606, %r4585, %r4599, %r4359;
	// end inline asm
	shl.b32 	%r4613, %r4606, 4;
	// begin inline asm
	lop3.b32 %r4610, %r4365, %r4602, %r4613, 202;
	// end inline asm
	xor.b32  	%r16157, %r4610, -2004318072;
	// begin inline asm
	mov.b32 %r4617, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4615, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4616, %r4617, %r4615;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4619, %r4300, %r4616;
	// end inline asm
	// begin inline asm
	mov.b32 %r4622, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4623, %r4617, %r4622;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4626, %r4308, %r4623;
	// end inline asm
	// begin inline asm
	mov.b32 %r4629, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4630, %r4617, %r4629;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4633, %r4316, %r4630;
	// end inline asm
	// begin inline asm
	mov.b32 %r4636, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4637, %r4617, %r4636;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4640, %r4324, %r4637;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4643, %r4619, %r4633, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4647, %r4626, %r4640, %r4359;
	// end inline asm
	shl.b32 	%r4654, %r4647, 4;
	// begin inline asm
	lop3.b32 %r4651, %r4365, %r4643, %r4654, 202;
	// end inline asm
	xor.b32  	%r16158, %r4651, -2004318072;
	add.s32 	%r16159, %r83, %r16103;
	mul.wide.u32 	%rd103, %r16159, 4;
	add.s64 	%rd104, %rd43, %rd103;
	st.shared.u32 	[%rd104], %r16151;
	add.s32 	%r16160, %r84, %r16103;
	mul.wide.u32 	%rd105, %r16160, 4;
	add.s64 	%rd106, %rd43, %rd105;
	st.shared.u32 	[%rd106], %r16152;
	add.s32 	%r16161, %r85, %r16103;
	mul.wide.u32 	%rd107, %r16161, 4;
	add.s64 	%rd108, %rd43, %rd107;
	st.shared.u32 	[%rd108], %r16153;
	add.s32 	%r16162, %r86, %r16103;
	mul.wide.u32 	%rd109, %r16162, 4;
	add.s64 	%rd110, %rd43, %rd109;
	st.shared.u32 	[%rd110], %r16154;
	add.s32 	%r16163, %r87, %r16103;
	mul.wide.u32 	%rd111, %r16163, 4;
	add.s64 	%rd112, %rd43, %rd111;
	st.shared.u32 	[%rd112], %r16155;
	add.s32 	%r16164, %r88, %r16103;
	mul.wide.u32 	%rd113, %r16164, 4;
	add.s64 	%rd114, %rd43, %rd113;
	st.shared.u32 	[%rd114], %r16156;
	add.s32 	%r16165, %r89, %r16103;
	mul.wide.u32 	%rd115, %r16165, 4;
	add.s64 	%rd116, %rd43, %rd115;
	st.shared.u32 	[%rd116], %r16157;
	add.s32 	%r16166, %r90, %r16103;
	mul.wide.u32 	%rd117, %r16166, 4;
	add.s64 	%rd118, %rd43, %rd117;
	st.shared.u32 	[%rd118], %r16158;
	ld.shared.u32 	%r16283, [%rd88];
	ld.shared.u32 	%r16284, [%rd90];
	ld.shared.u32 	%r16285, [%rd92];
	ld.shared.u32 	%r16286, [%rd94];
	ld.shared.u32 	%r16295, [%rd96];
	ld.shared.u32 	%r16296, [%rd98];
	ld.shared.u32 	%r16297, [%rd100];
	ld.shared.u32 	%r16298, [%rd102];
	// begin inline asm
	mov.b32 %r4660, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4671, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4659, %r16283, -2004318072;
	// begin inline asm
	lop3.b32 %r4657, %r842, %r4659, %r4660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4661, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4662, %r4660, %r4661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4665, %r4657, %r4662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4668, %r853, %r4659, %r4671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4672, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4673, %r4671, %r4672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4676, %r4668, %r4673;
	// end inline asm
	shr.u32 	%r4681, %r4659, 8;
	// begin inline asm
	lop3.b32 %r4679, %r842, %r4681, %r4660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4683, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4684, %r4660, %r4683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4687, %r4679, %r4684;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4690, %r853, %r4681, %r4671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4694, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4695, %r4671, %r4694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4698, %r4690, %r4695;
	// end inline asm
	// begin inline asm
	mov.b32 %r4706, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4717, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4705, %r16284, -2004318072;
	// begin inline asm
	lop3.b32 %r4703, %r842, %r4705, %r4706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4707, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4708, %r4706, %r4707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4711, %r4703, %r4708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4714, %r853, %r4705, %r4717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4718, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4719, %r4717, %r4718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4722, %r4714, %r4719;
	// end inline asm
	shr.u32 	%r4727, %r4705, 8;
	// begin inline asm
	lop3.b32 %r4725, %r842, %r4727, %r4706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4729, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4730, %r4706, %r4729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4733, %r4725, %r4730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4736, %r853, %r4727, %r4717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4740, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4741, %r4717, %r4740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4744, %r4736, %r4741;
	// end inline asm
	// begin inline asm
	mov.b32 %r4752, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4763, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4751, %r16285, -2004318072;
	// begin inline asm
	lop3.b32 %r4749, %r842, %r4751, %r4752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4753, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4754, %r4752, %r4753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4757, %r4749, %r4754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4760, %r853, %r4751, %r4763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4764, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4765, %r4763, %r4764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4768, %r4760, %r4765;
	// end inline asm
	shr.u32 	%r4773, %r4751, 8;
	// begin inline asm
	lop3.b32 %r4771, %r842, %r4773, %r4752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4775, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4776, %r4752, %r4775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4779, %r4771, %r4776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4782, %r853, %r4773, %r4763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4786, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4787, %r4763, %r4786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4790, %r4782, %r4787;
	// end inline asm
	// begin inline asm
	mov.b32 %r4798, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4809, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4797, %r16286, -2004318072;
	// begin inline asm
	lop3.b32 %r4795, %r842, %r4797, %r4798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4799, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4800, %r4798, %r4799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4803, %r4795, %r4800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4806, %r853, %r4797, %r4809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4810, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4811, %r4809, %r4810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4814, %r4806, %r4811;
	// end inline asm
	shr.u32 	%r4819, %r4797, 8;
	// begin inline asm
	lop3.b32 %r4817, %r842, %r4819, %r4798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4821, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4822, %r4798, %r4821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4825, %r4817, %r4822;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4828, %r853, %r4819, %r4809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4832, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4833, %r4809, %r4832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4836, %r4828, %r4833;
	// end inline asm
	// begin inline asm
	mov.b32 %r4844, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4855, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4843, %r16295, -2004318072;
	// begin inline asm
	lop3.b32 %r4841, %r842, %r4843, %r4844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4845, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4846, %r4844, %r4845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4849, %r4841, %r4846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4852, %r853, %r4843, %r4855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4856, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4857, %r4855, %r4856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4860, %r4852, %r4857;
	// end inline asm
	shr.u32 	%r4865, %r4843, 8;
	// begin inline asm
	lop3.b32 %r4863, %r842, %r4865, %r4844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4867, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4868, %r4844, %r4867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4871, %r4863, %r4868;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4874, %r853, %r4865, %r4855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4878, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4879, %r4855, %r4878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4882, %r4874, %r4879;
	// end inline asm
	// begin inline asm
	mov.b32 %r4890, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4901, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4889, %r16296, -2004318072;
	// begin inline asm
	lop3.b32 %r4887, %r842, %r4889, %r4890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4891, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4892, %r4890, %r4891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4895, %r4887, %r4892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4898, %r853, %r4889, %r4901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4902, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4903, %r4901, %r4902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4906, %r4898, %r4903;
	// end inline asm
	shr.u32 	%r4911, %r4889, 8;
	// begin inline asm
	lop3.b32 %r4909, %r842, %r4911, %r4890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4913, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4914, %r4890, %r4913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4917, %r4909, %r4914;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4920, %r853, %r4911, %r4901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4924, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4925, %r4901, %r4924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4928, %r4920, %r4925;
	// end inline asm
	// begin inline asm
	mov.b32 %r4936, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4947, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4935, %r16297, -2004318072;
	// begin inline asm
	lop3.b32 %r4933, %r842, %r4935, %r4936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4937, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4938, %r4936, %r4937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4941, %r4933, %r4938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4944, %r853, %r4935, %r4947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4948, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4949, %r4947, %r4948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4952, %r4944, %r4949;
	// end inline asm
	shr.u32 	%r4957, %r4935, 8;
	// begin inline asm
	lop3.b32 %r4955, %r842, %r4957, %r4936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4959, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4960, %r4936, %r4959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4963, %r4955, %r4960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4966, %r853, %r4957, %r4947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4970, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4971, %r4947, %r4970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4974, %r4966, %r4971;
	// end inline asm
	// begin inline asm
	mov.b32 %r4982, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4993, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4981, %r16298, -2004318072;
	// begin inline asm
	lop3.b32 %r4979, %r842, %r4981, %r4982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4983, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4984, %r4982, %r4983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4987, %r4979, %r4984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4990, %r853, %r4981, %r4993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4994, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4995, %r4993, %r4994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4998, %r4990, %r4995;
	// end inline asm
	shr.u32 	%r5003, %r4981, 8;
	// begin inline asm
	lop3.b32 %r5001, %r842, %r5003, %r4982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5005, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5006, %r4982, %r5005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5009, %r5001, %r5006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5012, %r853, %r5003, %r4993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5016, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5017, %r4993, %r5016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5020, %r5012, %r5017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5023, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5025, %r5023, %r4665;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5028, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5030, %r5028, %r4676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5033, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5035, %r5033, %r4687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5038, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5040, %r5038, %r4698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5043, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5045, %r5043, %r4711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5048, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5050, %r5048, %r4722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5053, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5055, %r5053, %r4733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5058, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5060, %r5058, %r4744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5063, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5065, %r5063, %r4757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5068, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5070, %r5068, %r4768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5073, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5075, %r5073, %r4779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5078, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5080, %r5078, %r4790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5083, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5085, %r5083, %r4803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5088, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5090, %r5088, %r4814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5093, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5095, %r5093, %r4825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5098, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5100, %r5098, %r4836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5103, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5105, %r5103, %r4849;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5108, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5110, %r5108, %r4860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5113, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5115, %r5113, %r4871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5118, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5120, %r5118, %r4882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5123, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5125, %r5123, %r4895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5128, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5130, %r5128, %r4906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5133, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5135, %r5133, %r4917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5138, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5140, %r5138, %r4928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5143, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5145, %r5143, %r4941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5148, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5150, %r5148, %r4952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5153, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5155, %r5153, %r4963;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5158, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5160, %r5158, %r4974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5163, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5165, %r5163, %r4987;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5168, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5170, %r5168, %r4998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5173, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5175, %r5173, %r5009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5178, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5180, %r5178, %r5020;
	// end inline asm
	// begin inline asm
	mov.b32 %r5188, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5199, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5185, %r842, %r1867, %r5188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5189, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5190, %r5188, %r5189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5193, %r5185, %r5190;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5196, %r853, %r1867, %r5199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5200, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5201, %r5199, %r5200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5204, %r5196, %r5201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5207, %r842, %r1889, %r5188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5211, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5212, %r5188, %r5211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5215, %r5207, %r5212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5218, %r853, %r1889, %r5199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5222, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5223, %r5199, %r5222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5226, %r5218, %r5223;
	// end inline asm
	// begin inline asm
	mov.b32 %r5234, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5245, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5231, %r842, %r1913, %r5234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5235, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5236, %r5234, %r5235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5239, %r5231, %r5236;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5242, %r853, %r1913, %r5245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5246, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5247, %r5245, %r5246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5250, %r5242, %r5247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5253, %r842, %r1935, %r5234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5257, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5258, %r5234, %r5257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5261, %r5253, %r5258;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5264, %r853, %r1935, %r5245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5268, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5269, %r5245, %r5268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5272, %r5264, %r5269;
	// end inline asm
	// begin inline asm
	mov.b32 %r5280, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5291, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5277, %r842, %r1959, %r5280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5281, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5282, %r5280, %r5281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5285, %r5277, %r5282;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5288, %r853, %r1959, %r5291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5292, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5293, %r5291, %r5292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5296, %r5288, %r5293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5299, %r842, %r1981, %r5280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5303, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5304, %r5280, %r5303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5307, %r5299, %r5304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5310, %r853, %r1981, %r5291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5314, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5315, %r5291, %r5314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5318, %r5310, %r5315;
	// end inline asm
	// begin inline asm
	mov.b32 %r5326, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5337, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5323, %r842, %r2005, %r5326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5327, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5328, %r5326, %r5327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5331, %r5323, %r5328;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5334, %r853, %r2005, %r5337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5338, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5339, %r5337, %r5338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5342, %r5334, %r5339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5345, %r842, %r2027, %r5326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5349, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5350, %r5326, %r5349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5353, %r5345, %r5350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5356, %r853, %r2027, %r5337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5360, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5361, %r5337, %r5360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5364, %r5356, %r5361;
	// end inline asm
	// begin inline asm
	mov.b32 %r5372, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5383, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5369, %r842, %r2051, %r5372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5373, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5374, %r5372, %r5373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5377, %r5369, %r5374;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5380, %r853, %r2051, %r5383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5384, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5385, %r5383, %r5384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5388, %r5380, %r5385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5391, %r842, %r2073, %r5372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5395, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5396, %r5372, %r5395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5399, %r5391, %r5396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5402, %r853, %r2073, %r5383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5406, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5407, %r5383, %r5406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5410, %r5402, %r5407;
	// end inline asm
	// begin inline asm
	mov.b32 %r5418, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5429, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5415, %r842, %r2097, %r5418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5419, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5420, %r5418, %r5419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5423, %r5415, %r5420;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5426, %r853, %r2097, %r5429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5430, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5431, %r5429, %r5430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5434, %r5426, %r5431;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5437, %r842, %r2119, %r5418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5441, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5442, %r5418, %r5441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5445, %r5437, %r5442;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5448, %r853, %r2119, %r5429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5452, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5453, %r5429, %r5452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5456, %r5448, %r5453;
	// end inline asm
	// begin inline asm
	mov.b32 %r5464, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5475, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5461, %r842, %r2143, %r5464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5465, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5466, %r5464, %r5465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5469, %r5461, %r5466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5472, %r853, %r2143, %r5475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5476, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5477, %r5475, %r5476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5480, %r5472, %r5477;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5483, %r842, %r2165, %r5464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5487, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5488, %r5464, %r5487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5491, %r5483, %r5488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5494, %r853, %r2165, %r5475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5498, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5499, %r5475, %r5498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5502, %r5494, %r5499;
	// end inline asm
	// begin inline asm
	mov.b32 %r5510, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5521, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5507, %r842, %r2189, %r5510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5511, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5512, %r5510, %r5511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5515, %r5507, %r5512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5518, %r853, %r2189, %r5521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5522, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5523, %r5521, %r5522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5526, %r5518, %r5523;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5529, %r842, %r2211, %r5510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5533, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5534, %r5510, %r5533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5537, %r5529, %r5534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5540, %r853, %r2211, %r5521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5544, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5545, %r5521, %r5544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5548, %r5540, %r5545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5551, %r262, %r5193, %r5025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5555, %r262, %r5204, %r5030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5559, %r262, %r5215, %r5035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5563, %r262, %r5226, %r5040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5567, %r262, %r5239, %r5045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5571, %r262, %r5250, %r5050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5575, %r262, %r5261, %r5055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5579, %r262, %r5272, %r5060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5583, %r262, %r5285, %r5065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5587, %r262, %r5296, %r5070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5591, %r262, %r5307, %r5075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5595, %r262, %r5318, %r5080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5599, %r262, %r5331, %r5085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5603, %r262, %r5342, %r5090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5607, %r262, %r5353, %r5095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5611, %r262, %r5364, %r5100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5615, %r280, %r5377, %r5105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5619, %r280, %r5388, %r5110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5623, %r280, %r5399, %r5115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5627, %r280, %r5410, %r5120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5631, %r280, %r5423, %r5125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5635, %r280, %r5434, %r5130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5639, %r280, %r5445, %r5135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5643, %r280, %r5456, %r5140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5647, %r280, %r5469, %r5145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5651, %r280, %r5480, %r5150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5655, %r280, %r5491, %r5155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5659, %r280, %r5502, %r5160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5663, %r280, %r5515, %r5165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5667, %r280, %r5526, %r5170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5671, %r280, %r5537, %r5175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5675, %r280, %r5548, %r5180;
	// end inline asm
	// begin inline asm
	mov.b32 %r5684, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5695, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5681, %r842, %r2427, %r5684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5685, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5686, %r5684, %r5685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5689, %r5681, %r5686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5692, %r853, %r2427, %r5695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5696, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5697, %r5695, %r5696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5700, %r5692, %r5697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5703, %r842, %r2449, %r5684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5707, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5708, %r5684, %r5707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5711, %r5703, %r5708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5714, %r853, %r2449, %r5695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5718, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5719, %r5695, %r5718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5722, %r5714, %r5719;
	// end inline asm
	// begin inline asm
	mov.b32 %r5730, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5741, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5727, %r842, %r2473, %r5730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5731, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5732, %r5730, %r5731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5735, %r5727, %r5732;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5738, %r853, %r2473, %r5741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5742, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5743, %r5741, %r5742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5746, %r5738, %r5743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5749, %r842, %r2495, %r5730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5753, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5754, %r5730, %r5753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5757, %r5749, %r5754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5760, %r853, %r2495, %r5741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5764, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5765, %r5741, %r5764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5768, %r5760, %r5765;
	// end inline asm
	// begin inline asm
	mov.b32 %r5776, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5787, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5773, %r842, %r2519, %r5776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5777, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5778, %r5776, %r5777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5781, %r5773, %r5778;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5784, %r853, %r2519, %r5787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5788, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5789, %r5787, %r5788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5792, %r5784, %r5789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5795, %r842, %r2541, %r5776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5799, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5800, %r5776, %r5799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5803, %r5795, %r5800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5806, %r853, %r2541, %r5787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5810, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5811, %r5787, %r5810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5814, %r5806, %r5811;
	// end inline asm
	// begin inline asm
	mov.b32 %r5822, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5833, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5819, %r842, %r2565, %r5822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5823, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5824, %r5822, %r5823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5827, %r5819, %r5824;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5830, %r853, %r2565, %r5833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5834, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5835, %r5833, %r5834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5838, %r5830, %r5835;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5841, %r842, %r2587, %r5822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5845, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5846, %r5822, %r5845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5849, %r5841, %r5846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5852, %r853, %r2587, %r5833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5856, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5857, %r5833, %r5856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5860, %r5852, %r5857;
	// end inline asm
	// begin inline asm
	mov.b32 %r5868, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5879, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5865, %r842, %r2611, %r5868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5869, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5870, %r5868, %r5869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5873, %r5865, %r5870;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5876, %r853, %r2611, %r5879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5880, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5881, %r5879, %r5880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5884, %r5876, %r5881;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5887, %r842, %r2633, %r5868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5891, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5892, %r5868, %r5891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5895, %r5887, %r5892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5898, %r853, %r2633, %r5879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5902, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5903, %r5879, %r5902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5906, %r5898, %r5903;
	// end inline asm
	// begin inline asm
	mov.b32 %r5914, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5925, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5911, %r842, %r2657, %r5914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5915, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5916, %r5914, %r5915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5919, %r5911, %r5916;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5922, %r853, %r2657, %r5925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5926, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5927, %r5925, %r5926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5930, %r5922, %r5927;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5933, %r842, %r2679, %r5914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5937, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5938, %r5914, %r5937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5941, %r5933, %r5938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5944, %r853, %r2679, %r5925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5948, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5949, %r5925, %r5948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5952, %r5944, %r5949;
	// end inline asm
	// begin inline asm
	mov.b32 %r5960, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5971, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5957, %r842, %r2703, %r5960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5961, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5962, %r5960, %r5961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5965, %r5957, %r5962;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5968, %r853, %r2703, %r5971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5972, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5973, %r5971, %r5972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5976, %r5968, %r5973;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5979, %r842, %r2725, %r5960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5983, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5984, %r5960, %r5983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5987, %r5979, %r5984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5990, %r853, %r2725, %r5971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5994, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5995, %r5971, %r5994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5998, %r5990, %r5995;
	// end inline asm
	// begin inline asm
	mov.b32 %r6006, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6017, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6003, %r842, %r2749, %r6006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6007, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6008, %r6006, %r6007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6011, %r6003, %r6008;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6014, %r853, %r2749, %r6017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6018, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6019, %r6017, %r6018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6022, %r6014, %r6019;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6025, %r842, %r2771, %r6006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6029, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6030, %r6006, %r6029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6033, %r6025, %r6030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6036, %r853, %r2771, %r6017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6040, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6041, %r6017, %r6040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6044, %r6036, %r6041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6047, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6049, %r6047, %r5689, %r5551;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6053, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6055, %r6053, %r5700, %r5555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6059, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6061, %r6059, %r5711, %r5559;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6065, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6067, %r6065, %r5722, %r5563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6071, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6073, %r6071, %r5735, %r5567;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6077, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6079, %r6077, %r5746, %r5571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6083, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6085, %r6083, %r5757, %r5575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6089, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6091, %r6089, %r5768, %r5579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6095, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6097, %r6095, %r5781, %r5583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6101, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6103, %r6101, %r5792, %r5587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6107, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6109, %r6107, %r5803, %r5591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6113, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6115, %r6113, %r5814, %r5595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6119, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6121, %r6119, %r5827, %r5599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6125, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6127, %r6125, %r5838, %r5603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6131, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6133, %r6131, %r5849, %r5607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6137, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6139, %r6137, %r5860, %r5611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6143, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6145, %r6143, %r5873, %r5615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6149, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6151, %r6149, %r5884, %r5619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6155, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6157, %r6155, %r5895, %r5623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6161, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6163, %r6161, %r5906, %r5627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6167, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6169, %r6167, %r5919, %r5631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6173, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6175, %r6173, %r5930, %r5635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6179, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6181, %r6179, %r5941, %r5639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6185, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6187, %r6185, %r5952, %r5643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6191, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6193, %r6191, %r5965, %r5647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6197, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6199, %r6197, %r5976, %r5651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6203, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6205, %r6203, %r5987, %r5655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6209, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6211, %r6209, %r5998, %r5659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6215, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6217, %r6215, %r6011, %r5663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6221, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6223, %r6221, %r6022, %r5667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6227, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6229, %r6227, %r6033, %r5671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6233, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6235, %r6233, %r6044, %r5675;
	// end inline asm
	// begin inline asm
	mov.b32 %r6244, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6255, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6241, %r842, %r843, %r6244, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6245, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6246, %r6244, %r6245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6249, %r6241, %r6246;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6252, %r853, %r843, %r6255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6256, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6257, %r6255, %r6256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6260, %r6252, %r6257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6263, %r842, %r865, %r6244, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6267, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6268, %r6244, %r6267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6271, %r6263, %r6268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6274, %r853, %r865, %r6255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6278, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6279, %r6255, %r6278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6282, %r6274, %r6279;
	// end inline asm
	// begin inline asm
	mov.b32 %r6290, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6301, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6287, %r842, %r889, %r6290, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6291, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6292, %r6290, %r6291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6295, %r6287, %r6292;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6298, %r853, %r889, %r6301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6302, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6303, %r6301, %r6302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6306, %r6298, %r6303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6309, %r842, %r911, %r6290, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6313, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6314, %r6290, %r6313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6317, %r6309, %r6314;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6320, %r853, %r911, %r6301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6324, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6325, %r6301, %r6324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6328, %r6320, %r6325;
	// end inline asm
	// begin inline asm
	mov.b32 %r6336, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6347, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6333, %r842, %r935, %r6336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6337, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6338, %r6336, %r6337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6341, %r6333, %r6338;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6344, %r853, %r935, %r6347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6348, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6349, %r6347, %r6348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6352, %r6344, %r6349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6355, %r842, %r957, %r6336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6359, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6360, %r6336, %r6359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6363, %r6355, %r6360;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6366, %r853, %r957, %r6347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6370, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6371, %r6347, %r6370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6374, %r6366, %r6371;
	// end inline asm
	// begin inline asm
	mov.b32 %r6382, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6393, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6379, %r842, %r981, %r6382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6383, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6384, %r6382, %r6383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6387, %r6379, %r6384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6390, %r853, %r981, %r6393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6394, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6395, %r6393, %r6394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6398, %r6390, %r6395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6401, %r842, %r1003, %r6382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6405, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6406, %r6382, %r6405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6409, %r6401, %r6406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6412, %r853, %r1003, %r6393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6416, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6417, %r6393, %r6416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6420, %r6412, %r6417;
	// end inline asm
	// begin inline asm
	mov.b32 %r6428, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6439, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6425, %r842, %r1027, %r6428, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6429, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6430, %r6428, %r6429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6433, %r6425, %r6430;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6436, %r853, %r1027, %r6439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6440, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6441, %r6439, %r6440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6444, %r6436, %r6441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6447, %r842, %r1049, %r6428, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6451, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6452, %r6428, %r6451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6455, %r6447, %r6452;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6458, %r853, %r1049, %r6439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6462, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6463, %r6439, %r6462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6466, %r6458, %r6463;
	// end inline asm
	// begin inline asm
	mov.b32 %r6474, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6485, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6471, %r842, %r1073, %r6474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6475, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6476, %r6474, %r6475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6479, %r6471, %r6476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6482, %r853, %r1073, %r6485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6486, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6487, %r6485, %r6486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6490, %r6482, %r6487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6493, %r842, %r1095, %r6474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6497, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6498, %r6474, %r6497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6501, %r6493, %r6498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6504, %r853, %r1095, %r6485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6508, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6509, %r6485, %r6508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6512, %r6504, %r6509;
	// end inline asm
	// begin inline asm
	mov.b32 %r6520, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6531, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6517, %r842, %r1119, %r6520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6521, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6522, %r6520, %r6521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6525, %r6517, %r6522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6528, %r853, %r1119, %r6531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6532, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6533, %r6531, %r6532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6536, %r6528, %r6533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6539, %r842, %r1141, %r6520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6543, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6544, %r6520, %r6543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6547, %r6539, %r6544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6550, %r853, %r1141, %r6531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6554, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6555, %r6531, %r6554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6558, %r6550, %r6555;
	// end inline asm
	// begin inline asm
	mov.b32 %r6566, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6577, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6563, %r842, %r1165, %r6566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6567, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6568, %r6566, %r6567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6571, %r6563, %r6568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6574, %r853, %r1165, %r6577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6578, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6579, %r6577, %r6578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6582, %r6574, %r6579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6585, %r842, %r1187, %r6566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6589, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6590, %r6566, %r6589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6593, %r6585, %r6590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6596, %r853, %r1187, %r6577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6600, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6601, %r6577, %r6600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6604, %r6596, %r6601;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6742, %r334, %r6249, %r6049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6739, %r334, %r6260, %r6055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6751, %r334, %r6271, %r6061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6748, %r334, %r6282, %r6067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6760, %r334, %r6295, %r6073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6757, %r334, %r6306, %r6079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6769, %r334, %r6317, %r6085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6766, %r334, %r6328, %r6091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6778, %r334, %r6341, %r6097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6775, %r334, %r6352, %r6103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6787, %r334, %r6363, %r6109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6784, %r334, %r6374, %r6115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6796, %r334, %r6387, %r6121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6793, %r334, %r6398, %r6127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6805, %r334, %r6409, %r6133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6802, %r334, %r6420, %r6139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6814, %r352, %r6433, %r6145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6811, %r352, %r6444, %r6151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6823, %r352, %r6455, %r6157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6820, %r352, %r6466, %r6163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6832, %r352, %r6479, %r6169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6829, %r352, %r6490, %r6175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6841, %r352, %r6501, %r6181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6838, %r352, %r6512, %r6187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6850, %r352, %r6525, %r6193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6847, %r352, %r6536, %r6199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6859, %r352, %r6547, %r6205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6856, %r352, %r6558, %r6211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6868, %r352, %r6571, %r6217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6865, %r352, %r6582, %r6223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6877, %r352, %r6593, %r6229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6874, %r352, %r6604, %r6235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6735, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6737, %r6735, %r6739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6740, %r391, %r6742, %r6737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6744, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6746, %r6744, %r6748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6749, %r391, %r6751, %r6746;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6753, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6755, %r6753, %r6757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6758, %r391, %r6760, %r6755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6762, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6764, %r6762, %r6766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6767, %r391, %r6769, %r6764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6771, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6773, %r6771, %r6775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6776, %r391, %r6778, %r6773;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6780, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6782, %r6780, %r6784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6785, %r391, %r6787, %r6782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6789, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6791, %r6789, %r6793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6794, %r391, %r6796, %r6791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6798, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6800, %r6798, %r6802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6803, %r391, %r6805, %r6800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6807, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6809, %r6807, %r6811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6812, %r394, %r6814, %r6809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6816, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6818, %r6816, %r6820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6821, %r394, %r6823, %r6818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6825, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6827, %r6825, %r6829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6830, %r394, %r6832, %r6827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6834, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6836, %r6834, %r6838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6839, %r394, %r6841, %r6836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6843, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6845, %r6843, %r6847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6848, %r394, %r6850, %r6845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6852, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6854, %r6852, %r6856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6857, %r394, %r6859, %r6854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6861, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6863, %r6861, %r6865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6866, %r394, %r6868, %r6863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6870, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6872, %r6870, %r6874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6875, %r394, %r6877, %r6872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6879, %r397, %r6742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6882, %r391, %r6739, %r6879;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6886, %r397, %r6751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6889, %r391, %r6748, %r6886;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6893, %r397, %r6760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6896, %r391, %r6757, %r6893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6900, %r397, %r6769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6903, %r391, %r6766, %r6900;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6907, %r397, %r6778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6910, %r391, %r6775, %r6907;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6914, %r397, %r6787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6917, %r391, %r6784, %r6914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6921, %r397, %r6796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6924, %r391, %r6793, %r6921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6928, %r397, %r6805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6931, %r391, %r6802, %r6928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6935, %r400, %r6814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6938, %r394, %r6811, %r6935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6942, %r400, %r6823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6945, %r394, %r6820, %r6942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6949, %r400, %r6832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6952, %r394, %r6829, %r6949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6956, %r400, %r6841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6959, %r394, %r6838, %r6956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6963, %r400, %r6850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6966, %r394, %r6847, %r6963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6970, %r400, %r6859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6973, %r394, %r6856, %r6970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6977, %r400, %r6868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6980, %r394, %r6865, %r6977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6984, %r400, %r6877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6987, %r394, %r6874, %r6984;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7158, %r7155}, {%r458, %r464, %r461, %r467}, {%r6740, %r6882}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7167, %r7164}, {%r458, %r464, %r461, %r467}, {%r6749, %r6889}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7176, %r7173}, {%r458, %r464, %r461, %r467}, {%r6758, %r6896}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7185, %r7182}, {%r458, %r464, %r461, %r467}, {%r6767, %r6903}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7194, %r7191}, {%r458, %r464, %r461, %r467}, {%r6776, %r6910}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7203, %r7200}, {%r458, %r464, %r461, %r467}, {%r6785, %r6917}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7212, %r7209}, {%r458, %r464, %r461, %r467}, {%r6794, %r6924}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7221, %r7218}, {%r458, %r464, %r461, %r467}, {%r6803, %r6931}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7230, %r7227}, {%r458, %r464, %r461, %r467}, {%r6812, %r6938}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7239, %r7236}, {%r458, %r464, %r461, %r467}, {%r6821, %r6945}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7248, %r7245}, {%r458, %r464, %r461, %r467}, {%r6830, %r6952}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7257, %r7254}, {%r458, %r464, %r461, %r467}, {%r6839, %r6959}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7266, %r7263}, {%r458, %r464, %r461, %r467}, {%r6848, %r6966}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7275, %r7272}, {%r458, %r464, %r461, %r467}, {%r6857, %r6973}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7284, %r7281}, {%r458, %r464, %r461, %r467}, {%r6866, %r6980}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7293, %r7290}, {%r458, %r464, %r461, %r467}, {%r6875, %r6987}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7151, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7153, %r7151, %r7155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7156, %r508, %r7158, %r7153;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7160, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7162, %r7160, %r7164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7165, %r508, %r7167, %r7162;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7169, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7171, %r7169, %r7173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7174, %r508, %r7176, %r7171;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7178, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7180, %r7178, %r7182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7183, %r508, %r7185, %r7180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7187, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7189, %r7187, %r7191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7192, %r508, %r7194, %r7189;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7196, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7198, %r7196, %r7200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7201, %r508, %r7203, %r7198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7205, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7207, %r7205, %r7209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7210, %r508, %r7212, %r7207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7214, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7216, %r7214, %r7218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7219, %r508, %r7221, %r7216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7223, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7225, %r7223, %r7227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7228, %r508, %r7230, %r7225;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7232, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7234, %r7232, %r7236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7237, %r508, %r7239, %r7234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7241, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7243, %r7241, %r7245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7246, %r508, %r7248, %r7243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7250, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7252, %r7250, %r7254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7255, %r508, %r7257, %r7252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7259, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7261, %r7259, %r7263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7264, %r508, %r7266, %r7261;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7268, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7270, %r7268, %r7272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7273, %r508, %r7275, %r7270;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7277, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7279, %r7277, %r7281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7282, %r508, %r7284, %r7279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7286, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7288, %r7286, %r7290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7291, %r508, %r7293, %r7288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7295, %r511, %r7158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7298, %r508, %r7155, %r7295;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7302, %r511, %r7167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7305, %r508, %r7164, %r7302;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7309, %r511, %r7176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7312, %r508, %r7173, %r7309;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7316, %r511, %r7185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7319, %r508, %r7182, %r7316;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7323, %r511, %r7194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7326, %r508, %r7191, %r7323;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7330, %r511, %r7203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7333, %r508, %r7200, %r7330;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7337, %r511, %r7212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7340, %r508, %r7209, %r7337;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7344, %r511, %r7221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7347, %r508, %r7218, %r7344;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7351, %r511, %r7230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7354, %r508, %r7227, %r7351;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7358, %r511, %r7239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7361, %r508, %r7236, %r7358;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7365, %r511, %r7248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7368, %r508, %r7245, %r7365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7372, %r511, %r7257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7375, %r508, %r7254, %r7372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7379, %r511, %r7266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7382, %r508, %r7263, %r7379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7386, %r511, %r7275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7389, %r508, %r7272, %r7386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7393, %r511, %r7284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7396, %r508, %r7281, %r7393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7400, %r511, %r7293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7403, %r508, %r7290, %r7400;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7696, %r7699}, {%r546, %r552, %r549, %r555}, {%r7156, %r7298}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7702, %r7705}, {%r546, %r552, %r549, %r555}, {%r7165, %r7305}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7708, %r7711}, {%r546, %r552, %r549, %r555}, {%r7174, %r7312}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7714, %r7717}, {%r546, %r552, %r549, %r555}, {%r7183, %r7319}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7720, %r7723}, {%r546, %r552, %r549, %r555}, {%r7192, %r7326}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7726, %r7729}, {%r546, %r552, %r549, %r555}, {%r7201, %r7333}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7732, %r7735}, {%r546, %r552, %r549, %r555}, {%r7210, %r7340}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7738, %r7741}, {%r546, %r552, %r549, %r555}, {%r7219, %r7347}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7697, %r7700}, {%r546, %r552, %r549, %r555}, {%r7228, %r7354}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7703, %r7706}, {%r546, %r552, %r549, %r555}, {%r7237, %r7361}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7709, %r7712}, {%r546, %r552, %r549, %r555}, {%r7246, %r7368}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7715, %r7718}, {%r546, %r552, %r549, %r555}, {%r7255, %r7375}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7721, %r7724}, {%r546, %r552, %r549, %r555}, {%r7264, %r7382}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7727, %r7730}, {%r546, %r552, %r549, %r555}, {%r7273, %r7389}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7733, %r7736}, {%r546, %r552, %r549, %r555}, {%r7282, %r7396}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7739, %r7742}, {%r546, %r552, %r549, %r555}, {%r7291, %r7403}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7695, %r7696, %r7697;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7698, %r7699, %r7700;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7701, %r7702, %r7703;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7704, %r7705, %r7706;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7707, %r7708, %r7709;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7710, %r7711, %r7712;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7713, %r7714, %r7715;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7716, %r7717, %r7718;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7719, %r7720, %r7721;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7722, %r7723, %r7724;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7725, %r7726, %r7727;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7728, %r7729, %r7730;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7731, %r7732, %r7733;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7734, %r7735, %r7736;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7737, %r7738, %r7739;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7740, %r7741, %r7742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7743, %r7696, %r7697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7746, %r7699, %r7700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7749, %r7702, %r7703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7752, %r7705, %r7706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7755, %r7708, %r7709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7758, %r7711, %r7712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7761, %r7714, %r7715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7764, %r7717, %r7718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7767, %r7720, %r7721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7770, %r7723, %r7724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7773, %r7726, %r7727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7776, %r7729, %r7730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7779, %r7732, %r7733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7782, %r7735, %r7736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7785, %r7738, %r7739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7788, %r7741, %r7742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7791, %r132, %r7695;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7794, %r132, %r7698;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7797, %r132, %r7701;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7800, %r132, %r7704;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7803, %r132, %r7707;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7806, %r132, %r7710;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7809, %r132, %r7713;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7812, %r132, %r7716;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7815, %r132, %r7719;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7818, %r132, %r7722;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7821, %r132, %r7725;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7824, %r132, %r7728;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7827, %r132, %r7731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7830, %r132, %r7734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7833, %r132, %r7737;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7836, %r132, %r7740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7839, %r133, %r7743;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7842, %r133, %r7746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7845, %r133, %r7749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7848, %r133, %r7752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7851, %r133, %r7755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7854, %r133, %r7758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7857, %r133, %r7761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7860, %r133, %r7764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7863, %r133, %r7767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7866, %r133, %r7770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7869, %r133, %r7773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7872, %r133, %r7776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7875, %r133, %r7779;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7878, %r133, %r7782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7881, %r133, %r7785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7884, %r133, %r7788;
	// end inline asm
	// begin inline asm
	mov.b32 %r7887, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7888, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7889, %r7791, %r7887;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7892, %r7889, %r7888;
	// end inline asm
	// begin inline asm
	mov.b32 %r7895, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7896, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7897, %r7794, %r7895;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7900, %r7897, %r7896;
	// end inline asm
	// begin inline asm
	mov.b32 %r7903, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7904, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7905, %r7797, %r7903;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7908, %r7905, %r7904;
	// end inline asm
	// begin inline asm
	mov.b32 %r7911, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7912, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7913, %r7800, %r7911;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7916, %r7913, %r7912;
	// end inline asm
	// begin inline asm
	mov.b32 %r7919, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7920, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7921, %r7803, %r7919;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7924, %r7921, %r7920;
	// end inline asm
	// begin inline asm
	mov.b32 %r7927, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7928, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7929, %r7806, %r7927;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7932, %r7929, %r7928;
	// end inline asm
	// begin inline asm
	mov.b32 %r7935, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7936, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7937, %r7809, %r7935;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7940, %r7937, %r7936;
	// end inline asm
	// begin inline asm
	mov.b32 %r7943, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7944, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7945, %r7812, %r7943;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7948, %r7945, %r7944;
	// end inline asm
	// begin inline asm
	mov.b32 %r7951, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7952, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7953, %r7815, %r7951;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7956, %r7953, %r7952;
	// end inline asm
	// begin inline asm
	mov.b32 %r7959, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7960, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7961, %r7818, %r7959;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7964, %r7961, %r7960;
	// end inline asm
	// begin inline asm
	mov.b32 %r7967, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7968, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7969, %r7821, %r7967;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7972, %r7969, %r7968;
	// end inline asm
	// begin inline asm
	mov.b32 %r7975, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7976, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7977, %r7824, %r7975;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7980, %r7977, %r7976;
	// end inline asm
	// begin inline asm
	mov.b32 %r7983, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7984, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7985, %r7827, %r7983;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7988, %r7985, %r7984;
	// end inline asm
	// begin inline asm
	mov.b32 %r7991, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7992, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7993, %r7830, %r7991;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7996, %r7993, %r7992;
	// end inline asm
	// begin inline asm
	mov.b32 %r7999, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8000, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8001, %r7833, %r7999;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8004, %r8001, %r8000;
	// end inline asm
	// begin inline asm
	mov.b32 %r8007, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8008, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8009, %r7836, %r8007;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8012, %r8009, %r8008;
	// end inline asm
	// begin inline asm
	mov.b32 %r8015, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8016, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8017, %r7839, %r8015;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8020, %r8017, %r8016;
	// end inline asm
	// begin inline asm
	mov.b32 %r8023, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8024, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8025, %r7842, %r8023;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8028, %r8025, %r8024;
	// end inline asm
	// begin inline asm
	mov.b32 %r8031, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8032, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8033, %r7845, %r8031;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8036, %r8033, %r8032;
	// end inline asm
	// begin inline asm
	mov.b32 %r8039, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8040, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8041, %r7848, %r8039;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8044, %r8041, %r8040;
	// end inline asm
	// begin inline asm
	mov.b32 %r8047, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8048, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8049, %r7851, %r8047;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8052, %r8049, %r8048;
	// end inline asm
	// begin inline asm
	mov.b32 %r8055, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8056, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8057, %r7854, %r8055;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8060, %r8057, %r8056;
	// end inline asm
	// begin inline asm
	mov.b32 %r8063, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8064, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8065, %r7857, %r8063;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8068, %r8065, %r8064;
	// end inline asm
	// begin inline asm
	mov.b32 %r8071, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8072, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8073, %r7860, %r8071;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8076, %r8073, %r8072;
	// end inline asm
	// begin inline asm
	mov.b32 %r8079, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8080, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8081, %r7863, %r8079;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8084, %r8081, %r8080;
	// end inline asm
	// begin inline asm
	mov.b32 %r8087, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8088, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8089, %r7866, %r8087;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8092, %r8089, %r8088;
	// end inline asm
	// begin inline asm
	mov.b32 %r8095, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8096, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8097, %r7869, %r8095;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8100, %r8097, %r8096;
	// end inline asm
	// begin inline asm
	mov.b32 %r8103, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8104, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8105, %r7872, %r8103;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8108, %r8105, %r8104;
	// end inline asm
	// begin inline asm
	mov.b32 %r8111, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8112, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8113, %r7875, %r8111;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8116, %r8113, %r8112;
	// end inline asm
	// begin inline asm
	mov.b32 %r8119, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8120, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8121, %r7878, %r8119;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8124, %r8121, %r8120;
	// end inline asm
	// begin inline asm
	mov.b32 %r8127, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8128, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8129, %r7881, %r8127;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8132, %r8129, %r8128;
	// end inline asm
	// begin inline asm
	mov.b32 %r8135, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8136, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8137, %r7884, %r8135;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8140, %r8137, %r8136;
	// end inline asm
	// begin inline asm
	mov.b32 %r8146, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8144, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8145, %r8146, %r8144;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8148, %r7892, %r8145;
	// end inline asm
	// begin inline asm
	mov.b32 %r8151, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8152, %r8146, %r8151;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8155, %r7900, %r8152;
	// end inline asm
	// begin inline asm
	mov.b32 %r8158, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8159, %r8146, %r8158;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8162, %r7908, %r8159;
	// end inline asm
	// begin inline asm
	mov.b32 %r8165, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8166, %r8146, %r8165;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8169, %r7916, %r8166;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8172, %r8148, %r8162, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8176, %r8155, %r8169, %r4359;
	// end inline asm
	shl.b32 	%r8183, %r8176, 4;
	// begin inline asm
	lop3.b32 %r8180, %r4365, %r8172, %r8183, 202;
	// end inline asm
	xor.b32  	%r16167, %r8180, -2004318072;
	// begin inline asm
	mov.b32 %r8187, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8185, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8186, %r8187, %r8185;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8189, %r7924, %r8186;
	// end inline asm
	// begin inline asm
	mov.b32 %r8192, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8193, %r8187, %r8192;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8196, %r7932, %r8193;
	// end inline asm
	// begin inline asm
	mov.b32 %r8199, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8200, %r8187, %r8199;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8203, %r7940, %r8200;
	// end inline asm
	// begin inline asm
	mov.b32 %r8206, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8207, %r8187, %r8206;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8210, %r7948, %r8207;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8213, %r8189, %r8203, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8217, %r8196, %r8210, %r4359;
	// end inline asm
	shl.b32 	%r8224, %r8217, 4;
	// begin inline asm
	lop3.b32 %r8221, %r4365, %r8213, %r8224, 202;
	// end inline asm
	xor.b32  	%r16168, %r8221, -2004318072;
	// begin inline asm
	mov.b32 %r8228, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8226, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8227, %r8228, %r8226;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8230, %r7956, %r8227;
	// end inline asm
	// begin inline asm
	mov.b32 %r8233, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8234, %r8228, %r8233;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8237, %r7964, %r8234;
	// end inline asm
	// begin inline asm
	mov.b32 %r8240, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8241, %r8228, %r8240;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8244, %r7972, %r8241;
	// end inline asm
	// begin inline asm
	mov.b32 %r8247, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8248, %r8228, %r8247;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8251, %r7980, %r8248;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8254, %r8230, %r8244, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8258, %r8237, %r8251, %r4359;
	// end inline asm
	shl.b32 	%r8265, %r8258, 4;
	// begin inline asm
	lop3.b32 %r8262, %r4365, %r8254, %r8265, 202;
	// end inline asm
	xor.b32  	%r16169, %r8262, -2004318072;
	// begin inline asm
	mov.b32 %r8269, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8267, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8268, %r8269, %r8267;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8271, %r7988, %r8268;
	// end inline asm
	// begin inline asm
	mov.b32 %r8274, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8275, %r8269, %r8274;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8278, %r7996, %r8275;
	// end inline asm
	// begin inline asm
	mov.b32 %r8281, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8282, %r8269, %r8281;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8285, %r8004, %r8282;
	// end inline asm
	// begin inline asm
	mov.b32 %r8288, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8289, %r8269, %r8288;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8292, %r8012, %r8289;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8295, %r8271, %r8285, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8299, %r8278, %r8292, %r4359;
	// end inline asm
	shl.b32 	%r8306, %r8299, 4;
	// begin inline asm
	lop3.b32 %r8303, %r4365, %r8295, %r8306, 202;
	// end inline asm
	xor.b32  	%r16170, %r8303, -2004318072;
	// begin inline asm
	mov.b32 %r8310, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8308, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8309, %r8310, %r8308;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8312, %r8020, %r8309;
	// end inline asm
	// begin inline asm
	mov.b32 %r8315, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8316, %r8310, %r8315;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8319, %r8028, %r8316;
	// end inline asm
	// begin inline asm
	mov.b32 %r8322, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8323, %r8310, %r8322;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8326, %r8036, %r8323;
	// end inline asm
	// begin inline asm
	mov.b32 %r8329, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8330, %r8310, %r8329;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8333, %r8044, %r8330;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8336, %r8312, %r8326, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8340, %r8319, %r8333, %r4359;
	// end inline asm
	shl.b32 	%r8347, %r8340, 4;
	// begin inline asm
	lop3.b32 %r8344, %r4365, %r8336, %r8347, 202;
	// end inline asm
	xor.b32  	%r16171, %r8344, -2004318072;
	// begin inline asm
	mov.b32 %r8351, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8349, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8350, %r8351, %r8349;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8353, %r8052, %r8350;
	// end inline asm
	// begin inline asm
	mov.b32 %r8356, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8357, %r8351, %r8356;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8360, %r8060, %r8357;
	// end inline asm
	// begin inline asm
	mov.b32 %r8363, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8364, %r8351, %r8363;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8367, %r8068, %r8364;
	// end inline asm
	// begin inline asm
	mov.b32 %r8370, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8371, %r8351, %r8370;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8374, %r8076, %r8371;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8377, %r8353, %r8367, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8381, %r8360, %r8374, %r4359;
	// end inline asm
	shl.b32 	%r8388, %r8381, 4;
	// begin inline asm
	lop3.b32 %r8385, %r4365, %r8377, %r8388, 202;
	// end inline asm
	xor.b32  	%r16172, %r8385, -2004318072;
	// begin inline asm
	mov.b32 %r8392, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8390, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8391, %r8392, %r8390;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8394, %r8084, %r8391;
	// end inline asm
	// begin inline asm
	mov.b32 %r8397, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8398, %r8392, %r8397;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8401, %r8092, %r8398;
	// end inline asm
	// begin inline asm
	mov.b32 %r8404, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8405, %r8392, %r8404;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8408, %r8100, %r8405;
	// end inline asm
	// begin inline asm
	mov.b32 %r8411, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8412, %r8392, %r8411;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8415, %r8108, %r8412;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8418, %r8394, %r8408, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8422, %r8401, %r8415, %r4359;
	// end inline asm
	shl.b32 	%r8429, %r8422, 4;
	// begin inline asm
	lop3.b32 %r8426, %r4365, %r8418, %r8429, 202;
	// end inline asm
	xor.b32  	%r16173, %r8426, -2004318072;
	// begin inline asm
	mov.b32 %r8433, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8431, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8432, %r8433, %r8431;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8435, %r8116, %r8432;
	// end inline asm
	// begin inline asm
	mov.b32 %r8438, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8439, %r8433, %r8438;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8442, %r8124, %r8439;
	// end inline asm
	// begin inline asm
	mov.b32 %r8445, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8446, %r8433, %r8445;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8449, %r8132, %r8446;
	// end inline asm
	// begin inline asm
	mov.b32 %r8452, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8453, %r8433, %r8452;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8456, %r8140, %r8453;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8459, %r8435, %r8449, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8463, %r8442, %r8456, %r4359;
	// end inline asm
	shl.b32 	%r8470, %r8463, 4;
	// begin inline asm
	lop3.b32 %r8467, %r4365, %r8459, %r8470, 202;
	// end inline asm
	xor.b32  	%r16174, %r8467, -2004318072;
	st.shared.u32 	[%rd104], %r16167;
	st.shared.u32 	[%rd106], %r16168;
	st.shared.u32 	[%rd108], %r16169;
	st.shared.u32 	[%rd110], %r16170;
	st.shared.u32 	[%rd112], %r16171;
	st.shared.u32 	[%rd114], %r16172;
	st.shared.u32 	[%rd116], %r16173;
	st.shared.u32 	[%rd118], %r16174;
	ld.shared.u32 	%r16287, [%rd88];
	ld.shared.u32 	%r16288, [%rd90];
	ld.shared.u32 	%r16289, [%rd92];
	ld.shared.u32 	%r16290, [%rd94];
	ld.shared.u32 	%r16299, [%rd96];
	ld.shared.u32 	%r16300, [%rd98];
	ld.shared.u32 	%r16301, [%rd100];
	ld.shared.u32 	%r16302, [%rd102];
	// begin inline asm
	mov.b32 %r8476, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8487, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8475, %r16287, -2004318072;
	// begin inline asm
	lop3.b32 %r8473, %r842, %r8475, %r8476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8477, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8478, %r8476, %r8477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8481, %r8473, %r8478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8484, %r853, %r8475, %r8487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8488, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8489, %r8487, %r8488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8492, %r8484, %r8489;
	// end inline asm
	shr.u32 	%r8497, %r8475, 8;
	// begin inline asm
	lop3.b32 %r8495, %r842, %r8497, %r8476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8499, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8500, %r8476, %r8499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8503, %r8495, %r8500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8506, %r853, %r8497, %r8487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8510, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8511, %r8487, %r8510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8514, %r8506, %r8511;
	// end inline asm
	// begin inline asm
	mov.b32 %r8522, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8533, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8521, %r16288, -2004318072;
	// begin inline asm
	lop3.b32 %r8519, %r842, %r8521, %r8522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8523, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8524, %r8522, %r8523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8527, %r8519, %r8524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8530, %r853, %r8521, %r8533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8534, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8535, %r8533, %r8534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8538, %r8530, %r8535;
	// end inline asm
	shr.u32 	%r8543, %r8521, 8;
	// begin inline asm
	lop3.b32 %r8541, %r842, %r8543, %r8522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8545, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8546, %r8522, %r8545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8549, %r8541, %r8546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8552, %r853, %r8543, %r8533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8556, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8557, %r8533, %r8556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8560, %r8552, %r8557;
	// end inline asm
	// begin inline asm
	mov.b32 %r8568, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8579, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8567, %r16289, -2004318072;
	// begin inline asm
	lop3.b32 %r8565, %r842, %r8567, %r8568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8569, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8570, %r8568, %r8569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8573, %r8565, %r8570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8576, %r853, %r8567, %r8579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8580, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8581, %r8579, %r8580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8584, %r8576, %r8581;
	// end inline asm
	shr.u32 	%r8589, %r8567, 8;
	// begin inline asm
	lop3.b32 %r8587, %r842, %r8589, %r8568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8591, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8592, %r8568, %r8591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8595, %r8587, %r8592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8598, %r853, %r8589, %r8579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8602, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8603, %r8579, %r8602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8606, %r8598, %r8603;
	// end inline asm
	// begin inline asm
	mov.b32 %r8614, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8625, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8613, %r16290, -2004318072;
	// begin inline asm
	lop3.b32 %r8611, %r842, %r8613, %r8614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8615, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8616, %r8614, %r8615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8619, %r8611, %r8616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8622, %r853, %r8613, %r8625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8626, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8627, %r8625, %r8626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8630, %r8622, %r8627;
	// end inline asm
	shr.u32 	%r8635, %r8613, 8;
	// begin inline asm
	lop3.b32 %r8633, %r842, %r8635, %r8614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8637, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8638, %r8614, %r8637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8641, %r8633, %r8638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8644, %r853, %r8635, %r8625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8648, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8649, %r8625, %r8648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8652, %r8644, %r8649;
	// end inline asm
	// begin inline asm
	mov.b32 %r8660, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8671, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8659, %r16299, -2004318072;
	// begin inline asm
	lop3.b32 %r8657, %r842, %r8659, %r8660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8661, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8662, %r8660, %r8661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8665, %r8657, %r8662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8668, %r853, %r8659, %r8671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8672, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8673, %r8671, %r8672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8676, %r8668, %r8673;
	// end inline asm
	shr.u32 	%r8681, %r8659, 8;
	// begin inline asm
	lop3.b32 %r8679, %r842, %r8681, %r8660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8683, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8684, %r8660, %r8683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8687, %r8679, %r8684;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8690, %r853, %r8681, %r8671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8694, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8695, %r8671, %r8694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8698, %r8690, %r8695;
	// end inline asm
	// begin inline asm
	mov.b32 %r8706, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8717, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8705, %r16300, -2004318072;
	// begin inline asm
	lop3.b32 %r8703, %r842, %r8705, %r8706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8707, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8708, %r8706, %r8707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8711, %r8703, %r8708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8714, %r853, %r8705, %r8717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8718, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8719, %r8717, %r8718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8722, %r8714, %r8719;
	// end inline asm
	shr.u32 	%r8727, %r8705, 8;
	// begin inline asm
	lop3.b32 %r8725, %r842, %r8727, %r8706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8729, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8730, %r8706, %r8729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8733, %r8725, %r8730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8736, %r853, %r8727, %r8717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8740, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8741, %r8717, %r8740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8744, %r8736, %r8741;
	// end inline asm
	// begin inline asm
	mov.b32 %r8752, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8763, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8751, %r16301, -2004318072;
	// begin inline asm
	lop3.b32 %r8749, %r842, %r8751, %r8752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8753, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8754, %r8752, %r8753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8757, %r8749, %r8754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8760, %r853, %r8751, %r8763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8764, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8765, %r8763, %r8764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8768, %r8760, %r8765;
	// end inline asm
	shr.u32 	%r8773, %r8751, 8;
	// begin inline asm
	lop3.b32 %r8771, %r842, %r8773, %r8752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8775, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8776, %r8752, %r8775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8779, %r8771, %r8776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8782, %r853, %r8773, %r8763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8786, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8787, %r8763, %r8786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8790, %r8782, %r8787;
	// end inline asm
	// begin inline asm
	mov.b32 %r8798, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8809, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8797, %r16302, -2004318072;
	// begin inline asm
	lop3.b32 %r8795, %r842, %r8797, %r8798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8799, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8800, %r8798, %r8799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8803, %r8795, %r8800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8806, %r853, %r8797, %r8809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8810, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8811, %r8809, %r8810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8814, %r8806, %r8811;
	// end inline asm
	shr.u32 	%r8819, %r8797, 8;
	// begin inline asm
	lop3.b32 %r8817, %r842, %r8819, %r8798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8821, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8822, %r8798, %r8821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8825, %r8817, %r8822;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8828, %r853, %r8819, %r8809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8832, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8833, %r8809, %r8832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8836, %r8828, %r8833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8839, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8841, %r8839, %r8481;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8844, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8846, %r8844, %r8492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8849, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8851, %r8849, %r8503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8854, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8856, %r8854, %r8514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8859, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8861, %r8859, %r8527;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8864, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8866, %r8864, %r8538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8869, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8871, %r8869, %r8549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8874, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8876, %r8874, %r8560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8879, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8881, %r8879, %r8573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8884, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8886, %r8884, %r8584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8889, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8891, %r8889, %r8595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8894, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8896, %r8894, %r8606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8899, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8901, %r8899, %r8619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8904, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8906, %r8904, %r8630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8909, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8911, %r8909, %r8641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8914, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8916, %r8914, %r8652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8919, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8921, %r8919, %r8665;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8924, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8926, %r8924, %r8676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8929, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8931, %r8929, %r8687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8934, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8936, %r8934, %r8698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8939, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8941, %r8939, %r8711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8944, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8946, %r8944, %r8722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8949, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8951, %r8949, %r8733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8954, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8956, %r8954, %r8744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8959, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8961, %r8959, %r8757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8964, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8966, %r8964, %r8768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8969, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8971, %r8969, %r8779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8974, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8976, %r8974, %r8790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8979, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8981, %r8979, %r8803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8984, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8986, %r8984, %r8814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8989, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8991, %r8989, %r8825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8994, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8996, %r8994, %r8836;
	// end inline asm
	// begin inline asm
	mov.b32 %r9004, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9015, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9001, %r842, %r2427, %r9004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9005, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9006, %r9004, %r9005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9009, %r9001, %r9006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9012, %r853, %r2427, %r9015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9016, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9017, %r9015, %r9016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9020, %r9012, %r9017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9023, %r842, %r2449, %r9004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9027, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9028, %r9004, %r9027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9031, %r9023, %r9028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9034, %r853, %r2449, %r9015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9038, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9039, %r9015, %r9038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9042, %r9034, %r9039;
	// end inline asm
	// begin inline asm
	mov.b32 %r9050, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9061, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9047, %r842, %r2473, %r9050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9051, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9052, %r9050, %r9051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9055, %r9047, %r9052;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9058, %r853, %r2473, %r9061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9062, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9063, %r9061, %r9062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9066, %r9058, %r9063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9069, %r842, %r2495, %r9050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9073, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9074, %r9050, %r9073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9077, %r9069, %r9074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9080, %r853, %r2495, %r9061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9084, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9085, %r9061, %r9084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9088, %r9080, %r9085;
	// end inline asm
	// begin inline asm
	mov.b32 %r9096, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9107, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9093, %r842, %r2519, %r9096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9097, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9098, %r9096, %r9097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9101, %r9093, %r9098;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9104, %r853, %r2519, %r9107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9108, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9109, %r9107, %r9108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9112, %r9104, %r9109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9115, %r842, %r2541, %r9096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9119, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9120, %r9096, %r9119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9123, %r9115, %r9120;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9126, %r853, %r2541, %r9107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9130, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9131, %r9107, %r9130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9134, %r9126, %r9131;
	// end inline asm
	// begin inline asm
	mov.b32 %r9142, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9153, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9139, %r842, %r2565, %r9142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9143, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9144, %r9142, %r9143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9147, %r9139, %r9144;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9150, %r853, %r2565, %r9153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9154, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9155, %r9153, %r9154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9158, %r9150, %r9155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9161, %r842, %r2587, %r9142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9165, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9166, %r9142, %r9165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9169, %r9161, %r9166;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9172, %r853, %r2587, %r9153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9176, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9177, %r9153, %r9176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9180, %r9172, %r9177;
	// end inline asm
	// begin inline asm
	mov.b32 %r9188, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9199, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9185, %r842, %r2611, %r9188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9189, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9190, %r9188, %r9189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9193, %r9185, %r9190;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9196, %r853, %r2611, %r9199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9200, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9201, %r9199, %r9200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9204, %r9196, %r9201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9207, %r842, %r2633, %r9188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9211, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9212, %r9188, %r9211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9215, %r9207, %r9212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9218, %r853, %r2633, %r9199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9222, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9223, %r9199, %r9222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9226, %r9218, %r9223;
	// end inline asm
	// begin inline asm
	mov.b32 %r9234, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9245, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9231, %r842, %r2657, %r9234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9235, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9236, %r9234, %r9235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9239, %r9231, %r9236;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9242, %r853, %r2657, %r9245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9246, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9247, %r9245, %r9246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9250, %r9242, %r9247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9253, %r842, %r2679, %r9234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9257, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9258, %r9234, %r9257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9261, %r9253, %r9258;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9264, %r853, %r2679, %r9245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9268, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9269, %r9245, %r9268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9272, %r9264, %r9269;
	// end inline asm
	// begin inline asm
	mov.b32 %r9280, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9291, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9277, %r842, %r2703, %r9280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9281, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9282, %r9280, %r9281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9285, %r9277, %r9282;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9288, %r853, %r2703, %r9291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9292, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9293, %r9291, %r9292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9296, %r9288, %r9293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9299, %r842, %r2725, %r9280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9303, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9304, %r9280, %r9303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9307, %r9299, %r9304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9310, %r853, %r2725, %r9291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9314, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9315, %r9291, %r9314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9318, %r9310, %r9315;
	// end inline asm
	// begin inline asm
	mov.b32 %r9326, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9337, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9323, %r842, %r2749, %r9326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9327, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9328, %r9326, %r9327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9331, %r9323, %r9328;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9334, %r853, %r2749, %r9337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9338, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9339, %r9337, %r9338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9342, %r9334, %r9339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9345, %r842, %r2771, %r9326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9349, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9350, %r9326, %r9349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9353, %r9345, %r9350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9356, %r853, %r2771, %r9337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9360, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9361, %r9337, %r9360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9364, %r9356, %r9361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9367, %r262, %r9009, %r8841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9371, %r262, %r9020, %r8846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9375, %r262, %r9031, %r8851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9379, %r262, %r9042, %r8856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9383, %r262, %r9055, %r8861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9387, %r262, %r9066, %r8866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9391, %r262, %r9077, %r8871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9395, %r262, %r9088, %r8876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9399, %r262, %r9101, %r8881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9403, %r262, %r9112, %r8886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9407, %r262, %r9123, %r8891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9411, %r262, %r9134, %r8896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9415, %r262, %r9147, %r8901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9419, %r262, %r9158, %r8906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9423, %r262, %r9169, %r8911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9427, %r262, %r9180, %r8916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9431, %r280, %r9193, %r8921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9435, %r280, %r9204, %r8926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9439, %r280, %r9215, %r8931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9443, %r280, %r9226, %r8936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9447, %r280, %r9239, %r8941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9451, %r280, %r9250, %r8946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9455, %r280, %r9261, %r8951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9459, %r280, %r9272, %r8956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9463, %r280, %r9285, %r8961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9467, %r280, %r9296, %r8966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9471, %r280, %r9307, %r8971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9475, %r280, %r9318, %r8976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9479, %r280, %r9331, %r8981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9483, %r280, %r9342, %r8986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9487, %r280, %r9353, %r8991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9491, %r280, %r9364, %r8996;
	// end inline asm
	// begin inline asm
	mov.b32 %r9500, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9511, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9497, %r842, %r843, %r9500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9501, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9502, %r9500, %r9501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9505, %r9497, %r9502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9508, %r853, %r843, %r9511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9512, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9513, %r9511, %r9512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9516, %r9508, %r9513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9519, %r842, %r865, %r9500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9523, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9524, %r9500, %r9523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9527, %r9519, %r9524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9530, %r853, %r865, %r9511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9534, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9535, %r9511, %r9534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9538, %r9530, %r9535;
	// end inline asm
	// begin inline asm
	mov.b32 %r9546, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9557, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9543, %r842, %r889, %r9546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9547, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9548, %r9546, %r9547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9551, %r9543, %r9548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9554, %r853, %r889, %r9557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9558, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9559, %r9557, %r9558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9562, %r9554, %r9559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9565, %r842, %r911, %r9546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9569, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9570, %r9546, %r9569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9573, %r9565, %r9570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9576, %r853, %r911, %r9557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9580, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9581, %r9557, %r9580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9584, %r9576, %r9581;
	// end inline asm
	// begin inline asm
	mov.b32 %r9592, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9603, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9589, %r842, %r935, %r9592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9593, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9594, %r9592, %r9593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9597, %r9589, %r9594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9600, %r853, %r935, %r9603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9604, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9605, %r9603, %r9604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9608, %r9600, %r9605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9611, %r842, %r957, %r9592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9615, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9616, %r9592, %r9615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9619, %r9611, %r9616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9622, %r853, %r957, %r9603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9626, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9627, %r9603, %r9626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9630, %r9622, %r9627;
	// end inline asm
	// begin inline asm
	mov.b32 %r9638, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9649, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9635, %r842, %r981, %r9638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9639, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9640, %r9638, %r9639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9643, %r9635, %r9640;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9646, %r853, %r981, %r9649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9650, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9651, %r9649, %r9650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9654, %r9646, %r9651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9657, %r842, %r1003, %r9638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9661, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9662, %r9638, %r9661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9665, %r9657, %r9662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9668, %r853, %r1003, %r9649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9672, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9673, %r9649, %r9672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9676, %r9668, %r9673;
	// end inline asm
	// begin inline asm
	mov.b32 %r9684, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9695, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9681, %r842, %r1027, %r9684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9685, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9686, %r9684, %r9685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9689, %r9681, %r9686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9692, %r853, %r1027, %r9695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9696, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9697, %r9695, %r9696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9700, %r9692, %r9697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9703, %r842, %r1049, %r9684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9707, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9708, %r9684, %r9707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9711, %r9703, %r9708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9714, %r853, %r1049, %r9695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9718, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9719, %r9695, %r9718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9722, %r9714, %r9719;
	// end inline asm
	// begin inline asm
	mov.b32 %r9730, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9741, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9727, %r842, %r1073, %r9730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9731, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9732, %r9730, %r9731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9735, %r9727, %r9732;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9738, %r853, %r1073, %r9741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9742, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9743, %r9741, %r9742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9746, %r9738, %r9743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9749, %r842, %r1095, %r9730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9753, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9754, %r9730, %r9753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9757, %r9749, %r9754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9760, %r853, %r1095, %r9741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9764, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9765, %r9741, %r9764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9768, %r9760, %r9765;
	// end inline asm
	// begin inline asm
	mov.b32 %r9776, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9787, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9773, %r842, %r1119, %r9776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9777, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9778, %r9776, %r9777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9781, %r9773, %r9778;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9784, %r853, %r1119, %r9787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9788, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9789, %r9787, %r9788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9792, %r9784, %r9789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9795, %r842, %r1141, %r9776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9799, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9800, %r9776, %r9799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9803, %r9795, %r9800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9806, %r853, %r1141, %r9787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9810, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9811, %r9787, %r9810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9814, %r9806, %r9811;
	// end inline asm
	// begin inline asm
	mov.b32 %r9822, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9833, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9819, %r842, %r1165, %r9822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9823, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9824, %r9822, %r9823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9827, %r9819, %r9824;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9830, %r853, %r1165, %r9833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9834, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9835, %r9833, %r9834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9838, %r9830, %r9835;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9841, %r842, %r1187, %r9822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9845, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9846, %r9822, %r9845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9849, %r9841, %r9846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9852, %r853, %r1187, %r9833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9856, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9857, %r9833, %r9856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9860, %r9852, %r9857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9863, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9865, %r9863, %r9505, %r9367;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9869, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9871, %r9869, %r9516, %r9371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9875, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9877, %r9875, %r9527, %r9375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9881, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9883, %r9881, %r9538, %r9379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9887, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9889, %r9887, %r9551, %r9383;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9893, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9895, %r9893, %r9562, %r9387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9899, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9901, %r9899, %r9573, %r9391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9905, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9907, %r9905, %r9584, %r9395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9911, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9913, %r9911, %r9597, %r9399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9917, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9919, %r9917, %r9608, %r9403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9923, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9925, %r9923, %r9619, %r9407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9929, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9931, %r9929, %r9630, %r9411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9935, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9937, %r9935, %r9643, %r9415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9941, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9943, %r9941, %r9654, %r9419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9947, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9949, %r9947, %r9665, %r9423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9953, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9955, %r9953, %r9676, %r9427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9959, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9961, %r9959, %r9689, %r9431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9965, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9967, %r9965, %r9700, %r9435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9971, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9973, %r9971, %r9711, %r9439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9977, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9979, %r9977, %r9722, %r9443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9983, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9985, %r9983, %r9735, %r9447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9989, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9991, %r9989, %r9746, %r9451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9995, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9997, %r9995, %r9757, %r9455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10001, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10003, %r10001, %r9768, %r9459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10007, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10009, %r10007, %r9781, %r9463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10013, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10015, %r10013, %r9792, %r9467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10019, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10021, %r10019, %r9803, %r9471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10025, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10027, %r10025, %r9814, %r9475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10031, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10033, %r10031, %r9827, %r9479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10037, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10039, %r10037, %r9838, %r9483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10043, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10045, %r10043, %r9849, %r9487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10049, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10051, %r10049, %r9860, %r9491;
	// end inline asm
	// begin inline asm
	mov.b32 %r10060, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10071, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10057, %r842, %r4659, %r10060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10061, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10062, %r10060, %r10061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10065, %r10057, %r10062;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10068, %r853, %r4659, %r10071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10072, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10073, %r10071, %r10072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10076, %r10068, %r10073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10079, %r842, %r4681, %r10060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10083, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10084, %r10060, %r10083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10087, %r10079, %r10084;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10090, %r853, %r4681, %r10071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10094, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10095, %r10071, %r10094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10098, %r10090, %r10095;
	// end inline asm
	// begin inline asm
	mov.b32 %r10106, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10117, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10103, %r842, %r4705, %r10106, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10107, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10108, %r10106, %r10107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10111, %r10103, %r10108;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10114, %r853, %r4705, %r10117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10118, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10119, %r10117, %r10118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10122, %r10114, %r10119;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10125, %r842, %r4727, %r10106, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10129, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10130, %r10106, %r10129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10133, %r10125, %r10130;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10136, %r853, %r4727, %r10117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10140, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10141, %r10117, %r10140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10144, %r10136, %r10141;
	// end inline asm
	// begin inline asm
	mov.b32 %r10152, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10163, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10149, %r842, %r4751, %r10152, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10153, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10154, %r10152, %r10153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10157, %r10149, %r10154;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10160, %r853, %r4751, %r10163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10164, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10165, %r10163, %r10164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10168, %r10160, %r10165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10171, %r842, %r4773, %r10152, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10175, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10176, %r10152, %r10175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10179, %r10171, %r10176;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10182, %r853, %r4773, %r10163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10186, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10187, %r10163, %r10186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10190, %r10182, %r10187;
	// end inline asm
	// begin inline asm
	mov.b32 %r10198, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10209, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10195, %r842, %r4797, %r10198, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10199, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10200, %r10198, %r10199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10203, %r10195, %r10200;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10206, %r853, %r4797, %r10209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10210, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10211, %r10209, %r10210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10214, %r10206, %r10211;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10217, %r842, %r4819, %r10198, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10221, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10222, %r10198, %r10221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10225, %r10217, %r10222;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10228, %r853, %r4819, %r10209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10232, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10233, %r10209, %r10232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10236, %r10228, %r10233;
	// end inline asm
	// begin inline asm
	mov.b32 %r10244, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10255, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10241, %r842, %r4843, %r10244, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10245, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10246, %r10244, %r10245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10249, %r10241, %r10246;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10252, %r853, %r4843, %r10255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10256, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10257, %r10255, %r10256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10260, %r10252, %r10257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10263, %r842, %r4865, %r10244, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10267, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10268, %r10244, %r10267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10271, %r10263, %r10268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10274, %r853, %r4865, %r10255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10278, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10279, %r10255, %r10278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10282, %r10274, %r10279;
	// end inline asm
	// begin inline asm
	mov.b32 %r10290, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10301, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10287, %r842, %r4889, %r10290, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10291, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10292, %r10290, %r10291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10295, %r10287, %r10292;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10298, %r853, %r4889, %r10301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10302, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10303, %r10301, %r10302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10306, %r10298, %r10303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10309, %r842, %r4911, %r10290, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10313, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10314, %r10290, %r10313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10317, %r10309, %r10314;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10320, %r853, %r4911, %r10301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10324, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10325, %r10301, %r10324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10328, %r10320, %r10325;
	// end inline asm
	// begin inline asm
	mov.b32 %r10336, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10347, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10333, %r842, %r4935, %r10336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10337, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10338, %r10336, %r10337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10341, %r10333, %r10338;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10344, %r853, %r4935, %r10347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10348, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10349, %r10347, %r10348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10352, %r10344, %r10349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10355, %r842, %r4957, %r10336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10359, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10360, %r10336, %r10359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10363, %r10355, %r10360;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10366, %r853, %r4957, %r10347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10370, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10371, %r10347, %r10370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10374, %r10366, %r10371;
	// end inline asm
	// begin inline asm
	mov.b32 %r10382, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10393, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10379, %r842, %r4981, %r10382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10383, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10384, %r10382, %r10383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10387, %r10379, %r10384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10390, %r853, %r4981, %r10393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10394, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10395, %r10393, %r10394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10398, %r10390, %r10395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10401, %r842, %r5003, %r10382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10405, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10406, %r10382, %r10405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10409, %r10401, %r10406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10412, %r853, %r5003, %r10393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10416, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10417, %r10393, %r10416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10420, %r10412, %r10417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10558, %r334, %r10065, %r9865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10555, %r334, %r10076, %r9871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10567, %r334, %r10087, %r9877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10564, %r334, %r10098, %r9883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10576, %r334, %r10111, %r9889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10573, %r334, %r10122, %r9895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10585, %r334, %r10133, %r9901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10582, %r334, %r10144, %r9907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10594, %r334, %r10157, %r9913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10591, %r334, %r10168, %r9919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10603, %r334, %r10179, %r9925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10600, %r334, %r10190, %r9931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10612, %r334, %r10203, %r9937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10609, %r334, %r10214, %r9943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10621, %r334, %r10225, %r9949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10618, %r334, %r10236, %r9955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10630, %r352, %r10249, %r9961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10627, %r352, %r10260, %r9967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10639, %r352, %r10271, %r9973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10636, %r352, %r10282, %r9979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10648, %r352, %r10295, %r9985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10645, %r352, %r10306, %r9991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10657, %r352, %r10317, %r9997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10654, %r352, %r10328, %r10003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10666, %r352, %r10341, %r10009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10663, %r352, %r10352, %r10015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10675, %r352, %r10363, %r10021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10672, %r352, %r10374, %r10027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10684, %r352, %r10387, %r10033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10681, %r352, %r10398, %r10039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10693, %r352, %r10409, %r10045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10690, %r352, %r10420, %r10051;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10551, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10553, %r10551, %r10555;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10556, %r391, %r10558, %r10553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10560, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10562, %r10560, %r10564;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10565, %r391, %r10567, %r10562;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10569, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10571, %r10569, %r10573;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10574, %r391, %r10576, %r10571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10578, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10580, %r10578, %r10582;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10583, %r391, %r10585, %r10580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10587, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10589, %r10587, %r10591;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10592, %r391, %r10594, %r10589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10596, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10598, %r10596, %r10600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10601, %r391, %r10603, %r10598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10605, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10607, %r10605, %r10609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10610, %r391, %r10612, %r10607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10614, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10616, %r10614, %r10618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10619, %r391, %r10621, %r10616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10623, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10625, %r10623, %r10627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10628, %r394, %r10630, %r10625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10632, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10634, %r10632, %r10636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10637, %r394, %r10639, %r10634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10641, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10643, %r10641, %r10645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10646, %r394, %r10648, %r10643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10650, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10652, %r10650, %r10654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10655, %r394, %r10657, %r10652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10659, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10661, %r10659, %r10663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10664, %r394, %r10666, %r10661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10668, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10670, %r10668, %r10672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10673, %r394, %r10675, %r10670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10677, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10679, %r10677, %r10681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10682, %r394, %r10684, %r10679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10686, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10688, %r10686, %r10690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10691, %r394, %r10693, %r10688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10695, %r397, %r10558;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10698, %r391, %r10555, %r10695;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10702, %r397, %r10567;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10705, %r391, %r10564, %r10702;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10709, %r397, %r10576;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10712, %r391, %r10573, %r10709;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10716, %r397, %r10585;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10719, %r391, %r10582, %r10716;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10723, %r397, %r10594;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10726, %r391, %r10591, %r10723;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10730, %r397, %r10603;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10733, %r391, %r10600, %r10730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10737, %r397, %r10612;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10740, %r391, %r10609, %r10737;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10744, %r397, %r10621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10747, %r391, %r10618, %r10744;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10751, %r400, %r10630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10754, %r394, %r10627, %r10751;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10758, %r400, %r10639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10761, %r394, %r10636, %r10758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10765, %r400, %r10648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10768, %r394, %r10645, %r10765;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10772, %r400, %r10657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10775, %r394, %r10654, %r10772;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10779, %r400, %r10666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10782, %r394, %r10663, %r10779;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10786, %r400, %r10675;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10789, %r394, %r10672, %r10786;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10793, %r400, %r10684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10796, %r394, %r10681, %r10793;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10800, %r400, %r10693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10803, %r394, %r10690, %r10800;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10974, %r10971}, {%r458, %r464, %r461, %r467}, {%r10556, %r10698}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10983, %r10980}, {%r458, %r464, %r461, %r467}, {%r10565, %r10705}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10992, %r10989}, {%r458, %r464, %r461, %r467}, {%r10574, %r10712}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11001, %r10998}, {%r458, %r464, %r461, %r467}, {%r10583, %r10719}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11010, %r11007}, {%r458, %r464, %r461, %r467}, {%r10592, %r10726}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11019, %r11016}, {%r458, %r464, %r461, %r467}, {%r10601, %r10733}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11028, %r11025}, {%r458, %r464, %r461, %r467}, {%r10610, %r10740}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11037, %r11034}, {%r458, %r464, %r461, %r467}, {%r10619, %r10747}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11046, %r11043}, {%r458, %r464, %r461, %r467}, {%r10628, %r10754}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11055, %r11052}, {%r458, %r464, %r461, %r467}, {%r10637, %r10761}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11064, %r11061}, {%r458, %r464, %r461, %r467}, {%r10646, %r10768}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11073, %r11070}, {%r458, %r464, %r461, %r467}, {%r10655, %r10775}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11082, %r11079}, {%r458, %r464, %r461, %r467}, {%r10664, %r10782}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11091, %r11088}, {%r458, %r464, %r461, %r467}, {%r10673, %r10789}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11100, %r11097}, {%r458, %r464, %r461, %r467}, {%r10682, %r10796}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11109, %r11106}, {%r458, %r464, %r461, %r467}, {%r10691, %r10803}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10967, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10969, %r10967, %r10971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10972, %r508, %r10974, %r10969;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10976, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10978, %r10976, %r10980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10981, %r508, %r10983, %r10978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10985, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10987, %r10985, %r10989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10990, %r508, %r10992, %r10987;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10994, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10996, %r10994, %r10998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10999, %r508, %r11001, %r10996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11003, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11005, %r11003, %r11007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11008, %r508, %r11010, %r11005;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11012, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11014, %r11012, %r11016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11017, %r508, %r11019, %r11014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11021, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11023, %r11021, %r11025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11026, %r508, %r11028, %r11023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11030, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11032, %r11030, %r11034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11035, %r508, %r11037, %r11032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11039, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11041, %r11039, %r11043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11044, %r508, %r11046, %r11041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11048, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11050, %r11048, %r11052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11053, %r508, %r11055, %r11050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11057, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11059, %r11057, %r11061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11062, %r508, %r11064, %r11059;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11066, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11068, %r11066, %r11070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11071, %r508, %r11073, %r11068;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11075, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11077, %r11075, %r11079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11080, %r508, %r11082, %r11077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11084, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11086, %r11084, %r11088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11089, %r508, %r11091, %r11086;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11093, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11095, %r11093, %r11097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11098, %r508, %r11100, %r11095;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11102, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11104, %r11102, %r11106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11107, %r508, %r11109, %r11104;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11111, %r511, %r10974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11114, %r508, %r10971, %r11111;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11118, %r511, %r10983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11121, %r508, %r10980, %r11118;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11125, %r511, %r10992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11128, %r508, %r10989, %r11125;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11132, %r511, %r11001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11135, %r508, %r10998, %r11132;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11139, %r511, %r11010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11142, %r508, %r11007, %r11139;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11146, %r511, %r11019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11149, %r508, %r11016, %r11146;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11153, %r511, %r11028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11156, %r508, %r11025, %r11153;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11160, %r511, %r11037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11163, %r508, %r11034, %r11160;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11167, %r511, %r11046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11170, %r508, %r11043, %r11167;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11174, %r511, %r11055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11177, %r508, %r11052, %r11174;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11181, %r511, %r11064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11184, %r508, %r11061, %r11181;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11188, %r511, %r11073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11191, %r508, %r11070, %r11188;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11195, %r511, %r11082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11198, %r508, %r11079, %r11195;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11202, %r511, %r11091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11205, %r508, %r11088, %r11202;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11209, %r511, %r11100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11212, %r508, %r11097, %r11209;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11216, %r511, %r11109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11219, %r508, %r11106, %r11216;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11512, %r11515}, {%r546, %r552, %r549, %r555}, {%r10972, %r11114}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11518, %r11521}, {%r546, %r552, %r549, %r555}, {%r10981, %r11121}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11524, %r11527}, {%r546, %r552, %r549, %r555}, {%r10990, %r11128}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11530, %r11533}, {%r546, %r552, %r549, %r555}, {%r10999, %r11135}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11536, %r11539}, {%r546, %r552, %r549, %r555}, {%r11008, %r11142}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11542, %r11545}, {%r546, %r552, %r549, %r555}, {%r11017, %r11149}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11548, %r11551}, {%r546, %r552, %r549, %r555}, {%r11026, %r11156}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11554, %r11557}, {%r546, %r552, %r549, %r555}, {%r11035, %r11163}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11513, %r11516}, {%r546, %r552, %r549, %r555}, {%r11044, %r11170}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11519, %r11522}, {%r546, %r552, %r549, %r555}, {%r11053, %r11177}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11525, %r11528}, {%r546, %r552, %r549, %r555}, {%r11062, %r11184}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11531, %r11534}, {%r546, %r552, %r549, %r555}, {%r11071, %r11191}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11537, %r11540}, {%r546, %r552, %r549, %r555}, {%r11080, %r11198}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11543, %r11546}, {%r546, %r552, %r549, %r555}, {%r11089, %r11205}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11549, %r11552}, {%r546, %r552, %r549, %r555}, {%r11098, %r11212}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11555, %r11558}, {%r546, %r552, %r549, %r555}, {%r11107, %r11219}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11511, %r11512, %r11513;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11514, %r11515, %r11516;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11517, %r11518, %r11519;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11520, %r11521, %r11522;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11523, %r11524, %r11525;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11526, %r11527, %r11528;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11529, %r11530, %r11531;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11532, %r11533, %r11534;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11535, %r11536, %r11537;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11538, %r11539, %r11540;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11541, %r11542, %r11543;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11544, %r11545, %r11546;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11547, %r11548, %r11549;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11550, %r11551, %r11552;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11553, %r11554, %r11555;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11556, %r11557, %r11558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11559, %r11512, %r11513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11562, %r11515, %r11516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11565, %r11518, %r11519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11568, %r11521, %r11522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11571, %r11524, %r11525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11574, %r11527, %r11528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11577, %r11530, %r11531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11580, %r11533, %r11534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11583, %r11536, %r11537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11586, %r11539, %r11540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11589, %r11542, %r11543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11592, %r11545, %r11546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11595, %r11548, %r11549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11598, %r11551, %r11552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11601, %r11554, %r11555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11604, %r11557, %r11558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11607, %r132, %r11511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11610, %r132, %r11514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11613, %r132, %r11517;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11616, %r132, %r11520;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11619, %r132, %r11523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11622, %r132, %r11526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11625, %r132, %r11529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11628, %r132, %r11532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11631, %r132, %r11535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11634, %r132, %r11538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11637, %r132, %r11541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11640, %r132, %r11544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11643, %r132, %r11547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11646, %r132, %r11550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11649, %r132, %r11553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11652, %r132, %r11556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11655, %r133, %r11559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11658, %r133, %r11562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11661, %r133, %r11565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11664, %r133, %r11568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11667, %r133, %r11571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11670, %r133, %r11574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11673, %r133, %r11577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11676, %r133, %r11580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11679, %r133, %r11583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11682, %r133, %r11586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11685, %r133, %r11589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11688, %r133, %r11592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11691, %r133, %r11595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11694, %r133, %r11598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11697, %r133, %r11601;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11700, %r133, %r11604;
	// end inline asm
	// begin inline asm
	mov.b32 %r11703, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11704, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11705, %r11607, %r11703;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11708, %r11705, %r11704;
	// end inline asm
	// begin inline asm
	mov.b32 %r11711, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11712, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11713, %r11610, %r11711;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11716, %r11713, %r11712;
	// end inline asm
	// begin inline asm
	mov.b32 %r11719, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11720, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11721, %r11613, %r11719;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11724, %r11721, %r11720;
	// end inline asm
	// begin inline asm
	mov.b32 %r11727, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11728, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11729, %r11616, %r11727;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11732, %r11729, %r11728;
	// end inline asm
	// begin inline asm
	mov.b32 %r11735, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11736, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11737, %r11619, %r11735;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11740, %r11737, %r11736;
	// end inline asm
	// begin inline asm
	mov.b32 %r11743, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11744, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11745, %r11622, %r11743;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11748, %r11745, %r11744;
	// end inline asm
	// begin inline asm
	mov.b32 %r11751, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11752, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11753, %r11625, %r11751;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11756, %r11753, %r11752;
	// end inline asm
	// begin inline asm
	mov.b32 %r11759, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11760, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11761, %r11628, %r11759;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11764, %r11761, %r11760;
	// end inline asm
	// begin inline asm
	mov.b32 %r11767, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11768, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11769, %r11631, %r11767;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11772, %r11769, %r11768;
	// end inline asm
	// begin inline asm
	mov.b32 %r11775, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11776, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11777, %r11634, %r11775;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11780, %r11777, %r11776;
	// end inline asm
	// begin inline asm
	mov.b32 %r11783, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11784, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11785, %r11637, %r11783;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11788, %r11785, %r11784;
	// end inline asm
	// begin inline asm
	mov.b32 %r11791, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11792, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11793, %r11640, %r11791;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11796, %r11793, %r11792;
	// end inline asm
	// begin inline asm
	mov.b32 %r11799, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11800, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11801, %r11643, %r11799;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11804, %r11801, %r11800;
	// end inline asm
	// begin inline asm
	mov.b32 %r11807, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11808, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11809, %r11646, %r11807;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11812, %r11809, %r11808;
	// end inline asm
	// begin inline asm
	mov.b32 %r11815, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11816, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11817, %r11649, %r11815;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11820, %r11817, %r11816;
	// end inline asm
	// begin inline asm
	mov.b32 %r11823, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11824, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11825, %r11652, %r11823;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11828, %r11825, %r11824;
	// end inline asm
	// begin inline asm
	mov.b32 %r11831, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11832, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11833, %r11655, %r11831;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11836, %r11833, %r11832;
	// end inline asm
	// begin inline asm
	mov.b32 %r11839, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11840, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11841, %r11658, %r11839;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11844, %r11841, %r11840;
	// end inline asm
	// begin inline asm
	mov.b32 %r11847, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11848, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11849, %r11661, %r11847;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11852, %r11849, %r11848;
	// end inline asm
	// begin inline asm
	mov.b32 %r11855, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11856, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11857, %r11664, %r11855;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11860, %r11857, %r11856;
	// end inline asm
	// begin inline asm
	mov.b32 %r11863, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11864, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11865, %r11667, %r11863;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11868, %r11865, %r11864;
	// end inline asm
	// begin inline asm
	mov.b32 %r11871, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11872, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11873, %r11670, %r11871;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11876, %r11873, %r11872;
	// end inline asm
	// begin inline asm
	mov.b32 %r11879, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11880, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11881, %r11673, %r11879;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11884, %r11881, %r11880;
	// end inline asm
	// begin inline asm
	mov.b32 %r11887, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11888, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11889, %r11676, %r11887;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11892, %r11889, %r11888;
	// end inline asm
	// begin inline asm
	mov.b32 %r11895, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11896, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11897, %r11679, %r11895;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11900, %r11897, %r11896;
	// end inline asm
	// begin inline asm
	mov.b32 %r11903, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11904, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11905, %r11682, %r11903;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11908, %r11905, %r11904;
	// end inline asm
	// begin inline asm
	mov.b32 %r11911, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11912, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11913, %r11685, %r11911;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11916, %r11913, %r11912;
	// end inline asm
	// begin inline asm
	mov.b32 %r11919, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11920, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11921, %r11688, %r11919;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11924, %r11921, %r11920;
	// end inline asm
	// begin inline asm
	mov.b32 %r11927, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11928, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11929, %r11691, %r11927;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11932, %r11929, %r11928;
	// end inline asm
	// begin inline asm
	mov.b32 %r11935, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11936, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11937, %r11694, %r11935;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11940, %r11937, %r11936;
	// end inline asm
	// begin inline asm
	mov.b32 %r11943, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11944, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11945, %r11697, %r11943;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11948, %r11945, %r11944;
	// end inline asm
	// begin inline asm
	mov.b32 %r11951, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11952, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11953, %r11700, %r11951;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11956, %r11953, %r11952;
	// end inline asm
	// begin inline asm
	mov.b32 %r11962, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r11960, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11961, %r11962, %r11960;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11964, %r11708, %r11961;
	// end inline asm
	// begin inline asm
	mov.b32 %r11967, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11968, %r11962, %r11967;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11971, %r11716, %r11968;
	// end inline asm
	// begin inline asm
	mov.b32 %r11974, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11975, %r11962, %r11974;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11978, %r11724, %r11975;
	// end inline asm
	// begin inline asm
	mov.b32 %r11981, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11982, %r11962, %r11981;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11985, %r11732, %r11982;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11988, %r11964, %r11978, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11992, %r11971, %r11985, %r4359;
	// end inline asm
	shl.b32 	%r11999, %r11992, 4;
	// begin inline asm
	lop3.b32 %r11996, %r4365, %r11988, %r11999, 202;
	// end inline asm
	xor.b32  	%r16175, %r11996, -2004318072;
	// begin inline asm
	mov.b32 %r12003, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12001, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12002, %r12003, %r12001;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12005, %r11740, %r12002;
	// end inline asm
	// begin inline asm
	mov.b32 %r12008, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12009, %r12003, %r12008;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12012, %r11748, %r12009;
	// end inline asm
	// begin inline asm
	mov.b32 %r12015, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12016, %r12003, %r12015;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12019, %r11756, %r12016;
	// end inline asm
	// begin inline asm
	mov.b32 %r12022, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12023, %r12003, %r12022;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12026, %r11764, %r12023;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12029, %r12005, %r12019, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12033, %r12012, %r12026, %r4359;
	// end inline asm
	shl.b32 	%r12040, %r12033, 4;
	// begin inline asm
	lop3.b32 %r12037, %r4365, %r12029, %r12040, 202;
	// end inline asm
	xor.b32  	%r16176, %r12037, -2004318072;
	// begin inline asm
	mov.b32 %r12044, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12042, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12043, %r12044, %r12042;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12046, %r11772, %r12043;
	// end inline asm
	// begin inline asm
	mov.b32 %r12049, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12050, %r12044, %r12049;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12053, %r11780, %r12050;
	// end inline asm
	// begin inline asm
	mov.b32 %r12056, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12057, %r12044, %r12056;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12060, %r11788, %r12057;
	// end inline asm
	// begin inline asm
	mov.b32 %r12063, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12064, %r12044, %r12063;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12067, %r11796, %r12064;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12070, %r12046, %r12060, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12074, %r12053, %r12067, %r4359;
	// end inline asm
	shl.b32 	%r12081, %r12074, 4;
	// begin inline asm
	lop3.b32 %r12078, %r4365, %r12070, %r12081, 202;
	// end inline asm
	xor.b32  	%r16177, %r12078, -2004318072;
	// begin inline asm
	mov.b32 %r12085, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12083, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12084, %r12085, %r12083;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12087, %r11804, %r12084;
	// end inline asm
	// begin inline asm
	mov.b32 %r12090, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12091, %r12085, %r12090;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12094, %r11812, %r12091;
	// end inline asm
	// begin inline asm
	mov.b32 %r12097, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12098, %r12085, %r12097;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12101, %r11820, %r12098;
	// end inline asm
	// begin inline asm
	mov.b32 %r12104, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12105, %r12085, %r12104;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12108, %r11828, %r12105;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12111, %r12087, %r12101, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12115, %r12094, %r12108, %r4359;
	// end inline asm
	shl.b32 	%r12122, %r12115, 4;
	// begin inline asm
	lop3.b32 %r12119, %r4365, %r12111, %r12122, 202;
	// end inline asm
	xor.b32  	%r16178, %r12119, -2004318072;
	// begin inline asm
	mov.b32 %r12126, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12124, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12125, %r12126, %r12124;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12128, %r11836, %r12125;
	// end inline asm
	// begin inline asm
	mov.b32 %r12131, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12132, %r12126, %r12131;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12135, %r11844, %r12132;
	// end inline asm
	// begin inline asm
	mov.b32 %r12138, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12139, %r12126, %r12138;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12142, %r11852, %r12139;
	// end inline asm
	// begin inline asm
	mov.b32 %r12145, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12146, %r12126, %r12145;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12149, %r11860, %r12146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12152, %r12128, %r12142, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12156, %r12135, %r12149, %r4359;
	// end inline asm
	shl.b32 	%r12163, %r12156, 4;
	// begin inline asm
	lop3.b32 %r12160, %r4365, %r12152, %r12163, 202;
	// end inline asm
	xor.b32  	%r16179, %r12160, -2004318072;
	// begin inline asm
	mov.b32 %r12167, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12165, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12166, %r12167, %r12165;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12169, %r11868, %r12166;
	// end inline asm
	// begin inline asm
	mov.b32 %r12172, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12173, %r12167, %r12172;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12176, %r11876, %r12173;
	// end inline asm
	// begin inline asm
	mov.b32 %r12179, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12180, %r12167, %r12179;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12183, %r11884, %r12180;
	// end inline asm
	// begin inline asm
	mov.b32 %r12186, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12187, %r12167, %r12186;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12190, %r11892, %r12187;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12193, %r12169, %r12183, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12197, %r12176, %r12190, %r4359;
	// end inline asm
	shl.b32 	%r12204, %r12197, 4;
	// begin inline asm
	lop3.b32 %r12201, %r4365, %r12193, %r12204, 202;
	// end inline asm
	xor.b32  	%r16180, %r12201, -2004318072;
	// begin inline asm
	mov.b32 %r12208, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12206, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12207, %r12208, %r12206;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12210, %r11900, %r12207;
	// end inline asm
	// begin inline asm
	mov.b32 %r12213, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12214, %r12208, %r12213;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12217, %r11908, %r12214;
	// end inline asm
	// begin inline asm
	mov.b32 %r12220, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12221, %r12208, %r12220;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12224, %r11916, %r12221;
	// end inline asm
	// begin inline asm
	mov.b32 %r12227, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12228, %r12208, %r12227;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12231, %r11924, %r12228;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12234, %r12210, %r12224, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12238, %r12217, %r12231, %r4359;
	// end inline asm
	shl.b32 	%r12245, %r12238, 4;
	// begin inline asm
	lop3.b32 %r12242, %r4365, %r12234, %r12245, 202;
	// end inline asm
	xor.b32  	%r16181, %r12242, -2004318072;
	// begin inline asm
	mov.b32 %r12249, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12247, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12248, %r12249, %r12247;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12251, %r11932, %r12248;
	// end inline asm
	// begin inline asm
	mov.b32 %r12254, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12255, %r12249, %r12254;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12258, %r11940, %r12255;
	// end inline asm
	// begin inline asm
	mov.b32 %r12261, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12262, %r12249, %r12261;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12265, %r11948, %r12262;
	// end inline asm
	// begin inline asm
	mov.b32 %r12268, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12269, %r12249, %r12268;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12272, %r11956, %r12269;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12275, %r12251, %r12265, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12279, %r12258, %r12272, %r4359;
	// end inline asm
	shl.b32 	%r12286, %r12279, 4;
	// begin inline asm
	lop3.b32 %r12283, %r4365, %r12275, %r12286, 202;
	// end inline asm
	xor.b32  	%r16182, %r12283, -2004318072;
	st.shared.u32 	[%rd104], %r16175;
	st.shared.u32 	[%rd106], %r16176;
	st.shared.u32 	[%rd108], %r16177;
	st.shared.u32 	[%rd110], %r16178;
	st.shared.u32 	[%rd112], %r16179;
	st.shared.u32 	[%rd114], %r16180;
	st.shared.u32 	[%rd116], %r16181;
	st.shared.u32 	[%rd118], %r16182;
	ld.shared.u32 	%r16291, [%rd88];
	ld.shared.u32 	%r16292, [%rd90];
	ld.shared.u32 	%r16293, [%rd92];
	ld.shared.u32 	%r16294, [%rd94];
	ld.shared.u32 	%r16303, [%rd96];
	ld.shared.u32 	%r16304, [%rd98];
	ld.shared.u32 	%r16305, [%rd100];
	ld.shared.u32 	%r16306, [%rd102];
	// begin inline asm
	mov.b32 %r12292, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12303, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12291, %r16291, -2004318072;
	// begin inline asm
	lop3.b32 %r12289, %r842, %r12291, %r12292, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12293, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12294, %r12292, %r12293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12297, %r12289, %r12294;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12300, %r853, %r12291, %r12303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12304, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12305, %r12303, %r12304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12308, %r12300, %r12305;
	// end inline asm
	shr.u32 	%r12313, %r12291, 8;
	// begin inline asm
	lop3.b32 %r12311, %r842, %r12313, %r12292, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12315, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12316, %r12292, %r12315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12319, %r12311, %r12316;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12322, %r853, %r12313, %r12303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12326, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12327, %r12303, %r12326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12330, %r12322, %r12327;
	// end inline asm
	// begin inline asm
	mov.b32 %r12338, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12349, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12337, %r16292, -2004318072;
	// begin inline asm
	lop3.b32 %r12335, %r842, %r12337, %r12338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12339, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12340, %r12338, %r12339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12343, %r12335, %r12340;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12346, %r853, %r12337, %r12349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12350, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12351, %r12349, %r12350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12354, %r12346, %r12351;
	// end inline asm
	shr.u32 	%r12359, %r12337, 8;
	// begin inline asm
	lop3.b32 %r12357, %r842, %r12359, %r12338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12361, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12362, %r12338, %r12361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12365, %r12357, %r12362;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12368, %r853, %r12359, %r12349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12372, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12373, %r12349, %r12372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12376, %r12368, %r12373;
	// end inline asm
	// begin inline asm
	mov.b32 %r12384, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12395, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12383, %r16293, -2004318072;
	// begin inline asm
	lop3.b32 %r12381, %r842, %r12383, %r12384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12385, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12386, %r12384, %r12385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12389, %r12381, %r12386;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12392, %r853, %r12383, %r12395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12396, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12397, %r12395, %r12396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12400, %r12392, %r12397;
	// end inline asm
	shr.u32 	%r12405, %r12383, 8;
	// begin inline asm
	lop3.b32 %r12403, %r842, %r12405, %r12384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12407, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12408, %r12384, %r12407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12411, %r12403, %r12408;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12414, %r853, %r12405, %r12395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12418, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12419, %r12395, %r12418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12422, %r12414, %r12419;
	// end inline asm
	// begin inline asm
	mov.b32 %r12430, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12441, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12429, %r16294, -2004318072;
	// begin inline asm
	lop3.b32 %r12427, %r842, %r12429, %r12430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12431, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12432, %r12430, %r12431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12435, %r12427, %r12432;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12438, %r853, %r12429, %r12441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12442, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12443, %r12441, %r12442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12446, %r12438, %r12443;
	// end inline asm
	shr.u32 	%r12451, %r12429, 8;
	// begin inline asm
	lop3.b32 %r12449, %r842, %r12451, %r12430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12453, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12454, %r12430, %r12453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12457, %r12449, %r12454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12460, %r853, %r12451, %r12441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12464, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12465, %r12441, %r12464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12468, %r12460, %r12465;
	// end inline asm
	// begin inline asm
	mov.b32 %r12476, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12487, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12475, %r16303, -2004318072;
	// begin inline asm
	lop3.b32 %r12473, %r842, %r12475, %r12476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12477, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12478, %r12476, %r12477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12481, %r12473, %r12478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12484, %r853, %r12475, %r12487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12488, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12489, %r12487, %r12488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12492, %r12484, %r12489;
	// end inline asm
	shr.u32 	%r12497, %r12475, 8;
	// begin inline asm
	lop3.b32 %r12495, %r842, %r12497, %r12476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12499, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12500, %r12476, %r12499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12503, %r12495, %r12500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12506, %r853, %r12497, %r12487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12510, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12511, %r12487, %r12510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12514, %r12506, %r12511;
	// end inline asm
	// begin inline asm
	mov.b32 %r12522, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12533, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12521, %r16304, -2004318072;
	// begin inline asm
	lop3.b32 %r12519, %r842, %r12521, %r12522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12523, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12524, %r12522, %r12523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12527, %r12519, %r12524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12530, %r853, %r12521, %r12533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12534, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12535, %r12533, %r12534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12538, %r12530, %r12535;
	// end inline asm
	shr.u32 	%r12543, %r12521, 8;
	// begin inline asm
	lop3.b32 %r12541, %r842, %r12543, %r12522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12545, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12546, %r12522, %r12545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12549, %r12541, %r12546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12552, %r853, %r12543, %r12533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12556, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12557, %r12533, %r12556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12560, %r12552, %r12557;
	// end inline asm
	// begin inline asm
	mov.b32 %r12568, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12579, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12567, %r16305, -2004318072;
	// begin inline asm
	lop3.b32 %r12565, %r842, %r12567, %r12568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12569, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12570, %r12568, %r12569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12573, %r12565, %r12570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12576, %r853, %r12567, %r12579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12580, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12581, %r12579, %r12580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12584, %r12576, %r12581;
	// end inline asm
	shr.u32 	%r12589, %r12567, 8;
	// begin inline asm
	lop3.b32 %r12587, %r842, %r12589, %r12568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12591, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12592, %r12568, %r12591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12595, %r12587, %r12592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12598, %r853, %r12589, %r12579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12602, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12603, %r12579, %r12602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12606, %r12598, %r12603;
	// end inline asm
	// begin inline asm
	mov.b32 %r12614, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12625, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12613, %r16306, -2004318072;
	// begin inline asm
	lop3.b32 %r12611, %r842, %r12613, %r12614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12615, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12616, %r12614, %r12615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12619, %r12611, %r12616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12622, %r853, %r12613, %r12625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12626, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12627, %r12625, %r12626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12630, %r12622, %r12627;
	// end inline asm
	shr.u32 	%r12635, %r12613, 8;
	// begin inline asm
	lop3.b32 %r12633, %r842, %r12635, %r12614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12637, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12638, %r12614, %r12637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12641, %r12633, %r12638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12644, %r853, %r12635, %r12625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12648, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12649, %r12625, %r12648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12652, %r12644, %r12649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12655, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12657, %r12655, %r12297;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12660, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12662, %r12660, %r12308;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12665, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12667, %r12665, %r12319;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12670, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12672, %r12670, %r12330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12675, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12677, %r12675, %r12343;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12680, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12682, %r12680, %r12354;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12685, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12687, %r12685, %r12365;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12690, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12692, %r12690, %r12376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12695, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12697, %r12695, %r12389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12700, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12702, %r12700, %r12400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12705, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12707, %r12705, %r12411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12710, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12712, %r12710, %r12422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12715, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12717, %r12715, %r12435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12720, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12722, %r12720, %r12446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12725, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12727, %r12725, %r12457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12730, %r370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12732, %r12730, %r12468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12735, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12737, %r12735, %r12481;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12740, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12742, %r12740, %r12492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12745, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12747, %r12745, %r12503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12750, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12752, %r12750, %r12514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12755, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12757, %r12755, %r12527;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12760, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12762, %r12760, %r12538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12765, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12767, %r12765, %r12549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12770, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12772, %r12770, %r12560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12775, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12777, %r12775, %r12573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12780, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12782, %r12780, %r12584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12785, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12787, %r12785, %r12595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12790, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12792, %r12790, %r12606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12795, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12797, %r12795, %r12619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12800, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12802, %r12800, %r12630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12805, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12807, %r12805, %r12641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12810, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12812, %r12810, %r12652;
	// end inline asm
	// begin inline asm
	mov.b32 %r12820, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12831, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12817, %r842, %r843, %r12820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12821, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12822, %r12820, %r12821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12825, %r12817, %r12822;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12828, %r853, %r843, %r12831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12832, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12833, %r12831, %r12832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12836, %r12828, %r12833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12839, %r842, %r865, %r12820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12843, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12844, %r12820, %r12843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12847, %r12839, %r12844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12850, %r853, %r865, %r12831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12854, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12855, %r12831, %r12854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12858, %r12850, %r12855;
	// end inline asm
	// begin inline asm
	mov.b32 %r12866, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12877, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12863, %r842, %r889, %r12866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12867, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12868, %r12866, %r12867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12871, %r12863, %r12868;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12874, %r853, %r889, %r12877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12878, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12879, %r12877, %r12878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12882, %r12874, %r12879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12885, %r842, %r911, %r12866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12889, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12890, %r12866, %r12889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12893, %r12885, %r12890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12896, %r853, %r911, %r12877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12900, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12901, %r12877, %r12900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12904, %r12896, %r12901;
	// end inline asm
	// begin inline asm
	mov.b32 %r12912, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12923, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12909, %r842, %r935, %r12912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12913, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12914, %r12912, %r12913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12917, %r12909, %r12914;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12920, %r853, %r935, %r12923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12924, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12925, %r12923, %r12924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12928, %r12920, %r12925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12931, %r842, %r957, %r12912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12935, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12936, %r12912, %r12935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12939, %r12931, %r12936;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12942, %r853, %r957, %r12923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12946, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12947, %r12923, %r12946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12950, %r12942, %r12947;
	// end inline asm
	// begin inline asm
	mov.b32 %r12958, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12969, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12955, %r842, %r981, %r12958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12959, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12960, %r12958, %r12959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12963, %r12955, %r12960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12966, %r853, %r981, %r12969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12970, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12971, %r12969, %r12970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12974, %r12966, %r12971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12977, %r842, %r1003, %r12958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12981, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12982, %r12958, %r12981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12985, %r12977, %r12982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12988, %r853, %r1003, %r12969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12992, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12993, %r12969, %r12992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12996, %r12988, %r12993;
	// end inline asm
	// begin inline asm
	mov.b32 %r13004, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13015, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13001, %r842, %r1027, %r13004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13005, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13006, %r13004, %r13005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13009, %r13001, %r13006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13012, %r853, %r1027, %r13015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13016, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13017, %r13015, %r13016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13020, %r13012, %r13017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13023, %r842, %r1049, %r13004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13027, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13028, %r13004, %r13027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13031, %r13023, %r13028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13034, %r853, %r1049, %r13015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13038, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13039, %r13015, %r13038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13042, %r13034, %r13039;
	// end inline asm
	// begin inline asm
	mov.b32 %r13050, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13061, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13047, %r842, %r1073, %r13050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13051, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13052, %r13050, %r13051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13055, %r13047, %r13052;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13058, %r853, %r1073, %r13061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13062, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13063, %r13061, %r13062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13066, %r13058, %r13063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13069, %r842, %r1095, %r13050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13073, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13074, %r13050, %r13073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13077, %r13069, %r13074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13080, %r853, %r1095, %r13061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13084, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13085, %r13061, %r13084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13088, %r13080, %r13085;
	// end inline asm
	// begin inline asm
	mov.b32 %r13096, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13107, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13093, %r842, %r1119, %r13096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13097, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13098, %r13096, %r13097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13101, %r13093, %r13098;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13104, %r853, %r1119, %r13107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13108, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13109, %r13107, %r13108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13112, %r13104, %r13109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13115, %r842, %r1141, %r13096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13119, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13120, %r13096, %r13119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13123, %r13115, %r13120;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13126, %r853, %r1141, %r13107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13130, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13131, %r13107, %r13130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13134, %r13126, %r13131;
	// end inline asm
	// begin inline asm
	mov.b32 %r13142, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13153, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13139, %r842, %r1165, %r13142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13143, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13144, %r13142, %r13143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13147, %r13139, %r13144;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13150, %r853, %r1165, %r13153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13154, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13155, %r13153, %r13154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13158, %r13150, %r13155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13161, %r842, %r1187, %r13142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13165, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13166, %r13142, %r13165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13169, %r13161, %r13166;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13172, %r853, %r1187, %r13153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13176, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13177, %r13153, %r13176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13180, %r13172, %r13177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13183, %r262, %r12825, %r12657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13187, %r262, %r12836, %r12662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13191, %r262, %r12847, %r12667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13195, %r262, %r12858, %r12672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13199, %r262, %r12871, %r12677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13203, %r262, %r12882, %r12682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13207, %r262, %r12893, %r12687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13211, %r262, %r12904, %r12692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13215, %r262, %r12917, %r12697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13219, %r262, %r12928, %r12702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13223, %r262, %r12939, %r12707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13227, %r262, %r12950, %r12712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13231, %r262, %r12963, %r12717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13235, %r262, %r12974, %r12722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13239, %r262, %r12985, %r12727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13243, %r262, %r12996, %r12732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13247, %r280, %r13009, %r12737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13251, %r280, %r13020, %r12742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13255, %r280, %r13031, %r12747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13259, %r280, %r13042, %r12752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13263, %r280, %r13055, %r12757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13267, %r280, %r13066, %r12762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13271, %r280, %r13077, %r12767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13275, %r280, %r13088, %r12772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13279, %r280, %r13101, %r12777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13283, %r280, %r13112, %r12782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13287, %r280, %r13123, %r12787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13291, %r280, %r13134, %r12792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13295, %r280, %r13147, %r12797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13299, %r280, %r13158, %r12802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13303, %r280, %r13169, %r12807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13307, %r280, %r13180, %r12812;
	// end inline asm
	// begin inline asm
	mov.b32 %r13316, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13327, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13313, %r842, %r4659, %r13316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13317, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13318, %r13316, %r13317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13321, %r13313, %r13318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13324, %r853, %r4659, %r13327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13328, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13329, %r13327, %r13328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13332, %r13324, %r13329;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13335, %r842, %r4681, %r13316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13339, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13340, %r13316, %r13339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13343, %r13335, %r13340;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13346, %r853, %r4681, %r13327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13350, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13351, %r13327, %r13350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13354, %r13346, %r13351;
	// end inline asm
	// begin inline asm
	mov.b32 %r13362, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13373, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13359, %r842, %r4705, %r13362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13363, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13364, %r13362, %r13363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13367, %r13359, %r13364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13370, %r853, %r4705, %r13373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13374, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13375, %r13373, %r13374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13378, %r13370, %r13375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13381, %r842, %r4727, %r13362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13385, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13386, %r13362, %r13385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13389, %r13381, %r13386;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13392, %r853, %r4727, %r13373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13396, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13397, %r13373, %r13396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13400, %r13392, %r13397;
	// end inline asm
	// begin inline asm
	mov.b32 %r13408, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13419, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13405, %r842, %r4751, %r13408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13409, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13410, %r13408, %r13409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13413, %r13405, %r13410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13416, %r853, %r4751, %r13419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13420, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13421, %r13419, %r13420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13424, %r13416, %r13421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13427, %r842, %r4773, %r13408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13431, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13432, %r13408, %r13431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13435, %r13427, %r13432;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13438, %r853, %r4773, %r13419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13442, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13443, %r13419, %r13442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13446, %r13438, %r13443;
	// end inline asm
	// begin inline asm
	mov.b32 %r13454, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13465, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13451, %r842, %r4797, %r13454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13455, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13456, %r13454, %r13455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13459, %r13451, %r13456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13462, %r853, %r4797, %r13465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13466, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13467, %r13465, %r13466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13470, %r13462, %r13467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13473, %r842, %r4819, %r13454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13477, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13478, %r13454, %r13477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13481, %r13473, %r13478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13484, %r853, %r4819, %r13465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13488, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13489, %r13465, %r13488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13492, %r13484, %r13489;
	// end inline asm
	// begin inline asm
	mov.b32 %r13500, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13511, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13497, %r842, %r4843, %r13500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13501, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13502, %r13500, %r13501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13505, %r13497, %r13502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13508, %r853, %r4843, %r13511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13512, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13513, %r13511, %r13512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13516, %r13508, %r13513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13519, %r842, %r4865, %r13500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13523, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13524, %r13500, %r13523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13527, %r13519, %r13524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13530, %r853, %r4865, %r13511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13534, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13535, %r13511, %r13534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13538, %r13530, %r13535;
	// end inline asm
	// begin inline asm
	mov.b32 %r13546, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13557, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13543, %r842, %r4889, %r13546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13547, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13548, %r13546, %r13547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13551, %r13543, %r13548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13554, %r853, %r4889, %r13557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13558, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13559, %r13557, %r13558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13562, %r13554, %r13559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13565, %r842, %r4911, %r13546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13569, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13570, %r13546, %r13569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13573, %r13565, %r13570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13576, %r853, %r4911, %r13557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13580, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13581, %r13557, %r13580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13584, %r13576, %r13581;
	// end inline asm
	// begin inline asm
	mov.b32 %r13592, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13603, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13589, %r842, %r4935, %r13592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13593, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13594, %r13592, %r13593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13597, %r13589, %r13594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13600, %r853, %r4935, %r13603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13604, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13605, %r13603, %r13604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13608, %r13600, %r13605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13611, %r842, %r4957, %r13592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13615, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13616, %r13592, %r13615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13619, %r13611, %r13616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13622, %r853, %r4957, %r13603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13626, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13627, %r13603, %r13626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13630, %r13622, %r13627;
	// end inline asm
	// begin inline asm
	mov.b32 %r13638, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13649, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13635, %r842, %r4981, %r13638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13639, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13640, %r13638, %r13639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13643, %r13635, %r13640;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13646, %r853, %r4981, %r13649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13650, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13651, %r13649, %r13650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13654, %r13646, %r13651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13657, %r842, %r5003, %r13638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13661, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13662, %r13638, %r13661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13665, %r13657, %r13662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13668, %r853, %r5003, %r13649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13672, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13673, %r13649, %r13672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13676, %r13668, %r13673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13679, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13681, %r13679, %r13321, %r13183;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13685, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13687, %r13685, %r13332, %r13187;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13691, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13693, %r13691, %r13343, %r13191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13697, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13699, %r13697, %r13354, %r13195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13703, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13705, %r13703, %r13367, %r13199;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13709, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13711, %r13709, %r13378, %r13203;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13715, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13717, %r13715, %r13389, %r13207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13721, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13723, %r13721, %r13400, %r13211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13727, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13729, %r13727, %r13413, %r13215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13733, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13735, %r13733, %r13424, %r13219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13739, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13741, %r13739, %r13435, %r13223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13745, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13747, %r13745, %r13446, %r13227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13751, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13753, %r13751, %r13459, %r13231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13757, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13759, %r13757, %r13470, %r13235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13763, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13765, %r13763, %r13481, %r13239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13769, %r298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13771, %r13769, %r13492, %r13243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13775, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13777, %r13775, %r13505, %r13247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13781, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13783, %r13781, %r13516, %r13251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13787, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13789, %r13787, %r13527, %r13255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13793, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13795, %r13793, %r13538, %r13259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13799, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13801, %r13799, %r13551, %r13263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13805, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13807, %r13805, %r13562, %r13267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13811, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13813, %r13811, %r13573, %r13271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13817, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13819, %r13817, %r13584, %r13275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13823, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13825, %r13823, %r13597, %r13279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13829, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13831, %r13829, %r13608, %r13283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13835, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13837, %r13835, %r13619, %r13287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13841, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13843, %r13841, %r13630, %r13291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13847, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13849, %r13847, %r13643, %r13295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13853, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13855, %r13853, %r13654, %r13299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13859, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13861, %r13859, %r13665, %r13303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13865, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13867, %r13865, %r13676, %r13307;
	// end inline asm
	// begin inline asm
	mov.b32 %r13876, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13887, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13873, %r842, %r8475, %r13876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13877, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13878, %r13876, %r13877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13881, %r13873, %r13878;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13884, %r853, %r8475, %r13887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13888, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13889, %r13887, %r13888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13892, %r13884, %r13889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13895, %r842, %r8497, %r13876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13899, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13900, %r13876, %r13899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13903, %r13895, %r13900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13906, %r853, %r8497, %r13887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13910, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13911, %r13887, %r13910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13914, %r13906, %r13911;
	// end inline asm
	// begin inline asm
	mov.b32 %r13922, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13933, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13919, %r842, %r8521, %r13922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13923, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13924, %r13922, %r13923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13927, %r13919, %r13924;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13930, %r853, %r8521, %r13933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13934, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13935, %r13933, %r13934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13938, %r13930, %r13935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13941, %r842, %r8543, %r13922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13945, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13946, %r13922, %r13945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13949, %r13941, %r13946;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13952, %r853, %r8543, %r13933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13956, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13957, %r13933, %r13956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13960, %r13952, %r13957;
	// end inline asm
	// begin inline asm
	mov.b32 %r13968, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13979, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13965, %r842, %r8567, %r13968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13969, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13970, %r13968, %r13969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13973, %r13965, %r13970;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13976, %r853, %r8567, %r13979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13980, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13981, %r13979, %r13980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13984, %r13976, %r13981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13987, %r842, %r8589, %r13968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13991, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13992, %r13968, %r13991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13995, %r13987, %r13992;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13998, %r853, %r8589, %r13979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14002, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14003, %r13979, %r14002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14006, %r13998, %r14003;
	// end inline asm
	// begin inline asm
	mov.b32 %r14014, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14025, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14011, %r842, %r8613, %r14014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14015, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14016, %r14014, %r14015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14019, %r14011, %r14016;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14022, %r853, %r8613, %r14025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14026, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14027, %r14025, %r14026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14030, %r14022, %r14027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14033, %r842, %r8635, %r14014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14037, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14038, %r14014, %r14037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14041, %r14033, %r14038;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14044, %r853, %r8635, %r14025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14048, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14049, %r14025, %r14048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14052, %r14044, %r14049;
	// end inline asm
	// begin inline asm
	mov.b32 %r14060, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14071, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14057, %r842, %r8659, %r14060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14061, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14062, %r14060, %r14061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14065, %r14057, %r14062;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14068, %r853, %r8659, %r14071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14072, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14073, %r14071, %r14072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14076, %r14068, %r14073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14079, %r842, %r8681, %r14060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14083, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14084, %r14060, %r14083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14087, %r14079, %r14084;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14090, %r853, %r8681, %r14071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14094, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14095, %r14071, %r14094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14098, %r14090, %r14095;
	// end inline asm
	// begin inline asm
	mov.b32 %r14106, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14117, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14103, %r842, %r8705, %r14106, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14107, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14108, %r14106, %r14107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14111, %r14103, %r14108;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14114, %r853, %r8705, %r14117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14118, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14119, %r14117, %r14118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14122, %r14114, %r14119;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14125, %r842, %r8727, %r14106, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14129, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14130, %r14106, %r14129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14133, %r14125, %r14130;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14136, %r853, %r8727, %r14117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14140, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14141, %r14117, %r14140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14144, %r14136, %r14141;
	// end inline asm
	// begin inline asm
	mov.b32 %r14152, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14163, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14149, %r842, %r8751, %r14152, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14153, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14154, %r14152, %r14153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14157, %r14149, %r14154;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14160, %r853, %r8751, %r14163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14164, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14165, %r14163, %r14164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14168, %r14160, %r14165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14171, %r842, %r8773, %r14152, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14175, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14176, %r14152, %r14175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14179, %r14171, %r14176;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14182, %r853, %r8773, %r14163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14186, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14187, %r14163, %r14186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14190, %r14182, %r14187;
	// end inline asm
	// begin inline asm
	mov.b32 %r14198, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14209, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14195, %r842, %r8797, %r14198, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14199, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14200, %r14198, %r14199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14203, %r14195, %r14200;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14206, %r853, %r8797, %r14209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14210, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14211, %r14209, %r14210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14214, %r14206, %r14211;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14217, %r842, %r8819, %r14198, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14221, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14222, %r14198, %r14221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14225, %r14217, %r14222;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14228, %r853, %r8819, %r14209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14232, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14233, %r14209, %r14232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14236, %r14228, %r14233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14374, %r334, %r13881, %r13681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14371, %r334, %r13892, %r13687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14383, %r334, %r13903, %r13693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14380, %r334, %r13914, %r13699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14392, %r334, %r13927, %r13705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14389, %r334, %r13938, %r13711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14401, %r334, %r13949, %r13717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14398, %r334, %r13960, %r13723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14410, %r334, %r13973, %r13729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14407, %r334, %r13984, %r13735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14419, %r334, %r13995, %r13741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14416, %r334, %r14006, %r13747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14428, %r334, %r14019, %r13753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14425, %r334, %r14030, %r13759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14437, %r334, %r14041, %r13765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14434, %r334, %r14052, %r13771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14446, %r352, %r14065, %r13777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14443, %r352, %r14076, %r13783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14455, %r352, %r14087, %r13789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14452, %r352, %r14098, %r13795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14464, %r352, %r14111, %r13801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14461, %r352, %r14122, %r13807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14473, %r352, %r14133, %r13813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14470, %r352, %r14144, %r13819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14482, %r352, %r14157, %r13825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14479, %r352, %r14168, %r13831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14491, %r352, %r14179, %r13837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14488, %r352, %r14190, %r13843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14500, %r352, %r14203, %r13849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14497, %r352, %r14214, %r13855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14509, %r352, %r14225, %r13861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14506, %r352, %r14236, %r13867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14367, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14369, %r14367, %r14371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14372, %r391, %r14374, %r14369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14376, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14378, %r14376, %r14380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14381, %r391, %r14383, %r14378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14385, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14387, %r14385, %r14389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14390, %r391, %r14392, %r14387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14394, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14396, %r14394, %r14398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14399, %r391, %r14401, %r14396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14403, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14405, %r14403, %r14407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14408, %r391, %r14410, %r14405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14412, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14414, %r14412, %r14416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14417, %r391, %r14419, %r14414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14421, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14423, %r14421, %r14425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14426, %r391, %r14428, %r14423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14430, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14432, %r14430, %r14434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14435, %r391, %r14437, %r14432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14439, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14441, %r14439, %r14443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14444, %r394, %r14446, %r14441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14448, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14450, %r14448, %r14452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14453, %r394, %r14455, %r14450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14457, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14459, %r14457, %r14461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14462, %r394, %r14464, %r14459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14466, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14468, %r14466, %r14470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14471, %r394, %r14473, %r14468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14475, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14477, %r14475, %r14479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14480, %r394, %r14482, %r14477;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14484, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14486, %r14484, %r14488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14489, %r394, %r14491, %r14486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14493, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14495, %r14493, %r14497;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14498, %r394, %r14500, %r14495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14502, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14504, %r14502, %r14506;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14507, %r394, %r14509, %r14504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14511, %r397, %r14374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14514, %r391, %r14371, %r14511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14518, %r397, %r14383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14521, %r391, %r14380, %r14518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14525, %r397, %r14392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14528, %r391, %r14389, %r14525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14532, %r397, %r14401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14535, %r391, %r14398, %r14532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14539, %r397, %r14410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14542, %r391, %r14407, %r14539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14546, %r397, %r14419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14549, %r391, %r14416, %r14546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14553, %r397, %r14428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14556, %r391, %r14425, %r14553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14560, %r397, %r14437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14563, %r391, %r14434, %r14560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14567, %r400, %r14446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14570, %r394, %r14443, %r14567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14574, %r400, %r14455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14577, %r394, %r14452, %r14574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14581, %r400, %r14464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14584, %r394, %r14461, %r14581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14588, %r400, %r14473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14591, %r394, %r14470, %r14588;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14595, %r400, %r14482;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14598, %r394, %r14479, %r14595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14602, %r400, %r14491;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14605, %r394, %r14488, %r14602;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14609, %r400, %r14500;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14612, %r394, %r14497, %r14609;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14616, %r400, %r14509;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14619, %r394, %r14506, %r14616;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14790, %r14787}, {%r458, %r464, %r461, %r467}, {%r14372, %r14514}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14799, %r14796}, {%r458, %r464, %r461, %r467}, {%r14381, %r14521}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14808, %r14805}, {%r458, %r464, %r461, %r467}, {%r14390, %r14528}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14817, %r14814}, {%r458, %r464, %r461, %r467}, {%r14399, %r14535}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14826, %r14823}, {%r458, %r464, %r461, %r467}, {%r14408, %r14542}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14835, %r14832}, {%r458, %r464, %r461, %r467}, {%r14417, %r14549}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14844, %r14841}, {%r458, %r464, %r461, %r467}, {%r14426, %r14556}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14853, %r14850}, {%r458, %r464, %r461, %r467}, {%r14435, %r14563}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14862, %r14859}, {%r458, %r464, %r461, %r467}, {%r14444, %r14570}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14871, %r14868}, {%r458, %r464, %r461, %r467}, {%r14453, %r14577}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14880, %r14877}, {%r458, %r464, %r461, %r467}, {%r14462, %r14584}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14889, %r14886}, {%r458, %r464, %r461, %r467}, {%r14471, %r14591}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14898, %r14895}, {%r458, %r464, %r461, %r467}, {%r14480, %r14598}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14907, %r14904}, {%r458, %r464, %r461, %r467}, {%r14489, %r14605}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14916, %r14913}, {%r458, %r464, %r461, %r467}, {%r14498, %r14612}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14925, %r14922}, {%r458, %r464, %r461, %r467}, {%r14507, %r14619}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14783, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14785, %r14783, %r14787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14788, %r508, %r14790, %r14785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14792, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14794, %r14792, %r14796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14797, %r508, %r14799, %r14794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14801, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14803, %r14801, %r14805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14806, %r508, %r14808, %r14803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14810, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14812, %r14810, %r14814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14815, %r508, %r14817, %r14812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14819, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14821, %r14819, %r14823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14824, %r508, %r14826, %r14821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14828, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14830, %r14828, %r14832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14833, %r508, %r14835, %r14830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14837, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14839, %r14837, %r14841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14842, %r508, %r14844, %r14839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14846, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14848, %r14846, %r14850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14851, %r508, %r14853, %r14848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14855, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14857, %r14855, %r14859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14860, %r508, %r14862, %r14857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14864, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14866, %r14864, %r14868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14869, %r508, %r14871, %r14866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14873, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14875, %r14873, %r14877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14878, %r508, %r14880, %r14875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14882, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14884, %r14882, %r14886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14887, %r508, %r14889, %r14884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14891, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14893, %r14891, %r14895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14896, %r508, %r14898, %r14893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14900, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14902, %r14900, %r14904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14905, %r508, %r14907, %r14902;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14909, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14911, %r14909, %r14913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14914, %r508, %r14916, %r14911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14918, %r511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14920, %r14918, %r14922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14923, %r508, %r14925, %r14920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14927, %r511, %r14790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14930, %r508, %r14787, %r14927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14934, %r511, %r14799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14937, %r508, %r14796, %r14934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14941, %r511, %r14808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14944, %r508, %r14805, %r14941;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14948, %r511, %r14817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14951, %r508, %r14814, %r14948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14955, %r511, %r14826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14958, %r508, %r14823, %r14955;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14962, %r511, %r14835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14965, %r508, %r14832, %r14962;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14969, %r511, %r14844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14972, %r508, %r14841, %r14969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14976, %r511, %r14853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14979, %r508, %r14850, %r14976;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14983, %r511, %r14862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14986, %r508, %r14859, %r14983;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14990, %r511, %r14871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14993, %r508, %r14868, %r14990;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14997, %r511, %r14880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15000, %r508, %r14877, %r14997;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15004, %r511, %r14889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15007, %r508, %r14886, %r15004;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15011, %r511, %r14898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15014, %r508, %r14895, %r15011;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15018, %r511, %r14907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15021, %r508, %r14904, %r15018;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15025, %r511, %r14916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15028, %r508, %r14913, %r15025;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15032, %r511, %r14925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15035, %r508, %r14922, %r15032;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15328, %r15331}, {%r546, %r552, %r549, %r555}, {%r14788, %r14930}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15334, %r15337}, {%r546, %r552, %r549, %r555}, {%r14797, %r14937}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15340, %r15343}, {%r546, %r552, %r549, %r555}, {%r14806, %r14944}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15346, %r15349}, {%r546, %r552, %r549, %r555}, {%r14815, %r14951}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15352, %r15355}, {%r546, %r552, %r549, %r555}, {%r14824, %r14958}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15358, %r15361}, {%r546, %r552, %r549, %r555}, {%r14833, %r14965}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15364, %r15367}, {%r546, %r552, %r549, %r555}, {%r14842, %r14972}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15370, %r15373}, {%r546, %r552, %r549, %r555}, {%r14851, %r14979}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15329, %r15332}, {%r546, %r552, %r549, %r555}, {%r14860, %r14986}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15335, %r15338}, {%r546, %r552, %r549, %r555}, {%r14869, %r14993}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15341, %r15344}, {%r546, %r552, %r549, %r555}, {%r14878, %r15000}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15347, %r15350}, {%r546, %r552, %r549, %r555}, {%r14887, %r15007}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15353, %r15356}, {%r546, %r552, %r549, %r555}, {%r14896, %r15014}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15359, %r15362}, {%r546, %r552, %r549, %r555}, {%r14905, %r15021}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15365, %r15368}, {%r546, %r552, %r549, %r555}, {%r14914, %r15028}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15371, %r15374}, {%r546, %r552, %r549, %r555}, {%r14923, %r15035}, {%r3183, %r3183};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15327, %r15328, %r15329;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15330, %r15331, %r15332;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15333, %r15334, %r15335;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15336, %r15337, %r15338;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15339, %r15340, %r15341;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15342, %r15343, %r15344;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15345, %r15346, %r15347;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15348, %r15349, %r15350;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15351, %r15352, %r15353;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15354, %r15355, %r15356;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15357, %r15358, %r15359;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15360, %r15361, %r15362;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15363, %r15364, %r15365;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15366, %r15367, %r15368;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15369, %r15370, %r15371;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15372, %r15373, %r15374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15375, %r15328, %r15329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15378, %r15331, %r15332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15381, %r15334, %r15335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15384, %r15337, %r15338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15387, %r15340, %r15341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15390, %r15343, %r15344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15393, %r15346, %r15347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15396, %r15349, %r15350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15399, %r15352, %r15353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15402, %r15355, %r15356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15405, %r15358, %r15359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15408, %r15361, %r15362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15411, %r15364, %r15365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15414, %r15367, %r15368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15417, %r15370, %r15371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15420, %r15373, %r15374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15423, %r132, %r15327;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15426, %r132, %r15330;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15429, %r132, %r15333;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15432, %r132, %r15336;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15435, %r132, %r15339;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15438, %r132, %r15342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15441, %r132, %r15345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15444, %r132, %r15348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15447, %r132, %r15351;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15450, %r132, %r15354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15453, %r132, %r15357;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15456, %r132, %r15360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15459, %r132, %r15363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15462, %r132, %r15366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15465, %r132, %r15369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15468, %r132, %r15372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15471, %r133, %r15375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15474, %r133, %r15378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15477, %r133, %r15381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15480, %r133, %r15384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15483, %r133, %r15387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15486, %r133, %r15390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15489, %r133, %r15393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15492, %r133, %r15396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15495, %r133, %r15399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15498, %r133, %r15402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15501, %r133, %r15405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15504, %r133, %r15408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15507, %r133, %r15411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15510, %r133, %r15414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15513, %r133, %r15417;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15516, %r133, %r15420;
	// end inline asm
	// begin inline asm
	mov.b32 %r15519, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15520, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15521, %r15423, %r15519;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15524, %r15521, %r15520;
	// end inline asm
	// begin inline asm
	mov.b32 %r15527, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15528, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15529, %r15426, %r15527;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15532, %r15529, %r15528;
	// end inline asm
	// begin inline asm
	mov.b32 %r15535, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15536, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15537, %r15429, %r15535;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15540, %r15537, %r15536;
	// end inline asm
	// begin inline asm
	mov.b32 %r15543, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15544, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15545, %r15432, %r15543;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15548, %r15545, %r15544;
	// end inline asm
	// begin inline asm
	mov.b32 %r15551, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15552, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15553, %r15435, %r15551;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15556, %r15553, %r15552;
	// end inline asm
	// begin inline asm
	mov.b32 %r15559, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15560, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15561, %r15438, %r15559;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15564, %r15561, %r15560;
	// end inline asm
	// begin inline asm
	mov.b32 %r15567, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15568, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15569, %r15441, %r15567;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15572, %r15569, %r15568;
	// end inline asm
	// begin inline asm
	mov.b32 %r15575, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15576, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15577, %r15444, %r15575;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15580, %r15577, %r15576;
	// end inline asm
	// begin inline asm
	mov.b32 %r15583, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15584, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15585, %r15447, %r15583;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15588, %r15585, %r15584;
	// end inline asm
	// begin inline asm
	mov.b32 %r15591, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15592, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15593, %r15450, %r15591;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15596, %r15593, %r15592;
	// end inline asm
	// begin inline asm
	mov.b32 %r15599, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15600, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15601, %r15453, %r15599;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15604, %r15601, %r15600;
	// end inline asm
	// begin inline asm
	mov.b32 %r15607, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15608, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15609, %r15456, %r15607;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15612, %r15609, %r15608;
	// end inline asm
	// begin inline asm
	mov.b32 %r15615, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15616, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15617, %r15459, %r15615;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15620, %r15617, %r15616;
	// end inline asm
	// begin inline asm
	mov.b32 %r15623, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15624, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15625, %r15462, %r15623;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15628, %r15625, %r15624;
	// end inline asm
	// begin inline asm
	mov.b32 %r15631, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15632, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15633, %r15465, %r15631;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15636, %r15633, %r15632;
	// end inline asm
	// begin inline asm
	mov.b32 %r15639, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15640, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15641, %r15468, %r15639;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15644, %r15641, %r15640;
	// end inline asm
	// begin inline asm
	mov.b32 %r15647, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15648, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15649, %r15471, %r15647;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15652, %r15649, %r15648;
	// end inline asm
	// begin inline asm
	mov.b32 %r15655, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15656, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15657, %r15474, %r15655;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15660, %r15657, %r15656;
	// end inline asm
	// begin inline asm
	mov.b32 %r15663, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15664, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15665, %r15477, %r15663;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15668, %r15665, %r15664;
	// end inline asm
	// begin inline asm
	mov.b32 %r15671, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15672, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15673, %r15480, %r15671;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15676, %r15673, %r15672;
	// end inline asm
	// begin inline asm
	mov.b32 %r15679, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15680, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15681, %r15483, %r15679;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15684, %r15681, %r15680;
	// end inline asm
	// begin inline asm
	mov.b32 %r15687, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15688, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15689, %r15486, %r15687;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15692, %r15689, %r15688;
	// end inline asm
	// begin inline asm
	mov.b32 %r15695, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15696, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15697, %r15489, %r15695;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15700, %r15697, %r15696;
	// end inline asm
	// begin inline asm
	mov.b32 %r15703, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15704, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15705, %r15492, %r15703;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15708, %r15705, %r15704;
	// end inline asm
	// begin inline asm
	mov.b32 %r15711, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15712, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15713, %r15495, %r15711;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15716, %r15713, %r15712;
	// end inline asm
	// begin inline asm
	mov.b32 %r15719, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15720, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15721, %r15498, %r15719;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15724, %r15721, %r15720;
	// end inline asm
	// begin inline asm
	mov.b32 %r15727, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15728, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15729, %r15501, %r15727;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15732, %r15729, %r15728;
	// end inline asm
	// begin inline asm
	mov.b32 %r15735, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15736, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15737, %r15504, %r15735;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15740, %r15737, %r15736;
	// end inline asm
	// begin inline asm
	mov.b32 %r15743, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15744, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15745, %r15507, %r15743;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15748, %r15745, %r15744;
	// end inline asm
	// begin inline asm
	mov.b32 %r15751, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15752, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15753, %r15510, %r15751;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15756, %r15753, %r15752;
	// end inline asm
	// begin inline asm
	mov.b32 %r15759, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15760, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15761, %r15513, %r15759;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15764, %r15761, %r15760;
	// end inline asm
	// begin inline asm
	mov.b32 %r15767, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15768, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15769, %r15516, %r15767;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15772, %r15769, %r15768;
	// end inline asm
	// begin inline asm
	mov.b32 %r15778, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15776, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15777, %r15778, %r15776;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15780, %r15524, %r15777;
	// end inline asm
	// begin inline asm
	mov.b32 %r15783, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15784, %r15778, %r15783;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15787, %r15532, %r15784;
	// end inline asm
	// begin inline asm
	mov.b32 %r15790, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15791, %r15778, %r15790;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15794, %r15540, %r15791;
	// end inline asm
	// begin inline asm
	mov.b32 %r15797, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15798, %r15778, %r15797;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15801, %r15548, %r15798;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15804, %r15780, %r15794, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15808, %r15787, %r15801, %r4359;
	// end inline asm
	shl.b32 	%r15815, %r15808, 4;
	// begin inline asm
	lop3.b32 %r15812, %r4365, %r15804, %r15815, 202;
	// end inline asm
	xor.b32  	%r16183, %r15812, -2004318072;
	// begin inline asm
	mov.b32 %r15819, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15817, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15818, %r15819, %r15817;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15821, %r15556, %r15818;
	// end inline asm
	// begin inline asm
	mov.b32 %r15824, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15825, %r15819, %r15824;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15828, %r15564, %r15825;
	// end inline asm
	// begin inline asm
	mov.b32 %r15831, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15832, %r15819, %r15831;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15835, %r15572, %r15832;
	// end inline asm
	// begin inline asm
	mov.b32 %r15838, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15839, %r15819, %r15838;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15842, %r15580, %r15839;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15845, %r15821, %r15835, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15849, %r15828, %r15842, %r4359;
	// end inline asm
	shl.b32 	%r15856, %r15849, 4;
	// begin inline asm
	lop3.b32 %r15853, %r4365, %r15845, %r15856, 202;
	// end inline asm
	xor.b32  	%r16184, %r15853, -2004318072;
	// begin inline asm
	mov.b32 %r15860, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15858, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15859, %r15860, %r15858;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15862, %r15588, %r15859;
	// end inline asm
	// begin inline asm
	mov.b32 %r15865, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15866, %r15860, %r15865;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15869, %r15596, %r15866;
	// end inline asm
	// begin inline asm
	mov.b32 %r15872, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15873, %r15860, %r15872;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15876, %r15604, %r15873;
	// end inline asm
	// begin inline asm
	mov.b32 %r15879, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15880, %r15860, %r15879;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15883, %r15612, %r15880;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15886, %r15862, %r15876, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15890, %r15869, %r15883, %r4359;
	// end inline asm
	shl.b32 	%r15897, %r15890, 4;
	// begin inline asm
	lop3.b32 %r15894, %r4365, %r15886, %r15897, 202;
	// end inline asm
	xor.b32  	%r16185, %r15894, -2004318072;
	// begin inline asm
	mov.b32 %r15901, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15899, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15900, %r15901, %r15899;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15903, %r15620, %r15900;
	// end inline asm
	// begin inline asm
	mov.b32 %r15906, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15907, %r15901, %r15906;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15910, %r15628, %r15907;
	// end inline asm
	// begin inline asm
	mov.b32 %r15913, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15914, %r15901, %r15913;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15917, %r15636, %r15914;
	// end inline asm
	// begin inline asm
	mov.b32 %r15920, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15921, %r15901, %r15920;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15924, %r15644, %r15921;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15927, %r15903, %r15917, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15931, %r15910, %r15924, %r4359;
	// end inline asm
	shl.b32 	%r15938, %r15931, 4;
	// begin inline asm
	lop3.b32 %r15935, %r4365, %r15927, %r15938, 202;
	// end inline asm
	xor.b32  	%r16186, %r15935, -2004318072;
	// begin inline asm
	mov.b32 %r15942, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15940, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15941, %r15942, %r15940;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15944, %r15652, %r15941;
	// end inline asm
	// begin inline asm
	mov.b32 %r15947, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15948, %r15942, %r15947;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15951, %r15660, %r15948;
	// end inline asm
	// begin inline asm
	mov.b32 %r15954, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15955, %r15942, %r15954;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15958, %r15668, %r15955;
	// end inline asm
	// begin inline asm
	mov.b32 %r15961, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15962, %r15942, %r15961;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15965, %r15676, %r15962;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15968, %r15944, %r15958, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15972, %r15951, %r15965, %r4359;
	// end inline asm
	shl.b32 	%r15979, %r15972, 4;
	// begin inline asm
	lop3.b32 %r15976, %r4365, %r15968, %r15979, 202;
	// end inline asm
	xor.b32  	%r16187, %r15976, -2004318072;
	// begin inline asm
	mov.b32 %r15983, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15981, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15982, %r15983, %r15981;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15985, %r15684, %r15982;
	// end inline asm
	// begin inline asm
	mov.b32 %r15988, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15989, %r15983, %r15988;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15992, %r15692, %r15989;
	// end inline asm
	// begin inline asm
	mov.b32 %r15995, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15996, %r15983, %r15995;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15999, %r15700, %r15996;
	// end inline asm
	// begin inline asm
	mov.b32 %r16002, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16003, %r15983, %r16002;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16006, %r15708, %r16003;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16009, %r15985, %r15999, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16013, %r15992, %r16006, %r4359;
	// end inline asm
	shl.b32 	%r16020, %r16013, 4;
	// begin inline asm
	lop3.b32 %r16017, %r4365, %r16009, %r16020, 202;
	// end inline asm
	xor.b32  	%r16188, %r16017, -2004318072;
	// begin inline asm
	mov.b32 %r16024, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r16022, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16023, %r16024, %r16022;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16026, %r15716, %r16023;
	// end inline asm
	// begin inline asm
	mov.b32 %r16029, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16030, %r16024, %r16029;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16033, %r15724, %r16030;
	// end inline asm
	// begin inline asm
	mov.b32 %r16036, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16037, %r16024, %r16036;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16040, %r15732, %r16037;
	// end inline asm
	// begin inline asm
	mov.b32 %r16043, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16044, %r16024, %r16043;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16047, %r15740, %r16044;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16050, %r16026, %r16040, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16054, %r16033, %r16047, %r4359;
	// end inline asm
	shl.b32 	%r16061, %r16054, 4;
	// begin inline asm
	lop3.b32 %r16058, %r4365, %r16050, %r16061, 202;
	// end inline asm
	xor.b32  	%r16189, %r16058, -2004318072;
	// begin inline asm
	mov.b32 %r16065, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r16063, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16064, %r16065, %r16063;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16067, %r15748, %r16064;
	// end inline asm
	// begin inline asm
	mov.b32 %r16070, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16071, %r16065, %r16070;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16074, %r15756, %r16071;
	// end inline asm
	// begin inline asm
	mov.b32 %r16077, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16078, %r16065, %r16077;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16081, %r15764, %r16078;
	// end inline asm
	// begin inline asm
	mov.b32 %r16084, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16085, %r16065, %r16084;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16088, %r15772, %r16085;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16091, %r16067, %r16081, %r4359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16095, %r16074, %r16088, %r4359;
	// end inline asm
	shl.b32 	%r16102, %r16095, 4;
	// begin inline asm
	lop3.b32 %r16099, %r4365, %r16091, %r16102, 202;
	// end inline asm
	xor.b32  	%r16190, %r16099, -2004318072;
	st.shared.u32 	[%rd104], %r16183;
	st.shared.u32 	[%rd106], %r16184;
	st.shared.u32 	[%rd108], %r16185;
	st.shared.u32 	[%rd110], %r16186;
	st.shared.u32 	[%rd112], %r16187;
	st.shared.u32 	[%rd114], %r16188;
	st.shared.u32 	[%rd116], %r16189;
	st.shared.u32 	[%rd118], %r16190;
	add.s32 	%r16314, %r16314, 128;
	setp.ne.s32 	%p304, %r16314, 256;
	@%p304 bra 	$L__BB0_156;
// %bb.157:                             // %guard_exit29661
                                        //   in Loop: Header=BB0_123 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16196, [%rd4];
	ld.shared.u32 	%r16197, [%rd5+128];
	ld.shared.u32 	%r16204, [%rd5+4];
	ld.shared.u32 	%r16205, [%rd5+132];
	ld.shared.u32 	%r16212, [%rd6];
	ld.shared.u32 	%r16213, [%rd7+128];
	ld.shared.u32 	%r16220, [%rd7+4];
	ld.shared.u32 	%r16221, [%rd7+132];
	ld.shared.u32 	%r16228, [%rd4+16644];
	ld.shared.u32 	%r16229, [%rd5+16772];
	ld.shared.u32 	%r16236, [%rd5+16648];
	ld.shared.u32 	%r16237, [%rd5+16776];
	ld.shared.u32 	%r16244, [%rd6+16644];
	ld.shared.u32 	%r16245, [%rd21];
	ld.shared.u32 	%r16252, [%rd7+16648];
	ld.shared.u32 	%r16253, [%rd7+16776];
	// begin inline asm
	prmt.b32 %r16191, %r16196, %r16197, %r16194;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16195, %r16196, %r16197, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16199, %r16204, %r16205, %r16194;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16203, %r16204, %r16205, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16207, %r16212, %r16213, %r16194;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16211, %r16212, %r16213, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16215, %r16220, %r16221, %r16194;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16219, %r16220, %r16221, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16223, %r16228, %r16229, %r16194;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16227, %r16228, %r16229, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16231, %r16236, %r16237, %r16194;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16235, %r16236, %r16237, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16239, %r16244, %r16245, %r16194;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16243, %r16244, %r16245, %r16198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16247, %r16252, %r16253, %r16194;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16251, %r16252, %r16253, %r16198;
	// end inline asm
	selp.b32 	%r16256, %r16195, %r16191, %p290;
	shfl.sync.bfly.b32	%r16257, %r16256, 8, 31, -1;
	selp.b32 	%r16258, %r16203, %r16199, %p290;
	shfl.sync.bfly.b32	%r16259, %r16258, 8, 31, -1;
	selp.b32 	%r16260, %r16211, %r16207, %p290;
	shfl.sync.bfly.b32	%r16261, %r16260, 8, 31, -1;
	selp.b32 	%r16262, %r16219, %r16215, %p290;
	shfl.sync.bfly.b32	%r16263, %r16262, 8, 31, -1;
	selp.b32 	%r16264, %r16227, %r16223, %p290;
	shfl.sync.bfly.b32	%r16265, %r16264, 8, 31, -1;
	selp.b32 	%r16266, %r16235, %r16231, %p290;
	shfl.sync.bfly.b32	%r16267, %r16266, 8, 31, -1;
	selp.b32 	%r16268, %r16243, %r16239, %p290;
	shfl.sync.bfly.b32	%r16269, %r16268, 8, 31, -1;
	selp.b32 	%r16270, %r16251, %r16247, %p290;
	shfl.sync.bfly.b32	%r16271, %r16270, 8, 31, -1;
	mov.u32 	%r16307, 256;
	bra.uni 	$L__BB0_123;
$L__BB0_124:                            // %L70621
	mov.u32 	%r694, 0;
	st.global.u32 	[%rd3], %r694;
	ret;
$L__BB0_7:                              // %L156
	mov.u32 	%r16272, 2;
	st.global.u32 	[%rd3], %r16272;
	mov.u64 	%rd119, exception5812;
	cvta.global.u64 	%rd120, %rd119;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd120;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r219;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd27, exception1;
	cvta.global.u64 	%rd28, %rd27;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd28;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r219;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
