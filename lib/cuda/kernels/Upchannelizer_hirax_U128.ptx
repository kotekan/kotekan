// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5808[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception15833[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<320>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16391>;
	.reg .f32 	%f<1310>;
	.reg .b64 	%rd<158>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r248, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd22, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r255, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r255, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd23, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r249, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r256, %r4, 9;
	or.b32  	%r257, %r2, %r3;
	or.b32  	%r258, %r257, %r256;
	mul.wide.u32 	%rd29, %r258, 4;
	add.s64 	%rd4, %rd23, %rd29;
	mov.u32 	%r259, 1;
	st.global.u32 	[%rd4], %r259;
	setp.gt.u32 	%p2, %r249, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L120
	ld.param.u32 	%r250, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r250, %r249;
	setp.gt.s32 	%p4, %r250, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L127
	ld.param.u32 	%r251, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r260, %r250, %r249;
	and.b32  	%r261, %r260, 255;
	setp.ne.s32 	%p6, %r261, 0;
	setp.gt.u32 	%p7, %r251, 255;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L138
	ld.param.u32 	%r252, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r252, %r251;
	setp.gt.s32 	%p10, %r252, 511;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L145
	sub.s32 	%r262, %r252, %r251;
	and.b32  	%r263, %r262, 1;
	setp.eq.b32 	%p12, %r263, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r253, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p15, %r253, 0;
	@%p15 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r254, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p16, %r253, %r254;
	setp.lt.s32 	%p17, %r254, 65;
	and.pred  	%p18, %p16, %p17;
	@%p18 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass189
	bfe.u32 	%r186, %r3, 1, 1;
	and.b32  	%r187, %r3, 1;
	bfe.u32 	%r189, %r3, 2, 1;
	shr.u32 	%r190, %r3, 4;
	shl.b32 	%r274, %r190, 2;
	shl.b32 	%r275, %r189, 3;
	shl.b32 	%r276, %r187, 4;
	shl.b32 	%r277, %r186, 5;
	or.b32  	%r278, %r276, %r277;
	or.b32  	%r279, %r275, %r278;
	or.b32  	%r280, %r274, %r279;
	bfe.u32 	%r192, %r3, 3, 1;
	shl.b32 	%r281, %r192, 1;
	or.b32  	%r193, %r281, %r280;
	or.b32  	%r194, %r193, 64;
	mov.f32 	%f221, 0f40000000;
	mov.f32 	%f222, 0f43FF8000;
	div.approx.f32 	%f140, %f222, %f221;
	cvt.rn.f32.s32 	%f223, %r193;
	sub.f32 	%f224, %f223, %f140;
	mov.f32 	%f253, 0f43000000;
	div.approx.f32 	%f142, %f224, %f253;
	setp.ne.f32 	%p24, %f142, 0f00000000;
	mov.f32 	%f1277, 0f3F800000;
	mov.f32 	%f1262, %f1277;
	@%p24 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L764
	sin.approx.f32 	%f254, %f142;
	div.approx.f32 	%f1262, %f254, %f142;
$L__BB0_13:                             // %L767
	cvt.rn.f32.s32 	%f257, %r194;
	sub.f32 	%f258, %f257, %f140;
	div.approx.f32 	%f5, %f258, %f253;
	setp.eq.f32 	%p30, %f5, 0f00000000;
	mov.f32 	%f1263, %f1277;
	@%p30 bra 	$L__BB0_15;
// %bb.14:                              // %L784
	sin.approx.f32 	%f288, %f5;
	div.approx.f32 	%f1263, %f288, %f5;
$L__BB0_15:                             // %L787
	or.b32  	%r299, %r193, 1;
	or.b32  	%r6, %r193, 65;
	cvt.rn.f32.s32 	%f292, %r299;
	sub.f32 	%f293, %f292, %f140;
	div.approx.f32 	%f9, %f293, %f253;
	setp.eq.f32 	%p36, %f9, 0f00000000;
	mov.f32 	%f1264, %f1277;
	@%p36 bra 	$L__BB0_17;
// %bb.16:                              // %L866
	sin.approx.f32 	%f323, %f9;
	div.approx.f32 	%f1264, %f323, %f9;
$L__BB0_17:                             // %L869
	cvt.rn.f32.s32 	%f326, %r6;
	sub.f32 	%f327, %f326, %f140;
	div.approx.f32 	%f14, %f327, %f253;
	setp.eq.f32 	%p42, %f14, 0f00000000;
	mov.f32 	%f1265, %f1277;
	@%p42 bra 	$L__BB0_19;
// %bb.18:                              // %L886
	sin.approx.f32 	%f357, %f14;
	div.approx.f32 	%f1265, %f357, %f14;
$L__BB0_19:                             // %L889
	or.b32  	%r317, %r193, 128;
	or.b32  	%r8, %r193, 192;
	cvt.rn.f32.s32 	%f361, %r317;
	sub.f32 	%f362, %f361, %f140;
	div.approx.f32 	%f18, %f362, %f253;
	setp.eq.f32 	%p48, %f18, 0f00000000;
	mov.f32 	%f1266, %f1277;
	@%p48 bra 	$L__BB0_21;
// %bb.20:                              // %L968
	sin.approx.f32 	%f392, %f18;
	div.approx.f32 	%f1266, %f392, %f18;
$L__BB0_21:                             // %L971
	mov.f32 	%f225, 0f44004000;
	cvt.rn.f32.s32 	%f395, %r8;
	sub.f32 	%f396, %f395, %f140;
	div.approx.f32 	%f23, %f396, %f253;
	setp.eq.f32 	%p54, %f23, 0f00000000;
	mov.f32 	%f1267, %f1277;
	@%p54 bra 	$L__BB0_23;
// %bb.22:                              // %L988
	sin.approx.f32 	%f426, %f23;
	div.approx.f32 	%f1267, %f426, %f23;
$L__BB0_23:                             // %L991
	div.approx.f32 	%f226, %f224, %f225;
	div.approx.f32 	%f260, %f258, %f225;
	div.approx.f32 	%f295, %f293, %f225;
	div.approx.f32 	%f329, %f327, %f225;
	div.approx.f32 	%f364, %f362, %f225;
	div.approx.f32 	%f398, %f396, %f225;
	or.b32  	%r335, %r193, 129;
	or.b32  	%r10, %r193, 193;
	cvt.rn.f32.s32 	%f430, %r335;
	sub.f32 	%f431, %f430, %f140;
	div.approx.f32 	%f433, %f431, %f225;
	div.approx.f32 	%f27, %f431, %f253;
	setp.eq.f32 	%p60, %f27, 0f00000000;
	mov.f32 	%f1268, %f1277;
	@%p60 bra 	$L__BB0_25;
// %bb.24:                              // %L1070
	sin.approx.f32 	%f461, %f27;
	div.approx.f32 	%f1268, %f461, %f27;
$L__BB0_25:                             // %L1073
	abs.f32 	%f227, %f226;
	abs.f32 	%f261, %f260;
	abs.f32 	%f296, %f295;
	abs.f32 	%f330, %f329;
	abs.f32 	%f365, %f364;
	abs.f32 	%f399, %f398;
	abs.f32 	%f434, %f433;
	cvt.rn.f32.s32 	%f464, %r10;
	sub.f32 	%f465, %f464, %f140;
	div.approx.f32 	%f467, %f465, %f225;
	abs.f32 	%f468, %f467;
	div.approx.f32 	%f32, %f465, %f253;
	setp.eq.f32 	%p66, %f32, 0f00000000;
	mov.f32 	%f1269, %f1277;
	@%p66 bra 	$L__BB0_27;
// %bb.26:                              // %L1090
	sin.approx.f32 	%f495, %f32;
	div.approx.f32 	%f1269, %f495, %f32;
$L__BB0_27:                             // %L1093
	setp.gt.f32 	%p19, %f227, 0f4B800000;
	mul.f32 	%f228, %f226, 0f00000000;
	setp.gt.f32 	%p25, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p31, %f296, 0f4B800000;
	mul.f32 	%f297, %f295, 0f00000000;
	setp.gt.f32 	%p37, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p43, %f365, 0f4B800000;
	mul.f32 	%f366, %f364, 0f00000000;
	setp.gt.f32 	%p49, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p55, %f434, 0f4B800000;
	mul.f32 	%f435, %f433, 0f00000000;
	setp.gt.f32 	%p61, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	or.b32  	%r353, %r193, 256;
	or.b32  	%r12, %r193, 320;
	cvt.rn.f32.s32 	%f499, %r353;
	sub.f32 	%f500, %f499, %f140;
	div.approx.f32 	%f502, %f500, %f225;
	abs.f32 	%f503, %f502;
	setp.gt.f32 	%p67, %f503, 0f4B800000;
	mul.f32 	%f504, %f502, 0f00000000;
	div.approx.f32 	%f36, %f500, %f253;
	setp.eq.f32 	%p72, %f36, 0f00000000;
	mov.f32 	%f1270, %f1277;
	@%p72 bra 	$L__BB0_29;
// %bb.28:                              // %L1172
	sin.approx.f32 	%f530, %f36;
	div.approx.f32 	%f1270, %f530, %f36;
$L__BB0_29:                             // %L1175
	selp.f32 	%f229, %f228, %f226, %p19;
	selp.f32 	%f263, %f262, %f260, %p25;
	selp.f32 	%f298, %f297, %f295, %p31;
	selp.f32 	%f332, %f331, %f329, %p37;
	selp.f32 	%f367, %f366, %f364, %p43;
	selp.f32 	%f401, %f400, %f398, %p49;
	selp.f32 	%f436, %f435, %f433, %p55;
	selp.f32 	%f470, %f469, %f467, %p61;
	selp.f32 	%f505, %f504, %f502, %p67;
	cvt.rn.f32.s32 	%f533, %r12;
	sub.f32 	%f534, %f533, %f140;
	div.approx.f32 	%f536, %f534, %f225;
	abs.f32 	%f537, %f536;
	setp.gt.f32 	%p73, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	selp.f32 	%f539, %f538, %f536, %p73;
	div.approx.f32 	%f41, %f534, %f253;
	setp.eq.f32 	%p78, %f41, 0f00000000;
	mov.f32 	%f1271, %f1277;
	@%p78 bra 	$L__BB0_31;
// %bb.30:                              // %L1192
	sin.approx.f32 	%f564, %f41;
	div.approx.f32 	%f1271, %f564, %f41;
$L__BB0_31:                             // %L1195
	add.f32 	%f230, %f229, %f229;
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f299, %f298, %f298;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f368, %f367, %f367;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f437, %f436, %f436;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f506, %f505, %f505;
	add.f32 	%f540, %f539, %f539;
	or.b32  	%r371, %r193, 257;
	or.b32  	%r14, %r193, 321;
	cvt.rn.f32.s32 	%f568, %r371;
	sub.f32 	%f569, %f568, %f140;
	div.approx.f32 	%f571, %f569, %f225;
	abs.f32 	%f572, %f571;
	setp.gt.f32 	%p79, %f572, 0f4B800000;
	mul.f32 	%f573, %f571, 0f00000000;
	selp.f32 	%f574, %f573, %f571, %p79;
	add.f32 	%f575, %f574, %f574;
	div.approx.f32 	%f45, %f569, %f253;
	setp.eq.f32 	%p84, %f45, 0f00000000;
	mov.f32 	%f1272, %f1277;
	@%p84 bra 	$L__BB0_33;
// %bb.32:                              // %L1274
	sin.approx.f32 	%f599, %f45;
	div.approx.f32 	%f1272, %f599, %f45;
$L__BB0_33:                             // %L1277
	mov.b32 	%r282, %f230;
	mov.b32 	%r289, %f264;
	mov.b32 	%r300, %f299;
	mov.b32 	%r307, %f333;
	mov.b32 	%r318, %f368;
	mov.b32 	%r325, %f402;
	mov.b32 	%r336, %f437;
	mov.b32 	%r343, %f471;
	mov.b32 	%r354, %f506;
	mov.b32 	%r361, %f540;
	mov.b32 	%r372, %f575;
	cvt.rn.f32.s32 	%f602, %r14;
	sub.f32 	%f603, %f602, %f140;
	div.approx.f32 	%f605, %f603, %f225;
	abs.f32 	%f606, %f605;
	setp.gt.f32 	%p85, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	selp.f32 	%f608, %f607, %f605, %p85;
	add.f32 	%f609, %f608, %f608;
	mov.b32 	%r379, %f609;
	div.approx.f32 	%f50, %f603, %f253;
	setp.eq.f32 	%p90, %f50, 0f00000000;
	mov.f32 	%f1273, %f1277;
	@%p90 bra 	$L__BB0_35;
// %bb.34:                              // %L1294
	sin.approx.f32 	%f633, %f50;
	div.approx.f32 	%f1273, %f633, %f50;
$L__BB0_35:                             // %L1297
	and.b32  	%r283, %r282, -2147483648;
	and.b32  	%r290, %r289, -2147483648;
	and.b32  	%r301, %r300, -2147483648;
	and.b32  	%r308, %r307, -2147483648;
	and.b32  	%r319, %r318, -2147483648;
	and.b32  	%r326, %r325, -2147483648;
	and.b32  	%r337, %r336, -2147483648;
	and.b32  	%r344, %r343, -2147483648;
	and.b32  	%r355, %r354, -2147483648;
	and.b32  	%r362, %r361, -2147483648;
	and.b32  	%r373, %r372, -2147483648;
	and.b32  	%r380, %r379, -2147483648;
	or.b32  	%r389, %r193, 384;
	or.b32  	%r16, %r193, 448;
	cvt.rn.f32.s32 	%f637, %r389;
	sub.f32 	%f638, %f637, %f140;
	div.approx.f32 	%f640, %f638, %f225;
	abs.f32 	%f641, %f640;
	setp.gt.f32 	%p91, %f641, 0f4B800000;
	mul.f32 	%f642, %f640, 0f00000000;
	selp.f32 	%f643, %f642, %f640, %p91;
	add.f32 	%f644, %f643, %f643;
	mov.b32 	%r390, %f644;
	and.b32  	%r391, %r390, -2147483648;
	div.approx.f32 	%f54, %f638, %f253;
	setp.eq.f32 	%p96, %f54, 0f00000000;
	mov.f32 	%f1274, %f1277;
	@%p96 bra 	$L__BB0_37;
// %bb.36:                              // %L1376
	sin.approx.f32 	%f668, %f54;
	div.approx.f32 	%f1274, %f668, %f54;
$L__BB0_37:                             // %L1379
	or.b32  	%r284, %r283, 1056964608;
	or.b32  	%r291, %r290, 1056964608;
	or.b32  	%r302, %r301, 1056964608;
	or.b32  	%r309, %r308, 1056964608;
	or.b32  	%r320, %r319, 1056964608;
	or.b32  	%r327, %r326, 1056964608;
	or.b32  	%r338, %r337, 1056964608;
	or.b32  	%r345, %r344, 1056964608;
	or.b32  	%r356, %r355, 1056964608;
	or.b32  	%r363, %r362, 1056964608;
	or.b32  	%r374, %r373, 1056964608;
	or.b32  	%r381, %r380, 1056964608;
	or.b32  	%r392, %r391, 1056964608;
	cvt.rn.f32.s32 	%f671, %r16;
	sub.f32 	%f672, %f671, %f140;
	div.approx.f32 	%f674, %f672, %f225;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p97, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	selp.f32 	%f677, %f676, %f674, %p97;
	add.f32 	%f678, %f677, %f677;
	mov.b32 	%r397, %f678;
	and.b32  	%r398, %r397, -2147483648;
	or.b32  	%r399, %r398, 1056964608;
	div.approx.f32 	%f59, %f672, %f253;
	setp.eq.f32 	%p102, %f59, 0f00000000;
	mov.f32 	%f1275, %f1277;
	@%p102 bra 	$L__BB0_39;
// %bb.38:                              // %L1396
	sin.approx.f32 	%f702, %f59;
	div.approx.f32 	%f1275, %f702, %f59;
$L__BB0_39:                             // %L1399
	mov.b32 	%f231, %r284;
	mov.b32 	%f265, %r291;
	mov.b32 	%f300, %r302;
	mov.b32 	%f334, %r309;
	mov.b32 	%f369, %r320;
	mov.b32 	%f403, %r327;
	mov.b32 	%f438, %r338;
	mov.b32 	%f472, %r345;
	mov.b32 	%f507, %r356;
	mov.b32 	%f541, %r363;
	mov.b32 	%f576, %r374;
	mov.b32 	%f610, %r381;
	mov.b32 	%f645, %r392;
	mov.b32 	%f679, %r399;
	or.b32  	%r407, %r193, 385;
	or.b32  	%r18, %r193, 449;
	cvt.rn.f32.s32 	%f706, %r407;
	sub.f32 	%f707, %f706, %f140;
	div.approx.f32 	%f709, %f707, %f225;
	abs.f32 	%f710, %f709;
	setp.gt.f32 	%p103, %f710, 0f4B800000;
	mul.f32 	%f711, %f709, 0f00000000;
	selp.f32 	%f712, %f711, %f709, %p103;
	add.f32 	%f713, %f712, %f712;
	mov.b32 	%r408, %f713;
	and.b32  	%r409, %r408, -2147483648;
	or.b32  	%r410, %r409, 1056964608;
	mov.b32 	%f714, %r410;
	div.approx.f32 	%f63, %f707, %f253;
	setp.eq.f32 	%p108, %f63, 0f00000000;
	mov.f32 	%f1276, %f1277;
	@%p108 bra 	$L__BB0_41;
// %bb.40:                              // %L1478
	sin.approx.f32 	%f737, %f63;
	div.approx.f32 	%f1276, %f737, %f63;
$L__BB0_41:                             // %L1481
	add.f32 	%f232, %f230, %f231;
	abs.f32 	%f234, %f230;
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f301, %f299, %f300;
	abs.f32 	%f303, %f299;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f370, %f368, %f369;
	abs.f32 	%f372, %f368;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f439, %f437, %f438;
	abs.f32 	%f441, %f437;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f508, %f506, %f507;
	abs.f32 	%f510, %f506;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f577, %f575, %f576;
	abs.f32 	%f579, %f575;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f646, %f644, %f645;
	abs.f32 	%f648, %f644;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f715, %f713, %f714;
	abs.f32 	%f717, %f713;
	shr.u32 	%r185, %r3, 1;
	shr.u32 	%r191, %r3, 3;
	cvt.rn.f32.s32 	%f740, %r18;
	sub.f32 	%f741, %f740, %f140;
	div.approx.f32 	%f743, %f741, %f225;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p109, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p109;
	add.f32 	%f747, %f746, %f746;
	mov.b32 	%r415, %f747;
	and.b32  	%r416, %r415, -2147483648;
	or.b32  	%r417, %r416, 1056964608;
	mov.b32 	%f748, %r417;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	div.approx.f32 	%f68, %f741, %f253;
	setp.eq.f32 	%p114, %f68, 0f00000000;
	@%p114 bra 	$L__BB0_43;
// %bb.42:                              // %L1498
	sin.approx.f32 	%f771, %f68;
	div.approx.f32 	%f1277, %f771, %f68;
$L__BB0_43:                             // %L1501
	cvt.rzi.f32.f32 	%f233, %f232;
	setp.gt.f32 	%p20, %f234, 0f4B000000;
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p26, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f302, %f301;
	setp.gt.f32 	%p32, %f303, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p38, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f371, %f370;
	setp.gt.f32 	%p44, %f372, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p50, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f440, %f439;
	setp.gt.f32 	%p56, %f441, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p62, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f509, %f508;
	setp.gt.f32 	%p68, %f510, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p74, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f578, %f577;
	setp.gt.f32 	%p80, %f579, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p86, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f647, %f646;
	setp.gt.f32 	%p92, %f648, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p98, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f716, %f715;
	setp.gt.f32 	%p104, %f717, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p110, %f751, 0f4B000000;
	mul.lo.s32 	%r437, %r193, 127;
	and.b32  	%r438, %r437, 255;
	cvt.rn.f32.s32 	%f774, %r438;
	div.approx.f32 	%f776, %f774, %f253;
	add.f32 	%f777, %f776, %f776;
	mov.b32 	%r439, %f777;
	and.b32  	%r440, %r439, -2147483648;
	or.b32  	%r441, %r440, 1056964608;
	mov.b32 	%f778, %r441;
	add.f32 	%f779, %f777, %f778;
	cvt.rzi.f32.f32 	%f780, %f779;
	abs.f32 	%f781, %f777;
	setp.gt.f32 	%p115, %f781, 0f4B000000;
	selp.f32 	%f782, %f777, %f780, %p115;
	cvt.rzi.f32.f32 	%f783, %f777;
	setp.lt.f32 	%p116, %f781, 0f3F000000;
	add.s32 	%r447, %r437, 192;
	and.b32  	%r448, %r447, 255;
	cvt.rn.f32.s32 	%f809, %r448;
	div.approx.f32 	%f810, %f809, %f253;
	add.f32 	%f811, %f810, %f810;
	mov.b32 	%r449, %f811;
	and.b32  	%r450, %r449, -2147483648;
	or.b32  	%r451, %r450, 1056964608;
	mov.b32 	%f812, %r451;
	add.f32 	%f813, %f811, %f812;
	cvt.rzi.f32.f32 	%f814, %f813;
	abs.f32 	%f815, %f811;
	setp.gt.f32 	%p122, %f815, 0f4B000000;
	selp.f32 	%f816, %f811, %f814, %p122;
	cvt.rzi.f32.f32 	%f817, %f811;
	setp.lt.f32 	%p123, %f815, 0f3F000000;
	and.b32  	%r457, %r191, 2;
	and.b32  	%r458, %r185, 4;
	or.b32  	%r459, %r189, %r457;
	or.b32  	%r24, %r459, %r458;
	and.b32  	%r460, %r3, 3;
	mul.lo.s32 	%r461, %r460, %r24;
	shl.b32 	%r462, %r461, 1;
	neg.s32 	%r463, %r462;
	cvt.rn.f32.s32 	%f842, %r463;
	mov.f32 	%f843, 0f41000000;
	div.approx.f32 	%f71, %f842, %f843;
	abs.f32 	%f1296, %f71;
	setp.lt.f32 	%p129, %f1296, 0f40000000;
	@%p129 bra 	$L__BB0_131;
// %bb.44:
	setp.gtu.f32 	%p130, %f1296, 0f4B800000;
	@%p130 bra 	$L__BB0_127;
	bra.uni 	$L__BB0_45;
$L__BB0_127:
	mov.b32 	%r196, %f1296;
	and.b32  	%r464, %r196, 8388607;
	or.b32  	%r16383, %r464, 1065353216;
	mov.b32 	%f1295, %r16383;
	add.s32 	%r465, %r196, -1073741824;
	and.b32  	%r16384, %r465, -8388608;
	setp.eq.s32 	%p136, %r16384, 0;
	@%p136 bra 	$L__BB0_130;
// %bb.128:                             // %__nv_fmaf_rn.exit4.i.i.i1712.preheader
	mov.f32 	%f853, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f852,%f853;
	// end inline asm
$L__BB0_129:                            // %__nv_fmaf_rn.exit4.i.i.i1712
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r466, %r16384, 192937984;
	add.s32 	%r467, %r16383, %r466;
	mov.b32 	%f854, %r467;
	mul.f32 	%f855, %f852, %f854;
	sub.f32 	%f856, %f854, %f855;
	fma.rn.f32 	%f857, %f856, %f852, %f855;
	sub.f32 	%f858, %f854, %f857;
	fma.rz.f32 	%f859, %f858, %f852, %f857;
	cvt.rzi.f32.f32 	%f860, %f859;
	sub.f32 	%f1295, %f854, %f860;
	sub.s32 	%r16384, %r16384, %r466;
	mov.b32 	%r16383, %f1295;
	setp.ne.s32 	%p137, %r16384, 0;
	setp.ne.s32 	%p138, %r16383, 0;
	and.pred  	%p139, %p137, %p138;
	@%p139 bra 	$L__BB0_129;
$L__BB0_130:                            // %__internal_fmodf_slowpath_mod.exit.i.i1714
	setp.gt.u32 	%p140, %r196, 2139095039;
	selp.f32 	%f861, 0f7FFFFFFF, 0f4B800000, %p140;
	mul.f32 	%f862, %f1295, 0f34000000;
	mul.f32 	%f1296, %f861, %f862;
	bra.uni 	$L__BB0_131;
$L__BB0_45:                             // %__nv_fast_fdividef.exit.i.i.i1691
	div.approx.f32 	%f845, %f1296, %f221;
	cvt.rzi.f32.f32 	%f1294, %f845;
	fma.rn.f32 	%f144, %f1294, 0fC0000000, %f1296;
	mov.b32 	%r195, %f144;
	setp.lt.u32 	%p131, %r195, 1073741824;
	@%p131 bra 	$L__BB0_126;
// %bb.46:
	setp.lt.u32 	%p132, %r195, -2147483647;
	@%p132 bra 	$L__BB0_124;
// %bb.47:
	add.f32 	%f850, %f1294, 0fBF800000;
	setp.lt.f32 	%p135, %f144, 0fC0000000;
	add.f32 	%f851, %f850, 0fBF800000;
	selp.f32 	%f1294, %f851, %f850, %p135;
	bra.uni 	$L__BB0_126;
$L__BB0_124:
	add.f32 	%f1294, %f1294, 0f3F800000;
	setp.ltu.f32 	%p133, %f144, 0f40800000;
	@%p133 bra 	$L__BB0_126;
// %bb.125:                             // %__nv_fmaf_rn.exit.i.i.i1695
	add.f32 	%f846, %f1294, 0f3F800000;
	fma.rn.f32 	%f848, %f221, 0fC0400000, %f144;
	setp.ge.f32 	%p134, %f848, 0f00000000;
	add.f32 	%f849, %f846, 0f3F800000;
	selp.f32 	%f1294, %f849, %f846, %p134;
$L__BB0_126:                            // %__internal_fmodf_fastpath_quot.exit.i.i1698
	fma.rn.f32 	%f1296, %f1294, 0fC0000000, %f1296;
$L__BB0_131:                            // %__internal_fmodf_kernel.exit.i1717
	selp.f32 	%f235, %f230, %f233, %p20;
	cvt.rzi.f32.f32 	%f236, %f230;
	setp.lt.f32 	%p21, %f234, 0f3F000000;
	selp.f32 	%f269, %f264, %f267, %p26;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p27, %f268, 0f3F000000;
	selp.f32 	%f304, %f299, %f302, %p32;
	cvt.rzi.f32.f32 	%f305, %f299;
	setp.lt.f32 	%p33, %f303, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p38;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p39, %f337, 0f3F000000;
	selp.f32 	%f373, %f368, %f371, %p44;
	cvt.rzi.f32.f32 	%f374, %f368;
	setp.lt.f32 	%p45, %f372, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p50;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p51, %f406, 0f3F000000;
	selp.f32 	%f442, %f437, %f440, %p56;
	cvt.rzi.f32.f32 	%f443, %f437;
	setp.lt.f32 	%p57, %f441, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p62;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p63, %f475, 0f3F000000;
	selp.f32 	%f511, %f506, %f509, %p68;
	cvt.rzi.f32.f32 	%f512, %f506;
	setp.lt.f32 	%p69, %f510, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p74;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p75, %f544, 0f3F000000;
	selp.f32 	%f580, %f575, %f578, %p80;
	cvt.rzi.f32.f32 	%f581, %f575;
	setp.lt.f32 	%p81, %f579, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p86;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p87, %f613, 0f3F000000;
	selp.f32 	%f649, %f644, %f647, %p92;
	cvt.rzi.f32.f32 	%f650, %f644;
	setp.lt.f32 	%p93, %f648, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p98;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p99, %f682, 0f3F000000;
	selp.f32 	%f718, %f713, %f716, %p104;
	cvt.rzi.f32.f32 	%f719, %f713;
	setp.lt.f32 	%p105, %f717, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p110;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p111, %f751, 0f3F000000;
	selp.f32 	%f784, %f783, %f782, %p116;
	selp.f32 	%f818, %f817, %f816, %p123;
	shl.b32 	%r179, %r3, 1;
	abs.f32 	%f863, %f1296;
	setp.gtu.f32 	%p141, %f863, 0f7F800000;
	@%p141 bra 	$L__BB0_133;
// %bb.132:
	mov.b32 	%r468, %f71;
	and.b32  	%r469, %r468, -2147483648;
	mov.b32 	%r470, %f1296;
	or.b32  	%r471, %r469, %r470;
	mov.b32 	%f1296, %r471;
$L__BB0_133:                            // %__nv_fmodf.exit1718
	selp.f32 	%f237, %f236, %f235, %p21;
	selp.f32 	%f271, %f270, %f269, %p27;
	selp.f32 	%f306, %f305, %f304, %p33;
	selp.f32 	%f340, %f339, %f338, %p39;
	selp.f32 	%f375, %f374, %f373, %p45;
	selp.f32 	%f409, %f408, %f407, %p51;
	selp.f32 	%f444, %f443, %f442, %p57;
	selp.f32 	%f478, %f477, %f476, %p63;
	selp.f32 	%f513, %f512, %f511, %p69;
	selp.f32 	%f547, %f546, %f545, %p75;
	selp.f32 	%f582, %f581, %f580, %p81;
	selp.f32 	%f616, %f615, %f614, %p87;
	selp.f32 	%f651, %f650, %f649, %p93;
	selp.f32 	%f685, %f684, %f683, %p99;
	selp.f32 	%f720, %f719, %f718, %p105;
	selp.f32 	%f754, %f753, %f752, %p111;
	fma.rn.f32 	%f785, %f784, 0fBF000000, %f776;
	fma.rn.f32 	%f819, %f818, 0fBF000000, %f810;
	add.f32 	%f864, %f1296, %f1296;
	mov.b32 	%r472, %f864;
	and.b32  	%r473, %r472, -2147483648;
	or.b32  	%r474, %r473, 1056964608;
	mov.b32 	%f865, %r474;
	add.f32 	%f866, %f864, %f865;
	cvt.rzi.f32.f32 	%f867, %f866;
	abs.f32 	%f868, %f864;
	setp.gt.f32 	%p142, %f868, 0f4B000000;
	selp.f32 	%f869, %f864, %f867, %p142;
	cvt.rzi.f32.f32 	%f870, %f864;
	setp.lt.f32 	%p143, %f868, 0f3F000000;
	selp.f32 	%f871, %f870, %f869, %p143;
	fma.rn.f32 	%f872, %f871, 0fBF000000, %f1296;
	and.b32  	%r480, %r179, 6;
	mov.u32 	%r481, -8;
	sub.s32 	%r482, %r481, %r480;
	mul.lo.s32 	%r483, %r24, %r482;
	cvt.rn.f32.s32 	%f894, %r483;
	div.approx.f32 	%f160, %f894, %f843;
	abs.f32 	%f1280, %f160;
	setp.lt.f32 	%p149, %f1280, 0f40000000;
	@%p149 bra 	$L__BB0_59;
// %bb.48:
	setp.gtu.f32 	%p150, %f1280, 0f4B800000;
	@%p150 bra 	$L__BB0_55;
	bra.uni 	$L__BB0_49;
$L__BB0_55:
	mov.b32 	%r26, %f1280;
	and.b32  	%r484, %r26, 8388607;
	or.b32  	%r16325, %r484, 1065353216;
	mov.b32 	%f1279, %r16325;
	add.s32 	%r485, %r26, -1073741824;
	and.b32  	%r16326, %r485, -8388608;
	setp.eq.s32 	%p156, %r16326, 0;
	@%p156 bra 	$L__BB0_58;
// %bb.56:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f905, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f904,%f905;
	// end inline asm
$L__BB0_57:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r486, %r16326, 192937984;
	add.s32 	%r487, %r16325, %r486;
	mov.b32 	%f906, %r487;
	mul.f32 	%f907, %f904, %f906;
	sub.f32 	%f908, %f906, %f907;
	fma.rn.f32 	%f909, %f908, %f904, %f907;
	sub.f32 	%f910, %f906, %f909;
	fma.rz.f32 	%f911, %f910, %f904, %f909;
	cvt.rzi.f32.f32 	%f912, %f911;
	sub.f32 	%f1279, %f906, %f912;
	sub.s32 	%r16326, %r16326, %r486;
	mov.b32 	%r16325, %f1279;
	setp.ne.s32 	%p157, %r16326, 0;
	setp.ne.s32 	%p158, %r16325, 0;
	and.pred  	%p159, %p157, %p158;
	@%p159 bra 	$L__BB0_57;
$L__BB0_58:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p160, %r26, 2139095039;
	selp.f32 	%f913, 0f7FFFFFFF, 0f4B800000, %p160;
	mul.f32 	%f914, %f1279, 0f34000000;
	mul.f32 	%f1280, %f913, %f914;
	bra.uni 	$L__BB0_59;
$L__BB0_49:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f897, %f1280, %f221;
	cvt.rzi.f32.f32 	%f1278, %f897;
	fma.rn.f32 	%f74, %f1278, 0fC0000000, %f1280;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p151, %r25, 1073741824;
	@%p151 bra 	$L__BB0_54;
// %bb.50:
	setp.lt.u32 	%p152, %r25, -2147483647;
	@%p152 bra 	$L__BB0_52;
// %bb.51:
	add.f32 	%f902, %f1278, 0fBF800000;
	setp.lt.f32 	%p155, %f74, 0fC0000000;
	add.f32 	%f903, %f902, 0fBF800000;
	selp.f32 	%f1278, %f903, %f902, %p155;
	bra.uni 	$L__BB0_54;
$L__BB0_52:
	add.f32 	%f1278, %f1278, 0f3F800000;
	setp.ltu.f32 	%p153, %f74, 0f40800000;
	@%p153 bra 	$L__BB0_54;
// %bb.53:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f898, %f1278, 0f3F800000;
	fma.rn.f32 	%f900, %f221, 0fC0400000, %f74;
	setp.ge.f32 	%p154, %f900, 0f00000000;
	add.f32 	%f901, %f898, 0f3F800000;
	selp.f32 	%f1278, %f901, %f898, %p154;
$L__BB0_54:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1280, %f1278, 0fC0000000, %f1280;
$L__BB0_59:                             // %__internal_fmodf_kernel.exit.i
	fma.rn.f32 	%f238, %f237, 0fBF000000, %f229;
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f307, %f306, 0fBF000000, %f298;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f376, %f375, 0fBF000000, %f367;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f445, %f444, 0fBF000000, %f436;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f514, %f513, 0fBF000000, %f505;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f583, %f582, 0fBF000000, %f574;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f652, %f651, 0fBF000000, %f643;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f721, %f720, 0fBF000000, %f712;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	mul.f32 	%f786, %f785, %f785;
	mul.f32 	%f820, %f819, %f819;
	mul.f32 	%f873, %f872, %f872;
	abs.f32 	%f915, %f1280;
	setp.gtu.f32 	%p161, %f915, 0f7F800000;
	@%p161 bra 	$L__BB0_61;
// %bb.60:
	mov.b32 	%r488, %f160;
	and.b32  	%r489, %r488, -2147483648;
	mov.b32 	%r490, %f1280;
	or.b32  	%r491, %r489, %r490;
	mov.b32 	%f1280, %r491;
$L__BB0_61:                             // %__nv_fmodf.exit
	mul.f32 	%f239, %f238, %f238;
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f308, %f307, %f307;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f377, %f376, %f376;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f446, %f445, %f445;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f515, %f514, %f514;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f584, %f583, %f583;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f653, %f652, %f652;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f722, %f721, %f721;
	mul.f32 	%f756, %f755, %f755;
	fma.rn.f32 	%f787, %f786, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f788, %f786, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f821, %f820, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f822, %f820, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f874, %f873, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f875, %f873, 0f3E684E12, 0fBFAAD2E0;
	add.f32 	%f916, %f1280, %f1280;
	mov.b32 	%r504, %f916;
	and.b32  	%r505, %r504, -2147483648;
	or.b32  	%r506, %r505, 1056964608;
	mov.b32 	%f917, %r506;
	add.f32 	%f918, %f916, %f917;
	cvt.rzi.f32.f32 	%f919, %f918;
	abs.f32 	%f920, %f916;
	setp.gt.f32 	%p162, %f920, 0f4B000000;
	selp.f32 	%f921, %f916, %f919, %p162;
	cvt.rzi.f32.f32 	%f922, %f916;
	setp.lt.f32 	%p163, %f920, 0f3F000000;
	selp.f32 	%f923, %f922, %f921, %p163;
	fma.rn.f32 	%f924, %f923, 0fBF000000, %f1280;
	mul.f32 	%f925, %f924, %f924;
	fma.rn.f32 	%f926, %f925, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f927, %f925, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r512, %r187, 2147483646;
	shl.b32 	%r513, %r186, 2;
	sub.s32 	%r514, %r512, %r513;
	mul.lo.s32 	%r515, %r514, %r24;
	shl.b32 	%r37, %r515, 1;
	cvt.rn.f32.s32 	%f88, %r37;
	mov.f32 	%f948, 0f42800000;
	div.approx.f32 	%f89, %f88, %f948;
	abs.f32 	%f1300, %f89;
	setp.lt.f32 	%p169, %f1300, 0f40000000;
	@%p169 bra 	$L__BB0_141;
// %bb.62:
	setp.gtu.f32 	%p170, %f1300, 0f4B800000;
	@%p170 bra 	$L__BB0_137;
	bra.uni 	$L__BB0_63;
$L__BB0_137:
	mov.b32 	%r204, %f1300;
	and.b32  	%r516, %r204, 8388607;
	or.b32  	%r16385, %r516, 1065353216;
	mov.b32 	%f1299, %r16385;
	add.s32 	%r517, %r204, -1073741824;
	and.b32  	%r16386, %r517, -8388608;
	setp.eq.s32 	%p176, %r16386, 0;
	@%p176 bra 	$L__BB0_140;
// %bb.138:                             // %__nv_fmaf_rn.exit4.i.i.i1743.preheader
	mov.f32 	%f958, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f957,%f958;
	// end inline asm
$L__BB0_139:                            // %__nv_fmaf_rn.exit4.i.i.i1743
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r518, %r16386, 192937984;
	add.s32 	%r519, %r16385, %r518;
	mov.b32 	%f959, %r519;
	mul.f32 	%f960, %f957, %f959;
	sub.f32 	%f961, %f959, %f960;
	fma.rn.f32 	%f962, %f961, %f957, %f960;
	sub.f32 	%f963, %f959, %f962;
	fma.rz.f32 	%f964, %f963, %f957, %f962;
	cvt.rzi.f32.f32 	%f965, %f964;
	sub.f32 	%f1299, %f959, %f965;
	sub.s32 	%r16386, %r16386, %r518;
	mov.b32 	%r16385, %f1299;
	setp.ne.s32 	%p177, %r16386, 0;
	setp.ne.s32 	%p178, %r16385, 0;
	and.pred  	%p179, %p177, %p178;
	@%p179 bra 	$L__BB0_139;
$L__BB0_140:                            // %__internal_fmodf_slowpath_mod.exit.i.i1745
	setp.gt.u32 	%p180, %r204, 2139095039;
	selp.f32 	%f966, 0f7FFFFFFF, 0f4B800000, %p180;
	mul.f32 	%f967, %f1299, 0f34000000;
	mul.f32 	%f1300, %f966, %f967;
	bra.uni 	$L__BB0_141;
$L__BB0_63:                             // %__nv_fast_fdividef.exit.i.i.i1722
	div.approx.f32 	%f950, %f1300, %f221;
	cvt.rzi.f32.f32 	%f1298, %f950;
	fma.rn.f32 	%f163, %f1298, 0fC0000000, %f1300;
	mov.b32 	%r203, %f163;
	setp.lt.u32 	%p171, %r203, 1073741824;
	@%p171 bra 	$L__BB0_136;
// %bb.64:
	setp.lt.u32 	%p172, %r203, -2147483647;
	@%p172 bra 	$L__BB0_134;
// %bb.65:
	add.f32 	%f955, %f1298, 0fBF800000;
	setp.lt.f32 	%p175, %f163, 0fC0000000;
	add.f32 	%f956, %f955, 0fBF800000;
	selp.f32 	%f1298, %f956, %f955, %p175;
	bra.uni 	$L__BB0_136;
$L__BB0_134:
	add.f32 	%f1298, %f1298, 0f3F800000;
	setp.ltu.f32 	%p173, %f163, 0f40800000;
	@%p173 bra 	$L__BB0_136;
// %bb.135:                             // %__nv_fmaf_rn.exit.i.i.i1726
	add.f32 	%f951, %f1298, 0f3F800000;
	fma.rn.f32 	%f953, %f221, 0fC0400000, %f163;
	setp.ge.f32 	%p174, %f953, 0f00000000;
	add.f32 	%f954, %f951, 0f3F800000;
	selp.f32 	%f1298, %f954, %f951, %p174;
$L__BB0_136:                            // %__internal_fmodf_fastpath_quot.exit.i.i1729
	fma.rn.f32 	%f1300, %f1298, 0fC0000000, %f1300;
$L__BB0_141:                            // %__internal_fmodf_kernel.exit.i1748
	cvt.rzi.s32.f32 	%r285, %f237;
	fma.rn.f32 	%f240, %f239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f241, %f239, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r292, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r303, %f306;
	fma.rn.f32 	%f309, %f308, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f310, %f308, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r310, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r321, %f375;
	fma.rn.f32 	%f378, %f377, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f379, %f377, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r328, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r339, %f444;
	fma.rn.f32 	%f447, %f446, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f448, %f446, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r346, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r357, %f513;
	fma.rn.f32 	%f516, %f515, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f517, %f515, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r364, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r375, %f582;
	fma.rn.f32 	%f585, %f584, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f586, %f584, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r382, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r393, %f651;
	fma.rn.f32 	%f654, %f653, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f655, %f653, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r400, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r411, %f720;
	fma.rn.f32 	%f723, %f722, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f724, %f722, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r418, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r442, %f784;
	fma.rn.f32 	%f789, %f787, %f786, 0fC0A55DF6;
	fma.rn.f32 	%f790, %f788, %f786, 0f4081E0CF;
	fma.rn.f32 	%f791, %f786, %f785, 0f00000000;
	cvt.rzi.s32.f32 	%r452, %f818;
	fma.rn.f32 	%f823, %f821, %f820, 0fC0A55DF6;
	fma.rn.f32 	%f824, %f822, %f820, 0f4081E0CF;
	fma.rn.f32 	%f825, %f820, %f819, 0f00000000;
	cvt.rzi.s32.f32 	%r475, %f871;
	fma.rn.f32 	%f876, %f874, %f873, 0fC0A55DF6;
	fma.rn.f32 	%f877, %f875, %f873, 0f4081E0CF;
	fma.rn.f32 	%f878, %f873, %f872, 0f00000000;
	cvt.rzi.s32.f32 	%r507, %f923;
	fma.rn.f32 	%f928, %f926, %f925, 0fC0A55DF6;
	fma.rn.f32 	%f929, %f927, %f925, 0f4081E0CF;
	fma.rn.f32 	%f930, %f925, %f924, 0f00000000;
	abs.f32 	%f968, %f1300;
	setp.gtu.f32 	%p181, %f968, 0f7F800000;
	@%p181 bra 	$L__BB0_143;
// %bb.142:
	mov.b32 	%r520, %f89;
	and.b32  	%r521, %r520, -2147483648;
	mov.b32 	%r522, %f1300;
	or.b32  	%r523, %r521, %r522;
	mov.b32 	%f1300, %r523;
$L__BB0_143:                            // %__nv_fmodf.exit1749
	add.s32 	%r286, %r285, 1;
	fma.rn.f32 	%f242, %f240, %f239, 0fC0A55DF6;
	fma.rn.f32 	%f243, %f241, %f239, 0f4081E0CF;
	fma.rn.f32 	%f244, %f239, %f238, 0f00000000;
	add.s32 	%r293, %r292, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r304, %r303, 1;
	fma.rn.f32 	%f311, %f309, %f308, 0fC0A55DF6;
	fma.rn.f32 	%f312, %f310, %f308, 0f4081E0CF;
	fma.rn.f32 	%f313, %f308, %f307, 0f00000000;
	add.s32 	%r311, %r310, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r322, %r321, 1;
	fma.rn.f32 	%f380, %f378, %f377, 0fC0A55DF6;
	fma.rn.f32 	%f381, %f379, %f377, 0f4081E0CF;
	fma.rn.f32 	%f382, %f377, %f376, 0f00000000;
	add.s32 	%r329, %r328, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r340, %r339, 1;
	fma.rn.f32 	%f449, %f447, %f446, 0fC0A55DF6;
	fma.rn.f32 	%f450, %f448, %f446, 0f4081E0CF;
	fma.rn.f32 	%f451, %f446, %f445, 0f00000000;
	add.s32 	%r347, %r346, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r358, %r357, 1;
	fma.rn.f32 	%f518, %f516, %f515, 0fC0A55DF6;
	fma.rn.f32 	%f519, %f517, %f515, 0f4081E0CF;
	fma.rn.f32 	%f520, %f515, %f514, 0f00000000;
	add.s32 	%r365, %r364, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r376, %r375, 1;
	fma.rn.f32 	%f587, %f585, %f584, 0fC0A55DF6;
	fma.rn.f32 	%f588, %f586, %f584, 0f4081E0CF;
	fma.rn.f32 	%f589, %f584, %f583, 0f00000000;
	add.s32 	%r383, %r382, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r394, %r393, 1;
	fma.rn.f32 	%f656, %f654, %f653, 0fC0A55DF6;
	fma.rn.f32 	%f657, %f655, %f653, 0f4081E0CF;
	fma.rn.f32 	%f658, %f653, %f652, 0f00000000;
	add.s32 	%r401, %r400, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r412, %r411, 1;
	fma.rn.f32 	%f725, %f723, %f722, 0fC0A55DF6;
	fma.rn.f32 	%f726, %f724, %f722, 0f4081E0CF;
	fma.rn.f32 	%f727, %f722, %f721, 0f00000000;
	add.s32 	%r419, %r418, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	fma.rn.f32 	%f792, %f790, %f786, 0fC09DE9E6;
	fma.rn.f32 	%f793, %f789, %f791, 0f00000000;
	and.b32  	%r443, %r442, 1;
	fma.rn.f32 	%f826, %f824, %f820, 0fC09DE9E6;
	fma.rn.f32 	%f827, %f823, %f825, 0f00000000;
	and.b32  	%r453, %r452, 1;
	fma.rn.f32 	%f879, %f877, %f873, 0fC09DE9E6;
	fma.rn.f32 	%f880, %f876, %f878, 0f00000000;
	and.b32  	%r476, %r475, 1;
	fma.rn.f32 	%f931, %f929, %f925, 0fC09DE9E6;
	fma.rn.f32 	%f932, %f928, %f930, 0f00000000;
	and.b32  	%r508, %r507, 1;
	add.f32 	%f969, %f1300, %f1300;
	mov.b32 	%r524, %f969;
	and.b32  	%r525, %r524, -2147483648;
	or.b32  	%r526, %r525, 1056964608;
	mov.b32 	%f970, %r526;
	add.f32 	%f971, %f969, %f970;
	cvt.rzi.f32.f32 	%f972, %f971;
	abs.f32 	%f973, %f969;
	setp.gt.f32 	%p182, %f973, 0f4B000000;
	selp.f32 	%f974, %f969, %f972, %p182;
	cvt.rzi.f32.f32 	%f975, %f969;
	setp.lt.f32 	%p183, %f973, 0f3F000000;
	selp.f32 	%f976, %f975, %f974, %p183;
	cvt.rzi.s32.f32 	%r527, %f976;
	fma.rn.f32 	%f977, %f976, 0fBF000000, %f1300;
	mul.f32 	%f978, %f977, %f977;
	fma.rn.f32 	%f979, %f978, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f980, %f978, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f981, %f979, %f978, 0fC0A55DF6;
	fma.rn.f32 	%f982, %f980, %f978, 0f4081E0CF;
	fma.rn.f32 	%f983, %f978, %f977, 0f00000000;
	shl.b32 	%r532, %r24, 4;
	sub.s32 	%r533, %r37, %r532;
	cvt.rn.f32.s32 	%f179, %r533;
	div.approx.f32 	%f180, %f179, %f948;
	abs.f32 	%f1284, %f180;
	setp.lt.f32 	%p189, %f1284, 0f40000000;
	@%p189 bra 	$L__BB0_77;
// %bb.66:
	setp.gtu.f32 	%p190, %f1284, 0f4B800000;
	@%p190 bra 	$L__BB0_73;
	bra.uni 	$L__BB0_67;
$L__BB0_73:
	mov.b32 	%r39, %f1284;
	and.b32  	%r534, %r39, 8388607;
	or.b32  	%r16327, %r534, 1065353216;
	mov.b32 	%f1283, %r16327;
	add.s32 	%r535, %r39, -1073741824;
	and.b32  	%r16328, %r535, -8388608;
	setp.eq.s32 	%p196, %r16328, 0;
	@%p196 bra 	$L__BB0_76;
// %bb.74:                              // %__nv_fmaf_rn.exit4.i.i.i1619.preheader
	mov.f32 	%f1009, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1008,%f1009;
	// end inline asm
$L__BB0_75:                             // %__nv_fmaf_rn.exit4.i.i.i1619
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r536, %r16328, 192937984;
	add.s32 	%r537, %r16327, %r536;
	mov.b32 	%f1010, %r537;
	mul.f32 	%f1011, %f1008, %f1010;
	sub.f32 	%f1012, %f1010, %f1011;
	fma.rn.f32 	%f1013, %f1012, %f1008, %f1011;
	sub.f32 	%f1014, %f1010, %f1013;
	fma.rz.f32 	%f1015, %f1014, %f1008, %f1013;
	cvt.rzi.f32.f32 	%f1016, %f1015;
	sub.f32 	%f1283, %f1010, %f1016;
	sub.s32 	%r16328, %r16328, %r536;
	mov.b32 	%r16327, %f1283;
	setp.ne.s32 	%p197, %r16328, 0;
	setp.ne.s32 	%p198, %r16327, 0;
	and.pred  	%p199, %p197, %p198;
	@%p199 bra 	$L__BB0_75;
$L__BB0_76:                             // %__internal_fmodf_slowpath_mod.exit.i.i1621
	setp.gt.u32 	%p200, %r39, 2139095039;
	selp.f32 	%f1017, 0f7FFFFFFF, 0f4B800000, %p200;
	mul.f32 	%f1018, %f1283, 0f34000000;
	mul.f32 	%f1284, %f1017, %f1018;
	bra.uni 	$L__BB0_77;
$L__BB0_67:                             // %__nv_fast_fdividef.exit.i.i.i1598
	div.approx.f32 	%f1001, %f1284, %f221;
	cvt.rzi.f32.f32 	%f1282, %f1001;
	fma.rn.f32 	%f92, %f1282, 0fC0000000, %f1284;
	mov.b32 	%r38, %f92;
	setp.lt.u32 	%p191, %r38, 1073741824;
	@%p191 bra 	$L__BB0_72;
// %bb.68:
	setp.lt.u32 	%p192, %r38, -2147483647;
	@%p192 bra 	$L__BB0_70;
// %bb.69:
	add.f32 	%f1006, %f1282, 0fBF800000;
	setp.lt.f32 	%p195, %f92, 0fC0000000;
	add.f32 	%f1007, %f1006, 0fBF800000;
	selp.f32 	%f1282, %f1007, %f1006, %p195;
	bra.uni 	$L__BB0_72;
$L__BB0_70:
	add.f32 	%f1282, %f1282, 0f3F800000;
	setp.ltu.f32 	%p193, %f92, 0f40800000;
	@%p193 bra 	$L__BB0_72;
// %bb.71:                              // %__nv_fmaf_rn.exit.i.i.i1602
	add.f32 	%f1002, %f1282, 0f3F800000;
	fma.rn.f32 	%f1004, %f221, 0fC0400000, %f92;
	setp.ge.f32 	%p194, %f1004, 0f00000000;
	add.f32 	%f1005, %f1002, 0f3F800000;
	selp.f32 	%f1282, %f1005, %f1002, %p194;
$L__BB0_72:                             // %__internal_fmodf_fastpath_quot.exit.i.i1605
	fma.rn.f32 	%f1284, %f1282, 0fC0000000, %f1284;
$L__BB0_77:                             // %__internal_fmodf_kernel.exit.i1624
	shl.b32 	%r173, %r3, 2;
	and.b32  	%r181, %r3, 18;
	fma.rn.f32 	%f245, %f243, %f239, 0fC09DE9E6;
	fma.rn.f32 	%f246, %f242, %f244, 0f00000000;
	and.b32  	%r287, %r286, 1;
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r294, %r293, 1;
	fma.rn.f32 	%f314, %f312, %f308, 0fC09DE9E6;
	fma.rn.f32 	%f315, %f311, %f313, 0f00000000;
	and.b32  	%r305, %r304, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r312, %r311, 1;
	fma.rn.f32 	%f383, %f381, %f377, 0fC09DE9E6;
	fma.rn.f32 	%f384, %f380, %f382, 0f00000000;
	and.b32  	%r323, %r322, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r330, %r329, 1;
	fma.rn.f32 	%f452, %f450, %f446, 0fC09DE9E6;
	fma.rn.f32 	%f453, %f449, %f451, 0f00000000;
	and.b32  	%r341, %r340, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r348, %r347, 1;
	fma.rn.f32 	%f521, %f519, %f515, 0fC09DE9E6;
	fma.rn.f32 	%f522, %f518, %f520, 0f00000000;
	and.b32  	%r359, %r358, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r366, %r365, 1;
	fma.rn.f32 	%f590, %f588, %f584, 0fC09DE9E6;
	fma.rn.f32 	%f591, %f587, %f589, 0f00000000;
	and.b32  	%r377, %r376, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r384, %r383, 1;
	fma.rn.f32 	%f659, %f657, %f653, 0fC09DE9E6;
	fma.rn.f32 	%f660, %f656, %f658, 0f00000000;
	and.b32  	%r395, %r394, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r402, %r401, 1;
	fma.rn.f32 	%f728, %f726, %f722, 0fC09DE9E6;
	fma.rn.f32 	%f729, %f725, %f727, 0f00000000;
	and.b32  	%r413, %r412, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r420, %r419, 1;
	fma.rn.f32 	%f794, %f792, %f786, 0f3F800000;
	fma.rn.f32 	%f795, %f785, 0f40490FDB, %f793;
	setp.eq.b32 	%p117, %r443, 1;
	fma.rn.f32 	%f828, %f826, %f820, 0f3F800000;
	fma.rn.f32 	%f829, %f819, 0f40490FDB, %f827;
	setp.eq.b32 	%p124, %r453, 1;
	fma.rn.f32 	%f881, %f879, %f873, 0f3F800000;
	fma.rn.f32 	%f882, %f872, 0f40490FDB, %f880;
	setp.eq.b32 	%p144, %r476, 1;
	fma.rn.f32 	%f933, %f931, %f925, 0f3F800000;
	fma.rn.f32 	%f934, %f924, 0f40490FDB, %f932;
	setp.eq.b32 	%p164, %r508, 1;
	fma.rn.f32 	%f984, %f982, %f978, 0fC09DE9E6;
	fma.rn.f32 	%f985, %f981, %f983, 0f00000000;
	and.b32  	%r528, %r527, 1;
	abs.f32 	%f1019, %f1284;
	setp.gtu.f32 	%p201, %f1019, 0f7F800000;
	@%p201 bra 	$L__BB0_79;
// %bb.78:
	mov.b32 	%r538, %f180;
	and.b32  	%r539, %r538, -2147483648;
	mov.b32 	%r540, %f1284;
	or.b32  	%r541, %r539, %r540;
	mov.b32 	%f1284, %r541;
$L__BB0_79:                             // %__nv_fmodf.exit1625
	and.b32  	%r174, %r173, 4;
	or.b32  	%r183, %r181, 64;
	fma.rn.f32 	%f247, %f245, %f239, 0f3F800000;
	fma.rn.f32 	%f248, %f238, 0f40490FDB, %f246;
	setp.eq.b32 	%p22, %r287, 1;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p28, %r294, 1;
	fma.rn.f32 	%f316, %f314, %f308, 0f3F800000;
	fma.rn.f32 	%f317, %f307, 0f40490FDB, %f315;
	setp.eq.b32 	%p34, %r305, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p40, %r312, 1;
	fma.rn.f32 	%f385, %f383, %f377, 0f3F800000;
	fma.rn.f32 	%f386, %f376, 0f40490FDB, %f384;
	setp.eq.b32 	%p46, %r323, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p52, %r330, 1;
	fma.rn.f32 	%f454, %f452, %f446, 0f3F800000;
	fma.rn.f32 	%f455, %f445, 0f40490FDB, %f453;
	setp.eq.b32 	%p58, %r341, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p64, %r348, 1;
	fma.rn.f32 	%f523, %f521, %f515, 0f3F800000;
	fma.rn.f32 	%f524, %f514, 0f40490FDB, %f522;
	setp.eq.b32 	%p70, %r359, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p76, %r366, 1;
	fma.rn.f32 	%f592, %f590, %f584, 0f3F800000;
	fma.rn.f32 	%f593, %f583, 0f40490FDB, %f591;
	setp.eq.b32 	%p82, %r377, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p88, %r384, 1;
	fma.rn.f32 	%f661, %f659, %f653, 0f3F800000;
	fma.rn.f32 	%f662, %f652, 0f40490FDB, %f660;
	setp.eq.b32 	%p94, %r395, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p100, %r402, 1;
	fma.rn.f32 	%f730, %f728, %f722, 0f3F800000;
	fma.rn.f32 	%f731, %f721, 0f40490FDB, %f729;
	setp.eq.b32 	%p106, %r413, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p112, %r420, 1;
	selp.f32 	%f796, %f794, %f795, %p117;
	and.b32  	%r444, %r442, 2;
	selp.f32 	%f830, %f828, %f829, %p124;
	and.b32  	%r454, %r452, 2;
	selp.f32 	%f883, %f881, %f882, %p144;
	and.b32  	%r477, %r475, 2;
	selp.f32 	%f935, %f933, %f934, %p164;
	and.b32  	%r509, %r507, 2;
	fma.rn.f32 	%f986, %f984, %f978, 0f3F800000;
	fma.rn.f32 	%f987, %f977, 0f40490FDB, %f985;
	setp.eq.b32 	%p184, %r528, 1;
	add.f32 	%f1020, %f1284, %f1284;
	mov.b32 	%r548, %f1020;
	and.b32  	%r549, %r548, -2147483648;
	or.b32  	%r550, %r549, 1056964608;
	mov.b32 	%f1021, %r550;
	add.f32 	%f1022, %f1020, %f1021;
	cvt.rzi.f32.f32 	%f1023, %f1022;
	abs.f32 	%f1024, %f1020;
	setp.gt.f32 	%p202, %f1024, 0f4B000000;
	selp.f32 	%f1025, %f1020, %f1023, %p202;
	cvt.rzi.f32.f32 	%f1026, %f1020;
	setp.lt.f32 	%p203, %f1024, 0f3F000000;
	selp.f32 	%f1027, %f1026, %f1025, %p203;
	cvt.rzi.s32.f32 	%r551, %f1027;
	fma.rn.f32 	%f1028, %f1027, 0fBF000000, %f1284;
	mul.f32 	%f1029, %f1028, %f1028;
	fma.rn.f32 	%f1030, %f1029, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1031, %f1029, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1032, %f1030, %f1029, 0fC0A55DF6;
	fma.rn.f32 	%f1033, %f1031, %f1029, 0f4081E0CF;
	fma.rn.f32 	%f1034, %f1029, %f1028, 0f00000000;
	fma.rn.f32 	%f1035, %f1033, %f1029, 0fC09DE9E6;
	fma.rn.f32 	%f1036, %f1032, %f1034, 0f00000000;
	fma.rn.f32 	%f1037, %f1035, %f1029, 0f3F800000;
	fma.rn.f32 	%f1038, %f1028, 0f40490FDB, %f1036;
	and.b32  	%r552, %r551, 1;
	setp.eq.b32 	%p204, %r552, 1;
	div.approx.f32 	%f106, %f88, %f843;
	abs.f32 	%f1304, %f106;
	setp.lt.f32 	%p209, %f1304, 0f40000000;
	@%p209 bra 	$L__BB0_151;
// %bb.80:
	setp.gtu.f32 	%p210, %f1304, 0f4B800000;
	@%p210 bra 	$L__BB0_147;
	bra.uni 	$L__BB0_81;
$L__BB0_147:
	mov.b32 	%r212, %f1304;
	and.b32  	%r556, %r212, 8388607;
	or.b32  	%r16387, %r556, 1065353216;
	mov.b32 	%f1303, %r16387;
	add.s32 	%r557, %r212, -1073741824;
	and.b32  	%r16388, %r557, -8388608;
	setp.eq.s32 	%p216, %r16388, 0;
	@%p216 bra 	$L__BB0_150;
// %bb.148:                             // %__nv_fmaf_rn.exit4.i.i.i1774.preheader
	mov.f32 	%f1062, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1061,%f1062;
	// end inline asm
$L__BB0_149:                            // %__nv_fmaf_rn.exit4.i.i.i1774
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r558, %r16388, 192937984;
	add.s32 	%r559, %r16387, %r558;
	mov.b32 	%f1063, %r559;
	mul.f32 	%f1064, %f1061, %f1063;
	sub.f32 	%f1065, %f1063, %f1064;
	fma.rn.f32 	%f1066, %f1065, %f1061, %f1064;
	sub.f32 	%f1067, %f1063, %f1066;
	fma.rz.f32 	%f1068, %f1067, %f1061, %f1066;
	cvt.rzi.f32.f32 	%f1069, %f1068;
	sub.f32 	%f1303, %f1063, %f1069;
	sub.s32 	%r16388, %r16388, %r558;
	mov.b32 	%r16387, %f1303;
	setp.ne.s32 	%p217, %r16388, 0;
	setp.ne.s32 	%p218, %r16387, 0;
	and.pred  	%p219, %p217, %p218;
	@%p219 bra 	$L__BB0_149;
$L__BB0_150:                            // %__internal_fmodf_slowpath_mod.exit.i.i1776
	setp.gt.u32 	%p220, %r212, 2139095039;
	selp.f32 	%f1070, 0f7FFFFFFF, 0f4B800000, %p220;
	mul.f32 	%f1071, %f1303, 0f34000000;
	mul.f32 	%f1304, %f1070, %f1071;
	bra.uni 	$L__BB0_151;
$L__BB0_81:                             // %__nv_fast_fdividef.exit.i.i.i1753
	div.approx.f32 	%f1054, %f1304, %f221;
	cvt.rzi.f32.f32 	%f1302, %f1054;
	fma.rn.f32 	%f183, %f1302, 0fC0000000, %f1304;
	mov.b32 	%r211, %f183;
	setp.lt.u32 	%p211, %r211, 1073741824;
	@%p211 bra 	$L__BB0_146;
// %bb.82:
	setp.lt.u32 	%p212, %r211, -2147483647;
	@%p212 bra 	$L__BB0_144;
// %bb.83:
	add.f32 	%f1059, %f1302, 0fBF800000;
	setp.lt.f32 	%p215, %f183, 0fC0000000;
	add.f32 	%f1060, %f1059, 0fBF800000;
	selp.f32 	%f1302, %f1060, %f1059, %p215;
	bra.uni 	$L__BB0_146;
$L__BB0_144:
	add.f32 	%f1302, %f1302, 0f3F800000;
	setp.ltu.f32 	%p213, %f183, 0f40800000;
	@%p213 bra 	$L__BB0_146;
// %bb.145:                             // %__nv_fmaf_rn.exit.i.i.i1757
	add.f32 	%f1055, %f1302, 0f3F800000;
	fma.rn.f32 	%f1057, %f221, 0fC0400000, %f183;
	setp.ge.f32 	%p214, %f1057, 0f00000000;
	add.f32 	%f1058, %f1055, 0f3F800000;
	selp.f32 	%f1302, %f1058, %f1055, %p214;
$L__BB0_146:                            // %__internal_fmodf_fastpath_quot.exit.i.i1760
	fma.rn.f32 	%f1304, %f1302, 0fC0000000, %f1304;
$L__BB0_151:                            // %__internal_fmodf_kernel.exit.i1779
	and.b32  	%r176, %r173, 32;
	shl.b32 	%r177, %r4, 5;
	or.b32  	%r264, %r181, %r174;
	or.b32  	%r269, %r183, %r174;
	selp.f32 	%f249, %f247, %f248, %p22;
	and.b32  	%r288, %r286, 2;
	mov.f32 	%f250, 0f00000000;
	selp.f32 	%f283, %f281, %f282, %p28;
	and.b32  	%r295, %r293, 2;
	selp.f32 	%f318, %f316, %f317, %p34;
	and.b32  	%r306, %r304, 2;
	selp.f32 	%f352, %f350, %f351, %p40;
	and.b32  	%r313, %r311, 2;
	selp.f32 	%f387, %f385, %f386, %p46;
	and.b32  	%r324, %r322, 2;
	selp.f32 	%f421, %f419, %f420, %p52;
	and.b32  	%r331, %r329, 2;
	selp.f32 	%f456, %f454, %f455, %p58;
	and.b32  	%r342, %r340, 2;
	selp.f32 	%f490, %f488, %f489, %p64;
	and.b32  	%r349, %r347, 2;
	selp.f32 	%f525, %f523, %f524, %p70;
	and.b32  	%r360, %r358, 2;
	selp.f32 	%f559, %f557, %f558, %p76;
	and.b32  	%r367, %r365, 2;
	selp.f32 	%f594, %f592, %f593, %p82;
	and.b32  	%r378, %r376, 2;
	selp.f32 	%f628, %f626, %f627, %p88;
	and.b32  	%r385, %r383, 2;
	selp.f32 	%f663, %f661, %f662, %p94;
	and.b32  	%r396, %r394, 2;
	selp.f32 	%f697, %f695, %f696, %p100;
	and.b32  	%r403, %r401, 2;
	selp.f32 	%f732, %f730, %f731, %p106;
	and.b32  	%r414, %r412, 2;
	selp.f32 	%f766, %f764, %f765, %p112;
	and.b32  	%r421, %r419, 2;
	setp.eq.s32 	%p118, %r444, 0;
	neg.f32 	%f798, %f796;
	add.s32 	%r445, %r442, 1;
	cvt.rzi.f32.f32 	%f803, %f776;
	setp.eq.s32 	%p125, %r454, 0;
	neg.f32 	%f832, %f830;
	add.s32 	%r455, %r452, 1;
	cvt.rzi.f32.f32 	%f836, %f810;
	setp.eq.s32 	%p145, %r477, 0;
	neg.f32 	%f885, %f883;
	add.s32 	%r478, %r475, 1;
	cvt.rzi.f32.f32 	%f890, %f1296;
	setp.eq.s32 	%p165, %r509, 0;
	neg.f32 	%f937, %f935;
	add.s32 	%r510, %r507, 1;
	cvt.rzi.f32.f32 	%f942, %f1280;
	selp.f32 	%f988, %f986, %f987, %p184;
	and.b32  	%r529, %r527, 2;
	selp.f32 	%f1039, %f1037, %f1038, %p204;
	and.b32  	%r553, %r551, 2;
	abs.f32 	%f1072, %f1304;
	setp.gtu.f32 	%p221, %f1072, 0f7F800000;
	@%p221 bra 	$L__BB0_153;
// %bb.152:
	mov.b32 	%r560, %f106;
	and.b32  	%r561, %r560, -2147483648;
	mov.b32 	%r562, %f1304;
	or.b32  	%r563, %r561, %r562;
	mov.b32 	%f1304, %r563;
$L__BB0_153:                            // %__nv_fmodf.exit1780
	and.b32  	%r178, %r177, 8064;
	or.b32  	%r265, %r264, %r176;
	or.b32  	%r270, %r269, %r176;
	setp.eq.s32 	%p23, %r288, 0;
	sub.f32 	%f251, %f250, %f249;
	setp.eq.s32 	%p29, %r295, 0;
	sub.f32 	%f285, %f250, %f283;
	setp.eq.s32 	%p35, %r306, 0;
	sub.f32 	%f320, %f250, %f318;
	setp.eq.s32 	%p41, %r313, 0;
	sub.f32 	%f354, %f250, %f352;
	setp.eq.s32 	%p47, %r324, 0;
	sub.f32 	%f389, %f250, %f387;
	setp.eq.s32 	%p53, %r331, 0;
	sub.f32 	%f423, %f250, %f421;
	setp.eq.s32 	%p59, %r342, 0;
	sub.f32 	%f458, %f250, %f456;
	setp.eq.s32 	%p65, %r349, 0;
	sub.f32 	%f492, %f250, %f490;
	setp.eq.s32 	%p71, %r360, 0;
	sub.f32 	%f527, %f250, %f525;
	setp.eq.s32 	%p77, %r367, 0;
	sub.f32 	%f561, %f250, %f559;
	setp.eq.s32 	%p83, %r378, 0;
	sub.f32 	%f596, %f250, %f594;
	setp.eq.s32 	%p89, %r385, 0;
	sub.f32 	%f630, %f250, %f628;
	setp.eq.s32 	%p95, %r396, 0;
	sub.f32 	%f665, %f250, %f663;
	setp.eq.s32 	%p101, %r403, 0;
	sub.f32 	%f699, %f250, %f697;
	setp.eq.s32 	%p107, %r414, 0;
	sub.f32 	%f734, %f250, %f732;
	setp.eq.s32 	%p113, %r421, 0;
	sub.f32 	%f768, %f250, %f766;
	selp.f32 	%f797, %f795, %f794, %p117;
	selp.f32 	%f799, %f796, %f798, %p118;
	and.b32  	%r446, %r445, 2;
	setp.eq.f32 	%p120, %f803, %f776;
	mul.f32 	%f804, %f776, 0f00000000;
	selp.f32 	%f831, %f829, %f828, %p124;
	selp.f32 	%f833, %f830, %f832, %p125;
	and.b32  	%r456, %r455, 2;
	setp.eq.f32 	%p127, %f836, %f810;
	mul.f32 	%f837, %f810, 0f00000000;
	selp.f32 	%f884, %f882, %f881, %p144;
	selp.f32 	%f886, %f883, %f885, %p145;
	and.b32  	%r479, %r478, 2;
	setp.eq.f32 	%p147, %f890, %f1296;
	mul.f32 	%f891, %f1296, 0f00000000;
	selp.f32 	%f936, %f934, %f933, %p164;
	selp.f32 	%f938, %f935, %f937, %p165;
	and.b32  	%r511, %r510, 2;
	setp.eq.f32 	%p167, %f942, %f1280;
	mul.f32 	%f943, %f1280, 0f00000000;
	setp.eq.s32 	%p185, %r529, 0;
	neg.f32 	%f990, %f988;
	add.s32 	%r530, %r527, 1;
	cvt.rzi.f32.f32 	%f995, %f1300;
	setp.eq.s32 	%p205, %r553, 0;
	neg.f32 	%f1041, %f1039;
	add.s32 	%r554, %r551, 1;
	cvt.rzi.f32.f32 	%f1046, %f1284;
	add.f32 	%f1073, %f1304, %f1304;
	mov.b32 	%r564, %f1073;
	and.b32  	%r565, %r564, -2147483648;
	or.b32  	%r566, %r565, 1056964608;
	mov.b32 	%f1074, %r566;
	add.f32 	%f1075, %f1073, %f1074;
	cvt.rzi.f32.f32 	%f1076, %f1075;
	abs.f32 	%f1077, %f1073;
	setp.gt.f32 	%p222, %f1077, 0f4B000000;
	selp.f32 	%f1078, %f1073, %f1076, %p222;
	cvt.rzi.f32.f32 	%f1079, %f1073;
	setp.lt.f32 	%p223, %f1077, 0f3F000000;
	selp.f32 	%f1080, %f1079, %f1078, %p223;
	cvt.rzi.s32.f32 	%r567, %f1080;
	fma.rn.f32 	%f1081, %f1080, 0fBF000000, %f1304;
	mul.f32 	%f1082, %f1081, %f1081;
	fma.rn.f32 	%f1083, %f1082, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1084, %f1082, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1085, %f1083, %f1082, 0fC0A55DF6;
	fma.rn.f32 	%f1086, %f1084, %f1082, 0f4081E0CF;
	fma.rn.f32 	%f1087, %f1082, %f1081, 0f00000000;
	fma.rn.f32 	%f1088, %f1086, %f1082, 0fC09DE9E6;
	fma.rn.f32 	%f1089, %f1085, %f1087, 0f00000000;
	fma.rn.f32 	%f1090, %f1088, %f1082, 0f3F800000;
	fma.rn.f32 	%f1091, %f1081, 0f40490FDB, %f1089;
	and.b32  	%r568, %r567, 1;
	setp.eq.b32 	%p224, %r568, 1;
	selp.f32 	%f1092, %f1090, %f1091, %p224;
	selp.f32 	%f1093, %f1091, %f1090, %p224;
	and.b32  	%r569, %r567, 2;
	setp.eq.s32 	%p225, %r569, 0;
	neg.f32 	%f1094, %f1092;
	selp.f32 	%f1095, %f1092, %f1094, %p225;
	add.s32 	%r570, %r567, 1;
	and.b32  	%r571, %r570, 2;
	cvt.rzi.f32.f32 	%f1099, %f1304;
	setp.eq.f32 	%p227, %f1099, %f1304;
	mul.f32 	%f1100, %f1304, 0f00000000;
	div.approx.f32 	%f199, %f179, %f843;
	abs.f32 	%f1288, %f199;
	setp.lt.f32 	%p229, %f1288, 0f40000000;
	@%p229 bra 	$L__BB0_95;
// %bb.84:
	setp.gtu.f32 	%p230, %f1288, 0f4B800000;
	@%p230 bra 	$L__BB0_91;
	bra.uni 	$L__BB0_85;
$L__BB0_91:
	mov.b32 	%r49, %f1288;
	and.b32  	%r572, %r49, 8388607;
	or.b32  	%r16329, %r572, 1065353216;
	mov.b32 	%f1287, %r16329;
	add.s32 	%r573, %r49, -1073741824;
	and.b32  	%r16330, %r573, -8388608;
	setp.eq.s32 	%p236, %r16330, 0;
	@%p236 bra 	$L__BB0_94;
// %bb.92:                              // %__nv_fmaf_rn.exit4.i.i.i1650.preheader
	mov.f32 	%f1113, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1112,%f1113;
	// end inline asm
$L__BB0_93:                             // %__nv_fmaf_rn.exit4.i.i.i1650
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r574, %r16330, 192937984;
	add.s32 	%r575, %r16329, %r574;
	mov.b32 	%f1114, %r575;
	mul.f32 	%f1115, %f1112, %f1114;
	sub.f32 	%f1116, %f1114, %f1115;
	fma.rn.f32 	%f1117, %f1116, %f1112, %f1115;
	sub.f32 	%f1118, %f1114, %f1117;
	fma.rz.f32 	%f1119, %f1118, %f1112, %f1117;
	cvt.rzi.f32.f32 	%f1120, %f1119;
	sub.f32 	%f1287, %f1114, %f1120;
	sub.s32 	%r16330, %r16330, %r574;
	mov.b32 	%r16329, %f1287;
	setp.ne.s32 	%p237, %r16330, 0;
	setp.ne.s32 	%p238, %r16329, 0;
	and.pred  	%p239, %p237, %p238;
	@%p239 bra 	$L__BB0_93;
$L__BB0_94:                             // %__internal_fmodf_slowpath_mod.exit.i.i1652
	setp.gt.u32 	%p240, %r49, 2139095039;
	selp.f32 	%f1121, 0f7FFFFFFF, 0f4B800000, %p240;
	mul.f32 	%f1122, %f1287, 0f34000000;
	mul.f32 	%f1288, %f1121, %f1122;
	bra.uni 	$L__BB0_95;
$L__BB0_85:                             // %__nv_fast_fdividef.exit.i.i.i1629
	div.approx.f32 	%f1105, %f1288, %f221;
	cvt.rzi.f32.f32 	%f1286, %f1105;
	fma.rn.f32 	%f109, %f1286, 0fC0000000, %f1288;
	mov.b32 	%r48, %f109;
	setp.lt.u32 	%p231, %r48, 1073741824;
	@%p231 bra 	$L__BB0_90;
// %bb.86:
	setp.lt.u32 	%p232, %r48, -2147483647;
	@%p232 bra 	$L__BB0_88;
// %bb.87:
	add.f32 	%f1110, %f1286, 0fBF800000;
	setp.lt.f32 	%p235, %f109, 0fC0000000;
	add.f32 	%f1111, %f1110, 0fBF800000;
	selp.f32 	%f1286, %f1111, %f1110, %p235;
	bra.uni 	$L__BB0_90;
$L__BB0_88:
	add.f32 	%f1286, %f1286, 0f3F800000;
	setp.ltu.f32 	%p233, %f109, 0f40800000;
	@%p233 bra 	$L__BB0_90;
// %bb.89:                              // %__nv_fmaf_rn.exit.i.i.i1633
	add.f32 	%f1106, %f1286, 0f3F800000;
	fma.rn.f32 	%f1108, %f221, 0fC0400000, %f109;
	setp.ge.f32 	%p234, %f1108, 0f00000000;
	add.f32 	%f1109, %f1106, 0f3F800000;
	selp.f32 	%f1286, %f1109, %f1106, %p234;
$L__BB0_90:                             // %__internal_fmodf_fastpath_quot.exit.i.i1636
	fma.rn.f32 	%f1288, %f1286, 0fC0000000, %f1288;
$L__BB0_95:                             // %__internal_fmodf_kernel.exit.i1655
	and.b32  	%r180, %r179, 8;
	or.b32  	%r266, %r265, %r178;
	or.b32  	%r271, %r270, %r178;
	selp.f32 	%f252, %f249, %f251, %p23;
	selp.f32 	%f286, %f283, %f285, %p29;
	selp.f32 	%f321, %f318, %f320, %p35;
	selp.f32 	%f355, %f352, %f354, %p41;
	selp.f32 	%f390, %f387, %f389, %p47;
	selp.f32 	%f424, %f421, %f423, %p53;
	selp.f32 	%f459, %f456, %f458, %p59;
	selp.f32 	%f493, %f490, %f492, %p65;
	selp.f32 	%f528, %f525, %f527, %p71;
	selp.f32 	%f562, %f559, %f561, %p77;
	selp.f32 	%f597, %f594, %f596, %p83;
	selp.f32 	%f631, %f628, %f630, %p89;
	selp.f32 	%f666, %f663, %f665, %p95;
	selp.f32 	%f700, %f697, %f699, %p101;
	selp.f32 	%f735, %f732, %f734, %p107;
	selp.f32 	%f769, %f766, %f768, %p113;
	setp.eq.s32 	%p119, %r446, 0;
	sub.f32 	%f801, %f250, %f797;
	selp.f32 	%f805, %f804, %f799, %p120;
	abs.f32 	%f806, %f776;
	setp.eq.s32 	%p126, %r456, 0;
	sub.f32 	%f834, %f250, %f831;
	selp.f32 	%f838, %f837, %f833, %p127;
	abs.f32 	%f839, %f810;
	setp.eq.s32 	%p146, %r479, 0;
	sub.f32 	%f888, %f250, %f884;
	selp.f32 	%f158, %f891, %f886, %p147;
	abs.f32 	%f892, %f1296;
	setp.eq.s32 	%p166, %r511, 0;
	sub.f32 	%f940, %f250, %f936;
	selp.f32 	%f944, %f943, %f938, %p167;
	abs.f32 	%f945, %f1280;
	selp.f32 	%f989, %f987, %f986, %p184;
	selp.f32 	%f991, %f988, %f990, %p185;
	and.b32  	%r531, %r530, 2;
	setp.eq.f32 	%p187, %f995, %f1300;
	mul.f32 	%f996, %f1300, 0f00000000;
	selp.f32 	%f1040, %f1038, %f1037, %p204;
	selp.f32 	%f1042, %f1039, %f1041, %p205;
	and.b32  	%r555, %r554, 2;
	setp.eq.f32 	%p207, %f1046, %f1284;
	mul.f32 	%f1047, %f1284, 0f00000000;
	setp.eq.s32 	%p226, %r571, 0;
	sub.f32 	%f1097, %f250, %f1093;
	selp.f32 	%f197, %f1100, %f1095, %p227;
	abs.f32 	%f1101, %f1304;
	and.b32  	%r175, %r3, 16;
	abs.f32 	%f1123, %f1288;
	setp.gtu.f32 	%p241, %f1123, 0f7F800000;
	@%p241 bra 	$L__BB0_97;
// %bb.96:
	mov.b32 	%r576, %f199;
	and.b32  	%r577, %r576, -2147483648;
	mov.b32 	%r578, %f1288;
	or.b32  	%r579, %r577, %r578;
	mov.b32 	%f1288, %r579;
$L__BB0_97:                             // %__nv_fmodf.exit1656
	or.b32  	%r267, %r266, %r180;
	or.b32  	%r272, %r271, %r180;
	mul.f32 	%f141, %f252, %f252;
	mul.f32 	%f4, %f286, %f286;
	mul.f32 	%f8, %f321, %f321;
	mul.f32 	%f13, %f355, %f355;
	mul.f32 	%f17, %f390, %f390;
	mul.f32 	%f22, %f424, %f424;
	mul.f32 	%f26, %f459, %f459;
	mul.f32 	%f31, %f493, %f493;
	mul.f32 	%f35, %f528, %f528;
	mul.f32 	%f40, %f562, %f562;
	mul.f32 	%f44, %f597, %f597;
	mul.f32 	%f49, %f631, %f631;
	mul.f32 	%f53, %f666, %f666;
	mul.f32 	%f58, %f700, %f700;
	mul.f32 	%f62, %f735, %f735;
	mul.f32 	%f67, %f769, %f769;
	selp.f32 	%f802, %f797, %f801, %p119;
	setp.gt.f32 	%p121, %f806, 0f4B800000;
	add.f32 	%f807, %f805, 0f3F800000;
	selp.f32 	%f835, %f831, %f834, %p126;
	setp.gt.f32 	%p128, %f839, 0f4B800000;
	add.f32 	%f840, %f838, 0f3F800000;
	selp.f32 	%f889, %f884, %f888, %p146;
	setp.gt.f32 	%p148, %f892, 0f4B800000;
	add.f32 	%f893, %f158, 0f3F800000;
	selp.f32 	%f941, %f936, %f940, %p166;
	setp.gt.f32 	%p168, %f945, 0f4B800000;
	add.f32 	%f946, %f944, 0f3F800000;
	setp.eq.s32 	%p186, %r531, 0;
	sub.f32 	%f993, %f250, %f989;
	selp.f32 	%f177, %f996, %f991, %p187;
	abs.f32 	%f997, %f1300;
	setp.eq.s32 	%p206, %r555, 0;
	sub.f32 	%f1044, %f250, %f1040;
	selp.f32 	%f1048, %f1047, %f1042, %p207;
	abs.f32 	%f1049, %f1284;
	selp.f32 	%f1098, %f1093, %f1097, %p226;
	setp.gt.f32 	%p228, %f1101, 0f4B800000;
	add.f32 	%f1102, %f197, 0f3F800000;
	add.f32 	%f1124, %f1288, %f1288;
	mov.b32 	%r592, %f1124;
	and.b32  	%r593, %r592, -2147483648;
	or.b32  	%r594, %r593, 1056964608;
	mov.b32 	%f1125, %r594;
	add.f32 	%f1126, %f1124, %f1125;
	cvt.rzi.f32.f32 	%f1127, %f1126;
	abs.f32 	%f1128, %f1124;
	setp.gt.f32 	%p242, %f1128, 0f4B000000;
	selp.f32 	%f1129, %f1124, %f1127, %p242;
	cvt.rzi.f32.f32 	%f1130, %f1124;
	setp.lt.f32 	%p243, %f1128, 0f3F000000;
	selp.f32 	%f1131, %f1130, %f1129, %p243;
	cvt.rzi.s32.f32 	%r595, %f1131;
	fma.rn.f32 	%f1132, %f1131, 0fBF000000, %f1288;
	mul.f32 	%f1133, %f1132, %f1132;
	fma.rn.f32 	%f1134, %f1133, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1135, %f1133, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1136, %f1134, %f1133, 0fC0A55DF6;
	fma.rn.f32 	%f1137, %f1135, %f1133, 0f4081E0CF;
	fma.rn.f32 	%f1138, %f1133, %f1132, 0f00000000;
	fma.rn.f32 	%f1139, %f1137, %f1133, 0fC09DE9E6;
	fma.rn.f32 	%f1140, %f1136, %f1138, 0f00000000;
	fma.rn.f32 	%f1141, %f1139, %f1133, 0f3F800000;
	fma.rn.f32 	%f1142, %f1132, 0f40490FDB, %f1140;
	and.b32  	%r596, %r595, 1;
	setp.eq.b32 	%p244, %r596, 1;
	selp.f32 	%f1143, %f1141, %f1142, %p244;
	selp.f32 	%f1144, %f1142, %f1141, %p244;
	and.b32  	%r597, %r595, 2;
	setp.eq.s32 	%p245, %r597, 0;
	neg.f32 	%f1145, %f1143;
	selp.f32 	%f1146, %f1143, %f1145, %p245;
	add.s32 	%r598, %r595, 1;
	and.b32  	%r599, %r598, 2;
	setp.eq.s32 	%p246, %r599, 0;
	sub.f32 	%f1148, %f250, %f1144;
	selp.f32 	%f1149, %f1144, %f1148, %p246;
	cvt.rzi.f32.f32 	%f1150, %f1288;
	setp.eq.f32 	%p247, %f1150, %f1288;
	mul.f32 	%f1151, %f1288, 0f00000000;
	selp.f32 	%f1152, %f1151, %f1146, %p247;
	abs.f32 	%f1153, %f1288;
	setp.gt.f32 	%p248, %f1153, 0f4B800000;
	add.f32 	%f1154, %f1152, 0f3F800000;
	mul.lo.s32 	%r600, %r189, 2147483640;
	cvt.u16.u32 	%rs1, %r3;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	sub.s32 	%r601, %r600, %r175;
	mad.lo.s32 	%r602, %r192, 2147483616, %r601;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r603, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r604, %rs21;
	sub.s32 	%r605, %r602, %r604;
	shl.b32 	%r606, %r605, 1;
	cvt.rn.f32.s32 	%f1156, %r606;
	div.approx.f32 	%f123, %f1156, %f253;
	abs.f32 	%f1308, %f123;
	setp.lt.f32 	%p249, %f1308, 0f40000000;
	@%p249 bra 	$L__BB0_161;
// %bb.98:
	setp.gtu.f32 	%p250, %f1308, 0f4B800000;
	@%p250 bra 	$L__BB0_157;
	bra.uni 	$L__BB0_99;
$L__BB0_157:
	mov.b32 	%r220, %f1308;
	and.b32  	%r607, %r220, 8388607;
	or.b32  	%r16389, %r607, 1065353216;
	mov.b32 	%f1307, %r16389;
	add.s32 	%r608, %r220, -1073741824;
	and.b32  	%r16390, %r608, -8388608;
	setp.eq.s32 	%p256, %r16390, 0;
	@%p256 bra 	$L__BB0_160;
// %bb.158:                             // %__nv_fmaf_rn.exit4.i.i.i1805.preheader
	mov.f32 	%f1167, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1166,%f1167;
	// end inline asm
$L__BB0_159:                            // %__nv_fmaf_rn.exit4.i.i.i1805
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r609, %r16390, 192937984;
	add.s32 	%r610, %r16389, %r609;
	mov.b32 	%f1168, %r610;
	mul.f32 	%f1169, %f1166, %f1168;
	sub.f32 	%f1170, %f1168, %f1169;
	fma.rn.f32 	%f1171, %f1170, %f1166, %f1169;
	sub.f32 	%f1172, %f1168, %f1171;
	fma.rz.f32 	%f1173, %f1172, %f1166, %f1171;
	cvt.rzi.f32.f32 	%f1174, %f1173;
	sub.f32 	%f1307, %f1168, %f1174;
	sub.s32 	%r16390, %r16390, %r609;
	mov.b32 	%r16389, %f1307;
	setp.ne.s32 	%p257, %r16390, 0;
	setp.ne.s32 	%p258, %r16389, 0;
	and.pred  	%p259, %p257, %p258;
	@%p259 bra 	$L__BB0_159;
$L__BB0_160:                            // %__internal_fmodf_slowpath_mod.exit.i.i1807
	setp.gt.u32 	%p260, %r220, 2139095039;
	selp.f32 	%f1175, 0f7FFFFFFF, 0f4B800000, %p260;
	mul.f32 	%f1176, %f1307, 0f34000000;
	mul.f32 	%f1308, %f1175, %f1176;
	bra.uni 	$L__BB0_161;
$L__BB0_99:                             // %__nv_fast_fdividef.exit.i.i.i1784
	div.approx.f32 	%f1159, %f1308, %f221;
	cvt.rzi.f32.f32 	%f1306, %f1159;
	fma.rn.f32 	%f202, %f1306, 0fC0000000, %f1308;
	mov.b32 	%r219, %f202;
	setp.lt.u32 	%p251, %r219, 1073741824;
	@%p251 bra 	$L__BB0_156;
// %bb.100:
	setp.lt.u32 	%p252, %r219, -2147483647;
	@%p252 bra 	$L__BB0_154;
// %bb.101:
	add.f32 	%f1164, %f1306, 0fBF800000;
	setp.lt.f32 	%p255, %f202, 0fC0000000;
	add.f32 	%f1165, %f1164, 0fBF800000;
	selp.f32 	%f1306, %f1165, %f1164, %p255;
	bra.uni 	$L__BB0_156;
$L__BB0_154:
	add.f32 	%f1306, %f1306, 0f3F800000;
	setp.ltu.f32 	%p253, %f202, 0f40800000;
	@%p253 bra 	$L__BB0_156;
// %bb.155:                             // %__nv_fmaf_rn.exit.i.i.i1788
	add.f32 	%f1160, %f1306, 0f3F800000;
	fma.rn.f32 	%f1162, %f221, 0fC0400000, %f202;
	setp.ge.f32 	%p254, %f1162, 0f00000000;
	add.f32 	%f1163, %f1160, 0f3F800000;
	selp.f32 	%f1306, %f1163, %f1160, %p254;
$L__BB0_156:                            // %__internal_fmodf_fastpath_quot.exit.i.i1791
	fma.rn.f32 	%f1308, %f1306, 0fC0000000, %f1308;
$L__BB0_161:                            // %__internal_fmodf_kernel.exit.i1810
	shr.u32 	%r268, %r267, 1;
	bfe.u32 	%r273, %r272, 1, 12;
	mul.f32 	%f256, %f141, 0f3B8B2FF9;
	mul.f32 	%f290, %f4, 0f3B8B2FF9;
	mul.f32 	%f325, %f8, 0f3B8B2FF9;
	mul.f32 	%f359, %f13, 0f3B8B2FF9;
	mul.f32 	%f394, %f17, 0f3B8B2FF9;
	mul.f32 	%f428, %f22, 0f3B8B2FF9;
	mul.f32 	%f463, %f26, 0f3B8B2FF9;
	mul.f32 	%f497, %f31, 0f3B8B2FF9;
	mul.f32 	%f532, %f35, 0f3B8B2FF9;
	mul.f32 	%f566, %f40, 0f3B8B2FF9;
	mul.f32 	%f601, %f44, 0f3B8B2FF9;
	mul.f32 	%f635, %f49, 0f3B8B2FF9;
	mul.f32 	%f670, %f53, 0f3B8B2FF9;
	mul.f32 	%f704, %f58, 0f3B8B2FF9;
	mul.f32 	%f739, %f62, 0f3B8B2FF9;
	mul.f32 	%f772, %f67, 0f3B8B2FF9;
	selp.f32 	%f808, %f807, %f802, %p121;
	selp.f32 	%f841, %f840, %f835, %p128;
	selp.f32 	%f159, %f893, %f889, %p148;
	selp.f32 	%f947, %f946, %f941, %p168;
	selp.f32 	%f994, %f989, %f993, %p186;
	setp.gt.f32 	%p188, %f997, 0f4B800000;
	add.f32 	%f998, %f177, 0f3F800000;
	selp.f32 	%f1045, %f1040, %f1044, %p206;
	setp.gt.f32 	%p208, %f1049, 0f4B800000;
	add.f32 	%f1050, %f1048, 0f3F800000;
	selp.f32 	%f198, %f1102, %f1098, %p228;
	selp.f32 	%f1155, %f1154, %f1149, %p248;
	sub.s32 	%r60, %r602, %r603;
	abs.f32 	%f1177, %f1308;
	setp.gtu.f32 	%p261, %f1177, 0f7F800000;
	@%p261 bra 	$L__BB0_163;
// %bb.162:
	mov.b32 	%r611, %f123;
	and.b32  	%r612, %r611, -2147483648;
	mov.b32 	%r613, %f1308;
	or.b32  	%r614, %r612, %r613;
	mov.b32 	%f1308, %r614;
$L__BB0_163:                            // %__nv_fmodf.exit1811
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd30, %r268, 4;
	mul.wide.u32 	%rd32, %r273, 4;
	mul.f32 	%f3, %f256, %f1262;
	mul.f32 	%f291, %f290, %f1263;
	mul.f32 	%f12, %f325, %f1264;
	mul.f32 	%f360, %f359, %f1265;
	mul.f32 	%f21, %f394, %f1266;
	mul.f32 	%f429, %f428, %f1267;
	mul.f32 	%f30, %f463, %f1268;
	mul.f32 	%f498, %f497, %f1269;
	mul.f32 	%f39, %f532, %f1270;
	mul.f32 	%f567, %f566, %f1271;
	mul.f32 	%f48, %f601, %f1272;
	mul.f32 	%f636, %f635, %f1273;
	mul.f32 	%f57, %f670, %f1274;
	mul.f32 	%f705, %f704, %f1275;
	mul.f32 	%f66, %f739, %f1276;
	mul.f32 	%f773, %f772, %f1277;
	mov.b32 	%r429, %f808;
	mov.b32 	%r430, %f841;
	mov.b32 	%r435, %f805;
	mov.b32 	%r436, %f838;
	mov.b32 	%r503, %f947;
	mov.b32 	%r502, %f159;
	mov.b32 	%r500, %f944;
	mov.b32 	%r499, %f158;
	selp.f32 	%f178, %f998, %f994, %p188;
	selp.f32 	%f1051, %f1050, %f1045, %p208;
	mov.b32 	%r591, %f1155;
	mov.b32 	%r590, %f198;
	mov.b32 	%r588, %f1152;
	mov.b32 	%r587, %f197;
	add.f32 	%f1178, %f1308, %f1308;
	mov.b32 	%r615, %f1178;
	and.b32  	%r616, %r615, -2147483648;
	or.b32  	%r617, %r616, 1056964608;
	mov.b32 	%f1179, %r617;
	add.f32 	%f1180, %f1178, %f1179;
	cvt.rzi.f32.f32 	%f1181, %f1180;
	abs.f32 	%f1182, %f1178;
	setp.gt.f32 	%p262, %f1182, 0f4B000000;
	selp.f32 	%f1183, %f1178, %f1181, %p262;
	cvt.rzi.f32.f32 	%f1184, %f1178;
	setp.lt.f32 	%p263, %f1182, 0f3F000000;
	selp.f32 	%f1185, %f1184, %f1183, %p263;
	cvt.rzi.s32.f32 	%r618, %f1185;
	fma.rn.f32 	%f1186, %f1185, 0fBF000000, %f1308;
	mul.f32 	%f1187, %f1186, %f1186;
	fma.rn.f32 	%f1188, %f1187, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1189, %f1187, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1190, %f1188, %f1187, 0fC0A55DF6;
	fma.rn.f32 	%f1191, %f1189, %f1187, 0f4081E0CF;
	fma.rn.f32 	%f1192, %f1187, %f1186, 0f00000000;
	fma.rn.f32 	%f1193, %f1191, %f1187, 0fC09DE9E6;
	fma.rn.f32 	%f1194, %f1190, %f1192, 0f00000000;
	fma.rn.f32 	%f1195, %f1193, %f1187, 0f3F800000;
	fma.rn.f32 	%f1196, %f1186, 0f40490FDB, %f1194;
	and.b32  	%r619, %r618, 1;
	setp.eq.b32 	%p264, %r619, 1;
	selp.f32 	%f1197, %f1195, %f1196, %p264;
	selp.f32 	%f1198, %f1196, %f1195, %p264;
	and.b32  	%r620, %r618, 2;
	setp.eq.s32 	%p265, %r620, 0;
	neg.f32 	%f1199, %f1197;
	selp.f32 	%f1200, %f1197, %f1199, %p265;
	add.s32 	%r621, %r618, 1;
	and.b32  	%r622, %r621, 2;
	setp.eq.s32 	%p266, %r622, 0;
	sub.f32 	%f1202, %f250, %f1198;
	selp.f32 	%f1203, %f1198, %f1202, %p266;
	cvt.rzi.f32.f32 	%f1204, %f1308;
	setp.eq.f32 	%p267, %f1204, %f1308;
	mul.f32 	%f1205, %f1308, 0f00000000;
	selp.f32 	%f216, %f1205, %f1200, %p267;
	abs.f32 	%f1206, %f1308;
	setp.gt.f32 	%p268, %f1206, 0f4B800000;
	add.f32 	%f1207, %f216, 0f3F800000;
	shl.b32 	%r623, %r60, 1;
	cvt.rn.f32.s32 	%f1208, %r623;
	div.approx.f32 	%f218, %f1208, %f253;
	abs.f32 	%f1292, %f218;
	setp.lt.f32 	%p269, %f1292, 0f40000000;
	@%p269 bra 	$L__BB0_113;
// %bb.102:
	setp.gtu.f32 	%p270, %f1292, 0f4B800000;
	@%p270 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_103;
$L__BB0_109:
	mov.b32 	%r62, %f1292;
	and.b32  	%r624, %r62, 8388607;
	or.b32  	%r16331, %r624, 1065353216;
	mov.b32 	%f1291, %r16331;
	add.s32 	%r625, %r62, -1073741824;
	and.b32  	%r16332, %r625, -8388608;
	setp.eq.s32 	%p276, %r16332, 0;
	@%p276 bra 	$L__BB0_112;
// %bb.110:                             // %__nv_fmaf_rn.exit4.i.i.i1681.preheader
	mov.f32 	%f1219, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1218,%f1219;
	// end inline asm
$L__BB0_111:                            // %__nv_fmaf_rn.exit4.i.i.i1681
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r626, %r16332, 192937984;
	add.s32 	%r627, %r16331, %r626;
	mov.b32 	%f1220, %r627;
	mul.f32 	%f1221, %f1218, %f1220;
	sub.f32 	%f1222, %f1220, %f1221;
	fma.rn.f32 	%f1223, %f1222, %f1218, %f1221;
	sub.f32 	%f1224, %f1220, %f1223;
	fma.rz.f32 	%f1225, %f1224, %f1218, %f1223;
	cvt.rzi.f32.f32 	%f1226, %f1225;
	sub.f32 	%f1291, %f1220, %f1226;
	sub.s32 	%r16332, %r16332, %r626;
	mov.b32 	%r16331, %f1291;
	setp.ne.s32 	%p277, %r16332, 0;
	setp.ne.s32 	%p278, %r16331, 0;
	and.pred  	%p279, %p277, %p278;
	@%p279 bra 	$L__BB0_111;
$L__BB0_112:                            // %__internal_fmodf_slowpath_mod.exit.i.i1683
	setp.gt.u32 	%p280, %r62, 2139095039;
	selp.f32 	%f1227, 0f7FFFFFFF, 0f4B800000, %p280;
	mul.f32 	%f1228, %f1291, 0f34000000;
	mul.f32 	%f1292, %f1227, %f1228;
	bra.uni 	$L__BB0_113;
$L__BB0_103:                            // %__nv_fast_fdividef.exit.i.i.i1660
	div.approx.f32 	%f1211, %f1292, %f221;
	cvt.rzi.f32.f32 	%f1290, %f1211;
	fma.rn.f32 	%f126, %f1290, 0fC0000000, %f1292;
	mov.b32 	%r61, %f126;
	setp.lt.u32 	%p271, %r61, 1073741824;
	@%p271 bra 	$L__BB0_108;
// %bb.104:
	setp.lt.u32 	%p272, %r61, -2147483647;
	@%p272 bra 	$L__BB0_106;
// %bb.105:
	add.f32 	%f1216, %f1290, 0fBF800000;
	setp.lt.f32 	%p275, %f126, 0fC0000000;
	add.f32 	%f1217, %f1216, 0fBF800000;
	selp.f32 	%f1290, %f1217, %f1216, %p275;
	bra.uni 	$L__BB0_108;
$L__BB0_106:
	add.f32 	%f1290, %f1290, 0f3F800000;
	setp.ltu.f32 	%p273, %f126, 0f40800000;
	@%p273 bra 	$L__BB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i1664
	add.f32 	%f1212, %f1290, 0f3F800000;
	fma.rn.f32 	%f1214, %f221, 0fC0400000, %f126;
	setp.ge.f32 	%p274, %f1214, 0f00000000;
	add.f32 	%f1215, %f1212, 0f3F800000;
	selp.f32 	%f1290, %f1215, %f1212, %p274;
$L__BB0_108:                            // %__internal_fmodf_fastpath_quot.exit.i.i1667
	fma.rn.f32 	%f1292, %f1290, 0fC0000000, %f1292;
$L__BB0_113:                            // %__internal_fmodf_kernel.exit.i1686
	add.s64 	%rd31, %rd1, %rd30;
	add.s64 	%rd33, %rd1, %rd32;
	shr.u32 	%r188, %r3, 2;
	mov.b32 	%r298, %f291;
	mov.b32 	%r297, %f3;
	mov.b32 	%r316, %f360;
	mov.b32 	%r315, %f12;
	mov.b32 	%r334, %f429;
	mov.b32 	%r333, %f21;
	mov.b32 	%r352, %f498;
	mov.b32 	%r351, %f30;
	mov.b32 	%r370, %f567;
	mov.b32 	%r369, %f39;
	mov.b32 	%r388, %f636;
	mov.b32 	%r387, %f48;
	mov.b32 	%r406, %f705;
	mov.b32 	%r405, %f57;
	mov.b32 	%r424, %f773;
	mov.b32 	%r423, %f66;
	xor.b32  	%r497, %r500, -2147483648;
	xor.b32  	%r496, %r499, -2147483648;
	mov.b32 	%r544, %f1051;
	mov.b32 	%r543, %f178;
	mov.b32 	%r547, %f1048;
	mov.b32 	%r546, %f177;
	xor.b32  	%r585, %r588, -2147483648;
	xor.b32  	%r584, %r587, -2147483648;
	selp.f32 	%f217, %f1207, %f1203, %p268;
	abs.f32 	%f1229, %f1292;
	setp.gtu.f32 	%p281, %f1229, 0f7F800000;
	@%p281 bra 	$L__BB0_115;
// %bb.114:
	mov.b32 	%r628, %f218;
	and.b32  	%r629, %r628, -2147483648;
	mov.b32 	%r630, %f1292;
	or.b32  	%r631, %r629, %r630;
	mov.b32 	%f1292, %r631;
$L__BB0_115:                            // %__nv_fmodf.exit1687
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r182, [%rd31];
	ld.global.u32 	%r184, [%rd33];
	// begin inline asm
	cvt.rn.f16x2.f32 %r296, %r298, %r297;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r314, %r316, %r315;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r332, %r334, %r333;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r350, %r352, %r351;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r368, %r370, %r369;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r386, %r388, %r387;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r404, %r406, %r405;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r422, %r424, %r423;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r425, %r430, %r429;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r428, %r430, %r429;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r431, %r436, %r435;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r434, %r436, %r435;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r492, %r503, %r502;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r495, %r497, %r496;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r498, %r500, %r499;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r501, %r503, %r502;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r542, %r544, %r543;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r545, %r547, %r546;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r580, %r591, %r590;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r583, %r585, %r584;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r586, %r588, %r587;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r589, %r591, %r590;
	// end inline asm
	add.f32 	%f1230, %f1292, %f1292;
	mov.b32 	%r639, %f1230;
	and.b32  	%r640, %r639, -2147483648;
	or.b32  	%r641, %r640, 1056964608;
	mov.b32 	%f1231, %r641;
	add.f32 	%f1232, %f1230, %f1231;
	cvt.rzi.f32.f32 	%f1233, %f1232;
	abs.f32 	%f1234, %f1230;
	setp.gt.f32 	%p282, %f1234, 0f4B000000;
	selp.f32 	%f1235, %f1230, %f1233, %p282;
	cvt.rzi.f32.f32 	%f1236, %f1230;
	setp.lt.f32 	%p283, %f1234, 0f3F000000;
	selp.f32 	%f1237, %f1236, %f1235, %p283;
	cvt.rzi.s32.f32 	%r642, %f1237;
	fma.rn.f32 	%f1238, %f1237, 0fBF000000, %f1292;
	mul.f32 	%f1239, %f1238, %f1238;
	fma.rn.f32 	%f1240, %f1239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1241, %f1239, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1242, %f1240, %f1239, 0fC0A55DF6;
	fma.rn.f32 	%f1243, %f1241, %f1239, 0f4081E0CF;
	fma.rn.f32 	%f1244, %f1239, %f1238, 0f00000000;
	fma.rn.f32 	%f1245, %f1243, %f1239, 0fC09DE9E6;
	fma.rn.f32 	%f1246, %f1242, %f1244, 0f00000000;
	fma.rn.f32 	%f1247, %f1245, %f1239, 0f3F800000;
	fma.rn.f32 	%f1248, %f1238, 0f40490FDB, %f1246;
	and.b32  	%r643, %r642, 1;
	setp.eq.b32 	%p284, %r643, 1;
	selp.f32 	%f1249, %f1247, %f1248, %p284;
	selp.f32 	%f1250, %f1248, %f1247, %p284;
	and.b32  	%r644, %r642, 2;
	setp.eq.s32 	%p285, %r644, 0;
	neg.f32 	%f1251, %f1249;
	selp.f32 	%f1252, %f1249, %f1251, %p285;
	add.s32 	%r645, %r642, 1;
	and.b32  	%r646, %r645, 2;
	setp.eq.s32 	%p286, %r646, 0;
	sub.f32 	%f1254, %f250, %f1250;
	selp.f32 	%f1255, %f1250, %f1254, %p286;
	cvt.rzi.f32.f32 	%f1256, %f1292;
	setp.eq.f32 	%p287, %f1256, %f1292;
	mul.f32 	%f1257, %f1292, 0f00000000;
	selp.f32 	%f1258, %f1257, %f1252, %p287;
	abs.f32 	%f1259, %f1292;
	setp.gt.f32 	%p288, %f1259, 0f4B800000;
	add.f32 	%f1260, %f1258, 0f3F800000;
	selp.f32 	%f1261, %f1260, %f1255, %p288;
	mov.b32 	%r634, %f1261;
	mov.b32 	%r633, %f217;
	// begin inline asm
	cvt.rn.f16x2.f32 %r632, %r634, %r633;
	// end inline asm
	mov.b32 	%r637, %f1258;
	mov.b32 	%r636, %f216;
	// begin inline asm
	cvt.rn.f16x2.f32 %r635, %r637, %r636;
	// end inline asm
	shl.b32 	%r647, %r249, 13;
	shl.b32 	%r648, %r253, 7;
	and.b32  	%r649, %r173, 28;
	and.b32  	%r650, %r177, 32;
	or.b32  	%r651, %r649, %r650;
	shl.b32 	%r652, %r3, 3;
	and.b32  	%r71, %r652, 64;
	and.b32  	%r72, %r177, 64;
	or.b32  	%r653, %r647, %r72;
	or.b32  	%r654, %r653, %r651;
	add.s32 	%r73, %r654, %r648;
	bfe.s32 	%r655, %r3, 3, 1;
	and.b32  	%r74, %r3, 8;
	shl.b32 	%r656, %r3, 4;
	or.b32  	%r657, %r74, %r656;
	shr.u32 	%r658, %r657, 2;
	and.b32  	%r659, %r658, 30;
	and.b32  	%r75, %r656, 48;
	and.b32  	%r76, %r188, 6;
	and.b32  	%r660, %r2, 32;
	shr.u32 	%r661, %r1, 1;
	or.b32  	%r662, %r660, %r661;
	or.b32  	%r663, %r662, 8;
	or.b32  	%r664, %r662, 16;
	or.b32  	%r665, %r662, 24;
	or.b32  	%r666, %r181, %r176;
	or.b32  	%r667, %r666, %r180;
	or.b32  	%r668, %r667, %r174;
	shr.u32 	%r669, %r668, 1;
	mul.lo.s32 	%r670, %r669, 65;
	add.s32 	%r77, %r662, %r670;
	add.s32 	%r78, %r663, %r670;
	add.s32 	%r79, %r664, %r670;
	add.s32 	%r80, %r665, %r670;
	or.b32  	%r671, %r183, %r176;
	or.b32  	%r672, %r671, %r180;
	or.b32  	%r673, %r672, %r174;
	shr.u32 	%r674, %r673, 1;
	mul.lo.s32 	%r675, %r674, 65;
	add.s32 	%r81, %r662, %r675;
	add.s32 	%r82, %r663, %r675;
	add.s32 	%r83, %r664, %r675;
	add.s32 	%r84, %r665, %r675;
	shl.b32 	%r676, %r1, 1;
	or.b32  	%r677, %r190, %r676;
	mul.lo.s32 	%r678, %r677, 65;
	add.s32 	%r679, %r659, %r678;
	mul.wide.u32 	%rd34, %r679, 4;
	mov.u64 	%rd35, shmem;
	add.s64 	%rd5, %rd35, %rd34;
	cvt.u64.u32 	%rd36, %r659;
	cvt.u64.u32 	%rd37, %r678;
	add.s64 	%rd38, %rd37, %rd36;
	shl.b64 	%rd39, %rd38, 2;
	add.s64 	%rd6, %rd35, %rd39;
	or.b32  	%r680, %r677, 32;
	mul.lo.s32 	%r681, %r680, 65;
	add.s32 	%r682, %r659, %r681;
	mul.wide.u32 	%rd40, %r682, 4;
	add.s64 	%rd7, %rd35, %rd40;
	cvt.u64.u32 	%rd41, %r681;
	add.s64 	%rd42, %rd36, %rd41;
	shl.b64 	%rd43, %rd42, 2;
	add.s64 	%rd8, %rd35, %rd43;
	shl.b32 	%r683, %r251, 20;
	add.s32 	%r684, %r683, -3145728;
	shl.b32 	%r685, %r1, 2;
	or.b32  	%r686, %r191, %r685;
	or.b32  	%r687, %r686, %r178;
	shl.b32 	%r688, %r687, 7;
	or.b32  	%r85, %r688, %r651;
	cvt.s64.s32 	%rd9, %r684;
	or.b32  	%r86, %r85, 8192;
	bfe.u32 	%r689, %r656, 5, 1;
	mul.lo.s32 	%r690, %r190, 65;
	and.b32  	%r691, %r1, 1;
	neg.s32 	%r692, %r691;
	and.b32  	%r693, %r692, 2080;
	bfe.s32 	%r694, %r1, 1, 1;
	and.b32  	%r695, %r1, 2;
	setp.eq.s32 	%p289, %r695, 0;
	and.b32  	%r696, %r694, 1040;
	bfe.s32 	%r697, %r1, 2, 1;
	and.b32  	%r698, %r1, 4;
	setp.eq.s32 	%p290, %r698, 0;
	and.b32  	%r699, %r697, 520;
	shr.u32 	%r700, %r1, 3;
	mul.lo.s32 	%r701, %r700, 260;
	or.b32  	%r702, %r693, %r659;
	add.s32 	%r703, %r702, %r690;
	add.s32 	%r704, %r703, %r696;
	add.s32 	%r705, %r704, %r699;
	add.s32 	%r706, %r705, %r701;
	mul.wide.u32 	%rd44, %r706, 4;
	add.s64 	%rd10, %rd35, %rd44;
	cvt.u64.u32 	%rd45, %r701;
	selp.b64 	%rd46, 0, 520, %p290;
	selp.b64 	%rd47, 0, 1040, %p289;
	cvt.u64.u32 	%rd48, %r690;
	cvt.u64.u32 	%rd49, %r702;
	add.s64 	%rd50, %rd49, %rd48;
	add.s64 	%rd51, %rd50, %rd47;
	add.s64 	%rd52, %rd51, %rd46;
	add.s64 	%rd53, %rd52, %rd45;
	shl.b64 	%rd54, %rd53, 2;
	add.s64 	%rd11, %rd35, %rd54;
	cvt.u64.u32 	%rd55, %r705;
	add.s64 	%rd56, %rd55, %rd45;
	shl.b64 	%rd57, %rd56, 2;
	add.s64 	%rd12, %rd35, %rd57;
	add.s32 	%r707, %r706, 162;
	mul.wide.u32 	%rd58, %r707, 4;
	add.s64 	%rd13, %rd35, %rd58;
	add.s32 	%r708, %r706, 131;
	mul.wide.u32 	%rd59, %r708, 4;
	add.s64 	%rd14, %rd35, %rd59;
	add.s32 	%r709, %r706, 163;
	mul.wide.u32 	%rd60, %r709, 4;
	add.s64 	%rd15, %rd35, %rd60;
	add.s32 	%r710, %r706, 4193;
	mul.wide.u32 	%rd61, %r710, 4;
	add.s64 	%rd16, %rd35, %rd61;
	add.s32 	%r711, %r706, 4162;
	mul.wide.u32 	%rd62, %r711, 4;
	add.s64 	%rd17, %rd35, %rd62;
	add.s32 	%r712, %r706, 4194;
	mul.wide.u32 	%rd63, %r712, 4;
	add.s64 	%rd18, %rd35, %rd63;
	add.s32 	%r713, %r706, 4323;
	mul.wide.u32 	%rd64, %r713, 4;
	add.s64 	%rd19, %rd35, %rd64;
	add.s32 	%r714, %r706, 4292;
	mul.wide.u32 	%rd65, %r714, 4;
	add.s64 	%rd20, %rd35, %rd65;
	add.s32 	%r715, %r706, 4324;
	mul.wide.u32 	%rd66, %r715, 4;
	add.s64 	%rd21, %rd35, %rd66;
	mul.lo.s32 	%r716, %r689, 65;
	and.b32  	%r717, %r655, 1040;
	setp.lt.u32 	%p291, %r3, 16;
	selp.b32 	%r718, 0, 520, %p291;
	setp.eq.s32 	%p292, %r187, 0;
	selp.b32 	%r87, 0, 130, %p292;
	shr.u32 	%r719, %r180, 3;
	mul.lo.s32 	%r88, %r719, 260;
	or.b32  	%r720, %r662, %r717;
	add.s32 	%r721, %r720, %r716;
	add.s32 	%r89, %r721, %r718;
	or.b32  	%r722, %r663, %r717;
	add.s32 	%r723, %r722, %r716;
	add.s32 	%r90, %r723, %r718;
	add.s32 	%r724, %r664, %r717;
	add.s32 	%r725, %r724, %r716;
	add.s32 	%r91, %r725, %r718;
	add.s32 	%r726, %r665, %r717;
	add.s32 	%r727, %r726, %r716;
	add.s32 	%r92, %r727, %r718;
	add.s32 	%r728, %r662, %r716;
	add.s32 	%r93, %r728, 2080;
	add.s32 	%r94, %r728, 2088;
	add.s32 	%r95, %r728, 2096;
	add.s32 	%r96, %r728, 2104;
	mov.u32 	%r16333, 0;
	setp.eq.s32 	%p294, %r74, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16334, %r16333;
	mov.u32 	%r16335, %r16333;
	mov.u32 	%r16336, %r16333;
	mov.u32 	%r16337, %r16333;
	mov.u32 	%r16338, %r16333;
	mov.u32 	%r16339, %r16333;
	mov.u32 	%r16340, %r16333;
	mov.u32 	%r16341, %r16333;
	mov.u32 	%r16342, %r16333;
	mov.u32 	%r16343, %r16333;
	mov.u32 	%r16344, %r16333;
	mov.u32 	%r16345, %r16333;
	mov.u32 	%r16346, %r16333;
	mov.u32 	%r16347, %r16333;
	mov.u32 	%r16348, %r16333;
	mov.u32 	%r16349, %r16333;
	mov.u32 	%r16350, %r16333;
	mov.u32 	%r16351, %r16333;
	mov.u32 	%r16352, %r16333;
	mov.u32 	%r16353, %r16333;
	mov.u32 	%r16354, %r16333;
	mov.u32 	%r16355, %r16333;
	mov.u32 	%r16356, %r16333;
	mov.u32 	%r16357, %r16333;
	bra.uni 	$L__BB0_116;
$L__BB0_122:                            // %L70498
                                        //   in Loop: Header=BB0_116 Depth=1
	add.s32 	%r172, %r16357, 256;
	setp.ne.s32 	%p319, %r16357, 32512;
	mov.u32 	%r16357, %r172;
	@%p319 bra 	$L__BB0_116;
	bra.uni 	$L__BB0_123;
$L__BB0_116:                            // %L2122
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_118 Depth 2
	add.s32 	%r729, %r16357, %r249;
	setp.lt.s32 	%p293, %r729, %r250;
	@%p293 bra 	$L__BB0_117;
	bra.uni 	$L__BB0_123;
$L__BB0_117:                            // %pass850
                                        //   in Loop: Header=BB0_116 Depth=1
	or.b32  	%r795, %r16357, %r179;
	and.b32  	%r796, %r795, 32544;
	or.b32  	%r797, %r796, %r71;
	or.b32  	%r798, %r797, %r1;
	shl.b32 	%r799, %r798, 13;
	add.s32 	%r800, %r73, %r799;
	shr.s32 	%r801, %r800, 31;
	shr.u32 	%r802, %r801, 4;
	add.s32 	%r803, %r800, %r802;
	shr.s32 	%r804, %r803, 28;
	setp.lt.s32 	%p295, %r800, 0;
	and.b32  	%r805, %r803, -268435456;
	setp.ne.s32 	%p296, %r805, %r800;
	and.pred  	%p297, %p295, %p296;
	selp.u32 	%r806, 1, 0, %p297;
	sub.s32 	%r807, %r806, %r804;
	shl.b32 	%r808, %r807, 28;
	add.s32 	%r809, %r808, %r800;
	mul.wide.s32 	%rd67, %r809, 4;
	add.s64 	%rd68, %rd2, %rd67;
	ld.global.v4.u32 	{%r810, %r811, %r812, %r813}, [%rd68];
	or.b32  	%r814, %r799, 131072;
	add.s32 	%r815, %r73, %r814;
	shr.s32 	%r816, %r815, 31;
	shr.u32 	%r817, %r816, 4;
	add.s32 	%r818, %r815, %r817;
	shr.s32 	%r819, %r818, 28;
	setp.lt.s32 	%p298, %r815, 0;
	and.b32  	%r820, %r818, -268435456;
	setp.ne.s32 	%p299, %r820, %r815;
	and.pred  	%p300, %p298, %p299;
	selp.u32 	%r821, 1, 0, %p300;
	sub.s32 	%r822, %r821, %r819;
	shl.b32 	%r823, %r822, 28;
	add.s32 	%r824, %r823, %r815;
	mul.wide.s32 	%rd69, %r824, 4;
	add.s64 	%rd70, %rd2, %rd69;
	ld.global.v4.u32 	{%r825, %r826, %r827, %r828}, [%rd70];
	or.b32  	%r829, %r799, 1048576;
	add.s32 	%r830, %r73, %r829;
	shr.s32 	%r831, %r830, 31;
	shr.u32 	%r832, %r831, 4;
	add.s32 	%r833, %r830, %r832;
	shr.s32 	%r834, %r833, 28;
	setp.lt.s32 	%p301, %r830, 0;
	and.b32  	%r835, %r833, -268435456;
	setp.ne.s32 	%p302, %r835, %r830;
	and.pred  	%p303, %p301, %p302;
	selp.u32 	%r836, 1, 0, %p303;
	sub.s32 	%r837, %r836, %r834;
	shl.b32 	%r838, %r837, 28;
	add.s32 	%r839, %r838, %r830;
	mul.wide.s32 	%rd71, %r839, 4;
	add.s64 	%rd72, %rd2, %rd71;
	ld.global.v4.u32 	{%r840, %r841, %r842, %r843}, [%rd72];
	or.b32  	%r844, %r799, 1179648;
	add.s32 	%r845, %r73, %r844;
	shr.s32 	%r846, %r845, 31;
	shr.u32 	%r847, %r846, 4;
	add.s32 	%r848, %r845, %r847;
	shr.s32 	%r849, %r848, 28;
	setp.lt.s32 	%p304, %r845, 0;
	and.b32  	%r850, %r848, -268435456;
	setp.ne.s32 	%p305, %r850, %r845;
	and.pred  	%p306, %p304, %p305;
	selp.u32 	%r851, 1, 0, %p306;
	sub.s32 	%r852, %r851, %r849;
	shl.b32 	%r853, %r852, 28;
	add.s32 	%r854, %r853, %r845;
	mul.wide.s32 	%rd73, %r854, 4;
	add.s64 	%rd74, %rd2, %rd73;
	ld.global.v4.u32 	{%r855, %r856, %r857, %r858}, [%rd74];
	selp.b32 	%r859, %r812, %r810, %p294;
	shfl.sync.bfly.b32	%r860, %r859, 8, 31, -1;
	selp.b32 	%r731, %r810, %r860, %p294;
	selp.b32 	%r732, %r860, %r812, %p294;
	selp.b32 	%r861, %r813, %r811, %p294;
	shfl.sync.bfly.b32	%r862, %r861, 8, 31, -1;
	selp.b32 	%r739, %r811, %r862, %p294;
	selp.b32 	%r740, %r862, %r813, %p294;
	selp.b32 	%r863, %r827, %r825, %p294;
	shfl.sync.bfly.b32	%r864, %r863, 8, 31, -1;
	selp.b32 	%r747, %r825, %r864, %p294;
	selp.b32 	%r748, %r864, %r827, %p294;
	selp.b32 	%r865, %r828, %r826, %p294;
	shfl.sync.bfly.b32	%r866, %r865, 8, 31, -1;
	selp.b32 	%r755, %r826, %r866, %p294;
	selp.b32 	%r756, %r866, %r828, %p294;
	selp.b32 	%r867, %r842, %r840, %p294;
	shfl.sync.bfly.b32	%r868, %r867, 8, 31, -1;
	selp.b32 	%r763, %r840, %r868, %p294;
	selp.b32 	%r764, %r868, %r842, %p294;
	selp.b32 	%r869, %r843, %r841, %p294;
	shfl.sync.bfly.b32	%r870, %r869, 8, 31, -1;
	selp.b32 	%r771, %r841, %r870, %p294;
	selp.b32 	%r772, %r870, %r843, %p294;
	selp.b32 	%r871, %r857, %r855, %p294;
	shfl.sync.bfly.b32	%r872, %r871, 8, 31, -1;
	selp.b32 	%r779, %r855, %r872, %p294;
	selp.b32 	%r780, %r872, %r857, %p294;
	selp.b32 	%r873, %r858, %r856, %p294;
	shfl.sync.bfly.b32	%r874, %r873, 8, 31, -1;
	selp.b32 	%r787, %r856, %r874, %p294;
	selp.b32 	%r788, %r874, %r858, %p294;
	mov.u32 	%r789, 21520;
	// begin inline asm
	prmt.b32 %r730, %r731, %r732, %r789;
	// end inline asm
	mov.u32 	%r793, 30258;
	// begin inline asm
	prmt.b32 %r734, %r731, %r732, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r738, %r739, %r740, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r742, %r739, %r740, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r746, %r747, %r748, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r750, %r747, %r748, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r754, %r755, %r756, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r758, %r755, %r756, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r762, %r763, %r764, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r766, %r763, %r764, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r770, %r771, %r772, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r774, %r771, %r772, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r778, %r779, %r780, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r782, %r779, %r780, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r786, %r787, %r788, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r790, %r787, %r788, %r793;
	// end inline asm
	st.shared.u32 	[%rd10], %r730;
	st.shared.u32 	[%rd11+128], %r734;
	st.shared.u32 	[%rd11+4], %r738;
	st.shared.u32 	[%rd11+132], %r742;
	st.shared.u32 	[%rd12+520], %r746;
	st.shared.u32 	[%rd13], %r750;
	st.shared.u32 	[%rd14], %r754;
	st.shared.u32 	[%rd15], %r758;
	st.shared.u32 	[%rd12+16644], %r762;
	st.shared.u32 	[%rd16], %r766;
	st.shared.u32 	[%rd17], %r770;
	st.shared.u32 	[%rd18], %r774;
	st.shared.u32 	[%rd12+17164], %r778;
	st.shared.u32 	[%rd19], %r782;
	st.shared.u32 	[%rd20], %r786;
	st.shared.u32 	[%rd21], %r790;
	bar.sync 	0;
	mov.u32 	%r16358, %r259;
$L__BB0_118:                            // %L13565
                                        //   Parent Loop BB0_116 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.eq.s32 	%p307, %r16358, 1;
	selp.b32 	%r16139, 0, 4161, %p307;
	add.s32 	%r16140, %r89, %r16139;
	add.s32 	%r16141, %r16140, %r87;
	add.s32 	%r16142, %r16141, %r88;
	mul.wide.u32 	%rd75, %r16142, 4;
	add.s64 	%rd77, %rd35, %rd75;
	ld.shared.u32 	%r16143, [%rd77];
	add.s32 	%r16144, %r90, %r16139;
	add.s32 	%r16145, %r16144, %r87;
	add.s32 	%r16146, %r16145, %r88;
	mul.wide.u32 	%rd78, %r16146, 4;
	add.s64 	%rd79, %rd35, %rd78;
	ld.shared.u32 	%r16147, [%rd79];
	add.s32 	%r16148, %r91, %r16139;
	add.s32 	%r16149, %r16148, %r87;
	add.s32 	%r16150, %r16149, %r88;
	mul.wide.u32 	%rd80, %r16150, 4;
	add.s64 	%rd81, %rd35, %rd80;
	ld.shared.u32 	%r16151, [%rd81];
	add.s32 	%r16152, %r92, %r16139;
	add.s32 	%r16153, %r16152, %r87;
	add.s32 	%r16154, %r16153, %r88;
	mul.wide.u32 	%rd82, %r16154, 4;
	add.s64 	%rd83, %rd35, %rd82;
	ld.shared.u32 	%r16155, [%rd83];
	add.s32 	%r16156, %r16357, %r16358;
	or.b32  	%r16157, %r16156, %r180;
	or.b32  	%r16158, %r16157, %r75;
	or.b32  	%r16159, %r16158, %r76;
	bfe.s32 	%r16160, %r16159, 1, 1;
	and.b32  	%r16161, %r16160, 1040;
	bfe.s32 	%r16162, %r16159, 2, 1;
	and.b32  	%r16163, %r16162, 520;
	add.s32 	%r16164, %r93, %r16161;
	add.s32 	%r16165, %r16164, %r16163;
	add.s32 	%r16166, %r16165, %r16139;
	add.s32 	%r16167, %r16166, %r87;
	add.s32 	%r16168, %r16167, %r88;
	mul.wide.u32 	%rd84, %r16168, 4;
	add.s64 	%rd85, %rd35, %rd84;
	ld.shared.u32 	%r16169, [%rd85];
	add.s32 	%r16170, %r94, %r16161;
	add.s32 	%r16171, %r16170, %r16163;
	add.s32 	%r16172, %r16171, %r16139;
	add.s32 	%r16173, %r16172, %r87;
	add.s32 	%r16174, %r16173, %r88;
	mul.wide.u32 	%rd86, %r16174, 4;
	add.s64 	%rd87, %rd35, %rd86;
	ld.shared.u32 	%r16175, [%rd87];
	add.s32 	%r16176, %r95, %r16161;
	add.s32 	%r16177, %r16176, %r16163;
	add.s32 	%r16178, %r16177, %r16139;
	add.s32 	%r16179, %r16178, %r87;
	add.s32 	%r16180, %r16179, %r88;
	mul.wide.u32 	%rd88, %r16180, 4;
	add.s64 	%rd89, %rd35, %rd88;
	ld.shared.u32 	%r16181, [%rd89];
	add.s32 	%r16182, %r96, %r16161;
	add.s32 	%r16183, %r16182, %r16163;
	add.s32 	%r16184, %r16183, %r16139;
	add.s32 	%r16185, %r16184, %r87;
	add.s32 	%r16186, %r16185, %r88;
	mul.wide.u32 	%rd90, %r16186, 4;
	add.s64 	%rd91, %rd35, %rd90;
	ld.shared.u32 	%r16187, [%rd91];
	// begin inline asm
	mov.b32 %r880, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r891, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r879, %r16143, -2004318072;
	mov.u32 	%r878, 983055;
	// begin inline asm
	lop3.b32 %r877, %r878, %r879, %r880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r881, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r882, %r880, %r881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r885, %r877, %r882;
	// end inline asm
	mov.u32 	%r889, 15728880;
	// begin inline asm
	lop3.b32 %r888, %r889, %r879, %r891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r892, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r893, %r891, %r892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r896, %r888, %r893;
	// end inline asm
	shr.u32 	%r901, %r879, 8;
	// begin inline asm
	lop3.b32 %r899, %r878, %r901, %r880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r903, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r904, %r880, %r903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r907, %r899, %r904;
	// end inline asm
	// begin inline asm
	lop3.b32 %r910, %r889, %r901, %r891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r914, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r915, %r891, %r914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r918, %r910, %r915;
	// end inline asm
	// begin inline asm
	mov.b32 %r926, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r937, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r925, %r16147, -2004318072;
	// begin inline asm
	lop3.b32 %r923, %r878, %r925, %r926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r927, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r928, %r926, %r927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r931, %r923, %r928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r934, %r889, %r925, %r937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r938, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r939, %r937, %r938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r942, %r934, %r939;
	// end inline asm
	shr.u32 	%r947, %r925, 8;
	// begin inline asm
	lop3.b32 %r945, %r878, %r947, %r926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r949, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r950, %r926, %r949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r953, %r945, %r950;
	// end inline asm
	// begin inline asm
	lop3.b32 %r956, %r889, %r947, %r937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r960, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r961, %r937, %r960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r964, %r956, %r961;
	// end inline asm
	// begin inline asm
	mov.b32 %r972, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r983, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r971, %r16151, -2004318072;
	// begin inline asm
	lop3.b32 %r969, %r878, %r971, %r972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r973, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r974, %r972, %r973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r977, %r969, %r974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r980, %r889, %r971, %r983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r984, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r985, %r983, %r984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r988, %r980, %r985;
	// end inline asm
	shr.u32 	%r993, %r971, 8;
	// begin inline asm
	lop3.b32 %r991, %r878, %r993, %r972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r995, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r996, %r972, %r995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r999, %r991, %r996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1002, %r889, %r993, %r983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1006, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1007, %r983, %r1006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1010, %r1002, %r1007;
	// end inline asm
	// begin inline asm
	mov.b32 %r1018, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1029, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1017, %r16155, -2004318072;
	// begin inline asm
	lop3.b32 %r1015, %r878, %r1017, %r1018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1020, %r1018, %r1019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1023, %r1015, %r1020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1026, %r889, %r1017, %r1029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1030, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1031, %r1029, %r1030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1034, %r1026, %r1031;
	// end inline asm
	shr.u32 	%r1039, %r1017, 8;
	// begin inline asm
	lop3.b32 %r1037, %r878, %r1039, %r1018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1041, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1042, %r1018, %r1041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1045, %r1037, %r1042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1048, %r889, %r1039, %r1029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1052, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1053, %r1029, %r1052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1056, %r1048, %r1053;
	// end inline asm
	// begin inline asm
	mov.b32 %r1064, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1075, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1063, %r16169, -2004318072;
	// begin inline asm
	lop3.b32 %r1061, %r878, %r1063, %r1064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1066, %r1064, %r1065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1069, %r1061, %r1066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1072, %r889, %r1063, %r1075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1077, %r1075, %r1076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1080, %r1072, %r1077;
	// end inline asm
	shr.u32 	%r1085, %r1063, 8;
	// begin inline asm
	lop3.b32 %r1083, %r878, %r1085, %r1064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1088, %r1064, %r1087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1091, %r1083, %r1088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1094, %r889, %r1085, %r1075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1098, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1099, %r1075, %r1098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1102, %r1094, %r1099;
	// end inline asm
	// begin inline asm
	mov.b32 %r1110, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1121, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1109, %r16175, -2004318072;
	// begin inline asm
	lop3.b32 %r1107, %r878, %r1109, %r1110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1111, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1112, %r1110, %r1111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1115, %r1107, %r1112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1118, %r889, %r1109, %r1121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1123, %r1121, %r1122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1126, %r1118, %r1123;
	// end inline asm
	shr.u32 	%r1131, %r1109, 8;
	// begin inline asm
	lop3.b32 %r1129, %r878, %r1131, %r1110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1133, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1134, %r1110, %r1133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1137, %r1129, %r1134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1140, %r889, %r1131, %r1121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1144, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1145, %r1121, %r1144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1148, %r1140, %r1145;
	// end inline asm
	// begin inline asm
	mov.b32 %r1156, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1167, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1155, %r16181, -2004318072;
	// begin inline asm
	lop3.b32 %r1153, %r878, %r1155, %r1156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1157, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1158, %r1156, %r1157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1161, %r1153, %r1158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1164, %r889, %r1155, %r1167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1168, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1169, %r1167, %r1168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1172, %r1164, %r1169;
	// end inline asm
	shr.u32 	%r1177, %r1155, 8;
	// begin inline asm
	lop3.b32 %r1175, %r878, %r1177, %r1156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1179, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1180, %r1156, %r1179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1183, %r1175, %r1180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1186, %r889, %r1177, %r1167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1190, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1191, %r1167, %r1190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1194, %r1186, %r1191;
	// end inline asm
	// begin inline asm
	mov.b32 %r1202, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1213, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1201, %r16187, -2004318072;
	// begin inline asm
	lop3.b32 %r1199, %r878, %r1201, %r1202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1204, %r1202, %r1203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1207, %r1199, %r1204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1210, %r889, %r1201, %r1213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1214, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1215, %r1213, %r1214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1218, %r1210, %r1215;
	// end inline asm
	shr.u32 	%r1223, %r1201, 8;
	// begin inline asm
	lop3.b32 %r1221, %r878, %r1223, %r1202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1225, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1226, %r1202, %r1225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1229, %r1221, %r1226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1232, %r889, %r1223, %r1213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1236, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1237, %r1213, %r1236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1240, %r1232, %r1237;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1243, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1245, %r1243, %r885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1248, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1250, %r1248, %r896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1253, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1255, %r1253, %r907;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1258, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1260, %r1258, %r918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1263, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1265, %r1263, %r931;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1268, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1270, %r1268, %r942;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1273, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1275, %r1273, %r953;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1278, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1280, %r1278, %r964;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1283, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1285, %r1283, %r977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1288, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1290, %r1288, %r988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1293, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1295, %r1293, %r999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1298, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1300, %r1298, %r1010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1303, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1305, %r1303, %r1023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1308, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1310, %r1308, %r1034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1313, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1315, %r1313, %r1045;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1318, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1320, %r1318, %r1056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1323, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1325, %r1323, %r1069;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1328, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1330, %r1328, %r1080;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1333, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1335, %r1333, %r1091;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1338, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1340, %r1338, %r1102;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1343, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1345, %r1343, %r1115;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1348, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1350, %r1348, %r1126;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1353, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1355, %r1353, %r1137;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1358, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1360, %r1358, %r1148;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1363, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1365, %r1363, %r1161;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1368, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1370, %r1368, %r1172;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1373, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1375, %r1373, %r1183;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1378, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1380, %r1378, %r1194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1383, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1385, %r1383, %r1207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1388, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1390, %r1388, %r1218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1393, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1395, %r1393, %r1229;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1398, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1400, %r1398, %r1240;
	// end inline asm
	// begin inline asm
	mov.b32 %r1408, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1419, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1407, %r16333, -2004318072;
	// begin inline asm
	lop3.b32 %r1405, %r878, %r1407, %r1408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1410, %r1408, %r1409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1413, %r1405, %r1410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1416, %r889, %r1407, %r1419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1420, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1421, %r1419, %r1420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1424, %r1416, %r1421;
	// end inline asm
	shr.u32 	%r1429, %r1407, 8;
	// begin inline asm
	lop3.b32 %r1427, %r878, %r1429, %r1408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1431, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1432, %r1408, %r1431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1435, %r1427, %r1432;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1438, %r889, %r1429, %r1419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1443, %r1419, %r1442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1446, %r1438, %r1443;
	// end inline asm
	// begin inline asm
	mov.b32 %r1454, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1465, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1453, %r16334, -2004318072;
	// begin inline asm
	lop3.b32 %r1451, %r878, %r1453, %r1454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1456, %r1454, %r1455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1459, %r1451, %r1456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1462, %r889, %r1453, %r1465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1466, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1467, %r1465, %r1466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1470, %r1462, %r1467;
	// end inline asm
	shr.u32 	%r1475, %r1453, 8;
	// begin inline asm
	lop3.b32 %r1473, %r878, %r1475, %r1454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1477, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1478, %r1454, %r1477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1481, %r1473, %r1478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1484, %r889, %r1475, %r1465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1488, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1489, %r1465, %r1488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1492, %r1484, %r1489;
	// end inline asm
	// begin inline asm
	mov.b32 %r1500, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1511, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1499, %r16335, -2004318072;
	// begin inline asm
	lop3.b32 %r1497, %r878, %r1499, %r1500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1502, %r1500, %r1501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1505, %r1497, %r1502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1508, %r889, %r1499, %r1511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1512, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1513, %r1511, %r1512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1516, %r1508, %r1513;
	// end inline asm
	shr.u32 	%r1521, %r1499, 8;
	// begin inline asm
	lop3.b32 %r1519, %r878, %r1521, %r1500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1523, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1524, %r1500, %r1523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1527, %r1519, %r1524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1530, %r889, %r1521, %r1511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1534, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1535, %r1511, %r1534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1538, %r1530, %r1535;
	// end inline asm
	// begin inline asm
	mov.b32 %r1546, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1557, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1545, %r16336, -2004318072;
	// begin inline asm
	lop3.b32 %r1543, %r878, %r1545, %r1546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1548, %r1546, %r1547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1551, %r1543, %r1548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1554, %r889, %r1545, %r1557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1559, %r1557, %r1558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1562, %r1554, %r1559;
	// end inline asm
	shr.u32 	%r1567, %r1545, 8;
	// begin inline asm
	lop3.b32 %r1565, %r878, %r1567, %r1546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1569, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1570, %r1546, %r1569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1573, %r1565, %r1570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1576, %r889, %r1567, %r1557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1580, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1581, %r1557, %r1580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1584, %r1576, %r1581;
	// end inline asm
	// begin inline asm
	mov.b32 %r1592, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1603, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1591, %r16345, -2004318072;
	// begin inline asm
	lop3.b32 %r1589, %r878, %r1591, %r1592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1594, %r1592, %r1593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1597, %r1589, %r1594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1600, %r889, %r1591, %r1603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1604, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1605, %r1603, %r1604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1608, %r1600, %r1605;
	// end inline asm
	shr.u32 	%r1613, %r1591, 8;
	// begin inline asm
	lop3.b32 %r1611, %r878, %r1613, %r1592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1615, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1616, %r1592, %r1615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1619, %r1611, %r1616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1622, %r889, %r1613, %r1603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1626, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1627, %r1603, %r1626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1630, %r1622, %r1627;
	// end inline asm
	// begin inline asm
	mov.b32 %r1638, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1649, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1637, %r16346, -2004318072;
	// begin inline asm
	lop3.b32 %r1635, %r878, %r1637, %r1638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1640, %r1638, %r1639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1643, %r1635, %r1640;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1646, %r889, %r1637, %r1649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1650, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1651, %r1649, %r1650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1654, %r1646, %r1651;
	// end inline asm
	shr.u32 	%r1659, %r1637, 8;
	// begin inline asm
	lop3.b32 %r1657, %r878, %r1659, %r1638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1661, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1662, %r1638, %r1661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1665, %r1657, %r1662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1668, %r889, %r1659, %r1649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1672, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1673, %r1649, %r1672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1676, %r1668, %r1673;
	// end inline asm
	// begin inline asm
	mov.b32 %r1684, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1695, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1683, %r16347, -2004318072;
	// begin inline asm
	lop3.b32 %r1681, %r878, %r1683, %r1684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1685, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1686, %r1684, %r1685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1689, %r1681, %r1686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1692, %r889, %r1683, %r1695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1696, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1697, %r1695, %r1696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1700, %r1692, %r1697;
	// end inline asm
	shr.u32 	%r1705, %r1683, 8;
	// begin inline asm
	lop3.b32 %r1703, %r878, %r1705, %r1684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1707, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1708, %r1684, %r1707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1711, %r1703, %r1708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1714, %r889, %r1705, %r1695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1718, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1719, %r1695, %r1718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1722, %r1714, %r1719;
	// end inline asm
	// begin inline asm
	mov.b32 %r1730, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1741, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1729, %r16348, -2004318072;
	// begin inline asm
	lop3.b32 %r1727, %r878, %r1729, %r1730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1731, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1732, %r1730, %r1731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1735, %r1727, %r1732;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1738, %r889, %r1729, %r1741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1742, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1743, %r1741, %r1742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1746, %r1738, %r1743;
	// end inline asm
	shr.u32 	%r1751, %r1729, 8;
	// begin inline asm
	lop3.b32 %r1749, %r878, %r1751, %r1730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1753, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1754, %r1730, %r1753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1757, %r1749, %r1754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1760, %r889, %r1751, %r1741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1764, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1765, %r1741, %r1764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1768, %r1760, %r1765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1771, %r296, %r1413, %r1245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1775, %r296, %r1424, %r1250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r296, %r1435, %r1255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1783, %r296, %r1446, %r1260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r296, %r1459, %r1265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r296, %r1470, %r1270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r296, %r1481, %r1275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1799, %r296, %r1492, %r1280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r296, %r1505, %r1285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1807, %r296, %r1516, %r1290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1811, %r296, %r1527, %r1295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1815, %r296, %r1538, %r1300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1819, %r296, %r1551, %r1305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1823, %r296, %r1562, %r1310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1827, %r296, %r1573, %r1315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1831, %r296, %r1584, %r1320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1835, %r314, %r1597, %r1325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1839, %r314, %r1608, %r1330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1843, %r314, %r1619, %r1335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1847, %r314, %r1630, %r1340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1851, %r314, %r1643, %r1345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1855, %r314, %r1654, %r1350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1859, %r314, %r1665, %r1355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1863, %r314, %r1676, %r1360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1867, %r314, %r1689, %r1365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1871, %r314, %r1700, %r1370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1875, %r314, %r1711, %r1375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1879, %r314, %r1722, %r1380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1883, %r314, %r1735, %r1385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1887, %r314, %r1746, %r1390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1891, %r314, %r1757, %r1395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1895, %r314, %r1768, %r1400;
	// end inline asm
	// begin inline asm
	mov.b32 %r1904, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1915, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1903, %r16337, -2004318072;
	// begin inline asm
	lop3.b32 %r1901, %r878, %r1903, %r1904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1905, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1906, %r1904, %r1905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1909, %r1901, %r1906;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1912, %r889, %r1903, %r1915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1916, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1917, %r1915, %r1916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1920, %r1912, %r1917;
	// end inline asm
	shr.u32 	%r1925, %r1903, 8;
	// begin inline asm
	lop3.b32 %r1923, %r878, %r1925, %r1904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1927, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1928, %r1904, %r1927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1931, %r1923, %r1928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1934, %r889, %r1925, %r1915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1938, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1939, %r1915, %r1938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1942, %r1934, %r1939;
	// end inline asm
	// begin inline asm
	mov.b32 %r1950, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1961, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1949, %r16338, -2004318072;
	// begin inline asm
	lop3.b32 %r1947, %r878, %r1949, %r1950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1952, %r1950, %r1951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1955, %r1947, %r1952;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1958, %r889, %r1949, %r1961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1963, %r1961, %r1962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1966, %r1958, %r1963;
	// end inline asm
	shr.u32 	%r1971, %r1949, 8;
	// begin inline asm
	lop3.b32 %r1969, %r878, %r1971, %r1950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1973, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1974, %r1950, %r1973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1977, %r1969, %r1974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1980, %r889, %r1971, %r1961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1984, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1985, %r1961, %r1984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1988, %r1980, %r1985;
	// end inline asm
	// begin inline asm
	mov.b32 %r1996, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2007, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1995, %r16339, -2004318072;
	// begin inline asm
	lop3.b32 %r1993, %r878, %r1995, %r1996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1998, %r1996, %r1997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2001, %r1993, %r1998;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2004, %r889, %r1995, %r2007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2008, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2009, %r2007, %r2008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2012, %r2004, %r2009;
	// end inline asm
	shr.u32 	%r2017, %r1995, 8;
	// begin inline asm
	lop3.b32 %r2015, %r878, %r2017, %r1996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2020, %r1996, %r2019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2023, %r2015, %r2020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2026, %r889, %r2017, %r2007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2030, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2031, %r2007, %r2030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2034, %r2026, %r2031;
	// end inline asm
	// begin inline asm
	mov.b32 %r2042, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2053, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2041, %r16340, -2004318072;
	// begin inline asm
	lop3.b32 %r2039, %r878, %r2041, %r2042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2044, %r2042, %r2043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2047, %r2039, %r2044;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2050, %r889, %r2041, %r2053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2055, %r2053, %r2054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2058, %r2050, %r2055;
	// end inline asm
	shr.u32 	%r2063, %r2041, 8;
	// begin inline asm
	lop3.b32 %r2061, %r878, %r2063, %r2042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2066, %r2042, %r2065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2069, %r2061, %r2066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2072, %r889, %r2063, %r2053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2077, %r2053, %r2076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2080, %r2072, %r2077;
	// end inline asm
	// begin inline asm
	mov.b32 %r2088, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2099, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2087, %r16349, -2004318072;
	// begin inline asm
	lop3.b32 %r2085, %r878, %r2087, %r2088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2090, %r2088, %r2089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2093, %r2085, %r2090;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2096, %r889, %r2087, %r2099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2101, %r2099, %r2100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2104, %r2096, %r2101;
	// end inline asm
	shr.u32 	%r2109, %r2087, 8;
	// begin inline asm
	lop3.b32 %r2107, %r878, %r2109, %r2088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2111, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2112, %r2088, %r2111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2115, %r2107, %r2112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2118, %r889, %r2109, %r2099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2123, %r2099, %r2122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2126, %r2118, %r2123;
	// end inline asm
	// begin inline asm
	mov.b32 %r2134, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2145, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2133, %r16350, -2004318072;
	// begin inline asm
	lop3.b32 %r2131, %r878, %r2133, %r2134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2136, %r2134, %r2135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2139, %r2131, %r2136;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2142, %r889, %r2133, %r2145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2147, %r2145, %r2146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2150, %r2142, %r2147;
	// end inline asm
	shr.u32 	%r2155, %r2133, 8;
	// begin inline asm
	lop3.b32 %r2153, %r878, %r2155, %r2134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2157, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2158, %r2134, %r2157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2161, %r2153, %r2158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2164, %r889, %r2155, %r2145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2168, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2169, %r2145, %r2168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2172, %r2164, %r2169;
	// end inline asm
	// begin inline asm
	mov.b32 %r2180, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2191, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2179, %r16351, -2004318072;
	// begin inline asm
	lop3.b32 %r2177, %r878, %r2179, %r2180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2182, %r2180, %r2181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2185, %r2177, %r2182;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2188, %r889, %r2179, %r2191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2193, %r2191, %r2192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2196, %r2188, %r2193;
	// end inline asm
	shr.u32 	%r2201, %r2179, 8;
	// begin inline asm
	lop3.b32 %r2199, %r878, %r2201, %r2180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2204, %r2180, %r2203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2207, %r2199, %r2204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2210, %r889, %r2201, %r2191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2214, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2215, %r2191, %r2214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2218, %r2210, %r2215;
	// end inline asm
	// begin inline asm
	mov.b32 %r2226, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2237, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2225, %r16352, -2004318072;
	// begin inline asm
	lop3.b32 %r2223, %r878, %r2225, %r2226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2228, %r2226, %r2227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2231, %r2223, %r2228;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2234, %r889, %r2225, %r2237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2239, %r2237, %r2238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2242, %r2234, %r2239;
	// end inline asm
	shr.u32 	%r2247, %r2225, 8;
	// begin inline asm
	lop3.b32 %r2245, %r878, %r2247, %r2226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2250, %r2226, %r2249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2253, %r2245, %r2250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2256, %r889, %r2247, %r2237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2260, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2261, %r2237, %r2260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2264, %r2256, %r2261;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2267, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2269, %r2267, %r1909, %r1771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2273, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2275, %r2273, %r1920, %r1775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2279, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2281, %r2279, %r1931, %r1779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2285, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2287, %r2285, %r1942, %r1783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2291, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2293, %r2291, %r1955, %r1787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2297, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2299, %r2297, %r1966, %r1791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2303, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2305, %r2303, %r1977, %r1795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2309, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2311, %r2309, %r1988, %r1799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2315, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2317, %r2315, %r2001, %r1803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2321, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2323, %r2321, %r2012, %r1807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2327, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2329, %r2327, %r2023, %r1811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2333, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2335, %r2333, %r2034, %r1815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2339, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2341, %r2339, %r2047, %r1819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2345, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2347, %r2345, %r2058, %r1823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2351, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2353, %r2351, %r2069, %r1827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2357, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2359, %r2357, %r2080, %r1831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2363, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2365, %r2363, %r2093, %r1835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2369, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2371, %r2369, %r2104, %r1839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2375, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2377, %r2375, %r2115, %r1843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2381, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2383, %r2381, %r2126, %r1847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2387, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2389, %r2387, %r2139, %r1851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2393, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2395, %r2393, %r2150, %r1855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2399, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2401, %r2399, %r2161, %r1859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2405, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2407, %r2405, %r2172, %r1863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2411, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2413, %r2411, %r2185, %r1867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2417, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2419, %r2417, %r2196, %r1871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2423, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2425, %r2423, %r2207, %r1875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2429, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2431, %r2429, %r2218, %r1879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2435, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2437, %r2435, %r2231, %r1883;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2441, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2443, %r2441, %r2242, %r1887;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2447, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2449, %r2447, %r2253, %r1891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2453, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2455, %r2453, %r2264, %r1895;
	// end inline asm
	// begin inline asm
	mov.b32 %r2464, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2475, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2463, %r16341, -2004318072;
	// begin inline asm
	lop3.b32 %r2461, %r878, %r2463, %r2464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2466, %r2464, %r2465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2469, %r2461, %r2466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2472, %r889, %r2463, %r2475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2476, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2477, %r2475, %r2476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2480, %r2472, %r2477;
	// end inline asm
	shr.u32 	%r2485, %r2463, 8;
	// begin inline asm
	lop3.b32 %r2483, %r878, %r2485, %r2464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2487, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2488, %r2464, %r2487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2491, %r2483, %r2488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2494, %r889, %r2485, %r2475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2498, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2499, %r2475, %r2498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2502, %r2494, %r2499;
	// end inline asm
	// begin inline asm
	mov.b32 %r2510, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2521, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2509, %r16342, -2004318072;
	// begin inline asm
	lop3.b32 %r2507, %r878, %r2509, %r2510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2512, %r2510, %r2511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2515, %r2507, %r2512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2518, %r889, %r2509, %r2521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2522, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2523, %r2521, %r2522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2526, %r2518, %r2523;
	// end inline asm
	shr.u32 	%r2531, %r2509, 8;
	// begin inline asm
	lop3.b32 %r2529, %r878, %r2531, %r2510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2533, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2534, %r2510, %r2533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2537, %r2529, %r2534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2540, %r889, %r2531, %r2521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2544, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2545, %r2521, %r2544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2548, %r2540, %r2545;
	// end inline asm
	// begin inline asm
	mov.b32 %r2556, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2567, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2555, %r16343, -2004318072;
	// begin inline asm
	lop3.b32 %r2553, %r878, %r2555, %r2556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2558, %r2556, %r2557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2561, %r2553, %r2558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2564, %r889, %r2555, %r2567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2568, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2569, %r2567, %r2568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2572, %r2564, %r2569;
	// end inline asm
	shr.u32 	%r2577, %r2555, 8;
	// begin inline asm
	lop3.b32 %r2575, %r878, %r2577, %r2556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2579, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2580, %r2556, %r2579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2583, %r2575, %r2580;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2586, %r889, %r2577, %r2567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2590, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2591, %r2567, %r2590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2594, %r2586, %r2591;
	// end inline asm
	// begin inline asm
	mov.b32 %r2602, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2613, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2601, %r16344, -2004318072;
	// begin inline asm
	lop3.b32 %r2599, %r878, %r2601, %r2602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2604, %r2602, %r2603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2607, %r2599, %r2604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2610, %r889, %r2601, %r2613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2614, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2615, %r2613, %r2614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2618, %r2610, %r2615;
	// end inline asm
	shr.u32 	%r2623, %r2601, 8;
	// begin inline asm
	lop3.b32 %r2621, %r878, %r2623, %r2602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2625, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2626, %r2602, %r2625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2629, %r2621, %r2626;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2632, %r889, %r2623, %r2613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2636, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2637, %r2613, %r2636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2640, %r2632, %r2637;
	// end inline asm
	// begin inline asm
	mov.b32 %r2648, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2659, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2647, %r16353, -2004318072;
	// begin inline asm
	lop3.b32 %r2645, %r878, %r2647, %r2648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2649, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2650, %r2648, %r2649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2653, %r2645, %r2650;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2656, %r889, %r2647, %r2659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2660, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2661, %r2659, %r2660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2664, %r2656, %r2661;
	// end inline asm
	shr.u32 	%r2669, %r2647, 8;
	// begin inline asm
	lop3.b32 %r2667, %r878, %r2669, %r2648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2671, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2672, %r2648, %r2671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2675, %r2667, %r2672;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2678, %r889, %r2669, %r2659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2682, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2683, %r2659, %r2682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2686, %r2678, %r2683;
	// end inline asm
	// begin inline asm
	mov.b32 %r2694, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2705, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2693, %r16354, -2004318072;
	// begin inline asm
	lop3.b32 %r2691, %r878, %r2693, %r2694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2695, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2696, %r2694, %r2695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2699, %r2691, %r2696;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2702, %r889, %r2693, %r2705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2706, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2707, %r2705, %r2706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2710, %r2702, %r2707;
	// end inline asm
	shr.u32 	%r2715, %r2693, 8;
	// begin inline asm
	lop3.b32 %r2713, %r878, %r2715, %r2694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2717, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2718, %r2694, %r2717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2721, %r2713, %r2718;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2724, %r889, %r2715, %r2705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2728, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2729, %r2705, %r2728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2732, %r2724, %r2729;
	// end inline asm
	// begin inline asm
	mov.b32 %r2740, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2751, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2739, %r16355, -2004318072;
	// begin inline asm
	lop3.b32 %r2737, %r878, %r2739, %r2740, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2741, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2742, %r2740, %r2741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2745, %r2737, %r2742;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2748, %r889, %r2739, %r2751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2752, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2753, %r2751, %r2752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2756, %r2748, %r2753;
	// end inline asm
	shr.u32 	%r2761, %r2739, 8;
	// begin inline asm
	lop3.b32 %r2759, %r878, %r2761, %r2740, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2763, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2764, %r2740, %r2763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2767, %r2759, %r2764;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2770, %r889, %r2761, %r2751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2774, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2775, %r2751, %r2774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2778, %r2770, %r2775;
	// end inline asm
	// begin inline asm
	mov.b32 %r2786, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2797, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2785, %r16356, -2004318072;
	// begin inline asm
	lop3.b32 %r2783, %r878, %r2785, %r2786, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2787, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2788, %r2786, %r2787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2791, %r2783, %r2788;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2794, %r889, %r2785, %r2797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2798, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2799, %r2797, %r2798;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2802, %r2794, %r2799;
	// end inline asm
	shr.u32 	%r2807, %r2785, 8;
	// begin inline asm
	lop3.b32 %r2805, %r878, %r2807, %r2786, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2809, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2810, %r2786, %r2809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2813, %r2805, %r2810;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2816, %r889, %r2807, %r2797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2820, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2821, %r2797, %r2820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2824, %r2816, %r2821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2962, %r368, %r2469, %r2269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2959, %r368, %r2480, %r2275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2971, %r368, %r2491, %r2281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2968, %r368, %r2502, %r2287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2980, %r368, %r2515, %r2293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2977, %r368, %r2526, %r2299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2989, %r368, %r2537, %r2305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2986, %r368, %r2548, %r2311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2998, %r368, %r2561, %r2317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2995, %r368, %r2572, %r2323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3007, %r368, %r2583, %r2329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3004, %r368, %r2594, %r2335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3016, %r368, %r2607, %r2341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3013, %r368, %r2618, %r2347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3025, %r368, %r2629, %r2353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3022, %r368, %r2640, %r2359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3034, %r386, %r2653, %r2365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3031, %r386, %r2664, %r2371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3043, %r386, %r2675, %r2377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3040, %r386, %r2686, %r2383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3052, %r386, %r2699, %r2389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3049, %r386, %r2710, %r2395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3061, %r386, %r2721, %r2401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3058, %r386, %r2732, %r2407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3070, %r386, %r2745, %r2413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3067, %r386, %r2756, %r2419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3079, %r386, %r2767, %r2425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3076, %r386, %r2778, %r2431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3088, %r386, %r2791, %r2437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3085, %r386, %r2802, %r2443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3097, %r386, %r2813, %r2449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3094, %r386, %r2824, %r2455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2955, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2957, %r2955, %r2959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2960, %r425, %r2962, %r2957;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2964, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2966, %r2964, %r2968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2969, %r425, %r2971, %r2966;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2973, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2975, %r2973, %r2977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2978, %r425, %r2980, %r2975;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2982, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2984, %r2982, %r2986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2987, %r425, %r2989, %r2984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2991, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2993, %r2991, %r2995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2996, %r425, %r2998, %r2993;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3000, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3002, %r3000, %r3004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3005, %r425, %r3007, %r3002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3009, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3011, %r3009, %r3013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3014, %r425, %r3016, %r3011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3018, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3020, %r3018, %r3022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3023, %r425, %r3025, %r3020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3027, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3029, %r3027, %r3031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3032, %r428, %r3034, %r3029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3036, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3038, %r3036, %r3040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3041, %r428, %r3043, %r3038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3045, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3047, %r3045, %r3049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3050, %r428, %r3052, %r3047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3054, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3056, %r3054, %r3058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3059, %r428, %r3061, %r3056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3063, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3065, %r3063, %r3067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3068, %r428, %r3070, %r3065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3072, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3074, %r3072, %r3076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3077, %r428, %r3079, %r3074;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3081, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3083, %r3081, %r3085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3086, %r428, %r3088, %r3083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3090, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3092, %r3090, %r3094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3095, %r428, %r3097, %r3092;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3099, %r431, %r2962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3102, %r425, %r2959, %r3099;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3106, %r431, %r2971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3109, %r425, %r2968, %r3106;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3113, %r431, %r2980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3116, %r425, %r2977, %r3113;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3120, %r431, %r2989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3123, %r425, %r2986, %r3120;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3127, %r431, %r2998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3130, %r425, %r2995, %r3127;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3134, %r431, %r3007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3137, %r425, %r3004, %r3134;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3141, %r431, %r3016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3144, %r425, %r3013, %r3141;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3148, %r431, %r3025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3151, %r425, %r3022, %r3148;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3155, %r434, %r3034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3158, %r428, %r3031, %r3155;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3162, %r434, %r3043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3165, %r428, %r3040, %r3162;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3169, %r434, %r3052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3172, %r428, %r3049, %r3169;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3176, %r434, %r3061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3179, %r428, %r3058, %r3176;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3183, %r434, %r3070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3186, %r428, %r3067, %r3183;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3190, %r434, %r3079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3193, %r428, %r3076, %r3190;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3197, %r434, %r3088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3200, %r428, %r3085, %r3197;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3204, %r434, %r3097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3207, %r428, %r3094, %r3204;
	// end inline asm
	mov.u32 	%r3219, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3378, %r3375}, {%r492, %r498, %r495, %r501}, {%r2960, %r3102}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3387, %r3384}, {%r492, %r498, %r495, %r501}, {%r2969, %r3109}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3396, %r3393}, {%r492, %r498, %r495, %r501}, {%r2978, %r3116}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3405, %r3402}, {%r492, %r498, %r495, %r501}, {%r2987, %r3123}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3414, %r3411}, {%r492, %r498, %r495, %r501}, {%r2996, %r3130}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3423, %r3420}, {%r492, %r498, %r495, %r501}, {%r3005, %r3137}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3432, %r3429}, {%r492, %r498, %r495, %r501}, {%r3014, %r3144}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3441, %r3438}, {%r492, %r498, %r495, %r501}, {%r3023, %r3151}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3450, %r3447}, {%r492, %r498, %r495, %r501}, {%r3032, %r3158}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3459, %r3456}, {%r492, %r498, %r495, %r501}, {%r3041, %r3165}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3468, %r3465}, {%r492, %r498, %r495, %r501}, {%r3050, %r3172}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3477, %r3474}, {%r492, %r498, %r495, %r501}, {%r3059, %r3179}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3486, %r3483}, {%r492, %r498, %r495, %r501}, {%r3068, %r3186}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3495, %r3492}, {%r492, %r498, %r495, %r501}, {%r3077, %r3193}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3504, %r3501}, {%r492, %r498, %r495, %r501}, {%r3086, %r3200}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3513, %r3510}, {%r492, %r498, %r495, %r501}, {%r3095, %r3207}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3371, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3373, %r3371, %r3375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3376, %r542, %r3378, %r3373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3380, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3382, %r3380, %r3384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3385, %r542, %r3387, %r3382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3389, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3391, %r3389, %r3393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3394, %r542, %r3396, %r3391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3398, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3400, %r3398, %r3402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3403, %r542, %r3405, %r3400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3407, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3409, %r3407, %r3411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3412, %r542, %r3414, %r3409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3416, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3418, %r3416, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3421, %r542, %r3423, %r3418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3425, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3427, %r3425, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3430, %r542, %r3432, %r3427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3434, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3436, %r3434, %r3438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3439, %r542, %r3441, %r3436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3443, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3445, %r3443, %r3447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3448, %r542, %r3450, %r3445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3452, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3454, %r3452, %r3456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3457, %r542, %r3459, %r3454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3461, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3463, %r3461, %r3465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3466, %r542, %r3468, %r3463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3470, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3472, %r3470, %r3474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3475, %r542, %r3477, %r3472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3479, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3481, %r3479, %r3483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3484, %r542, %r3486, %r3481;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3488, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3490, %r3488, %r3492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3493, %r542, %r3495, %r3490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3497, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3499, %r3497, %r3501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3502, %r542, %r3504, %r3499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3506, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3508, %r3506, %r3510;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3511, %r542, %r3513, %r3508;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3515, %r545, %r3378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3518, %r542, %r3375, %r3515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3522, %r545, %r3387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3525, %r542, %r3384, %r3522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3529, %r545, %r3396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3532, %r542, %r3393, %r3529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3536, %r545, %r3405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3539, %r542, %r3402, %r3536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3543, %r545, %r3414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3546, %r542, %r3411, %r3543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3550, %r545, %r3423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3553, %r542, %r3420, %r3550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3557, %r545, %r3432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3560, %r542, %r3429, %r3557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3564, %r545, %r3441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3567, %r542, %r3438, %r3564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3571, %r545, %r3450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3574, %r542, %r3447, %r3571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3578, %r545, %r3459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3581, %r542, %r3456, %r3578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3585, %r545, %r3468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3588, %r542, %r3465, %r3585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3592, %r545, %r3477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3595, %r542, %r3474, %r3592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3599, %r545, %r3486;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3602, %r542, %r3483, %r3599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3606, %r545, %r3495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3609, %r542, %r3492, %r3606;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3613, %r545, %r3504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3616, %r542, %r3501, %r3613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3620, %r545, %r3513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3623, %r542, %r3510, %r3620;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3916, %r3919}, {%r580, %r586, %r583, %r589}, {%r3376, %r3518}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3922, %r3925}, {%r580, %r586, %r583, %r589}, {%r3385, %r3525}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3928, %r3931}, {%r580, %r586, %r583, %r589}, {%r3394, %r3532}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3934, %r3937}, {%r580, %r586, %r583, %r589}, {%r3403, %r3539}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3940, %r3943}, {%r580, %r586, %r583, %r589}, {%r3412, %r3546}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3946, %r3949}, {%r580, %r586, %r583, %r589}, {%r3421, %r3553}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3952, %r3955}, {%r580, %r586, %r583, %r589}, {%r3430, %r3560}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3958, %r3961}, {%r580, %r586, %r583, %r589}, {%r3439, %r3567}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3917, %r3920}, {%r580, %r586, %r583, %r589}, {%r3448, %r3574}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3923, %r3926}, {%r580, %r586, %r583, %r589}, {%r3457, %r3581}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3929, %r3932}, {%r580, %r586, %r583, %r589}, {%r3466, %r3588}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3935, %r3938}, {%r580, %r586, %r583, %r589}, {%r3475, %r3595}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3941, %r3944}, {%r580, %r586, %r583, %r589}, {%r3484, %r3602}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3947, %r3950}, {%r580, %r586, %r583, %r589}, {%r3493, %r3609}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3953, %r3956}, {%r580, %r586, %r583, %r589}, {%r3502, %r3616}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3959, %r3962}, {%r580, %r586, %r583, %r589}, {%r3511, %r3623}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3915, %r3916, %r3917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3918, %r3919, %r3920;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3921, %r3922, %r3923;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3924, %r3925, %r3926;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3927, %r3928, %r3929;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3930, %r3931, %r3932;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3933, %r3934, %r3935;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3936, %r3937, %r3938;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3939, %r3940, %r3941;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3942, %r3943, %r3944;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3945, %r3946, %r3947;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3948, %r3949, %r3950;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3951, %r3952, %r3953;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3954, %r3955, %r3956;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3957, %r3958, %r3959;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3960, %r3961, %r3962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3963, %r3916, %r3917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3966, %r3919, %r3920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3969, %r3922, %r3923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3972, %r3925, %r3926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3975, %r3928, %r3929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3978, %r3931, %r3932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3981, %r3934, %r3935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3984, %r3937, %r3938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3987, %r3940, %r3941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3990, %r3943, %r3944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3993, %r3946, %r3947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3996, %r3949, %r3950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3999, %r3952, %r3953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4002, %r3955, %r3956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4005, %r3958, %r3959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4008, %r3961, %r3962;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4011, %r182, %r3915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4014, %r182, %r3918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4017, %r182, %r3921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4020, %r182, %r3924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4023, %r182, %r3927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4026, %r182, %r3930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4029, %r182, %r3933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4032, %r182, %r3936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4035, %r182, %r3939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4038, %r182, %r3942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4041, %r182, %r3945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4044, %r182, %r3948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4047, %r182, %r3951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4050, %r182, %r3954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4053, %r182, %r3957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4056, %r182, %r3960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4059, %r184, %r3963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4062, %r184, %r3966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4065, %r184, %r3969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4068, %r184, %r3972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4071, %r184, %r3975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4074, %r184, %r3978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4077, %r184, %r3981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4080, %r184, %r3984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4083, %r184, %r3987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4086, %r184, %r3990;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4089, %r184, %r3993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4092, %r184, %r3996;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4095, %r184, %r3999;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4098, %r184, %r4002;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4101, %r184, %r4005;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4104, %r184, %r4008;
	// end inline asm
	// begin inline asm
	mov.b32 %r4107, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4108, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4109, %r4011, %r4107;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4112, %r4109, %r4108;
	// end inline asm
	// begin inline asm
	mov.b32 %r4115, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4116, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4117, %r4014, %r4115;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4120, %r4117, %r4116;
	// end inline asm
	// begin inline asm
	mov.b32 %r4123, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4124, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4125, %r4017, %r4123;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4128, %r4125, %r4124;
	// end inline asm
	// begin inline asm
	mov.b32 %r4131, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4132, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4133, %r4020, %r4131;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4136, %r4133, %r4132;
	// end inline asm
	// begin inline asm
	mov.b32 %r4139, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4140, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4141, %r4023, %r4139;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4144, %r4141, %r4140;
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4148, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4149, %r4026, %r4147;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4152, %r4149, %r4148;
	// end inline asm
	// begin inline asm
	mov.b32 %r4155, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4156, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4157, %r4029, %r4155;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4160, %r4157, %r4156;
	// end inline asm
	// begin inline asm
	mov.b32 %r4163, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4164, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4165, %r4032, %r4163;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4168, %r4165, %r4164;
	// end inline asm
	// begin inline asm
	mov.b32 %r4171, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4172, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4173, %r4035, %r4171;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4176, %r4173, %r4172;
	// end inline asm
	// begin inline asm
	mov.b32 %r4179, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4180, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4181, %r4038, %r4179;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4184, %r4181, %r4180;
	// end inline asm
	// begin inline asm
	mov.b32 %r4187, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4188, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4189, %r4041, %r4187;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4192, %r4189, %r4188;
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4196, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4197, %r4044, %r4195;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4200, %r4197, %r4196;
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4204, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4205, %r4047, %r4203;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4208, %r4205, %r4204;
	// end inline asm
	// begin inline asm
	mov.b32 %r4211, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4212, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4213, %r4050, %r4211;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4216, %r4213, %r4212;
	// end inline asm
	// begin inline asm
	mov.b32 %r4219, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4220, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4221, %r4053, %r4219;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4224, %r4221, %r4220;
	// end inline asm
	// begin inline asm
	mov.b32 %r4227, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4228, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4229, %r4056, %r4227;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4232, %r4229, %r4228;
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4236, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4237, %r4059, %r4235;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4240, %r4237, %r4236;
	// end inline asm
	// begin inline asm
	mov.b32 %r4243, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4244, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4245, %r4062, %r4243;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4248, %r4245, %r4244;
	// end inline asm
	// begin inline asm
	mov.b32 %r4251, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4252, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4253, %r4065, %r4251;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4256, %r4253, %r4252;
	// end inline asm
	// begin inline asm
	mov.b32 %r4259, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4260, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4261, %r4068, %r4259;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4264, %r4261, %r4260;
	// end inline asm
	// begin inline asm
	mov.b32 %r4267, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4268, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4269, %r4071, %r4267;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4272, %r4269, %r4268;
	// end inline asm
	// begin inline asm
	mov.b32 %r4275, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4276, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4277, %r4074, %r4275;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4280, %r4277, %r4276;
	// end inline asm
	// begin inline asm
	mov.b32 %r4283, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4284, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4285, %r4077, %r4283;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4288, %r4285, %r4284;
	// end inline asm
	// begin inline asm
	mov.b32 %r4291, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4292, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4293, %r4080, %r4291;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4296, %r4293, %r4292;
	// end inline asm
	// begin inline asm
	mov.b32 %r4299, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4300, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4301, %r4083, %r4299;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4304, %r4301, %r4300;
	// end inline asm
	// begin inline asm
	mov.b32 %r4307, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4308, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4309, %r4086, %r4307;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4312, %r4309, %r4308;
	// end inline asm
	// begin inline asm
	mov.b32 %r4315, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4316, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4317, %r4089, %r4315;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4320, %r4317, %r4316;
	// end inline asm
	// begin inline asm
	mov.b32 %r4323, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4324, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4325, %r4092, %r4323;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4328, %r4325, %r4324;
	// end inline asm
	// begin inline asm
	mov.b32 %r4331, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4332, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4333, %r4095, %r4331;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4336, %r4333, %r4332;
	// end inline asm
	// begin inline asm
	mov.b32 %r4339, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4340, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4341, %r4098, %r4339;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4344, %r4341, %r4340;
	// end inline asm
	// begin inline asm
	mov.b32 %r4347, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4348, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4349, %r4101, %r4347;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4352, %r4349, %r4348;
	// end inline asm
	// begin inline asm
	mov.b32 %r4355, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4356, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4357, %r4104, %r4355;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4360, %r4357, %r4356;
	// end inline asm
	// begin inline asm
	mov.b32 %r4366, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4364, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4365, %r4366, %r4364;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4368, %r4112, %r4365;
	// end inline asm
	// begin inline asm
	mov.b32 %r4371, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4372, %r4366, %r4371;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4375, %r4120, %r4372;
	// end inline asm
	// begin inline asm
	mov.b32 %r4378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4379, %r4366, %r4378;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4382, %r4128, %r4379;
	// end inline asm
	// begin inline asm
	mov.b32 %r4385, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4386, %r4366, %r4385;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4389, %r4136, %r4386;
	// end inline asm
	mov.u32 	%r4395, 25152;
	// begin inline asm
	prmt.b32 %r4392, %r4368, %r4382, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4396, %r4375, %r4389, %r4395;
	// end inline asm
	shl.b32 	%r4403, %r4396, 4;
	mov.u32 	%r4401, 252645135;
	// begin inline asm
	lop3.b32 %r4400, %r4401, %r4392, %r4403, 202;
	// end inline asm
	xor.b32  	%r16188, %r4400, -2004318072;
	// begin inline asm
	mov.b32 %r4407, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4405, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4406, %r4407, %r4405;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4409, %r4144, %r4406;
	// end inline asm
	// begin inline asm
	mov.b32 %r4412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4413, %r4407, %r4412;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4416, %r4152, %r4413;
	// end inline asm
	// begin inline asm
	mov.b32 %r4419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4420, %r4407, %r4419;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4423, %r4160, %r4420;
	// end inline asm
	// begin inline asm
	mov.b32 %r4426, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4427, %r4407, %r4426;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4430, %r4168, %r4427;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4433, %r4409, %r4423, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4437, %r4416, %r4430, %r4395;
	// end inline asm
	shl.b32 	%r4444, %r4437, 4;
	// begin inline asm
	lop3.b32 %r4441, %r4401, %r4433, %r4444, 202;
	// end inline asm
	xor.b32  	%r16189, %r4441, -2004318072;
	// begin inline asm
	mov.b32 %r4448, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4447, %r4448, %r4446;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4450, %r4176, %r4447;
	// end inline asm
	// begin inline asm
	mov.b32 %r4453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4454, %r4448, %r4453;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4457, %r4184, %r4454;
	// end inline asm
	// begin inline asm
	mov.b32 %r4460, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4461, %r4448, %r4460;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4464, %r4192, %r4461;
	// end inline asm
	// begin inline asm
	mov.b32 %r4467, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4468, %r4448, %r4467;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4471, %r4200, %r4468;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4474, %r4450, %r4464, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4478, %r4457, %r4471, %r4395;
	// end inline asm
	shl.b32 	%r4485, %r4478, 4;
	// begin inline asm
	lop3.b32 %r4482, %r4401, %r4474, %r4485, 202;
	// end inline asm
	xor.b32  	%r16190, %r4482, -2004318072;
	// begin inline asm
	mov.b32 %r4489, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4487, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4488, %r4489, %r4487;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4491, %r4208, %r4488;
	// end inline asm
	// begin inline asm
	mov.b32 %r4494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4495, %r4489, %r4494;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4498, %r4216, %r4495;
	// end inline asm
	// begin inline asm
	mov.b32 %r4501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4502, %r4489, %r4501;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4505, %r4224, %r4502;
	// end inline asm
	// begin inline asm
	mov.b32 %r4508, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4509, %r4489, %r4508;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4512, %r4232, %r4509;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4515, %r4491, %r4505, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4519, %r4498, %r4512, %r4395;
	// end inline asm
	shl.b32 	%r4526, %r4519, 4;
	// begin inline asm
	lop3.b32 %r4523, %r4401, %r4515, %r4526, 202;
	// end inline asm
	xor.b32  	%r16191, %r4523, -2004318072;
	// begin inline asm
	mov.b32 %r4530, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4529, %r4530, %r4528;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4532, %r4240, %r4529;
	// end inline asm
	// begin inline asm
	mov.b32 %r4535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4536, %r4530, %r4535;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4539, %r4248, %r4536;
	// end inline asm
	// begin inline asm
	mov.b32 %r4542, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4543, %r4530, %r4542;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4546, %r4256, %r4543;
	// end inline asm
	// begin inline asm
	mov.b32 %r4549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4550, %r4530, %r4549;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4553, %r4264, %r4550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4556, %r4532, %r4546, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4560, %r4539, %r4553, %r4395;
	// end inline asm
	shl.b32 	%r4567, %r4560, 4;
	// begin inline asm
	lop3.b32 %r4564, %r4401, %r4556, %r4567, 202;
	// end inline asm
	xor.b32  	%r16192, %r4564, -2004318072;
	// begin inline asm
	mov.b32 %r4571, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4569, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4570, %r4571, %r4569;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4573, %r4272, %r4570;
	// end inline asm
	// begin inline asm
	mov.b32 %r4576, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4577, %r4571, %r4576;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4580, %r4280, %r4577;
	// end inline asm
	// begin inline asm
	mov.b32 %r4583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4584, %r4571, %r4583;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4587, %r4288, %r4584;
	// end inline asm
	// begin inline asm
	mov.b32 %r4590, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4591, %r4571, %r4590;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4594, %r4296, %r4591;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4597, %r4573, %r4587, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4601, %r4580, %r4594, %r4395;
	// end inline asm
	shl.b32 	%r4608, %r4601, 4;
	// begin inline asm
	lop3.b32 %r4605, %r4401, %r4597, %r4608, 202;
	// end inline asm
	xor.b32  	%r16193, %r4605, -2004318072;
	// begin inline asm
	mov.b32 %r4612, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4610, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4611, %r4612, %r4610;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4614, %r4304, %r4611;
	// end inline asm
	// begin inline asm
	mov.b32 %r4617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4618, %r4612, %r4617;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4621, %r4312, %r4618;
	// end inline asm
	// begin inline asm
	mov.b32 %r4624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4625, %r4612, %r4624;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4628, %r4320, %r4625;
	// end inline asm
	// begin inline asm
	mov.b32 %r4631, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4632, %r4612, %r4631;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4635, %r4328, %r4632;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4638, %r4614, %r4628, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4642, %r4621, %r4635, %r4395;
	// end inline asm
	shl.b32 	%r4649, %r4642, 4;
	// begin inline asm
	lop3.b32 %r4646, %r4401, %r4638, %r4649, 202;
	// end inline asm
	xor.b32  	%r16194, %r4646, -2004318072;
	// begin inline asm
	mov.b32 %r4653, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4651, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4652, %r4653, %r4651;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4655, %r4336, %r4652;
	// end inline asm
	// begin inline asm
	mov.b32 %r4658, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4659, %r4653, %r4658;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4662, %r4344, %r4659;
	// end inline asm
	// begin inline asm
	mov.b32 %r4665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4666, %r4653, %r4665;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4669, %r4352, %r4666;
	// end inline asm
	// begin inline asm
	mov.b32 %r4672, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4673, %r4653, %r4672;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4676, %r4360, %r4673;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4679, %r4655, %r4669, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4683, %r4662, %r4676, %r4395;
	// end inline asm
	shl.b32 	%r4690, %r4683, 4;
	// begin inline asm
	lop3.b32 %r4687, %r4401, %r4679, %r4690, 202;
	// end inline asm
	xor.b32  	%r16195, %r4687, -2004318072;
	add.s32 	%r16196, %r77, %r16139;
	mul.wide.u32 	%rd92, %r16196, 4;
	add.s64 	%rd93, %rd35, %rd92;
	st.shared.u32 	[%rd93], %r16188;
	add.s32 	%r16197, %r78, %r16139;
	mul.wide.u32 	%rd94, %r16197, 4;
	add.s64 	%rd95, %rd35, %rd94;
	st.shared.u32 	[%rd95], %r16189;
	add.s32 	%r16198, %r79, %r16139;
	mul.wide.u32 	%rd96, %r16198, 4;
	add.s64 	%rd97, %rd35, %rd96;
	st.shared.u32 	[%rd97], %r16190;
	add.s32 	%r16199, %r80, %r16139;
	mul.wide.u32 	%rd98, %r16199, 4;
	add.s64 	%rd99, %rd35, %rd98;
	st.shared.u32 	[%rd99], %r16191;
	add.s32 	%r16200, %r81, %r16139;
	mul.wide.u32 	%rd100, %r16200, 4;
	add.s64 	%rd101, %rd35, %rd100;
	st.shared.u32 	[%rd101], %r16192;
	add.s32 	%r16201, %r82, %r16139;
	mul.wide.u32 	%rd102, %r16201, 4;
	add.s64 	%rd103, %rd35, %rd102;
	st.shared.u32 	[%rd103], %r16193;
	add.s32 	%r16202, %r83, %r16139;
	mul.wide.u32 	%rd104, %r16202, 4;
	add.s64 	%rd105, %rd35, %rd104;
	st.shared.u32 	[%rd105], %r16194;
	add.s32 	%r16203, %r84, %r16139;
	mul.wide.u32 	%rd106, %r16203, 4;
	add.s64 	%rd107, %rd35, %rd106;
	st.shared.u32 	[%rd107], %r16195;
	ld.shared.u32 	%r16333, [%rd77];
	ld.shared.u32 	%r16334, [%rd79];
	ld.shared.u32 	%r16335, [%rd81];
	ld.shared.u32 	%r16336, [%rd83];
	ld.shared.u32 	%r16345, [%rd85];
	ld.shared.u32 	%r16346, [%rd87];
	ld.shared.u32 	%r16347, [%rd89];
	ld.shared.u32 	%r16348, [%rd91];
	// begin inline asm
	mov.b32 %r4696, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4707, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4695, %r16333, -2004318072;
	// begin inline asm
	lop3.b32 %r4693, %r878, %r4695, %r4696, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4697, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4698, %r4696, %r4697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4701, %r4693, %r4698;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4704, %r889, %r4695, %r4707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4708, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4709, %r4707, %r4708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4712, %r4704, %r4709;
	// end inline asm
	shr.u32 	%r4717, %r4695, 8;
	// begin inline asm
	lop3.b32 %r4715, %r878, %r4717, %r4696, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4719, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4720, %r4696, %r4719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4723, %r4715, %r4720;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4726, %r889, %r4717, %r4707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4730, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4731, %r4707, %r4730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4734, %r4726, %r4731;
	// end inline asm
	// begin inline asm
	mov.b32 %r4742, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4753, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4741, %r16334, -2004318072;
	// begin inline asm
	lop3.b32 %r4739, %r878, %r4741, %r4742, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4743, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4744, %r4742, %r4743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4747, %r4739, %r4744;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4750, %r889, %r4741, %r4753, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4754, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4755, %r4753, %r4754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4758, %r4750, %r4755;
	// end inline asm
	shr.u32 	%r4763, %r4741, 8;
	// begin inline asm
	lop3.b32 %r4761, %r878, %r4763, %r4742, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4765, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4766, %r4742, %r4765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4769, %r4761, %r4766;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4772, %r889, %r4763, %r4753, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4776, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4777, %r4753, %r4776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4780, %r4772, %r4777;
	// end inline asm
	// begin inline asm
	mov.b32 %r4788, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4799, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4787, %r16335, -2004318072;
	// begin inline asm
	lop3.b32 %r4785, %r878, %r4787, %r4788, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4789, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4790, %r4788, %r4789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4793, %r4785, %r4790;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4796, %r889, %r4787, %r4799, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4800, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4801, %r4799, %r4800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4804, %r4796, %r4801;
	// end inline asm
	shr.u32 	%r4809, %r4787, 8;
	// begin inline asm
	lop3.b32 %r4807, %r878, %r4809, %r4788, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4811, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4812, %r4788, %r4811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4815, %r4807, %r4812;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4818, %r889, %r4809, %r4799, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4822, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4823, %r4799, %r4822;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4826, %r4818, %r4823;
	// end inline asm
	// begin inline asm
	mov.b32 %r4834, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4845, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4833, %r16336, -2004318072;
	// begin inline asm
	lop3.b32 %r4831, %r878, %r4833, %r4834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4835, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4836, %r4834, %r4835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4839, %r4831, %r4836;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4842, %r889, %r4833, %r4845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4846, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4847, %r4845, %r4846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4850, %r4842, %r4847;
	// end inline asm
	shr.u32 	%r4855, %r4833, 8;
	// begin inline asm
	lop3.b32 %r4853, %r878, %r4855, %r4834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4857, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4858, %r4834, %r4857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4861, %r4853, %r4858;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4864, %r889, %r4855, %r4845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4868, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4869, %r4845, %r4868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4872, %r4864, %r4869;
	// end inline asm
	// begin inline asm
	mov.b32 %r4880, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4891, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4879, %r16345, -2004318072;
	// begin inline asm
	lop3.b32 %r4877, %r878, %r4879, %r4880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4881, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4882, %r4880, %r4881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4885, %r4877, %r4882;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4888, %r889, %r4879, %r4891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4892, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4893, %r4891, %r4892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4896, %r4888, %r4893;
	// end inline asm
	shr.u32 	%r4901, %r4879, 8;
	// begin inline asm
	lop3.b32 %r4899, %r878, %r4901, %r4880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4903, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4904, %r4880, %r4903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4907, %r4899, %r4904;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4910, %r889, %r4901, %r4891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4914, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4915, %r4891, %r4914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4918, %r4910, %r4915;
	// end inline asm
	// begin inline asm
	mov.b32 %r4926, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4937, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4925, %r16346, -2004318072;
	// begin inline asm
	lop3.b32 %r4923, %r878, %r4925, %r4926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4927, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4928, %r4926, %r4927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4931, %r4923, %r4928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4934, %r889, %r4925, %r4937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4938, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4939, %r4937, %r4938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4942, %r4934, %r4939;
	// end inline asm
	shr.u32 	%r4947, %r4925, 8;
	// begin inline asm
	lop3.b32 %r4945, %r878, %r4947, %r4926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4949, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4950, %r4926, %r4949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4953, %r4945, %r4950;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4956, %r889, %r4947, %r4937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4960, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4961, %r4937, %r4960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4964, %r4956, %r4961;
	// end inline asm
	// begin inline asm
	mov.b32 %r4972, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4983, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4971, %r16347, -2004318072;
	// begin inline asm
	lop3.b32 %r4969, %r878, %r4971, %r4972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4973, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4974, %r4972, %r4973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4977, %r4969, %r4974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4980, %r889, %r4971, %r4983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4984, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4985, %r4983, %r4984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4988, %r4980, %r4985;
	// end inline asm
	shr.u32 	%r4993, %r4971, 8;
	// begin inline asm
	lop3.b32 %r4991, %r878, %r4993, %r4972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4995, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4996, %r4972, %r4995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4999, %r4991, %r4996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5002, %r889, %r4993, %r4983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5006, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5007, %r4983, %r5006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5010, %r5002, %r5007;
	// end inline asm
	// begin inline asm
	mov.b32 %r5018, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5029, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r5017, %r16348, -2004318072;
	// begin inline asm
	lop3.b32 %r5015, %r878, %r5017, %r5018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5020, %r5018, %r5019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5023, %r5015, %r5020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5026, %r889, %r5017, %r5029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5030, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5031, %r5029, %r5030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5034, %r5026, %r5031;
	// end inline asm
	shr.u32 	%r5039, %r5017, 8;
	// begin inline asm
	lop3.b32 %r5037, %r878, %r5039, %r5018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5041, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5042, %r5018, %r5041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5045, %r5037, %r5042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5048, %r889, %r5039, %r5029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5052, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5053, %r5029, %r5052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5056, %r5048, %r5053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5059, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5061, %r5059, %r4701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5064, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5066, %r5064, %r4712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5069, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5071, %r5069, %r4723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5074, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5076, %r5074, %r4734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5079, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5081, %r5079, %r4747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5084, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5086, %r5084, %r4758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5089, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5091, %r5089, %r4769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5094, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5096, %r5094, %r4780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5099, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5101, %r5099, %r4793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5104, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5106, %r5104, %r4804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5109, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5111, %r5109, %r4815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5114, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5116, %r5114, %r4826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5119, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5121, %r5119, %r4839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5124, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5126, %r5124, %r4850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5129, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5131, %r5129, %r4861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5134, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5136, %r5134, %r4872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5139, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5141, %r5139, %r4885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5144, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5146, %r5144, %r4896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5149, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5151, %r5149, %r4907;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5154, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5156, %r5154, %r4918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5159, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5161, %r5159, %r4931;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5164, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5166, %r5164, %r4942;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5169, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5171, %r5169, %r4953;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5174, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5176, %r5174, %r4964;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5179, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5181, %r5179, %r4977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5184, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5186, %r5184, %r4988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5189, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5191, %r5189, %r4999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5194, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5196, %r5194, %r5010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5199, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5201, %r5199, %r5023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5204, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5206, %r5204, %r5034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5209, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5211, %r5209, %r5045;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5214, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5216, %r5214, %r5056;
	// end inline asm
	// begin inline asm
	mov.b32 %r5224, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5235, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5221, %r878, %r1903, %r5224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5225, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5226, %r5224, %r5225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5229, %r5221, %r5226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5232, %r889, %r1903, %r5235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5236, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5237, %r5235, %r5236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5240, %r5232, %r5237;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5243, %r878, %r1925, %r5224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5247, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5248, %r5224, %r5247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5251, %r5243, %r5248;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5254, %r889, %r1925, %r5235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5258, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5259, %r5235, %r5258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5262, %r5254, %r5259;
	// end inline asm
	// begin inline asm
	mov.b32 %r5270, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5281, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5267, %r878, %r1949, %r5270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5272, %r5270, %r5271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5275, %r5267, %r5272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5278, %r889, %r1949, %r5281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5282, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5283, %r5281, %r5282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5286, %r5278, %r5283;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5289, %r878, %r1971, %r5270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5293, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5294, %r5270, %r5293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5297, %r5289, %r5294;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5300, %r889, %r1971, %r5281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5304, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5305, %r5281, %r5304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5308, %r5300, %r5305;
	// end inline asm
	// begin inline asm
	mov.b32 %r5316, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5327, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5313, %r878, %r1995, %r5316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5317, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5318, %r5316, %r5317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5321, %r5313, %r5318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5324, %r889, %r1995, %r5327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5328, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5329, %r5327, %r5328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5332, %r5324, %r5329;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5335, %r878, %r2017, %r5316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5339, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5340, %r5316, %r5339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5343, %r5335, %r5340;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5346, %r889, %r2017, %r5327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5350, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5351, %r5327, %r5350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5354, %r5346, %r5351;
	// end inline asm
	// begin inline asm
	mov.b32 %r5362, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5373, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5359, %r878, %r2041, %r5362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5364, %r5362, %r5363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5367, %r5359, %r5364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5370, %r889, %r2041, %r5373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5374, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5375, %r5373, %r5374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5378, %r5370, %r5375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5381, %r878, %r2063, %r5362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5385, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5386, %r5362, %r5385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5389, %r5381, %r5386;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5392, %r889, %r2063, %r5373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5396, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5397, %r5373, %r5396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5400, %r5392, %r5397;
	// end inline asm
	// begin inline asm
	mov.b32 %r5408, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5419, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5405, %r878, %r2087, %r5408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5410, %r5408, %r5409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5413, %r5405, %r5410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5416, %r889, %r2087, %r5419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5420, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5421, %r5419, %r5420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5424, %r5416, %r5421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5427, %r878, %r2109, %r5408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5431, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5432, %r5408, %r5431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5435, %r5427, %r5432;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5438, %r889, %r2109, %r5419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5443, %r5419, %r5442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5446, %r5438, %r5443;
	// end inline asm
	// begin inline asm
	mov.b32 %r5454, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5465, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5451, %r878, %r2133, %r5454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5456, %r5454, %r5455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5459, %r5451, %r5456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5462, %r889, %r2133, %r5465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5466, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5467, %r5465, %r5466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5470, %r5462, %r5467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5473, %r878, %r2155, %r5454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5477, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5478, %r5454, %r5477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5481, %r5473, %r5478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5484, %r889, %r2155, %r5465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5488, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5489, %r5465, %r5488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5492, %r5484, %r5489;
	// end inline asm
	// begin inline asm
	mov.b32 %r5500, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5511, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5497, %r878, %r2179, %r5500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5502, %r5500, %r5501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5505, %r5497, %r5502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5508, %r889, %r2179, %r5511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5512, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5513, %r5511, %r5512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5516, %r5508, %r5513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5519, %r878, %r2201, %r5500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5523, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5524, %r5500, %r5523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5527, %r5519, %r5524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5530, %r889, %r2201, %r5511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5534, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5535, %r5511, %r5534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5538, %r5530, %r5535;
	// end inline asm
	// begin inline asm
	mov.b32 %r5546, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5557, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5543, %r878, %r2225, %r5546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5548, %r5546, %r5547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5551, %r5543, %r5548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5554, %r889, %r2225, %r5557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5559, %r5557, %r5558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5562, %r5554, %r5559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5565, %r878, %r2247, %r5546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5569, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5570, %r5546, %r5569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5573, %r5565, %r5570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5576, %r889, %r2247, %r5557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5580, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5581, %r5557, %r5580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5584, %r5576, %r5581;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5587, %r296, %r5229, %r5061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5591, %r296, %r5240, %r5066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5595, %r296, %r5251, %r5071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5599, %r296, %r5262, %r5076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5603, %r296, %r5275, %r5081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5607, %r296, %r5286, %r5086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5611, %r296, %r5297, %r5091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5615, %r296, %r5308, %r5096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5619, %r296, %r5321, %r5101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5623, %r296, %r5332, %r5106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5627, %r296, %r5343, %r5111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5631, %r296, %r5354, %r5116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5635, %r296, %r5367, %r5121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5639, %r296, %r5378, %r5126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5643, %r296, %r5389, %r5131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5647, %r296, %r5400, %r5136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5651, %r314, %r5413, %r5141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5655, %r314, %r5424, %r5146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5659, %r314, %r5435, %r5151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5663, %r314, %r5446, %r5156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5667, %r314, %r5459, %r5161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5671, %r314, %r5470, %r5166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5675, %r314, %r5481, %r5171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5679, %r314, %r5492, %r5176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5683, %r314, %r5505, %r5181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5687, %r314, %r5516, %r5186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5691, %r314, %r5527, %r5191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5695, %r314, %r5538, %r5196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5699, %r314, %r5551, %r5201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5703, %r314, %r5562, %r5206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5707, %r314, %r5573, %r5211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5711, %r314, %r5584, %r5216;
	// end inline asm
	// begin inline asm
	mov.b32 %r5720, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5731, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5717, %r878, %r2463, %r5720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5721, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5722, %r5720, %r5721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5725, %r5717, %r5722;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5728, %r889, %r2463, %r5731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5732, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5733, %r5731, %r5732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5736, %r5728, %r5733;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5739, %r878, %r2485, %r5720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5743, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5744, %r5720, %r5743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5747, %r5739, %r5744;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5750, %r889, %r2485, %r5731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5754, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5755, %r5731, %r5754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5758, %r5750, %r5755;
	// end inline asm
	// begin inline asm
	mov.b32 %r5766, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5777, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5763, %r878, %r2509, %r5766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5767, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5768, %r5766, %r5767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5771, %r5763, %r5768;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5774, %r889, %r2509, %r5777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5778, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5779, %r5777, %r5778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5782, %r5774, %r5779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5785, %r878, %r2531, %r5766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5789, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5790, %r5766, %r5789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5793, %r5785, %r5790;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5796, %r889, %r2531, %r5777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5800, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5801, %r5777, %r5800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5804, %r5796, %r5801;
	// end inline asm
	// begin inline asm
	mov.b32 %r5812, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5823, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5809, %r878, %r2555, %r5812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5813, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5814, %r5812, %r5813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5817, %r5809, %r5814;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5820, %r889, %r2555, %r5823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5824, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5825, %r5823, %r5824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5828, %r5820, %r5825;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5831, %r878, %r2577, %r5812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5835, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5836, %r5812, %r5835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5839, %r5831, %r5836;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5842, %r889, %r2577, %r5823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5846, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5847, %r5823, %r5846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5850, %r5842, %r5847;
	// end inline asm
	// begin inline asm
	mov.b32 %r5858, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5869, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5855, %r878, %r2601, %r5858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5859, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5860, %r5858, %r5859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5863, %r5855, %r5860;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5866, %r889, %r2601, %r5869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5870, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5871, %r5869, %r5870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5874, %r5866, %r5871;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5877, %r878, %r2623, %r5858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5881, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5882, %r5858, %r5881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5885, %r5877, %r5882;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5888, %r889, %r2623, %r5869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5892, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5893, %r5869, %r5892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5896, %r5888, %r5893;
	// end inline asm
	// begin inline asm
	mov.b32 %r5904, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5915, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5901, %r878, %r2647, %r5904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5905, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5906, %r5904, %r5905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5909, %r5901, %r5906;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5912, %r889, %r2647, %r5915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5916, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5917, %r5915, %r5916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5920, %r5912, %r5917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5923, %r878, %r2669, %r5904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5927, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5928, %r5904, %r5927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5931, %r5923, %r5928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5934, %r889, %r2669, %r5915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5938, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5939, %r5915, %r5938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5942, %r5934, %r5939;
	// end inline asm
	// begin inline asm
	mov.b32 %r5950, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5961, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5947, %r878, %r2693, %r5950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5952, %r5950, %r5951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5955, %r5947, %r5952;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5958, %r889, %r2693, %r5961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5963, %r5961, %r5962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5966, %r5958, %r5963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5969, %r878, %r2715, %r5950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5973, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5974, %r5950, %r5973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5977, %r5969, %r5974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5980, %r889, %r2715, %r5961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5984, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5985, %r5961, %r5984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5988, %r5980, %r5985;
	// end inline asm
	// begin inline asm
	mov.b32 %r5996, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6007, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5993, %r878, %r2739, %r5996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5998, %r5996, %r5997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6001, %r5993, %r5998;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6004, %r889, %r2739, %r6007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6008, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6009, %r6007, %r6008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6012, %r6004, %r6009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6015, %r878, %r2761, %r5996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6020, %r5996, %r6019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6023, %r6015, %r6020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6026, %r889, %r2761, %r6007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6030, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6031, %r6007, %r6030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6034, %r6026, %r6031;
	// end inline asm
	// begin inline asm
	mov.b32 %r6042, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6053, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6039, %r878, %r2785, %r6042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6044, %r6042, %r6043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6047, %r6039, %r6044;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6050, %r889, %r2785, %r6053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6055, %r6053, %r6054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6058, %r6050, %r6055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6061, %r878, %r2807, %r6042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6066, %r6042, %r6065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6069, %r6061, %r6066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6072, %r889, %r2807, %r6053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6077, %r6053, %r6076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6080, %r6072, %r6077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6083, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6085, %r6083, %r5725, %r5587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6089, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6091, %r6089, %r5736, %r5591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6095, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6097, %r6095, %r5747, %r5595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6101, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6103, %r6101, %r5758, %r5599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6107, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6109, %r6107, %r5771, %r5603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6113, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6115, %r6113, %r5782, %r5607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6119, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6121, %r6119, %r5793, %r5611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6125, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6127, %r6125, %r5804, %r5615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6131, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6133, %r6131, %r5817, %r5619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6137, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6139, %r6137, %r5828, %r5623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6143, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6145, %r6143, %r5839, %r5627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6149, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6151, %r6149, %r5850, %r5631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6155, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6157, %r6155, %r5863, %r5635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6161, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6163, %r6161, %r5874, %r5639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6167, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6169, %r6167, %r5885, %r5643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6173, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6175, %r6173, %r5896, %r5647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6179, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6181, %r6179, %r5909, %r5651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6185, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6187, %r6185, %r5920, %r5655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6191, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6193, %r6191, %r5931, %r5659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6197, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6199, %r6197, %r5942, %r5663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6203, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6205, %r6203, %r5955, %r5667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6209, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6211, %r6209, %r5966, %r5671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6215, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6217, %r6215, %r5977, %r5675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6221, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6223, %r6221, %r5988, %r5679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6227, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6229, %r6227, %r6001, %r5683;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6233, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6235, %r6233, %r6012, %r5687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6239, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6241, %r6239, %r6023, %r5691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6245, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6247, %r6245, %r6034, %r5695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6251, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6253, %r6251, %r6047, %r5699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6257, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6259, %r6257, %r6058, %r5703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6263, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6265, %r6263, %r6069, %r5707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6269, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6271, %r6269, %r6080, %r5711;
	// end inline asm
	// begin inline asm
	mov.b32 %r6280, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6291, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6277, %r878, %r879, %r6280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6281, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6282, %r6280, %r6281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6285, %r6277, %r6282;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6288, %r889, %r879, %r6291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6292, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6293, %r6291, %r6292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6296, %r6288, %r6293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6299, %r878, %r901, %r6280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6303, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6304, %r6280, %r6303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6307, %r6299, %r6304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6310, %r889, %r901, %r6291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6314, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6315, %r6291, %r6314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6318, %r6310, %r6315;
	// end inline asm
	// begin inline asm
	mov.b32 %r6326, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6337, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6323, %r878, %r925, %r6326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6327, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6328, %r6326, %r6327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6331, %r6323, %r6328;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6334, %r889, %r925, %r6337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6338, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6339, %r6337, %r6338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6342, %r6334, %r6339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6345, %r878, %r947, %r6326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6349, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6350, %r6326, %r6349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6353, %r6345, %r6350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6356, %r889, %r947, %r6337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6360, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6361, %r6337, %r6360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6364, %r6356, %r6361;
	// end inline asm
	// begin inline asm
	mov.b32 %r6372, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6383, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6369, %r878, %r971, %r6372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6374, %r6372, %r6373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6377, %r6369, %r6374;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6380, %r889, %r971, %r6383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6384, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6385, %r6383, %r6384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6388, %r6380, %r6385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6391, %r878, %r993, %r6372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6395, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6396, %r6372, %r6395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6399, %r6391, %r6396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6402, %r889, %r993, %r6383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6406, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6407, %r6383, %r6406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6410, %r6402, %r6407;
	// end inline asm
	// begin inline asm
	mov.b32 %r6418, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6429, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6415, %r878, %r1017, %r6418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6420, %r6418, %r6419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6423, %r6415, %r6420;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6426, %r889, %r1017, %r6429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6430, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6431, %r6429, %r6430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6434, %r6426, %r6431;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6437, %r878, %r1039, %r6418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6441, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6442, %r6418, %r6441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6445, %r6437, %r6442;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6448, %r889, %r1039, %r6429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6452, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6453, %r6429, %r6452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6456, %r6448, %r6453;
	// end inline asm
	// begin inline asm
	mov.b32 %r6464, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6475, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6461, %r878, %r1063, %r6464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6466, %r6464, %r6465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6469, %r6461, %r6466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6472, %r889, %r1063, %r6475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6476, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6477, %r6475, %r6476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6480, %r6472, %r6477;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6483, %r878, %r1085, %r6464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6487, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6488, %r6464, %r6487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6491, %r6483, %r6488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6494, %r889, %r1085, %r6475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6498, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6499, %r6475, %r6498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6502, %r6494, %r6499;
	// end inline asm
	// begin inline asm
	mov.b32 %r6510, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6521, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6507, %r878, %r1109, %r6510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6512, %r6510, %r6511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6515, %r6507, %r6512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6518, %r889, %r1109, %r6521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6522, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6523, %r6521, %r6522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6526, %r6518, %r6523;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6529, %r878, %r1131, %r6510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6533, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6534, %r6510, %r6533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6537, %r6529, %r6534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6540, %r889, %r1131, %r6521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6544, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6545, %r6521, %r6544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6548, %r6540, %r6545;
	// end inline asm
	// begin inline asm
	mov.b32 %r6556, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6567, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6553, %r878, %r1155, %r6556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6558, %r6556, %r6557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6561, %r6553, %r6558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6564, %r889, %r1155, %r6567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6568, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6569, %r6567, %r6568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6572, %r6564, %r6569;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6575, %r878, %r1177, %r6556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6579, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6580, %r6556, %r6579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6583, %r6575, %r6580;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6586, %r889, %r1177, %r6567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6590, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6591, %r6567, %r6590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6594, %r6586, %r6591;
	// end inline asm
	// begin inline asm
	mov.b32 %r6602, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6613, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6599, %r878, %r1201, %r6602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6604, %r6602, %r6603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6607, %r6599, %r6604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6610, %r889, %r1201, %r6613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6614, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6615, %r6613, %r6614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6618, %r6610, %r6615;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6621, %r878, %r1223, %r6602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6625, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6626, %r6602, %r6625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6629, %r6621, %r6626;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6632, %r889, %r1223, %r6613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6636, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6637, %r6613, %r6636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6640, %r6632, %r6637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6778, %r368, %r6285, %r6085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6775, %r368, %r6296, %r6091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6787, %r368, %r6307, %r6097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6784, %r368, %r6318, %r6103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6796, %r368, %r6331, %r6109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6793, %r368, %r6342, %r6115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6805, %r368, %r6353, %r6121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6802, %r368, %r6364, %r6127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6814, %r368, %r6377, %r6133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6811, %r368, %r6388, %r6139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6823, %r368, %r6399, %r6145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6820, %r368, %r6410, %r6151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6832, %r368, %r6423, %r6157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6829, %r368, %r6434, %r6163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6841, %r368, %r6445, %r6169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6838, %r368, %r6456, %r6175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6850, %r386, %r6469, %r6181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6847, %r386, %r6480, %r6187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6859, %r386, %r6491, %r6193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6856, %r386, %r6502, %r6199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6868, %r386, %r6515, %r6205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6865, %r386, %r6526, %r6211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6877, %r386, %r6537, %r6217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6874, %r386, %r6548, %r6223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6886, %r386, %r6561, %r6229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6883, %r386, %r6572, %r6235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6895, %r386, %r6583, %r6241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6892, %r386, %r6594, %r6247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6904, %r386, %r6607, %r6253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6901, %r386, %r6618, %r6259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6913, %r386, %r6629, %r6265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6910, %r386, %r6640, %r6271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6771, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6773, %r6771, %r6775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6776, %r425, %r6778, %r6773;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6780, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6782, %r6780, %r6784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6785, %r425, %r6787, %r6782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6789, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6791, %r6789, %r6793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6794, %r425, %r6796, %r6791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6798, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6800, %r6798, %r6802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6803, %r425, %r6805, %r6800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6807, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6809, %r6807, %r6811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6812, %r425, %r6814, %r6809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6816, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6818, %r6816, %r6820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6821, %r425, %r6823, %r6818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6825, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6827, %r6825, %r6829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6830, %r425, %r6832, %r6827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6834, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6836, %r6834, %r6838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6839, %r425, %r6841, %r6836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6843, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6845, %r6843, %r6847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6848, %r428, %r6850, %r6845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6852, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6854, %r6852, %r6856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6857, %r428, %r6859, %r6854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6861, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6863, %r6861, %r6865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6866, %r428, %r6868, %r6863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6870, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6872, %r6870, %r6874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6875, %r428, %r6877, %r6872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6879, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6881, %r6879, %r6883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6884, %r428, %r6886, %r6881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6888, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6890, %r6888, %r6892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6893, %r428, %r6895, %r6890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6897, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6899, %r6897, %r6901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6902, %r428, %r6904, %r6899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6906, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6908, %r6906, %r6910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6911, %r428, %r6913, %r6908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6915, %r431, %r6778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6918, %r425, %r6775, %r6915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6922, %r431, %r6787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6925, %r425, %r6784, %r6922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6929, %r431, %r6796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6932, %r425, %r6793, %r6929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6936, %r431, %r6805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6939, %r425, %r6802, %r6936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6943, %r431, %r6814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6946, %r425, %r6811, %r6943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6950, %r431, %r6823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6953, %r425, %r6820, %r6950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6957, %r431, %r6832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6960, %r425, %r6829, %r6957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6964, %r431, %r6841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6967, %r425, %r6838, %r6964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6971, %r434, %r6850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6974, %r428, %r6847, %r6971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6978, %r434, %r6859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6981, %r428, %r6856, %r6978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6985, %r434, %r6868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6988, %r428, %r6865, %r6985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6992, %r434, %r6877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6995, %r428, %r6874, %r6992;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6999, %r434, %r6886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7002, %r428, %r6883, %r6999;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7006, %r434, %r6895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7009, %r428, %r6892, %r7006;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7013, %r434, %r6904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7016, %r428, %r6901, %r7013;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7020, %r434, %r6913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7023, %r428, %r6910, %r7020;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7194, %r7191}, {%r492, %r498, %r495, %r501}, {%r6776, %r6918}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7203, %r7200}, {%r492, %r498, %r495, %r501}, {%r6785, %r6925}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7212, %r7209}, {%r492, %r498, %r495, %r501}, {%r6794, %r6932}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7221, %r7218}, {%r492, %r498, %r495, %r501}, {%r6803, %r6939}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7230, %r7227}, {%r492, %r498, %r495, %r501}, {%r6812, %r6946}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7239, %r7236}, {%r492, %r498, %r495, %r501}, {%r6821, %r6953}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7248, %r7245}, {%r492, %r498, %r495, %r501}, {%r6830, %r6960}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7257, %r7254}, {%r492, %r498, %r495, %r501}, {%r6839, %r6967}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7266, %r7263}, {%r492, %r498, %r495, %r501}, {%r6848, %r6974}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7275, %r7272}, {%r492, %r498, %r495, %r501}, {%r6857, %r6981}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7284, %r7281}, {%r492, %r498, %r495, %r501}, {%r6866, %r6988}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7293, %r7290}, {%r492, %r498, %r495, %r501}, {%r6875, %r6995}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7302, %r7299}, {%r492, %r498, %r495, %r501}, {%r6884, %r7002}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7311, %r7308}, {%r492, %r498, %r495, %r501}, {%r6893, %r7009}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7320, %r7317}, {%r492, %r498, %r495, %r501}, {%r6902, %r7016}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7329, %r7326}, {%r492, %r498, %r495, %r501}, {%r6911, %r7023}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7187, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7189, %r7187, %r7191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7192, %r542, %r7194, %r7189;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7196, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7198, %r7196, %r7200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7201, %r542, %r7203, %r7198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7205, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7207, %r7205, %r7209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7210, %r542, %r7212, %r7207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7214, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7216, %r7214, %r7218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7219, %r542, %r7221, %r7216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7223, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7225, %r7223, %r7227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7228, %r542, %r7230, %r7225;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7232, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7234, %r7232, %r7236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7237, %r542, %r7239, %r7234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7241, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7243, %r7241, %r7245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7246, %r542, %r7248, %r7243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7250, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7252, %r7250, %r7254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7255, %r542, %r7257, %r7252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7259, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7261, %r7259, %r7263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7264, %r542, %r7266, %r7261;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7268, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7270, %r7268, %r7272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7273, %r542, %r7275, %r7270;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7277, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7279, %r7277, %r7281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7282, %r542, %r7284, %r7279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7286, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7288, %r7286, %r7290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7291, %r542, %r7293, %r7288;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7295, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7297, %r7295, %r7299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7300, %r542, %r7302, %r7297;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7304, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7306, %r7304, %r7308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7309, %r542, %r7311, %r7306;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7313, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7315, %r7313, %r7317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7318, %r542, %r7320, %r7315;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7322, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7324, %r7322, %r7326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7327, %r542, %r7329, %r7324;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7331, %r545, %r7194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7334, %r542, %r7191, %r7331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7338, %r545, %r7203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7341, %r542, %r7200, %r7338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7345, %r545, %r7212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7348, %r542, %r7209, %r7345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7352, %r545, %r7221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7355, %r542, %r7218, %r7352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7359, %r545, %r7230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7362, %r542, %r7227, %r7359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7366, %r545, %r7239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7369, %r542, %r7236, %r7366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7373, %r545, %r7248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7376, %r542, %r7245, %r7373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7380, %r545, %r7257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7383, %r542, %r7254, %r7380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7387, %r545, %r7266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7390, %r542, %r7263, %r7387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7394, %r545, %r7275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7397, %r542, %r7272, %r7394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7401, %r545, %r7284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7404, %r542, %r7281, %r7401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7408, %r545, %r7293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7411, %r542, %r7290, %r7408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7415, %r545, %r7302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7418, %r542, %r7299, %r7415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7422, %r545, %r7311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7425, %r542, %r7308, %r7422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7429, %r545, %r7320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7432, %r542, %r7317, %r7429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7436, %r545, %r7329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7439, %r542, %r7326, %r7436;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7732, %r7735}, {%r580, %r586, %r583, %r589}, {%r7192, %r7334}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7738, %r7741}, {%r580, %r586, %r583, %r589}, {%r7201, %r7341}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7744, %r7747}, {%r580, %r586, %r583, %r589}, {%r7210, %r7348}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7750, %r7753}, {%r580, %r586, %r583, %r589}, {%r7219, %r7355}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7756, %r7759}, {%r580, %r586, %r583, %r589}, {%r7228, %r7362}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7762, %r7765}, {%r580, %r586, %r583, %r589}, {%r7237, %r7369}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7768, %r7771}, {%r580, %r586, %r583, %r589}, {%r7246, %r7376}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7774, %r7777}, {%r580, %r586, %r583, %r589}, {%r7255, %r7383}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7733, %r7736}, {%r580, %r586, %r583, %r589}, {%r7264, %r7390}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7739, %r7742}, {%r580, %r586, %r583, %r589}, {%r7273, %r7397}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7745, %r7748}, {%r580, %r586, %r583, %r589}, {%r7282, %r7404}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7751, %r7754}, {%r580, %r586, %r583, %r589}, {%r7291, %r7411}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7757, %r7760}, {%r580, %r586, %r583, %r589}, {%r7300, %r7418}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7763, %r7766}, {%r580, %r586, %r583, %r589}, {%r7309, %r7425}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7769, %r7772}, {%r580, %r586, %r583, %r589}, {%r7318, %r7432}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7775, %r7778}, {%r580, %r586, %r583, %r589}, {%r7327, %r7439}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7731, %r7732, %r7733;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7734, %r7735, %r7736;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7737, %r7738, %r7739;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7740, %r7741, %r7742;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7743, %r7744, %r7745;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7746, %r7747, %r7748;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7749, %r7750, %r7751;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7752, %r7753, %r7754;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7755, %r7756, %r7757;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7758, %r7759, %r7760;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7761, %r7762, %r7763;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7764, %r7765, %r7766;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7767, %r7768, %r7769;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7770, %r7771, %r7772;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7773, %r7774, %r7775;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7776, %r7777, %r7778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7779, %r7732, %r7733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7782, %r7735, %r7736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7785, %r7738, %r7739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7788, %r7741, %r7742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7791, %r7744, %r7745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7794, %r7747, %r7748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7797, %r7750, %r7751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7800, %r7753, %r7754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7803, %r7756, %r7757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7806, %r7759, %r7760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7809, %r7762, %r7763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7812, %r7765, %r7766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7815, %r7768, %r7769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7818, %r7771, %r7772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7821, %r7774, %r7775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7824, %r7777, %r7778;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7827, %r182, %r7731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7830, %r182, %r7734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7833, %r182, %r7737;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7836, %r182, %r7740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7839, %r182, %r7743;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7842, %r182, %r7746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7845, %r182, %r7749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7848, %r182, %r7752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7851, %r182, %r7755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7854, %r182, %r7758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7857, %r182, %r7761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7860, %r182, %r7764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7863, %r182, %r7767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7866, %r182, %r7770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7869, %r182, %r7773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7872, %r182, %r7776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7875, %r184, %r7779;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7878, %r184, %r7782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7881, %r184, %r7785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7884, %r184, %r7788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7887, %r184, %r7791;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7890, %r184, %r7794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7893, %r184, %r7797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7896, %r184, %r7800;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7899, %r184, %r7803;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7902, %r184, %r7806;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7905, %r184, %r7809;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7908, %r184, %r7812;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7911, %r184, %r7815;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7914, %r184, %r7818;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7917, %r184, %r7821;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7920, %r184, %r7824;
	// end inline asm
	// begin inline asm
	mov.b32 %r7923, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7924, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7925, %r7827, %r7923;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7928, %r7925, %r7924;
	// end inline asm
	// begin inline asm
	mov.b32 %r7931, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7932, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7933, %r7830, %r7931;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7936, %r7933, %r7932;
	// end inline asm
	// begin inline asm
	mov.b32 %r7939, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7940, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7941, %r7833, %r7939;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7944, %r7941, %r7940;
	// end inline asm
	// begin inline asm
	mov.b32 %r7947, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7948, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7949, %r7836, %r7947;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7952, %r7949, %r7948;
	// end inline asm
	// begin inline asm
	mov.b32 %r7955, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7956, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7957, %r7839, %r7955;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7960, %r7957, %r7956;
	// end inline asm
	// begin inline asm
	mov.b32 %r7963, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7964, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7965, %r7842, %r7963;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7968, %r7965, %r7964;
	// end inline asm
	// begin inline asm
	mov.b32 %r7971, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7972, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7973, %r7845, %r7971;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7976, %r7973, %r7972;
	// end inline asm
	// begin inline asm
	mov.b32 %r7979, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7980, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7981, %r7848, %r7979;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7984, %r7981, %r7980;
	// end inline asm
	// begin inline asm
	mov.b32 %r7987, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7988, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7989, %r7851, %r7987;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7992, %r7989, %r7988;
	// end inline asm
	// begin inline asm
	mov.b32 %r7995, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7996, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7997, %r7854, %r7995;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8000, %r7997, %r7996;
	// end inline asm
	// begin inline asm
	mov.b32 %r8003, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8004, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8005, %r7857, %r8003;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8008, %r8005, %r8004;
	// end inline asm
	// begin inline asm
	mov.b32 %r8011, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8012, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8013, %r7860, %r8011;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8016, %r8013, %r8012;
	// end inline asm
	// begin inline asm
	mov.b32 %r8019, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8020, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8021, %r7863, %r8019;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8024, %r8021, %r8020;
	// end inline asm
	// begin inline asm
	mov.b32 %r8027, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8028, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8029, %r7866, %r8027;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8032, %r8029, %r8028;
	// end inline asm
	// begin inline asm
	mov.b32 %r8035, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8036, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8037, %r7869, %r8035;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8040, %r8037, %r8036;
	// end inline asm
	// begin inline asm
	mov.b32 %r8043, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8044, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8045, %r7872, %r8043;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8048, %r8045, %r8044;
	// end inline asm
	// begin inline asm
	mov.b32 %r8051, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8052, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8053, %r7875, %r8051;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8056, %r8053, %r8052;
	// end inline asm
	// begin inline asm
	mov.b32 %r8059, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8060, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8061, %r7878, %r8059;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8064, %r8061, %r8060;
	// end inline asm
	// begin inline asm
	mov.b32 %r8067, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8068, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8069, %r7881, %r8067;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8072, %r8069, %r8068;
	// end inline asm
	// begin inline asm
	mov.b32 %r8075, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8076, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8077, %r7884, %r8075;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8080, %r8077, %r8076;
	// end inline asm
	// begin inline asm
	mov.b32 %r8083, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8084, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8085, %r7887, %r8083;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8088, %r8085, %r8084;
	// end inline asm
	// begin inline asm
	mov.b32 %r8091, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8092, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8093, %r7890, %r8091;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8096, %r8093, %r8092;
	// end inline asm
	// begin inline asm
	mov.b32 %r8099, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8100, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8101, %r7893, %r8099;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8104, %r8101, %r8100;
	// end inline asm
	// begin inline asm
	mov.b32 %r8107, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8108, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8109, %r7896, %r8107;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8112, %r8109, %r8108;
	// end inline asm
	// begin inline asm
	mov.b32 %r8115, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8116, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8117, %r7899, %r8115;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8120, %r8117, %r8116;
	// end inline asm
	// begin inline asm
	mov.b32 %r8123, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8124, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8125, %r7902, %r8123;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8128, %r8125, %r8124;
	// end inline asm
	// begin inline asm
	mov.b32 %r8131, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8132, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8133, %r7905, %r8131;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8136, %r8133, %r8132;
	// end inline asm
	// begin inline asm
	mov.b32 %r8139, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8140, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8141, %r7908, %r8139;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8144, %r8141, %r8140;
	// end inline asm
	// begin inline asm
	mov.b32 %r8147, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8148, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8149, %r7911, %r8147;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8152, %r8149, %r8148;
	// end inline asm
	// begin inline asm
	mov.b32 %r8155, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8156, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8157, %r7914, %r8155;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8160, %r8157, %r8156;
	// end inline asm
	// begin inline asm
	mov.b32 %r8163, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8164, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8165, %r7917, %r8163;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8168, %r8165, %r8164;
	// end inline asm
	// begin inline asm
	mov.b32 %r8171, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8172, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8173, %r7920, %r8171;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8176, %r8173, %r8172;
	// end inline asm
	// begin inline asm
	mov.b32 %r8182, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8180, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8181, %r8182, %r8180;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8184, %r7928, %r8181;
	// end inline asm
	// begin inline asm
	mov.b32 %r8187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8188, %r8182, %r8187;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8191, %r7936, %r8188;
	// end inline asm
	// begin inline asm
	mov.b32 %r8194, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8195, %r8182, %r8194;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8198, %r7944, %r8195;
	// end inline asm
	// begin inline asm
	mov.b32 %r8201, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8202, %r8182, %r8201;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8205, %r7952, %r8202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8208, %r8184, %r8198, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8212, %r8191, %r8205, %r4395;
	// end inline asm
	shl.b32 	%r8219, %r8212, 4;
	// begin inline asm
	lop3.b32 %r8216, %r4401, %r8208, %r8219, 202;
	// end inline asm
	xor.b32  	%r16204, %r8216, -2004318072;
	// begin inline asm
	mov.b32 %r8223, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8221, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8222, %r8223, %r8221;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8225, %r7960, %r8222;
	// end inline asm
	// begin inline asm
	mov.b32 %r8228, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8229, %r8223, %r8228;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8232, %r7968, %r8229;
	// end inline asm
	// begin inline asm
	mov.b32 %r8235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8236, %r8223, %r8235;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8239, %r7976, %r8236;
	// end inline asm
	// begin inline asm
	mov.b32 %r8242, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8243, %r8223, %r8242;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8246, %r7984, %r8243;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8249, %r8225, %r8239, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8253, %r8232, %r8246, %r4395;
	// end inline asm
	shl.b32 	%r8260, %r8253, 4;
	// begin inline asm
	lop3.b32 %r8257, %r4401, %r8249, %r8260, 202;
	// end inline asm
	xor.b32  	%r16205, %r8257, -2004318072;
	// begin inline asm
	mov.b32 %r8264, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8263, %r8264, %r8262;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8266, %r7992, %r8263;
	// end inline asm
	// begin inline asm
	mov.b32 %r8269, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8270, %r8264, %r8269;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8273, %r8000, %r8270;
	// end inline asm
	// begin inline asm
	mov.b32 %r8276, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8277, %r8264, %r8276;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8280, %r8008, %r8277;
	// end inline asm
	// begin inline asm
	mov.b32 %r8283, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8284, %r8264, %r8283;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8287, %r8016, %r8284;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8290, %r8266, %r8280, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8294, %r8273, %r8287, %r4395;
	// end inline asm
	shl.b32 	%r8301, %r8294, 4;
	// begin inline asm
	lop3.b32 %r8298, %r4401, %r8290, %r8301, 202;
	// end inline asm
	xor.b32  	%r16206, %r8298, -2004318072;
	// begin inline asm
	mov.b32 %r8305, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8303, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8304, %r8305, %r8303;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8307, %r8024, %r8304;
	// end inline asm
	// begin inline asm
	mov.b32 %r8310, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8311, %r8305, %r8310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8314, %r8032, %r8311;
	// end inline asm
	// begin inline asm
	mov.b32 %r8317, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8318, %r8305, %r8317;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8321, %r8040, %r8318;
	// end inline asm
	// begin inline asm
	mov.b32 %r8324, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8325, %r8305, %r8324;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8328, %r8048, %r8325;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8331, %r8307, %r8321, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8335, %r8314, %r8328, %r4395;
	// end inline asm
	shl.b32 	%r8342, %r8335, 4;
	// begin inline asm
	lop3.b32 %r8339, %r4401, %r8331, %r8342, 202;
	// end inline asm
	xor.b32  	%r16207, %r8339, -2004318072;
	// begin inline asm
	mov.b32 %r8346, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8344, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8345, %r8346, %r8344;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8348, %r8056, %r8345;
	// end inline asm
	// begin inline asm
	mov.b32 %r8351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8352, %r8346, %r8351;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8355, %r8064, %r8352;
	// end inline asm
	// begin inline asm
	mov.b32 %r8358, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8359, %r8346, %r8358;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8362, %r8072, %r8359;
	// end inline asm
	// begin inline asm
	mov.b32 %r8365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8366, %r8346, %r8365;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8369, %r8080, %r8366;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8372, %r8348, %r8362, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8376, %r8355, %r8369, %r4395;
	// end inline asm
	shl.b32 	%r8383, %r8376, 4;
	// begin inline asm
	lop3.b32 %r8380, %r4401, %r8372, %r8383, 202;
	// end inline asm
	xor.b32  	%r16208, %r8380, -2004318072;
	// begin inline asm
	mov.b32 %r8387, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8385, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8386, %r8387, %r8385;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8389, %r8088, %r8386;
	// end inline asm
	// begin inline asm
	mov.b32 %r8392, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8393, %r8387, %r8392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8396, %r8096, %r8393;
	// end inline asm
	// begin inline asm
	mov.b32 %r8399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8400, %r8387, %r8399;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8403, %r8104, %r8400;
	// end inline asm
	// begin inline asm
	mov.b32 %r8406, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8407, %r8387, %r8406;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8410, %r8112, %r8407;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8413, %r8389, %r8403, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8417, %r8396, %r8410, %r4395;
	// end inline asm
	shl.b32 	%r8424, %r8417, 4;
	// begin inline asm
	lop3.b32 %r8421, %r4401, %r8413, %r8424, 202;
	// end inline asm
	xor.b32  	%r16209, %r8421, -2004318072;
	// begin inline asm
	mov.b32 %r8428, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8426, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8427, %r8428, %r8426;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8430, %r8120, %r8427;
	// end inline asm
	// begin inline asm
	mov.b32 %r8433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8434, %r8428, %r8433;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8437, %r8128, %r8434;
	// end inline asm
	// begin inline asm
	mov.b32 %r8440, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8441, %r8428, %r8440;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8444, %r8136, %r8441;
	// end inline asm
	// begin inline asm
	mov.b32 %r8447, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8448, %r8428, %r8447;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8451, %r8144, %r8448;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8454, %r8430, %r8444, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8458, %r8437, %r8451, %r4395;
	// end inline asm
	shl.b32 	%r8465, %r8458, 4;
	// begin inline asm
	lop3.b32 %r8462, %r4401, %r8454, %r8465, 202;
	// end inline asm
	xor.b32  	%r16210, %r8462, -2004318072;
	// begin inline asm
	mov.b32 %r8469, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8467, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8468, %r8469, %r8467;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8471, %r8152, %r8468;
	// end inline asm
	// begin inline asm
	mov.b32 %r8474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8475, %r8469, %r8474;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8478, %r8160, %r8475;
	// end inline asm
	// begin inline asm
	mov.b32 %r8481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8482, %r8469, %r8481;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8485, %r8168, %r8482;
	// end inline asm
	// begin inline asm
	mov.b32 %r8488, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8489, %r8469, %r8488;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8492, %r8176, %r8489;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8495, %r8471, %r8485, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8499, %r8478, %r8492, %r4395;
	// end inline asm
	shl.b32 	%r8506, %r8499, 4;
	// begin inline asm
	lop3.b32 %r8503, %r4401, %r8495, %r8506, 202;
	// end inline asm
	xor.b32  	%r16211, %r8503, -2004318072;
	st.shared.u32 	[%rd93], %r16204;
	st.shared.u32 	[%rd95], %r16205;
	st.shared.u32 	[%rd97], %r16206;
	st.shared.u32 	[%rd99], %r16207;
	st.shared.u32 	[%rd101], %r16208;
	st.shared.u32 	[%rd103], %r16209;
	st.shared.u32 	[%rd105], %r16210;
	st.shared.u32 	[%rd107], %r16211;
	ld.shared.u32 	%r16337, [%rd77];
	ld.shared.u32 	%r16338, [%rd79];
	ld.shared.u32 	%r16339, [%rd81];
	ld.shared.u32 	%r16340, [%rd83];
	ld.shared.u32 	%r16349, [%rd85];
	ld.shared.u32 	%r16350, [%rd87];
	ld.shared.u32 	%r16351, [%rd89];
	ld.shared.u32 	%r16352, [%rd91];
	// begin inline asm
	mov.b32 %r8512, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8523, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8511, %r16337, -2004318072;
	// begin inline asm
	lop3.b32 %r8509, %r878, %r8511, %r8512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8513, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8514, %r8512, %r8513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8517, %r8509, %r8514;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8520, %r889, %r8511, %r8523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8524, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8525, %r8523, %r8524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8528, %r8520, %r8525;
	// end inline asm
	shr.u32 	%r8533, %r8511, 8;
	// begin inline asm
	lop3.b32 %r8531, %r878, %r8533, %r8512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8536, %r8512, %r8535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8539, %r8531, %r8536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8542, %r889, %r8533, %r8523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8547, %r8523, %r8546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8550, %r8542, %r8547;
	// end inline asm
	// begin inline asm
	mov.b32 %r8558, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8569, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8557, %r16338, -2004318072;
	// begin inline asm
	lop3.b32 %r8555, %r878, %r8557, %r8558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8559, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8560, %r8558, %r8559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8563, %r8555, %r8560;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8566, %r889, %r8557, %r8569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8570, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8571, %r8569, %r8570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8574, %r8566, %r8571;
	// end inline asm
	shr.u32 	%r8579, %r8557, 8;
	// begin inline asm
	lop3.b32 %r8577, %r878, %r8579, %r8558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8581, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8582, %r8558, %r8581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8585, %r8577, %r8582;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8588, %r889, %r8579, %r8569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8593, %r8569, %r8592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8596, %r8588, %r8593;
	// end inline asm
	// begin inline asm
	mov.b32 %r8604, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8615, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8603, %r16339, -2004318072;
	// begin inline asm
	lop3.b32 %r8601, %r878, %r8603, %r8604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8605, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8606, %r8604, %r8605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8609, %r8601, %r8606;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8612, %r889, %r8603, %r8615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8616, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8617, %r8615, %r8616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8620, %r8612, %r8617;
	// end inline asm
	shr.u32 	%r8625, %r8603, 8;
	// begin inline asm
	lop3.b32 %r8623, %r878, %r8625, %r8604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8627, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8628, %r8604, %r8627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8631, %r8623, %r8628;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8634, %r889, %r8625, %r8615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8638, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8639, %r8615, %r8638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8642, %r8634, %r8639;
	// end inline asm
	// begin inline asm
	mov.b32 %r8650, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8661, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8649, %r16340, -2004318072;
	// begin inline asm
	lop3.b32 %r8647, %r878, %r8649, %r8650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8651, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8652, %r8650, %r8651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8655, %r8647, %r8652;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8658, %r889, %r8649, %r8661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8662, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8663, %r8661, %r8662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8666, %r8658, %r8663;
	// end inline asm
	shr.u32 	%r8671, %r8649, 8;
	// begin inline asm
	lop3.b32 %r8669, %r878, %r8671, %r8650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8673, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8674, %r8650, %r8673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8677, %r8669, %r8674;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8680, %r889, %r8671, %r8661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8684, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8685, %r8661, %r8684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8688, %r8680, %r8685;
	// end inline asm
	// begin inline asm
	mov.b32 %r8696, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8707, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8695, %r16349, -2004318072;
	// begin inline asm
	lop3.b32 %r8693, %r878, %r8695, %r8696, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8697, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8698, %r8696, %r8697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8701, %r8693, %r8698;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8704, %r889, %r8695, %r8707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8708, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8709, %r8707, %r8708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8712, %r8704, %r8709;
	// end inline asm
	shr.u32 	%r8717, %r8695, 8;
	// begin inline asm
	lop3.b32 %r8715, %r878, %r8717, %r8696, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8719, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8720, %r8696, %r8719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8723, %r8715, %r8720;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8726, %r889, %r8717, %r8707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8730, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8731, %r8707, %r8730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8734, %r8726, %r8731;
	// end inline asm
	// begin inline asm
	mov.b32 %r8742, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8753, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8741, %r16350, -2004318072;
	// begin inline asm
	lop3.b32 %r8739, %r878, %r8741, %r8742, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8743, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8744, %r8742, %r8743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8747, %r8739, %r8744;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8750, %r889, %r8741, %r8753, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8754, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8755, %r8753, %r8754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8758, %r8750, %r8755;
	// end inline asm
	shr.u32 	%r8763, %r8741, 8;
	// begin inline asm
	lop3.b32 %r8761, %r878, %r8763, %r8742, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8765, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8766, %r8742, %r8765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8769, %r8761, %r8766;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8772, %r889, %r8763, %r8753, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8776, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8777, %r8753, %r8776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8780, %r8772, %r8777;
	// end inline asm
	// begin inline asm
	mov.b32 %r8788, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8799, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8787, %r16351, -2004318072;
	// begin inline asm
	lop3.b32 %r8785, %r878, %r8787, %r8788, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8789, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8790, %r8788, %r8789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8793, %r8785, %r8790;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8796, %r889, %r8787, %r8799, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8800, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8801, %r8799, %r8800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8804, %r8796, %r8801;
	// end inline asm
	shr.u32 	%r8809, %r8787, 8;
	// begin inline asm
	lop3.b32 %r8807, %r878, %r8809, %r8788, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8811, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8812, %r8788, %r8811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8815, %r8807, %r8812;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8818, %r889, %r8809, %r8799, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8822, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8823, %r8799, %r8822;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8826, %r8818, %r8823;
	// end inline asm
	// begin inline asm
	mov.b32 %r8834, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8845, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8833, %r16352, -2004318072;
	// begin inline asm
	lop3.b32 %r8831, %r878, %r8833, %r8834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8835, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8836, %r8834, %r8835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8839, %r8831, %r8836;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8842, %r889, %r8833, %r8845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8846, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8847, %r8845, %r8846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8850, %r8842, %r8847;
	// end inline asm
	shr.u32 	%r8855, %r8833, 8;
	// begin inline asm
	lop3.b32 %r8853, %r878, %r8855, %r8834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8857, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8858, %r8834, %r8857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8861, %r8853, %r8858;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8864, %r889, %r8855, %r8845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8868, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8869, %r8845, %r8868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8872, %r8864, %r8869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8875, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8877, %r8875, %r8517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8880, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8882, %r8880, %r8528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8885, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8887, %r8885, %r8539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8890, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8892, %r8890, %r8550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8895, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8897, %r8895, %r8563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8900, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8902, %r8900, %r8574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8905, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8907, %r8905, %r8585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8910, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8912, %r8910, %r8596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8915, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8917, %r8915, %r8609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8920, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8922, %r8920, %r8620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8925, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8927, %r8925, %r8631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8930, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8932, %r8930, %r8642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8935, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8937, %r8935, %r8655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8940, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8942, %r8940, %r8666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8945, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8947, %r8945, %r8677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8950, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8952, %r8950, %r8688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8955, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8957, %r8955, %r8701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8960, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8962, %r8960, %r8712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8965, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8967, %r8965, %r8723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8970, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8972, %r8970, %r8734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8975, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8977, %r8975, %r8747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8980, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8982, %r8980, %r8758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8985, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8987, %r8985, %r8769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8990, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8992, %r8990, %r8780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8995, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8997, %r8995, %r8793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9000, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9002, %r9000, %r8804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9005, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9007, %r9005, %r8815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9010, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9012, %r9010, %r8826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9015, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9017, %r9015, %r8839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9020, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9022, %r9020, %r8850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9025, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9027, %r9025, %r8861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9030, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9032, %r9030, %r8872;
	// end inline asm
	// begin inline asm
	mov.b32 %r9040, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9051, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9037, %r878, %r2463, %r9040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9041, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9042, %r9040, %r9041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9045, %r9037, %r9042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9048, %r889, %r2463, %r9051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9052, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9053, %r9051, %r9052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9056, %r9048, %r9053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9059, %r878, %r2485, %r9040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9063, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9064, %r9040, %r9063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9067, %r9059, %r9064;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9070, %r889, %r2485, %r9051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9074, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9075, %r9051, %r9074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9078, %r9070, %r9075;
	// end inline asm
	// begin inline asm
	mov.b32 %r9086, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9097, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9083, %r878, %r2509, %r9086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9088, %r9086, %r9087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9091, %r9083, %r9088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9094, %r889, %r2509, %r9097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9098, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9099, %r9097, %r9098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9102, %r9094, %r9099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9105, %r878, %r2531, %r9086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9109, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9110, %r9086, %r9109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9113, %r9105, %r9110;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9116, %r889, %r2531, %r9097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9120, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9121, %r9097, %r9120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9124, %r9116, %r9121;
	// end inline asm
	// begin inline asm
	mov.b32 %r9132, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9143, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9129, %r878, %r2555, %r9132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9133, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9134, %r9132, %r9133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9137, %r9129, %r9134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9140, %r889, %r2555, %r9143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9144, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9145, %r9143, %r9144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9148, %r9140, %r9145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9151, %r878, %r2577, %r9132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9155, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9156, %r9132, %r9155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9159, %r9151, %r9156;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9162, %r889, %r2577, %r9143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9166, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9167, %r9143, %r9166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9170, %r9162, %r9167;
	// end inline asm
	// begin inline asm
	mov.b32 %r9178, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9189, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9175, %r878, %r2601, %r9178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9179, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9180, %r9178, %r9179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9183, %r9175, %r9180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9186, %r889, %r2601, %r9189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9190, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9191, %r9189, %r9190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9194, %r9186, %r9191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9197, %r878, %r2623, %r9178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9201, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9202, %r9178, %r9201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9205, %r9197, %r9202;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9208, %r889, %r2623, %r9189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9212, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9213, %r9189, %r9212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9216, %r9208, %r9213;
	// end inline asm
	// begin inline asm
	mov.b32 %r9224, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9235, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9221, %r878, %r2647, %r9224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9225, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9226, %r9224, %r9225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9229, %r9221, %r9226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9232, %r889, %r2647, %r9235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9236, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9237, %r9235, %r9236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9240, %r9232, %r9237;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9243, %r878, %r2669, %r9224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9247, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9248, %r9224, %r9247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9251, %r9243, %r9248;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9254, %r889, %r2669, %r9235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9258, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9259, %r9235, %r9258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9262, %r9254, %r9259;
	// end inline asm
	// begin inline asm
	mov.b32 %r9270, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9281, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9267, %r878, %r2693, %r9270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9272, %r9270, %r9271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9275, %r9267, %r9272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9278, %r889, %r2693, %r9281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9282, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9283, %r9281, %r9282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9286, %r9278, %r9283;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9289, %r878, %r2715, %r9270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9293, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9294, %r9270, %r9293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9297, %r9289, %r9294;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9300, %r889, %r2715, %r9281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9304, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9305, %r9281, %r9304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9308, %r9300, %r9305;
	// end inline asm
	// begin inline asm
	mov.b32 %r9316, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9327, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9313, %r878, %r2739, %r9316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9317, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9318, %r9316, %r9317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9321, %r9313, %r9318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9324, %r889, %r2739, %r9327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9328, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9329, %r9327, %r9328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9332, %r9324, %r9329;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9335, %r878, %r2761, %r9316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9339, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9340, %r9316, %r9339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9343, %r9335, %r9340;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9346, %r889, %r2761, %r9327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9350, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9351, %r9327, %r9350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9354, %r9346, %r9351;
	// end inline asm
	// begin inline asm
	mov.b32 %r9362, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9373, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9359, %r878, %r2785, %r9362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9364, %r9362, %r9363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9367, %r9359, %r9364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9370, %r889, %r2785, %r9373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9374, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9375, %r9373, %r9374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9378, %r9370, %r9375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9381, %r878, %r2807, %r9362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9385, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9386, %r9362, %r9385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9389, %r9381, %r9386;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9392, %r889, %r2807, %r9373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9396, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9397, %r9373, %r9396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9400, %r9392, %r9397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9403, %r296, %r9045, %r8877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9407, %r296, %r9056, %r8882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9411, %r296, %r9067, %r8887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9415, %r296, %r9078, %r8892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9419, %r296, %r9091, %r8897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9423, %r296, %r9102, %r8902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9427, %r296, %r9113, %r8907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9431, %r296, %r9124, %r8912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9435, %r296, %r9137, %r8917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9439, %r296, %r9148, %r8922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9443, %r296, %r9159, %r8927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9447, %r296, %r9170, %r8932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9451, %r296, %r9183, %r8937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9455, %r296, %r9194, %r8942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9459, %r296, %r9205, %r8947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9463, %r296, %r9216, %r8952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9467, %r314, %r9229, %r8957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9471, %r314, %r9240, %r8962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9475, %r314, %r9251, %r8967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9479, %r314, %r9262, %r8972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9483, %r314, %r9275, %r8977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9487, %r314, %r9286, %r8982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9491, %r314, %r9297, %r8987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9495, %r314, %r9308, %r8992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9499, %r314, %r9321, %r8997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9503, %r314, %r9332, %r9002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9507, %r314, %r9343, %r9007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9511, %r314, %r9354, %r9012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9515, %r314, %r9367, %r9017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9519, %r314, %r9378, %r9022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9523, %r314, %r9389, %r9027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9527, %r314, %r9400, %r9032;
	// end inline asm
	// begin inline asm
	mov.b32 %r9536, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9547, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9533, %r878, %r879, %r9536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9538, %r9536, %r9537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9541, %r9533, %r9538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9544, %r889, %r879, %r9547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9548, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9549, %r9547, %r9548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9552, %r9544, %r9549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9555, %r878, %r901, %r9536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9559, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9560, %r9536, %r9559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9563, %r9555, %r9560;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9566, %r889, %r901, %r9547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9570, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9571, %r9547, %r9570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9574, %r9566, %r9571;
	// end inline asm
	// begin inline asm
	mov.b32 %r9582, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9593, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9579, %r878, %r925, %r9582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9584, %r9582, %r9583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9587, %r9579, %r9584;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9590, %r889, %r925, %r9593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9594, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9595, %r9593, %r9594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9598, %r9590, %r9595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9601, %r878, %r947, %r9582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9605, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9606, %r9582, %r9605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9609, %r9601, %r9606;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9612, %r889, %r947, %r9593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9616, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9617, %r9593, %r9616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9620, %r9612, %r9617;
	// end inline asm
	// begin inline asm
	mov.b32 %r9628, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9639, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9625, %r878, %r971, %r9628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9630, %r9628, %r9629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9633, %r9625, %r9630;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9636, %r889, %r971, %r9639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9640, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9641, %r9639, %r9640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9644, %r9636, %r9641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9647, %r878, %r993, %r9628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9651, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9652, %r9628, %r9651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9655, %r9647, %r9652;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9658, %r889, %r993, %r9639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9662, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9663, %r9639, %r9662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9666, %r9658, %r9663;
	// end inline asm
	// begin inline asm
	mov.b32 %r9674, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9685, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9671, %r878, %r1017, %r9674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9675, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9676, %r9674, %r9675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9679, %r9671, %r9676;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9682, %r889, %r1017, %r9685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9686, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9687, %r9685, %r9686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9690, %r9682, %r9687;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9693, %r878, %r1039, %r9674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9697, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9698, %r9674, %r9697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9701, %r9693, %r9698;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9704, %r889, %r1039, %r9685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9708, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9709, %r9685, %r9708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9712, %r9704, %r9709;
	// end inline asm
	// begin inline asm
	mov.b32 %r9720, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9731, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9717, %r878, %r1063, %r9720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9721, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9722, %r9720, %r9721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9725, %r9717, %r9722;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9728, %r889, %r1063, %r9731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9732, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9733, %r9731, %r9732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9736, %r9728, %r9733;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9739, %r878, %r1085, %r9720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9743, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9744, %r9720, %r9743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9747, %r9739, %r9744;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9750, %r889, %r1085, %r9731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9754, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9755, %r9731, %r9754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9758, %r9750, %r9755;
	// end inline asm
	// begin inline asm
	mov.b32 %r9766, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9777, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9763, %r878, %r1109, %r9766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9767, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9768, %r9766, %r9767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9771, %r9763, %r9768;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9774, %r889, %r1109, %r9777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9778, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9779, %r9777, %r9778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9782, %r9774, %r9779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9785, %r878, %r1131, %r9766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9789, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9790, %r9766, %r9789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9793, %r9785, %r9790;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9796, %r889, %r1131, %r9777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9800, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9801, %r9777, %r9800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9804, %r9796, %r9801;
	// end inline asm
	// begin inline asm
	mov.b32 %r9812, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9823, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9809, %r878, %r1155, %r9812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9813, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9814, %r9812, %r9813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9817, %r9809, %r9814;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9820, %r889, %r1155, %r9823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9824, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9825, %r9823, %r9824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9828, %r9820, %r9825;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9831, %r878, %r1177, %r9812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9835, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9836, %r9812, %r9835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9839, %r9831, %r9836;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9842, %r889, %r1177, %r9823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9846, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9847, %r9823, %r9846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9850, %r9842, %r9847;
	// end inline asm
	// begin inline asm
	mov.b32 %r9858, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9869, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9855, %r878, %r1201, %r9858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9859, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9860, %r9858, %r9859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9863, %r9855, %r9860;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9866, %r889, %r1201, %r9869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9870, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9871, %r9869, %r9870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9874, %r9866, %r9871;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9877, %r878, %r1223, %r9858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9881, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9882, %r9858, %r9881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9885, %r9877, %r9882;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9888, %r889, %r1223, %r9869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9892, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9893, %r9869, %r9892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9896, %r9888, %r9893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9899, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9901, %r9899, %r9541, %r9403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9905, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9907, %r9905, %r9552, %r9407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9911, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9913, %r9911, %r9563, %r9411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9917, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9919, %r9917, %r9574, %r9415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9923, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9925, %r9923, %r9587, %r9419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9929, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9931, %r9929, %r9598, %r9423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9935, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9937, %r9935, %r9609, %r9427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9941, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9943, %r9941, %r9620, %r9431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9947, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9949, %r9947, %r9633, %r9435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9953, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9955, %r9953, %r9644, %r9439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9959, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9961, %r9959, %r9655, %r9443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9965, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9967, %r9965, %r9666, %r9447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9971, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9973, %r9971, %r9679, %r9451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9977, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9979, %r9977, %r9690, %r9455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9983, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9985, %r9983, %r9701, %r9459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9989, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9991, %r9989, %r9712, %r9463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9995, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9997, %r9995, %r9725, %r9467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10001, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10003, %r10001, %r9736, %r9471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10007, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10009, %r10007, %r9747, %r9475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10013, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10015, %r10013, %r9758, %r9479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10019, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10021, %r10019, %r9771, %r9483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10025, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10027, %r10025, %r9782, %r9487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10031, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10033, %r10031, %r9793, %r9491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10037, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10039, %r10037, %r9804, %r9495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10043, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10045, %r10043, %r9817, %r9499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10049, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10051, %r10049, %r9828, %r9503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10055, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10057, %r10055, %r9839, %r9507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10061, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10063, %r10061, %r9850, %r9511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10067, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10069, %r10067, %r9863, %r9515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10073, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10075, %r10073, %r9874, %r9519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10079, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10081, %r10079, %r9885, %r9523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10085, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10087, %r10085, %r9896, %r9527;
	// end inline asm
	// begin inline asm
	mov.b32 %r10096, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10107, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10093, %r878, %r4695, %r10096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10098, %r10096, %r10097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10101, %r10093, %r10098;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10104, %r889, %r4695, %r10107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10109, %r10107, %r10108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10112, %r10104, %r10109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10115, %r878, %r4717, %r10096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10119, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10120, %r10096, %r10119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10123, %r10115, %r10120;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10126, %r889, %r4717, %r10107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10131, %r10107, %r10130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10134, %r10126, %r10131;
	// end inline asm
	// begin inline asm
	mov.b32 %r10142, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10153, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10139, %r878, %r4741, %r10142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10144, %r10142, %r10143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10147, %r10139, %r10144;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10150, %r889, %r4741, %r10153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10154, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10155, %r10153, %r10154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10158, %r10150, %r10155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10161, %r878, %r4763, %r10142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10165, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10166, %r10142, %r10165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10169, %r10161, %r10166;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10172, %r889, %r4763, %r10153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10177, %r10153, %r10176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10180, %r10172, %r10177;
	// end inline asm
	// begin inline asm
	mov.b32 %r10188, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10199, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10185, %r878, %r4787, %r10188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10190, %r10188, %r10189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10193, %r10185, %r10190;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10196, %r889, %r4787, %r10199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10200, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10201, %r10199, %r10200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10204, %r10196, %r10201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10207, %r878, %r4809, %r10188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10211, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10212, %r10188, %r10211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10215, %r10207, %r10212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10218, %r889, %r4809, %r10199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10222, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10223, %r10199, %r10222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10226, %r10218, %r10223;
	// end inline asm
	// begin inline asm
	mov.b32 %r10234, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10245, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10231, %r878, %r4833, %r10234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10236, %r10234, %r10235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10239, %r10231, %r10236;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10242, %r889, %r4833, %r10245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10246, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10247, %r10245, %r10246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10250, %r10242, %r10247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10253, %r878, %r4855, %r10234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10257, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10258, %r10234, %r10257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10261, %r10253, %r10258;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10264, %r889, %r4855, %r10245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10268, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10269, %r10245, %r10268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10272, %r10264, %r10269;
	// end inline asm
	// begin inline asm
	mov.b32 %r10280, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10291, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10277, %r878, %r4879, %r10280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10281, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10282, %r10280, %r10281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10285, %r10277, %r10282;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10288, %r889, %r4879, %r10291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10292, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10293, %r10291, %r10292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10296, %r10288, %r10293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10299, %r878, %r4901, %r10280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10303, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10304, %r10280, %r10303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10307, %r10299, %r10304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10310, %r889, %r4901, %r10291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10314, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10315, %r10291, %r10314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10318, %r10310, %r10315;
	// end inline asm
	// begin inline asm
	mov.b32 %r10326, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10337, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10323, %r878, %r4925, %r10326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10327, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10328, %r10326, %r10327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10331, %r10323, %r10328;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10334, %r889, %r4925, %r10337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10338, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10339, %r10337, %r10338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10342, %r10334, %r10339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10345, %r878, %r4947, %r10326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10349, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10350, %r10326, %r10349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10353, %r10345, %r10350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10356, %r889, %r4947, %r10337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10360, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10361, %r10337, %r10360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10364, %r10356, %r10361;
	// end inline asm
	// begin inline asm
	mov.b32 %r10372, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10383, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10369, %r878, %r4971, %r10372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10374, %r10372, %r10373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10377, %r10369, %r10374;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10380, %r889, %r4971, %r10383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10384, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10385, %r10383, %r10384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10388, %r10380, %r10385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10391, %r878, %r4993, %r10372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10395, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10396, %r10372, %r10395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10399, %r10391, %r10396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10402, %r889, %r4993, %r10383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10406, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10407, %r10383, %r10406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10410, %r10402, %r10407;
	// end inline asm
	// begin inline asm
	mov.b32 %r10418, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10429, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10415, %r878, %r5017, %r10418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10420, %r10418, %r10419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10423, %r10415, %r10420;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10426, %r889, %r5017, %r10429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10430, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10431, %r10429, %r10430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10434, %r10426, %r10431;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10437, %r878, %r5039, %r10418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10441, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10442, %r10418, %r10441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10445, %r10437, %r10442;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10448, %r889, %r5039, %r10429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10452, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10453, %r10429, %r10452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10456, %r10448, %r10453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10594, %r368, %r10101, %r9901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10591, %r368, %r10112, %r9907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10603, %r368, %r10123, %r9913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10600, %r368, %r10134, %r9919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10612, %r368, %r10147, %r9925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10609, %r368, %r10158, %r9931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10621, %r368, %r10169, %r9937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10618, %r368, %r10180, %r9943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10630, %r368, %r10193, %r9949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10627, %r368, %r10204, %r9955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10639, %r368, %r10215, %r9961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10636, %r368, %r10226, %r9967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10648, %r368, %r10239, %r9973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10645, %r368, %r10250, %r9979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10657, %r368, %r10261, %r9985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10654, %r368, %r10272, %r9991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10666, %r386, %r10285, %r9997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10663, %r386, %r10296, %r10003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10675, %r386, %r10307, %r10009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10672, %r386, %r10318, %r10015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10684, %r386, %r10331, %r10021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10681, %r386, %r10342, %r10027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10693, %r386, %r10353, %r10033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10690, %r386, %r10364, %r10039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10702, %r386, %r10377, %r10045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10699, %r386, %r10388, %r10051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10711, %r386, %r10399, %r10057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10708, %r386, %r10410, %r10063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10720, %r386, %r10423, %r10069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10717, %r386, %r10434, %r10075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10729, %r386, %r10445, %r10081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10726, %r386, %r10456, %r10087;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10587, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10589, %r10587, %r10591;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10592, %r425, %r10594, %r10589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10596, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10598, %r10596, %r10600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10601, %r425, %r10603, %r10598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10605, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10607, %r10605, %r10609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10610, %r425, %r10612, %r10607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10614, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10616, %r10614, %r10618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10619, %r425, %r10621, %r10616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10623, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10625, %r10623, %r10627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10628, %r425, %r10630, %r10625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10632, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10634, %r10632, %r10636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10637, %r425, %r10639, %r10634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10641, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10643, %r10641, %r10645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10646, %r425, %r10648, %r10643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10650, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10652, %r10650, %r10654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10655, %r425, %r10657, %r10652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10659, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10661, %r10659, %r10663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10664, %r428, %r10666, %r10661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10668, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10670, %r10668, %r10672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10673, %r428, %r10675, %r10670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10677, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10679, %r10677, %r10681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10682, %r428, %r10684, %r10679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10686, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10688, %r10686, %r10690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10691, %r428, %r10693, %r10688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10695, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10697, %r10695, %r10699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10700, %r428, %r10702, %r10697;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10704, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10706, %r10704, %r10708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10709, %r428, %r10711, %r10706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10713, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10715, %r10713, %r10717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10718, %r428, %r10720, %r10715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10722, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10724, %r10722, %r10726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10727, %r428, %r10729, %r10724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10731, %r431, %r10594;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10734, %r425, %r10591, %r10731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10738, %r431, %r10603;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10741, %r425, %r10600, %r10738;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10745, %r431, %r10612;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10748, %r425, %r10609, %r10745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10752, %r431, %r10621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10755, %r425, %r10618, %r10752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10759, %r431, %r10630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10762, %r425, %r10627, %r10759;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10766, %r431, %r10639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10769, %r425, %r10636, %r10766;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10773, %r431, %r10648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10776, %r425, %r10645, %r10773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10780, %r431, %r10657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10783, %r425, %r10654, %r10780;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10787, %r434, %r10666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10790, %r428, %r10663, %r10787;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10794, %r434, %r10675;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10797, %r428, %r10672, %r10794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10801, %r434, %r10684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10804, %r428, %r10681, %r10801;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10808, %r434, %r10693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10811, %r428, %r10690, %r10808;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10815, %r434, %r10702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10818, %r428, %r10699, %r10815;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10822, %r434, %r10711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10825, %r428, %r10708, %r10822;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10829, %r434, %r10720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10832, %r428, %r10717, %r10829;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10836, %r434, %r10729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10839, %r428, %r10726, %r10836;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11010, %r11007}, {%r492, %r498, %r495, %r501}, {%r10592, %r10734}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11019, %r11016}, {%r492, %r498, %r495, %r501}, {%r10601, %r10741}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11028, %r11025}, {%r492, %r498, %r495, %r501}, {%r10610, %r10748}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11037, %r11034}, {%r492, %r498, %r495, %r501}, {%r10619, %r10755}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11046, %r11043}, {%r492, %r498, %r495, %r501}, {%r10628, %r10762}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11055, %r11052}, {%r492, %r498, %r495, %r501}, {%r10637, %r10769}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11064, %r11061}, {%r492, %r498, %r495, %r501}, {%r10646, %r10776}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11073, %r11070}, {%r492, %r498, %r495, %r501}, {%r10655, %r10783}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11082, %r11079}, {%r492, %r498, %r495, %r501}, {%r10664, %r10790}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11091, %r11088}, {%r492, %r498, %r495, %r501}, {%r10673, %r10797}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11100, %r11097}, {%r492, %r498, %r495, %r501}, {%r10682, %r10804}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11109, %r11106}, {%r492, %r498, %r495, %r501}, {%r10691, %r10811}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11118, %r11115}, {%r492, %r498, %r495, %r501}, {%r10700, %r10818}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11127, %r11124}, {%r492, %r498, %r495, %r501}, {%r10709, %r10825}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11136, %r11133}, {%r492, %r498, %r495, %r501}, {%r10718, %r10832}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11145, %r11142}, {%r492, %r498, %r495, %r501}, {%r10727, %r10839}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11003, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11005, %r11003, %r11007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11008, %r542, %r11010, %r11005;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11012, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11014, %r11012, %r11016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11017, %r542, %r11019, %r11014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11021, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11023, %r11021, %r11025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11026, %r542, %r11028, %r11023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11030, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11032, %r11030, %r11034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11035, %r542, %r11037, %r11032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11039, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11041, %r11039, %r11043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11044, %r542, %r11046, %r11041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11048, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11050, %r11048, %r11052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11053, %r542, %r11055, %r11050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11057, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11059, %r11057, %r11061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11062, %r542, %r11064, %r11059;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11066, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11068, %r11066, %r11070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11071, %r542, %r11073, %r11068;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11075, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11077, %r11075, %r11079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11080, %r542, %r11082, %r11077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11084, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11086, %r11084, %r11088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11089, %r542, %r11091, %r11086;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11093, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11095, %r11093, %r11097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11098, %r542, %r11100, %r11095;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11102, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11104, %r11102, %r11106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11107, %r542, %r11109, %r11104;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11111, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11113, %r11111, %r11115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11116, %r542, %r11118, %r11113;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11120, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11122, %r11120, %r11124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11125, %r542, %r11127, %r11122;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11129, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11131, %r11129, %r11133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11134, %r542, %r11136, %r11131;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11138, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11140, %r11138, %r11142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11143, %r542, %r11145, %r11140;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11147, %r545, %r11010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11150, %r542, %r11007, %r11147;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11154, %r545, %r11019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11157, %r542, %r11016, %r11154;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11161, %r545, %r11028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11164, %r542, %r11025, %r11161;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11168, %r545, %r11037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11171, %r542, %r11034, %r11168;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11175, %r545, %r11046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11178, %r542, %r11043, %r11175;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11182, %r545, %r11055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11185, %r542, %r11052, %r11182;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11189, %r545, %r11064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11192, %r542, %r11061, %r11189;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11196, %r545, %r11073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11199, %r542, %r11070, %r11196;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11203, %r545, %r11082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11206, %r542, %r11079, %r11203;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11210, %r545, %r11091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11213, %r542, %r11088, %r11210;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11217, %r545, %r11100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11220, %r542, %r11097, %r11217;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11224, %r545, %r11109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11227, %r542, %r11106, %r11224;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11231, %r545, %r11118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11234, %r542, %r11115, %r11231;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11238, %r545, %r11127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11241, %r542, %r11124, %r11238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11245, %r545, %r11136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11248, %r542, %r11133, %r11245;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11252, %r545, %r11145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11255, %r542, %r11142, %r11252;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11548, %r11551}, {%r580, %r586, %r583, %r589}, {%r11008, %r11150}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11554, %r11557}, {%r580, %r586, %r583, %r589}, {%r11017, %r11157}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11560, %r11563}, {%r580, %r586, %r583, %r589}, {%r11026, %r11164}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11566, %r11569}, {%r580, %r586, %r583, %r589}, {%r11035, %r11171}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11572, %r11575}, {%r580, %r586, %r583, %r589}, {%r11044, %r11178}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11578, %r11581}, {%r580, %r586, %r583, %r589}, {%r11053, %r11185}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11584, %r11587}, {%r580, %r586, %r583, %r589}, {%r11062, %r11192}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11590, %r11593}, {%r580, %r586, %r583, %r589}, {%r11071, %r11199}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11549, %r11552}, {%r580, %r586, %r583, %r589}, {%r11080, %r11206}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11555, %r11558}, {%r580, %r586, %r583, %r589}, {%r11089, %r11213}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11561, %r11564}, {%r580, %r586, %r583, %r589}, {%r11098, %r11220}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11567, %r11570}, {%r580, %r586, %r583, %r589}, {%r11107, %r11227}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11573, %r11576}, {%r580, %r586, %r583, %r589}, {%r11116, %r11234}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11579, %r11582}, {%r580, %r586, %r583, %r589}, {%r11125, %r11241}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11585, %r11588}, {%r580, %r586, %r583, %r589}, {%r11134, %r11248}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11591, %r11594}, {%r580, %r586, %r583, %r589}, {%r11143, %r11255}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11547, %r11548, %r11549;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11550, %r11551, %r11552;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11553, %r11554, %r11555;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11556, %r11557, %r11558;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11559, %r11560, %r11561;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11562, %r11563, %r11564;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11565, %r11566, %r11567;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11568, %r11569, %r11570;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11571, %r11572, %r11573;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11574, %r11575, %r11576;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11577, %r11578, %r11579;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11580, %r11581, %r11582;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11583, %r11584, %r11585;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11586, %r11587, %r11588;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11589, %r11590, %r11591;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11592, %r11593, %r11594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11595, %r11548, %r11549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11598, %r11551, %r11552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11601, %r11554, %r11555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11604, %r11557, %r11558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11607, %r11560, %r11561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11610, %r11563, %r11564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11613, %r11566, %r11567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11616, %r11569, %r11570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11619, %r11572, %r11573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11622, %r11575, %r11576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11625, %r11578, %r11579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11628, %r11581, %r11582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11631, %r11584, %r11585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11634, %r11587, %r11588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11637, %r11590, %r11591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11640, %r11593, %r11594;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11643, %r182, %r11547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11646, %r182, %r11550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11649, %r182, %r11553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11652, %r182, %r11556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11655, %r182, %r11559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11658, %r182, %r11562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11661, %r182, %r11565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11664, %r182, %r11568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11667, %r182, %r11571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11670, %r182, %r11574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11673, %r182, %r11577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11676, %r182, %r11580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11679, %r182, %r11583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11682, %r182, %r11586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11685, %r182, %r11589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11688, %r182, %r11592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11691, %r184, %r11595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11694, %r184, %r11598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11697, %r184, %r11601;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11700, %r184, %r11604;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11703, %r184, %r11607;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11706, %r184, %r11610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11709, %r184, %r11613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11712, %r184, %r11616;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11715, %r184, %r11619;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11718, %r184, %r11622;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11721, %r184, %r11625;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11724, %r184, %r11628;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11727, %r184, %r11631;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11730, %r184, %r11634;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11733, %r184, %r11637;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11736, %r184, %r11640;
	// end inline asm
	// begin inline asm
	mov.b32 %r11739, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11740, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11741, %r11643, %r11739;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11744, %r11741, %r11740;
	// end inline asm
	// begin inline asm
	mov.b32 %r11747, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11748, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11749, %r11646, %r11747;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11752, %r11749, %r11748;
	// end inline asm
	// begin inline asm
	mov.b32 %r11755, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11756, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11757, %r11649, %r11755;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11760, %r11757, %r11756;
	// end inline asm
	// begin inline asm
	mov.b32 %r11763, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11764, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11765, %r11652, %r11763;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11768, %r11765, %r11764;
	// end inline asm
	// begin inline asm
	mov.b32 %r11771, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11772, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11773, %r11655, %r11771;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11776, %r11773, %r11772;
	// end inline asm
	// begin inline asm
	mov.b32 %r11779, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11780, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11781, %r11658, %r11779;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11784, %r11781, %r11780;
	// end inline asm
	// begin inline asm
	mov.b32 %r11787, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11788, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11789, %r11661, %r11787;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11792, %r11789, %r11788;
	// end inline asm
	// begin inline asm
	mov.b32 %r11795, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11796, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11797, %r11664, %r11795;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11800, %r11797, %r11796;
	// end inline asm
	// begin inline asm
	mov.b32 %r11803, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11804, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11805, %r11667, %r11803;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11808, %r11805, %r11804;
	// end inline asm
	// begin inline asm
	mov.b32 %r11811, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11812, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11813, %r11670, %r11811;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11816, %r11813, %r11812;
	// end inline asm
	// begin inline asm
	mov.b32 %r11819, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11820, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11821, %r11673, %r11819;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11824, %r11821, %r11820;
	// end inline asm
	// begin inline asm
	mov.b32 %r11827, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11828, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11829, %r11676, %r11827;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11832, %r11829, %r11828;
	// end inline asm
	// begin inline asm
	mov.b32 %r11835, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11836, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11837, %r11679, %r11835;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11840, %r11837, %r11836;
	// end inline asm
	// begin inline asm
	mov.b32 %r11843, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11844, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11845, %r11682, %r11843;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11848, %r11845, %r11844;
	// end inline asm
	// begin inline asm
	mov.b32 %r11851, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11852, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11853, %r11685, %r11851;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11856, %r11853, %r11852;
	// end inline asm
	// begin inline asm
	mov.b32 %r11859, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11860, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11861, %r11688, %r11859;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11864, %r11861, %r11860;
	// end inline asm
	// begin inline asm
	mov.b32 %r11867, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11868, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11869, %r11691, %r11867;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11872, %r11869, %r11868;
	// end inline asm
	// begin inline asm
	mov.b32 %r11875, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11876, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11877, %r11694, %r11875;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11880, %r11877, %r11876;
	// end inline asm
	// begin inline asm
	mov.b32 %r11883, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11884, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11885, %r11697, %r11883;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11888, %r11885, %r11884;
	// end inline asm
	// begin inline asm
	mov.b32 %r11891, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11892, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11893, %r11700, %r11891;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11896, %r11893, %r11892;
	// end inline asm
	// begin inline asm
	mov.b32 %r11899, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11900, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11901, %r11703, %r11899;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11904, %r11901, %r11900;
	// end inline asm
	// begin inline asm
	mov.b32 %r11907, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11908, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11909, %r11706, %r11907;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11912, %r11909, %r11908;
	// end inline asm
	// begin inline asm
	mov.b32 %r11915, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11916, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11917, %r11709, %r11915;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11920, %r11917, %r11916;
	// end inline asm
	// begin inline asm
	mov.b32 %r11923, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11924, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11925, %r11712, %r11923;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11928, %r11925, %r11924;
	// end inline asm
	// begin inline asm
	mov.b32 %r11931, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11932, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11933, %r11715, %r11931;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11936, %r11933, %r11932;
	// end inline asm
	// begin inline asm
	mov.b32 %r11939, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11940, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11941, %r11718, %r11939;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11944, %r11941, %r11940;
	// end inline asm
	// begin inline asm
	mov.b32 %r11947, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11948, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11949, %r11721, %r11947;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11952, %r11949, %r11948;
	// end inline asm
	// begin inline asm
	mov.b32 %r11955, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11956, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11957, %r11724, %r11955;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11960, %r11957, %r11956;
	// end inline asm
	// begin inline asm
	mov.b32 %r11963, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11964, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11965, %r11727, %r11963;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11968, %r11965, %r11964;
	// end inline asm
	// begin inline asm
	mov.b32 %r11971, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11972, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11973, %r11730, %r11971;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11976, %r11973, %r11972;
	// end inline asm
	// begin inline asm
	mov.b32 %r11979, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11980, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11981, %r11733, %r11979;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11984, %r11981, %r11980;
	// end inline asm
	// begin inline asm
	mov.b32 %r11987, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11988, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11989, %r11736, %r11987;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11992, %r11989, %r11988;
	// end inline asm
	// begin inline asm
	mov.b32 %r11998, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11997, %r11998, %r11996;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12000, %r11744, %r11997;
	// end inline asm
	// begin inline asm
	mov.b32 %r12003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12004, %r11998, %r12003;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12007, %r11752, %r12004;
	// end inline asm
	// begin inline asm
	mov.b32 %r12010, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12011, %r11998, %r12010;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12014, %r11760, %r12011;
	// end inline asm
	// begin inline asm
	mov.b32 %r12017, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12018, %r11998, %r12017;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12021, %r11768, %r12018;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12024, %r12000, %r12014, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12028, %r12007, %r12021, %r4395;
	// end inline asm
	shl.b32 	%r12035, %r12028, 4;
	// begin inline asm
	lop3.b32 %r12032, %r4401, %r12024, %r12035, 202;
	// end inline asm
	xor.b32  	%r16212, %r12032, -2004318072;
	// begin inline asm
	mov.b32 %r12039, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12037, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12038, %r12039, %r12037;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12041, %r11776, %r12038;
	// end inline asm
	// begin inline asm
	mov.b32 %r12044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12045, %r12039, %r12044;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12048, %r11784, %r12045;
	// end inline asm
	// begin inline asm
	mov.b32 %r12051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12052, %r12039, %r12051;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12055, %r11792, %r12052;
	// end inline asm
	// begin inline asm
	mov.b32 %r12058, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12059, %r12039, %r12058;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12062, %r11800, %r12059;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12065, %r12041, %r12055, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12069, %r12048, %r12062, %r4395;
	// end inline asm
	shl.b32 	%r12076, %r12069, 4;
	// begin inline asm
	lop3.b32 %r12073, %r4401, %r12065, %r12076, 202;
	// end inline asm
	xor.b32  	%r16213, %r12073, -2004318072;
	// begin inline asm
	mov.b32 %r12080, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12078, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12079, %r12080, %r12078;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12082, %r11808, %r12079;
	// end inline asm
	// begin inline asm
	mov.b32 %r12085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12086, %r12080, %r12085;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12089, %r11816, %r12086;
	// end inline asm
	// begin inline asm
	mov.b32 %r12092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12093, %r12080, %r12092;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12096, %r11824, %r12093;
	// end inline asm
	// begin inline asm
	mov.b32 %r12099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12100, %r12080, %r12099;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12103, %r11832, %r12100;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12106, %r12082, %r12096, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12110, %r12089, %r12103, %r4395;
	// end inline asm
	shl.b32 	%r12117, %r12110, 4;
	// begin inline asm
	lop3.b32 %r12114, %r4401, %r12106, %r12117, 202;
	// end inline asm
	xor.b32  	%r16214, %r12114, -2004318072;
	// begin inline asm
	mov.b32 %r12121, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12119, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12120, %r12121, %r12119;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12123, %r11840, %r12120;
	// end inline asm
	// begin inline asm
	mov.b32 %r12126, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12127, %r12121, %r12126;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12130, %r11848, %r12127;
	// end inline asm
	// begin inline asm
	mov.b32 %r12133, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12134, %r12121, %r12133;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12137, %r11856, %r12134;
	// end inline asm
	// begin inline asm
	mov.b32 %r12140, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12141, %r12121, %r12140;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12144, %r11864, %r12141;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12147, %r12123, %r12137, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12151, %r12130, %r12144, %r4395;
	// end inline asm
	shl.b32 	%r12158, %r12151, 4;
	// begin inline asm
	lop3.b32 %r12155, %r4401, %r12147, %r12158, 202;
	// end inline asm
	xor.b32  	%r16215, %r12155, -2004318072;
	// begin inline asm
	mov.b32 %r12162, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12160, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12161, %r12162, %r12160;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12164, %r11872, %r12161;
	// end inline asm
	// begin inline asm
	mov.b32 %r12167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12168, %r12162, %r12167;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12171, %r11880, %r12168;
	// end inline asm
	// begin inline asm
	mov.b32 %r12174, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12175, %r12162, %r12174;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12178, %r11888, %r12175;
	// end inline asm
	// begin inline asm
	mov.b32 %r12181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12182, %r12162, %r12181;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12185, %r11896, %r12182;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12188, %r12164, %r12178, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12192, %r12171, %r12185, %r4395;
	// end inline asm
	shl.b32 	%r12199, %r12192, 4;
	// begin inline asm
	lop3.b32 %r12196, %r4401, %r12188, %r12199, 202;
	// end inline asm
	xor.b32  	%r16216, %r12196, -2004318072;
	// begin inline asm
	mov.b32 %r12203, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12201, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12202, %r12203, %r12201;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12205, %r11904, %r12202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12209, %r12203, %r12208;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12212, %r11912, %r12209;
	// end inline asm
	// begin inline asm
	mov.b32 %r12215, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12216, %r12203, %r12215;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12219, %r11920, %r12216;
	// end inline asm
	// begin inline asm
	mov.b32 %r12222, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12223, %r12203, %r12222;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12226, %r11928, %r12223;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12229, %r12205, %r12219, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12233, %r12212, %r12226, %r4395;
	// end inline asm
	shl.b32 	%r12240, %r12233, 4;
	// begin inline asm
	lop3.b32 %r12237, %r4401, %r12229, %r12240, 202;
	// end inline asm
	xor.b32  	%r16217, %r12237, -2004318072;
	// begin inline asm
	mov.b32 %r12244, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12242, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12243, %r12244, %r12242;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12246, %r11936, %r12243;
	// end inline asm
	// begin inline asm
	mov.b32 %r12249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12250, %r12244, %r12249;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12253, %r11944, %r12250;
	// end inline asm
	// begin inline asm
	mov.b32 %r12256, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12257, %r12244, %r12256;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12260, %r11952, %r12257;
	// end inline asm
	// begin inline asm
	mov.b32 %r12263, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12264, %r12244, %r12263;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12267, %r11960, %r12264;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12270, %r12246, %r12260, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12274, %r12253, %r12267, %r4395;
	// end inline asm
	shl.b32 	%r12281, %r12274, 4;
	// begin inline asm
	lop3.b32 %r12278, %r4401, %r12270, %r12281, 202;
	// end inline asm
	xor.b32  	%r16218, %r12278, -2004318072;
	// begin inline asm
	mov.b32 %r12285, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12283, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12284, %r12285, %r12283;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12287, %r11968, %r12284;
	// end inline asm
	// begin inline asm
	mov.b32 %r12290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12291, %r12285, %r12290;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12294, %r11976, %r12291;
	// end inline asm
	// begin inline asm
	mov.b32 %r12297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12298, %r12285, %r12297;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12301, %r11984, %r12298;
	// end inline asm
	// begin inline asm
	mov.b32 %r12304, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12305, %r12285, %r12304;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12308, %r11992, %r12305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12311, %r12287, %r12301, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12315, %r12294, %r12308, %r4395;
	// end inline asm
	shl.b32 	%r12322, %r12315, 4;
	// begin inline asm
	lop3.b32 %r12319, %r4401, %r12311, %r12322, 202;
	// end inline asm
	xor.b32  	%r16219, %r12319, -2004318072;
	st.shared.u32 	[%rd93], %r16212;
	st.shared.u32 	[%rd95], %r16213;
	st.shared.u32 	[%rd97], %r16214;
	st.shared.u32 	[%rd99], %r16215;
	st.shared.u32 	[%rd101], %r16216;
	st.shared.u32 	[%rd103], %r16217;
	st.shared.u32 	[%rd105], %r16218;
	st.shared.u32 	[%rd107], %r16219;
	ld.shared.u32 	%r16341, [%rd77];
	ld.shared.u32 	%r16342, [%rd79];
	ld.shared.u32 	%r16343, [%rd81];
	ld.shared.u32 	%r16344, [%rd83];
	ld.shared.u32 	%r16353, [%rd85];
	ld.shared.u32 	%r16354, [%rd87];
	ld.shared.u32 	%r16355, [%rd89];
	ld.shared.u32 	%r16356, [%rd91];
	// begin inline asm
	mov.b32 %r12328, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12339, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12327, %r16341, -2004318072;
	// begin inline asm
	lop3.b32 %r12325, %r878, %r12327, %r12328, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12329, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12330, %r12328, %r12329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12333, %r12325, %r12330;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12336, %r889, %r12327, %r12339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12340, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12341, %r12339, %r12340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12344, %r12336, %r12341;
	// end inline asm
	shr.u32 	%r12349, %r12327, 8;
	// begin inline asm
	lop3.b32 %r12347, %r878, %r12349, %r12328, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12352, %r12328, %r12351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12355, %r12347, %r12352;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12358, %r889, %r12349, %r12339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12362, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12363, %r12339, %r12362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12366, %r12358, %r12363;
	// end inline asm
	// begin inline asm
	mov.b32 %r12374, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12385, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12373, %r16342, -2004318072;
	// begin inline asm
	lop3.b32 %r12371, %r878, %r12373, %r12374, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12375, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12376, %r12374, %r12375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12379, %r12371, %r12376;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12382, %r889, %r12373, %r12385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12386, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12387, %r12385, %r12386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12390, %r12382, %r12387;
	// end inline asm
	shr.u32 	%r12395, %r12373, 8;
	// begin inline asm
	lop3.b32 %r12393, %r878, %r12395, %r12374, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12398, %r12374, %r12397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12401, %r12393, %r12398;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12404, %r889, %r12395, %r12385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12409, %r12385, %r12408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12412, %r12404, %r12409;
	// end inline asm
	// begin inline asm
	mov.b32 %r12420, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12431, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12419, %r16343, -2004318072;
	// begin inline asm
	lop3.b32 %r12417, %r878, %r12419, %r12420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12421, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12422, %r12420, %r12421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12425, %r12417, %r12422;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12428, %r889, %r12419, %r12431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12432, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12433, %r12431, %r12432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12436, %r12428, %r12433;
	// end inline asm
	shr.u32 	%r12441, %r12419, 8;
	// begin inline asm
	lop3.b32 %r12439, %r878, %r12441, %r12420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12443, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12444, %r12420, %r12443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12447, %r12439, %r12444;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12450, %r889, %r12441, %r12431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12454, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12455, %r12431, %r12454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12458, %r12450, %r12455;
	// end inline asm
	// begin inline asm
	mov.b32 %r12466, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12477, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12465, %r16344, -2004318072;
	// begin inline asm
	lop3.b32 %r12463, %r878, %r12465, %r12466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12467, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12468, %r12466, %r12467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12471, %r12463, %r12468;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12474, %r889, %r12465, %r12477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12478, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12479, %r12477, %r12478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12482, %r12474, %r12479;
	// end inline asm
	shr.u32 	%r12487, %r12465, 8;
	// begin inline asm
	lop3.b32 %r12485, %r878, %r12487, %r12466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12490, %r12466, %r12489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12493, %r12485, %r12490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12496, %r889, %r12487, %r12477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12501, %r12477, %r12500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12504, %r12496, %r12501;
	// end inline asm
	// begin inline asm
	mov.b32 %r12512, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12523, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12511, %r16353, -2004318072;
	// begin inline asm
	lop3.b32 %r12509, %r878, %r12511, %r12512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12513, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12514, %r12512, %r12513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12517, %r12509, %r12514;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12520, %r889, %r12511, %r12523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12524, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12525, %r12523, %r12524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12528, %r12520, %r12525;
	// end inline asm
	shr.u32 	%r12533, %r12511, 8;
	// begin inline asm
	lop3.b32 %r12531, %r878, %r12533, %r12512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12536, %r12512, %r12535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12539, %r12531, %r12536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12542, %r889, %r12533, %r12523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12547, %r12523, %r12546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12550, %r12542, %r12547;
	// end inline asm
	// begin inline asm
	mov.b32 %r12558, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12569, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12557, %r16354, -2004318072;
	// begin inline asm
	lop3.b32 %r12555, %r878, %r12557, %r12558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12559, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12560, %r12558, %r12559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12563, %r12555, %r12560;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12566, %r889, %r12557, %r12569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12570, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12571, %r12569, %r12570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12574, %r12566, %r12571;
	// end inline asm
	shr.u32 	%r12579, %r12557, 8;
	// begin inline asm
	lop3.b32 %r12577, %r878, %r12579, %r12558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12581, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12582, %r12558, %r12581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12585, %r12577, %r12582;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12588, %r889, %r12579, %r12569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12593, %r12569, %r12592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12596, %r12588, %r12593;
	// end inline asm
	// begin inline asm
	mov.b32 %r12604, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12615, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12603, %r16355, -2004318072;
	// begin inline asm
	lop3.b32 %r12601, %r878, %r12603, %r12604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12605, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12606, %r12604, %r12605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12609, %r12601, %r12606;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12612, %r889, %r12603, %r12615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12616, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12617, %r12615, %r12616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12620, %r12612, %r12617;
	// end inline asm
	shr.u32 	%r12625, %r12603, 8;
	// begin inline asm
	lop3.b32 %r12623, %r878, %r12625, %r12604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12627, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12628, %r12604, %r12627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12631, %r12623, %r12628;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12634, %r889, %r12625, %r12615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12638, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12639, %r12615, %r12638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12642, %r12634, %r12639;
	// end inline asm
	// begin inline asm
	mov.b32 %r12650, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12661, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12649, %r16356, -2004318072;
	// begin inline asm
	lop3.b32 %r12647, %r878, %r12649, %r12650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12651, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12652, %r12650, %r12651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12655, %r12647, %r12652;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12658, %r889, %r12649, %r12661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12662, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12663, %r12661, %r12662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12666, %r12658, %r12663;
	// end inline asm
	shr.u32 	%r12671, %r12649, 8;
	// begin inline asm
	lop3.b32 %r12669, %r878, %r12671, %r12650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12673, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12674, %r12650, %r12673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12677, %r12669, %r12674;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12680, %r889, %r12671, %r12661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12684, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12685, %r12661, %r12684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12688, %r12680, %r12685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12691, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12693, %r12691, %r12333;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12696, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12698, %r12696, %r12344;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12701, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12703, %r12701, %r12355;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12706, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12708, %r12706, %r12366;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12711, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12713, %r12711, %r12379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12716, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12718, %r12716, %r12390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12721, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12723, %r12721, %r12401;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12726, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12728, %r12726, %r12412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12731, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12733, %r12731, %r12425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12736, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12738, %r12736, %r12436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12741, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12743, %r12741, %r12447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12746, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12748, %r12746, %r12458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12751, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12753, %r12751, %r12471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12756, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12758, %r12756, %r12482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12761, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12763, %r12761, %r12493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12766, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12768, %r12766, %r12504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12771, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12773, %r12771, %r12517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12776, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12778, %r12776, %r12528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12781, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12783, %r12781, %r12539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12786, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12788, %r12786, %r12550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12791, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12793, %r12791, %r12563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12796, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12798, %r12796, %r12574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12801, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12803, %r12801, %r12585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12806, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12808, %r12806, %r12596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12811, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12813, %r12811, %r12609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12816, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12818, %r12816, %r12620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12821, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12823, %r12821, %r12631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12826, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12828, %r12826, %r12642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12831, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12833, %r12831, %r12655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12836, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12838, %r12836, %r12666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12841, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12843, %r12841, %r12677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12846, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12848, %r12846, %r12688;
	// end inline asm
	// begin inline asm
	mov.b32 %r12856, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12867, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12853, %r878, %r879, %r12856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12857, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12858, %r12856, %r12857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12861, %r12853, %r12858;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12864, %r889, %r879, %r12867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12868, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12869, %r12867, %r12868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12872, %r12864, %r12869;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12875, %r878, %r901, %r12856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12879, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12880, %r12856, %r12879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12883, %r12875, %r12880;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12886, %r889, %r901, %r12867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12890, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12891, %r12867, %r12890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12894, %r12886, %r12891;
	// end inline asm
	// begin inline asm
	mov.b32 %r12902, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12913, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12899, %r878, %r925, %r12902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12903, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12904, %r12902, %r12903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12907, %r12899, %r12904;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12910, %r889, %r925, %r12913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12914, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12915, %r12913, %r12914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12918, %r12910, %r12915;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12921, %r878, %r947, %r12902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12925, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12926, %r12902, %r12925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12929, %r12921, %r12926;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12932, %r889, %r947, %r12913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12936, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12937, %r12913, %r12936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12940, %r12932, %r12937;
	// end inline asm
	// begin inline asm
	mov.b32 %r12948, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12959, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12945, %r878, %r971, %r12948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12949, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12950, %r12948, %r12949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12953, %r12945, %r12950;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12956, %r889, %r971, %r12959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12960, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12961, %r12959, %r12960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12964, %r12956, %r12961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12967, %r878, %r993, %r12948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12971, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12972, %r12948, %r12971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12975, %r12967, %r12972;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12978, %r889, %r993, %r12959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12982, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12983, %r12959, %r12982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12986, %r12978, %r12983;
	// end inline asm
	// begin inline asm
	mov.b32 %r12994, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13005, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12991, %r878, %r1017, %r12994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12995, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12996, %r12994, %r12995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12999, %r12991, %r12996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13002, %r889, %r1017, %r13005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13006, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13007, %r13005, %r13006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13010, %r13002, %r13007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13013, %r878, %r1039, %r12994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13017, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13018, %r12994, %r13017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13021, %r13013, %r13018;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13024, %r889, %r1039, %r13005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13028, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13029, %r13005, %r13028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13032, %r13024, %r13029;
	// end inline asm
	// begin inline asm
	mov.b32 %r13040, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13051, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13037, %r878, %r1063, %r13040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13041, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13042, %r13040, %r13041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13045, %r13037, %r13042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13048, %r889, %r1063, %r13051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13052, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13053, %r13051, %r13052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13056, %r13048, %r13053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13059, %r878, %r1085, %r13040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13063, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13064, %r13040, %r13063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13067, %r13059, %r13064;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13070, %r889, %r1085, %r13051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13074, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13075, %r13051, %r13074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13078, %r13070, %r13075;
	// end inline asm
	// begin inline asm
	mov.b32 %r13086, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13097, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13083, %r878, %r1109, %r13086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13088, %r13086, %r13087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13091, %r13083, %r13088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13094, %r889, %r1109, %r13097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13098, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13099, %r13097, %r13098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13102, %r13094, %r13099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13105, %r878, %r1131, %r13086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13109, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13110, %r13086, %r13109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13113, %r13105, %r13110;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13116, %r889, %r1131, %r13097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13120, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13121, %r13097, %r13120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13124, %r13116, %r13121;
	// end inline asm
	// begin inline asm
	mov.b32 %r13132, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13143, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13129, %r878, %r1155, %r13132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13133, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13134, %r13132, %r13133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13137, %r13129, %r13134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13140, %r889, %r1155, %r13143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13144, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13145, %r13143, %r13144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13148, %r13140, %r13145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13151, %r878, %r1177, %r13132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13155, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13156, %r13132, %r13155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13159, %r13151, %r13156;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13162, %r889, %r1177, %r13143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13166, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13167, %r13143, %r13166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13170, %r13162, %r13167;
	// end inline asm
	// begin inline asm
	mov.b32 %r13178, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13189, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13175, %r878, %r1201, %r13178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13179, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13180, %r13178, %r13179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13183, %r13175, %r13180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13186, %r889, %r1201, %r13189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13190, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13191, %r13189, %r13190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13194, %r13186, %r13191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13197, %r878, %r1223, %r13178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13201, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13202, %r13178, %r13201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13205, %r13197, %r13202;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13208, %r889, %r1223, %r13189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13212, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13213, %r13189, %r13212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13216, %r13208, %r13213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13219, %r296, %r12861, %r12693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13223, %r296, %r12872, %r12698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13227, %r296, %r12883, %r12703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13231, %r296, %r12894, %r12708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13235, %r296, %r12907, %r12713;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13239, %r296, %r12918, %r12718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13243, %r296, %r12929, %r12723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13247, %r296, %r12940, %r12728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13251, %r296, %r12953, %r12733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13255, %r296, %r12964, %r12738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13259, %r296, %r12975, %r12743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13263, %r296, %r12986, %r12748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13267, %r296, %r12999, %r12753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13271, %r296, %r13010, %r12758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13275, %r296, %r13021, %r12763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13279, %r296, %r13032, %r12768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13283, %r314, %r13045, %r12773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13287, %r314, %r13056, %r12778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13291, %r314, %r13067, %r12783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13295, %r314, %r13078, %r12788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13299, %r314, %r13091, %r12793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13303, %r314, %r13102, %r12798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13307, %r314, %r13113, %r12803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13311, %r314, %r13124, %r12808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13315, %r314, %r13137, %r12813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13319, %r314, %r13148, %r12818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13323, %r314, %r13159, %r12823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13327, %r314, %r13170, %r12828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13331, %r314, %r13183, %r12833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13335, %r314, %r13194, %r12838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13339, %r314, %r13205, %r12843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13343, %r314, %r13216, %r12848;
	// end inline asm
	// begin inline asm
	mov.b32 %r13352, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13363, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13349, %r878, %r4695, %r13352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13354, %r13352, %r13353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13357, %r13349, %r13354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13360, %r889, %r4695, %r13363, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13364, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13365, %r13363, %r13364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13368, %r13360, %r13365;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13371, %r878, %r4717, %r13352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13375, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13376, %r13352, %r13375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13379, %r13371, %r13376;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13382, %r889, %r4717, %r13363, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13386, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13387, %r13363, %r13386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13390, %r13382, %r13387;
	// end inline asm
	// begin inline asm
	mov.b32 %r13398, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13409, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13395, %r878, %r4741, %r13398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13400, %r13398, %r13399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13403, %r13395, %r13400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13406, %r889, %r4741, %r13409, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13411, %r13409, %r13410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13414, %r13406, %r13411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13417, %r878, %r4763, %r13398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13421, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13422, %r13398, %r13421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13425, %r13417, %r13422;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13428, %r889, %r4763, %r13409, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13432, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13433, %r13409, %r13432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13436, %r13428, %r13433;
	// end inline asm
	// begin inline asm
	mov.b32 %r13444, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13455, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13441, %r878, %r4787, %r13444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13446, %r13444, %r13445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13449, %r13441, %r13446;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13452, %r889, %r4787, %r13455, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13456, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13457, %r13455, %r13456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13460, %r13452, %r13457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13463, %r878, %r4809, %r13444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13467, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13468, %r13444, %r13467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13471, %r13463, %r13468;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13474, %r889, %r4809, %r13455, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13478, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13479, %r13455, %r13478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13482, %r13474, %r13479;
	// end inline asm
	// begin inline asm
	mov.b32 %r13490, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13501, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13487, %r878, %r4833, %r13490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13492, %r13490, %r13491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13495, %r13487, %r13492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13498, %r889, %r4833, %r13501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13502, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13503, %r13501, %r13502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13506, %r13498, %r13503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13509, %r878, %r4855, %r13490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13513, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13514, %r13490, %r13513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13517, %r13509, %r13514;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13520, %r889, %r4855, %r13501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13524, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13525, %r13501, %r13524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13528, %r13520, %r13525;
	// end inline asm
	// begin inline asm
	mov.b32 %r13536, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13547, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13533, %r878, %r4879, %r13536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13538, %r13536, %r13537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13541, %r13533, %r13538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13544, %r889, %r4879, %r13547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13548, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13549, %r13547, %r13548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13552, %r13544, %r13549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13555, %r878, %r4901, %r13536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13559, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13560, %r13536, %r13559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13563, %r13555, %r13560;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13566, %r889, %r4901, %r13547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13570, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13571, %r13547, %r13570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13574, %r13566, %r13571;
	// end inline asm
	// begin inline asm
	mov.b32 %r13582, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13593, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13579, %r878, %r4925, %r13582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13584, %r13582, %r13583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13587, %r13579, %r13584;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13590, %r889, %r4925, %r13593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13594, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13595, %r13593, %r13594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13598, %r13590, %r13595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13601, %r878, %r4947, %r13582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13605, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13606, %r13582, %r13605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13609, %r13601, %r13606;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13612, %r889, %r4947, %r13593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13616, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13617, %r13593, %r13616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13620, %r13612, %r13617;
	// end inline asm
	// begin inline asm
	mov.b32 %r13628, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13639, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13625, %r878, %r4971, %r13628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13630, %r13628, %r13629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13633, %r13625, %r13630;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13636, %r889, %r4971, %r13639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13640, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13641, %r13639, %r13640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13644, %r13636, %r13641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13647, %r878, %r4993, %r13628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13651, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13652, %r13628, %r13651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13655, %r13647, %r13652;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13658, %r889, %r4993, %r13639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13662, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13663, %r13639, %r13662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13666, %r13658, %r13663;
	// end inline asm
	// begin inline asm
	mov.b32 %r13674, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13685, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13671, %r878, %r5017, %r13674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13675, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13676, %r13674, %r13675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13679, %r13671, %r13676;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13682, %r889, %r5017, %r13685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13686, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13687, %r13685, %r13686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13690, %r13682, %r13687;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13693, %r878, %r5039, %r13674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13697, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13698, %r13674, %r13697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13701, %r13693, %r13698;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13704, %r889, %r5039, %r13685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13708, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13709, %r13685, %r13708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13712, %r13704, %r13709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13715, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13717, %r13715, %r13357, %r13219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13721, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13723, %r13721, %r13368, %r13223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13727, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13729, %r13727, %r13379, %r13227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13733, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13735, %r13733, %r13390, %r13231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13739, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13741, %r13739, %r13403, %r13235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13745, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13747, %r13745, %r13414, %r13239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13751, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13753, %r13751, %r13425, %r13243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13757, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13759, %r13757, %r13436, %r13247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13763, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13765, %r13763, %r13449, %r13251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13769, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13771, %r13769, %r13460, %r13255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13775, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13777, %r13775, %r13471, %r13259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13781, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13783, %r13781, %r13482, %r13263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13787, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13789, %r13787, %r13495, %r13267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13793, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13795, %r13793, %r13506, %r13271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13799, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13801, %r13799, %r13517, %r13275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13805, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13807, %r13805, %r13528, %r13279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13811, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13813, %r13811, %r13541, %r13283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13817, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13819, %r13817, %r13552, %r13287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13823, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13825, %r13823, %r13563, %r13291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13829, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13831, %r13829, %r13574, %r13295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13835, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13837, %r13835, %r13587, %r13299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13841, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13843, %r13841, %r13598, %r13303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13847, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13849, %r13847, %r13609, %r13307;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13853, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13855, %r13853, %r13620, %r13311;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13859, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13861, %r13859, %r13633, %r13315;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13865, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13867, %r13865, %r13644, %r13319;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13871, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13873, %r13871, %r13655, %r13323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13877, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13879, %r13877, %r13666, %r13327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13883, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13885, %r13883, %r13679, %r13331;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13889, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13891, %r13889, %r13690, %r13335;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13895, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13897, %r13895, %r13701, %r13339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13901, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13903, %r13901, %r13712, %r13343;
	// end inline asm
	// begin inline asm
	mov.b32 %r13912, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13923, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13909, %r878, %r8511, %r13912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13913, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13914, %r13912, %r13913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13917, %r13909, %r13914;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13920, %r889, %r8511, %r13923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13925, %r13923, %r13924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13928, %r13920, %r13925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13931, %r878, %r8533, %r13912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13936, %r13912, %r13935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13939, %r13931, %r13936;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13942, %r889, %r8533, %r13923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13947, %r13923, %r13946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13950, %r13942, %r13947;
	// end inline asm
	// begin inline asm
	mov.b32 %r13958, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13969, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13955, %r878, %r8557, %r13958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13959, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13960, %r13958, %r13959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13963, %r13955, %r13960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13966, %r889, %r8557, %r13969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13970, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13971, %r13969, %r13970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13974, %r13966, %r13971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13977, %r878, %r8579, %r13958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13982, %r13958, %r13981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13985, %r13977, %r13982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13988, %r889, %r8579, %r13969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13993, %r13969, %r13992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13996, %r13988, %r13993;
	// end inline asm
	// begin inline asm
	mov.b32 %r14004, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14015, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14001, %r878, %r8603, %r14004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14006, %r14004, %r14005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14009, %r14001, %r14006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14012, %r889, %r8603, %r14015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14016, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14017, %r14015, %r14016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14020, %r14012, %r14017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14023, %r878, %r8625, %r14004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14027, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14028, %r14004, %r14027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14031, %r14023, %r14028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14034, %r889, %r8625, %r14015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14039, %r14015, %r14038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14042, %r14034, %r14039;
	// end inline asm
	// begin inline asm
	mov.b32 %r14050, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14061, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14047, %r878, %r8649, %r14050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14052, %r14050, %r14051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14055, %r14047, %r14052;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14058, %r889, %r8649, %r14061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14063, %r14061, %r14062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14066, %r14058, %r14063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14069, %r878, %r8671, %r14050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14073, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14074, %r14050, %r14073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14077, %r14069, %r14074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14080, %r889, %r8671, %r14061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14084, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14085, %r14061, %r14084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14088, %r14080, %r14085;
	// end inline asm
	// begin inline asm
	mov.b32 %r14096, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14107, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14093, %r878, %r8695, %r14096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14098, %r14096, %r14097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14101, %r14093, %r14098;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14104, %r889, %r8695, %r14107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14109, %r14107, %r14108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14112, %r14104, %r14109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14115, %r878, %r8717, %r14096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14119, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14120, %r14096, %r14119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14123, %r14115, %r14120;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14126, %r889, %r8717, %r14107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14131, %r14107, %r14130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14134, %r14126, %r14131;
	// end inline asm
	// begin inline asm
	mov.b32 %r14142, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14153, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14139, %r878, %r8741, %r14142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14144, %r14142, %r14143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14147, %r14139, %r14144;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14150, %r889, %r8741, %r14153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14154, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14155, %r14153, %r14154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14158, %r14150, %r14155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14161, %r878, %r8763, %r14142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14165, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14166, %r14142, %r14165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14169, %r14161, %r14166;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14172, %r889, %r8763, %r14153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14177, %r14153, %r14176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14180, %r14172, %r14177;
	// end inline asm
	// begin inline asm
	mov.b32 %r14188, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14199, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14185, %r878, %r8787, %r14188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14190, %r14188, %r14189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14193, %r14185, %r14190;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14196, %r889, %r8787, %r14199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14200, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14201, %r14199, %r14200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14204, %r14196, %r14201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14207, %r878, %r8809, %r14188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14211, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14212, %r14188, %r14211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14215, %r14207, %r14212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14218, %r889, %r8809, %r14199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14222, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14223, %r14199, %r14222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14226, %r14218, %r14223;
	// end inline asm
	// begin inline asm
	mov.b32 %r14234, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14245, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14231, %r878, %r8833, %r14234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14236, %r14234, %r14235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14239, %r14231, %r14236;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14242, %r889, %r8833, %r14245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14246, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14247, %r14245, %r14246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14250, %r14242, %r14247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14253, %r878, %r8855, %r14234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14257, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14258, %r14234, %r14257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14261, %r14253, %r14258;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14264, %r889, %r8855, %r14245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14268, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14269, %r14245, %r14268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14272, %r14264, %r14269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14410, %r368, %r13917, %r13717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14407, %r368, %r13928, %r13723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14419, %r368, %r13939, %r13729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14416, %r368, %r13950, %r13735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14428, %r368, %r13963, %r13741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14425, %r368, %r13974, %r13747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14437, %r368, %r13985, %r13753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14434, %r368, %r13996, %r13759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14446, %r368, %r14009, %r13765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14443, %r368, %r14020, %r13771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14455, %r368, %r14031, %r13777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14452, %r368, %r14042, %r13783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14464, %r368, %r14055, %r13789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14461, %r368, %r14066, %r13795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14473, %r368, %r14077, %r13801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14470, %r368, %r14088, %r13807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14482, %r386, %r14101, %r13813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14479, %r386, %r14112, %r13819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14491, %r386, %r14123, %r13825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14488, %r386, %r14134, %r13831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14500, %r386, %r14147, %r13837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14497, %r386, %r14158, %r13843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14509, %r386, %r14169, %r13849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14506, %r386, %r14180, %r13855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14518, %r386, %r14193, %r13861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14515, %r386, %r14204, %r13867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14527, %r386, %r14215, %r13873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14524, %r386, %r14226, %r13879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14536, %r386, %r14239, %r13885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14533, %r386, %r14250, %r13891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14545, %r386, %r14261, %r13897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14542, %r386, %r14272, %r13903;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14403, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14405, %r14403, %r14407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14408, %r425, %r14410, %r14405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14412, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14414, %r14412, %r14416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14417, %r425, %r14419, %r14414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14421, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14423, %r14421, %r14425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14426, %r425, %r14428, %r14423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14430, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14432, %r14430, %r14434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14435, %r425, %r14437, %r14432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14439, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14441, %r14439, %r14443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14444, %r425, %r14446, %r14441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14448, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14450, %r14448, %r14452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14453, %r425, %r14455, %r14450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14457, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14459, %r14457, %r14461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14462, %r425, %r14464, %r14459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14466, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14468, %r14466, %r14470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14471, %r425, %r14473, %r14468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14475, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14477, %r14475, %r14479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14480, %r428, %r14482, %r14477;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14484, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14486, %r14484, %r14488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14489, %r428, %r14491, %r14486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14493, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14495, %r14493, %r14497;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14498, %r428, %r14500, %r14495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14502, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14504, %r14502, %r14506;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14507, %r428, %r14509, %r14504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14511, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14513, %r14511, %r14515;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14516, %r428, %r14518, %r14513;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14520, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14522, %r14520, %r14524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14525, %r428, %r14527, %r14522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14529, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14531, %r14529, %r14533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14534, %r428, %r14536, %r14531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14538, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14540, %r14538, %r14542;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14543, %r428, %r14545, %r14540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14547, %r431, %r14410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14550, %r425, %r14407, %r14547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14554, %r431, %r14419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14557, %r425, %r14416, %r14554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14561, %r431, %r14428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14564, %r425, %r14425, %r14561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14568, %r431, %r14437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14571, %r425, %r14434, %r14568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14575, %r431, %r14446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14578, %r425, %r14443, %r14575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14582, %r431, %r14455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14585, %r425, %r14452, %r14582;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14589, %r431, %r14464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14592, %r425, %r14461, %r14589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14596, %r431, %r14473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14599, %r425, %r14470, %r14596;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14603, %r434, %r14482;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14606, %r428, %r14479, %r14603;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14610, %r434, %r14491;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14613, %r428, %r14488, %r14610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14617, %r434, %r14500;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14620, %r428, %r14497, %r14617;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14624, %r434, %r14509;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14627, %r428, %r14506, %r14624;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14631, %r434, %r14518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14634, %r428, %r14515, %r14631;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14638, %r434, %r14527;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14641, %r428, %r14524, %r14638;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14645, %r434, %r14536;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14648, %r428, %r14533, %r14645;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14652, %r434, %r14545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14655, %r428, %r14542, %r14652;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14826, %r14823}, {%r492, %r498, %r495, %r501}, {%r14408, %r14550}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14835, %r14832}, {%r492, %r498, %r495, %r501}, {%r14417, %r14557}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14844, %r14841}, {%r492, %r498, %r495, %r501}, {%r14426, %r14564}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14853, %r14850}, {%r492, %r498, %r495, %r501}, {%r14435, %r14571}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14862, %r14859}, {%r492, %r498, %r495, %r501}, {%r14444, %r14578}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14871, %r14868}, {%r492, %r498, %r495, %r501}, {%r14453, %r14585}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14880, %r14877}, {%r492, %r498, %r495, %r501}, {%r14462, %r14592}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14889, %r14886}, {%r492, %r498, %r495, %r501}, {%r14471, %r14599}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14898, %r14895}, {%r492, %r498, %r495, %r501}, {%r14480, %r14606}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14907, %r14904}, {%r492, %r498, %r495, %r501}, {%r14489, %r14613}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14916, %r14913}, {%r492, %r498, %r495, %r501}, {%r14498, %r14620}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14925, %r14922}, {%r492, %r498, %r495, %r501}, {%r14507, %r14627}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14934, %r14931}, {%r492, %r498, %r495, %r501}, {%r14516, %r14634}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14943, %r14940}, {%r492, %r498, %r495, %r501}, {%r14525, %r14641}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14952, %r14949}, {%r492, %r498, %r495, %r501}, {%r14534, %r14648}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14961, %r14958}, {%r492, %r498, %r495, %r501}, {%r14543, %r14655}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14819, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14821, %r14819, %r14823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14824, %r542, %r14826, %r14821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14828, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14830, %r14828, %r14832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14833, %r542, %r14835, %r14830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14837, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14839, %r14837, %r14841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14842, %r542, %r14844, %r14839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14846, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14848, %r14846, %r14850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14851, %r542, %r14853, %r14848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14855, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14857, %r14855, %r14859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14860, %r542, %r14862, %r14857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14864, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14866, %r14864, %r14868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14869, %r542, %r14871, %r14866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14873, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14875, %r14873, %r14877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14878, %r542, %r14880, %r14875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14882, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14884, %r14882, %r14886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14887, %r542, %r14889, %r14884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14891, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14893, %r14891, %r14895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14896, %r542, %r14898, %r14893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14900, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14902, %r14900, %r14904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14905, %r542, %r14907, %r14902;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14909, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14911, %r14909, %r14913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14914, %r542, %r14916, %r14911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14918, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14920, %r14918, %r14922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14923, %r542, %r14925, %r14920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14927, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14929, %r14927, %r14931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14932, %r542, %r14934, %r14929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14936, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14938, %r14936, %r14940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14941, %r542, %r14943, %r14938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14945, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14947, %r14945, %r14949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14950, %r542, %r14952, %r14947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14954, %r545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14956, %r14954, %r14958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14959, %r542, %r14961, %r14956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14963, %r545, %r14826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14966, %r542, %r14823, %r14963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14970, %r545, %r14835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14973, %r542, %r14832, %r14970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14977, %r545, %r14844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14980, %r542, %r14841, %r14977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14984, %r545, %r14853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14987, %r542, %r14850, %r14984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14991, %r545, %r14862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14994, %r542, %r14859, %r14991;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14998, %r545, %r14871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15001, %r542, %r14868, %r14998;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15005, %r545, %r14880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15008, %r542, %r14877, %r15005;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15012, %r545, %r14889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15015, %r542, %r14886, %r15012;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15019, %r545, %r14898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15022, %r542, %r14895, %r15019;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15026, %r545, %r14907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15029, %r542, %r14904, %r15026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15033, %r545, %r14916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15036, %r542, %r14913, %r15033;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15040, %r545, %r14925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15043, %r542, %r14922, %r15040;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15047, %r545, %r14934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15050, %r542, %r14931, %r15047;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15054, %r545, %r14943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15057, %r542, %r14940, %r15054;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15061, %r545, %r14952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15064, %r542, %r14949, %r15061;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15068, %r545, %r14961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15071, %r542, %r14958, %r15068;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15364, %r15367}, {%r580, %r586, %r583, %r589}, {%r14824, %r14966}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15370, %r15373}, {%r580, %r586, %r583, %r589}, {%r14833, %r14973}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15376, %r15379}, {%r580, %r586, %r583, %r589}, {%r14842, %r14980}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15382, %r15385}, {%r580, %r586, %r583, %r589}, {%r14851, %r14987}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15388, %r15391}, {%r580, %r586, %r583, %r589}, {%r14860, %r14994}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15394, %r15397}, {%r580, %r586, %r583, %r589}, {%r14869, %r15001}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15400, %r15403}, {%r580, %r586, %r583, %r589}, {%r14878, %r15008}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15406, %r15409}, {%r580, %r586, %r583, %r589}, {%r14887, %r15015}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15365, %r15368}, {%r580, %r586, %r583, %r589}, {%r14896, %r15022}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15371, %r15374}, {%r580, %r586, %r583, %r589}, {%r14905, %r15029}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15377, %r15380}, {%r580, %r586, %r583, %r589}, {%r14914, %r15036}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15383, %r15386}, {%r580, %r586, %r583, %r589}, {%r14923, %r15043}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15389, %r15392}, {%r580, %r586, %r583, %r589}, {%r14932, %r15050}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15395, %r15398}, {%r580, %r586, %r583, %r589}, {%r14941, %r15057}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15401, %r15404}, {%r580, %r586, %r583, %r589}, {%r14950, %r15064}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15407, %r15410}, {%r580, %r586, %r583, %r589}, {%r14959, %r15071}, {%r3219, %r3219};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15363, %r15364, %r15365;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15366, %r15367, %r15368;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15369, %r15370, %r15371;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15372, %r15373, %r15374;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15375, %r15376, %r15377;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15378, %r15379, %r15380;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15381, %r15382, %r15383;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15384, %r15385, %r15386;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15387, %r15388, %r15389;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15390, %r15391, %r15392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15393, %r15394, %r15395;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15396, %r15397, %r15398;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15399, %r15400, %r15401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15402, %r15403, %r15404;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15405, %r15406, %r15407;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15408, %r15409, %r15410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15411, %r15364, %r15365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15414, %r15367, %r15368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15417, %r15370, %r15371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15420, %r15373, %r15374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15423, %r15376, %r15377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15426, %r15379, %r15380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15429, %r15382, %r15383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15432, %r15385, %r15386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15435, %r15388, %r15389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15438, %r15391, %r15392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15441, %r15394, %r15395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15444, %r15397, %r15398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15447, %r15400, %r15401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15450, %r15403, %r15404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15453, %r15406, %r15407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15456, %r15409, %r15410;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15459, %r182, %r15363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15462, %r182, %r15366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15465, %r182, %r15369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15468, %r182, %r15372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15471, %r182, %r15375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15474, %r182, %r15378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15477, %r182, %r15381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15480, %r182, %r15384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15483, %r182, %r15387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15486, %r182, %r15390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15489, %r182, %r15393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15492, %r182, %r15396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15495, %r182, %r15399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15498, %r182, %r15402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15501, %r182, %r15405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15504, %r182, %r15408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15507, %r184, %r15411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15510, %r184, %r15414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15513, %r184, %r15417;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15516, %r184, %r15420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15519, %r184, %r15423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15522, %r184, %r15426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15525, %r184, %r15429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15528, %r184, %r15432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15531, %r184, %r15435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15534, %r184, %r15438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15537, %r184, %r15441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15540, %r184, %r15444;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15543, %r184, %r15447;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15546, %r184, %r15450;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15549, %r184, %r15453;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15552, %r184, %r15456;
	// end inline asm
	// begin inline asm
	mov.b32 %r15555, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15556, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15557, %r15459, %r15555;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15560, %r15557, %r15556;
	// end inline asm
	// begin inline asm
	mov.b32 %r15563, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15564, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15565, %r15462, %r15563;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15568, %r15565, %r15564;
	// end inline asm
	// begin inline asm
	mov.b32 %r15571, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15572, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15573, %r15465, %r15571;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15576, %r15573, %r15572;
	// end inline asm
	// begin inline asm
	mov.b32 %r15579, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15580, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15581, %r15468, %r15579;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15584, %r15581, %r15580;
	// end inline asm
	// begin inline asm
	mov.b32 %r15587, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15588, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15589, %r15471, %r15587;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15592, %r15589, %r15588;
	// end inline asm
	// begin inline asm
	mov.b32 %r15595, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15596, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15597, %r15474, %r15595;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15600, %r15597, %r15596;
	// end inline asm
	// begin inline asm
	mov.b32 %r15603, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15604, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15605, %r15477, %r15603;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15608, %r15605, %r15604;
	// end inline asm
	// begin inline asm
	mov.b32 %r15611, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15612, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15613, %r15480, %r15611;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15616, %r15613, %r15612;
	// end inline asm
	// begin inline asm
	mov.b32 %r15619, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15620, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15621, %r15483, %r15619;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15624, %r15621, %r15620;
	// end inline asm
	// begin inline asm
	mov.b32 %r15627, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15628, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15629, %r15486, %r15627;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15632, %r15629, %r15628;
	// end inline asm
	// begin inline asm
	mov.b32 %r15635, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15636, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15637, %r15489, %r15635;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15640, %r15637, %r15636;
	// end inline asm
	// begin inline asm
	mov.b32 %r15643, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15644, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15645, %r15492, %r15643;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15648, %r15645, %r15644;
	// end inline asm
	// begin inline asm
	mov.b32 %r15651, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15652, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15653, %r15495, %r15651;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15656, %r15653, %r15652;
	// end inline asm
	// begin inline asm
	mov.b32 %r15659, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15660, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15661, %r15498, %r15659;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15664, %r15661, %r15660;
	// end inline asm
	// begin inline asm
	mov.b32 %r15667, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15668, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15669, %r15501, %r15667;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15672, %r15669, %r15668;
	// end inline asm
	// begin inline asm
	mov.b32 %r15675, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15676, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15677, %r15504, %r15675;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15680, %r15677, %r15676;
	// end inline asm
	// begin inline asm
	mov.b32 %r15683, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15684, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15685, %r15507, %r15683;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15688, %r15685, %r15684;
	// end inline asm
	// begin inline asm
	mov.b32 %r15691, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15692, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15693, %r15510, %r15691;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15696, %r15693, %r15692;
	// end inline asm
	// begin inline asm
	mov.b32 %r15699, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15700, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15701, %r15513, %r15699;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15704, %r15701, %r15700;
	// end inline asm
	// begin inline asm
	mov.b32 %r15707, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15708, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15709, %r15516, %r15707;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15712, %r15709, %r15708;
	// end inline asm
	// begin inline asm
	mov.b32 %r15715, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15716, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15717, %r15519, %r15715;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15720, %r15717, %r15716;
	// end inline asm
	// begin inline asm
	mov.b32 %r15723, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15724, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15725, %r15522, %r15723;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15728, %r15725, %r15724;
	// end inline asm
	// begin inline asm
	mov.b32 %r15731, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15732, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15733, %r15525, %r15731;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15736, %r15733, %r15732;
	// end inline asm
	// begin inline asm
	mov.b32 %r15739, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15740, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15741, %r15528, %r15739;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15744, %r15741, %r15740;
	// end inline asm
	// begin inline asm
	mov.b32 %r15747, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15748, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15749, %r15531, %r15747;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15752, %r15749, %r15748;
	// end inline asm
	// begin inline asm
	mov.b32 %r15755, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15756, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15757, %r15534, %r15755;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15760, %r15757, %r15756;
	// end inline asm
	// begin inline asm
	mov.b32 %r15763, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15764, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15765, %r15537, %r15763;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15768, %r15765, %r15764;
	// end inline asm
	// begin inline asm
	mov.b32 %r15771, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15772, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15773, %r15540, %r15771;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15776, %r15773, %r15772;
	// end inline asm
	// begin inline asm
	mov.b32 %r15779, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15780, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15781, %r15543, %r15779;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15784, %r15781, %r15780;
	// end inline asm
	// begin inline asm
	mov.b32 %r15787, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15788, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15789, %r15546, %r15787;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15792, %r15789, %r15788;
	// end inline asm
	// begin inline asm
	mov.b32 %r15795, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15796, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15797, %r15549, %r15795;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15800, %r15797, %r15796;
	// end inline asm
	// begin inline asm
	mov.b32 %r15803, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15804, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15805, %r15552, %r15803;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15808, %r15805, %r15804;
	// end inline asm
	// begin inline asm
	mov.b32 %r15814, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15812, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15813, %r15814, %r15812;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15816, %r15560, %r15813;
	// end inline asm
	// begin inline asm
	mov.b32 %r15819, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15820, %r15814, %r15819;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15823, %r15568, %r15820;
	// end inline asm
	// begin inline asm
	mov.b32 %r15826, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15827, %r15814, %r15826;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15830, %r15576, %r15827;
	// end inline asm
	// begin inline asm
	mov.b32 %r15833, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15834, %r15814, %r15833;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15837, %r15584, %r15834;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15840, %r15816, %r15830, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15844, %r15823, %r15837, %r4395;
	// end inline asm
	shl.b32 	%r15851, %r15844, 4;
	// begin inline asm
	lop3.b32 %r15848, %r4401, %r15840, %r15851, 202;
	// end inline asm
	xor.b32  	%r16220, %r15848, -2004318072;
	// begin inline asm
	mov.b32 %r15855, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15853, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15854, %r15855, %r15853;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15857, %r15592, %r15854;
	// end inline asm
	// begin inline asm
	mov.b32 %r15860, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15861, %r15855, %r15860;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15864, %r15600, %r15861;
	// end inline asm
	// begin inline asm
	mov.b32 %r15867, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15868, %r15855, %r15867;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15871, %r15608, %r15868;
	// end inline asm
	// begin inline asm
	mov.b32 %r15874, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15875, %r15855, %r15874;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15878, %r15616, %r15875;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15881, %r15857, %r15871, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15885, %r15864, %r15878, %r4395;
	// end inline asm
	shl.b32 	%r15892, %r15885, 4;
	// begin inline asm
	lop3.b32 %r15889, %r4401, %r15881, %r15892, 202;
	// end inline asm
	xor.b32  	%r16221, %r15889, -2004318072;
	// begin inline asm
	mov.b32 %r15896, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15894, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15895, %r15896, %r15894;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15898, %r15624, %r15895;
	// end inline asm
	// begin inline asm
	mov.b32 %r15901, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15902, %r15896, %r15901;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15905, %r15632, %r15902;
	// end inline asm
	// begin inline asm
	mov.b32 %r15908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15909, %r15896, %r15908;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15912, %r15640, %r15909;
	// end inline asm
	// begin inline asm
	mov.b32 %r15915, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15916, %r15896, %r15915;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15919, %r15648, %r15916;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15922, %r15898, %r15912, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15926, %r15905, %r15919, %r4395;
	// end inline asm
	shl.b32 	%r15933, %r15926, 4;
	// begin inline asm
	lop3.b32 %r15930, %r4401, %r15922, %r15933, 202;
	// end inline asm
	xor.b32  	%r16222, %r15930, -2004318072;
	// begin inline asm
	mov.b32 %r15937, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15936, %r15937, %r15935;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15939, %r15656, %r15936;
	// end inline asm
	// begin inline asm
	mov.b32 %r15942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15943, %r15937, %r15942;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15946, %r15664, %r15943;
	// end inline asm
	// begin inline asm
	mov.b32 %r15949, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15950, %r15937, %r15949;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15953, %r15672, %r15950;
	// end inline asm
	// begin inline asm
	mov.b32 %r15956, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15957, %r15937, %r15956;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15960, %r15680, %r15957;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15963, %r15939, %r15953, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15967, %r15946, %r15960, %r4395;
	// end inline asm
	shl.b32 	%r15974, %r15967, 4;
	// begin inline asm
	lop3.b32 %r15971, %r4401, %r15963, %r15974, 202;
	// end inline asm
	xor.b32  	%r16223, %r15971, -2004318072;
	// begin inline asm
	mov.b32 %r15978, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15977, %r15978, %r15976;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15980, %r15688, %r15977;
	// end inline asm
	// begin inline asm
	mov.b32 %r15983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15984, %r15978, %r15983;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15987, %r15696, %r15984;
	// end inline asm
	// begin inline asm
	mov.b32 %r15990, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15991, %r15978, %r15990;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15994, %r15704, %r15991;
	// end inline asm
	// begin inline asm
	mov.b32 %r15997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15998, %r15978, %r15997;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16001, %r15712, %r15998;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16004, %r15980, %r15994, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16008, %r15987, %r16001, %r4395;
	// end inline asm
	shl.b32 	%r16015, %r16008, 4;
	// begin inline asm
	lop3.b32 %r16012, %r4401, %r16004, %r16015, 202;
	// end inline asm
	xor.b32  	%r16224, %r16012, -2004318072;
	// begin inline asm
	mov.b32 %r16019, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16017, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16018, %r16019, %r16017;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16021, %r15720, %r16018;
	// end inline asm
	// begin inline asm
	mov.b32 %r16024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16025, %r16019, %r16024;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16028, %r15728, %r16025;
	// end inline asm
	// begin inline asm
	mov.b32 %r16031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16032, %r16019, %r16031;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16035, %r15736, %r16032;
	// end inline asm
	// begin inline asm
	mov.b32 %r16038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16039, %r16019, %r16038;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16042, %r15744, %r16039;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16045, %r16021, %r16035, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16049, %r16028, %r16042, %r4395;
	// end inline asm
	shl.b32 	%r16056, %r16049, 4;
	// begin inline asm
	lop3.b32 %r16053, %r4401, %r16045, %r16056, 202;
	// end inline asm
	xor.b32  	%r16225, %r16053, -2004318072;
	// begin inline asm
	mov.b32 %r16060, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16058, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16059, %r16060, %r16058;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16062, %r15752, %r16059;
	// end inline asm
	// begin inline asm
	mov.b32 %r16065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16066, %r16060, %r16065;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16069, %r15760, %r16066;
	// end inline asm
	// begin inline asm
	mov.b32 %r16072, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16073, %r16060, %r16072;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16076, %r15768, %r16073;
	// end inline asm
	// begin inline asm
	mov.b32 %r16079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16080, %r16060, %r16079;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16083, %r15776, %r16080;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16086, %r16062, %r16076, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16090, %r16069, %r16083, %r4395;
	// end inline asm
	shl.b32 	%r16097, %r16090, 4;
	// begin inline asm
	lop3.b32 %r16094, %r4401, %r16086, %r16097, 202;
	// end inline asm
	xor.b32  	%r16226, %r16094, -2004318072;
	// begin inline asm
	mov.b32 %r16101, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16100, %r16101, %r16099;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16103, %r15784, %r16100;
	// end inline asm
	// begin inline asm
	mov.b32 %r16106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16107, %r16101, %r16106;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16110, %r15792, %r16107;
	// end inline asm
	// begin inline asm
	mov.b32 %r16113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16114, %r16101, %r16113;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16117, %r15800, %r16114;
	// end inline asm
	// begin inline asm
	mov.b32 %r16120, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16121, %r16101, %r16120;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16124, %r15808, %r16121;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16127, %r16103, %r16117, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16131, %r16110, %r16124, %r4395;
	// end inline asm
	shl.b32 	%r16138, %r16131, 4;
	// begin inline asm
	lop3.b32 %r16135, %r4401, %r16127, %r16138, 202;
	// end inline asm
	xor.b32  	%r16227, %r16135, -2004318072;
	st.shared.u32 	[%rd93], %r16220;
	st.shared.u32 	[%rd95], %r16221;
	st.shared.u32 	[%rd97], %r16222;
	st.shared.u32 	[%rd99], %r16223;
	st.shared.u32 	[%rd101], %r16224;
	st.shared.u32 	[%rd103], %r16225;
	st.shared.u32 	[%rd105], %r16226;
	st.shared.u32 	[%rd107], %r16227;
	add.s32 	%r16358, %r16358, 128;
	setp.eq.s32 	%p308, %r16358, 257;
	@%p308 bra 	$L__BB0_119;
	bra.uni 	$L__BB0_118;
$L__BB0_119:                            // %guard_exit29743
                                        //   in Loop: Header=BB0_116 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16233, [%rd5];
	ld.shared.u32 	%r16234, [%rd6+128];
	ld.shared.u32 	%r16241, [%rd6+4];
	ld.shared.u32 	%r16242, [%rd6+132];
	ld.shared.u32 	%r16249, [%rd7];
	ld.shared.u32 	%r16250, [%rd8+128];
	ld.shared.u32 	%r16257, [%rd8+4];
	ld.shared.u32 	%r16258, [%rd8+132];
	ld.shared.u32 	%r16265, [%rd5+16644];
	ld.shared.u32 	%r16266, [%rd6+16772];
	ld.shared.u32 	%r16273, [%rd6+16648];
	ld.shared.u32 	%r16274, [%rd6+16776];
	ld.shared.u32 	%r16281, [%rd7+16644];
	ld.shared.u32 	%r16282, [%rd8+16772];
	ld.shared.u32 	%r16289, [%rd8+16648];
	ld.shared.u32 	%r16290, [%rd8+16776];
	// begin inline asm
	prmt.b32 %r16228, %r16233, %r16234, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16232, %r16233, %r16234, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16236, %r16241, %r16242, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16240, %r16241, %r16242, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16244, %r16249, %r16250, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16248, %r16249, %r16250, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16252, %r16257, %r16258, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16256, %r16257, %r16258, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16260, %r16265, %r16266, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16264, %r16265, %r16266, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16268, %r16273, %r16274, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16272, %r16273, %r16274, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16276, %r16281, %r16282, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16280, %r16281, %r16282, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16284, %r16289, %r16290, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16288, %r16289, %r16290, %r793;
	// end inline asm
	selp.b32 	%r16292, %r16232, %r16228, %p294;
	shfl.sync.bfly.b32	%r236, %r16292, 8, 31, -1;
	selp.b32 	%r16293, %r16240, %r16236, %p294;
	shfl.sync.bfly.b32	%r237, %r16293, 8, 31, -1;
	selp.b32 	%r16294, %r16248, %r16244, %p294;
	shfl.sync.bfly.b32	%r238, %r16294, 8, 31, -1;
	selp.b32 	%r16295, %r16256, %r16252, %p294;
	shfl.sync.bfly.b32	%r239, %r16295, 8, 31, -1;
	selp.b32 	%r16296, %r16264, %r16260, %p294;
	shfl.sync.bfly.b32	%r16297, %r16296, 8, 31, -1;
	selp.b32 	%r16298, %r16272, %r16268, %p294;
	shfl.sync.bfly.b32	%r16299, %r16298, 8, 31, -1;
	selp.b32 	%r16300, %r16280, %r16276, %p294;
	shfl.sync.bfly.b32	%r16301, %r16300, 8, 31, -1;
	selp.b32 	%r16302, %r16288, %r16284, %p294;
	shfl.sync.bfly.b32	%r16303, %r16302, 8, 31, -1;
	setp.lt.u32 	%p310, %r16357, 512;
	@%p310 bra 	$L__BB0_121;
// %bb.120:                             // %pass28464
                                        //   in Loop: Header=BB0_116 Depth=1
	selp.b32 	%r16304, %r239, %r16256, %p294;
	selp.b32 	%r16305, %r16252, %r239, %p294;
	selp.b32 	%r16306, %r238, %r16248, %p294;
	selp.b32 	%r16307, %r16244, %r238, %p294;
	selp.b32 	%r16308, %r237, %r16240, %p294;
	selp.b32 	%r16309, %r16236, %r237, %p294;
	selp.b32 	%r16310, %r236, %r16232, %p294;
	selp.b32 	%r16311, %r16228, %r236, %p294;
	shl.b32 	%r16312, %r16357, 13;
	or.b32  	%r16313, %r16312, %r85;
	or.b32  	%r16314, %r16313, %r72;
	cvt.s64.s32 	%rd108, %r16314;
	add.s64 	%rd109, %rd108, %rd9;
	shr.u64 	%rd110, %rd109, 36;
	add.s64 	%rd111, %rd109, %rd110;
	shr.s64 	%rd112, %rd111, 28;
	setp.lt.s64 	%p312, %rd109, 0;
	and.b64  	%rd113, %rd111, -268435456;
	setp.ne.s64 	%p313, %rd113, %rd109;
	and.pred  	%p314, %p312, %p313;
	selp.u64 	%rd114, 1, 0, %p314;
	sub.s64 	%rd115, %rd114, %rd112;
	shl.b64 	%rd116, %rd115, 28;
	add.s64 	%rd117, %rd116, %rd109;
	shl.b64 	%rd118, %rd117, 2;
	add.s64 	%rd119, %rd3, %rd118;
	st.global.v4.u32 	[%rd119], {%r16311, %r16309, %r16310, %r16308};
	add.s32 	%r16315, %r16312, %r86;
	or.b32  	%r16316, %r16315, %r72;
	cvt.s64.s32 	%rd120, %r16316;
	add.s64 	%rd121, %rd120, %rd9;
	shr.u64 	%rd122, %rd121, 36;
	add.s64 	%rd123, %rd121, %rd122;
	shr.u64 	%rd124, %rd123, 28;
	shr.u64 	%rd125, %rd121, 63;
	sub.s64 	%rd126, %rd125, %rd124;
	shl.b64 	%rd127, %rd126, 28;
	add.s64 	%rd128, %rd127, %rd121;
	shl.b64 	%rd129, %rd128, 2;
	add.s64 	%rd130, %rd3, %rd129;
	st.global.v4.u32 	[%rd130], {%r16307, %r16305, %r16306, %r16304};
$L__BB0_121:                            // %pass28584
                                        //   in Loop: Header=BB0_116 Depth=1
	or.b32  	%r227, %r16357, 128;
	setp.lt.u32 	%p315, %r227, 384;
	@%p315 bra 	$L__BB0_122;
// %bb.164:                             // %pass28678
                                        //   in Loop: Header=BB0_116 Depth=1
	selp.b32 	%r240, %r16260, %r16297, %p294;
	selp.b32 	%r241, %r16297, %r16264, %p294;
	selp.b32 	%r242, %r16268, %r16299, %p294;
	selp.b32 	%r243, %r16299, %r16272, %p294;
	selp.b32 	%r244, %r16276, %r16301, %p294;
	selp.b32 	%r245, %r16301, %r16280, %p294;
	selp.b32 	%r246, %r16284, %r16303, %p294;
	selp.b32 	%r247, %r16303, %r16288, %p294;
	shl.b32 	%r16317, %r227, 13;
	or.b32  	%r16318, %r16317, %r85;
	or.b32  	%r16319, %r16318, %r72;
	cvt.s64.s32 	%rd131, %r16319;
	add.s64 	%rd132, %rd131, %rd9;
	shr.u64 	%rd133, %rd132, 36;
	add.s64 	%rd134, %rd132, %rd133;
	shr.s64 	%rd135, %rd134, 28;
	setp.lt.s64 	%p316, %rd132, 0;
	and.b64  	%rd136, %rd134, -268435456;
	setp.ne.s64 	%p317, %rd136, %rd132;
	and.pred  	%p318, %p316, %p317;
	selp.u64 	%rd137, 1, 0, %p318;
	sub.s64 	%rd138, %rd137, %rd135;
	shl.b64 	%rd139, %rd138, 28;
	add.s64 	%rd140, %rd139, %rd132;
	shl.b64 	%rd141, %rd140, 2;
	add.s64 	%rd142, %rd3, %rd141;
	st.global.v4.u32 	[%rd142], {%r240, %r242, %r241, %r243};
	add.s32 	%r16320, %r16317, %r86;
	or.b32  	%r16321, %r16320, %r72;
	cvt.s64.s32 	%rd143, %r16321;
	add.s64 	%rd144, %rd143, %rd9;
	shr.u64 	%rd145, %rd144, 36;
	add.s64 	%rd146, %rd144, %rd145;
	shr.u64 	%rd147, %rd146, 28;
	shr.u64 	%rd148, %rd144, 63;
	sub.s64 	%rd149, %rd148, %rd147;
	shl.b64 	%rd150, %rd149, 28;
	add.s64 	%rd151, %rd150, %rd144;
	shl.b64 	%rd152, %rd151, 2;
	add.s64 	%rd153, %rd3, %rd152;
	st.global.v4.u32 	[%rd153], {%r244, %r246, %r245, %r247};
	bra.uni 	$L__BB0_122;
$L__BB0_123:                            // %L70509
	mov.u32 	%r16322, 0;
	st.global.u32 	[%rd4], %r16322;
	ret;
$L__BB0_7:                              // %L167
	mov.u32 	%r16324, 2;
	st.global.u32 	[%rd4], %r16324;
	mov.u64 	%rd156, exception5808;
	cvta.global.u64 	%rd157, %rd156;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd157;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r248;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r16323, 3;
	st.global.u32 	[%rd4], %r16323;
	mov.u64 	%rd154, exception5808;
	cvta.global.u64 	%rd155, %rd154;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd155;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r248;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd27, exception15833;
	cvta.global.u64 	%rd28, %rd27;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd28;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r248;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
