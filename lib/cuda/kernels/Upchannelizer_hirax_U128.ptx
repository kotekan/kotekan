// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5808[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<340>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16444>;
	.reg .f32 	%f<1392>;
	.reg .b64 	%rd<173>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r271, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd24, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r272, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r272, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	ld.param.u64 	%rd41, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd25, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r273, %r4, 9;
	or.b32  	%r274, %r3, %r1;
	or.b32  	%r275, %r274, %r273;
	mul.wide.u32 	%rd47, %r275, 4;
	add.s64 	%rd4, %rd41, %rd47;
	mov.u32 	%r276, 1;
	st.global.u32 	[%rd4], %r276;
	ld.global.u32 	%r5, [%rd25];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L204
	ld.param.u64 	%rd29, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd29];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L214
	ld.param.u64 	%rd33, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd33];
	sub.s32 	%r277, %r6, %r5;
	and.b32  	%r278, %r277, 255;
	setp.ne.s32 	%p6, %r278, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L220
	ld.param.u64 	%rd37, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd37];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 2048;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L230
	sub.s32 	%r279, %r8, %r7;
	and.b32  	%r280, %r279, 1;
	setp.eq.b32 	%p12, %r280, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass170
	bfe.u32 	%r239, %r1, 1, 1;
	and.b32  	%r240, %r1, 1;
	bfe.u32 	%r242, %r1, 2, 1;
	shr.u32 	%r243, %r1, 4;
	shl.b32 	%r291, %r243, 2;
	shl.b32 	%r292, %r242, 3;
	shl.b32 	%r293, %r240, 4;
	shl.b32 	%r294, %r239, 5;
	or.b32  	%r295, %r293, %r294;
	or.b32  	%r296, %r292, %r295;
	or.b32  	%r297, %r291, %r296;
	bfe.u32 	%r245, %r1, 3, 1;
	shl.b32 	%r298, %r245, 1;
	or.b32  	%r246, %r298, %r297;
	or.b32  	%r247, %r246, 64;
	mov.f32 	%f257, 0f40000000;
	mov.f32 	%f258, 0f43FF8000;
	div.approx.f32 	%f253, %f258, %f257;
	cvt.rn.f32.s32 	%f259, %r246;
	sub.f32 	%f260, %f259, %f253;
	mov.f32 	%f289, 0f43000000;
	div.approx.f32 	%f255, %f260, %f289;
	setp.ne.f32 	%p20, %f255, 0f00000000;
	mov.f32 	%f1351, 0f3F800000;
	mov.f32 	%f1336, %f1351;
	@%p20 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L735
	sin.approx.f32 	%f290, %f255;
	div.approx.f32 	%f1336, %f290, %f255;
$L__BB0_10:                             // %L738
	cvt.rn.f32.s32 	%f293, %r247;
	sub.f32 	%f294, %f293, %f253;
	div.approx.f32 	%f5, %f294, %f289;
	setp.eq.f32 	%p26, %f5, 0f00000000;
	mov.f32 	%f1337, %f1351;
	@%p26 bra 	$L__BB0_12;
// %bb.11:                              // %L755
	sin.approx.f32 	%f324, %f5;
	div.approx.f32 	%f1337, %f324, %f5;
$L__BB0_12:                             // %L758
	or.b32  	%r316, %r246, 1;
	or.b32  	%r10, %r246, 65;
	cvt.rn.f32.s32 	%f328, %r316;
	sub.f32 	%f329, %f328, %f253;
	div.approx.f32 	%f9, %f329, %f289;
	setp.eq.f32 	%p32, %f9, 0f00000000;
	mov.f32 	%f1338, %f1351;
	@%p32 bra 	$L__BB0_14;
// %bb.13:                              // %L837
	sin.approx.f32 	%f359, %f9;
	div.approx.f32 	%f1338, %f359, %f9;
$L__BB0_14:                             // %L840
	cvt.rn.f32.s32 	%f362, %r10;
	sub.f32 	%f363, %f362, %f253;
	div.approx.f32 	%f14, %f363, %f289;
	setp.eq.f32 	%p38, %f14, 0f00000000;
	mov.f32 	%f1339, %f1351;
	@%p38 bra 	$L__BB0_16;
// %bb.15:                              // %L857
	sin.approx.f32 	%f393, %f14;
	div.approx.f32 	%f1339, %f393, %f14;
$L__BB0_16:                             // %L860
	or.b32  	%r334, %r246, 128;
	or.b32  	%r12, %r246, 192;
	cvt.rn.f32.s32 	%f397, %r334;
	sub.f32 	%f398, %f397, %f253;
	div.approx.f32 	%f18, %f398, %f289;
	setp.eq.f32 	%p44, %f18, 0f00000000;
	mov.f32 	%f1340, %f1351;
	@%p44 bra 	$L__BB0_18;
// %bb.17:                              // %L939
	sin.approx.f32 	%f428, %f18;
	div.approx.f32 	%f1340, %f428, %f18;
$L__BB0_18:                             // %L942
	cvt.rn.f32.s32 	%f431, %r12;
	sub.f32 	%f432, %f431, %f253;
	div.approx.f32 	%f23, %f432, %f289;
	setp.eq.f32 	%p50, %f23, 0f00000000;
	mov.f32 	%f1341, %f1351;
	@%p50 bra 	$L__BB0_20;
// %bb.19:                              // %L959
	sin.approx.f32 	%f462, %f23;
	div.approx.f32 	%f1341, %f462, %f23;
$L__BB0_20:                             // %L962
	or.b32  	%r352, %r246, 129;
	or.b32  	%r14, %r246, 193;
	cvt.rn.f32.s32 	%f466, %r352;
	sub.f32 	%f467, %f466, %f253;
	div.approx.f32 	%f27, %f467, %f289;
	setp.eq.f32 	%p56, %f27, 0f00000000;
	mov.f32 	%f1342, %f1351;
	@%p56 bra 	$L__BB0_22;
// %bb.21:                              // %L1041
	sin.approx.f32 	%f497, %f27;
	div.approx.f32 	%f1342, %f497, %f27;
$L__BB0_22:                             // %L1044
	cvt.rn.f32.s32 	%f500, %r14;
	sub.f32 	%f501, %f500, %f253;
	div.approx.f32 	%f32, %f501, %f289;
	setp.eq.f32 	%p62, %f32, 0f00000000;
	mov.f32 	%f1343, %f1351;
	@%p62 bra 	$L__BB0_24;
// %bb.23:                              // %L1061
	sin.approx.f32 	%f531, %f32;
	div.approx.f32 	%f1343, %f531, %f32;
$L__BB0_24:                             // %L1064
	or.b32  	%r370, %r246, 256;
	or.b32  	%r16, %r246, 320;
	cvt.rn.f32.s32 	%f535, %r370;
	sub.f32 	%f536, %f535, %f253;
	div.approx.f32 	%f36, %f536, %f289;
	setp.eq.f32 	%p68, %f36, 0f00000000;
	mov.f32 	%f1344, %f1351;
	@%p68 bra 	$L__BB0_26;
// %bb.25:                              // %L1143
	sin.approx.f32 	%f566, %f36;
	div.approx.f32 	%f1344, %f566, %f36;
$L__BB0_26:                             // %L1146
	mov.f32 	%f261, 0f44004000;
	cvt.rn.f32.s32 	%f569, %r16;
	sub.f32 	%f570, %f569, %f253;
	div.approx.f32 	%f41, %f570, %f289;
	setp.eq.f32 	%p74, %f41, 0f00000000;
	mov.f32 	%f1345, %f1351;
	@%p74 bra 	$L__BB0_28;
// %bb.27:                              // %L1163
	sin.approx.f32 	%f600, %f41;
	div.approx.f32 	%f1345, %f600, %f41;
$L__BB0_28:                             // %L1166
	div.approx.f32 	%f262, %f260, %f261;
	div.approx.f32 	%f296, %f294, %f261;
	div.approx.f32 	%f331, %f329, %f261;
	div.approx.f32 	%f365, %f363, %f261;
	div.approx.f32 	%f400, %f398, %f261;
	div.approx.f32 	%f434, %f432, %f261;
	div.approx.f32 	%f469, %f467, %f261;
	div.approx.f32 	%f503, %f501, %f261;
	div.approx.f32 	%f538, %f536, %f261;
	div.approx.f32 	%f572, %f570, %f261;
	or.b32  	%r388, %r246, 257;
	or.b32  	%r18, %r246, 321;
	cvt.rn.f32.s32 	%f604, %r388;
	sub.f32 	%f605, %f604, %f253;
	div.approx.f32 	%f607, %f605, %f261;
	div.approx.f32 	%f45, %f605, %f289;
	setp.eq.f32 	%p80, %f45, 0f00000000;
	mov.f32 	%f1346, %f1351;
	@%p80 bra 	$L__BB0_30;
// %bb.29:                              // %L1245
	sin.approx.f32 	%f635, %f45;
	div.approx.f32 	%f1346, %f635, %f45;
$L__BB0_30:                             // %L1248
	abs.f32 	%f263, %f262;
	abs.f32 	%f297, %f296;
	abs.f32 	%f332, %f331;
	abs.f32 	%f366, %f365;
	abs.f32 	%f401, %f400;
	abs.f32 	%f435, %f434;
	abs.f32 	%f470, %f469;
	abs.f32 	%f504, %f503;
	abs.f32 	%f539, %f538;
	abs.f32 	%f573, %f572;
	abs.f32 	%f608, %f607;
	cvt.rn.f32.s32 	%f638, %r18;
	sub.f32 	%f639, %f638, %f253;
	div.approx.f32 	%f641, %f639, %f261;
	abs.f32 	%f642, %f641;
	div.approx.f32 	%f50, %f639, %f289;
	setp.eq.f32 	%p86, %f50, 0f00000000;
	mov.f32 	%f1347, %f1351;
	@%p86 bra 	$L__BB0_32;
// %bb.31:                              // %L1265
	sin.approx.f32 	%f669, %f50;
	div.approx.f32 	%f1347, %f669, %f50;
$L__BB0_32:                             // %L1268
	setp.gt.f32 	%p15, %f263, 0f4B800000;
	mul.f32 	%f264, %f262, 0f00000000;
	setp.gt.f32 	%p21, %f297, 0f4B800000;
	mul.f32 	%f298, %f296, 0f00000000;
	setp.gt.f32 	%p27, %f332, 0f4B800000;
	mul.f32 	%f333, %f331, 0f00000000;
	setp.gt.f32 	%p33, %f366, 0f4B800000;
	mul.f32 	%f367, %f365, 0f00000000;
	setp.gt.f32 	%p39, %f401, 0f4B800000;
	mul.f32 	%f402, %f400, 0f00000000;
	setp.gt.f32 	%p45, %f435, 0f4B800000;
	mul.f32 	%f436, %f434, 0f00000000;
	setp.gt.f32 	%p51, %f470, 0f4B800000;
	mul.f32 	%f471, %f469, 0f00000000;
	setp.gt.f32 	%p57, %f504, 0f4B800000;
	mul.f32 	%f505, %f503, 0f00000000;
	setp.gt.f32 	%p63, %f539, 0f4B800000;
	mul.f32 	%f540, %f538, 0f00000000;
	setp.gt.f32 	%p69, %f573, 0f4B800000;
	mul.f32 	%f574, %f572, 0f00000000;
	setp.gt.f32 	%p75, %f608, 0f4B800000;
	mul.f32 	%f609, %f607, 0f00000000;
	setp.gt.f32 	%p81, %f642, 0f4B800000;
	mul.f32 	%f643, %f641, 0f00000000;
	or.b32  	%r406, %r246, 384;
	or.b32  	%r20, %r246, 448;
	cvt.rn.f32.s32 	%f673, %r406;
	sub.f32 	%f674, %f673, %f253;
	div.approx.f32 	%f676, %f674, %f261;
	abs.f32 	%f677, %f676;
	setp.gt.f32 	%p87, %f677, 0f4B800000;
	mul.f32 	%f678, %f676, 0f00000000;
	div.approx.f32 	%f54, %f674, %f289;
	setp.eq.f32 	%p92, %f54, 0f00000000;
	mov.f32 	%f1348, %f1351;
	@%p92 bra 	$L__BB0_34;
// %bb.33:                              // %L1347
	sin.approx.f32 	%f704, %f54;
	div.approx.f32 	%f1348, %f704, %f54;
$L__BB0_34:                             // %L1350
	selp.f32 	%f265, %f264, %f262, %p15;
	selp.f32 	%f299, %f298, %f296, %p21;
	selp.f32 	%f334, %f333, %f331, %p27;
	selp.f32 	%f368, %f367, %f365, %p33;
	selp.f32 	%f403, %f402, %f400, %p39;
	selp.f32 	%f437, %f436, %f434, %p45;
	selp.f32 	%f472, %f471, %f469, %p51;
	selp.f32 	%f506, %f505, %f503, %p57;
	selp.f32 	%f541, %f540, %f538, %p63;
	selp.f32 	%f575, %f574, %f572, %p69;
	selp.f32 	%f610, %f609, %f607, %p75;
	selp.f32 	%f644, %f643, %f641, %p81;
	selp.f32 	%f679, %f678, %f676, %p87;
	cvt.rn.f32.s32 	%f707, %r20;
	sub.f32 	%f708, %f707, %f253;
	div.approx.f32 	%f710, %f708, %f261;
	abs.f32 	%f711, %f710;
	setp.gt.f32 	%p93, %f711, 0f4B800000;
	mul.f32 	%f712, %f710, 0f00000000;
	selp.f32 	%f713, %f712, %f710, %p93;
	div.approx.f32 	%f59, %f708, %f289;
	setp.eq.f32 	%p98, %f59, 0f00000000;
	mov.f32 	%f1349, %f1351;
	@%p98 bra 	$L__BB0_36;
// %bb.35:                              // %L1367
	sin.approx.f32 	%f738, %f59;
	div.approx.f32 	%f1349, %f738, %f59;
$L__BB0_36:                             // %L1370
	add.f32 	%f266, %f265, %f265;
	add.f32 	%f300, %f299, %f299;
	add.f32 	%f335, %f334, %f334;
	add.f32 	%f369, %f368, %f368;
	add.f32 	%f404, %f403, %f403;
	add.f32 	%f438, %f437, %f437;
	add.f32 	%f473, %f472, %f472;
	add.f32 	%f507, %f506, %f506;
	add.f32 	%f542, %f541, %f541;
	add.f32 	%f576, %f575, %f575;
	add.f32 	%f611, %f610, %f610;
	add.f32 	%f645, %f644, %f644;
	add.f32 	%f680, %f679, %f679;
	add.f32 	%f714, %f713, %f713;
	or.b32  	%r424, %r246, 385;
	or.b32  	%r22, %r246, 449;
	cvt.rn.f32.s32 	%f742, %r424;
	sub.f32 	%f743, %f742, %f253;
	div.approx.f32 	%f745, %f743, %f261;
	abs.f32 	%f746, %f745;
	setp.gt.f32 	%p99, %f746, 0f4B800000;
	mul.f32 	%f747, %f745, 0f00000000;
	selp.f32 	%f748, %f747, %f745, %p99;
	add.f32 	%f749, %f748, %f748;
	div.approx.f32 	%f63, %f743, %f289;
	setp.eq.f32 	%p104, %f63, 0f00000000;
	mov.f32 	%f1350, %f1351;
	@%p104 bra 	$L__BB0_38;
// %bb.37:                              // %L1449
	sin.approx.f32 	%f773, %f63;
	div.approx.f32 	%f1350, %f773, %f63;
$L__BB0_38:                             // %L1452
	mov.b32 	%r299, %f266;
	mov.b32 	%r306, %f300;
	mov.b32 	%r317, %f335;
	mov.b32 	%r324, %f369;
	mov.b32 	%r335, %f404;
	mov.b32 	%r342, %f438;
	mov.b32 	%r353, %f473;
	mov.b32 	%r360, %f507;
	mov.b32 	%r371, %f542;
	mov.b32 	%r378, %f576;
	mov.b32 	%r389, %f611;
	mov.b32 	%r396, %f645;
	mov.b32 	%r407, %f680;
	mov.b32 	%r414, %f714;
	mov.b32 	%r425, %f749;
	cvt.rn.f32.s32 	%f776, %r22;
	sub.f32 	%f777, %f776, %f253;
	div.approx.f32 	%f779, %f777, %f261;
	abs.f32 	%f780, %f779;
	setp.gt.f32 	%p105, %f780, 0f4B800000;
	mul.f32 	%f781, %f779, 0f00000000;
	selp.f32 	%f782, %f781, %f779, %p105;
	add.f32 	%f783, %f782, %f782;
	mov.b32 	%r432, %f783;
	div.approx.f32 	%f68, %f777, %f289;
	setp.eq.f32 	%p110, %f68, 0f00000000;
	@%p110 bra 	$L__BB0_40;
// %bb.39:                              // %L1469
	sin.approx.f32 	%f807, %f68;
	div.approx.f32 	%f1351, %f807, %f68;
$L__BB0_40:                             // %L1472
	and.b32  	%r300, %r299, -2147483648;
	and.b32  	%r307, %r306, -2147483648;
	and.b32  	%r318, %r317, -2147483648;
	and.b32  	%r325, %r324, -2147483648;
	and.b32  	%r336, %r335, -2147483648;
	and.b32  	%r343, %r342, -2147483648;
	and.b32  	%r354, %r353, -2147483648;
	and.b32  	%r361, %r360, -2147483648;
	and.b32  	%r372, %r371, -2147483648;
	and.b32  	%r379, %r378, -2147483648;
	and.b32  	%r390, %r389, -2147483648;
	and.b32  	%r397, %r396, -2147483648;
	and.b32  	%r408, %r407, -2147483648;
	and.b32  	%r415, %r414, -2147483648;
	and.b32  	%r426, %r425, -2147483648;
	and.b32  	%r433, %r432, -2147483648;
	mul.lo.s32 	%r24, %r246, 127;
	cvt.rn.f32.s32 	%f810, %r24;
	div.approx.f32 	%f71, %f810, %f289;
	abs.f32 	%f1354, %f71;
	setp.lt.f32 	%p111, %f1354, 0f40000000;
	@%p111 bra 	$L__BB0_52;
// %bb.41:
	setp.gtu.f32 	%p112, %f1354, 0f4B800000;
	@%p112 bra 	$L__BB0_48;
	bra.uni 	$L__BB0_42;
$L__BB0_48:
	mov.b32 	%r26, %f1354;
	and.b32  	%r442, %r26, 8388607;
	or.b32  	%r16374, %r442, 1065353216;
	mov.b32 	%f1353, %r16374;
	add.s32 	%r443, %r26, -1073741824;
	and.b32  	%r16375, %r443, -8388608;
	setp.eq.s32 	%p118, %r16375, 0;
	@%p118 bra 	$L__BB0_51;
// %bb.49:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f821, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f820,%f821;
	// end inline asm
$L__BB0_50:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r444, %r16375, 192937984;
	add.s32 	%r445, %r16374, %r444;
	mov.b32 	%f822, %r445;
	mul.f32 	%f823, %f820, %f822;
	sub.f32 	%f824, %f822, %f823;
	fma.rn.f32 	%f825, %f824, %f820, %f823;
	sub.f32 	%f826, %f822, %f825;
	fma.rz.f32 	%f827, %f826, %f820, %f825;
	cvt.rzi.f32.f32 	%f828, %f827;
	sub.f32 	%f1353, %f822, %f828;
	sub.s32 	%r16375, %r16375, %r444;
	mov.b32 	%r16374, %f1353;
	setp.ne.s32 	%p119, %r16375, 0;
	setp.ne.s32 	%p120, %r16374, 0;
	and.pred  	%p121, %p119, %p120;
	@%p121 bra 	$L__BB0_50;
$L__BB0_51:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p122, %r26, 2139095039;
	selp.f32 	%f829, 0f7FFFFFFF, 0f4B800000, %p122;
	mul.f32 	%f830, %f1353, 0f34000000;
	mul.f32 	%f1354, %f829, %f830;
	bra.uni 	$L__BB0_52;
$L__BB0_42:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f813, %f1354, %f257;
	cvt.rzi.f32.f32 	%f1352, %f813;
	fma.rn.f32 	%f74, %f1352, 0fC0000000, %f1354;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p113, %r25, 1073741824;
	@%p113 bra 	$L__BB0_47;
// %bb.43:
	setp.lt.u32 	%p114, %r25, -2147483647;
	@%p114 bra 	$L__BB0_45;
// %bb.44:
	add.f32 	%f818, %f1352, 0fBF800000;
	setp.lt.f32 	%p117, %f74, 0fC0000000;
	add.f32 	%f819, %f818, 0fBF800000;
	selp.f32 	%f1352, %f819, %f818, %p117;
	bra.uni 	$L__BB0_47;
$L__BB0_45:
	add.f32 	%f1352, %f1352, 0f3F800000;
	setp.ltu.f32 	%p115, %f74, 0f40800000;
	@%p115 bra 	$L__BB0_47;
// %bb.46:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f814, %f1352, 0f3F800000;
	fma.rn.f32 	%f816, %f257, 0fC0400000, %f74;
	setp.ge.f32 	%p116, %f816, 0f00000000;
	add.f32 	%f817, %f814, 0f3F800000;
	selp.f32 	%f1352, %f817, %f814, %p116;
$L__BB0_47:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1354, %f1352, 0fC0000000, %f1354;
$L__BB0_52:                             // %__internal_fmodf_kernel.exit.i
	or.b32  	%r301, %r300, 1056964608;
	or.b32  	%r308, %r307, 1056964608;
	or.b32  	%r319, %r318, 1056964608;
	or.b32  	%r326, %r325, 1056964608;
	or.b32  	%r337, %r336, 1056964608;
	or.b32  	%r344, %r343, 1056964608;
	or.b32  	%r355, %r354, 1056964608;
	or.b32  	%r362, %r361, 1056964608;
	or.b32  	%r373, %r372, 1056964608;
	or.b32  	%r380, %r379, 1056964608;
	or.b32  	%r391, %r390, 1056964608;
	or.b32  	%r398, %r397, 1056964608;
	or.b32  	%r409, %r408, 1056964608;
	or.b32  	%r416, %r415, 1056964608;
	or.b32  	%r427, %r426, 1056964608;
	or.b32  	%r434, %r433, 1056964608;
	abs.f32 	%f831, %f1354;
	setp.gtu.f32 	%p123, %f831, 0f7F800000;
	@%p123 bra 	$L__BB0_54;
// %bb.53:
	mov.b32 	%r446, %f71;
	and.b32  	%r447, %r446, -2147483648;
	mov.b32 	%r448, %f1354;
	or.b32  	%r449, %r447, %r448;
	mov.b32 	%f1354, %r449;
$L__BB0_54:                             // %__nv_fmodf.exit
	mov.b32 	%f267, %r301;
	mov.b32 	%f301, %r308;
	mov.b32 	%f336, %r319;
	mov.b32 	%f370, %r326;
	mov.b32 	%f405, %r337;
	mov.b32 	%f439, %r344;
	mov.b32 	%f474, %r355;
	mov.b32 	%f508, %r362;
	mov.b32 	%f543, %r373;
	mov.b32 	%f577, %r380;
	mov.b32 	%f612, %r391;
	mov.b32 	%f646, %r398;
	mov.b32 	%f681, %r409;
	mov.b32 	%f715, %r416;
	mov.b32 	%f750, %r427;
	mov.b32 	%f784, %r434;
	add.f32 	%f832, %f1354, %f1354;
	mov.b32 	%r450, %f832;
	and.b32  	%r451, %r450, -2147483648;
	or.b32  	%r452, %r451, 1056964608;
	mov.b32 	%f833, %r452;
	add.f32 	%f834, %f832, %f833;
	abs.f32 	%f836, %f832;
	add.s32 	%r458, %r24, 8128;
	cvt.rn.f32.s32 	%f862, %r458;
	div.approx.f32 	%f90, %f862, %f289;
	abs.f32 	%f1358, %f90;
	setp.lt.f32 	%p131, %f1358, 0f40000000;
	@%p131 bra 	$L__BB0_66;
// %bb.55:
	setp.gtu.f32 	%p132, %f1358, 0f4B800000;
	@%p132 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_56;
$L__BB0_62:
	mov.b32 	%r34, %f1358;
	and.b32  	%r459, %r34, 8388607;
	or.b32  	%r16376, %r459, 1065353216;
	mov.b32 	%f1357, %r16376;
	add.s32 	%r460, %r34, -1073741824;
	and.b32  	%r16377, %r460, -8388608;
	setp.eq.s32 	%p138, %r16377, 0;
	@%p138 bra 	$L__BB0_65;
// %bb.63:                              // %__nv_fmaf_rn.exit4.i.i.i1655.preheader
	mov.f32 	%f873, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f872,%f873;
	// end inline asm
$L__BB0_64:                             // %__nv_fmaf_rn.exit4.i.i.i1655
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r461, %r16377, 192937984;
	add.s32 	%r462, %r16376, %r461;
	mov.b32 	%f874, %r462;
	mul.f32 	%f875, %f872, %f874;
	sub.f32 	%f876, %f874, %f875;
	fma.rn.f32 	%f877, %f876, %f872, %f875;
	sub.f32 	%f878, %f874, %f877;
	fma.rz.f32 	%f879, %f878, %f872, %f877;
	cvt.rzi.f32.f32 	%f880, %f879;
	sub.f32 	%f1357, %f874, %f880;
	sub.s32 	%r16377, %r16377, %r461;
	mov.b32 	%r16376, %f1357;
	setp.ne.s32 	%p139, %r16377, 0;
	setp.ne.s32 	%p140, %r16376, 0;
	and.pred  	%p141, %p139, %p140;
	@%p141 bra 	$L__BB0_64;
$L__BB0_65:                             // %__internal_fmodf_slowpath_mod.exit.i.i1657
	setp.gt.u32 	%p142, %r34, 2139095039;
	selp.f32 	%f881, 0f7FFFFFFF, 0f4B800000, %p142;
	mul.f32 	%f882, %f1357, 0f34000000;
	mul.f32 	%f1358, %f881, %f882;
	bra.uni 	$L__BB0_66;
$L__BB0_56:                             // %__nv_fast_fdividef.exit.i.i.i1634
	div.approx.f32 	%f865, %f1358, %f257;
	cvt.rzi.f32.f32 	%f1356, %f865;
	fma.rn.f32 	%f93, %f1356, 0fC0000000, %f1358;
	mov.b32 	%r33, %f93;
	setp.lt.u32 	%p133, %r33, 1073741824;
	@%p133 bra 	$L__BB0_61;
// %bb.57:
	setp.lt.u32 	%p134, %r33, -2147483647;
	@%p134 bra 	$L__BB0_59;
// %bb.58:
	add.f32 	%f870, %f1356, 0fBF800000;
	setp.lt.f32 	%p137, %f93, 0fC0000000;
	add.f32 	%f871, %f870, 0fBF800000;
	selp.f32 	%f1356, %f871, %f870, %p137;
	bra.uni 	$L__BB0_61;
$L__BB0_59:
	add.f32 	%f1356, %f1356, 0f3F800000;
	setp.ltu.f32 	%p135, %f93, 0f40800000;
	@%p135 bra 	$L__BB0_61;
// %bb.60:                              // %__nv_fmaf_rn.exit.i.i.i1638
	add.f32 	%f866, %f1356, 0f3F800000;
	fma.rn.f32 	%f868, %f257, 0fC0400000, %f93;
	setp.ge.f32 	%p136, %f868, 0f00000000;
	add.f32 	%f869, %f866, 0f3F800000;
	selp.f32 	%f1356, %f869, %f866, %p136;
$L__BB0_61:                             // %__internal_fmodf_fastpath_quot.exit.i.i1641
	fma.rn.f32 	%f1358, %f1356, 0fC0000000, %f1358;
$L__BB0_66:                             // %__internal_fmodf_kernel.exit.i1660
	add.f32 	%f268, %f266, %f267;
	abs.f32 	%f270, %f266;
	add.f32 	%f302, %f300, %f301;
	abs.f32 	%f304, %f300;
	add.f32 	%f337, %f335, %f336;
	abs.f32 	%f339, %f335;
	add.f32 	%f371, %f369, %f370;
	abs.f32 	%f373, %f369;
	add.f32 	%f406, %f404, %f405;
	abs.f32 	%f408, %f404;
	add.f32 	%f440, %f438, %f439;
	abs.f32 	%f442, %f438;
	add.f32 	%f475, %f473, %f474;
	abs.f32 	%f477, %f473;
	add.f32 	%f509, %f507, %f508;
	abs.f32 	%f511, %f507;
	add.f32 	%f544, %f542, %f543;
	abs.f32 	%f546, %f542;
	add.f32 	%f578, %f576, %f577;
	abs.f32 	%f580, %f576;
	add.f32 	%f613, %f611, %f612;
	abs.f32 	%f615, %f611;
	add.f32 	%f647, %f645, %f646;
	abs.f32 	%f649, %f645;
	add.f32 	%f682, %f680, %f681;
	abs.f32 	%f684, %f680;
	add.f32 	%f716, %f714, %f715;
	abs.f32 	%f718, %f714;
	add.f32 	%f751, %f749, %f750;
	abs.f32 	%f753, %f749;
	add.f32 	%f785, %f783, %f784;
	abs.f32 	%f787, %f783;
	cvt.rzi.f32.f32 	%f835, %f834;
	setp.gt.f32 	%p124, %f836, 0f4B000000;
	shr.u32 	%r238, %r1, 1;
	shr.u32 	%r244, %r1, 3;
	abs.f32 	%f883, %f1358;
	setp.gtu.f32 	%p143, %f883, 0f7F800000;
	@%p143 bra 	$L__BB0_68;
// %bb.67:
	mov.b32 	%r463, %f90;
	and.b32  	%r464, %r463, -2147483648;
	mov.b32 	%r465, %f1358;
	or.b32  	%r466, %r464, %r465;
	mov.b32 	%f1358, %r466;
$L__BB0_68:                             // %__nv_fmodf.exit1661
	cvt.rzi.f32.f32 	%f269, %f268;
	setp.gt.f32 	%p16, %f270, 0f4B000000;
	cvt.rzi.f32.f32 	%f303, %f302;
	setp.gt.f32 	%p22, %f304, 0f4B000000;
	cvt.rzi.f32.f32 	%f338, %f337;
	setp.gt.f32 	%p28, %f339, 0f4B000000;
	cvt.rzi.f32.f32 	%f372, %f371;
	setp.gt.f32 	%p34, %f373, 0f4B000000;
	cvt.rzi.f32.f32 	%f407, %f406;
	setp.gt.f32 	%p40, %f408, 0f4B000000;
	cvt.rzi.f32.f32 	%f441, %f440;
	setp.gt.f32 	%p46, %f442, 0f4B000000;
	cvt.rzi.f32.f32 	%f476, %f475;
	setp.gt.f32 	%p52, %f477, 0f4B000000;
	cvt.rzi.f32.f32 	%f510, %f509;
	setp.gt.f32 	%p58, %f511, 0f4B000000;
	cvt.rzi.f32.f32 	%f545, %f544;
	setp.gt.f32 	%p64, %f546, 0f4B000000;
	cvt.rzi.f32.f32 	%f579, %f578;
	setp.gt.f32 	%p70, %f580, 0f4B000000;
	cvt.rzi.f32.f32 	%f614, %f613;
	setp.gt.f32 	%p76, %f615, 0f4B000000;
	cvt.rzi.f32.f32 	%f648, %f647;
	setp.gt.f32 	%p82, %f649, 0f4B000000;
	cvt.rzi.f32.f32 	%f683, %f682;
	setp.gt.f32 	%p88, %f684, 0f4B000000;
	cvt.rzi.f32.f32 	%f717, %f716;
	setp.gt.f32 	%p94, %f718, 0f4B000000;
	cvt.rzi.f32.f32 	%f752, %f751;
	setp.gt.f32 	%p100, %f753, 0f4B000000;
	cvt.rzi.f32.f32 	%f786, %f785;
	setp.gt.f32 	%p106, %f787, 0f4B000000;
	selp.f32 	%f837, %f832, %f835, %p124;
	cvt.rzi.f32.f32 	%f838, %f832;
	setp.lt.f32 	%p125, %f836, 0f3F000000;
	add.f32 	%f884, %f1358, %f1358;
	mov.b32 	%r479, %f884;
	and.b32  	%r480, %r479, -2147483648;
	or.b32  	%r481, %r480, 1056964608;
	mov.b32 	%f885, %r481;
	add.f32 	%f886, %f884, %f885;
	cvt.rzi.f32.f32 	%f887, %f886;
	abs.f32 	%f888, %f884;
	setp.gt.f32 	%p144, %f888, 0f4B000000;
	selp.f32 	%f889, %f884, %f887, %p144;
	cvt.rzi.f32.f32 	%f890, %f884;
	setp.lt.f32 	%p145, %f888, 0f3F000000;
	and.b32  	%r487, %r244, 2;
	or.b32  	%r488, %r242, %r487;
	and.b32  	%r489, %r238, 4;
	or.b32  	%r45, %r488, %r489;
	and.b32  	%r490, %r1, 3;
	mul.lo.s32 	%r491, %r490, %r45;
	shl.b32 	%r492, %r491, 1;
	neg.s32 	%r493, %r492;
	cvt.rn.f32.s32 	%f916, %r493;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f107, %f916, %f917;
	abs.f32 	%f1362, %f107;
	setp.lt.f32 	%p151, %f1362, 0f40000000;
	@%p151 bra 	$L__BB0_80;
// %bb.69:
	setp.gtu.f32 	%p152, %f1362, 0f4B800000;
	@%p152 bra 	$L__BB0_76;
	bra.uni 	$L__BB0_70;
$L__BB0_76:
	mov.b32 	%r47, %f1362;
	and.b32  	%r494, %r47, 8388607;
	or.b32  	%r16378, %r494, 1065353216;
	mov.b32 	%f1361, %r16378;
	add.s32 	%r495, %r47, -1073741824;
	and.b32  	%r16379, %r495, -8388608;
	setp.eq.s32 	%p158, %r16379, 0;
	@%p158 bra 	$L__BB0_79;
// %bb.77:                              // %__nv_fmaf_rn.exit4.i.i.i1686.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
$L__BB0_78:                             // %__nv_fmaf_rn.exit4.i.i.i1686
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r496, %r16379, 192937984;
	add.s32 	%r497, %r16378, %r496;
	mov.b32 	%f928, %r497;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1361, %f928, %f934;
	sub.s32 	%r16379, %r16379, %r496;
	mov.b32 	%r16378, %f1361;
	setp.ne.s32 	%p159, %r16379, 0;
	setp.ne.s32 	%p160, %r16378, 0;
	and.pred  	%p161, %p159, %p160;
	@%p161 bra 	$L__BB0_78;
$L__BB0_79:                             // %__internal_fmodf_slowpath_mod.exit.i.i1688
	setp.gt.u32 	%p162, %r47, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p162;
	mul.f32 	%f936, %f1361, 0f34000000;
	mul.f32 	%f1362, %f935, %f936;
	bra.uni 	$L__BB0_80;
$L__BB0_70:                             // %__nv_fast_fdividef.exit.i.i.i1665
	div.approx.f32 	%f919, %f1362, %f257;
	cvt.rzi.f32.f32 	%f1360, %f919;
	fma.rn.f32 	%f110, %f1360, 0fC0000000, %f1362;
	mov.b32 	%r46, %f110;
	setp.lt.u32 	%p153, %r46, 1073741824;
	@%p153 bra 	$L__BB0_75;
// %bb.71:
	setp.lt.u32 	%p154, %r46, -2147483647;
	@%p154 bra 	$L__BB0_73;
// %bb.72:
	add.f32 	%f924, %f1360, 0fBF800000;
	setp.lt.f32 	%p157, %f110, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1360, %f925, %f924, %p157;
	bra.uni 	$L__BB0_75;
$L__BB0_73:
	add.f32 	%f1360, %f1360, 0f3F800000;
	setp.ltu.f32 	%p155, %f110, 0f40800000;
	@%p155 bra 	$L__BB0_75;
// %bb.74:                              // %__nv_fmaf_rn.exit.i.i.i1669
	add.f32 	%f920, %f1360, 0f3F800000;
	fma.rn.f32 	%f922, %f257, 0fC0400000, %f110;
	setp.ge.f32 	%p156, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1360, %f923, %f920, %p156;
$L__BB0_75:                             // %__internal_fmodf_fastpath_quot.exit.i.i1672
	fma.rn.f32 	%f1362, %f1360, 0fC0000000, %f1362;
$L__BB0_80:                             // %__internal_fmodf_kernel.exit.i1691
	selp.f32 	%f271, %f266, %f269, %p16;
	cvt.rzi.f32.f32 	%f272, %f266;
	setp.lt.f32 	%p17, %f270, 0f3F000000;
	selp.f32 	%f305, %f300, %f303, %p22;
	cvt.rzi.f32.f32 	%f306, %f300;
	setp.lt.f32 	%p23, %f304, 0f3F000000;
	selp.f32 	%f340, %f335, %f338, %p28;
	cvt.rzi.f32.f32 	%f341, %f335;
	setp.lt.f32 	%p29, %f339, 0f3F000000;
	selp.f32 	%f374, %f369, %f372, %p34;
	cvt.rzi.f32.f32 	%f375, %f369;
	setp.lt.f32 	%p35, %f373, 0f3F000000;
	selp.f32 	%f409, %f404, %f407, %p40;
	cvt.rzi.f32.f32 	%f410, %f404;
	setp.lt.f32 	%p41, %f408, 0f3F000000;
	selp.f32 	%f443, %f438, %f441, %p46;
	cvt.rzi.f32.f32 	%f444, %f438;
	setp.lt.f32 	%p47, %f442, 0f3F000000;
	selp.f32 	%f478, %f473, %f476, %p52;
	cvt.rzi.f32.f32 	%f479, %f473;
	setp.lt.f32 	%p53, %f477, 0f3F000000;
	selp.f32 	%f512, %f507, %f510, %p58;
	cvt.rzi.f32.f32 	%f513, %f507;
	setp.lt.f32 	%p59, %f511, 0f3F000000;
	selp.f32 	%f547, %f542, %f545, %p64;
	cvt.rzi.f32.f32 	%f548, %f542;
	setp.lt.f32 	%p65, %f546, 0f3F000000;
	selp.f32 	%f581, %f576, %f579, %p70;
	cvt.rzi.f32.f32 	%f582, %f576;
	setp.lt.f32 	%p71, %f580, 0f3F000000;
	selp.f32 	%f616, %f611, %f614, %p76;
	cvt.rzi.f32.f32 	%f617, %f611;
	setp.lt.f32 	%p77, %f615, 0f3F000000;
	selp.f32 	%f650, %f645, %f648, %p82;
	cvt.rzi.f32.f32 	%f651, %f645;
	setp.lt.f32 	%p83, %f649, 0f3F000000;
	selp.f32 	%f685, %f680, %f683, %p88;
	cvt.rzi.f32.f32 	%f686, %f680;
	setp.lt.f32 	%p89, %f684, 0f3F000000;
	selp.f32 	%f719, %f714, %f717, %p94;
	cvt.rzi.f32.f32 	%f720, %f714;
	setp.lt.f32 	%p95, %f718, 0f3F000000;
	selp.f32 	%f754, %f749, %f752, %p100;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p101, %f753, 0f3F000000;
	selp.f32 	%f788, %f783, %f786, %p106;
	cvt.rzi.f32.f32 	%f789, %f783;
	setp.lt.f32 	%p107, %f787, 0f3F000000;
	selp.f32 	%f839, %f838, %f837, %p125;
	selp.f32 	%f891, %f890, %f889, %p145;
	shl.b32 	%r228, %r1, 1;
	abs.f32 	%f937, %f1362;
	setp.gtu.f32 	%p163, %f937, 0f7F800000;
	@%p163 bra 	$L__BB0_82;
// %bb.81:
	mov.b32 	%r498, %f107;
	and.b32  	%r499, %r498, -2147483648;
	mov.b32 	%r500, %f1362;
	or.b32  	%r501, %r499, %r500;
	mov.b32 	%f1362, %r501;
$L__BB0_82:                             // %__nv_fmodf.exit1692
	selp.f32 	%f273, %f272, %f271, %p17;
	selp.f32 	%f307, %f306, %f305, %p23;
	selp.f32 	%f342, %f341, %f340, %p29;
	selp.f32 	%f376, %f375, %f374, %p35;
	selp.f32 	%f411, %f410, %f409, %p41;
	selp.f32 	%f445, %f444, %f443, %p47;
	selp.f32 	%f480, %f479, %f478, %p53;
	selp.f32 	%f514, %f513, %f512, %p59;
	selp.f32 	%f549, %f548, %f547, %p65;
	selp.f32 	%f583, %f582, %f581, %p71;
	selp.f32 	%f618, %f617, %f616, %p77;
	selp.f32 	%f652, %f651, %f650, %p83;
	selp.f32 	%f687, %f686, %f685, %p89;
	selp.f32 	%f721, %f720, %f719, %p95;
	selp.f32 	%f756, %f755, %f754, %p101;
	selp.f32 	%f790, %f789, %f788, %p107;
	fma.rn.f32 	%f840, %f839, 0fBF000000, %f1354;
	fma.rn.f32 	%f892, %f891, 0fBF000000, %f1358;
	add.f32 	%f938, %f1362, %f1362;
	mov.b32 	%r502, %f938;
	and.b32  	%r503, %r502, -2147483648;
	or.b32  	%r504, %r503, 1056964608;
	mov.b32 	%f939, %r504;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p164, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p164;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p165, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p165;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1362;
	and.b32  	%r510, %r228, 6;
	mov.u32 	%r511, -8;
	sub.s32 	%r512, %r511, %r510;
	mul.lo.s32 	%r513, %r45, %r512;
	cvt.rn.f32.s32 	%f968, %r513;
	div.approx.f32 	%f126, %f968, %f917;
	abs.f32 	%f1366, %f126;
	setp.lt.f32 	%p171, %f1366, 0f40000000;
	@%p171 bra 	$L__BB0_94;
// %bb.83:
	setp.gtu.f32 	%p172, %f1366, 0f4B800000;
	@%p172 bra 	$L__BB0_90;
	bra.uni 	$L__BB0_84;
$L__BB0_90:
	mov.b32 	%r55, %f1366;
	and.b32  	%r514, %r55, 8388607;
	or.b32  	%r16380, %r514, 1065353216;
	mov.b32 	%f1365, %r16380;
	add.s32 	%r515, %r55, -1073741824;
	and.b32  	%r16381, %r515, -8388608;
	setp.eq.s32 	%p178, %r16381, 0;
	@%p178 bra 	$L__BB0_93;
// %bb.91:                              // %__nv_fmaf_rn.exit4.i.i.i1717.preheader
	mov.f32 	%f979, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f978,%f979;
	// end inline asm
$L__BB0_92:                             // %__nv_fmaf_rn.exit4.i.i.i1717
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r516, %r16381, 192937984;
	add.s32 	%r517, %r16380, %r516;
	mov.b32 	%f980, %r517;
	mul.f32 	%f981, %f978, %f980;
	sub.f32 	%f982, %f980, %f981;
	fma.rn.f32 	%f983, %f982, %f978, %f981;
	sub.f32 	%f984, %f980, %f983;
	fma.rz.f32 	%f985, %f984, %f978, %f983;
	cvt.rzi.f32.f32 	%f986, %f985;
	sub.f32 	%f1365, %f980, %f986;
	sub.s32 	%r16381, %r16381, %r516;
	mov.b32 	%r16380, %f1365;
	setp.ne.s32 	%p179, %r16381, 0;
	setp.ne.s32 	%p180, %r16380, 0;
	and.pred  	%p181, %p179, %p180;
	@%p181 bra 	$L__BB0_92;
$L__BB0_93:                             // %__internal_fmodf_slowpath_mod.exit.i.i1719
	setp.gt.u32 	%p182, %r55, 2139095039;
	selp.f32 	%f987, 0f7FFFFFFF, 0f4B800000, %p182;
	mul.f32 	%f988, %f1365, 0f34000000;
	mul.f32 	%f1366, %f987, %f988;
	bra.uni 	$L__BB0_94;
$L__BB0_84:                             // %__nv_fast_fdividef.exit.i.i.i1696
	div.approx.f32 	%f971, %f1366, %f257;
	cvt.rzi.f32.f32 	%f1364, %f971;
	fma.rn.f32 	%f129, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r54, %f129;
	setp.lt.u32 	%p173, %r54, 1073741824;
	@%p173 bra 	$L__BB0_89;
// %bb.85:
	setp.lt.u32 	%p174, %r54, -2147483647;
	@%p174 bra 	$L__BB0_87;
// %bb.86:
	add.f32 	%f976, %f1364, 0fBF800000;
	setp.lt.f32 	%p177, %f129, 0fC0000000;
	add.f32 	%f977, %f976, 0fBF800000;
	selp.f32 	%f1364, %f977, %f976, %p177;
	bra.uni 	$L__BB0_89;
$L__BB0_87:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p175, %f129, 0f40800000;
	@%p175 bra 	$L__BB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i1700
	add.f32 	%f972, %f1364, 0f3F800000;
	fma.rn.f32 	%f974, %f257, 0fC0400000, %f129;
	setp.ge.f32 	%p176, %f974, 0f00000000;
	add.f32 	%f975, %f972, 0f3F800000;
	selp.f32 	%f1364, %f975, %f972, %p176;
$L__BB0_89:                             // %__internal_fmodf_fastpath_quot.exit.i.i1703
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
$L__BB0_94:                             // %__internal_fmodf_kernel.exit.i1722
	fma.rn.f32 	%f274, %f273, 0fBF000000, %f265;
	fma.rn.f32 	%f308, %f307, 0fBF000000, %f299;
	fma.rn.f32 	%f343, %f342, 0fBF000000, %f334;
	fma.rn.f32 	%f377, %f376, 0fBF000000, %f368;
	fma.rn.f32 	%f412, %f411, 0fBF000000, %f403;
	fma.rn.f32 	%f446, %f445, 0fBF000000, %f437;
	fma.rn.f32 	%f481, %f480, 0fBF000000, %f472;
	fma.rn.f32 	%f515, %f514, 0fBF000000, %f506;
	fma.rn.f32 	%f550, %f549, 0fBF000000, %f541;
	fma.rn.f32 	%f584, %f583, 0fBF000000, %f575;
	fma.rn.f32 	%f619, %f618, 0fBF000000, %f610;
	fma.rn.f32 	%f653, %f652, 0fBF000000, %f644;
	fma.rn.f32 	%f688, %f687, 0fBF000000, %f679;
	fma.rn.f32 	%f722, %f721, 0fBF000000, %f713;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f748;
	fma.rn.f32 	%f791, %f790, 0fBF000000, %f782;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f893, %f892, %f892;
	mul.f32 	%f947, %f946, %f946;
	abs.f32 	%f989, %f1366;
	setp.gtu.f32 	%p183, %f989, 0f7F800000;
	@%p183 bra 	$L__BB0_96;
// %bb.95:
	mov.b32 	%r518, %f126;
	and.b32  	%r519, %r518, -2147483648;
	mov.b32 	%r520, %f1366;
	or.b32  	%r521, %r519, %r520;
	mov.b32 	%f1366, %r521;
$L__BB0_96:                             // %__nv_fmodf.exit1723
	mul.f32 	%f275, %f274, %f274;
	mul.f32 	%f309, %f308, %f308;
	mul.f32 	%f344, %f343, %f343;
	mul.f32 	%f378, %f377, %f377;
	mul.f32 	%f413, %f412, %f412;
	mul.f32 	%f447, %f446, %f446;
	mul.f32 	%f482, %f481, %f481;
	mul.f32 	%f516, %f515, %f515;
	mul.f32 	%f551, %f550, %f550;
	mul.f32 	%f585, %f584, %f584;
	mul.f32 	%f620, %f619, %f619;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f689, %f688, %f688;
	mul.f32 	%f723, %f722, %f722;
	mul.f32 	%f758, %f757, %f757;
	mul.f32 	%f792, %f791, %f791;
	fma.rn.f32 	%f842, %f841, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f843, %f841, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f894, %f893, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f895, %f893, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f948, %f947, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f949, %f947, 0f3E684E12, 0fBFAAD2E0;
	add.f32 	%f990, %f1366, %f1366;
	mov.b32 	%r534, %f990;
	and.b32  	%r535, %r534, -2147483648;
	or.b32  	%r536, %r535, 1056964608;
	mov.b32 	%f991, %r536;
	add.f32 	%f992, %f990, %f991;
	cvt.rzi.f32.f32 	%f993, %f992;
	abs.f32 	%f994, %f990;
	setp.gt.f32 	%p184, %f994, 0f4B000000;
	selp.f32 	%f995, %f990, %f993, %p184;
	cvt.rzi.f32.f32 	%f996, %f990;
	setp.lt.f32 	%p185, %f994, 0f3F000000;
	selp.f32 	%f997, %f996, %f995, %p185;
	fma.rn.f32 	%f998, %f997, 0fBF000000, %f1366;
	mul.f32 	%f999, %f998, %f998;
	fma.rn.f32 	%f1000, %f999, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1001, %f999, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r542, %r240, 2147483646;
	shl.b32 	%r543, %r239, 2;
	sub.s32 	%r544, %r542, %r543;
	mul.lo.s32 	%r545, %r544, %r45;
	shl.b32 	%r66, %r545, 1;
	cvt.rn.f32.s32 	%f143, %r66;
	div.approx.f32 	%f144, %f143, %f289;
	abs.f32 	%f1370, %f144;
	setp.lt.f32 	%p191, %f1370, 0f40000000;
	@%p191 bra 	$L__BB0_108;
// %bb.97:
	setp.gtu.f32 	%p192, %f1370, 0f4B800000;
	@%p192 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_98;
$L__BB0_104:
	mov.b32 	%r68, %f1370;
	and.b32  	%r546, %r68, 8388607;
	or.b32  	%r16382, %r546, 1065353216;
	mov.b32 	%f1369, %r16382;
	add.s32 	%r547, %r68, -1073741824;
	and.b32  	%r16383, %r547, -8388608;
	setp.eq.s32 	%p198, %r16383, 0;
	@%p198 bra 	$L__BB0_107;
// %bb.105:                             // %__nv_fmaf_rn.exit4.i.i.i1748.preheader
	mov.f32 	%f1032, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1031,%f1032;
	// end inline asm
$L__BB0_106:                            // %__nv_fmaf_rn.exit4.i.i.i1748
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r548, %r16383, 192937984;
	add.s32 	%r549, %r16382, %r548;
	mov.b32 	%f1033, %r549;
	mul.f32 	%f1034, %f1031, %f1033;
	sub.f32 	%f1035, %f1033, %f1034;
	fma.rn.f32 	%f1036, %f1035, %f1031, %f1034;
	sub.f32 	%f1037, %f1033, %f1036;
	fma.rz.f32 	%f1038, %f1037, %f1031, %f1036;
	cvt.rzi.f32.f32 	%f1039, %f1038;
	sub.f32 	%f1369, %f1033, %f1039;
	sub.s32 	%r16383, %r16383, %r548;
	mov.b32 	%r16382, %f1369;
	setp.ne.s32 	%p199, %r16383, 0;
	setp.ne.s32 	%p200, %r16382, 0;
	and.pred  	%p201, %p199, %p200;
	@%p201 bra 	$L__BB0_106;
$L__BB0_107:                            // %__internal_fmodf_slowpath_mod.exit.i.i1750
	setp.gt.u32 	%p202, %r68, 2139095039;
	selp.f32 	%f1040, 0f7FFFFFFF, 0f4B800000, %p202;
	mul.f32 	%f1041, %f1369, 0f34000000;
	mul.f32 	%f1370, %f1040, %f1041;
	bra.uni 	$L__BB0_108;
$L__BB0_98:                             // %__nv_fast_fdividef.exit.i.i.i1727
	div.approx.f32 	%f1024, %f1370, %f257;
	cvt.rzi.f32.f32 	%f1368, %f1024;
	fma.rn.f32 	%f147, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r67, %f147;
	setp.lt.u32 	%p193, %r67, 1073741824;
	@%p193 bra 	$L__BB0_103;
// %bb.99:
	setp.lt.u32 	%p194, %r67, -2147483647;
	@%p194 bra 	$L__BB0_101;
// %bb.100:
	add.f32 	%f1029, %f1368, 0fBF800000;
	setp.lt.f32 	%p197, %f147, 0fC0000000;
	add.f32 	%f1030, %f1029, 0fBF800000;
	selp.f32 	%f1368, %f1030, %f1029, %p197;
	bra.uni 	$L__BB0_103;
$L__BB0_101:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p195, %f147, 0f40800000;
	@%p195 bra 	$L__BB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i1731
	add.f32 	%f1025, %f1368, 0f3F800000;
	fma.rn.f32 	%f1027, %f257, 0fC0400000, %f147;
	setp.ge.f32 	%p196, %f1027, 0f00000000;
	add.f32 	%f1028, %f1025, 0f3F800000;
	selp.f32 	%f1368, %f1028, %f1025, %p196;
$L__BB0_103:                            // %__internal_fmodf_fastpath_quot.exit.i.i1734
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
$L__BB0_108:                            // %__internal_fmodf_kernel.exit.i1753
	cvt.rzi.s32.f32 	%r302, %f273;
	fma.rn.f32 	%f276, %f275, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f277, %f275, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r309, %f307;
	fma.rn.f32 	%f310, %f309, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f311, %f309, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r320, %f342;
	fma.rn.f32 	%f345, %f344, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f346, %f344, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r327, %f376;
	fma.rn.f32 	%f379, %f378, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f380, %f378, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r338, %f411;
	fma.rn.f32 	%f414, %f413, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f415, %f413, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r345, %f445;
	fma.rn.f32 	%f448, %f447, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f449, %f447, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r356, %f480;
	fma.rn.f32 	%f483, %f482, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f484, %f482, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r363, %f514;
	fma.rn.f32 	%f517, %f516, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f518, %f516, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r374, %f549;
	fma.rn.f32 	%f552, %f551, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f553, %f551, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r381, %f583;
	fma.rn.f32 	%f586, %f585, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f587, %f585, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r392, %f618;
	fma.rn.f32 	%f621, %f620, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f622, %f620, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r399, %f652;
	fma.rn.f32 	%f655, %f654, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f656, %f654, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r410, %f687;
	fma.rn.f32 	%f690, %f689, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f691, %f689, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r417, %f721;
	fma.rn.f32 	%f724, %f723, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f725, %f723, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r428, %f756;
	fma.rn.f32 	%f759, %f758, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f760, %f758, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r435, %f790;
	fma.rn.f32 	%f793, %f792, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f794, %f792, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r453, %f839;
	fma.rn.f32 	%f844, %f842, %f841, 0fC0A55DF6;
	fma.rn.f32 	%f845, %f843, %f841, 0f4081E0CF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	cvt.rzi.s32.f32 	%r482, %f891;
	fma.rn.f32 	%f896, %f894, %f893, 0fC0A55DF6;
	fma.rn.f32 	%f897, %f895, %f893, 0f4081E0CF;
	fma.rn.f32 	%f898, %f893, %f892, 0f00000000;
	cvt.rzi.s32.f32 	%r505, %f945;
	fma.rn.f32 	%f950, %f948, %f947, 0fC0A55DF6;
	fma.rn.f32 	%f951, %f949, %f947, 0f4081E0CF;
	fma.rn.f32 	%f952, %f947, %f946, 0f00000000;
	cvt.rzi.s32.f32 	%r537, %f997;
	fma.rn.f32 	%f1002, %f1000, %f999, 0fC0A55DF6;
	fma.rn.f32 	%f1003, %f1001, %f999, 0f4081E0CF;
	fma.rn.f32 	%f1004, %f999, %f998, 0f00000000;
	abs.f32 	%f1042, %f1370;
	setp.gtu.f32 	%p203, %f1042, 0f7F800000;
	@%p203 bra 	$L__BB0_110;
// %bb.109:
	mov.b32 	%r550, %f144;
	and.b32  	%r551, %r550, -2147483648;
	mov.b32 	%r552, %f1370;
	or.b32  	%r553, %r551, %r552;
	mov.b32 	%f1370, %r553;
$L__BB0_110:                            // %__nv_fmodf.exit1754
	add.s32 	%r303, %r302, 1;
	fma.rn.f32 	%f278, %f276, %f275, 0fC0A55DF6;
	fma.rn.f32 	%f279, %f277, %f275, 0f4081E0CF;
	fma.rn.f32 	%f280, %f275, %f274, 0f00000000;
	add.s32 	%r310, %r309, 1;
	fma.rn.f32 	%f312, %f310, %f309, 0fC0A55DF6;
	fma.rn.f32 	%f313, %f311, %f309, 0f4081E0CF;
	fma.rn.f32 	%f314, %f309, %f308, 0f00000000;
	add.s32 	%r321, %r320, 1;
	fma.rn.f32 	%f347, %f345, %f344, 0fC0A55DF6;
	fma.rn.f32 	%f348, %f346, %f344, 0f4081E0CF;
	fma.rn.f32 	%f349, %f344, %f343, 0f00000000;
	add.s32 	%r328, %r327, 1;
	fma.rn.f32 	%f381, %f379, %f378, 0fC0A55DF6;
	fma.rn.f32 	%f382, %f380, %f378, 0f4081E0CF;
	fma.rn.f32 	%f383, %f378, %f377, 0f00000000;
	add.s32 	%r339, %r338, 1;
	fma.rn.f32 	%f416, %f414, %f413, 0fC0A55DF6;
	fma.rn.f32 	%f417, %f415, %f413, 0f4081E0CF;
	fma.rn.f32 	%f418, %f413, %f412, 0f00000000;
	add.s32 	%r346, %r345, 1;
	fma.rn.f32 	%f450, %f448, %f447, 0fC0A55DF6;
	fma.rn.f32 	%f451, %f449, %f447, 0f4081E0CF;
	fma.rn.f32 	%f452, %f447, %f446, 0f00000000;
	add.s32 	%r357, %r356, 1;
	fma.rn.f32 	%f485, %f483, %f482, 0fC0A55DF6;
	fma.rn.f32 	%f486, %f484, %f482, 0f4081E0CF;
	fma.rn.f32 	%f487, %f482, %f481, 0f00000000;
	add.s32 	%r364, %r363, 1;
	fma.rn.f32 	%f519, %f517, %f516, 0fC0A55DF6;
	fma.rn.f32 	%f520, %f518, %f516, 0f4081E0CF;
	fma.rn.f32 	%f521, %f516, %f515, 0f00000000;
	add.s32 	%r375, %r374, 1;
	fma.rn.f32 	%f554, %f552, %f551, 0fC0A55DF6;
	fma.rn.f32 	%f555, %f553, %f551, 0f4081E0CF;
	fma.rn.f32 	%f556, %f551, %f550, 0f00000000;
	add.s32 	%r382, %r381, 1;
	fma.rn.f32 	%f588, %f586, %f585, 0fC0A55DF6;
	fma.rn.f32 	%f589, %f587, %f585, 0f4081E0CF;
	fma.rn.f32 	%f590, %f585, %f584, 0f00000000;
	add.s32 	%r393, %r392, 1;
	fma.rn.f32 	%f623, %f621, %f620, 0fC0A55DF6;
	fma.rn.f32 	%f624, %f622, %f620, 0f4081E0CF;
	fma.rn.f32 	%f625, %f620, %f619, 0f00000000;
	add.s32 	%r400, %r399, 1;
	fma.rn.f32 	%f657, %f655, %f654, 0fC0A55DF6;
	fma.rn.f32 	%f658, %f656, %f654, 0f4081E0CF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	add.s32 	%r411, %r410, 1;
	fma.rn.f32 	%f692, %f690, %f689, 0fC0A55DF6;
	fma.rn.f32 	%f693, %f691, %f689, 0f4081E0CF;
	fma.rn.f32 	%f694, %f689, %f688, 0f00000000;
	add.s32 	%r418, %r417, 1;
	fma.rn.f32 	%f726, %f724, %f723, 0fC0A55DF6;
	fma.rn.f32 	%f727, %f725, %f723, 0f4081E0CF;
	fma.rn.f32 	%f728, %f723, %f722, 0f00000000;
	add.s32 	%r429, %r428, 1;
	fma.rn.f32 	%f761, %f759, %f758, 0fC0A55DF6;
	fma.rn.f32 	%f762, %f760, %f758, 0f4081E0CF;
	fma.rn.f32 	%f763, %f758, %f757, 0f00000000;
	add.s32 	%r436, %r435, 1;
	fma.rn.f32 	%f795, %f793, %f792, 0fC0A55DF6;
	fma.rn.f32 	%f796, %f794, %f792, 0f4081E0CF;
	fma.rn.f32 	%f797, %f792, %f791, 0f00000000;
	fma.rn.f32 	%f847, %f845, %f841, 0fC09DE9E6;
	fma.rn.f32 	%f848, %f844, %f846, 0f00000000;
	and.b32  	%r454, %r453, 1;
	fma.rn.f32 	%f899, %f897, %f893, 0fC09DE9E6;
	fma.rn.f32 	%f900, %f896, %f898, 0f00000000;
	and.b32  	%r483, %r482, 1;
	fma.rn.f32 	%f953, %f951, %f947, 0fC09DE9E6;
	fma.rn.f32 	%f954, %f950, %f952, 0f00000000;
	and.b32  	%r506, %r505, 1;
	fma.rn.f32 	%f1005, %f1003, %f999, 0fC09DE9E6;
	fma.rn.f32 	%f1006, %f1002, %f1004, 0f00000000;
	and.b32  	%r538, %r537, 1;
	add.f32 	%f1043, %f1370, %f1370;
	mov.b32 	%r554, %f1043;
	and.b32  	%r555, %r554, -2147483648;
	or.b32  	%r556, %r555, 1056964608;
	mov.b32 	%f1044, %r556;
	add.f32 	%f1045, %f1043, %f1044;
	cvt.rzi.f32.f32 	%f1046, %f1045;
	abs.f32 	%f1047, %f1043;
	setp.gt.f32 	%p204, %f1047, 0f4B000000;
	selp.f32 	%f1048, %f1043, %f1046, %p204;
	cvt.rzi.f32.f32 	%f1049, %f1043;
	setp.lt.f32 	%p205, %f1047, 0f3F000000;
	selp.f32 	%f1050, %f1049, %f1048, %p205;
	cvt.rzi.s32.f32 	%r557, %f1050;
	fma.rn.f32 	%f1051, %f1050, 0fBF000000, %f1370;
	mul.f32 	%f1052, %f1051, %f1051;
	fma.rn.f32 	%f1053, %f1052, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1054, %f1052, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1055, %f1053, %f1052, 0fC0A55DF6;
	fma.rn.f32 	%f1056, %f1054, %f1052, 0f4081E0CF;
	fma.rn.f32 	%f1057, %f1052, %f1051, 0f00000000;
	shl.b32 	%r562, %r45, 4;
	sub.s32 	%r563, %r66, %r562;
	cvt.rn.f32.s32 	%f163, %r563;
	div.approx.f32 	%f164, %f163, %f289;
	abs.f32 	%f1374, %f164;
	setp.lt.f32 	%p211, %f1374, 0f40000000;
	@%p211 bra 	$L__BB0_122;
// %bb.111:
	setp.gtu.f32 	%p212, %f1374, 0f4B800000;
	@%p212 bra 	$L__BB0_118;
	bra.uni 	$L__BB0_112;
$L__BB0_118:
	mov.b32 	%r76, %f1374;
	and.b32  	%r564, %r76, 8388607;
	or.b32  	%r16384, %r564, 1065353216;
	mov.b32 	%f1373, %r16384;
	add.s32 	%r565, %r76, -1073741824;
	and.b32  	%r16385, %r565, -8388608;
	setp.eq.s32 	%p218, %r16385, 0;
	@%p218 bra 	$L__BB0_121;
// %bb.119:                             // %__nv_fmaf_rn.exit4.i.i.i1779.preheader
	mov.f32 	%f1083, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1082,%f1083;
	// end inline asm
$L__BB0_120:                            // %__nv_fmaf_rn.exit4.i.i.i1779
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r566, %r16385, 192937984;
	add.s32 	%r567, %r16384, %r566;
	mov.b32 	%f1084, %r567;
	mul.f32 	%f1085, %f1082, %f1084;
	sub.f32 	%f1086, %f1084, %f1085;
	fma.rn.f32 	%f1087, %f1086, %f1082, %f1085;
	sub.f32 	%f1088, %f1084, %f1087;
	fma.rz.f32 	%f1089, %f1088, %f1082, %f1087;
	cvt.rzi.f32.f32 	%f1090, %f1089;
	sub.f32 	%f1373, %f1084, %f1090;
	sub.s32 	%r16385, %r16385, %r566;
	mov.b32 	%r16384, %f1373;
	setp.ne.s32 	%p219, %r16385, 0;
	setp.ne.s32 	%p220, %r16384, 0;
	and.pred  	%p221, %p219, %p220;
	@%p221 bra 	$L__BB0_120;
$L__BB0_121:                            // %__internal_fmodf_slowpath_mod.exit.i.i1781
	setp.gt.u32 	%p222, %r76, 2139095039;
	selp.f32 	%f1091, 0f7FFFFFFF, 0f4B800000, %p222;
	mul.f32 	%f1092, %f1373, 0f34000000;
	mul.f32 	%f1374, %f1091, %f1092;
	bra.uni 	$L__BB0_122;
$L__BB0_112:                            // %__nv_fast_fdividef.exit.i.i.i1758
	div.approx.f32 	%f1075, %f1374, %f257;
	cvt.rzi.f32.f32 	%f1372, %f1075;
	fma.rn.f32 	%f167, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r75, %f167;
	setp.lt.u32 	%p213, %r75, 1073741824;
	@%p213 bra 	$L__BB0_117;
// %bb.113:
	setp.lt.u32 	%p214, %r75, -2147483647;
	@%p214 bra 	$L__BB0_115;
// %bb.114:
	add.f32 	%f1080, %f1372, 0fBF800000;
	setp.lt.f32 	%p217, %f167, 0fC0000000;
	add.f32 	%f1081, %f1080, 0fBF800000;
	selp.f32 	%f1372, %f1081, %f1080, %p217;
	bra.uni 	$L__BB0_117;
$L__BB0_115:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p215, %f167, 0f40800000;
	@%p215 bra 	$L__BB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i1762
	add.f32 	%f1076, %f1372, 0f3F800000;
	fma.rn.f32 	%f1078, %f257, 0fC0400000, %f167;
	setp.ge.f32 	%p216, %f1078, 0f00000000;
	add.f32 	%f1079, %f1076, 0f3F800000;
	selp.f32 	%f1372, %f1079, %f1076, %p216;
$L__BB0_117:                            // %__internal_fmodf_fastpath_quot.exit.i.i1765
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
$L__BB0_122:                            // %__internal_fmodf_kernel.exit.i1784
	and.b32  	%r234, %r1, 18;
	fma.rn.f32 	%f281, %f279, %f275, 0fC09DE9E6;
	fma.rn.f32 	%f282, %f278, %f280, 0f00000000;
	and.b32  	%r304, %r303, 1;
	fma.rn.f32 	%f315, %f313, %f309, 0fC09DE9E6;
	fma.rn.f32 	%f316, %f312, %f314, 0f00000000;
	and.b32  	%r311, %r310, 1;
	fma.rn.f32 	%f350, %f348, %f344, 0fC09DE9E6;
	fma.rn.f32 	%f351, %f347, %f349, 0f00000000;
	and.b32  	%r322, %r321, 1;
	fma.rn.f32 	%f384, %f382, %f378, 0fC09DE9E6;
	fma.rn.f32 	%f385, %f381, %f383, 0f00000000;
	and.b32  	%r329, %r328, 1;
	fma.rn.f32 	%f419, %f417, %f413, 0fC09DE9E6;
	fma.rn.f32 	%f420, %f416, %f418, 0f00000000;
	and.b32  	%r340, %r339, 1;
	fma.rn.f32 	%f453, %f451, %f447, 0fC09DE9E6;
	fma.rn.f32 	%f454, %f450, %f452, 0f00000000;
	and.b32  	%r347, %r346, 1;
	fma.rn.f32 	%f488, %f486, %f482, 0fC09DE9E6;
	fma.rn.f32 	%f489, %f485, %f487, 0f00000000;
	and.b32  	%r358, %r357, 1;
	fma.rn.f32 	%f522, %f520, %f516, 0fC09DE9E6;
	fma.rn.f32 	%f523, %f519, %f521, 0f00000000;
	and.b32  	%r365, %r364, 1;
	fma.rn.f32 	%f557, %f555, %f551, 0fC09DE9E6;
	fma.rn.f32 	%f558, %f554, %f556, 0f00000000;
	and.b32  	%r376, %r375, 1;
	fma.rn.f32 	%f591, %f589, %f585, 0fC09DE9E6;
	fma.rn.f32 	%f592, %f588, %f590, 0f00000000;
	and.b32  	%r383, %r382, 1;
	fma.rn.f32 	%f626, %f624, %f620, 0fC09DE9E6;
	fma.rn.f32 	%f627, %f623, %f625, 0f00000000;
	and.b32  	%r394, %r393, 1;
	fma.rn.f32 	%f660, %f658, %f654, 0fC09DE9E6;
	fma.rn.f32 	%f661, %f657, %f659, 0f00000000;
	and.b32  	%r401, %r400, 1;
	fma.rn.f32 	%f695, %f693, %f689, 0fC09DE9E6;
	fma.rn.f32 	%f696, %f692, %f694, 0f00000000;
	and.b32  	%r412, %r411, 1;
	fma.rn.f32 	%f729, %f727, %f723, 0fC09DE9E6;
	fma.rn.f32 	%f730, %f726, %f728, 0f00000000;
	and.b32  	%r419, %r418, 1;
	fma.rn.f32 	%f764, %f762, %f758, 0fC09DE9E6;
	fma.rn.f32 	%f765, %f761, %f763, 0f00000000;
	and.b32  	%r430, %r429, 1;
	fma.rn.f32 	%f798, %f796, %f792, 0fC09DE9E6;
	fma.rn.f32 	%f799, %f795, %f797, 0f00000000;
	and.b32  	%r437, %r436, 1;
	fma.rn.f32 	%f849, %f847, %f841, 0f3F800000;
	fma.rn.f32 	%f850, %f840, 0f40490FDB, %f848;
	setp.eq.b32 	%p126, %r454, 1;
	fma.rn.f32 	%f901, %f899, %f893, 0f3F800000;
	fma.rn.f32 	%f902, %f892, 0f40490FDB, %f900;
	setp.eq.b32 	%p146, %r483, 1;
	fma.rn.f32 	%f955, %f953, %f947, 0f3F800000;
	fma.rn.f32 	%f956, %f946, 0f40490FDB, %f954;
	setp.eq.b32 	%p166, %r506, 1;
	fma.rn.f32 	%f1007, %f1005, %f999, 0f3F800000;
	fma.rn.f32 	%f1008, %f998, 0f40490FDB, %f1006;
	setp.eq.b32 	%p186, %r538, 1;
	fma.rn.f32 	%f1058, %f1056, %f1052, 0fC09DE9E6;
	fma.rn.f32 	%f1059, %f1055, %f1057, 0f00000000;
	and.b32  	%r558, %r557, 1;
	abs.f32 	%f1093, %f1374;
	setp.gtu.f32 	%p223, %f1093, 0f7F800000;
	@%p223 bra 	$L__BB0_124;
// %bb.123:
	mov.b32 	%r568, %f164;
	and.b32  	%r569, %r568, -2147483648;
	mov.b32 	%r570, %f1374;
	or.b32  	%r571, %r569, %r570;
	mov.b32 	%f1374, %r571;
$L__BB0_124:                            // %__nv_fmodf.exit1785
	shl.b32 	%r226, %r1, 2;
	and.b32  	%r229, %r228, 8;
	or.b32  	%r236, %r234, 64;
	fma.rn.f32 	%f283, %f281, %f275, 0f3F800000;
	fma.rn.f32 	%f284, %f274, 0f40490FDB, %f282;
	setp.eq.b32 	%p18, %r304, 1;
	fma.rn.f32 	%f317, %f315, %f309, 0f3F800000;
	fma.rn.f32 	%f318, %f308, 0f40490FDB, %f316;
	setp.eq.b32 	%p24, %r311, 1;
	fma.rn.f32 	%f352, %f350, %f344, 0f3F800000;
	fma.rn.f32 	%f353, %f343, 0f40490FDB, %f351;
	setp.eq.b32 	%p30, %r322, 1;
	fma.rn.f32 	%f386, %f384, %f378, 0f3F800000;
	fma.rn.f32 	%f387, %f377, 0f40490FDB, %f385;
	setp.eq.b32 	%p36, %r329, 1;
	fma.rn.f32 	%f421, %f419, %f413, 0f3F800000;
	fma.rn.f32 	%f422, %f412, 0f40490FDB, %f420;
	setp.eq.b32 	%p42, %r340, 1;
	fma.rn.f32 	%f455, %f453, %f447, 0f3F800000;
	fma.rn.f32 	%f456, %f446, 0f40490FDB, %f454;
	setp.eq.b32 	%p48, %r347, 1;
	fma.rn.f32 	%f490, %f488, %f482, 0f3F800000;
	fma.rn.f32 	%f491, %f481, 0f40490FDB, %f489;
	setp.eq.b32 	%p54, %r358, 1;
	fma.rn.f32 	%f524, %f522, %f516, 0f3F800000;
	fma.rn.f32 	%f525, %f515, 0f40490FDB, %f523;
	setp.eq.b32 	%p60, %r365, 1;
	fma.rn.f32 	%f559, %f557, %f551, 0f3F800000;
	fma.rn.f32 	%f560, %f550, 0f40490FDB, %f558;
	setp.eq.b32 	%p66, %r376, 1;
	fma.rn.f32 	%f593, %f591, %f585, 0f3F800000;
	fma.rn.f32 	%f594, %f584, 0f40490FDB, %f592;
	setp.eq.b32 	%p72, %r383, 1;
	fma.rn.f32 	%f628, %f626, %f620, 0f3F800000;
	fma.rn.f32 	%f629, %f619, 0f40490FDB, %f627;
	setp.eq.b32 	%p78, %r394, 1;
	fma.rn.f32 	%f662, %f660, %f654, 0f3F800000;
	fma.rn.f32 	%f663, %f653, 0f40490FDB, %f661;
	setp.eq.b32 	%p84, %r401, 1;
	fma.rn.f32 	%f697, %f695, %f689, 0f3F800000;
	fma.rn.f32 	%f698, %f688, 0f40490FDB, %f696;
	setp.eq.b32 	%p90, %r412, 1;
	fma.rn.f32 	%f731, %f729, %f723, 0f3F800000;
	fma.rn.f32 	%f732, %f722, 0f40490FDB, %f730;
	setp.eq.b32 	%p96, %r419, 1;
	fma.rn.f32 	%f766, %f764, %f758, 0f3F800000;
	fma.rn.f32 	%f767, %f757, 0f40490FDB, %f765;
	setp.eq.b32 	%p102, %r430, 1;
	fma.rn.f32 	%f800, %f798, %f792, 0f3F800000;
	fma.rn.f32 	%f801, %f791, 0f40490FDB, %f799;
	setp.eq.b32 	%p108, %r437, 1;
	selp.f32 	%f851, %f849, %f850, %p126;
	and.b32  	%r455, %r453, 2;
	selp.f32 	%f903, %f901, %f902, %p146;
	and.b32  	%r484, %r482, 2;
	selp.f32 	%f957, %f955, %f956, %p166;
	and.b32  	%r507, %r505, 2;
	selp.f32 	%f1009, %f1007, %f1008, %p186;
	and.b32  	%r539, %r537, 2;
	fma.rn.f32 	%f1060, %f1058, %f1052, 0f3F800000;
	fma.rn.f32 	%f1061, %f1051, 0f40490FDB, %f1059;
	setp.eq.b32 	%p206, %r558, 1;
	add.f32 	%f1094, %f1374, %f1374;
	mov.b32 	%r578, %f1094;
	and.b32  	%r579, %r578, -2147483648;
	or.b32  	%r580, %r579, 1056964608;
	mov.b32 	%f1095, %r580;
	add.f32 	%f1096, %f1094, %f1095;
	cvt.rzi.f32.f32 	%f1097, %f1096;
	abs.f32 	%f1098, %f1094;
	setp.gt.f32 	%p224, %f1098, 0f4B000000;
	selp.f32 	%f1099, %f1094, %f1097, %p224;
	cvt.rzi.f32.f32 	%f1100, %f1094;
	setp.lt.f32 	%p225, %f1098, 0f3F000000;
	selp.f32 	%f1101, %f1100, %f1099, %p225;
	cvt.rzi.s32.f32 	%r581, %f1101;
	fma.rn.f32 	%f1102, %f1101, 0fBF000000, %f1374;
	mul.f32 	%f1103, %f1102, %f1102;
	fma.rn.f32 	%f1104, %f1103, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1105, %f1103, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1106, %f1104, %f1103, 0fC0A55DF6;
	fma.rn.f32 	%f1107, %f1105, %f1103, 0f4081E0CF;
	fma.rn.f32 	%f1108, %f1103, %f1102, 0f00000000;
	fma.rn.f32 	%f1109, %f1107, %f1103, 0fC09DE9E6;
	fma.rn.f32 	%f1110, %f1106, %f1108, 0f00000000;
	fma.rn.f32 	%f1111, %f1109, %f1103, 0f3F800000;
	fma.rn.f32 	%f1112, %f1102, 0f40490FDB, %f1110;
	and.b32  	%r582, %r581, 1;
	setp.eq.b32 	%p226, %r582, 1;
	mov.f32 	%f1126, 0f41800000;
	div.approx.f32 	%f181, %f143, %f1126;
	abs.f32 	%f1378, %f181;
	setp.lt.f32 	%p231, %f1378, 0f40000000;
	@%p231 bra 	$L__BB0_136;
// %bb.125:
	setp.gtu.f32 	%p232, %f1378, 0f4B800000;
	@%p232 bra 	$L__BB0_132;
	bra.uni 	$L__BB0_126;
$L__BB0_132:
	mov.b32 	%r86, %f1378;
	and.b32  	%r586, %r86, 8388607;
	or.b32  	%r16386, %r586, 1065353216;
	mov.b32 	%f1377, %r16386;
	add.s32 	%r587, %r86, -1073741824;
	and.b32  	%r16387, %r587, -8388608;
	setp.eq.s32 	%p238, %r16387, 0;
	@%p238 bra 	$L__BB0_135;
// %bb.133:                             // %__nv_fmaf_rn.exit4.i.i.i1810.preheader
	mov.f32 	%f1136, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1135,%f1136;
	// end inline asm
$L__BB0_134:                            // %__nv_fmaf_rn.exit4.i.i.i1810
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r588, %r16387, 192937984;
	add.s32 	%r589, %r16386, %r588;
	mov.b32 	%f1137, %r589;
	mul.f32 	%f1138, %f1135, %f1137;
	sub.f32 	%f1139, %f1137, %f1138;
	fma.rn.f32 	%f1140, %f1139, %f1135, %f1138;
	sub.f32 	%f1141, %f1137, %f1140;
	fma.rz.f32 	%f1142, %f1141, %f1135, %f1140;
	cvt.rzi.f32.f32 	%f1143, %f1142;
	sub.f32 	%f1377, %f1137, %f1143;
	sub.s32 	%r16387, %r16387, %r588;
	mov.b32 	%r16386, %f1377;
	setp.ne.s32 	%p239, %r16387, 0;
	setp.ne.s32 	%p240, %r16386, 0;
	and.pred  	%p241, %p239, %p240;
	@%p241 bra 	$L__BB0_134;
$L__BB0_135:                            // %__internal_fmodf_slowpath_mod.exit.i.i1812
	setp.gt.u32 	%p242, %r86, 2139095039;
	selp.f32 	%f1144, 0f7FFFFFFF, 0f4B800000, %p242;
	mul.f32 	%f1145, %f1377, 0f34000000;
	mul.f32 	%f1378, %f1144, %f1145;
	bra.uni 	$L__BB0_136;
$L__BB0_126:                            // %__nv_fast_fdividef.exit.i.i.i1789
	div.approx.f32 	%f1128, %f1378, %f257;
	cvt.rzi.f32.f32 	%f1376, %f1128;
	fma.rn.f32 	%f184, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r85, %f184;
	setp.lt.u32 	%p233, %r85, 1073741824;
	@%p233 bra 	$L__BB0_131;
// %bb.127:
	setp.lt.u32 	%p234, %r85, -2147483647;
	@%p234 bra 	$L__BB0_129;
// %bb.128:
	add.f32 	%f1133, %f1376, 0fBF800000;
	setp.lt.f32 	%p237, %f184, 0fC0000000;
	add.f32 	%f1134, %f1133, 0fBF800000;
	selp.f32 	%f1376, %f1134, %f1133, %p237;
	bra.uni 	$L__BB0_131;
$L__BB0_129:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p235, %f184, 0f40800000;
	@%p235 bra 	$L__BB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i1793
	add.f32 	%f1129, %f1376, 0f3F800000;
	fma.rn.f32 	%f1131, %f257, 0fC0400000, %f184;
	setp.ge.f32 	%p236, %f1131, 0f00000000;
	add.f32 	%f1132, %f1129, 0f3F800000;
	selp.f32 	%f1376, %f1132, %f1129, %p236;
$L__BB0_131:                            // %__internal_fmodf_fastpath_quot.exit.i.i1796
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
$L__BB0_136:                            // %__internal_fmodf_kernel.exit.i1815
	and.b32  	%r227, %r226, 4;
	shl.b32 	%r231, %r4, 5;
	or.b32  	%r281, %r234, %r229;
	or.b32  	%r286, %r236, %r229;
	selp.f32 	%f285, %f283, %f284, %p18;
	and.b32  	%r305, %r303, 2;
	mov.f32 	%f286, 0f00000000;
	selp.f32 	%f319, %f317, %f318, %p24;
	and.b32  	%r312, %r310, 2;
	selp.f32 	%f354, %f352, %f353, %p30;
	and.b32  	%r323, %r321, 2;
	selp.f32 	%f388, %f386, %f387, %p36;
	and.b32  	%r330, %r328, 2;
	selp.f32 	%f423, %f421, %f422, %p42;
	and.b32  	%r341, %r339, 2;
	selp.f32 	%f457, %f455, %f456, %p48;
	and.b32  	%r348, %r346, 2;
	selp.f32 	%f492, %f490, %f491, %p54;
	and.b32  	%r359, %r357, 2;
	selp.f32 	%f526, %f524, %f525, %p60;
	and.b32  	%r366, %r364, 2;
	selp.f32 	%f561, %f559, %f560, %p66;
	and.b32  	%r377, %r375, 2;
	selp.f32 	%f595, %f593, %f594, %p72;
	and.b32  	%r384, %r382, 2;
	selp.f32 	%f630, %f628, %f629, %p78;
	and.b32  	%r395, %r393, 2;
	selp.f32 	%f664, %f662, %f663, %p84;
	and.b32  	%r402, %r400, 2;
	selp.f32 	%f699, %f697, %f698, %p90;
	and.b32  	%r413, %r411, 2;
	selp.f32 	%f733, %f731, %f732, %p96;
	and.b32  	%r420, %r418, 2;
	selp.f32 	%f768, %f766, %f767, %p102;
	and.b32  	%r431, %r429, 2;
	selp.f32 	%f802, %f800, %f801, %p108;
	and.b32  	%r438, %r436, 2;
	setp.eq.s32 	%p127, %r455, 0;
	neg.f32 	%f853, %f851;
	add.s32 	%r456, %r453, 1;
	cvt.rzi.f32.f32 	%f858, %f1354;
	setp.eq.s32 	%p147, %r484, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r485, %r482, 1;
	cvt.rzi.f32.f32 	%f910, %f1358;
	setp.eq.s32 	%p167, %r507, 0;
	neg.f32 	%f959, %f957;
	add.s32 	%r508, %r505, 1;
	cvt.rzi.f32.f32 	%f964, %f1362;
	setp.eq.s32 	%p187, %r539, 0;
	neg.f32 	%f1011, %f1009;
	add.s32 	%r540, %r537, 1;
	cvt.rzi.f32.f32 	%f1016, %f1366;
	selp.f32 	%f1062, %f1060, %f1061, %p206;
	and.b32  	%r559, %r557, 2;
	selp.f32 	%f1113, %f1111, %f1112, %p226;
	and.b32  	%r583, %r581, 2;
	abs.f32 	%f1146, %f1378;
	setp.gtu.f32 	%p243, %f1146, 0f7F800000;
	@%p243 bra 	$L__BB0_138;
// %bb.137:
	mov.b32 	%r590, %f181;
	and.b32  	%r591, %r590, -2147483648;
	mov.b32 	%r592, %f1378;
	or.b32  	%r593, %r591, %r592;
	mov.b32 	%f1378, %r593;
$L__BB0_138:                            // %__nv_fmodf.exit1816
	and.b32  	%r232, %r231, 1920;
	or.b32  	%r282, %r281, %r227;
	or.b32  	%r287, %r286, %r227;
	setp.eq.s32 	%p19, %r305, 0;
	sub.f32 	%f287, %f286, %f285;
	setp.eq.s32 	%p25, %r312, 0;
	sub.f32 	%f321, %f286, %f319;
	setp.eq.s32 	%p31, %r323, 0;
	sub.f32 	%f356, %f286, %f354;
	setp.eq.s32 	%p37, %r330, 0;
	sub.f32 	%f390, %f286, %f388;
	setp.eq.s32 	%p43, %r341, 0;
	sub.f32 	%f425, %f286, %f423;
	setp.eq.s32 	%p49, %r348, 0;
	sub.f32 	%f459, %f286, %f457;
	setp.eq.s32 	%p55, %r359, 0;
	sub.f32 	%f494, %f286, %f492;
	setp.eq.s32 	%p61, %r366, 0;
	sub.f32 	%f528, %f286, %f526;
	setp.eq.s32 	%p67, %r377, 0;
	sub.f32 	%f563, %f286, %f561;
	setp.eq.s32 	%p73, %r384, 0;
	sub.f32 	%f597, %f286, %f595;
	setp.eq.s32 	%p79, %r395, 0;
	sub.f32 	%f632, %f286, %f630;
	setp.eq.s32 	%p85, %r402, 0;
	sub.f32 	%f666, %f286, %f664;
	setp.eq.s32 	%p91, %r413, 0;
	sub.f32 	%f701, %f286, %f699;
	setp.eq.s32 	%p97, %r420, 0;
	sub.f32 	%f735, %f286, %f733;
	setp.eq.s32 	%p103, %r431, 0;
	sub.f32 	%f770, %f286, %f768;
	setp.eq.s32 	%p109, %r438, 0;
	sub.f32 	%f804, %f286, %f802;
	selp.f32 	%f852, %f850, %f849, %p126;
	selp.f32 	%f854, %f851, %f853, %p127;
	and.b32  	%r457, %r456, 2;
	setp.eq.f32 	%p129, %f858, %f1354;
	mul.f32 	%f859, %f1354, 0f00000000;
	selp.f32 	%f904, %f902, %f901, %p146;
	selp.f32 	%f906, %f903, %f905, %p147;
	and.b32  	%r486, %r485, 2;
	setp.eq.f32 	%p149, %f910, %f1358;
	mul.f32 	%f911, %f1358, 0f00000000;
	selp.f32 	%f958, %f956, %f955, %p166;
	selp.f32 	%f960, %f957, %f959, %p167;
	and.b32  	%r509, %r508, 2;
	setp.eq.f32 	%p169, %f964, %f1362;
	mul.f32 	%f965, %f1362, 0f00000000;
	selp.f32 	%f1010, %f1008, %f1007, %p186;
	selp.f32 	%f1012, %f1009, %f1011, %p187;
	and.b32  	%r541, %r540, 2;
	setp.eq.f32 	%p189, %f1016, %f1366;
	mul.f32 	%f1017, %f1366, 0f00000000;
	setp.eq.s32 	%p207, %r559, 0;
	neg.f32 	%f1064, %f1062;
	add.s32 	%r560, %r557, 1;
	cvt.rzi.f32.f32 	%f1069, %f1370;
	setp.eq.s32 	%p227, %r583, 0;
	neg.f32 	%f1115, %f1113;
	add.s32 	%r584, %r581, 1;
	cvt.rzi.f32.f32 	%f1120, %f1374;
	add.f32 	%f1147, %f1378, %f1378;
	mov.b32 	%r594, %f1147;
	and.b32  	%r595, %r594, -2147483648;
	or.b32  	%r596, %r595, 1056964608;
	mov.b32 	%f1148, %r596;
	add.f32 	%f1149, %f1147, %f1148;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	abs.f32 	%f1151, %f1147;
	setp.gt.f32 	%p244, %f1151, 0f4B000000;
	selp.f32 	%f1152, %f1147, %f1150, %p244;
	cvt.rzi.f32.f32 	%f1153, %f1147;
	setp.lt.f32 	%p245, %f1151, 0f3F000000;
	selp.f32 	%f1154, %f1153, %f1152, %p245;
	cvt.rzi.s32.f32 	%r597, %f1154;
	fma.rn.f32 	%f1155, %f1154, 0fBF000000, %f1378;
	mul.f32 	%f1156, %f1155, %f1155;
	fma.rn.f32 	%f1157, %f1156, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1158, %f1156, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1159, %f1157, %f1156, 0fC0A55DF6;
	fma.rn.f32 	%f1160, %f1158, %f1156, 0f4081E0CF;
	fma.rn.f32 	%f1161, %f1156, %f1155, 0f00000000;
	fma.rn.f32 	%f1162, %f1160, %f1156, 0fC09DE9E6;
	fma.rn.f32 	%f1163, %f1159, %f1161, 0f00000000;
	fma.rn.f32 	%f1164, %f1162, %f1156, 0f3F800000;
	fma.rn.f32 	%f1165, %f1155, 0f40490FDB, %f1163;
	and.b32  	%r598, %r597, 1;
	setp.eq.b32 	%p246, %r598, 1;
	selp.f32 	%f1166, %f1164, %f1165, %p246;
	selp.f32 	%f1167, %f1165, %f1164, %p246;
	and.b32  	%r599, %r597, 2;
	setp.eq.s32 	%p247, %r599, 0;
	neg.f32 	%f1168, %f1166;
	selp.f32 	%f1169, %f1166, %f1168, %p247;
	add.s32 	%r600, %r597, 1;
	and.b32  	%r601, %r600, 2;
	cvt.rzi.f32.f32 	%f1173, %f1378;
	setp.eq.f32 	%p249, %f1173, %f1378;
	mul.f32 	%f1174, %f1378, 0f00000000;
	div.approx.f32 	%f200, %f163, %f1126;
	abs.f32 	%f1382, %f200;
	setp.lt.f32 	%p251, %f1382, 0f40000000;
	@%p251 bra 	$L__BB0_150;
// %bb.139:
	setp.gtu.f32 	%p252, %f1382, 0f4B800000;
	@%p252 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_140;
$L__BB0_146:
	mov.b32 	%r94, %f1382;
	and.b32  	%r602, %r94, 8388607;
	or.b32  	%r16388, %r602, 1065353216;
	mov.b32 	%f1381, %r16388;
	add.s32 	%r603, %r94, -1073741824;
	and.b32  	%r16389, %r603, -8388608;
	setp.eq.s32 	%p258, %r16389, 0;
	@%p258 bra 	$L__BB0_149;
// %bb.147:                             // %__nv_fmaf_rn.exit4.i.i.i1841.preheader
	mov.f32 	%f1187, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1186,%f1187;
	// end inline asm
$L__BB0_148:                            // %__nv_fmaf_rn.exit4.i.i.i1841
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r604, %r16389, 192937984;
	add.s32 	%r605, %r16388, %r604;
	mov.b32 	%f1188, %r605;
	mul.f32 	%f1189, %f1186, %f1188;
	sub.f32 	%f1190, %f1188, %f1189;
	fma.rn.f32 	%f1191, %f1190, %f1186, %f1189;
	sub.f32 	%f1192, %f1188, %f1191;
	fma.rz.f32 	%f1193, %f1192, %f1186, %f1191;
	cvt.rzi.f32.f32 	%f1194, %f1193;
	sub.f32 	%f1381, %f1188, %f1194;
	sub.s32 	%r16389, %r16389, %r604;
	mov.b32 	%r16388, %f1381;
	setp.ne.s32 	%p259, %r16389, 0;
	setp.ne.s32 	%p260, %r16388, 0;
	and.pred  	%p261, %p259, %p260;
	@%p261 bra 	$L__BB0_148;
$L__BB0_149:                            // %__internal_fmodf_slowpath_mod.exit.i.i1843
	setp.gt.u32 	%p262, %r94, 2139095039;
	selp.f32 	%f1195, 0f7FFFFFFF, 0f4B800000, %p262;
	mul.f32 	%f1196, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1195, %f1196;
	bra.uni 	$L__BB0_150;
$L__BB0_140:                            // %__nv_fast_fdividef.exit.i.i.i1820
	div.approx.f32 	%f1179, %f1382, %f257;
	cvt.rzi.f32.f32 	%f1380, %f1179;
	fma.rn.f32 	%f203, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r93, %f203;
	setp.lt.u32 	%p253, %r93, 1073741824;
	@%p253 bra 	$L__BB0_145;
// %bb.141:
	setp.lt.u32 	%p254, %r93, -2147483647;
	@%p254 bra 	$L__BB0_143;
// %bb.142:
	add.f32 	%f1184, %f1380, 0fBF800000;
	setp.lt.f32 	%p257, %f203, 0fC0000000;
	add.f32 	%f1185, %f1184, 0fBF800000;
	selp.f32 	%f1380, %f1185, %f1184, %p257;
	bra.uni 	$L__BB0_145;
$L__BB0_143:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p255, %f203, 0f40800000;
	@%p255 bra 	$L__BB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i1824
	add.f32 	%f1180, %f1380, 0f3F800000;
	fma.rn.f32 	%f1182, %f257, 0fC0400000, %f203;
	setp.ge.f32 	%p256, %f1182, 0f00000000;
	add.f32 	%f1183, %f1180, 0f3F800000;
	selp.f32 	%f1380, %f1183, %f1180, %p256;
$L__BB0_145:                            // %__internal_fmodf_fastpath_quot.exit.i.i1827
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
$L__BB0_150:                            // %__internal_fmodf_kernel.exit.i1846
	and.b32  	%r233, %r226, 32;
	or.b32  	%r283, %r282, %r232;
	or.b32  	%r288, %r287, %r232;
	selp.f32 	%f288, %f285, %f287, %p19;
	selp.f32 	%f322, %f319, %f321, %p25;
	selp.f32 	%f357, %f354, %f356, %p31;
	selp.f32 	%f391, %f388, %f390, %p37;
	selp.f32 	%f426, %f423, %f425, %p43;
	selp.f32 	%f460, %f457, %f459, %p49;
	selp.f32 	%f495, %f492, %f494, %p55;
	selp.f32 	%f529, %f526, %f528, %p61;
	selp.f32 	%f564, %f561, %f563, %p67;
	selp.f32 	%f598, %f595, %f597, %p73;
	selp.f32 	%f633, %f630, %f632, %p79;
	selp.f32 	%f667, %f664, %f666, %p85;
	selp.f32 	%f702, %f699, %f701, %p91;
	selp.f32 	%f736, %f733, %f735, %p97;
	selp.f32 	%f771, %f768, %f770, %p103;
	selp.f32 	%f805, %f802, %f804, %p109;
	setp.eq.s32 	%p128, %r457, 0;
	sub.f32 	%f856, %f286, %f852;
	selp.f32 	%f88, %f859, %f854, %p129;
	abs.f32 	%f860, %f1354;
	setp.eq.s32 	%p148, %r486, 0;
	sub.f32 	%f908, %f286, %f904;
	selp.f32 	%f912, %f911, %f906, %p149;
	abs.f32 	%f913, %f1358;
	setp.eq.s32 	%p168, %r509, 0;
	sub.f32 	%f962, %f286, %f958;
	selp.f32 	%f124, %f965, %f960, %p169;
	abs.f32 	%f966, %f1362;
	setp.eq.s32 	%p188, %r541, 0;
	sub.f32 	%f1014, %f286, %f1010;
	selp.f32 	%f1018, %f1017, %f1012, %p189;
	abs.f32 	%f1019, %f1366;
	selp.f32 	%f1063, %f1061, %f1060, %p206;
	selp.f32 	%f1065, %f1062, %f1064, %p207;
	and.b32  	%r561, %r560, 2;
	setp.eq.f32 	%p209, %f1069, %f1370;
	mul.f32 	%f1070, %f1370, 0f00000000;
	selp.f32 	%f1114, %f1112, %f1111, %p226;
	selp.f32 	%f1116, %f1113, %f1115, %p227;
	and.b32  	%r585, %r584, 2;
	setp.eq.f32 	%p229, %f1120, %f1374;
	mul.f32 	%f1121, %f1374, 0f00000000;
	setp.eq.s32 	%p248, %r601, 0;
	sub.f32 	%f1171, %f286, %f1167;
	selp.f32 	%f198, %f1174, %f1169, %p249;
	abs.f32 	%f1175, %f1378;
	and.b32  	%r230, %r1, 16;
	abs.f32 	%f1197, %f1382;
	setp.gtu.f32 	%p263, %f1197, 0f7F800000;
	@%p263 bra 	$L__BB0_152;
// %bb.151:
	mov.b32 	%r606, %f200;
	and.b32  	%r607, %r606, -2147483648;
	mov.b32 	%r608, %f1382;
	or.b32  	%r609, %r607, %r608;
	mov.b32 	%f1382, %r609;
$L__BB0_152:                            // %__nv_fmodf.exit1847
	or.b32  	%r284, %r283, %r233;
	or.b32  	%r289, %r288, %r233;
	mul.f32 	%f254, %f288, %f288;
	mul.f32 	%f4, %f322, %f322;
	mul.f32 	%f8, %f357, %f357;
	mul.f32 	%f13, %f391, %f391;
	mul.f32 	%f17, %f426, %f426;
	mul.f32 	%f22, %f460, %f460;
	mul.f32 	%f26, %f495, %f495;
	mul.f32 	%f31, %f529, %f529;
	mul.f32 	%f35, %f564, %f564;
	mul.f32 	%f40, %f598, %f598;
	mul.f32 	%f44, %f633, %f633;
	mul.f32 	%f49, %f667, %f667;
	mul.f32 	%f53, %f702, %f702;
	mul.f32 	%f58, %f736, %f736;
	mul.f32 	%f62, %f771, %f771;
	mul.f32 	%f67, %f805, %f805;
	selp.f32 	%f857, %f852, %f856, %p128;
	setp.gt.f32 	%p130, %f860, 0f4B800000;
	add.f32 	%f861, %f88, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p148;
	setp.gt.f32 	%p150, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f963, %f958, %f962, %p168;
	setp.gt.f32 	%p170, %f966, 0f4B800000;
	add.f32 	%f967, %f124, 0f3F800000;
	selp.f32 	%f1015, %f1010, %f1014, %p188;
	setp.gt.f32 	%p190, %f1019, 0f4B800000;
	add.f32 	%f1020, %f1018, 0f3F800000;
	setp.eq.s32 	%p208, %r561, 0;
	sub.f32 	%f1067, %f286, %f1063;
	selp.f32 	%f161, %f1070, %f1065, %p209;
	abs.f32 	%f1071, %f1370;
	setp.eq.s32 	%p228, %r585, 0;
	sub.f32 	%f1118, %f286, %f1114;
	selp.f32 	%f1122, %f1121, %f1116, %p229;
	abs.f32 	%f1123, %f1374;
	selp.f32 	%f1172, %f1167, %f1171, %p248;
	setp.gt.f32 	%p250, %f1175, 0f4B800000;
	add.f32 	%f1176, %f198, 0f3F800000;
	add.f32 	%f1198, %f1382, %f1382;
	mov.b32 	%r622, %f1198;
	and.b32  	%r623, %r622, -2147483648;
	or.b32  	%r624, %r623, 1056964608;
	mov.b32 	%f1199, %r624;
	add.f32 	%f1200, %f1198, %f1199;
	cvt.rzi.f32.f32 	%f1201, %f1200;
	abs.f32 	%f1202, %f1198;
	setp.gt.f32 	%p264, %f1202, 0f4B000000;
	selp.f32 	%f1203, %f1198, %f1201, %p264;
	cvt.rzi.f32.f32 	%f1204, %f1198;
	setp.lt.f32 	%p265, %f1202, 0f3F000000;
	selp.f32 	%f1205, %f1204, %f1203, %p265;
	cvt.rzi.s32.f32 	%r625, %f1205;
	fma.rn.f32 	%f1206, %f1205, 0fBF000000, %f1382;
	mul.f32 	%f1207, %f1206, %f1206;
	fma.rn.f32 	%f1208, %f1207, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1209, %f1207, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1210, %f1208, %f1207, 0fC0A55DF6;
	fma.rn.f32 	%f1211, %f1209, %f1207, 0f4081E0CF;
	fma.rn.f32 	%f1212, %f1207, %f1206, 0f00000000;
	fma.rn.f32 	%f1213, %f1211, %f1207, 0fC09DE9E6;
	fma.rn.f32 	%f1214, %f1210, %f1212, 0f00000000;
	fma.rn.f32 	%f1215, %f1213, %f1207, 0f3F800000;
	fma.rn.f32 	%f1216, %f1206, 0f40490FDB, %f1214;
	and.b32  	%r626, %r625, 1;
	setp.eq.b32 	%p266, %r626, 1;
	selp.f32 	%f1217, %f1215, %f1216, %p266;
	selp.f32 	%f1218, %f1216, %f1215, %p266;
	and.b32  	%r627, %r625, 2;
	setp.eq.s32 	%p267, %r627, 0;
	neg.f32 	%f1219, %f1217;
	selp.f32 	%f1220, %f1217, %f1219, %p267;
	add.s32 	%r628, %r625, 1;
	and.b32  	%r629, %r628, 2;
	setp.eq.s32 	%p268, %r629, 0;
	sub.f32 	%f1222, %f286, %f1218;
	selp.f32 	%f1223, %f1218, %f1222, %p268;
	cvt.rzi.f32.f32 	%f1224, %f1382;
	setp.eq.f32 	%p269, %f1224, %f1382;
	mul.f32 	%f1225, %f1382, 0f00000000;
	selp.f32 	%f1226, %f1225, %f1220, %p269;
	abs.f32 	%f1227, %f1382;
	setp.gt.f32 	%p270, %f1227, 0f4B800000;
	add.f32 	%f1228, %f1226, 0f3F800000;
	mul.lo.s32 	%r630, %r242, 2147483640;
	cvt.u16.u32 	%rs1, %r1;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	sub.s32 	%r631, %r630, %r230;
	mad.lo.s32 	%r632, %r245, 2147483616, %r631;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r633, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r634, %rs21;
	sub.s32 	%r635, %r632, %r634;
	shl.b32 	%r636, %r635, 1;
	cvt.rn.f32.s32 	%f1230, %r636;
	div.approx.f32 	%f217, %f1230, %f289;
	abs.f32 	%f1386, %f217;
	setp.lt.f32 	%p271, %f1386, 0f40000000;
	@%p271 bra 	$L__BB0_164;
// %bb.153:
	setp.gtu.f32 	%p272, %f1386, 0f4B800000;
	@%p272 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_154;
$L__BB0_160:
	mov.b32 	%r107, %f1386;
	and.b32  	%r637, %r107, 8388607;
	or.b32  	%r16390, %r637, 1065353216;
	mov.b32 	%f1385, %r16390;
	add.s32 	%r638, %r107, -1073741824;
	and.b32  	%r16391, %r638, -8388608;
	setp.eq.s32 	%p278, %r16391, 0;
	@%p278 bra 	$L__BB0_163;
// %bb.161:                             // %__nv_fmaf_rn.exit4.i.i.i1872.preheader
	mov.f32 	%f1241, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1240,%f1241;
	// end inline asm
$L__BB0_162:                            // %__nv_fmaf_rn.exit4.i.i.i1872
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r639, %r16391, 192937984;
	add.s32 	%r640, %r16390, %r639;
	mov.b32 	%f1242, %r640;
	mul.f32 	%f1243, %f1240, %f1242;
	sub.f32 	%f1244, %f1242, %f1243;
	fma.rn.f32 	%f1245, %f1244, %f1240, %f1243;
	sub.f32 	%f1246, %f1242, %f1245;
	fma.rz.f32 	%f1247, %f1246, %f1240, %f1245;
	cvt.rzi.f32.f32 	%f1248, %f1247;
	sub.f32 	%f1385, %f1242, %f1248;
	sub.s32 	%r16391, %r16391, %r639;
	mov.b32 	%r16390, %f1385;
	setp.ne.s32 	%p279, %r16391, 0;
	setp.ne.s32 	%p280, %r16390, 0;
	and.pred  	%p281, %p279, %p280;
	@%p281 bra 	$L__BB0_162;
$L__BB0_163:                            // %__internal_fmodf_slowpath_mod.exit.i.i1874
	setp.gt.u32 	%p282, %r107, 2139095039;
	selp.f32 	%f1249, 0f7FFFFFFF, 0f4B800000, %p282;
	mul.f32 	%f1250, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1249, %f1250;
	bra.uni 	$L__BB0_164;
$L__BB0_154:                            // %__nv_fast_fdividef.exit.i.i.i1851
	div.approx.f32 	%f1233, %f1386, %f257;
	cvt.rzi.f32.f32 	%f1384, %f1233;
	fma.rn.f32 	%f220, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r106, %f220;
	setp.lt.u32 	%p273, %r106, 1073741824;
	@%p273 bra 	$L__BB0_159;
// %bb.155:
	setp.lt.u32 	%p274, %r106, -2147483647;
	@%p274 bra 	$L__BB0_157;
// %bb.156:
	add.f32 	%f1238, %f1384, 0fBF800000;
	setp.lt.f32 	%p277, %f220, 0fC0000000;
	add.f32 	%f1239, %f1238, 0fBF800000;
	selp.f32 	%f1384, %f1239, %f1238, %p277;
	bra.uni 	$L__BB0_159;
$L__BB0_157:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p275, %f220, 0f40800000;
	@%p275 bra 	$L__BB0_159;
// %bb.158:                             // %__nv_fmaf_rn.exit.i.i.i1855
	add.f32 	%f1234, %f1384, 0f3F800000;
	fma.rn.f32 	%f1236, %f257, 0fC0400000, %f220;
	setp.ge.f32 	%p276, %f1236, 0f00000000;
	add.f32 	%f1237, %f1234, 0f3F800000;
	selp.f32 	%f1384, %f1237, %f1234, %p276;
$L__BB0_159:                            // %__internal_fmodf_fastpath_quot.exit.i.i1858
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
$L__BB0_164:                            // %__internal_fmodf_kernel.exit.i1877
	shr.u32 	%r285, %r284, 1;
	bfe.u32 	%r290, %r289, 1, 10;
	mul.f32 	%f292, %f254, 0f3B8B2FF9;
	mul.f32 	%f326, %f4, 0f3B8B2FF9;
	mul.f32 	%f361, %f8, 0f3B8B2FF9;
	mul.f32 	%f395, %f13, 0f3B8B2FF9;
	mul.f32 	%f430, %f17, 0f3B8B2FF9;
	mul.f32 	%f464, %f22, 0f3B8B2FF9;
	mul.f32 	%f499, %f26, 0f3B8B2FF9;
	mul.f32 	%f533, %f31, 0f3B8B2FF9;
	mul.f32 	%f568, %f35, 0f3B8B2FF9;
	mul.f32 	%f602, %f40, 0f3B8B2FF9;
	mul.f32 	%f637, %f44, 0f3B8B2FF9;
	mul.f32 	%f671, %f49, 0f3B8B2FF9;
	mul.f32 	%f706, %f53, 0f3B8B2FF9;
	mul.f32 	%f740, %f58, 0f3B8B2FF9;
	mul.f32 	%f775, %f62, 0f3B8B2FF9;
	mul.f32 	%f808, %f67, 0f3B8B2FF9;
	selp.f32 	%f89, %f861, %f857, %p130;
	selp.f32 	%f915, %f914, %f909, %p150;
	selp.f32 	%f125, %f967, %f963, %p170;
	selp.f32 	%f1021, %f1020, %f1015, %p190;
	selp.f32 	%f1068, %f1063, %f1067, %p208;
	setp.gt.f32 	%p210, %f1071, 0f4B800000;
	add.f32 	%f1072, %f161, 0f3F800000;
	selp.f32 	%f1119, %f1114, %f1118, %p228;
	setp.gt.f32 	%p230, %f1123, 0f4B800000;
	add.f32 	%f1124, %f1122, 0f3F800000;
	selp.f32 	%f199, %f1176, %f1172, %p250;
	selp.f32 	%f1229, %f1228, %f1223, %p270;
	sub.s32 	%r105, %r632, %r633;
	abs.f32 	%f1251, %f1386;
	setp.gtu.f32 	%p283, %f1251, 0f7F800000;
	@%p283 bra 	$L__BB0_166;
// %bb.165:
	mov.b32 	%r641, %f217;
	and.b32  	%r642, %r641, -2147483648;
	mov.b32 	%r643, %f1386;
	or.b32  	%r644, %r642, %r643;
	mov.b32 	%f1386, %r644;
$L__BB0_166:                            // %__nv_fmodf.exit1878
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd48, %r285, 4;
	mul.wide.u32 	%rd50, %r290, 4;
	mul.f32 	%f3, %f292, %f1336;
	mul.f32 	%f327, %f326, %f1337;
	mul.f32 	%f12, %f361, %f1338;
	mul.f32 	%f396, %f395, %f1339;
	mul.f32 	%f21, %f430, %f1340;
	mul.f32 	%f465, %f464, %f1341;
	mul.f32 	%f30, %f499, %f1342;
	mul.f32 	%f534, %f533, %f1343;
	mul.f32 	%f39, %f568, %f1344;
	mul.f32 	%f603, %f602, %f1345;
	mul.f32 	%f48, %f637, %f1346;
	mul.f32 	%f672, %f671, %f1347;
	mul.f32 	%f57, %f706, %f1348;
	mul.f32 	%f741, %f740, %f1349;
	mul.f32 	%f66, %f775, %f1350;
	mul.f32 	%f809, %f808, %f1351;
	mov.b32 	%r469, %f915;
	mov.b32 	%r468, %f89;
	mov.b32 	%r475, %f912;
	mov.b32 	%r474, %f88;
	mov.b32 	%r524, %f1021;
	mov.b32 	%r523, %f125;
	mov.b32 	%r530, %f1018;
	mov.b32 	%r529, %f124;
	selp.f32 	%f162, %f1072, %f1068, %p210;
	selp.f32 	%f1125, %f1124, %f1119, %p230;
	mov.b32 	%r612, %f1229;
	mov.b32 	%r611, %f199;
	mov.b32 	%r618, %f1226;
	mov.b32 	%r617, %f198;
	add.f32 	%f1252, %f1386, %f1386;
	mov.b32 	%r645, %f1252;
	and.b32  	%r646, %r645, -2147483648;
	or.b32  	%r647, %r646, 1056964608;
	mov.b32 	%f1253, %r647;
	add.f32 	%f1254, %f1252, %f1253;
	cvt.rzi.f32.f32 	%f1255, %f1254;
	abs.f32 	%f1256, %f1252;
	setp.gt.f32 	%p284, %f1256, 0f4B000000;
	selp.f32 	%f1257, %f1252, %f1255, %p284;
	cvt.rzi.f32.f32 	%f1258, %f1252;
	setp.lt.f32 	%p285, %f1256, 0f3F000000;
	selp.f32 	%f1259, %f1258, %f1257, %p285;
	cvt.rzi.s32.f32 	%r648, %f1259;
	fma.rn.f32 	%f1260, %f1259, 0fBF000000, %f1386;
	mul.f32 	%f1261, %f1260, %f1260;
	fma.rn.f32 	%f1262, %f1261, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1263, %f1261, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1264, %f1262, %f1261, 0fC0A55DF6;
	fma.rn.f32 	%f1265, %f1263, %f1261, 0f4081E0CF;
	fma.rn.f32 	%f1266, %f1261, %f1260, 0f00000000;
	fma.rn.f32 	%f1267, %f1265, %f1261, 0fC09DE9E6;
	fma.rn.f32 	%f1268, %f1264, %f1266, 0f00000000;
	fma.rn.f32 	%f1269, %f1267, %f1261, 0f3F800000;
	fma.rn.f32 	%f1270, %f1260, 0f40490FDB, %f1268;
	and.b32  	%r649, %r648, 1;
	setp.eq.b32 	%p286, %r649, 1;
	selp.f32 	%f1271, %f1269, %f1270, %p286;
	selp.f32 	%f1272, %f1270, %f1269, %p286;
	and.b32  	%r650, %r648, 2;
	setp.eq.s32 	%p287, %r650, 0;
	neg.f32 	%f1273, %f1271;
	selp.f32 	%f1274, %f1271, %f1273, %p287;
	add.s32 	%r651, %r648, 1;
	and.b32  	%r652, %r651, 2;
	setp.eq.s32 	%p288, %r652, 0;
	sub.f32 	%f1276, %f286, %f1272;
	selp.f32 	%f1277, %f1272, %f1276, %p288;
	cvt.rzi.f32.f32 	%f1278, %f1386;
	setp.eq.f32 	%p289, %f1278, %f1386;
	mul.f32 	%f1279, %f1386, 0f00000000;
	selp.f32 	%f234, %f1279, %f1274, %p289;
	abs.f32 	%f1280, %f1386;
	setp.gt.f32 	%p290, %f1280, 0f4B800000;
	add.f32 	%f1281, %f234, 0f3F800000;
	shl.b32 	%r653, %r105, 1;
	cvt.rn.f32.s32 	%f1282, %r653;
	div.approx.f32 	%f236, %f1282, %f289;
	abs.f32 	%f1390, %f236;
	setp.lt.f32 	%p291, %f1390, 0f40000000;
	@%p291 bra 	$L__BB0_178;
// %bb.167:
	setp.gtu.f32 	%p292, %f1390, 0f4B800000;
	@%p292 bra 	$L__BB0_174;
	bra.uni 	$L__BB0_168;
$L__BB0_174:
	mov.b32 	%r115, %f1390;
	and.b32  	%r654, %r115, 8388607;
	or.b32  	%r16392, %r654, 1065353216;
	mov.b32 	%f1389, %r16392;
	add.s32 	%r655, %r115, -1073741824;
	and.b32  	%r16393, %r655, -8388608;
	setp.eq.s32 	%p298, %r16393, 0;
	@%p298 bra 	$L__BB0_177;
// %bb.175:                             // %__nv_fmaf_rn.exit4.i.i.i1903.preheader
	mov.f32 	%f1293, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1292,%f1293;
	// end inline asm
$L__BB0_176:                            // %__nv_fmaf_rn.exit4.i.i.i1903
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r656, %r16393, 192937984;
	add.s32 	%r657, %r16392, %r656;
	mov.b32 	%f1294, %r657;
	mul.f32 	%f1295, %f1292, %f1294;
	sub.f32 	%f1296, %f1294, %f1295;
	fma.rn.f32 	%f1297, %f1296, %f1292, %f1295;
	sub.f32 	%f1298, %f1294, %f1297;
	fma.rz.f32 	%f1299, %f1298, %f1292, %f1297;
	cvt.rzi.f32.f32 	%f1300, %f1299;
	sub.f32 	%f1389, %f1294, %f1300;
	sub.s32 	%r16393, %r16393, %r656;
	mov.b32 	%r16392, %f1389;
	setp.ne.s32 	%p299, %r16393, 0;
	setp.ne.s32 	%p300, %r16392, 0;
	and.pred  	%p301, %p299, %p300;
	@%p301 bra 	$L__BB0_176;
$L__BB0_177:                            // %__internal_fmodf_slowpath_mod.exit.i.i1905
	setp.gt.u32 	%p302, %r115, 2139095039;
	selp.f32 	%f1301, 0f7FFFFFFF, 0f4B800000, %p302;
	mul.f32 	%f1302, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1301, %f1302;
	bra.uni 	$L__BB0_178;
$L__BB0_168:                            // %__nv_fast_fdividef.exit.i.i.i1882
	div.approx.f32 	%f1285, %f1390, %f257;
	cvt.rzi.f32.f32 	%f1388, %f1285;
	fma.rn.f32 	%f239, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r114, %f239;
	setp.lt.u32 	%p293, %r114, 1073741824;
	@%p293 bra 	$L__BB0_173;
// %bb.169:
	setp.lt.u32 	%p294, %r114, -2147483647;
	@%p294 bra 	$L__BB0_171;
// %bb.170:
	add.f32 	%f1290, %f1388, 0fBF800000;
	setp.lt.f32 	%p297, %f239, 0fC0000000;
	add.f32 	%f1291, %f1290, 0fBF800000;
	selp.f32 	%f1388, %f1291, %f1290, %p297;
	bra.uni 	$L__BB0_173;
$L__BB0_171:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p295, %f239, 0f40800000;
	@%p295 bra 	$L__BB0_173;
// %bb.172:                             // %__nv_fmaf_rn.exit.i.i.i1886
	add.f32 	%f1286, %f1388, 0f3F800000;
	fma.rn.f32 	%f1288, %f257, 0fC0400000, %f239;
	setp.ge.f32 	%p296, %f1288, 0f00000000;
	add.f32 	%f1289, %f1286, 0f3F800000;
	selp.f32 	%f1388, %f1289, %f1286, %p296;
$L__BB0_173:                            // %__internal_fmodf_fastpath_quot.exit.i.i1889
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
$L__BB0_178:                            // %__internal_fmodf_kernel.exit.i1908
	add.s64 	%rd49, %rd1, %rd48;
	add.s64 	%rd51, %rd1, %rd50;
	shr.u32 	%r241, %r1, 2;
	mov.b32 	%r315, %f327;
	mov.b32 	%r314, %f3;
	mov.b32 	%r333, %f396;
	mov.b32 	%r332, %f12;
	mov.b32 	%r351, %f465;
	mov.b32 	%r350, %f21;
	mov.b32 	%r369, %f534;
	mov.b32 	%r368, %f30;
	mov.b32 	%r387, %f603;
	mov.b32 	%r386, %f39;
	mov.b32 	%r405, %f672;
	mov.b32 	%r404, %f48;
	mov.b32 	%r423, %f741;
	mov.b32 	%r422, %f57;
	mov.b32 	%r441, %f809;
	mov.b32 	%r440, %f66;
	xor.b32  	%r527, %r530, -2147483648;
	xor.b32  	%r526, %r529, -2147483648;
	mov.b32 	%r574, %f1125;
	mov.b32 	%r573, %f162;
	mov.b32 	%r577, %f1122;
	mov.b32 	%r576, %f161;
	xor.b32  	%r615, %r618, -2147483648;
	xor.b32  	%r614, %r617, -2147483648;
	selp.f32 	%f235, %f1281, %f1277, %p290;
	abs.f32 	%f1303, %f1390;
	setp.gtu.f32 	%p303, %f1303, 0f7F800000;
	@%p303 bra 	$L__BB0_180;
// %bb.179:
	mov.b32 	%r658, %f236;
	and.b32  	%r659, %r658, -2147483648;
	mov.b32 	%r660, %f1390;
	or.b32  	%r661, %r659, %r660;
	mov.b32 	%f1390, %r661;
$L__BB0_180:                            // %__nv_fmodf.exit1909
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	ld.global.u32 	%r235, [%rd49];
	ld.global.u32 	%r237, [%rd51];
	// begin inline asm
	cvt.rn.f16x2.f32 %r313, %r315, %r314;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r331, %r333, %r332;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r349, %r351, %r350;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r367, %r369, %r368;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r385, %r387, %r386;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r403, %r405, %r404;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r421, %r423, %r422;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r439, %r441, %r440;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r467, %r469, %r468;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r470, %r469, %r468;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r473, %r475, %r474;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r476, %r475, %r474;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r522, %r524, %r523;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r525, %r527, %r526;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r528, %r530, %r529;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r531, %r524, %r523;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r572, %r574, %r573;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r575, %r577, %r576;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r610, %r612, %r611;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r613, %r615, %r614;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r616, %r618, %r617;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r619, %r612, %r611;
	// end inline asm
	add.f32 	%f1304, %f1390, %f1390;
	mov.b32 	%r669, %f1304;
	and.b32  	%r670, %r669, -2147483648;
	or.b32  	%r671, %r670, 1056964608;
	mov.b32 	%f1305, %r671;
	add.f32 	%f1306, %f1304, %f1305;
	cvt.rzi.f32.f32 	%f1307, %f1306;
	abs.f32 	%f1308, %f1304;
	setp.gt.f32 	%p304, %f1308, 0f4B000000;
	selp.f32 	%f1309, %f1304, %f1307, %p304;
	cvt.rzi.f32.f32 	%f1310, %f1304;
	setp.lt.f32 	%p305, %f1308, 0f3F000000;
	selp.f32 	%f1311, %f1310, %f1309, %p305;
	cvt.rzi.s32.f32 	%r672, %f1311;
	fma.rn.f32 	%f1312, %f1311, 0fBF000000, %f1390;
	mul.f32 	%f1313, %f1312, %f1312;
	fma.rn.f32 	%f1314, %f1313, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1315, %f1313, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1316, %f1314, %f1313, 0fC0A55DF6;
	fma.rn.f32 	%f1317, %f1315, %f1313, 0f4081E0CF;
	fma.rn.f32 	%f1318, %f1313, %f1312, 0f00000000;
	fma.rn.f32 	%f1319, %f1317, %f1313, 0fC09DE9E6;
	fma.rn.f32 	%f1320, %f1316, %f1318, 0f00000000;
	fma.rn.f32 	%f1321, %f1319, %f1313, 0f3F800000;
	fma.rn.f32 	%f1322, %f1312, 0f40490FDB, %f1320;
	and.b32  	%r673, %r672, 1;
	setp.eq.b32 	%p306, %r673, 1;
	selp.f32 	%f1323, %f1321, %f1322, %p306;
	selp.f32 	%f1324, %f1322, %f1321, %p306;
	and.b32  	%r674, %r672, 2;
	setp.eq.s32 	%p307, %r674, 0;
	neg.f32 	%f1325, %f1323;
	selp.f32 	%f1326, %f1323, %f1325, %p307;
	add.s32 	%r675, %r672, 1;
	and.b32  	%r676, %r675, 2;
	setp.eq.s32 	%p308, %r676, 0;
	sub.f32 	%f1328, %f286, %f1324;
	selp.f32 	%f1329, %f1324, %f1328, %p308;
	cvt.rzi.f32.f32 	%f1330, %f1390;
	setp.eq.f32 	%p309, %f1330, %f1390;
	mul.f32 	%f1331, %f1390, 0f00000000;
	selp.f32 	%f1332, %f1331, %f1326, %p309;
	abs.f32 	%f1333, %f1390;
	setp.gt.f32 	%p310, %f1333, 0f4B800000;
	add.f32 	%f1334, %f1332, 0f3F800000;
	selp.f32 	%f1335, %f1334, %f1329, %p310;
	mov.b32 	%r664, %f1335;
	mov.b32 	%r663, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r662, %r664, %r663;
	// end inline asm
	mov.b32 	%r667, %f1332;
	mov.b32 	%r666, %f234;
	// begin inline asm
	cvt.rn.f16x2.f32 %r665, %r667, %r666;
	// end inline asm
	shl.b32 	%r677, %r5, 11;
	and.b32  	%r678, %r226, 28;
	and.b32  	%r679, %r231, 32;
	or.b32  	%r124, %r679, %r678;
	and.b32  	%r125, %r231, 64;
	or.b32  	%r680, %r125, %r124;
	shl.b32 	%r681, %r1, 3;
	and.b32  	%r682, %r681, 64;
	or.b32  	%r126, %r682, %r2;
	or.b32  	%r127, %r677, %r680;
	and.b32  	%r128, %r1, 8;
	shl.b32 	%r683, %r1, 4;
	or.b32  	%r684, %r683, %r128;
	shr.u32 	%r685, %r684, 2;
	and.b32  	%r686, %r685, 30;
	and.b32  	%r129, %r683, 48;
	and.b32  	%r687, %r241, 6;
	or.b32  	%r688, %r229, %r129;
	or.b32  	%r130, %r688, %r687;
	shr.u32 	%r689, %r2, 1;
	and.b32  	%r690, %r3, 32;
	or.b32  	%r131, %r690, %r689;
	or.b32  	%r132, %r131, 8;
	or.b32  	%r133, %r131, 16;
	or.b32  	%r134, %r131, 24;
	or.b32  	%r691, %r234, %r227;
	or.b32  	%r692, %r691, %r229;
	or.b32  	%r693, %r692, %r233;
	shr.u32 	%r694, %r693, 1;
	mul.lo.s32 	%r695, %r694, 65;
	add.s32 	%r135, %r131, %r695;
	add.s32 	%r136, %r132, %r695;
	add.s32 	%r137, %r133, %r695;
	add.s32 	%r138, %r134, %r695;
	or.b32  	%r696, %r236, %r227;
	or.b32  	%r697, %r696, %r229;
	or.b32  	%r698, %r697, %r233;
	shr.u32 	%r699, %r698, 1;
	mul.lo.s32 	%r700, %r699, 65;
	add.s32 	%r139, %r131, %r700;
	add.s32 	%r140, %r132, %r700;
	add.s32 	%r141, %r133, %r700;
	add.s32 	%r142, %r134, %r700;
	shl.b32 	%r701, %r2, 1;
	or.b32  	%r702, %r701, %r243;
	mul.lo.s32 	%r703, %r702, 65;
	add.s32 	%r704, %r686, %r703;
	mul.wide.u32 	%rd52, %r704, 4;
	mov.u64 	%rd53, shmem;
	add.s64 	%rd5, %rd53, %rd52;
	cvt.u64.u32 	%rd54, %r686;
	cvt.u64.u32 	%rd55, %r703;
	add.s64 	%rd56, %rd55, %rd54;
	shl.b64 	%rd57, %rd56, 2;
	add.s64 	%rd6, %rd53, %rd57;
	or.b32  	%r705, %r702, 32;
	mul.lo.s32 	%r706, %r705, 65;
	add.s32 	%r707, %r686, %r706;
	mul.wide.u32 	%rd58, %r707, 4;
	add.s64 	%rd7, %rd53, %rd58;
	cvt.u64.u32 	%rd59, %r706;
	add.s64 	%rd60, %rd59, %rd54;
	shl.b64 	%rd61, %rd60, 2;
	add.s64 	%rd8, %rd53, %rd61;
	shl.b32 	%r708, %r7, 18;
	add.s32 	%r709, %r708, -786432;
	shl.b32 	%r710, %r2, 9;
	or.b32  	%r711, %r232, %r244;
	shl.b32 	%r712, %r711, 7;
	or.b32  	%r143, %r710, %r712;
	cvt.s64.s32 	%rd9, %r709;
	or.b32  	%r144, %r143, 8192;
	bfe.u32 	%r713, %r683, 5, 1;
	and.b32  	%r714, %r2, 1;
	neg.s32 	%r715, %r714;
	and.b32  	%r716, %r715, 2080;
	bfe.s32 	%r717, %r2, 1, 1;
	and.b32  	%r718, %r2, 2;
	setp.eq.s32 	%p311, %r718, 0;
	and.b32  	%r719, %r717, 1040;
	shr.u32 	%r720, %r2, 3;
	mul.lo.s32 	%r721, %r720, 260;
	bfe.s32 	%r722, %r2, 2, 1;
	and.b32  	%r723, %r2, 4;
	setp.eq.s32 	%p312, %r723, 0;
	and.b32  	%r724, %r722, 520;
	mul.lo.s32 	%r725, %r243, 65;
	or.b32  	%r726, %r716, %r686;
	add.s32 	%r727, %r726, %r719;
	add.s32 	%r728, %r727, %r721;
	add.s32 	%r729, %r728, %r724;
	add.s32 	%r730, %r729, %r725;
	mul.wide.u32 	%rd62, %r730, 4;
	add.s64 	%rd10, %rd53, %rd62;
	cvt.u64.u32 	%rd63, %r725;
	selp.b64 	%rd64, 0, 520, %p312;
	cvt.u64.u32 	%rd65, %r721;
	selp.b64 	%rd66, 0, 1040, %p311;
	cvt.u64.u32 	%rd67, %r726;
	add.s64 	%rd68, %rd67, %rd66;
	add.s64 	%rd69, %rd68, %rd65;
	add.s64 	%rd70, %rd69, %rd64;
	add.s64 	%rd71, %rd70, %rd63;
	shl.b64 	%rd72, %rd71, 2;
	add.s64 	%rd12, %rd53, %rd72;
	add.s32 	%r731, %r730, 162;
	mul.wide.u32 	%rd73, %r731, 4;
	add.s64 	%rd13, %rd53, %rd73;
	add.s32 	%r732, %r730, 131;
	mul.wide.u32 	%rd74, %r732, 4;
	add.s64 	%rd14, %rd53, %rd74;
	add.s32 	%r733, %r730, 163;
	mul.wide.u32 	%rd75, %r733, 4;
	add.s64 	%rd15, %rd53, %rd75;
	add.s32 	%r734, %r730, 4193;
	mul.wide.u32 	%rd76, %r734, 4;
	add.s64 	%rd16, %rd53, %rd76;
	add.s32 	%r735, %r730, 4162;
	mul.wide.u32 	%rd77, %r735, 4;
	add.s64 	%rd17, %rd53, %rd77;
	add.s32 	%r736, %r730, 4194;
	mul.wide.u32 	%rd78, %r736, 4;
	add.s64 	%rd18, %rd53, %rd78;
	add.s32 	%r737, %r730, 4291;
	mul.wide.u32 	%rd79, %r737, 4;
	add.s64 	%rd19, %rd53, %rd79;
	add.s32 	%r738, %r730, 4323;
	mul.wide.u32 	%rd80, %r738, 4;
	add.s64 	%rd20, %rd53, %rd80;
	add.s32 	%r739, %r730, 4292;
	mul.wide.u32 	%rd81, %r739, 4;
	add.s64 	%rd21, %rd53, %rd81;
	add.s32 	%r740, %r730, 4324;
	mul.wide.u32 	%rd82, %r740, 4;
	add.s64 	%rd22, %rd53, %rd82;
	mul.lo.s32 	%r145, %r713, 65;
	add.s32 	%r146, %r131, 2080;
	add.s32 	%r147, %r132, 2080;
	add.s32 	%r148, %r133, 2080;
	add.s32 	%r149, %r134, 2080;
	add.s32 	%r741, %r707, 4193;
	mul.wide.u32 	%rd83, %r741, 4;
	add.s64 	%rd23, %rd53, %rd83;
	mov.u32 	%r16394, 0;
	setp.eq.s32 	%p314, %r128, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16395, %r16394;
	mov.u32 	%r16396, %r16394;
	mov.u32 	%r16397, %r16394;
	mov.u32 	%r16398, %r16394;
	mov.u32 	%r16399, %r16394;
	mov.u32 	%r16400, %r16394;
	mov.u32 	%r16401, %r16394;
	mov.u32 	%r16402, %r16394;
	mov.u32 	%r16403, %r16394;
	mov.u32 	%r16404, %r16394;
	mov.u32 	%r16405, %r16394;
	mov.u32 	%r16406, %r16394;
	mov.u32 	%r16407, %r16394;
	mov.u32 	%r16408, %r16394;
	mov.u32 	%r16409, %r16394;
	mov.u32 	%r16410, %r16394;
	mov.u32 	%r16411, %r16394;
	mov.u32 	%r16412, %r16394;
	mov.u32 	%r16413, %r16394;
	mov.u32 	%r16414, %r16394;
	mov.u32 	%r16415, %r16394;
	mov.u32 	%r16416, %r16394;
	mov.u32 	%r16417, %r16394;
	mov.u32 	%r16418, %r16394;
	bra.uni 	$L__BB0_181;
$L__BB0_187:                            // %L70753
                                        //   in Loop: Header=BB0_181 Depth=1
	add.s32 	%r225, %r16418, 256;
	setp.ne.s32 	%p339, %r16418, 130816;
	mov.u32 	%r16418, %r225;
	@%p339 bra 	$L__BB0_181;
	bra.uni 	$L__BB0_188;
$L__BB0_181:                            // %L2417
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_183 Depth 2
	add.s32 	%r742, %r16418, %r5;
	setp.gt.s32 	%p313, %r6, %r742;
	@%p313 bra 	$L__BB0_182;
	bra.uni 	$L__BB0_188;
$L__BB0_182:                            // %pass886
                                        //   in Loop: Header=BB0_181 Depth=1
	or.b32  	%r808, %r16418, %r228;
	and.b32  	%r809, %r808, 130848;
	or.b32  	%r810, %r126, %r809;
	shl.b32 	%r811, %r810, 11;
	add.s32 	%r812, %r127, %r811;
	shr.s32 	%r813, %r812, 31;
	shr.u32 	%r814, %r813, 4;
	add.s32 	%r815, %r812, %r814;
	shr.s32 	%r816, %r815, 28;
	setp.lt.s32 	%p315, %r812, 0;
	and.b32  	%r817, %r815, -268435456;
	setp.ne.s32 	%p316, %r817, %r812;
	and.pred  	%p317, %p315, %p316;
	selp.u32 	%r818, 1, 0, %p317;
	sub.s32 	%r819, %r818, %r816;
	shl.b32 	%r820, %r819, 28;
	add.s32 	%r821, %r820, %r812;
	mul.wide.s32 	%rd84, %r821, 4;
	add.s64 	%rd85, %rd2, %rd84;
	ld.global.v4.u32 	{%r822, %r823, %r824, %r825}, [%rd85];
	or.b32  	%r826, %r811, 32768;
	add.s32 	%r827, %r127, %r826;
	shr.s32 	%r828, %r827, 31;
	shr.u32 	%r829, %r828, 4;
	add.s32 	%r830, %r827, %r829;
	shr.s32 	%r831, %r830, 28;
	setp.lt.s32 	%p318, %r827, 0;
	and.b32  	%r832, %r830, -268435456;
	setp.ne.s32 	%p319, %r832, %r827;
	and.pred  	%p320, %p318, %p319;
	selp.u32 	%r833, 1, 0, %p320;
	sub.s32 	%r834, %r833, %r831;
	shl.b32 	%r835, %r834, 28;
	add.s32 	%r836, %r835, %r827;
	mul.wide.s32 	%rd86, %r836, 4;
	add.s64 	%rd87, %rd2, %rd86;
	ld.global.v4.u32 	{%r837, %r838, %r839, %r840}, [%rd87];
	or.b32  	%r841, %r811, 262144;
	add.s32 	%r842, %r127, %r841;
	shr.s32 	%r843, %r842, 31;
	shr.u32 	%r844, %r843, 4;
	add.s32 	%r845, %r842, %r844;
	shr.s32 	%r846, %r845, 28;
	setp.lt.s32 	%p321, %r842, 0;
	and.b32  	%r847, %r845, -268435456;
	setp.ne.s32 	%p322, %r847, %r842;
	and.pred  	%p323, %p321, %p322;
	selp.u32 	%r848, 1, 0, %p323;
	sub.s32 	%r849, %r848, %r846;
	shl.b32 	%r850, %r849, 28;
	add.s32 	%r851, %r850, %r842;
	mul.wide.s32 	%rd88, %r851, 4;
	add.s64 	%rd89, %rd2, %rd88;
	ld.global.v4.u32 	{%r852, %r853, %r854, %r855}, [%rd89];
	or.b32  	%r856, %r811, 294912;
	add.s32 	%r857, %r127, %r856;
	shr.s32 	%r858, %r857, 31;
	shr.u32 	%r859, %r858, 4;
	add.s32 	%r860, %r857, %r859;
	shr.s32 	%r861, %r860, 28;
	setp.lt.s32 	%p324, %r857, 0;
	and.b32  	%r862, %r860, -268435456;
	setp.ne.s32 	%p325, %r862, %r857;
	and.pred  	%p326, %p324, %p325;
	selp.u32 	%r863, 1, 0, %p326;
	sub.s32 	%r864, %r863, %r861;
	shl.b32 	%r865, %r864, 28;
	add.s32 	%r866, %r865, %r857;
	mul.wide.s32 	%rd90, %r866, 4;
	add.s64 	%rd91, %rd2, %rd90;
	ld.global.v4.u32 	{%r867, %r868, %r869, %r870}, [%rd91];
	selp.b32 	%r871, %r824, %r822, %p314;
	shfl.sync.bfly.b32	%r872, %r871, 8, 31, -1;
	selp.b32 	%r744, %r822, %r872, %p314;
	selp.b32 	%r745, %r872, %r824, %p314;
	selp.b32 	%r873, %r825, %r823, %p314;
	shfl.sync.bfly.b32	%r874, %r873, 8, 31, -1;
	selp.b32 	%r752, %r823, %r874, %p314;
	selp.b32 	%r753, %r874, %r825, %p314;
	selp.b32 	%r875, %r839, %r837, %p314;
	shfl.sync.bfly.b32	%r876, %r875, 8, 31, -1;
	selp.b32 	%r760, %r837, %r876, %p314;
	selp.b32 	%r761, %r876, %r839, %p314;
	selp.b32 	%r877, %r840, %r838, %p314;
	shfl.sync.bfly.b32	%r878, %r877, 8, 31, -1;
	selp.b32 	%r768, %r838, %r878, %p314;
	selp.b32 	%r769, %r878, %r840, %p314;
	selp.b32 	%r879, %r854, %r852, %p314;
	shfl.sync.bfly.b32	%r880, %r879, 8, 31, -1;
	selp.b32 	%r776, %r852, %r880, %p314;
	selp.b32 	%r777, %r880, %r854, %p314;
	selp.b32 	%r881, %r855, %r853, %p314;
	shfl.sync.bfly.b32	%r882, %r881, 8, 31, -1;
	selp.b32 	%r784, %r853, %r882, %p314;
	selp.b32 	%r785, %r882, %r855, %p314;
	selp.b32 	%r883, %r869, %r867, %p314;
	shfl.sync.bfly.b32	%r884, %r883, 8, 31, -1;
	selp.b32 	%r792, %r867, %r884, %p314;
	selp.b32 	%r793, %r884, %r869, %p314;
	selp.b32 	%r885, %r870, %r868, %p314;
	shfl.sync.bfly.b32	%r886, %r885, 8, 31, -1;
	selp.b32 	%r800, %r868, %r886, %p314;
	selp.b32 	%r801, %r886, %r870, %p314;
	mov.u32 	%r802, 21520;
	// begin inline asm
	prmt.b32 %r743, %r744, %r745, %r802;
	// end inline asm
	mov.u32 	%r806, 30258;
	// begin inline asm
	prmt.b32 %r747, %r744, %r745, %r806;
	// end inline asm
	// begin inline asm
	prmt.b32 %r751, %r752, %r753, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r755, %r752, %r753, %r806;
	// end inline asm
	// begin inline asm
	prmt.b32 %r759, %r760, %r761, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r763, %r760, %r761, %r806;
	// end inline asm
	// begin inline asm
	prmt.b32 %r767, %r768, %r769, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r771, %r768, %r769, %r806;
	// end inline asm
	// begin inline asm
	prmt.b32 %r775, %r776, %r777, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r779, %r776, %r777, %r806;
	// end inline asm
	// begin inline asm
	prmt.b32 %r783, %r784, %r785, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r787, %r784, %r785, %r806;
	// end inline asm
	// begin inline asm
	prmt.b32 %r791, %r792, %r793, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r795, %r792, %r793, %r806;
	// end inline asm
	// begin inline asm
	prmt.b32 %r799, %r800, %r801, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r803, %r800, %r801, %r806;
	// end inline asm
	st.shared.u32 	[%rd10], %r743;
	st.shared.u32 	[%rd12+128], %r747;
	st.shared.u32 	[%rd12+4], %r751;
	st.shared.u32 	[%rd12+132], %r755;
	st.shared.u32 	[%rd12+520], %r759;
	st.shared.u32 	[%rd13], %r763;
	st.shared.u32 	[%rd14], %r767;
	st.shared.u32 	[%rd15], %r771;
	st.shared.u32 	[%rd10+16644], %r775;
	st.shared.u32 	[%rd16], %r779;
	st.shared.u32 	[%rd17], %r783;
	st.shared.u32 	[%rd18], %r787;
	st.shared.u32 	[%rd19], %r791;
	st.shared.u32 	[%rd20], %r795;
	st.shared.u32 	[%rd21], %r799;
	st.shared.u32 	[%rd22], %r803;
	bar.sync 	0;
	or.b32  	%r248, %r130, %r16418;
	or.b32  	%r887, %r16418, %r129;
	or.b32  	%r888, %r887, %r229;
	or.b32  	%r889, %r241, %r888;
	or.b32  	%r249, %r889, 1;
	mov.u32 	%r807, 0;
	mov.u32 	%r16443, %r807;
$L__BB0_183:                            // %L13860
                                        //   Parent Loop BB0_181 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r16154, %r248, %r16443;
	bfe.s32 	%r16155, %r16154, 4, 1;
	and.b32  	%r16156, %r16155, 130;
	bfe.s32 	%r16157, %r16154, 1, 1;
	and.b32  	%r16158, %r16157, 1040;
	bfe.s32 	%r16159, %r16154, 3, 1;
	and.b32  	%r16160, %r16159, 260;
	bfe.s32 	%r16161, %r16154, 2, 1;
	and.b32  	%r16162, %r16161, 520;
	bfe.s32 	%r16163, %r16154, 7, 1;
	and.b32  	%r16164, %r16163, 4161;
	add.s32 	%r16165, %r131, %r16156;
	or.b32  	%r16166, %r16165, %r16158;
	add.s32 	%r16167, %r16166, %r16160;
	add.s32 	%r16168, %r16167, %r16162;
	add.s32 	%r16169, %r16168, %r145;
	add.s32 	%r16170, %r16169, %r16164;
	mul.wide.u32 	%rd92, %r16170, 4;
	add.s64 	%rd94, %rd53, %rd92;
	ld.shared.u32 	%r16171, [%rd94];
	add.s32 	%r16172, %r132, %r16156;
	add.s32 	%r16173, %r16172, %r16158;
	add.s32 	%r16174, %r16173, %r16160;
	add.s32 	%r16175, %r16174, %r16162;
	add.s32 	%r16176, %r16175, %r145;
	add.s32 	%r16177, %r16176, %r16164;
	mul.wide.u32 	%rd95, %r16177, 4;
	add.s64 	%rd96, %rd53, %rd95;
	ld.shared.u32 	%r16178, [%rd96];
	add.s32 	%r16179, %r133, %r16156;
	add.s32 	%r16180, %r16179, %r16158;
	add.s32 	%r16181, %r16180, %r16160;
	add.s32 	%r16182, %r16181, %r16162;
	add.s32 	%r16183, %r16182, %r145;
	add.s32 	%r16184, %r16183, %r16164;
	mul.wide.u32 	%rd97, %r16184, 4;
	add.s64 	%rd98, %rd53, %rd97;
	ld.shared.u32 	%r16185, [%rd98];
	add.s32 	%r16186, %r134, %r16156;
	add.s32 	%r16187, %r16186, %r16158;
	add.s32 	%r16188, %r16187, %r16160;
	add.s32 	%r16189, %r16188, %r16162;
	add.s32 	%r16190, %r16189, %r145;
	add.s32 	%r16191, %r16190, %r16164;
	mul.wide.u32 	%rd99, %r16191, 4;
	add.s64 	%rd100, %rd53, %rd99;
	ld.shared.u32 	%r16192, [%rd100];
	add.s32 	%r16193, %r249, %r16443;
	bfe.s32 	%r16194, %r16193, 4, 1;
	and.b32  	%r16195, %r16194, 130;
	bfe.s32 	%r16196, %r16193, 1, 1;
	and.b32  	%r16197, %r16196, 1040;
	bfe.s32 	%r16198, %r16193, 3, 1;
	and.b32  	%r16199, %r16198, 260;
	bfe.s32 	%r16200, %r16193, 2, 1;
	and.b32  	%r16201, %r16200, 520;
	bfe.s32 	%r16202, %r16193, 5, 1;
	and.b32  	%r16203, %r16202, 65;
	bfe.s32 	%r16204, %r16193, 7, 1;
	and.b32  	%r16205, %r16204, 4161;
	add.s32 	%r16206, %r146, %r16195;
	or.b32  	%r16207, %r16206, %r16197;
	add.s32 	%r16208, %r16207, %r16199;
	add.s32 	%r16209, %r16208, %r16201;
	add.s32 	%r16210, %r16209, %r16203;
	add.s32 	%r16211, %r16210, %r16205;
	mul.wide.u32 	%rd101, %r16211, 4;
	add.s64 	%rd102, %rd53, %rd101;
	ld.shared.u32 	%r16212, [%rd102];
	add.s32 	%r16213, %r147, %r16195;
	add.s32 	%r16214, %r16213, %r16197;
	add.s32 	%r16215, %r16214, %r16199;
	add.s32 	%r16216, %r16215, %r16201;
	add.s32 	%r16217, %r16216, %r16203;
	add.s32 	%r16218, %r16217, %r16205;
	mul.wide.u32 	%rd103, %r16218, 4;
	add.s64 	%rd104, %rd53, %rd103;
	ld.shared.u32 	%r16219, [%rd104];
	add.s32 	%r16220, %r148, %r16195;
	add.s32 	%r16221, %r16220, %r16197;
	add.s32 	%r16222, %r16221, %r16199;
	add.s32 	%r16223, %r16222, %r16201;
	add.s32 	%r16224, %r16223, %r16203;
	add.s32 	%r16225, %r16224, %r16205;
	mul.wide.u32 	%rd105, %r16225, 4;
	add.s64 	%rd106, %rd53, %rd105;
	ld.shared.u32 	%r16226, [%rd106];
	add.s32 	%r16227, %r149, %r16195;
	add.s32 	%r16228, %r16227, %r16197;
	add.s32 	%r16229, %r16228, %r16199;
	add.s32 	%r16230, %r16229, %r16201;
	add.s32 	%r16231, %r16230, %r16203;
	add.s32 	%r16232, %r16231, %r16205;
	mul.wide.u32 	%rd107, %r16232, 4;
	add.s64 	%rd108, %rd53, %rd107;
	ld.shared.u32 	%r16233, [%rd108];
	// begin inline asm
	mov.b32 %r895, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r894, %r16171, -2004318072;
	mov.u32 	%r893, 983055;
	// begin inline asm
	lop3.b32 %r892, %r893, %r894, %r895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r896, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r897, %r895, %r896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r900, %r892, %r897;
	// end inline asm
	mov.u32 	%r904, 15728880;
	// begin inline asm
	lop3.b32 %r903, %r904, %r894, %r906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r907, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r908, %r906, %r907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r911, %r903, %r908;
	// end inline asm
	shr.u32 	%r916, %r894, 8;
	// begin inline asm
	lop3.b32 %r914, %r893, %r916, %r895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r918, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r919, %r895, %r918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r922, %r914, %r919;
	// end inline asm
	// begin inline asm
	lop3.b32 %r925, %r904, %r916, %r906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r929, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r930, %r906, %r929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r933, %r925, %r930;
	// end inline asm
	// begin inline asm
	mov.b32 %r941, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r940, %r16178, -2004318072;
	// begin inline asm
	lop3.b32 %r938, %r893, %r940, %r941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r943, %r941, %r942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r946, %r938, %r943;
	// end inline asm
	// begin inline asm
	lop3.b32 %r949, %r904, %r940, %r952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r953, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r954, %r952, %r953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r957, %r949, %r954;
	// end inline asm
	shr.u32 	%r962, %r940, 8;
	// begin inline asm
	lop3.b32 %r960, %r893, %r962, %r941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r965, %r941, %r964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r968, %r960, %r965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r971, %r904, %r962, %r952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r975, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r976, %r952, %r975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r979, %r971, %r976;
	// end inline asm
	// begin inline asm
	mov.b32 %r987, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r998, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r986, %r16185, -2004318072;
	// begin inline asm
	lop3.b32 %r984, %r893, %r986, %r987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r988, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r989, %r987, %r988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r992, %r984, %r989;
	// end inline asm
	// begin inline asm
	lop3.b32 %r995, %r904, %r986, %r998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1000, %r998, %r999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1003, %r995, %r1000;
	// end inline asm
	shr.u32 	%r1008, %r986, 8;
	// begin inline asm
	lop3.b32 %r1006, %r893, %r1008, %r987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1010, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1011, %r987, %r1010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1014, %r1006, %r1011;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1017, %r904, %r1008, %r998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1022, %r998, %r1021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1025, %r1017, %r1022;
	// end inline asm
	// begin inline asm
	mov.b32 %r1033, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1044, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1032, %r16192, -2004318072;
	// begin inline asm
	lop3.b32 %r1030, %r893, %r1032, %r1033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1034, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1035, %r1033, %r1034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1038, %r1030, %r1035;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1041, %r904, %r1032, %r1044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1045, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1046, %r1044, %r1045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1049, %r1041, %r1046;
	// end inline asm
	shr.u32 	%r1054, %r1032, 8;
	// begin inline asm
	lop3.b32 %r1052, %r893, %r1054, %r1033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1057, %r1033, %r1056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1060, %r1052, %r1057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1063, %r904, %r1054, %r1044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1068, %r1044, %r1067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1071, %r1063, %r1068;
	// end inline asm
	// begin inline asm
	mov.b32 %r1079, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1090, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1078, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r1076, %r893, %r1078, %r1079, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1080, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1081, %r1079, %r1080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1084, %r1076, %r1081;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1087, %r904, %r1078, %r1090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1091, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1092, %r1090, %r1091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1095, %r1087, %r1092;
	// end inline asm
	shr.u32 	%r1100, %r1078, 8;
	// begin inline asm
	lop3.b32 %r1098, %r893, %r1100, %r1079, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1102, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1103, %r1079, %r1102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1106, %r1098, %r1103;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1109, %r904, %r1100, %r1090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1114, %r1090, %r1113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1117, %r1109, %r1114;
	// end inline asm
	// begin inline asm
	mov.b32 %r1125, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1136, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1124, %r16219, -2004318072;
	// begin inline asm
	lop3.b32 %r1122, %r893, %r1124, %r1125, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1126, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1127, %r1125, %r1126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1130, %r1122, %r1127;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1133, %r904, %r1124, %r1136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1137, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1138, %r1136, %r1137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1141, %r1133, %r1138;
	// end inline asm
	shr.u32 	%r1146, %r1124, 8;
	// begin inline asm
	lop3.b32 %r1144, %r893, %r1146, %r1125, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1148, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1149, %r1125, %r1148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1152, %r1144, %r1149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1155, %r904, %r1146, %r1136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1160, %r1136, %r1159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1163, %r1155, %r1160;
	// end inline asm
	// begin inline asm
	mov.b32 %r1171, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1182, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1170, %r16226, -2004318072;
	// begin inline asm
	lop3.b32 %r1168, %r893, %r1170, %r1171, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1172, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1173, %r1171, %r1172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1176, %r1168, %r1173;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1179, %r904, %r1170, %r1182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1183, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1184, %r1182, %r1183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1187, %r1179, %r1184;
	// end inline asm
	shr.u32 	%r1192, %r1170, 8;
	// begin inline asm
	lop3.b32 %r1190, %r893, %r1192, %r1171, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1194, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1195, %r1171, %r1194;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1198, %r1190, %r1195;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1201, %r904, %r1192, %r1182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1206, %r1182, %r1205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1209, %r1201, %r1206;
	// end inline asm
	// begin inline asm
	mov.b32 %r1217, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1228, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1216, %r16233, -2004318072;
	// begin inline asm
	lop3.b32 %r1214, %r893, %r1216, %r1217, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1218, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1219, %r1217, %r1218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1222, %r1214, %r1219;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1225, %r904, %r1216, %r1228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1229, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1230, %r1228, %r1229;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1233, %r1225, %r1230;
	// end inline asm
	shr.u32 	%r1238, %r1216, 8;
	// begin inline asm
	lop3.b32 %r1236, %r893, %r1238, %r1217, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1240, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1241, %r1217, %r1240;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1244, %r1236, %r1241;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1247, %r904, %r1238, %r1228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1252, %r1228, %r1251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1255, %r1247, %r1252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1258, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1260, %r1258, %r900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1263, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1265, %r1263, %r911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1268, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1270, %r1268, %r922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1273, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1275, %r1273, %r933;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1278, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1280, %r1278, %r946;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1283, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1285, %r1283, %r957;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1288, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1290, %r1288, %r968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1293, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1295, %r1293, %r979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1298, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1300, %r1298, %r992;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1303, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1305, %r1303, %r1003;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1308, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1310, %r1308, %r1014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1313, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1315, %r1313, %r1025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1318, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1320, %r1318, %r1038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1323, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1325, %r1323, %r1049;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1328, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1330, %r1328, %r1060;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1333, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1335, %r1333, %r1071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1338, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1340, %r1338, %r1084;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1343, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1345, %r1343, %r1095;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1348, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1350, %r1348, %r1106;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1353, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1355, %r1353, %r1117;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1358, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1360, %r1358, %r1130;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1363, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1365, %r1363, %r1141;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1368, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1370, %r1368, %r1152;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1373, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1375, %r1373, %r1163;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1378, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1380, %r1378, %r1176;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1383, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1385, %r1383, %r1187;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1388, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1390, %r1388, %r1198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1393, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1395, %r1393, %r1209;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1398, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1400, %r1398, %r1222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1403, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1405, %r1403, %r1233;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1408, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1410, %r1408, %r1244;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1413, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1415, %r1413, %r1255;
	// end inline asm
	// begin inline asm
	mov.b32 %r1423, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1434, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1422, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r1420, %r893, %r1422, %r1423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1425, %r1423, %r1424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1428, %r1420, %r1425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1431, %r904, %r1422, %r1434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1436, %r1434, %r1435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1439, %r1431, %r1436;
	// end inline asm
	shr.u32 	%r1444, %r1422, 8;
	// begin inline asm
	lop3.b32 %r1442, %r893, %r1444, %r1423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1447, %r1423, %r1446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1450, %r1442, %r1447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1453, %r904, %r1444, %r1434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1458, %r1434, %r1457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1461, %r1453, %r1458;
	// end inline asm
	// begin inline asm
	mov.b32 %r1469, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1480, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1468, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r1466, %r893, %r1468, %r1469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1471, %r1469, %r1470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1474, %r1466, %r1471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1477, %r904, %r1468, %r1480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1482, %r1480, %r1481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1485, %r1477, %r1482;
	// end inline asm
	shr.u32 	%r1490, %r1468, 8;
	// begin inline asm
	lop3.b32 %r1488, %r893, %r1490, %r1469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1493, %r1469, %r1492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1496, %r1488, %r1493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1499, %r904, %r1490, %r1480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1504, %r1480, %r1503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1507, %r1499, %r1504;
	// end inline asm
	// begin inline asm
	mov.b32 %r1515, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1526, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1514, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r1512, %r893, %r1514, %r1515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1517, %r1515, %r1516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1520, %r1512, %r1517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1523, %r904, %r1514, %r1526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1528, %r1526, %r1527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1531, %r1523, %r1528;
	// end inline asm
	shr.u32 	%r1536, %r1514, 8;
	// begin inline asm
	lop3.b32 %r1534, %r893, %r1536, %r1515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1539, %r1515, %r1538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1542, %r1534, %r1539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1545, %r904, %r1536, %r1526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1550, %r1526, %r1549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1553, %r1545, %r1550;
	// end inline asm
	// begin inline asm
	mov.b32 %r1561, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1572, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1560, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r1558, %r893, %r1560, %r1561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1563, %r1561, %r1562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1566, %r1558, %r1563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1569, %r904, %r1560, %r1572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1574, %r1572, %r1573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1577, %r1569, %r1574;
	// end inline asm
	shr.u32 	%r1582, %r1560, 8;
	// begin inline asm
	lop3.b32 %r1580, %r893, %r1582, %r1561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1585, %r1561, %r1584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1588, %r1580, %r1585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1591, %r904, %r1582, %r1572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1596, %r1572, %r1595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1599, %r1591, %r1596;
	// end inline asm
	// begin inline asm
	mov.b32 %r1607, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1618, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1606, %r16406, -2004318072;
	// begin inline asm
	lop3.b32 %r1604, %r893, %r1606, %r1607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1609, %r1607, %r1608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1612, %r1604, %r1609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1615, %r904, %r1606, %r1618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1620, %r1618, %r1619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1623, %r1615, %r1620;
	// end inline asm
	shr.u32 	%r1628, %r1606, 8;
	// begin inline asm
	lop3.b32 %r1626, %r893, %r1628, %r1607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1630, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1631, %r1607, %r1630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1634, %r1626, %r1631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1637, %r904, %r1628, %r1618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1641, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1642, %r1618, %r1641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1645, %r1637, %r1642;
	// end inline asm
	// begin inline asm
	mov.b32 %r1653, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1664, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1652, %r16407, -2004318072;
	// begin inline asm
	lop3.b32 %r1650, %r893, %r1652, %r1653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1655, %r1653, %r1654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1658, %r1650, %r1655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1661, %r904, %r1652, %r1664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1666, %r1664, %r1665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1669, %r1661, %r1666;
	// end inline asm
	shr.u32 	%r1674, %r1652, 8;
	// begin inline asm
	lop3.b32 %r1672, %r893, %r1674, %r1653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1676, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1677, %r1653, %r1676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1680, %r1672, %r1677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1683, %r904, %r1674, %r1664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1687, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1688, %r1664, %r1687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1691, %r1683, %r1688;
	// end inline asm
	// begin inline asm
	mov.b32 %r1699, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1710, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1698, %r16408, -2004318072;
	// begin inline asm
	lop3.b32 %r1696, %r893, %r1698, %r1699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1701, %r1699, %r1700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1704, %r1696, %r1701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1707, %r904, %r1698, %r1710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1711, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1712, %r1710, %r1711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1715, %r1707, %r1712;
	// end inline asm
	shr.u32 	%r1720, %r1698, 8;
	// begin inline asm
	lop3.b32 %r1718, %r893, %r1720, %r1699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1722, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1723, %r1699, %r1722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1726, %r1718, %r1723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1729, %r904, %r1720, %r1710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1733, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1734, %r1710, %r1733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1737, %r1729, %r1734;
	// end inline asm
	// begin inline asm
	mov.b32 %r1745, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1756, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1744, %r16409, -2004318072;
	// begin inline asm
	lop3.b32 %r1742, %r893, %r1744, %r1745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1747, %r1745, %r1746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1750, %r1742, %r1747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1753, %r904, %r1744, %r1756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1757, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1758, %r1756, %r1757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1761, %r1753, %r1758;
	// end inline asm
	shr.u32 	%r1766, %r1744, 8;
	// begin inline asm
	lop3.b32 %r1764, %r893, %r1766, %r1745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1768, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1769, %r1745, %r1768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1772, %r1764, %r1769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1775, %r904, %r1766, %r1756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1779, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1780, %r1756, %r1779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1783, %r1775, %r1780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1786, %r313, %r1428, %r1260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1790, %r313, %r1439, %r1265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1794, %r313, %r1450, %r1270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1798, %r313, %r1461, %r1275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1802, %r313, %r1474, %r1280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1806, %r313, %r1485, %r1285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1810, %r313, %r1496, %r1290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1814, %r313, %r1507, %r1295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1818, %r313, %r1520, %r1300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1822, %r313, %r1531, %r1305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1826, %r313, %r1542, %r1310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1830, %r313, %r1553, %r1315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1834, %r313, %r1566, %r1320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1838, %r313, %r1577, %r1325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1842, %r313, %r1588, %r1330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1846, %r313, %r1599, %r1335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1850, %r331, %r1612, %r1340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1854, %r331, %r1623, %r1345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1858, %r331, %r1634, %r1350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1862, %r331, %r1645, %r1355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1866, %r331, %r1658, %r1360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1870, %r331, %r1669, %r1365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1874, %r331, %r1680, %r1370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1878, %r331, %r1691, %r1375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1882, %r331, %r1704, %r1380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1886, %r331, %r1715, %r1385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1890, %r331, %r1726, %r1390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1894, %r331, %r1737, %r1395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1898, %r331, %r1750, %r1400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1902, %r331, %r1761, %r1405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1906, %r331, %r1772, %r1410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1910, %r331, %r1783, %r1415;
	// end inline asm
	// begin inline asm
	mov.b32 %r1919, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1930, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1918, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r1916, %r893, %r1918, %r1919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1920, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1921, %r1919, %r1920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1924, %r1916, %r1921;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1927, %r904, %r1918, %r1930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1931, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1932, %r1930, %r1931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1935, %r1927, %r1932;
	// end inline asm
	shr.u32 	%r1940, %r1918, 8;
	// begin inline asm
	lop3.b32 %r1938, %r893, %r1940, %r1919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1943, %r1919, %r1942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1946, %r1938, %r1943;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1949, %r904, %r1940, %r1930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1953, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1954, %r1930, %r1953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1957, %r1949, %r1954;
	// end inline asm
	// begin inline asm
	mov.b32 %r1965, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1976, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1964, %r16399, -2004318072;
	// begin inline asm
	lop3.b32 %r1962, %r893, %r1964, %r1965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1966, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1967, %r1965, %r1966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1970, %r1962, %r1967;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1973, %r904, %r1964, %r1976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1977, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1978, %r1976, %r1977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1981, %r1973, %r1978;
	// end inline asm
	shr.u32 	%r1986, %r1964, 8;
	// begin inline asm
	lop3.b32 %r1984, %r893, %r1986, %r1965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1988, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1989, %r1965, %r1988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1992, %r1984, %r1989;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1995, %r904, %r1986, %r1976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2000, %r1976, %r1999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2003, %r1995, %r2000;
	// end inline asm
	// begin inline asm
	mov.b32 %r2011, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2022, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2010, %r16400, -2004318072;
	// begin inline asm
	lop3.b32 %r2008, %r893, %r2010, %r2011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2012, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2013, %r2011, %r2012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2016, %r2008, %r2013;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2019, %r904, %r2010, %r2022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2023, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2024, %r2022, %r2023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2027, %r2019, %r2024;
	// end inline asm
	shr.u32 	%r2032, %r2010, 8;
	// begin inline asm
	lop3.b32 %r2030, %r893, %r2032, %r2011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2034, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2035, %r2011, %r2034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2038, %r2030, %r2035;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2041, %r904, %r2032, %r2022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2045, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2046, %r2022, %r2045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2049, %r2041, %r2046;
	// end inline asm
	// begin inline asm
	mov.b32 %r2057, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2068, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2056, %r16401, -2004318072;
	// begin inline asm
	lop3.b32 %r2054, %r893, %r2056, %r2057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2058, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2059, %r2057, %r2058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2062, %r2054, %r2059;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2065, %r904, %r2056, %r2068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2069, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2070, %r2068, %r2069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2073, %r2065, %r2070;
	// end inline asm
	shr.u32 	%r2078, %r2056, 8;
	// begin inline asm
	lop3.b32 %r2076, %r893, %r2078, %r2057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2080, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2081, %r2057, %r2080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2084, %r2076, %r2081;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2087, %r904, %r2078, %r2068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2091, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2092, %r2068, %r2091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2095, %r2087, %r2092;
	// end inline asm
	// begin inline asm
	mov.b32 %r2103, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2114, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2102, %r16410, -2004318072;
	// begin inline asm
	lop3.b32 %r2100, %r893, %r2102, %r2103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2104, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2105, %r2103, %r2104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2108, %r2100, %r2105;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2111, %r904, %r2102, %r2114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2115, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2116, %r2114, %r2115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2119, %r2111, %r2116;
	// end inline asm
	shr.u32 	%r2124, %r2102, 8;
	// begin inline asm
	lop3.b32 %r2122, %r893, %r2124, %r2103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2126, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2127, %r2103, %r2126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2130, %r2122, %r2127;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2133, %r904, %r2124, %r2114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2137, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2138, %r2114, %r2137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2141, %r2133, %r2138;
	// end inline asm
	// begin inline asm
	mov.b32 %r2149, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2160, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2148, %r16411, -2004318072;
	// begin inline asm
	lop3.b32 %r2146, %r893, %r2148, %r2149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2150, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2151, %r2149, %r2150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2154, %r2146, %r2151;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2157, %r904, %r2148, %r2160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2161, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2162, %r2160, %r2161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2165, %r2157, %r2162;
	// end inline asm
	shr.u32 	%r2170, %r2148, 8;
	// begin inline asm
	lop3.b32 %r2168, %r893, %r2170, %r2149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2172, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2173, %r2149, %r2172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2176, %r2168, %r2173;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2179, %r904, %r2170, %r2160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2183, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2184, %r2160, %r2183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2187, %r2179, %r2184;
	// end inline asm
	// begin inline asm
	mov.b32 %r2195, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2206, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2194, %r16412, -2004318072;
	// begin inline asm
	lop3.b32 %r2192, %r893, %r2194, %r2195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2196, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2197, %r2195, %r2196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2200, %r2192, %r2197;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2203, %r904, %r2194, %r2206, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2207, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2208, %r2206, %r2207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2211, %r2203, %r2208;
	// end inline asm
	shr.u32 	%r2216, %r2194, 8;
	// begin inline asm
	lop3.b32 %r2214, %r893, %r2216, %r2195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2218, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2219, %r2195, %r2218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2222, %r2214, %r2219;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2225, %r904, %r2216, %r2206, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2229, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2230, %r2206, %r2229;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2233, %r2225, %r2230;
	// end inline asm
	// begin inline asm
	mov.b32 %r2241, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2252, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2240, %r16413, -2004318072;
	// begin inline asm
	lop3.b32 %r2238, %r893, %r2240, %r2241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2242, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2243, %r2241, %r2242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2246, %r2238, %r2243;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2249, %r904, %r2240, %r2252, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2253, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2254, %r2252, %r2253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2257, %r2249, %r2254;
	// end inline asm
	shr.u32 	%r2262, %r2240, 8;
	// begin inline asm
	lop3.b32 %r2260, %r893, %r2262, %r2241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2264, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2265, %r2241, %r2264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2268, %r2260, %r2265;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2271, %r904, %r2262, %r2252, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2275, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2276, %r2252, %r2275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2279, %r2271, %r2276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2282, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2284, %r2282, %r1924, %r1786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2288, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2290, %r2288, %r1935, %r1790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2294, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2296, %r2294, %r1946, %r1794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2300, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2302, %r2300, %r1957, %r1798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2306, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2308, %r2306, %r1970, %r1802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2312, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2314, %r2312, %r1981, %r1806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2318, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2320, %r2318, %r1992, %r1810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2324, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2326, %r2324, %r2003, %r1814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2330, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2332, %r2330, %r2016, %r1818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2336, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2338, %r2336, %r2027, %r1822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2342, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2344, %r2342, %r2038, %r1826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2348, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2350, %r2348, %r2049, %r1830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2354, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2356, %r2354, %r2062, %r1834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2360, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2362, %r2360, %r2073, %r1838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2366, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2368, %r2366, %r2084, %r1842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2372, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2374, %r2372, %r2095, %r1846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2378, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2380, %r2378, %r2108, %r1850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2384, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2386, %r2384, %r2119, %r1854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2390, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2392, %r2390, %r2130, %r1858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2396, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2398, %r2396, %r2141, %r1862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2402, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2404, %r2402, %r2154, %r1866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2408, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2410, %r2408, %r2165, %r1870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2414, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2416, %r2414, %r2176, %r1874;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2420, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2422, %r2420, %r2187, %r1878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2426, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2428, %r2426, %r2200, %r1882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2432, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2434, %r2432, %r2211, %r1886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2438, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2440, %r2438, %r2222, %r1890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2444, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2446, %r2444, %r2233, %r1894;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2450, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2452, %r2450, %r2246, %r1898;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2456, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2458, %r2456, %r2257, %r1902;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2462, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2464, %r2462, %r2268, %r1906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2468, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2470, %r2468, %r2279, %r1910;
	// end inline asm
	// begin inline asm
	mov.b32 %r2479, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2490, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2478, %r16402, -2004318072;
	// begin inline asm
	lop3.b32 %r2476, %r893, %r2478, %r2479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2481, %r2479, %r2480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2484, %r2476, %r2481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2487, %r904, %r2478, %r2490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2492, %r2490, %r2491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2495, %r2487, %r2492;
	// end inline asm
	shr.u32 	%r2500, %r2478, 8;
	// begin inline asm
	lop3.b32 %r2498, %r893, %r2500, %r2479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2502, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2503, %r2479, %r2502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2506, %r2498, %r2503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2509, %r904, %r2500, %r2490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2513, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2514, %r2490, %r2513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2517, %r2509, %r2514;
	// end inline asm
	// begin inline asm
	mov.b32 %r2525, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2536, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2524, %r16403, -2004318072;
	// begin inline asm
	lop3.b32 %r2522, %r893, %r2524, %r2525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2526, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2527, %r2525, %r2526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2530, %r2522, %r2527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2533, %r904, %r2524, %r2536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2538, %r2536, %r2537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2541, %r2533, %r2538;
	// end inline asm
	shr.u32 	%r2546, %r2524, 8;
	// begin inline asm
	lop3.b32 %r2544, %r893, %r2546, %r2525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2548, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2549, %r2525, %r2548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2552, %r2544, %r2549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2555, %r904, %r2546, %r2536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2559, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2560, %r2536, %r2559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2563, %r2555, %r2560;
	// end inline asm
	// begin inline asm
	mov.b32 %r2571, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2582, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2570, %r16404, -2004318072;
	// begin inline asm
	lop3.b32 %r2568, %r893, %r2570, %r2571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2572, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2573, %r2571, %r2572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2576, %r2568, %r2573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2579, %r904, %r2570, %r2582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2584, %r2582, %r2583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2587, %r2579, %r2584;
	// end inline asm
	shr.u32 	%r2592, %r2570, 8;
	// begin inline asm
	lop3.b32 %r2590, %r893, %r2592, %r2571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2594, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2595, %r2571, %r2594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2598, %r2590, %r2595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2601, %r904, %r2592, %r2582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2605, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2606, %r2582, %r2605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2609, %r2601, %r2606;
	// end inline asm
	// begin inline asm
	mov.b32 %r2617, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2628, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2616, %r16405, -2004318072;
	// begin inline asm
	lop3.b32 %r2614, %r893, %r2616, %r2617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2618, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2619, %r2617, %r2618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2622, %r2614, %r2619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2625, %r904, %r2616, %r2628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2630, %r2628, %r2629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2633, %r2625, %r2630;
	// end inline asm
	shr.u32 	%r2638, %r2616, 8;
	// begin inline asm
	lop3.b32 %r2636, %r893, %r2638, %r2617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2640, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2641, %r2617, %r2640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2644, %r2636, %r2641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2647, %r904, %r2638, %r2628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2651, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2652, %r2628, %r2651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2655, %r2647, %r2652;
	// end inline asm
	// begin inline asm
	mov.b32 %r2663, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2674, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2662, %r16414, -2004318072;
	// begin inline asm
	lop3.b32 %r2660, %r893, %r2662, %r2663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2664, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2665, %r2663, %r2664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2668, %r2660, %r2665;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2671, %r904, %r2662, %r2674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2675, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2676, %r2674, %r2675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2679, %r2671, %r2676;
	// end inline asm
	shr.u32 	%r2684, %r2662, 8;
	// begin inline asm
	lop3.b32 %r2682, %r893, %r2684, %r2663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2686, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2687, %r2663, %r2686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2690, %r2682, %r2687;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2693, %r904, %r2684, %r2674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2697, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2698, %r2674, %r2697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2701, %r2693, %r2698;
	// end inline asm
	// begin inline asm
	mov.b32 %r2709, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2720, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2708, %r16415, -2004318072;
	// begin inline asm
	lop3.b32 %r2706, %r893, %r2708, %r2709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2710, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2711, %r2709, %r2710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2714, %r2706, %r2711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2717, %r904, %r2708, %r2720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2721, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2722, %r2720, %r2721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2725, %r2717, %r2722;
	// end inline asm
	shr.u32 	%r2730, %r2708, 8;
	// begin inline asm
	lop3.b32 %r2728, %r893, %r2730, %r2709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2732, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2733, %r2709, %r2732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2736, %r2728, %r2733;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2739, %r904, %r2730, %r2720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2743, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2744, %r2720, %r2743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2747, %r2739, %r2744;
	// end inline asm
	// begin inline asm
	mov.b32 %r2755, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2766, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2754, %r16416, -2004318072;
	// begin inline asm
	lop3.b32 %r2752, %r893, %r2754, %r2755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2756, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2757, %r2755, %r2756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2760, %r2752, %r2757;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2763, %r904, %r2754, %r2766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2767, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2768, %r2766, %r2767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2771, %r2763, %r2768;
	// end inline asm
	shr.u32 	%r2776, %r2754, 8;
	// begin inline asm
	lop3.b32 %r2774, %r893, %r2776, %r2755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2778, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2779, %r2755, %r2778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2782, %r2774, %r2779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2785, %r904, %r2776, %r2766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2789, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2790, %r2766, %r2789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2793, %r2785, %r2790;
	// end inline asm
	// begin inline asm
	mov.b32 %r2801, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2812, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2800, %r16417, -2004318072;
	// begin inline asm
	lop3.b32 %r2798, %r893, %r2800, %r2801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2802, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2803, %r2801, %r2802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2806, %r2798, %r2803;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2809, %r904, %r2800, %r2812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2813, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2814, %r2812, %r2813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2817, %r2809, %r2814;
	// end inline asm
	shr.u32 	%r2822, %r2800, 8;
	// begin inline asm
	lop3.b32 %r2820, %r893, %r2822, %r2801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2824, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2825, %r2801, %r2824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2828, %r2820, %r2825;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2831, %r904, %r2822, %r2812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2835, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2836, %r2812, %r2835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2839, %r2831, %r2836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2977, %r385, %r2484, %r2284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2974, %r385, %r2495, %r2290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2986, %r385, %r2506, %r2296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2983, %r385, %r2517, %r2302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2995, %r385, %r2530, %r2308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2992, %r385, %r2541, %r2314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3004, %r385, %r2552, %r2320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3001, %r385, %r2563, %r2326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3013, %r385, %r2576, %r2332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3010, %r385, %r2587, %r2338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3022, %r385, %r2598, %r2344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3019, %r385, %r2609, %r2350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3031, %r385, %r2622, %r2356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3028, %r385, %r2633, %r2362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3040, %r385, %r2644, %r2368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3037, %r385, %r2655, %r2374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3049, %r403, %r2668, %r2380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3046, %r403, %r2679, %r2386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3058, %r403, %r2690, %r2392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3055, %r403, %r2701, %r2398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3067, %r403, %r2714, %r2404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3064, %r403, %r2725, %r2410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3076, %r403, %r2736, %r2416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3073, %r403, %r2747, %r2422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3085, %r403, %r2760, %r2428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3082, %r403, %r2771, %r2434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3094, %r403, %r2782, %r2440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3091, %r403, %r2793, %r2446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3103, %r403, %r2806, %r2452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3100, %r403, %r2817, %r2458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3112, %r403, %r2828, %r2464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3109, %r403, %r2839, %r2470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2970, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2972, %r2970, %r2974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2975, %r467, %r2977, %r2972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2979, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2981, %r2979, %r2983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2984, %r467, %r2986, %r2981;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2988, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2990, %r2988, %r2992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2993, %r467, %r2995, %r2990;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2997, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2999, %r2997, %r3001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3002, %r467, %r3004, %r2999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3006, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3008, %r3006, %r3010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3011, %r467, %r3013, %r3008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3015, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3017, %r3015, %r3019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3020, %r467, %r3022, %r3017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3024, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3026, %r3024, %r3028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r467, %r3031, %r3026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3033, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3035, %r3033, %r3037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r467, %r3040, %r3035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3042, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3044, %r3042, %r3046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3047, %r470, %r3049, %r3044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3051, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3053, %r3051, %r3055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3056, %r470, %r3058, %r3053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3060, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3062, %r3060, %r3064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3065, %r470, %r3067, %r3062;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3069, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3071, %r3069, %r3073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r470, %r3076, %r3071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3078, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3080, %r3078, %r3082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3083, %r470, %r3085, %r3080;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3087, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3089, %r3087, %r3091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3092, %r470, %r3094, %r3089;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3096, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3098, %r3096, %r3100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3101, %r470, %r3103, %r3098;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3105, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3107, %r3105, %r3109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3110, %r470, %r3112, %r3107;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3114, %r473, %r2977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3117, %r467, %r2974, %r3114;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3121, %r473, %r2986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3124, %r467, %r2983, %r3121;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3128, %r473, %r2995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3131, %r467, %r2992, %r3128;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3135, %r473, %r3004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3138, %r467, %r3001, %r3135;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3142, %r473, %r3013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3145, %r467, %r3010, %r3142;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3149, %r473, %r3022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3152, %r467, %r3019, %r3149;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3156, %r473, %r3031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3159, %r467, %r3028, %r3156;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3163, %r473, %r3040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3166, %r467, %r3037, %r3163;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3170, %r476, %r3049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3173, %r470, %r3046, %r3170;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3177, %r476, %r3058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3180, %r470, %r3055, %r3177;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3184, %r476, %r3067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3187, %r470, %r3064, %r3184;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3191, %r476, %r3076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3194, %r470, %r3073, %r3191;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3198, %r476, %r3085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3201, %r470, %r3082, %r3198;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3205, %r476, %r3094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3208, %r470, %r3091, %r3205;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3212, %r476, %r3103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3215, %r470, %r3100, %r3212;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3219, %r476, %r3112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3222, %r470, %r3109, %r3219;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3393, %r3390}, {%r522, %r528, %r525, %r531}, {%r2975, %r3117}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3402, %r3399}, {%r522, %r528, %r525, %r531}, {%r2984, %r3124}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3411, %r3408}, {%r522, %r528, %r525, %r531}, {%r2993, %r3131}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3420, %r3417}, {%r522, %r528, %r525, %r531}, {%r3002, %r3138}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3429, %r3426}, {%r522, %r528, %r525, %r531}, {%r3011, %r3145}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3438, %r3435}, {%r522, %r528, %r525, %r531}, {%r3020, %r3152}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3447, %r3444}, {%r522, %r528, %r525, %r531}, {%r3029, %r3159}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3456, %r3453}, {%r522, %r528, %r525, %r531}, {%r3038, %r3166}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3465, %r3462}, {%r522, %r528, %r525, %r531}, {%r3047, %r3173}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3474, %r3471}, {%r522, %r528, %r525, %r531}, {%r3056, %r3180}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3483, %r3480}, {%r522, %r528, %r525, %r531}, {%r3065, %r3187}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3492, %r3489}, {%r522, %r528, %r525, %r531}, {%r3074, %r3194}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3501, %r3498}, {%r522, %r528, %r525, %r531}, {%r3083, %r3201}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3510, %r3507}, {%r522, %r528, %r525, %r531}, {%r3092, %r3208}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3519, %r3516}, {%r522, %r528, %r525, %r531}, {%r3101, %r3215}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3528, %r3525}, {%r522, %r528, %r525, %r531}, {%r3110, %r3222}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3386, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3388, %r3386, %r3390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3391, %r572, %r3393, %r3388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3395, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3397, %r3395, %r3399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3400, %r572, %r3402, %r3397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3404, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3406, %r3404, %r3408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3409, %r572, %r3411, %r3406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3413, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3415, %r3413, %r3417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3418, %r572, %r3420, %r3415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3422, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3424, %r3422, %r3426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3427, %r572, %r3429, %r3424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3431, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3433, %r3431, %r3435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3436, %r572, %r3438, %r3433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3440, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3442, %r3440, %r3444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3445, %r572, %r3447, %r3442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3449, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3451, %r3449, %r3453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3454, %r572, %r3456, %r3451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3458, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3460, %r3458, %r3462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3463, %r572, %r3465, %r3460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3467, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3469, %r3467, %r3471;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3472, %r572, %r3474, %r3469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3476, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3478, %r3476, %r3480;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3481, %r572, %r3483, %r3478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3485, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3487, %r3485, %r3489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3490, %r572, %r3492, %r3487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3494, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3496, %r3494, %r3498;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3499, %r572, %r3501, %r3496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3503, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3505, %r3503, %r3507;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3508, %r572, %r3510, %r3505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3512, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3514, %r3512, %r3516;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3517, %r572, %r3519, %r3514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3521, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3523, %r3521, %r3525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3526, %r572, %r3528, %r3523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3530, %r575, %r3393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3533, %r572, %r3390, %r3530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3537, %r575, %r3402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3540, %r572, %r3399, %r3537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3544, %r575, %r3411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3547, %r572, %r3408, %r3544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3551, %r575, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3554, %r572, %r3417, %r3551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3558, %r575, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3561, %r572, %r3426, %r3558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3565, %r575, %r3438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3568, %r572, %r3435, %r3565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3572, %r575, %r3447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3575, %r572, %r3444, %r3572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3579, %r575, %r3456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3582, %r572, %r3453, %r3579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3586, %r575, %r3465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3589, %r572, %r3462, %r3586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3593, %r575, %r3474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3596, %r572, %r3471, %r3593;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3600, %r575, %r3483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3603, %r572, %r3480, %r3600;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3607, %r575, %r3492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3610, %r572, %r3489, %r3607;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3614, %r575, %r3501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3617, %r572, %r3498, %r3614;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3621, %r575, %r3510;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3624, %r572, %r3507, %r3621;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3628, %r575, %r3519;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3631, %r572, %r3516, %r3628;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3635, %r575, %r3528;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3638, %r572, %r3525, %r3635;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3931, %r3934}, {%r610, %r616, %r613, %r619}, {%r3391, %r3533}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3937, %r3940}, {%r610, %r616, %r613, %r619}, {%r3400, %r3540}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3943, %r3946}, {%r610, %r616, %r613, %r619}, {%r3409, %r3547}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3949, %r3952}, {%r610, %r616, %r613, %r619}, {%r3418, %r3554}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3955, %r3958}, {%r610, %r616, %r613, %r619}, {%r3427, %r3561}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3961, %r3964}, {%r610, %r616, %r613, %r619}, {%r3436, %r3568}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3967, %r3970}, {%r610, %r616, %r613, %r619}, {%r3445, %r3575}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3973, %r3976}, {%r610, %r616, %r613, %r619}, {%r3454, %r3582}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3932, %r3935}, {%r610, %r616, %r613, %r619}, {%r3463, %r3589}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3938, %r3941}, {%r610, %r616, %r613, %r619}, {%r3472, %r3596}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3944, %r3947}, {%r610, %r616, %r613, %r619}, {%r3481, %r3603}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3950, %r3953}, {%r610, %r616, %r613, %r619}, {%r3490, %r3610}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3956, %r3959}, {%r610, %r616, %r613, %r619}, {%r3499, %r3617}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3962, %r3965}, {%r610, %r616, %r613, %r619}, {%r3508, %r3624}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3968, %r3971}, {%r610, %r616, %r613, %r619}, {%r3517, %r3631}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3974, %r3977}, {%r610, %r616, %r613, %r619}, {%r3526, %r3638}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3930, %r3931, %r3932;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3933, %r3934, %r3935;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3936, %r3937, %r3938;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3939, %r3940, %r3941;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3942, %r3943, %r3944;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3945, %r3946, %r3947;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3948, %r3949, %r3950;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3951, %r3952, %r3953;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3954, %r3955, %r3956;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3957, %r3958, %r3959;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3960, %r3961, %r3962;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3963, %r3964, %r3965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3966, %r3967, %r3968;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3969, %r3970, %r3971;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3972, %r3973, %r3974;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3975, %r3976, %r3977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3978, %r3931, %r3932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3981, %r3934, %r3935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3984, %r3937, %r3938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3987, %r3940, %r3941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3990, %r3943, %r3944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3993, %r3946, %r3947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3996, %r3949, %r3950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3999, %r3952, %r3953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4002, %r3955, %r3956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4005, %r3958, %r3959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4008, %r3961, %r3962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4011, %r3964, %r3965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4014, %r3967, %r3968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4017, %r3970, %r3971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4020, %r3973, %r3974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4023, %r3976, %r3977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4026, %r235, %r3930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4029, %r235, %r3933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4032, %r235, %r3936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4035, %r235, %r3939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4038, %r235, %r3942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4041, %r235, %r3945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4044, %r235, %r3948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4047, %r235, %r3951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4050, %r235, %r3954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4053, %r235, %r3957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4056, %r235, %r3960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4059, %r235, %r3963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4062, %r235, %r3966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4065, %r235, %r3969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4068, %r235, %r3972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4071, %r235, %r3975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4074, %r237, %r3978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4077, %r237, %r3981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4080, %r237, %r3984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4083, %r237, %r3987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4086, %r237, %r3990;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4089, %r237, %r3993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4092, %r237, %r3996;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4095, %r237, %r3999;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4098, %r237, %r4002;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4101, %r237, %r4005;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4104, %r237, %r4008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4107, %r237, %r4011;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4110, %r237, %r4014;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4113, %r237, %r4017;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4116, %r237, %r4020;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4119, %r237, %r4023;
	// end inline asm
	// begin inline asm
	mov.b32 %r4122, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4123, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4124, %r4026, %r4122;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4127, %r4124, %r4123;
	// end inline asm
	// begin inline asm
	mov.b32 %r4130, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4131, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4132, %r4029, %r4130;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4135, %r4132, %r4131;
	// end inline asm
	// begin inline asm
	mov.b32 %r4138, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4139, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4140, %r4032, %r4138;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4143, %r4140, %r4139;
	// end inline asm
	// begin inline asm
	mov.b32 %r4146, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4148, %r4035, %r4146;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4151, %r4148, %r4147;
	// end inline asm
	// begin inline asm
	mov.b32 %r4154, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4155, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4156, %r4038, %r4154;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4159, %r4156, %r4155;
	// end inline asm
	// begin inline asm
	mov.b32 %r4162, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4163, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4164, %r4041, %r4162;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4167, %r4164, %r4163;
	// end inline asm
	// begin inline asm
	mov.b32 %r4170, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4171, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4172, %r4044, %r4170;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4175, %r4172, %r4171;
	// end inline asm
	// begin inline asm
	mov.b32 %r4178, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4179, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4180, %r4047, %r4178;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4183, %r4180, %r4179;
	// end inline asm
	// begin inline asm
	mov.b32 %r4186, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4187, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4188, %r4050, %r4186;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4191, %r4188, %r4187;
	// end inline asm
	// begin inline asm
	mov.b32 %r4194, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4196, %r4053, %r4194;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4199, %r4196, %r4195;
	// end inline asm
	// begin inline asm
	mov.b32 %r4202, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4204, %r4056, %r4202;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4207, %r4204, %r4203;
	// end inline asm
	// begin inline asm
	mov.b32 %r4210, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4211, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4212, %r4059, %r4210;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4215, %r4212, %r4211;
	// end inline asm
	// begin inline asm
	mov.b32 %r4218, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4219, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4220, %r4062, %r4218;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4223, %r4220, %r4219;
	// end inline asm
	// begin inline asm
	mov.b32 %r4226, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4227, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4228, %r4065, %r4226;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4231, %r4228, %r4227;
	// end inline asm
	// begin inline asm
	mov.b32 %r4234, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4236, %r4068, %r4234;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4239, %r4236, %r4235;
	// end inline asm
	// begin inline asm
	mov.b32 %r4242, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4243, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4244, %r4071, %r4242;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4247, %r4244, %r4243;
	// end inline asm
	// begin inline asm
	mov.b32 %r4250, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4251, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4252, %r4074, %r4250;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4255, %r4252, %r4251;
	// end inline asm
	// begin inline asm
	mov.b32 %r4258, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4259, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4260, %r4077, %r4258;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4263, %r4260, %r4259;
	// end inline asm
	// begin inline asm
	mov.b32 %r4266, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4267, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4268, %r4080, %r4266;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4271, %r4268, %r4267;
	// end inline asm
	// begin inline asm
	mov.b32 %r4274, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4275, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4276, %r4083, %r4274;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4279, %r4276, %r4275;
	// end inline asm
	// begin inline asm
	mov.b32 %r4282, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4283, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4284, %r4086, %r4282;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4287, %r4284, %r4283;
	// end inline asm
	// begin inline asm
	mov.b32 %r4290, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4291, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4292, %r4089, %r4290;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4295, %r4292, %r4291;
	// end inline asm
	// begin inline asm
	mov.b32 %r4298, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4299, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4300, %r4092, %r4298;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4303, %r4300, %r4299;
	// end inline asm
	// begin inline asm
	mov.b32 %r4306, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4307, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4308, %r4095, %r4306;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4311, %r4308, %r4307;
	// end inline asm
	// begin inline asm
	mov.b32 %r4314, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4315, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4316, %r4098, %r4314;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4319, %r4316, %r4315;
	// end inline asm
	// begin inline asm
	mov.b32 %r4322, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4323, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4324, %r4101, %r4322;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4327, %r4324, %r4323;
	// end inline asm
	// begin inline asm
	mov.b32 %r4330, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4331, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4332, %r4104, %r4330;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4335, %r4332, %r4331;
	// end inline asm
	// begin inline asm
	mov.b32 %r4338, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4339, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4340, %r4107, %r4338;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4343, %r4340, %r4339;
	// end inline asm
	// begin inline asm
	mov.b32 %r4346, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4347, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4348, %r4110, %r4346;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4351, %r4348, %r4347;
	// end inline asm
	// begin inline asm
	mov.b32 %r4354, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4355, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4356, %r4113, %r4354;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4359, %r4356, %r4355;
	// end inline asm
	// begin inline asm
	mov.b32 %r4362, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4363, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4364, %r4116, %r4362;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4367, %r4364, %r4363;
	// end inline asm
	// begin inline asm
	mov.b32 %r4370, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4371, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4372, %r4119, %r4370;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4375, %r4372, %r4371;
	// end inline asm
	// begin inline asm
	mov.b32 %r4381, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4379, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4380, %r4381, %r4379;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4383, %r4127, %r4380;
	// end inline asm
	// begin inline asm
	mov.b32 %r4386, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4387, %r4381, %r4386;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4390, %r4135, %r4387;
	// end inline asm
	// begin inline asm
	mov.b32 %r4393, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4394, %r4381, %r4393;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4397, %r4143, %r4394;
	// end inline asm
	// begin inline asm
	mov.b32 %r4400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4401, %r4381, %r4400;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4404, %r4151, %r4401;
	// end inline asm
	mov.u32 	%r4410, 25152;
	// begin inline asm
	prmt.b32 %r4407, %r4383, %r4397, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4411, %r4390, %r4404, %r4410;
	// end inline asm
	shl.b32 	%r4418, %r4411, 4;
	mov.u32 	%r4416, 252645135;
	// begin inline asm
	lop3.b32 %r4415, %r4416, %r4407, %r4418, 202;
	// end inline asm
	xor.b32  	%r16234, %r4415, -2004318072;
	// begin inline asm
	mov.b32 %r4422, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4420, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4421, %r4422, %r4420;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4424, %r4159, %r4421;
	// end inline asm
	// begin inline asm
	mov.b32 %r4427, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4428, %r4422, %r4427;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4431, %r4167, %r4428;
	// end inline asm
	// begin inline asm
	mov.b32 %r4434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4435, %r4422, %r4434;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4438, %r4175, %r4435;
	// end inline asm
	// begin inline asm
	mov.b32 %r4441, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4442, %r4422, %r4441;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4445, %r4183, %r4442;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4448, %r4424, %r4438, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4452, %r4431, %r4445, %r4410;
	// end inline asm
	shl.b32 	%r4459, %r4452, 4;
	// begin inline asm
	lop3.b32 %r4456, %r4416, %r4448, %r4459, 202;
	// end inline asm
	xor.b32  	%r16235, %r4456, -2004318072;
	// begin inline asm
	mov.b32 %r4463, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4461, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4462, %r4463, %r4461;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4465, %r4191, %r4462;
	// end inline asm
	// begin inline asm
	mov.b32 %r4468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4469, %r4463, %r4468;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4472, %r4199, %r4469;
	// end inline asm
	// begin inline asm
	mov.b32 %r4475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4476, %r4463, %r4475;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4479, %r4207, %r4476;
	// end inline asm
	// begin inline asm
	mov.b32 %r4482, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4483, %r4463, %r4482;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4486, %r4215, %r4483;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4489, %r4465, %r4479, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4493, %r4472, %r4486, %r4410;
	// end inline asm
	shl.b32 	%r4500, %r4493, 4;
	// begin inline asm
	lop3.b32 %r4497, %r4416, %r4489, %r4500, 202;
	// end inline asm
	xor.b32  	%r16236, %r4497, -2004318072;
	// begin inline asm
	mov.b32 %r4504, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4502, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4503, %r4504, %r4502;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4506, %r4223, %r4503;
	// end inline asm
	// begin inline asm
	mov.b32 %r4509, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4510, %r4504, %r4509;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4513, %r4231, %r4510;
	// end inline asm
	// begin inline asm
	mov.b32 %r4516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4517, %r4504, %r4516;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4520, %r4239, %r4517;
	// end inline asm
	// begin inline asm
	mov.b32 %r4523, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4524, %r4504, %r4523;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4527, %r4247, %r4524;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4530, %r4506, %r4520, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4534, %r4513, %r4527, %r4410;
	// end inline asm
	shl.b32 	%r4541, %r4534, 4;
	// begin inline asm
	lop3.b32 %r4538, %r4416, %r4530, %r4541, 202;
	// end inline asm
	xor.b32  	%r16237, %r4538, -2004318072;
	// begin inline asm
	mov.b32 %r4545, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4543, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4544, %r4545, %r4543;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4547, %r4255, %r4544;
	// end inline asm
	// begin inline asm
	mov.b32 %r4550, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4551, %r4545, %r4550;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4554, %r4263, %r4551;
	// end inline asm
	// begin inline asm
	mov.b32 %r4557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4558, %r4545, %r4557;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4561, %r4271, %r4558;
	// end inline asm
	// begin inline asm
	mov.b32 %r4564, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4565, %r4545, %r4564;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4568, %r4279, %r4565;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4571, %r4547, %r4561, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4575, %r4554, %r4568, %r4410;
	// end inline asm
	shl.b32 	%r4582, %r4575, 4;
	// begin inline asm
	lop3.b32 %r4579, %r4416, %r4571, %r4582, 202;
	// end inline asm
	xor.b32  	%r16238, %r4579, -2004318072;
	// begin inline asm
	mov.b32 %r4586, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4585, %r4586, %r4584;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4588, %r4287, %r4585;
	// end inline asm
	// begin inline asm
	mov.b32 %r4591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4592, %r4586, %r4591;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4595, %r4295, %r4592;
	// end inline asm
	// begin inline asm
	mov.b32 %r4598, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4599, %r4586, %r4598;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4602, %r4303, %r4599;
	// end inline asm
	// begin inline asm
	mov.b32 %r4605, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4606, %r4586, %r4605;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4609, %r4311, %r4606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4612, %r4588, %r4602, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4616, %r4595, %r4609, %r4410;
	// end inline asm
	shl.b32 	%r4623, %r4616, 4;
	// begin inline asm
	lop3.b32 %r4620, %r4416, %r4612, %r4623, 202;
	// end inline asm
	xor.b32  	%r16239, %r4620, -2004318072;
	// begin inline asm
	mov.b32 %r4627, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4625, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4626, %r4627, %r4625;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4629, %r4319, %r4626;
	// end inline asm
	// begin inline asm
	mov.b32 %r4632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4633, %r4627, %r4632;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4636, %r4327, %r4633;
	// end inline asm
	// begin inline asm
	mov.b32 %r4639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4640, %r4627, %r4639;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4643, %r4335, %r4640;
	// end inline asm
	// begin inline asm
	mov.b32 %r4646, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4647, %r4627, %r4646;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4650, %r4343, %r4647;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4653, %r4629, %r4643, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4657, %r4636, %r4650, %r4410;
	// end inline asm
	shl.b32 	%r4664, %r4657, 4;
	// begin inline asm
	lop3.b32 %r4661, %r4416, %r4653, %r4664, 202;
	// end inline asm
	xor.b32  	%r16240, %r4661, -2004318072;
	// begin inline asm
	mov.b32 %r4668, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4666, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4667, %r4668, %r4666;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4670, %r4351, %r4667;
	// end inline asm
	// begin inline asm
	mov.b32 %r4673, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4674, %r4668, %r4673;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4677, %r4359, %r4674;
	// end inline asm
	// begin inline asm
	mov.b32 %r4680, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4681, %r4668, %r4680;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4684, %r4367, %r4681;
	// end inline asm
	// begin inline asm
	mov.b32 %r4687, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4688, %r4668, %r4687;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4691, %r4375, %r4688;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4694, %r4670, %r4684, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4698, %r4677, %r4691, %r4410;
	// end inline asm
	shl.b32 	%r4705, %r4698, 4;
	// begin inline asm
	lop3.b32 %r4702, %r4416, %r4694, %r4705, 202;
	// end inline asm
	xor.b32  	%r16241, %r4702, -2004318072;
	setp.eq.s32 	%p327, %r16443, 0;
	selp.b32 	%r16242, 0, 4161, %p327;
	add.s32 	%r16243, %r135, %r16242;
	mul.wide.u32 	%rd109, %r16243, 4;
	add.s64 	%rd110, %rd53, %rd109;
	st.shared.u32 	[%rd110], %r16234;
	add.s32 	%r16244, %r136, %r16242;
	mul.wide.u32 	%rd111, %r16244, 4;
	add.s64 	%rd112, %rd53, %rd111;
	st.shared.u32 	[%rd112], %r16235;
	add.s32 	%r16245, %r137, %r16242;
	mul.wide.u32 	%rd113, %r16245, 4;
	add.s64 	%rd114, %rd53, %rd113;
	st.shared.u32 	[%rd114], %r16236;
	add.s32 	%r16246, %r138, %r16242;
	mul.wide.u32 	%rd115, %r16246, 4;
	add.s64 	%rd116, %rd53, %rd115;
	st.shared.u32 	[%rd116], %r16237;
	add.s32 	%r16247, %r139, %r16242;
	mul.wide.u32 	%rd117, %r16247, 4;
	add.s64 	%rd118, %rd53, %rd117;
	st.shared.u32 	[%rd118], %r16238;
	add.s32 	%r16248, %r140, %r16242;
	mul.wide.u32 	%rd119, %r16248, 4;
	add.s64 	%rd120, %rd53, %rd119;
	st.shared.u32 	[%rd120], %r16239;
	add.s32 	%r16249, %r141, %r16242;
	mul.wide.u32 	%rd121, %r16249, 4;
	add.s64 	%rd122, %rd53, %rd121;
	st.shared.u32 	[%rd122], %r16240;
	add.s32 	%r16250, %r142, %r16242;
	mul.wide.u32 	%rd123, %r16250, 4;
	add.s64 	%rd124, %rd53, %rd123;
	st.shared.u32 	[%rd124], %r16241;
	ld.shared.u32 	%r16394, [%rd94];
	ld.shared.u32 	%r16395, [%rd96];
	ld.shared.u32 	%r16396, [%rd98];
	ld.shared.u32 	%r16397, [%rd100];
	ld.shared.u32 	%r16406, [%rd102];
	ld.shared.u32 	%r16407, [%rd104];
	ld.shared.u32 	%r16408, [%rd106];
	ld.shared.u32 	%r16409, [%rd108];
	// begin inline asm
	mov.b32 %r4711, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4722, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4710, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r4708, %r893, %r4710, %r4711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4712, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4713, %r4711, %r4712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4716, %r4708, %r4713;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4719, %r904, %r4710, %r4722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4723, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4724, %r4722, %r4723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4727, %r4719, %r4724;
	// end inline asm
	shr.u32 	%r4732, %r4710, 8;
	// begin inline asm
	lop3.b32 %r4730, %r893, %r4732, %r4711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4734, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4735, %r4711, %r4734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4738, %r4730, %r4735;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4741, %r904, %r4732, %r4722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4745, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4746, %r4722, %r4745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4749, %r4741, %r4746;
	// end inline asm
	// begin inline asm
	mov.b32 %r4757, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4768, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4756, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r4754, %r893, %r4756, %r4757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4758, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4759, %r4757, %r4758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4762, %r4754, %r4759;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4765, %r904, %r4756, %r4768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4769, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4770, %r4768, %r4769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4773, %r4765, %r4770;
	// end inline asm
	shr.u32 	%r4778, %r4756, 8;
	// begin inline asm
	lop3.b32 %r4776, %r893, %r4778, %r4757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4780, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4781, %r4757, %r4780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4784, %r4776, %r4781;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4787, %r904, %r4778, %r4768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4791, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4792, %r4768, %r4791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4795, %r4787, %r4792;
	// end inline asm
	// begin inline asm
	mov.b32 %r4803, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4814, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4802, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r4800, %r893, %r4802, %r4803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4804, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4805, %r4803, %r4804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4808, %r4800, %r4805;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4811, %r904, %r4802, %r4814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4815, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4816, %r4814, %r4815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4819, %r4811, %r4816;
	// end inline asm
	shr.u32 	%r4824, %r4802, 8;
	// begin inline asm
	lop3.b32 %r4822, %r893, %r4824, %r4803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4826, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4827, %r4803, %r4826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4830, %r4822, %r4827;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4833, %r904, %r4824, %r4814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4837, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4838, %r4814, %r4837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4841, %r4833, %r4838;
	// end inline asm
	// begin inline asm
	mov.b32 %r4849, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4860, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4848, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r4846, %r893, %r4848, %r4849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4850, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4851, %r4849, %r4850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4854, %r4846, %r4851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4857, %r904, %r4848, %r4860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4861, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4862, %r4860, %r4861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4865, %r4857, %r4862;
	// end inline asm
	shr.u32 	%r4870, %r4848, 8;
	// begin inline asm
	lop3.b32 %r4868, %r893, %r4870, %r4849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4872, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4873, %r4849, %r4872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4876, %r4868, %r4873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4879, %r904, %r4870, %r4860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4883, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4884, %r4860, %r4883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4887, %r4879, %r4884;
	// end inline asm
	// begin inline asm
	mov.b32 %r4895, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4906, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4894, %r16406, -2004318072;
	// begin inline asm
	lop3.b32 %r4892, %r893, %r4894, %r4895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4896, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4897, %r4895, %r4896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4900, %r4892, %r4897;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4903, %r904, %r4894, %r4906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4907, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4908, %r4906, %r4907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4911, %r4903, %r4908;
	// end inline asm
	shr.u32 	%r4916, %r4894, 8;
	// begin inline asm
	lop3.b32 %r4914, %r893, %r4916, %r4895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4918, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4919, %r4895, %r4918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4922, %r4914, %r4919;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4925, %r904, %r4916, %r4906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4929, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4930, %r4906, %r4929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4933, %r4925, %r4930;
	// end inline asm
	// begin inline asm
	mov.b32 %r4941, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4952, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4940, %r16407, -2004318072;
	// begin inline asm
	lop3.b32 %r4938, %r893, %r4940, %r4941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4943, %r4941, %r4942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4946, %r4938, %r4943;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4949, %r904, %r4940, %r4952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4953, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4954, %r4952, %r4953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4957, %r4949, %r4954;
	// end inline asm
	shr.u32 	%r4962, %r4940, 8;
	// begin inline asm
	lop3.b32 %r4960, %r893, %r4962, %r4941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4965, %r4941, %r4964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4968, %r4960, %r4965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4971, %r904, %r4962, %r4952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4975, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4976, %r4952, %r4975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4979, %r4971, %r4976;
	// end inline asm
	// begin inline asm
	mov.b32 %r4987, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4998, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4986, %r16408, -2004318072;
	// begin inline asm
	lop3.b32 %r4984, %r893, %r4986, %r4987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4988, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4989, %r4987, %r4988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4992, %r4984, %r4989;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4995, %r904, %r4986, %r4998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5000, %r4998, %r4999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5003, %r4995, %r5000;
	// end inline asm
	shr.u32 	%r5008, %r4986, 8;
	// begin inline asm
	lop3.b32 %r5006, %r893, %r5008, %r4987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5010, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5011, %r4987, %r5010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5014, %r5006, %r5011;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5017, %r904, %r5008, %r4998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5022, %r4998, %r5021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5025, %r5017, %r5022;
	// end inline asm
	// begin inline asm
	mov.b32 %r5033, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5044, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r5032, %r16409, -2004318072;
	// begin inline asm
	lop3.b32 %r5030, %r893, %r5032, %r5033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5034, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5035, %r5033, %r5034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5038, %r5030, %r5035;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5041, %r904, %r5032, %r5044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5045, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5046, %r5044, %r5045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5049, %r5041, %r5046;
	// end inline asm
	shr.u32 	%r5054, %r5032, 8;
	// begin inline asm
	lop3.b32 %r5052, %r893, %r5054, %r5033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5057, %r5033, %r5056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5060, %r5052, %r5057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5063, %r904, %r5054, %r5044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5068, %r5044, %r5067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5071, %r5063, %r5068;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5074, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5076, %r5074, %r4716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5079, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5081, %r5079, %r4727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5084, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5086, %r5084, %r4738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5089, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5091, %r5089, %r4749;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5094, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5096, %r5094, %r4762;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5099, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5101, %r5099, %r4773;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5104, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5106, %r5104, %r4784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5109, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5111, %r5109, %r4795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5114, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5116, %r5114, %r4808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5119, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5121, %r5119, %r4819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5124, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5126, %r5124, %r4830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5129, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5131, %r5129, %r4841;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5134, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5136, %r5134, %r4854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5139, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5141, %r5139, %r4865;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5144, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5146, %r5144, %r4876;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5149, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5151, %r5149, %r4887;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5154, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5156, %r5154, %r4900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5159, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5161, %r5159, %r4911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5164, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5166, %r5164, %r4922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5169, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5171, %r5169, %r4933;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5174, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5176, %r5174, %r4946;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5179, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5181, %r5179, %r4957;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5184, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5186, %r5184, %r4968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5189, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5191, %r5189, %r4979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5194, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5196, %r5194, %r4992;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5199, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5201, %r5199, %r5003;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5204, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5206, %r5204, %r5014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5209, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5211, %r5209, %r5025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5214, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5216, %r5214, %r5038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5219, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5221, %r5219, %r5049;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5224, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5226, %r5224, %r5060;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5229, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5231, %r5229, %r5071;
	// end inline asm
	// begin inline asm
	mov.b32 %r5239, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5250, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5236, %r893, %r1918, %r5239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5240, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5241, %r5239, %r5240;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5244, %r5236, %r5241;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5247, %r904, %r1918, %r5250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5252, %r5250, %r5251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5255, %r5247, %r5252;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5258, %r893, %r1940, %r5239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5263, %r5239, %r5262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5266, %r5258, %r5263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5269, %r904, %r1940, %r5250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5274, %r5250, %r5273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5277, %r5269, %r5274;
	// end inline asm
	// begin inline asm
	mov.b32 %r5285, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5296, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5282, %r893, %r1964, %r5285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5286, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5287, %r5285, %r5286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5290, %r5282, %r5287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5293, %r904, %r1964, %r5296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5298, %r5296, %r5297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5301, %r5293, %r5298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5304, %r893, %r1986, %r5285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5309, %r5285, %r5308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5312, %r5304, %r5309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5315, %r904, %r1986, %r5296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5320, %r5296, %r5319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5323, %r5315, %r5320;
	// end inline asm
	// begin inline asm
	mov.b32 %r5331, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5342, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5328, %r893, %r2010, %r5331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5333, %r5331, %r5332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5336, %r5328, %r5333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5339, %r904, %r2010, %r5342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5344, %r5342, %r5343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5347, %r5339, %r5344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5350, %r893, %r2032, %r5331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5354, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5355, %r5331, %r5354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5358, %r5350, %r5355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5361, %r904, %r2032, %r5342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5366, %r5342, %r5365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5369, %r5361, %r5366;
	// end inline asm
	// begin inline asm
	mov.b32 %r5377, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5388, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5374, %r893, %r2056, %r5377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5379, %r5377, %r5378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5382, %r5374, %r5379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5385, %r904, %r2056, %r5388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5390, %r5388, %r5389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5393, %r5385, %r5390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5396, %r893, %r2078, %r5377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5401, %r5377, %r5400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5404, %r5396, %r5401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5407, %r904, %r2078, %r5388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5412, %r5388, %r5411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5415, %r5407, %r5412;
	// end inline asm
	// begin inline asm
	mov.b32 %r5423, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5434, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5420, %r893, %r2102, %r5423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5425, %r5423, %r5424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5428, %r5420, %r5425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5431, %r904, %r2102, %r5434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5436, %r5434, %r5435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5439, %r5431, %r5436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5442, %r893, %r2124, %r5423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5447, %r5423, %r5446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5450, %r5442, %r5447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5453, %r904, %r2124, %r5434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5458, %r5434, %r5457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5461, %r5453, %r5458;
	// end inline asm
	// begin inline asm
	mov.b32 %r5469, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5480, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5466, %r893, %r2148, %r5469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5471, %r5469, %r5470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5474, %r5466, %r5471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5477, %r904, %r2148, %r5480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5482, %r5480, %r5481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5485, %r5477, %r5482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5488, %r893, %r2170, %r5469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5493, %r5469, %r5492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5496, %r5488, %r5493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5499, %r904, %r2170, %r5480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5504, %r5480, %r5503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5507, %r5499, %r5504;
	// end inline asm
	// begin inline asm
	mov.b32 %r5515, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5526, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5512, %r893, %r2194, %r5515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5517, %r5515, %r5516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5520, %r5512, %r5517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5523, %r904, %r2194, %r5526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5528, %r5526, %r5527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5531, %r5523, %r5528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5534, %r893, %r2216, %r5515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5539, %r5515, %r5538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5542, %r5534, %r5539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5545, %r904, %r2216, %r5526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5550, %r5526, %r5549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5553, %r5545, %r5550;
	// end inline asm
	// begin inline asm
	mov.b32 %r5561, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5572, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5558, %r893, %r2240, %r5561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5563, %r5561, %r5562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5566, %r5558, %r5563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5569, %r904, %r2240, %r5572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5574, %r5572, %r5573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5577, %r5569, %r5574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5580, %r893, %r2262, %r5561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5585, %r5561, %r5584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5588, %r5580, %r5585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5591, %r904, %r2262, %r5572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5596, %r5572, %r5595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5599, %r5591, %r5596;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5602, %r313, %r5244, %r5076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5606, %r313, %r5255, %r5081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5610, %r313, %r5266, %r5086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5614, %r313, %r5277, %r5091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5618, %r313, %r5290, %r5096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5622, %r313, %r5301, %r5101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5626, %r313, %r5312, %r5106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5630, %r313, %r5323, %r5111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5634, %r313, %r5336, %r5116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5638, %r313, %r5347, %r5121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5642, %r313, %r5358, %r5126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5646, %r313, %r5369, %r5131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5650, %r313, %r5382, %r5136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5654, %r313, %r5393, %r5141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5658, %r313, %r5404, %r5146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5662, %r313, %r5415, %r5151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5666, %r331, %r5428, %r5156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5670, %r331, %r5439, %r5161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5674, %r331, %r5450, %r5166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5678, %r331, %r5461, %r5171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5682, %r331, %r5474, %r5176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5686, %r331, %r5485, %r5181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5690, %r331, %r5496, %r5186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5694, %r331, %r5507, %r5191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5698, %r331, %r5520, %r5196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5702, %r331, %r5531, %r5201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5706, %r331, %r5542, %r5206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5710, %r331, %r5553, %r5211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5714, %r331, %r5566, %r5216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5718, %r331, %r5577, %r5221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5722, %r331, %r5588, %r5226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5726, %r331, %r5599, %r5231;
	// end inline asm
	// begin inline asm
	mov.b32 %r5735, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5746, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5732, %r893, %r2478, %r5735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5736, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5737, %r5735, %r5736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5740, %r5732, %r5737;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5743, %r904, %r2478, %r5746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5747, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5748, %r5746, %r5747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5751, %r5743, %r5748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5754, %r893, %r2500, %r5735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5758, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5759, %r5735, %r5758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5762, %r5754, %r5759;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5765, %r904, %r2500, %r5746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5769, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5770, %r5746, %r5769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5773, %r5765, %r5770;
	// end inline asm
	// begin inline asm
	mov.b32 %r5781, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5792, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5778, %r893, %r2524, %r5781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5782, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5783, %r5781, %r5782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5786, %r5778, %r5783;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5789, %r904, %r2524, %r5792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5793, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5794, %r5792, %r5793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5797, %r5789, %r5794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5800, %r893, %r2546, %r5781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5804, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5805, %r5781, %r5804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5808, %r5800, %r5805;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5811, %r904, %r2546, %r5792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5815, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5816, %r5792, %r5815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5819, %r5811, %r5816;
	// end inline asm
	// begin inline asm
	mov.b32 %r5827, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5838, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5824, %r893, %r2570, %r5827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5828, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5829, %r5827, %r5828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5832, %r5824, %r5829;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5835, %r904, %r2570, %r5838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5839, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5840, %r5838, %r5839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5843, %r5835, %r5840;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5846, %r893, %r2592, %r5827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5850, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5851, %r5827, %r5850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5854, %r5846, %r5851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5857, %r904, %r2592, %r5838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5861, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5862, %r5838, %r5861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5865, %r5857, %r5862;
	// end inline asm
	// begin inline asm
	mov.b32 %r5873, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5884, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5870, %r893, %r2616, %r5873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5874, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5875, %r5873, %r5874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5878, %r5870, %r5875;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5881, %r904, %r2616, %r5884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5885, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5886, %r5884, %r5885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5889, %r5881, %r5886;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5892, %r893, %r2638, %r5873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5896, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5897, %r5873, %r5896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5900, %r5892, %r5897;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5903, %r904, %r2638, %r5884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5907, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5908, %r5884, %r5907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5911, %r5903, %r5908;
	// end inline asm
	// begin inline asm
	mov.b32 %r5919, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5930, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5916, %r893, %r2662, %r5919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5920, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5921, %r5919, %r5920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5924, %r5916, %r5921;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5927, %r904, %r2662, %r5930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5931, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5932, %r5930, %r5931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5935, %r5927, %r5932;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5938, %r893, %r2684, %r5919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5943, %r5919, %r5942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5946, %r5938, %r5943;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5949, %r904, %r2684, %r5930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5953, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5954, %r5930, %r5953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5957, %r5949, %r5954;
	// end inline asm
	// begin inline asm
	mov.b32 %r5965, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5976, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5962, %r893, %r2708, %r5965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5966, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5967, %r5965, %r5966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5970, %r5962, %r5967;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5973, %r904, %r2708, %r5976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5977, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5978, %r5976, %r5977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5981, %r5973, %r5978;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5984, %r893, %r2730, %r5965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5988, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5989, %r5965, %r5988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5992, %r5984, %r5989;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5995, %r904, %r2730, %r5976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6000, %r5976, %r5999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6003, %r5995, %r6000;
	// end inline asm
	// begin inline asm
	mov.b32 %r6011, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6022, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6008, %r893, %r2754, %r6011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6012, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6013, %r6011, %r6012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6016, %r6008, %r6013;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6019, %r904, %r2754, %r6022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6023, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6024, %r6022, %r6023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6027, %r6019, %r6024;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6030, %r893, %r2776, %r6011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6034, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6035, %r6011, %r6034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6038, %r6030, %r6035;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6041, %r904, %r2776, %r6022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6045, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6046, %r6022, %r6045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6049, %r6041, %r6046;
	// end inline asm
	// begin inline asm
	mov.b32 %r6057, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6068, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6054, %r893, %r2800, %r6057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6058, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6059, %r6057, %r6058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6062, %r6054, %r6059;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6065, %r904, %r2800, %r6068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6069, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6070, %r6068, %r6069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6073, %r6065, %r6070;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6076, %r893, %r2822, %r6057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6080, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6081, %r6057, %r6080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6084, %r6076, %r6081;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6087, %r904, %r2822, %r6068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6091, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6092, %r6068, %r6091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6095, %r6087, %r6092;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6098, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6100, %r6098, %r5740, %r5602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6104, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6106, %r6104, %r5751, %r5606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6110, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6112, %r6110, %r5762, %r5610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6116, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6118, %r6116, %r5773, %r5614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6122, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6124, %r6122, %r5786, %r5618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6128, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6130, %r6128, %r5797, %r5622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6134, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6136, %r6134, %r5808, %r5626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6140, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6142, %r6140, %r5819, %r5630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6146, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6148, %r6146, %r5832, %r5634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6152, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6154, %r6152, %r5843, %r5638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6158, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6160, %r6158, %r5854, %r5642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6164, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6166, %r6164, %r5865, %r5646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6170, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6172, %r6170, %r5878, %r5650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6176, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6178, %r6176, %r5889, %r5654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6182, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6184, %r6182, %r5900, %r5658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6188, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6190, %r6188, %r5911, %r5662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6194, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6196, %r6194, %r5924, %r5666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6200, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6202, %r6200, %r5935, %r5670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6206, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6208, %r6206, %r5946, %r5674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6212, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6214, %r6212, %r5957, %r5678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6218, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6220, %r6218, %r5970, %r5682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6224, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6226, %r6224, %r5981, %r5686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6230, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6232, %r6230, %r5992, %r5690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6236, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6238, %r6236, %r6003, %r5694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6242, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6244, %r6242, %r6016, %r5698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6248, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6250, %r6248, %r6027, %r5702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6254, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6256, %r6254, %r6038, %r5706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6260, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6262, %r6260, %r6049, %r5710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6266, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6268, %r6266, %r6062, %r5714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6272, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6274, %r6272, %r6073, %r5718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6278, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6280, %r6278, %r6084, %r5722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6284, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6286, %r6284, %r6095, %r5726;
	// end inline asm
	// begin inline asm
	mov.b32 %r6295, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6306, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6292, %r893, %r894, %r6295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6296, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6297, %r6295, %r6296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6300, %r6292, %r6297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6303, %r904, %r894, %r6306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6307, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6308, %r6306, %r6307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6311, %r6303, %r6308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6314, %r893, %r916, %r6295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6318, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6319, %r6295, %r6318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6322, %r6314, %r6319;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6325, %r904, %r916, %r6306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6329, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6330, %r6306, %r6329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6333, %r6325, %r6330;
	// end inline asm
	// begin inline asm
	mov.b32 %r6341, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6352, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6338, %r893, %r940, %r6341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6343, %r6341, %r6342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6346, %r6338, %r6343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6349, %r904, %r940, %r6352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6354, %r6352, %r6353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6357, %r6349, %r6354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6360, %r893, %r962, %r6341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6364, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6365, %r6341, %r6364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6368, %r6360, %r6365;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6371, %r904, %r962, %r6352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6375, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6376, %r6352, %r6375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6379, %r6371, %r6376;
	// end inline asm
	// begin inline asm
	mov.b32 %r6387, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6398, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6384, %r893, %r986, %r6387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6389, %r6387, %r6388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6392, %r6384, %r6389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6395, %r904, %r986, %r6398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6400, %r6398, %r6399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6403, %r6395, %r6400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6406, %r893, %r1008, %r6387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6411, %r6387, %r6410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6414, %r6406, %r6411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6417, %r904, %r1008, %r6398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6421, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6422, %r6398, %r6421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6425, %r6417, %r6422;
	// end inline asm
	// begin inline asm
	mov.b32 %r6433, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6444, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6430, %r893, %r1032, %r6433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6435, %r6433, %r6434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6438, %r6430, %r6435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6441, %r904, %r1032, %r6444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6446, %r6444, %r6445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6449, %r6441, %r6446;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6452, %r893, %r1054, %r6433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6456, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6457, %r6433, %r6456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6460, %r6452, %r6457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6463, %r904, %r1054, %r6444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6467, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6468, %r6444, %r6467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6471, %r6463, %r6468;
	// end inline asm
	// begin inline asm
	mov.b32 %r6479, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6490, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6476, %r893, %r1078, %r6479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6481, %r6479, %r6480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6484, %r6476, %r6481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6487, %r904, %r1078, %r6490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6492, %r6490, %r6491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6495, %r6487, %r6492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6498, %r893, %r1100, %r6479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6502, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6503, %r6479, %r6502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6506, %r6498, %r6503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6509, %r904, %r1100, %r6490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6513, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6514, %r6490, %r6513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6517, %r6509, %r6514;
	// end inline asm
	// begin inline asm
	mov.b32 %r6525, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6536, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6522, %r893, %r1124, %r6525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6526, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6527, %r6525, %r6526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6530, %r6522, %r6527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6533, %r904, %r1124, %r6536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6538, %r6536, %r6537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6541, %r6533, %r6538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6544, %r893, %r1146, %r6525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6548, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6549, %r6525, %r6548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6552, %r6544, %r6549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6555, %r904, %r1146, %r6536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6559, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6560, %r6536, %r6559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6563, %r6555, %r6560;
	// end inline asm
	// begin inline asm
	mov.b32 %r6571, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6582, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6568, %r893, %r1170, %r6571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6572, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6573, %r6571, %r6572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6576, %r6568, %r6573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6579, %r904, %r1170, %r6582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6584, %r6582, %r6583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6587, %r6579, %r6584;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6590, %r893, %r1192, %r6571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6594, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6595, %r6571, %r6594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6598, %r6590, %r6595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6601, %r904, %r1192, %r6582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6605, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6606, %r6582, %r6605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6609, %r6601, %r6606;
	// end inline asm
	// begin inline asm
	mov.b32 %r6617, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6628, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6614, %r893, %r1216, %r6617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6618, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6619, %r6617, %r6618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6622, %r6614, %r6619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6625, %r904, %r1216, %r6628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6630, %r6628, %r6629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6633, %r6625, %r6630;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6636, %r893, %r1238, %r6617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6640, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6641, %r6617, %r6640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6644, %r6636, %r6641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6647, %r904, %r1238, %r6628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6651, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6652, %r6628, %r6651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6655, %r6647, %r6652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6793, %r385, %r6300, %r6100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6790, %r385, %r6311, %r6106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6802, %r385, %r6322, %r6112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6799, %r385, %r6333, %r6118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6811, %r385, %r6346, %r6124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6808, %r385, %r6357, %r6130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6820, %r385, %r6368, %r6136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6817, %r385, %r6379, %r6142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6829, %r385, %r6392, %r6148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6826, %r385, %r6403, %r6154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6838, %r385, %r6414, %r6160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6835, %r385, %r6425, %r6166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6847, %r385, %r6438, %r6172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6844, %r385, %r6449, %r6178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6856, %r385, %r6460, %r6184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6853, %r385, %r6471, %r6190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6865, %r403, %r6484, %r6196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6862, %r403, %r6495, %r6202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6874, %r403, %r6506, %r6208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6871, %r403, %r6517, %r6214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6883, %r403, %r6530, %r6220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6880, %r403, %r6541, %r6226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6892, %r403, %r6552, %r6232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6889, %r403, %r6563, %r6238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6901, %r403, %r6576, %r6244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6898, %r403, %r6587, %r6250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6910, %r403, %r6598, %r6256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6907, %r403, %r6609, %r6262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6919, %r403, %r6622, %r6268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6916, %r403, %r6633, %r6274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6928, %r403, %r6644, %r6280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6925, %r403, %r6655, %r6286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6786, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6788, %r6786, %r6790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6791, %r467, %r6793, %r6788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6795, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6797, %r6795, %r6799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6800, %r467, %r6802, %r6797;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6804, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6806, %r6804, %r6808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6809, %r467, %r6811, %r6806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6813, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6815, %r6813, %r6817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6818, %r467, %r6820, %r6815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6822, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6824, %r6822, %r6826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r467, %r6829, %r6824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6831, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6833, %r6831, %r6835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6836, %r467, %r6838, %r6833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6840, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6842, %r6840, %r6844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r467, %r6847, %r6842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6849, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6851, %r6849, %r6853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6854, %r467, %r6856, %r6851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6858, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6860, %r6858, %r6862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6863, %r470, %r6865, %r6860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6867, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6869, %r6867, %r6871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6872, %r470, %r6874, %r6869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6876, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6878, %r6876, %r6880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6881, %r470, %r6883, %r6878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6885, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6887, %r6885, %r6889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6890, %r470, %r6892, %r6887;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6894, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6896, %r6894, %r6898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6899, %r470, %r6901, %r6896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6903, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6905, %r6903, %r6907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6908, %r470, %r6910, %r6905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6912, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6914, %r6912, %r6916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6917, %r470, %r6919, %r6914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6921, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6923, %r6921, %r6925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6926, %r470, %r6928, %r6923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6930, %r473, %r6793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6933, %r467, %r6790, %r6930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6937, %r473, %r6802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6940, %r467, %r6799, %r6937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6944, %r473, %r6811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6947, %r467, %r6808, %r6944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6951, %r473, %r6820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6954, %r467, %r6817, %r6951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6958, %r473, %r6829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6961, %r467, %r6826, %r6958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6965, %r473, %r6838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6968, %r467, %r6835, %r6965;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6972, %r473, %r6847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6975, %r467, %r6844, %r6972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6979, %r473, %r6856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6982, %r467, %r6853, %r6979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6986, %r476, %r6865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6989, %r470, %r6862, %r6986;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6993, %r476, %r6874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6996, %r470, %r6871, %r6993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7000, %r476, %r6883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7003, %r470, %r6880, %r7000;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7007, %r476, %r6892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7010, %r470, %r6889, %r7007;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7014, %r476, %r6901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7017, %r470, %r6898, %r7014;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7021, %r476, %r6910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7024, %r470, %r6907, %r7021;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7028, %r476, %r6919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7031, %r470, %r6916, %r7028;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7035, %r476, %r6928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7038, %r470, %r6925, %r7035;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7209, %r7206}, {%r522, %r528, %r525, %r531}, {%r6791, %r6933}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7218, %r7215}, {%r522, %r528, %r525, %r531}, {%r6800, %r6940}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7227, %r7224}, {%r522, %r528, %r525, %r531}, {%r6809, %r6947}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7236, %r7233}, {%r522, %r528, %r525, %r531}, {%r6818, %r6954}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7245, %r7242}, {%r522, %r528, %r525, %r531}, {%r6827, %r6961}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7254, %r7251}, {%r522, %r528, %r525, %r531}, {%r6836, %r6968}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7263, %r7260}, {%r522, %r528, %r525, %r531}, {%r6845, %r6975}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7272, %r7269}, {%r522, %r528, %r525, %r531}, {%r6854, %r6982}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7281, %r7278}, {%r522, %r528, %r525, %r531}, {%r6863, %r6989}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7290, %r7287}, {%r522, %r528, %r525, %r531}, {%r6872, %r6996}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7299, %r7296}, {%r522, %r528, %r525, %r531}, {%r6881, %r7003}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7308, %r7305}, {%r522, %r528, %r525, %r531}, {%r6890, %r7010}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7317, %r7314}, {%r522, %r528, %r525, %r531}, {%r6899, %r7017}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7326, %r7323}, {%r522, %r528, %r525, %r531}, {%r6908, %r7024}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7335, %r7332}, {%r522, %r528, %r525, %r531}, {%r6917, %r7031}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7344, %r7341}, {%r522, %r528, %r525, %r531}, {%r6926, %r7038}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7202, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7204, %r7202, %r7206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7207, %r572, %r7209, %r7204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7211, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7213, %r7211, %r7215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7216, %r572, %r7218, %r7213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7220, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7222, %r7220, %r7224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7225, %r572, %r7227, %r7222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7229, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7231, %r7229, %r7233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7234, %r572, %r7236, %r7231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7238, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7240, %r7238, %r7242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7243, %r572, %r7245, %r7240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7247, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7249, %r7247, %r7251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7252, %r572, %r7254, %r7249;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7256, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7258, %r7256, %r7260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7261, %r572, %r7263, %r7258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7265, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7267, %r7265, %r7269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7270, %r572, %r7272, %r7267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7274, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7276, %r7274, %r7278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7279, %r572, %r7281, %r7276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7283, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7285, %r7283, %r7287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7288, %r572, %r7290, %r7285;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7292, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7294, %r7292, %r7296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7297, %r572, %r7299, %r7294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7301, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7303, %r7301, %r7305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7306, %r572, %r7308, %r7303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7310, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7312, %r7310, %r7314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7315, %r572, %r7317, %r7312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7319, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7321, %r7319, %r7323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7324, %r572, %r7326, %r7321;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7328, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7330, %r7328, %r7332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7333, %r572, %r7335, %r7330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7337, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7339, %r7337, %r7341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7342, %r572, %r7344, %r7339;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7346, %r575, %r7209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7349, %r572, %r7206, %r7346;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7353, %r575, %r7218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7356, %r572, %r7215, %r7353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7360, %r575, %r7227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7363, %r572, %r7224, %r7360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7367, %r575, %r7236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7370, %r572, %r7233, %r7367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7374, %r575, %r7245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7377, %r572, %r7242, %r7374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7381, %r575, %r7254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7384, %r572, %r7251, %r7381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7388, %r575, %r7263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7391, %r572, %r7260, %r7388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7395, %r575, %r7272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7398, %r572, %r7269, %r7395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7402, %r575, %r7281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7405, %r572, %r7278, %r7402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7409, %r575, %r7290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7412, %r572, %r7287, %r7409;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7416, %r575, %r7299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7419, %r572, %r7296, %r7416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7423, %r575, %r7308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7426, %r572, %r7305, %r7423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7430, %r575, %r7317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7433, %r572, %r7314, %r7430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7437, %r575, %r7326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7440, %r572, %r7323, %r7437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7444, %r575, %r7335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7447, %r572, %r7332, %r7444;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7451, %r575, %r7344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7454, %r572, %r7341, %r7451;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7747, %r7750}, {%r610, %r616, %r613, %r619}, {%r7207, %r7349}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7753, %r7756}, {%r610, %r616, %r613, %r619}, {%r7216, %r7356}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7759, %r7762}, {%r610, %r616, %r613, %r619}, {%r7225, %r7363}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7765, %r7768}, {%r610, %r616, %r613, %r619}, {%r7234, %r7370}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7771, %r7774}, {%r610, %r616, %r613, %r619}, {%r7243, %r7377}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7777, %r7780}, {%r610, %r616, %r613, %r619}, {%r7252, %r7384}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7783, %r7786}, {%r610, %r616, %r613, %r619}, {%r7261, %r7391}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7789, %r7792}, {%r610, %r616, %r613, %r619}, {%r7270, %r7398}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7748, %r7751}, {%r610, %r616, %r613, %r619}, {%r7279, %r7405}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7754, %r7757}, {%r610, %r616, %r613, %r619}, {%r7288, %r7412}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7760, %r7763}, {%r610, %r616, %r613, %r619}, {%r7297, %r7419}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7766, %r7769}, {%r610, %r616, %r613, %r619}, {%r7306, %r7426}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7772, %r7775}, {%r610, %r616, %r613, %r619}, {%r7315, %r7433}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7778, %r7781}, {%r610, %r616, %r613, %r619}, {%r7324, %r7440}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7784, %r7787}, {%r610, %r616, %r613, %r619}, {%r7333, %r7447}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7790, %r7793}, {%r610, %r616, %r613, %r619}, {%r7342, %r7454}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7746, %r7747, %r7748;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7749, %r7750, %r7751;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7752, %r7753, %r7754;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7755, %r7756, %r7757;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7758, %r7759, %r7760;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7761, %r7762, %r7763;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7764, %r7765, %r7766;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7767, %r7768, %r7769;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7770, %r7771, %r7772;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7773, %r7774, %r7775;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7776, %r7777, %r7778;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7779, %r7780, %r7781;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7782, %r7783, %r7784;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7785, %r7786, %r7787;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7788, %r7789, %r7790;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7791, %r7792, %r7793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7794, %r7747, %r7748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7797, %r7750, %r7751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7800, %r7753, %r7754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7803, %r7756, %r7757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7806, %r7759, %r7760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7809, %r7762, %r7763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7812, %r7765, %r7766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7815, %r7768, %r7769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7818, %r7771, %r7772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7821, %r7774, %r7775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7824, %r7777, %r7778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7827, %r7780, %r7781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7830, %r7783, %r7784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7833, %r7786, %r7787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7836, %r7789, %r7790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7839, %r7792, %r7793;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7842, %r235, %r7746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7845, %r235, %r7749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7848, %r235, %r7752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7851, %r235, %r7755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7854, %r235, %r7758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7857, %r235, %r7761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7860, %r235, %r7764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7863, %r235, %r7767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7866, %r235, %r7770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7869, %r235, %r7773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7872, %r235, %r7776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7875, %r235, %r7779;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7878, %r235, %r7782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7881, %r235, %r7785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7884, %r235, %r7788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7887, %r235, %r7791;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7890, %r237, %r7794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7893, %r237, %r7797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7896, %r237, %r7800;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7899, %r237, %r7803;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7902, %r237, %r7806;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7905, %r237, %r7809;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7908, %r237, %r7812;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7911, %r237, %r7815;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7914, %r237, %r7818;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7917, %r237, %r7821;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7920, %r237, %r7824;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7923, %r237, %r7827;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7926, %r237, %r7830;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7929, %r237, %r7833;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7932, %r237, %r7836;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7935, %r237, %r7839;
	// end inline asm
	// begin inline asm
	mov.b32 %r7938, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7939, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7940, %r7842, %r7938;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7943, %r7940, %r7939;
	// end inline asm
	// begin inline asm
	mov.b32 %r7946, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7947, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7948, %r7845, %r7946;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7951, %r7948, %r7947;
	// end inline asm
	// begin inline asm
	mov.b32 %r7954, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7955, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7956, %r7848, %r7954;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7959, %r7956, %r7955;
	// end inline asm
	// begin inline asm
	mov.b32 %r7962, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7963, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7964, %r7851, %r7962;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7967, %r7964, %r7963;
	// end inline asm
	// begin inline asm
	mov.b32 %r7970, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7971, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7972, %r7854, %r7970;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7975, %r7972, %r7971;
	// end inline asm
	// begin inline asm
	mov.b32 %r7978, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7979, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7980, %r7857, %r7978;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7983, %r7980, %r7979;
	// end inline asm
	// begin inline asm
	mov.b32 %r7986, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7987, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7988, %r7860, %r7986;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7991, %r7988, %r7987;
	// end inline asm
	// begin inline asm
	mov.b32 %r7994, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7995, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7996, %r7863, %r7994;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7999, %r7996, %r7995;
	// end inline asm
	// begin inline asm
	mov.b32 %r8002, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8003, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8004, %r7866, %r8002;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8007, %r8004, %r8003;
	// end inline asm
	// begin inline asm
	mov.b32 %r8010, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8011, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8012, %r7869, %r8010;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8015, %r8012, %r8011;
	// end inline asm
	// begin inline asm
	mov.b32 %r8018, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8019, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8020, %r7872, %r8018;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8023, %r8020, %r8019;
	// end inline asm
	// begin inline asm
	mov.b32 %r8026, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8027, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8028, %r7875, %r8026;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8031, %r8028, %r8027;
	// end inline asm
	// begin inline asm
	mov.b32 %r8034, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8035, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8036, %r7878, %r8034;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8039, %r8036, %r8035;
	// end inline asm
	// begin inline asm
	mov.b32 %r8042, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8043, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8044, %r7881, %r8042;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8047, %r8044, %r8043;
	// end inline asm
	// begin inline asm
	mov.b32 %r8050, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8051, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8052, %r7884, %r8050;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8055, %r8052, %r8051;
	// end inline asm
	// begin inline asm
	mov.b32 %r8058, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8059, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8060, %r7887, %r8058;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8063, %r8060, %r8059;
	// end inline asm
	// begin inline asm
	mov.b32 %r8066, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8067, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8068, %r7890, %r8066;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8071, %r8068, %r8067;
	// end inline asm
	// begin inline asm
	mov.b32 %r8074, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8075, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8076, %r7893, %r8074;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8079, %r8076, %r8075;
	// end inline asm
	// begin inline asm
	mov.b32 %r8082, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8083, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8084, %r7896, %r8082;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8087, %r8084, %r8083;
	// end inline asm
	// begin inline asm
	mov.b32 %r8090, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8091, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8092, %r7899, %r8090;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8095, %r8092, %r8091;
	// end inline asm
	// begin inline asm
	mov.b32 %r8098, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8099, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8100, %r7902, %r8098;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8103, %r8100, %r8099;
	// end inline asm
	// begin inline asm
	mov.b32 %r8106, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8107, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8108, %r7905, %r8106;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8111, %r8108, %r8107;
	// end inline asm
	// begin inline asm
	mov.b32 %r8114, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8115, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8116, %r7908, %r8114;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8119, %r8116, %r8115;
	// end inline asm
	// begin inline asm
	mov.b32 %r8122, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8123, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8124, %r7911, %r8122;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8127, %r8124, %r8123;
	// end inline asm
	// begin inline asm
	mov.b32 %r8130, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8131, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8132, %r7914, %r8130;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8135, %r8132, %r8131;
	// end inline asm
	// begin inline asm
	mov.b32 %r8138, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8139, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8140, %r7917, %r8138;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8143, %r8140, %r8139;
	// end inline asm
	// begin inline asm
	mov.b32 %r8146, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8147, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8148, %r7920, %r8146;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8151, %r8148, %r8147;
	// end inline asm
	// begin inline asm
	mov.b32 %r8154, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8155, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8156, %r7923, %r8154;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8159, %r8156, %r8155;
	// end inline asm
	// begin inline asm
	mov.b32 %r8162, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8163, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8164, %r7926, %r8162;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8167, %r8164, %r8163;
	// end inline asm
	// begin inline asm
	mov.b32 %r8170, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8171, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8172, %r7929, %r8170;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8175, %r8172, %r8171;
	// end inline asm
	// begin inline asm
	mov.b32 %r8178, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8179, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8180, %r7932, %r8178;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8183, %r8180, %r8179;
	// end inline asm
	// begin inline asm
	mov.b32 %r8186, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8187, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8188, %r7935, %r8186;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8191, %r8188, %r8187;
	// end inline asm
	// begin inline asm
	mov.b32 %r8197, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8196, %r8197, %r8195;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8199, %r7943, %r8196;
	// end inline asm
	// begin inline asm
	mov.b32 %r8202, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8203, %r8197, %r8202;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8206, %r7951, %r8203;
	// end inline asm
	// begin inline asm
	mov.b32 %r8209, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8210, %r8197, %r8209;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8213, %r7959, %r8210;
	// end inline asm
	// begin inline asm
	mov.b32 %r8216, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8217, %r8197, %r8216;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8220, %r7967, %r8217;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8223, %r8199, %r8213, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8227, %r8206, %r8220, %r4410;
	// end inline asm
	shl.b32 	%r8234, %r8227, 4;
	// begin inline asm
	lop3.b32 %r8231, %r4416, %r8223, %r8234, 202;
	// end inline asm
	xor.b32  	%r16251, %r8231, -2004318072;
	// begin inline asm
	mov.b32 %r8238, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8236, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8237, %r8238, %r8236;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8240, %r7975, %r8237;
	// end inline asm
	// begin inline asm
	mov.b32 %r8243, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8244, %r8238, %r8243;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8247, %r7983, %r8244;
	// end inline asm
	// begin inline asm
	mov.b32 %r8250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8251, %r8238, %r8250;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8254, %r7991, %r8251;
	// end inline asm
	// begin inline asm
	mov.b32 %r8257, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8258, %r8238, %r8257;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8261, %r7999, %r8258;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8264, %r8240, %r8254, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8268, %r8247, %r8261, %r4410;
	// end inline asm
	shl.b32 	%r8275, %r8268, 4;
	// begin inline asm
	lop3.b32 %r8272, %r4416, %r8264, %r8275, 202;
	// end inline asm
	xor.b32  	%r16252, %r8272, -2004318072;
	// begin inline asm
	mov.b32 %r8279, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8277, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8278, %r8279, %r8277;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8281, %r8007, %r8278;
	// end inline asm
	// begin inline asm
	mov.b32 %r8284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8285, %r8279, %r8284;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8288, %r8015, %r8285;
	// end inline asm
	// begin inline asm
	mov.b32 %r8291, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8292, %r8279, %r8291;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8295, %r8023, %r8292;
	// end inline asm
	// begin inline asm
	mov.b32 %r8298, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8299, %r8279, %r8298;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8302, %r8031, %r8299;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8305, %r8281, %r8295, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8309, %r8288, %r8302, %r4410;
	// end inline asm
	shl.b32 	%r8316, %r8309, 4;
	// begin inline asm
	lop3.b32 %r8313, %r4416, %r8305, %r8316, 202;
	// end inline asm
	xor.b32  	%r16253, %r8313, -2004318072;
	// begin inline asm
	mov.b32 %r8320, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8318, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8319, %r8320, %r8318;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8322, %r8039, %r8319;
	// end inline asm
	// begin inline asm
	mov.b32 %r8325, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8326, %r8320, %r8325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8329, %r8047, %r8326;
	// end inline asm
	// begin inline asm
	mov.b32 %r8332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8333, %r8320, %r8332;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8336, %r8055, %r8333;
	// end inline asm
	// begin inline asm
	mov.b32 %r8339, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8340, %r8320, %r8339;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8343, %r8063, %r8340;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8346, %r8322, %r8336, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8350, %r8329, %r8343, %r4410;
	// end inline asm
	shl.b32 	%r8357, %r8350, 4;
	// begin inline asm
	lop3.b32 %r8354, %r4416, %r8346, %r8357, 202;
	// end inline asm
	xor.b32  	%r16254, %r8354, -2004318072;
	// begin inline asm
	mov.b32 %r8361, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8359, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8360, %r8361, %r8359;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8363, %r8071, %r8360;
	// end inline asm
	// begin inline asm
	mov.b32 %r8366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8367, %r8361, %r8366;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8370, %r8079, %r8367;
	// end inline asm
	// begin inline asm
	mov.b32 %r8373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8374, %r8361, %r8373;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8377, %r8087, %r8374;
	// end inline asm
	// begin inline asm
	mov.b32 %r8380, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8381, %r8361, %r8380;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8384, %r8095, %r8381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8387, %r8363, %r8377, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8391, %r8370, %r8384, %r4410;
	// end inline asm
	shl.b32 	%r8398, %r8391, 4;
	// begin inline asm
	lop3.b32 %r8395, %r4416, %r8387, %r8398, 202;
	// end inline asm
	xor.b32  	%r16255, %r8395, -2004318072;
	// begin inline asm
	mov.b32 %r8402, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8401, %r8402, %r8400;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8404, %r8103, %r8401;
	// end inline asm
	// begin inline asm
	mov.b32 %r8407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8408, %r8402, %r8407;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8411, %r8111, %r8408;
	// end inline asm
	// begin inline asm
	mov.b32 %r8414, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8415, %r8402, %r8414;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8418, %r8119, %r8415;
	// end inline asm
	// begin inline asm
	mov.b32 %r8421, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8422, %r8402, %r8421;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8425, %r8127, %r8422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8428, %r8404, %r8418, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8432, %r8411, %r8425, %r4410;
	// end inline asm
	shl.b32 	%r8439, %r8432, 4;
	// begin inline asm
	lop3.b32 %r8436, %r4416, %r8428, %r8439, 202;
	// end inline asm
	xor.b32  	%r16256, %r8436, -2004318072;
	// begin inline asm
	mov.b32 %r8443, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8441, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8442, %r8443, %r8441;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8445, %r8135, %r8442;
	// end inline asm
	// begin inline asm
	mov.b32 %r8448, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8449, %r8443, %r8448;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8452, %r8143, %r8449;
	// end inline asm
	// begin inline asm
	mov.b32 %r8455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8456, %r8443, %r8455;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8459, %r8151, %r8456;
	// end inline asm
	// begin inline asm
	mov.b32 %r8462, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8463, %r8443, %r8462;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8466, %r8159, %r8463;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8469, %r8445, %r8459, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8473, %r8452, %r8466, %r4410;
	// end inline asm
	shl.b32 	%r8480, %r8473, 4;
	// begin inline asm
	lop3.b32 %r8477, %r4416, %r8469, %r8480, 202;
	// end inline asm
	xor.b32  	%r16257, %r8477, -2004318072;
	// begin inline asm
	mov.b32 %r8484, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8482, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8483, %r8484, %r8482;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8486, %r8167, %r8483;
	// end inline asm
	// begin inline asm
	mov.b32 %r8489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8490, %r8484, %r8489;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8493, %r8175, %r8490;
	// end inline asm
	// begin inline asm
	mov.b32 %r8496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8497, %r8484, %r8496;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8500, %r8183, %r8497;
	// end inline asm
	// begin inline asm
	mov.b32 %r8503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8504, %r8484, %r8503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8507, %r8191, %r8504;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8510, %r8486, %r8500, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8514, %r8493, %r8507, %r4410;
	// end inline asm
	shl.b32 	%r8521, %r8514, 4;
	// begin inline asm
	lop3.b32 %r8518, %r4416, %r8510, %r8521, 202;
	// end inline asm
	xor.b32  	%r16258, %r8518, -2004318072;
	st.shared.u32 	[%rd110], %r16251;
	st.shared.u32 	[%rd112], %r16252;
	st.shared.u32 	[%rd114], %r16253;
	st.shared.u32 	[%rd116], %r16254;
	st.shared.u32 	[%rd118], %r16255;
	st.shared.u32 	[%rd120], %r16256;
	st.shared.u32 	[%rd122], %r16257;
	st.shared.u32 	[%rd124], %r16258;
	ld.shared.u32 	%r16398, [%rd94];
	ld.shared.u32 	%r16399, [%rd96];
	ld.shared.u32 	%r16400, [%rd98];
	ld.shared.u32 	%r16401, [%rd100];
	ld.shared.u32 	%r16410, [%rd102];
	ld.shared.u32 	%r16411, [%rd104];
	ld.shared.u32 	%r16412, [%rd106];
	ld.shared.u32 	%r16413, [%rd108];
	// begin inline asm
	mov.b32 %r8527, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8538, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8526, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r8524, %r893, %r8526, %r8527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8529, %r8527, %r8528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8532, %r8524, %r8529;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8535, %r904, %r8526, %r8538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8539, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8540, %r8538, %r8539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8543, %r8535, %r8540;
	// end inline asm
	shr.u32 	%r8548, %r8526, 8;
	// begin inline asm
	lop3.b32 %r8546, %r893, %r8548, %r8527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8550, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8551, %r8527, %r8550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8554, %r8546, %r8551;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8557, %r904, %r8548, %r8538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8561, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8562, %r8538, %r8561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8565, %r8557, %r8562;
	// end inline asm
	// begin inline asm
	mov.b32 %r8573, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8584, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8572, %r16399, -2004318072;
	// begin inline asm
	lop3.b32 %r8570, %r893, %r8572, %r8573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8575, %r8573, %r8574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8578, %r8570, %r8575;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8581, %r904, %r8572, %r8584, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8586, %r8584, %r8585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8589, %r8581, %r8586;
	// end inline asm
	shr.u32 	%r8594, %r8572, 8;
	// begin inline asm
	lop3.b32 %r8592, %r893, %r8594, %r8573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8596, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8597, %r8573, %r8596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8600, %r8592, %r8597;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8603, %r904, %r8594, %r8584, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8607, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8608, %r8584, %r8607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8611, %r8603, %r8608;
	// end inline asm
	// begin inline asm
	mov.b32 %r8619, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8630, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8618, %r16400, -2004318072;
	// begin inline asm
	lop3.b32 %r8616, %r893, %r8618, %r8619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8620, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8621, %r8619, %r8620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8624, %r8616, %r8621;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8627, %r904, %r8618, %r8630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8631, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8632, %r8630, %r8631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8635, %r8627, %r8632;
	// end inline asm
	shr.u32 	%r8640, %r8618, 8;
	// begin inline asm
	lop3.b32 %r8638, %r893, %r8640, %r8619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8642, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8643, %r8619, %r8642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8646, %r8638, %r8643;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8649, %r904, %r8640, %r8630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8653, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8654, %r8630, %r8653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8657, %r8649, %r8654;
	// end inline asm
	// begin inline asm
	mov.b32 %r8665, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8676, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8664, %r16401, -2004318072;
	// begin inline asm
	lop3.b32 %r8662, %r893, %r8664, %r8665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8666, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8667, %r8665, %r8666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8670, %r8662, %r8667;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8673, %r904, %r8664, %r8676, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8677, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8678, %r8676, %r8677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8681, %r8673, %r8678;
	// end inline asm
	shr.u32 	%r8686, %r8664, 8;
	// begin inline asm
	lop3.b32 %r8684, %r893, %r8686, %r8665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8688, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8689, %r8665, %r8688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8692, %r8684, %r8689;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8695, %r904, %r8686, %r8676, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8699, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8700, %r8676, %r8699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8703, %r8695, %r8700;
	// end inline asm
	// begin inline asm
	mov.b32 %r8711, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8722, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8710, %r16410, -2004318072;
	// begin inline asm
	lop3.b32 %r8708, %r893, %r8710, %r8711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8712, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8713, %r8711, %r8712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8716, %r8708, %r8713;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8719, %r904, %r8710, %r8722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8723, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8724, %r8722, %r8723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8727, %r8719, %r8724;
	// end inline asm
	shr.u32 	%r8732, %r8710, 8;
	// begin inline asm
	lop3.b32 %r8730, %r893, %r8732, %r8711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8734, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8735, %r8711, %r8734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8738, %r8730, %r8735;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8741, %r904, %r8732, %r8722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8745, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8746, %r8722, %r8745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8749, %r8741, %r8746;
	// end inline asm
	// begin inline asm
	mov.b32 %r8757, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8768, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8756, %r16411, -2004318072;
	// begin inline asm
	lop3.b32 %r8754, %r893, %r8756, %r8757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8758, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8759, %r8757, %r8758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8762, %r8754, %r8759;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8765, %r904, %r8756, %r8768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8769, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8770, %r8768, %r8769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8773, %r8765, %r8770;
	// end inline asm
	shr.u32 	%r8778, %r8756, 8;
	// begin inline asm
	lop3.b32 %r8776, %r893, %r8778, %r8757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8780, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8781, %r8757, %r8780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8784, %r8776, %r8781;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8787, %r904, %r8778, %r8768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8791, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8792, %r8768, %r8791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8795, %r8787, %r8792;
	// end inline asm
	// begin inline asm
	mov.b32 %r8803, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8814, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8802, %r16412, -2004318072;
	// begin inline asm
	lop3.b32 %r8800, %r893, %r8802, %r8803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8804, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8805, %r8803, %r8804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8808, %r8800, %r8805;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8811, %r904, %r8802, %r8814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8815, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8816, %r8814, %r8815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8819, %r8811, %r8816;
	// end inline asm
	shr.u32 	%r8824, %r8802, 8;
	// begin inline asm
	lop3.b32 %r8822, %r893, %r8824, %r8803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8826, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8827, %r8803, %r8826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8830, %r8822, %r8827;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8833, %r904, %r8824, %r8814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8837, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8838, %r8814, %r8837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8841, %r8833, %r8838;
	// end inline asm
	// begin inline asm
	mov.b32 %r8849, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8860, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8848, %r16413, -2004318072;
	// begin inline asm
	lop3.b32 %r8846, %r893, %r8848, %r8849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8850, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8851, %r8849, %r8850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8854, %r8846, %r8851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8857, %r904, %r8848, %r8860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8861, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8862, %r8860, %r8861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8865, %r8857, %r8862;
	// end inline asm
	shr.u32 	%r8870, %r8848, 8;
	// begin inline asm
	lop3.b32 %r8868, %r893, %r8870, %r8849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8872, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8873, %r8849, %r8872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8876, %r8868, %r8873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8879, %r904, %r8870, %r8860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8883, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8884, %r8860, %r8883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8887, %r8879, %r8884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8890, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8892, %r8890, %r8532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8895, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8897, %r8895, %r8543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8900, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8902, %r8900, %r8554;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8905, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8907, %r8905, %r8565;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8910, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8912, %r8910, %r8578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8915, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8917, %r8915, %r8589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8920, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8922, %r8920, %r8600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8925, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8927, %r8925, %r8611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8930, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8932, %r8930, %r8624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8935, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8937, %r8935, %r8635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8940, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8942, %r8940, %r8646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8945, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8947, %r8945, %r8657;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8950, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8952, %r8950, %r8670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8955, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8957, %r8955, %r8681;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8960, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8962, %r8960, %r8692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8965, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8967, %r8965, %r8703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8970, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8972, %r8970, %r8716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8975, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8977, %r8975, %r8727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8980, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8982, %r8980, %r8738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8985, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8987, %r8985, %r8749;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8990, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8992, %r8990, %r8762;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8995, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8997, %r8995, %r8773;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9000, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9002, %r9000, %r8784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9005, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9007, %r9005, %r8795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9010, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9012, %r9010, %r8808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9015, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9017, %r9015, %r8819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9020, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9022, %r9020, %r8830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9025, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9027, %r9025, %r8841;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9030, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9032, %r9030, %r8854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9035, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9037, %r9035, %r8865;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9040, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9042, %r9040, %r8876;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9045, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9047, %r9045, %r8887;
	// end inline asm
	// begin inline asm
	mov.b32 %r9055, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9066, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9052, %r893, %r2478, %r9055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9057, %r9055, %r9056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9060, %r9052, %r9057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9063, %r904, %r2478, %r9066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9068, %r9066, %r9067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9071, %r9063, %r9068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9074, %r893, %r2500, %r9055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9078, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9079, %r9055, %r9078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9082, %r9074, %r9079;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9085, %r904, %r2500, %r9066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9090, %r9066, %r9089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9093, %r9085, %r9090;
	// end inline asm
	// begin inline asm
	mov.b32 %r9101, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9112, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9098, %r893, %r2524, %r9101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9102, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9103, %r9101, %r9102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9106, %r9098, %r9103;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9109, %r904, %r2524, %r9112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9114, %r9112, %r9113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9117, %r9109, %r9114;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9120, %r893, %r2546, %r9101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9125, %r9101, %r9124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9128, %r9120, %r9125;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9131, %r904, %r2546, %r9112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9136, %r9112, %r9135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9139, %r9131, %r9136;
	// end inline asm
	// begin inline asm
	mov.b32 %r9147, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9158, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9144, %r893, %r2570, %r9147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9148, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9149, %r9147, %r9148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9152, %r9144, %r9149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9155, %r904, %r2570, %r9158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9160, %r9158, %r9159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9163, %r9155, %r9160;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9166, %r893, %r2592, %r9147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9170, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9171, %r9147, %r9170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9174, %r9166, %r9171;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9177, %r904, %r2592, %r9158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9182, %r9158, %r9181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9185, %r9177, %r9182;
	// end inline asm
	// begin inline asm
	mov.b32 %r9193, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9204, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9190, %r893, %r2616, %r9193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9194, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9195, %r9193, %r9194;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9198, %r9190, %r9195;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9201, %r904, %r2616, %r9204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9206, %r9204, %r9205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9209, %r9201, %r9206;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9212, %r893, %r2638, %r9193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9216, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9217, %r9193, %r9216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9220, %r9212, %r9217;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9223, %r904, %r2638, %r9204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9228, %r9204, %r9227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9231, %r9223, %r9228;
	// end inline asm
	// begin inline asm
	mov.b32 %r9239, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9250, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9236, %r893, %r2662, %r9239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9240, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9241, %r9239, %r9240;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9244, %r9236, %r9241;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9247, %r904, %r2662, %r9250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9252, %r9250, %r9251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9255, %r9247, %r9252;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9258, %r893, %r2684, %r9239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9263, %r9239, %r9262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9266, %r9258, %r9263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9269, %r904, %r2684, %r9250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9274, %r9250, %r9273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9277, %r9269, %r9274;
	// end inline asm
	// begin inline asm
	mov.b32 %r9285, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9296, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9282, %r893, %r2708, %r9285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9286, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9287, %r9285, %r9286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9290, %r9282, %r9287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9293, %r904, %r2708, %r9296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9298, %r9296, %r9297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9301, %r9293, %r9298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9304, %r893, %r2730, %r9285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9309, %r9285, %r9308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9312, %r9304, %r9309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9315, %r904, %r2730, %r9296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9320, %r9296, %r9319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9323, %r9315, %r9320;
	// end inline asm
	// begin inline asm
	mov.b32 %r9331, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9342, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9328, %r893, %r2754, %r9331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9333, %r9331, %r9332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9336, %r9328, %r9333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9339, %r904, %r2754, %r9342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9344, %r9342, %r9343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9347, %r9339, %r9344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9350, %r893, %r2776, %r9331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9354, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9355, %r9331, %r9354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9358, %r9350, %r9355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9361, %r904, %r2776, %r9342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9366, %r9342, %r9365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9369, %r9361, %r9366;
	// end inline asm
	// begin inline asm
	mov.b32 %r9377, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9388, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9374, %r893, %r2800, %r9377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9379, %r9377, %r9378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9382, %r9374, %r9379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9385, %r904, %r2800, %r9388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9390, %r9388, %r9389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9393, %r9385, %r9390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9396, %r893, %r2822, %r9377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9401, %r9377, %r9400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9404, %r9396, %r9401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9407, %r904, %r2822, %r9388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9412, %r9388, %r9411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9415, %r9407, %r9412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9418, %r313, %r9060, %r8892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9422, %r313, %r9071, %r8897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9426, %r313, %r9082, %r8902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9430, %r313, %r9093, %r8907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9434, %r313, %r9106, %r8912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9438, %r313, %r9117, %r8917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9442, %r313, %r9128, %r8922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9446, %r313, %r9139, %r8927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9450, %r313, %r9152, %r8932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9454, %r313, %r9163, %r8937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9458, %r313, %r9174, %r8942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9462, %r313, %r9185, %r8947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9466, %r313, %r9198, %r8952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9470, %r313, %r9209, %r8957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9474, %r313, %r9220, %r8962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9478, %r313, %r9231, %r8967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9482, %r331, %r9244, %r8972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9486, %r331, %r9255, %r8977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9490, %r331, %r9266, %r8982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9494, %r331, %r9277, %r8987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9498, %r331, %r9290, %r8992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9502, %r331, %r9301, %r8997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9506, %r331, %r9312, %r9002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9510, %r331, %r9323, %r9007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9514, %r331, %r9336, %r9012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9518, %r331, %r9347, %r9017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9522, %r331, %r9358, %r9022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9526, %r331, %r9369, %r9027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9530, %r331, %r9382, %r9032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9534, %r331, %r9393, %r9037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9538, %r331, %r9404, %r9042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9542, %r331, %r9415, %r9047;
	// end inline asm
	// begin inline asm
	mov.b32 %r9551, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9562, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9548, %r893, %r894, %r9551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9552, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9553, %r9551, %r9552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9556, %r9548, %r9553;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9559, %r904, %r894, %r9562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9563, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9564, %r9562, %r9563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9567, %r9559, %r9564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9570, %r893, %r916, %r9551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9575, %r9551, %r9574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9578, %r9570, %r9575;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9581, %r904, %r916, %r9562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9586, %r9562, %r9585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9589, %r9581, %r9586;
	// end inline asm
	// begin inline asm
	mov.b32 %r9597, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9608, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9594, %r893, %r940, %r9597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9598, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9599, %r9597, %r9598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9602, %r9594, %r9599;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9605, %r904, %r940, %r9608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9609, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9610, %r9608, %r9609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9613, %r9605, %r9610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9616, %r893, %r962, %r9597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9620, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9621, %r9597, %r9620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9624, %r9616, %r9621;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9627, %r904, %r962, %r9608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9631, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9632, %r9608, %r9631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9635, %r9627, %r9632;
	// end inline asm
	// begin inline asm
	mov.b32 %r9643, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9654, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9640, %r893, %r986, %r9643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9644, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9645, %r9643, %r9644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9648, %r9640, %r9645;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9651, %r904, %r986, %r9654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9655, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9656, %r9654, %r9655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9659, %r9651, %r9656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9662, %r893, %r1008, %r9643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9666, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9667, %r9643, %r9666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9670, %r9662, %r9667;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9673, %r904, %r1008, %r9654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9677, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9678, %r9654, %r9677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9681, %r9673, %r9678;
	// end inline asm
	// begin inline asm
	mov.b32 %r9689, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9700, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9686, %r893, %r1032, %r9689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9690, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9691, %r9689, %r9690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9694, %r9686, %r9691;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9697, %r904, %r1032, %r9700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9701, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9702, %r9700, %r9701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9705, %r9697, %r9702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9708, %r893, %r1054, %r9689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9712, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9713, %r9689, %r9712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9716, %r9708, %r9713;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9719, %r904, %r1054, %r9700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9723, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9724, %r9700, %r9723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9727, %r9719, %r9724;
	// end inline asm
	// begin inline asm
	mov.b32 %r9735, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9746, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9732, %r893, %r1078, %r9735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9736, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9737, %r9735, %r9736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9740, %r9732, %r9737;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9743, %r904, %r1078, %r9746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9747, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9748, %r9746, %r9747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9751, %r9743, %r9748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9754, %r893, %r1100, %r9735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9758, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9759, %r9735, %r9758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9762, %r9754, %r9759;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9765, %r904, %r1100, %r9746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9769, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9770, %r9746, %r9769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9773, %r9765, %r9770;
	// end inline asm
	// begin inline asm
	mov.b32 %r9781, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9792, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9778, %r893, %r1124, %r9781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9782, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9783, %r9781, %r9782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9786, %r9778, %r9783;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9789, %r904, %r1124, %r9792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9793, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9794, %r9792, %r9793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9797, %r9789, %r9794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9800, %r893, %r1146, %r9781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9804, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9805, %r9781, %r9804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9808, %r9800, %r9805;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9811, %r904, %r1146, %r9792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9815, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9816, %r9792, %r9815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9819, %r9811, %r9816;
	// end inline asm
	// begin inline asm
	mov.b32 %r9827, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9838, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9824, %r893, %r1170, %r9827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9828, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9829, %r9827, %r9828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9832, %r9824, %r9829;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9835, %r904, %r1170, %r9838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9839, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9840, %r9838, %r9839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9843, %r9835, %r9840;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9846, %r893, %r1192, %r9827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9850, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9851, %r9827, %r9850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9854, %r9846, %r9851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9857, %r904, %r1192, %r9838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9861, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9862, %r9838, %r9861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9865, %r9857, %r9862;
	// end inline asm
	// begin inline asm
	mov.b32 %r9873, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9884, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9870, %r893, %r1216, %r9873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9874, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9875, %r9873, %r9874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9878, %r9870, %r9875;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9881, %r904, %r1216, %r9884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9885, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9886, %r9884, %r9885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9889, %r9881, %r9886;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9892, %r893, %r1238, %r9873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9896, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9897, %r9873, %r9896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9900, %r9892, %r9897;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9903, %r904, %r1238, %r9884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9907, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9908, %r9884, %r9907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9911, %r9903, %r9908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9914, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9916, %r9914, %r9556, %r9418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9920, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9922, %r9920, %r9567, %r9422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9926, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9928, %r9926, %r9578, %r9426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9932, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9934, %r9932, %r9589, %r9430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9938, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9940, %r9938, %r9602, %r9434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9944, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9946, %r9944, %r9613, %r9438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9950, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9952, %r9950, %r9624, %r9442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9956, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9958, %r9956, %r9635, %r9446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9962, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9964, %r9962, %r9648, %r9450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9968, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9970, %r9968, %r9659, %r9454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9974, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9976, %r9974, %r9670, %r9458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9980, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9982, %r9980, %r9681, %r9462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9986, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9988, %r9986, %r9694, %r9466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9992, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9994, %r9992, %r9705, %r9470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9998, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10000, %r9998, %r9716, %r9474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10004, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10006, %r10004, %r9727, %r9478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10010, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10012, %r10010, %r9740, %r9482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10016, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10018, %r10016, %r9751, %r9486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10022, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10024, %r10022, %r9762, %r9490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10028, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10030, %r10028, %r9773, %r9494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10034, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10036, %r10034, %r9786, %r9498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10040, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10042, %r10040, %r9797, %r9502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10046, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10048, %r10046, %r9808, %r9506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10052, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10054, %r10052, %r9819, %r9510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10058, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10060, %r10058, %r9832, %r9514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10064, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10066, %r10064, %r9843, %r9518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10070, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10072, %r10070, %r9854, %r9522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10076, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10078, %r10076, %r9865, %r9526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10082, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10084, %r10082, %r9878, %r9530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10088, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10090, %r10088, %r9889, %r9534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10094, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10096, %r10094, %r9900, %r9538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10100, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10102, %r10100, %r9911, %r9542;
	// end inline asm
	// begin inline asm
	mov.b32 %r10111, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10122, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10108, %r893, %r4710, %r10111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10113, %r10111, %r10112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10116, %r10108, %r10113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10119, %r904, %r4710, %r10122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10124, %r10122, %r10123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10127, %r10119, %r10124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10130, %r893, %r4732, %r10111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10135, %r10111, %r10134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10138, %r10130, %r10135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10141, %r904, %r4732, %r10122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10145, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10146, %r10122, %r10145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10149, %r10141, %r10146;
	// end inline asm
	// begin inline asm
	mov.b32 %r10157, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10168, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10154, %r893, %r4756, %r10157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10159, %r10157, %r10158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10162, %r10154, %r10159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10165, %r904, %r4756, %r10168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10170, %r10168, %r10169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10173, %r10165, %r10170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10176, %r893, %r4778, %r10157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10180, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10181, %r10157, %r10180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10184, %r10176, %r10181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10187, %r904, %r4778, %r10168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10191, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10192, %r10168, %r10191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10195, %r10187, %r10192;
	// end inline asm
	// begin inline asm
	mov.b32 %r10203, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10214, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10200, %r893, %r4802, %r10203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10204, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10205, %r10203, %r10204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10208, %r10200, %r10205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10211, %r904, %r4802, %r10214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10215, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10216, %r10214, %r10215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10219, %r10211, %r10216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10222, %r893, %r4824, %r10203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10226, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10227, %r10203, %r10226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10230, %r10222, %r10227;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10233, %r904, %r4824, %r10214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10237, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10238, %r10214, %r10237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10241, %r10233, %r10238;
	// end inline asm
	// begin inline asm
	mov.b32 %r10249, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10260, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10246, %r893, %r4848, %r10249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10251, %r10249, %r10250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10254, %r10246, %r10251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10257, %r904, %r4848, %r10260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10261, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10262, %r10260, %r10261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10265, %r10257, %r10262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10268, %r893, %r4870, %r10249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10272, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10273, %r10249, %r10272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10276, %r10268, %r10273;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10279, %r904, %r4870, %r10260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10283, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10284, %r10260, %r10283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10287, %r10279, %r10284;
	// end inline asm
	// begin inline asm
	mov.b32 %r10295, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10306, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10292, %r893, %r4894, %r10295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10296, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10297, %r10295, %r10296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10300, %r10292, %r10297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10303, %r904, %r4894, %r10306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10307, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10308, %r10306, %r10307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10311, %r10303, %r10308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10314, %r893, %r4916, %r10295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10318, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10319, %r10295, %r10318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10322, %r10314, %r10319;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10325, %r904, %r4916, %r10306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10329, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10330, %r10306, %r10329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10333, %r10325, %r10330;
	// end inline asm
	// begin inline asm
	mov.b32 %r10341, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10352, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10338, %r893, %r4940, %r10341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10343, %r10341, %r10342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10346, %r10338, %r10343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10349, %r904, %r4940, %r10352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10354, %r10352, %r10353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10357, %r10349, %r10354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10360, %r893, %r4962, %r10341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10364, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10365, %r10341, %r10364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10368, %r10360, %r10365;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10371, %r904, %r4962, %r10352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10375, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10376, %r10352, %r10375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10379, %r10371, %r10376;
	// end inline asm
	// begin inline asm
	mov.b32 %r10387, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10398, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10384, %r893, %r4986, %r10387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10389, %r10387, %r10388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10392, %r10384, %r10389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10395, %r904, %r4986, %r10398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10400, %r10398, %r10399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10403, %r10395, %r10400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10406, %r893, %r5008, %r10387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10411, %r10387, %r10410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10414, %r10406, %r10411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10417, %r904, %r5008, %r10398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10421, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10422, %r10398, %r10421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10425, %r10417, %r10422;
	// end inline asm
	// begin inline asm
	mov.b32 %r10433, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10444, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10430, %r893, %r5032, %r10433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10435, %r10433, %r10434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10438, %r10430, %r10435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10441, %r904, %r5032, %r10444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10446, %r10444, %r10445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10449, %r10441, %r10446;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10452, %r893, %r5054, %r10433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10456, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10457, %r10433, %r10456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10460, %r10452, %r10457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10463, %r904, %r5054, %r10444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10467, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10468, %r10444, %r10467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10471, %r10463, %r10468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10609, %r385, %r10116, %r9916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10606, %r385, %r10127, %r9922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10618, %r385, %r10138, %r9928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10615, %r385, %r10149, %r9934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10627, %r385, %r10162, %r9940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10624, %r385, %r10173, %r9946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10636, %r385, %r10184, %r9952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10633, %r385, %r10195, %r9958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10645, %r385, %r10208, %r9964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10642, %r385, %r10219, %r9970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10654, %r385, %r10230, %r9976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10651, %r385, %r10241, %r9982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10663, %r385, %r10254, %r9988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10660, %r385, %r10265, %r9994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10672, %r385, %r10276, %r10000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10669, %r385, %r10287, %r10006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10681, %r403, %r10300, %r10012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10678, %r403, %r10311, %r10018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10690, %r403, %r10322, %r10024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10687, %r403, %r10333, %r10030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10699, %r403, %r10346, %r10036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10696, %r403, %r10357, %r10042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10708, %r403, %r10368, %r10048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10705, %r403, %r10379, %r10054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10717, %r403, %r10392, %r10060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10714, %r403, %r10403, %r10066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10726, %r403, %r10414, %r10072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10723, %r403, %r10425, %r10078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10735, %r403, %r10438, %r10084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10732, %r403, %r10449, %r10090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10744, %r403, %r10460, %r10096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10741, %r403, %r10471, %r10102;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10602, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10604, %r10602, %r10606;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10607, %r467, %r10609, %r10604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10611, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10613, %r10611, %r10615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10616, %r467, %r10618, %r10613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10620, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10622, %r10620, %r10624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10625, %r467, %r10627, %r10622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10629, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10631, %r10629, %r10633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10634, %r467, %r10636, %r10631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10638, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10640, %r10638, %r10642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10643, %r467, %r10645, %r10640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10647, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10649, %r10647, %r10651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10652, %r467, %r10654, %r10649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10656, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10658, %r10656, %r10660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10661, %r467, %r10663, %r10658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10665, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10667, %r10665, %r10669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10670, %r467, %r10672, %r10667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10674, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10676, %r10674, %r10678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10679, %r470, %r10681, %r10676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10683, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10685, %r10683, %r10687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10688, %r470, %r10690, %r10685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10692, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10694, %r10692, %r10696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10697, %r470, %r10699, %r10694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10701, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10703, %r10701, %r10705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10706, %r470, %r10708, %r10703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10710, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10712, %r10710, %r10714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10715, %r470, %r10717, %r10712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10719, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10721, %r10719, %r10723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10724, %r470, %r10726, %r10721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10728, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10730, %r10728, %r10732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10733, %r470, %r10735, %r10730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10737, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10739, %r10737, %r10741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10742, %r470, %r10744, %r10739;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10746, %r473, %r10609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10749, %r467, %r10606, %r10746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10753, %r473, %r10618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10756, %r467, %r10615, %r10753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10760, %r473, %r10627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10763, %r467, %r10624, %r10760;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10767, %r473, %r10636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10770, %r467, %r10633, %r10767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10774, %r473, %r10645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10777, %r467, %r10642, %r10774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10781, %r473, %r10654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10784, %r467, %r10651, %r10781;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10788, %r473, %r10663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10791, %r467, %r10660, %r10788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10795, %r473, %r10672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10798, %r467, %r10669, %r10795;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10802, %r476, %r10681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10805, %r470, %r10678, %r10802;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10809, %r476, %r10690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10812, %r470, %r10687, %r10809;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10816, %r476, %r10699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10819, %r470, %r10696, %r10816;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10823, %r476, %r10708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10826, %r470, %r10705, %r10823;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10830, %r476, %r10717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10833, %r470, %r10714, %r10830;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10837, %r476, %r10726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10840, %r470, %r10723, %r10837;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10844, %r476, %r10735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10847, %r470, %r10732, %r10844;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10851, %r476, %r10744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10854, %r470, %r10741, %r10851;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11025, %r11022}, {%r522, %r528, %r525, %r531}, {%r10607, %r10749}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11034, %r11031}, {%r522, %r528, %r525, %r531}, {%r10616, %r10756}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11043, %r11040}, {%r522, %r528, %r525, %r531}, {%r10625, %r10763}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11052, %r11049}, {%r522, %r528, %r525, %r531}, {%r10634, %r10770}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11061, %r11058}, {%r522, %r528, %r525, %r531}, {%r10643, %r10777}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11070, %r11067}, {%r522, %r528, %r525, %r531}, {%r10652, %r10784}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11079, %r11076}, {%r522, %r528, %r525, %r531}, {%r10661, %r10791}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11088, %r11085}, {%r522, %r528, %r525, %r531}, {%r10670, %r10798}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11097, %r11094}, {%r522, %r528, %r525, %r531}, {%r10679, %r10805}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11106, %r11103}, {%r522, %r528, %r525, %r531}, {%r10688, %r10812}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11115, %r11112}, {%r522, %r528, %r525, %r531}, {%r10697, %r10819}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11124, %r11121}, {%r522, %r528, %r525, %r531}, {%r10706, %r10826}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11133, %r11130}, {%r522, %r528, %r525, %r531}, {%r10715, %r10833}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11142, %r11139}, {%r522, %r528, %r525, %r531}, {%r10724, %r10840}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11151, %r11148}, {%r522, %r528, %r525, %r531}, {%r10733, %r10847}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11160, %r11157}, {%r522, %r528, %r525, %r531}, {%r10742, %r10854}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11018, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11020, %r11018, %r11022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11023, %r572, %r11025, %r11020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11027, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11029, %r11027, %r11031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11032, %r572, %r11034, %r11029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11036, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11038, %r11036, %r11040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11041, %r572, %r11043, %r11038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11045, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11047, %r11045, %r11049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11050, %r572, %r11052, %r11047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11054, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11056, %r11054, %r11058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11059, %r572, %r11061, %r11056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11063, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11065, %r11063, %r11067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11068, %r572, %r11070, %r11065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11072, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11074, %r11072, %r11076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11077, %r572, %r11079, %r11074;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11081, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11083, %r11081, %r11085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11086, %r572, %r11088, %r11083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11090, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11092, %r11090, %r11094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11095, %r572, %r11097, %r11092;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11099, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11101, %r11099, %r11103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11104, %r572, %r11106, %r11101;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11108, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11110, %r11108, %r11112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11113, %r572, %r11115, %r11110;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11117, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11119, %r11117, %r11121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11122, %r572, %r11124, %r11119;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11126, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11128, %r11126, %r11130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11131, %r572, %r11133, %r11128;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11135, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11137, %r11135, %r11139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11140, %r572, %r11142, %r11137;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11144, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11146, %r11144, %r11148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11149, %r572, %r11151, %r11146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11153, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11155, %r11153, %r11157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11158, %r572, %r11160, %r11155;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11162, %r575, %r11025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11165, %r572, %r11022, %r11162;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11169, %r575, %r11034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11172, %r572, %r11031, %r11169;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11176, %r575, %r11043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11179, %r572, %r11040, %r11176;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11183, %r575, %r11052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11186, %r572, %r11049, %r11183;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11190, %r575, %r11061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11193, %r572, %r11058, %r11190;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11197, %r575, %r11070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11200, %r572, %r11067, %r11197;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11204, %r575, %r11079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11207, %r572, %r11076, %r11204;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11211, %r575, %r11088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11214, %r572, %r11085, %r11211;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11218, %r575, %r11097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11221, %r572, %r11094, %r11218;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11225, %r575, %r11106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11228, %r572, %r11103, %r11225;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11232, %r575, %r11115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11235, %r572, %r11112, %r11232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11239, %r575, %r11124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11242, %r572, %r11121, %r11239;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11246, %r575, %r11133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11249, %r572, %r11130, %r11246;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11253, %r575, %r11142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11256, %r572, %r11139, %r11253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11260, %r575, %r11151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11263, %r572, %r11148, %r11260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11267, %r575, %r11160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11270, %r572, %r11157, %r11267;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11563, %r11566}, {%r610, %r616, %r613, %r619}, {%r11023, %r11165}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11569, %r11572}, {%r610, %r616, %r613, %r619}, {%r11032, %r11172}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11575, %r11578}, {%r610, %r616, %r613, %r619}, {%r11041, %r11179}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11581, %r11584}, {%r610, %r616, %r613, %r619}, {%r11050, %r11186}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11587, %r11590}, {%r610, %r616, %r613, %r619}, {%r11059, %r11193}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11593, %r11596}, {%r610, %r616, %r613, %r619}, {%r11068, %r11200}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11599, %r11602}, {%r610, %r616, %r613, %r619}, {%r11077, %r11207}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11605, %r11608}, {%r610, %r616, %r613, %r619}, {%r11086, %r11214}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11564, %r11567}, {%r610, %r616, %r613, %r619}, {%r11095, %r11221}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11570, %r11573}, {%r610, %r616, %r613, %r619}, {%r11104, %r11228}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11576, %r11579}, {%r610, %r616, %r613, %r619}, {%r11113, %r11235}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11582, %r11585}, {%r610, %r616, %r613, %r619}, {%r11122, %r11242}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11588, %r11591}, {%r610, %r616, %r613, %r619}, {%r11131, %r11249}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11594, %r11597}, {%r610, %r616, %r613, %r619}, {%r11140, %r11256}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11600, %r11603}, {%r610, %r616, %r613, %r619}, {%r11149, %r11263}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11606, %r11609}, {%r610, %r616, %r613, %r619}, {%r11158, %r11270}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11562, %r11563, %r11564;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11565, %r11566, %r11567;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11568, %r11569, %r11570;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11571, %r11572, %r11573;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11574, %r11575, %r11576;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11577, %r11578, %r11579;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11580, %r11581, %r11582;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11583, %r11584, %r11585;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11586, %r11587, %r11588;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11589, %r11590, %r11591;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11592, %r11593, %r11594;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11595, %r11596, %r11597;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11598, %r11599, %r11600;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11601, %r11602, %r11603;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11604, %r11605, %r11606;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11607, %r11608, %r11609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11610, %r11563, %r11564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11613, %r11566, %r11567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11616, %r11569, %r11570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11619, %r11572, %r11573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11622, %r11575, %r11576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11625, %r11578, %r11579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11628, %r11581, %r11582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11631, %r11584, %r11585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11634, %r11587, %r11588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11637, %r11590, %r11591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11640, %r11593, %r11594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11643, %r11596, %r11597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11646, %r11599, %r11600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11649, %r11602, %r11603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11652, %r11605, %r11606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11655, %r11608, %r11609;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11658, %r235, %r11562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11661, %r235, %r11565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11664, %r235, %r11568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11667, %r235, %r11571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11670, %r235, %r11574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11673, %r235, %r11577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11676, %r235, %r11580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11679, %r235, %r11583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11682, %r235, %r11586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11685, %r235, %r11589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11688, %r235, %r11592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11691, %r235, %r11595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11694, %r235, %r11598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11697, %r235, %r11601;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11700, %r235, %r11604;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11703, %r235, %r11607;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11706, %r237, %r11610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11709, %r237, %r11613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11712, %r237, %r11616;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11715, %r237, %r11619;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11718, %r237, %r11622;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11721, %r237, %r11625;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11724, %r237, %r11628;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11727, %r237, %r11631;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11730, %r237, %r11634;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11733, %r237, %r11637;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11736, %r237, %r11640;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11739, %r237, %r11643;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11742, %r237, %r11646;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11745, %r237, %r11649;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11748, %r237, %r11652;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11751, %r237, %r11655;
	// end inline asm
	// begin inline asm
	mov.b32 %r11754, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11755, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11756, %r11658, %r11754;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11759, %r11756, %r11755;
	// end inline asm
	// begin inline asm
	mov.b32 %r11762, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11763, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11764, %r11661, %r11762;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11767, %r11764, %r11763;
	// end inline asm
	// begin inline asm
	mov.b32 %r11770, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11771, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11772, %r11664, %r11770;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11775, %r11772, %r11771;
	// end inline asm
	// begin inline asm
	mov.b32 %r11778, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11779, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11780, %r11667, %r11778;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11783, %r11780, %r11779;
	// end inline asm
	// begin inline asm
	mov.b32 %r11786, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11787, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11788, %r11670, %r11786;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11791, %r11788, %r11787;
	// end inline asm
	// begin inline asm
	mov.b32 %r11794, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11795, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11796, %r11673, %r11794;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11799, %r11796, %r11795;
	// end inline asm
	// begin inline asm
	mov.b32 %r11802, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11803, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11804, %r11676, %r11802;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11807, %r11804, %r11803;
	// end inline asm
	// begin inline asm
	mov.b32 %r11810, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11811, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11812, %r11679, %r11810;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11815, %r11812, %r11811;
	// end inline asm
	// begin inline asm
	mov.b32 %r11818, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11819, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11820, %r11682, %r11818;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11823, %r11820, %r11819;
	// end inline asm
	// begin inline asm
	mov.b32 %r11826, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11827, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11828, %r11685, %r11826;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11831, %r11828, %r11827;
	// end inline asm
	// begin inline asm
	mov.b32 %r11834, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11835, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11836, %r11688, %r11834;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11839, %r11836, %r11835;
	// end inline asm
	// begin inline asm
	mov.b32 %r11842, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11843, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11844, %r11691, %r11842;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11847, %r11844, %r11843;
	// end inline asm
	// begin inline asm
	mov.b32 %r11850, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11851, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11852, %r11694, %r11850;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11855, %r11852, %r11851;
	// end inline asm
	// begin inline asm
	mov.b32 %r11858, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11859, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11860, %r11697, %r11858;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11863, %r11860, %r11859;
	// end inline asm
	// begin inline asm
	mov.b32 %r11866, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11867, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11868, %r11700, %r11866;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11871, %r11868, %r11867;
	// end inline asm
	// begin inline asm
	mov.b32 %r11874, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11875, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11876, %r11703, %r11874;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11879, %r11876, %r11875;
	// end inline asm
	// begin inline asm
	mov.b32 %r11882, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11883, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11884, %r11706, %r11882;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11887, %r11884, %r11883;
	// end inline asm
	// begin inline asm
	mov.b32 %r11890, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11891, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11892, %r11709, %r11890;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11895, %r11892, %r11891;
	// end inline asm
	// begin inline asm
	mov.b32 %r11898, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11899, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11900, %r11712, %r11898;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11903, %r11900, %r11899;
	// end inline asm
	// begin inline asm
	mov.b32 %r11906, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11907, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11908, %r11715, %r11906;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11911, %r11908, %r11907;
	// end inline asm
	// begin inline asm
	mov.b32 %r11914, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11915, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11916, %r11718, %r11914;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11919, %r11916, %r11915;
	// end inline asm
	// begin inline asm
	mov.b32 %r11922, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11923, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11924, %r11721, %r11922;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11927, %r11924, %r11923;
	// end inline asm
	// begin inline asm
	mov.b32 %r11930, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11931, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11932, %r11724, %r11930;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11935, %r11932, %r11931;
	// end inline asm
	// begin inline asm
	mov.b32 %r11938, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11939, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11940, %r11727, %r11938;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11943, %r11940, %r11939;
	// end inline asm
	// begin inline asm
	mov.b32 %r11946, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11947, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11948, %r11730, %r11946;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11951, %r11948, %r11947;
	// end inline asm
	// begin inline asm
	mov.b32 %r11954, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11955, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11956, %r11733, %r11954;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11959, %r11956, %r11955;
	// end inline asm
	// begin inline asm
	mov.b32 %r11962, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11963, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11964, %r11736, %r11962;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11967, %r11964, %r11963;
	// end inline asm
	// begin inline asm
	mov.b32 %r11970, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11971, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11972, %r11739, %r11970;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11975, %r11972, %r11971;
	// end inline asm
	// begin inline asm
	mov.b32 %r11978, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11979, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11980, %r11742, %r11978;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11983, %r11980, %r11979;
	// end inline asm
	// begin inline asm
	mov.b32 %r11986, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11987, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11988, %r11745, %r11986;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11991, %r11988, %r11987;
	// end inline asm
	// begin inline asm
	mov.b32 %r11994, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11995, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11996, %r11748, %r11994;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11999, %r11996, %r11995;
	// end inline asm
	// begin inline asm
	mov.b32 %r12002, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r12003, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12004, %r11751, %r12002;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12007, %r12004, %r12003;
	// end inline asm
	// begin inline asm
	mov.b32 %r12013, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12012, %r12013, %r12011;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12015, %r11759, %r12012;
	// end inline asm
	// begin inline asm
	mov.b32 %r12018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12019, %r12013, %r12018;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12022, %r11767, %r12019;
	// end inline asm
	// begin inline asm
	mov.b32 %r12025, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12026, %r12013, %r12025;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12029, %r11775, %r12026;
	// end inline asm
	// begin inline asm
	mov.b32 %r12032, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12033, %r12013, %r12032;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12036, %r11783, %r12033;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12039, %r12015, %r12029, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12043, %r12022, %r12036, %r4410;
	// end inline asm
	shl.b32 	%r12050, %r12043, 4;
	// begin inline asm
	lop3.b32 %r12047, %r4416, %r12039, %r12050, 202;
	// end inline asm
	xor.b32  	%r16259, %r12047, -2004318072;
	// begin inline asm
	mov.b32 %r12054, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12052, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12053, %r12054, %r12052;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12056, %r11791, %r12053;
	// end inline asm
	// begin inline asm
	mov.b32 %r12059, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12060, %r12054, %r12059;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12063, %r11799, %r12060;
	// end inline asm
	// begin inline asm
	mov.b32 %r12066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12067, %r12054, %r12066;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12070, %r11807, %r12067;
	// end inline asm
	// begin inline asm
	mov.b32 %r12073, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12074, %r12054, %r12073;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12077, %r11815, %r12074;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12080, %r12056, %r12070, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12084, %r12063, %r12077, %r4410;
	// end inline asm
	shl.b32 	%r12091, %r12084, 4;
	// begin inline asm
	lop3.b32 %r12088, %r4416, %r12080, %r12091, 202;
	// end inline asm
	xor.b32  	%r16260, %r12088, -2004318072;
	// begin inline asm
	mov.b32 %r12095, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12093, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12094, %r12095, %r12093;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12097, %r11823, %r12094;
	// end inline asm
	// begin inline asm
	mov.b32 %r12100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12101, %r12095, %r12100;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12104, %r11831, %r12101;
	// end inline asm
	// begin inline asm
	mov.b32 %r12107, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12108, %r12095, %r12107;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12111, %r11839, %r12108;
	// end inline asm
	// begin inline asm
	mov.b32 %r12114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12115, %r12095, %r12114;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12118, %r11847, %r12115;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12121, %r12097, %r12111, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12125, %r12104, %r12118, %r4410;
	// end inline asm
	shl.b32 	%r12132, %r12125, 4;
	// begin inline asm
	lop3.b32 %r12129, %r4416, %r12121, %r12132, 202;
	// end inline asm
	xor.b32  	%r16261, %r12129, -2004318072;
	// begin inline asm
	mov.b32 %r12136, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12135, %r12136, %r12134;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12138, %r11855, %r12135;
	// end inline asm
	// begin inline asm
	mov.b32 %r12141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12142, %r12136, %r12141;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12145, %r11863, %r12142;
	// end inline asm
	// begin inline asm
	mov.b32 %r12148, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12149, %r12136, %r12148;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12152, %r11871, %r12149;
	// end inline asm
	// begin inline asm
	mov.b32 %r12155, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12156, %r12136, %r12155;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12159, %r11879, %r12156;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12162, %r12138, %r12152, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12166, %r12145, %r12159, %r4410;
	// end inline asm
	shl.b32 	%r12173, %r12166, 4;
	// begin inline asm
	lop3.b32 %r12170, %r4416, %r12162, %r12173, 202;
	// end inline asm
	xor.b32  	%r16262, %r12170, -2004318072;
	// begin inline asm
	mov.b32 %r12177, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12175, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12176, %r12177, %r12175;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12179, %r11887, %r12176;
	// end inline asm
	// begin inline asm
	mov.b32 %r12182, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12183, %r12177, %r12182;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12186, %r11895, %r12183;
	// end inline asm
	// begin inline asm
	mov.b32 %r12189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12190, %r12177, %r12189;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12193, %r11903, %r12190;
	// end inline asm
	// begin inline asm
	mov.b32 %r12196, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12197, %r12177, %r12196;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12200, %r11911, %r12197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12203, %r12179, %r12193, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12207, %r12186, %r12200, %r4410;
	// end inline asm
	shl.b32 	%r12214, %r12207, 4;
	// begin inline asm
	lop3.b32 %r12211, %r4416, %r12203, %r12214, 202;
	// end inline asm
	xor.b32  	%r16263, %r12211, -2004318072;
	// begin inline asm
	mov.b32 %r12218, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12216, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12217, %r12218, %r12216;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12220, %r11919, %r12217;
	// end inline asm
	// begin inline asm
	mov.b32 %r12223, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12224, %r12218, %r12223;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12227, %r11927, %r12224;
	// end inline asm
	// begin inline asm
	mov.b32 %r12230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12231, %r12218, %r12230;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12234, %r11935, %r12231;
	// end inline asm
	// begin inline asm
	mov.b32 %r12237, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12238, %r12218, %r12237;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12241, %r11943, %r12238;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12244, %r12220, %r12234, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12248, %r12227, %r12241, %r4410;
	// end inline asm
	shl.b32 	%r12255, %r12248, 4;
	// begin inline asm
	lop3.b32 %r12252, %r4416, %r12244, %r12255, 202;
	// end inline asm
	xor.b32  	%r16264, %r12252, -2004318072;
	// begin inline asm
	mov.b32 %r12259, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12257, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12258, %r12259, %r12257;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12261, %r11951, %r12258;
	// end inline asm
	// begin inline asm
	mov.b32 %r12264, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12265, %r12259, %r12264;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12268, %r11959, %r12265;
	// end inline asm
	// begin inline asm
	mov.b32 %r12271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12272, %r12259, %r12271;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12275, %r11967, %r12272;
	// end inline asm
	// begin inline asm
	mov.b32 %r12278, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12279, %r12259, %r12278;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12282, %r11975, %r12279;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12285, %r12261, %r12275, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12289, %r12268, %r12282, %r4410;
	// end inline asm
	shl.b32 	%r12296, %r12289, 4;
	// begin inline asm
	lop3.b32 %r12293, %r4416, %r12285, %r12296, 202;
	// end inline asm
	xor.b32  	%r16265, %r12293, -2004318072;
	// begin inline asm
	mov.b32 %r12300, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12298, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12299, %r12300, %r12298;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12302, %r11983, %r12299;
	// end inline asm
	// begin inline asm
	mov.b32 %r12305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12306, %r12300, %r12305;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12309, %r11991, %r12306;
	// end inline asm
	// begin inline asm
	mov.b32 %r12312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12313, %r12300, %r12312;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12316, %r11999, %r12313;
	// end inline asm
	// begin inline asm
	mov.b32 %r12319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12320, %r12300, %r12319;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12323, %r12007, %r12320;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12326, %r12302, %r12316, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12330, %r12309, %r12323, %r4410;
	// end inline asm
	shl.b32 	%r12337, %r12330, 4;
	// begin inline asm
	lop3.b32 %r12334, %r4416, %r12326, %r12337, 202;
	// end inline asm
	xor.b32  	%r16266, %r12334, -2004318072;
	st.shared.u32 	[%rd110], %r16259;
	st.shared.u32 	[%rd112], %r16260;
	st.shared.u32 	[%rd114], %r16261;
	st.shared.u32 	[%rd116], %r16262;
	st.shared.u32 	[%rd118], %r16263;
	st.shared.u32 	[%rd120], %r16264;
	st.shared.u32 	[%rd122], %r16265;
	st.shared.u32 	[%rd124], %r16266;
	ld.shared.u32 	%r16402, [%rd94];
	ld.shared.u32 	%r16403, [%rd96];
	ld.shared.u32 	%r16404, [%rd98];
	ld.shared.u32 	%r16405, [%rd100];
	ld.shared.u32 	%r16414, [%rd102];
	ld.shared.u32 	%r16415, [%rd104];
	ld.shared.u32 	%r16416, [%rd106];
	ld.shared.u32 	%r16417, [%rd108];
	// begin inline asm
	mov.b32 %r12343, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12354, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12342, %r16402, -2004318072;
	// begin inline asm
	lop3.b32 %r12340, %r893, %r12342, %r12343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12344, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12345, %r12343, %r12344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12348, %r12340, %r12345;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12351, %r904, %r12342, %r12354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12355, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12356, %r12354, %r12355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12359, %r12351, %r12356;
	// end inline asm
	shr.u32 	%r12364, %r12342, 8;
	// begin inline asm
	lop3.b32 %r12362, %r893, %r12364, %r12343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12367, %r12343, %r12366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12370, %r12362, %r12367;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12373, %r904, %r12364, %r12354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12377, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12378, %r12354, %r12377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12381, %r12373, %r12378;
	// end inline asm
	// begin inline asm
	mov.b32 %r12389, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12400, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12388, %r16403, -2004318072;
	// begin inline asm
	lop3.b32 %r12386, %r893, %r12388, %r12389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12390, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12391, %r12389, %r12390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12394, %r12386, %r12391;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12397, %r904, %r12388, %r12400, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12402, %r12400, %r12401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12405, %r12397, %r12402;
	// end inline asm
	shr.u32 	%r12410, %r12388, 8;
	// begin inline asm
	lop3.b32 %r12408, %r893, %r12410, %r12389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12413, %r12389, %r12412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12416, %r12408, %r12413;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12419, %r904, %r12410, %r12400, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12423, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12424, %r12400, %r12423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12427, %r12419, %r12424;
	// end inline asm
	// begin inline asm
	mov.b32 %r12435, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12446, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12434, %r16404, -2004318072;
	// begin inline asm
	lop3.b32 %r12432, %r893, %r12434, %r12435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12436, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12437, %r12435, %r12436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12440, %r12432, %r12437;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12443, %r904, %r12434, %r12446, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12447, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12448, %r12446, %r12447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12451, %r12443, %r12448;
	// end inline asm
	shr.u32 	%r12456, %r12434, 8;
	// begin inline asm
	lop3.b32 %r12454, %r893, %r12456, %r12435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12459, %r12435, %r12458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12462, %r12454, %r12459;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12465, %r904, %r12456, %r12446, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12470, %r12446, %r12469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12473, %r12465, %r12470;
	// end inline asm
	// begin inline asm
	mov.b32 %r12481, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12492, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12480, %r16405, -2004318072;
	// begin inline asm
	lop3.b32 %r12478, %r893, %r12480, %r12481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12482, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12483, %r12481, %r12482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12486, %r12478, %r12483;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12489, %r904, %r12480, %r12492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12493, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12494, %r12492, %r12493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12497, %r12489, %r12494;
	// end inline asm
	shr.u32 	%r12502, %r12480, 8;
	// begin inline asm
	lop3.b32 %r12500, %r893, %r12502, %r12481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12505, %r12481, %r12504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12508, %r12500, %r12505;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12511, %r904, %r12502, %r12492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12515, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12516, %r12492, %r12515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12519, %r12511, %r12516;
	// end inline asm
	// begin inline asm
	mov.b32 %r12527, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12538, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12526, %r16414, -2004318072;
	// begin inline asm
	lop3.b32 %r12524, %r893, %r12526, %r12527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12529, %r12527, %r12528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12532, %r12524, %r12529;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12535, %r904, %r12526, %r12538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12539, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12540, %r12538, %r12539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12543, %r12535, %r12540;
	// end inline asm
	shr.u32 	%r12548, %r12526, 8;
	// begin inline asm
	lop3.b32 %r12546, %r893, %r12548, %r12527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12550, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12551, %r12527, %r12550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12554, %r12546, %r12551;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12557, %r904, %r12548, %r12538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12561, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12562, %r12538, %r12561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12565, %r12557, %r12562;
	// end inline asm
	// begin inline asm
	mov.b32 %r12573, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12584, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12572, %r16415, -2004318072;
	// begin inline asm
	lop3.b32 %r12570, %r893, %r12572, %r12573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12575, %r12573, %r12574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12578, %r12570, %r12575;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12581, %r904, %r12572, %r12584, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12586, %r12584, %r12585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12589, %r12581, %r12586;
	// end inline asm
	shr.u32 	%r12594, %r12572, 8;
	// begin inline asm
	lop3.b32 %r12592, %r893, %r12594, %r12573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12596, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12597, %r12573, %r12596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12600, %r12592, %r12597;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12603, %r904, %r12594, %r12584, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12607, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12608, %r12584, %r12607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12611, %r12603, %r12608;
	// end inline asm
	// begin inline asm
	mov.b32 %r12619, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12630, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12618, %r16416, -2004318072;
	// begin inline asm
	lop3.b32 %r12616, %r893, %r12618, %r12619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12620, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12621, %r12619, %r12620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12624, %r12616, %r12621;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12627, %r904, %r12618, %r12630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12631, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12632, %r12630, %r12631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12635, %r12627, %r12632;
	// end inline asm
	shr.u32 	%r12640, %r12618, 8;
	// begin inline asm
	lop3.b32 %r12638, %r893, %r12640, %r12619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12642, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12643, %r12619, %r12642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12646, %r12638, %r12643;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12649, %r904, %r12640, %r12630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12653, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12654, %r12630, %r12653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12657, %r12649, %r12654;
	// end inline asm
	// begin inline asm
	mov.b32 %r12665, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12676, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12664, %r16417, -2004318072;
	// begin inline asm
	lop3.b32 %r12662, %r893, %r12664, %r12665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12666, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12667, %r12665, %r12666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12670, %r12662, %r12667;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12673, %r904, %r12664, %r12676, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12677, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12678, %r12676, %r12677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12681, %r12673, %r12678;
	// end inline asm
	shr.u32 	%r12686, %r12664, 8;
	// begin inline asm
	lop3.b32 %r12684, %r893, %r12686, %r12665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12688, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12689, %r12665, %r12688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12692, %r12684, %r12689;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12695, %r904, %r12686, %r12676, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12699, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12700, %r12676, %r12699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12703, %r12695, %r12700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12706, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12708, %r12706, %r12348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12711, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12713, %r12711, %r12359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12716, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12718, %r12716, %r12370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12721, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12723, %r12721, %r12381;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12726, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12728, %r12726, %r12394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12731, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12733, %r12731, %r12405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12736, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12738, %r12736, %r12416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12741, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12743, %r12741, %r12427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12746, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12748, %r12746, %r12440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12751, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12753, %r12751, %r12451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12756, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12758, %r12756, %r12462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12761, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12763, %r12761, %r12473;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12766, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12768, %r12766, %r12486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12771, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12773, %r12771, %r12497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12776, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12778, %r12776, %r12508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12781, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12783, %r12781, %r12519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12786, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12788, %r12786, %r12532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12791, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12793, %r12791, %r12543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12796, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12798, %r12796, %r12554;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12801, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12803, %r12801, %r12565;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12806, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12808, %r12806, %r12578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12811, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12813, %r12811, %r12589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12816, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12818, %r12816, %r12600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12821, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12823, %r12821, %r12611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12826, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12828, %r12826, %r12624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12831, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12833, %r12831, %r12635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12836, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12838, %r12836, %r12646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12841, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12843, %r12841, %r12657;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12846, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12848, %r12846, %r12670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12851, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12853, %r12851, %r12681;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12856, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12858, %r12856, %r12692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12861, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12863, %r12861, %r12703;
	// end inline asm
	// begin inline asm
	mov.b32 %r12871, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12882, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12868, %r893, %r894, %r12871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12872, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12873, %r12871, %r12872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12876, %r12868, %r12873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12879, %r904, %r894, %r12882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12883, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12884, %r12882, %r12883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12887, %r12879, %r12884;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12890, %r893, %r916, %r12871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12894, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12895, %r12871, %r12894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12898, %r12890, %r12895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12901, %r904, %r916, %r12882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12905, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12906, %r12882, %r12905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12909, %r12901, %r12906;
	// end inline asm
	// begin inline asm
	mov.b32 %r12917, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12928, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12914, %r893, %r940, %r12917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12918, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12919, %r12917, %r12918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12922, %r12914, %r12919;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12925, %r904, %r940, %r12928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12929, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12930, %r12928, %r12929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12933, %r12925, %r12930;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12936, %r893, %r962, %r12917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12940, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12941, %r12917, %r12940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12944, %r12936, %r12941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12947, %r904, %r962, %r12928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12952, %r12928, %r12951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12955, %r12947, %r12952;
	// end inline asm
	// begin inline asm
	mov.b32 %r12963, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12974, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12960, %r893, %r986, %r12963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12965, %r12963, %r12964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12968, %r12960, %r12965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12971, %r904, %r986, %r12974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12975, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12976, %r12974, %r12975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12979, %r12971, %r12976;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12982, %r893, %r1008, %r12963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12986, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12987, %r12963, %r12986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12990, %r12982, %r12987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12993, %r904, %r1008, %r12974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12998, %r12974, %r12997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13001, %r12993, %r12998;
	// end inline asm
	// begin inline asm
	mov.b32 %r13009, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13020, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13006, %r893, %r1032, %r13009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13010, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13011, %r13009, %r13010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13014, %r13006, %r13011;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13017, %r904, %r1032, %r13020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13022, %r13020, %r13021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13025, %r13017, %r13022;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13028, %r893, %r1054, %r13009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13032, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13033, %r13009, %r13032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13036, %r13028, %r13033;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13039, %r904, %r1054, %r13020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13044, %r13020, %r13043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13047, %r13039, %r13044;
	// end inline asm
	// begin inline asm
	mov.b32 %r13055, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13066, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13052, %r893, %r1078, %r13055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13057, %r13055, %r13056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13060, %r13052, %r13057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13063, %r904, %r1078, %r13066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13068, %r13066, %r13067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13071, %r13063, %r13068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13074, %r893, %r1100, %r13055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13078, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13079, %r13055, %r13078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13082, %r13074, %r13079;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13085, %r904, %r1100, %r13066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13090, %r13066, %r13089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13093, %r13085, %r13090;
	// end inline asm
	// begin inline asm
	mov.b32 %r13101, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13112, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13098, %r893, %r1124, %r13101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13102, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13103, %r13101, %r13102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13106, %r13098, %r13103;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13109, %r904, %r1124, %r13112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13114, %r13112, %r13113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13117, %r13109, %r13114;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13120, %r893, %r1146, %r13101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13125, %r13101, %r13124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13128, %r13120, %r13125;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13131, %r904, %r1146, %r13112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13136, %r13112, %r13135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13139, %r13131, %r13136;
	// end inline asm
	// begin inline asm
	mov.b32 %r13147, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13158, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13144, %r893, %r1170, %r13147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13148, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13149, %r13147, %r13148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13152, %r13144, %r13149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13155, %r904, %r1170, %r13158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13160, %r13158, %r13159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13163, %r13155, %r13160;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13166, %r893, %r1192, %r13147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13170, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13171, %r13147, %r13170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13174, %r13166, %r13171;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13177, %r904, %r1192, %r13158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13182, %r13158, %r13181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13185, %r13177, %r13182;
	// end inline asm
	// begin inline asm
	mov.b32 %r13193, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13204, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13190, %r893, %r1216, %r13193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13194, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13195, %r13193, %r13194;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13198, %r13190, %r13195;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13201, %r904, %r1216, %r13204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13206, %r13204, %r13205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13209, %r13201, %r13206;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13212, %r893, %r1238, %r13193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13216, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13217, %r13193, %r13216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13220, %r13212, %r13217;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13223, %r904, %r1238, %r13204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13228, %r13204, %r13227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13231, %r13223, %r13228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13234, %r313, %r12876, %r12708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13238, %r313, %r12887, %r12713;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13242, %r313, %r12898, %r12718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13246, %r313, %r12909, %r12723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13250, %r313, %r12922, %r12728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13254, %r313, %r12933, %r12733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13258, %r313, %r12944, %r12738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13262, %r313, %r12955, %r12743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13266, %r313, %r12968, %r12748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13270, %r313, %r12979, %r12753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13274, %r313, %r12990, %r12758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13278, %r313, %r13001, %r12763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13282, %r313, %r13014, %r12768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13286, %r313, %r13025, %r12773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13290, %r313, %r13036, %r12778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13294, %r313, %r13047, %r12783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13298, %r331, %r13060, %r12788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13302, %r331, %r13071, %r12793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13306, %r331, %r13082, %r12798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13310, %r331, %r13093, %r12803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13314, %r331, %r13106, %r12808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13318, %r331, %r13117, %r12813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13322, %r331, %r13128, %r12818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13326, %r331, %r13139, %r12823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13330, %r331, %r13152, %r12828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13334, %r331, %r13163, %r12833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13338, %r331, %r13174, %r12838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13342, %r331, %r13185, %r12843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13346, %r331, %r13198, %r12848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13350, %r331, %r13209, %r12853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13354, %r331, %r13220, %r12858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13358, %r331, %r13231, %r12863;
	// end inline asm
	// begin inline asm
	mov.b32 %r13367, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13378, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13364, %r893, %r4710, %r13367, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13368, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13369, %r13367, %r13368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13372, %r13364, %r13369;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13375, %r904, %r4710, %r13378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13379, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13380, %r13378, %r13379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13383, %r13375, %r13380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13386, %r893, %r4732, %r13367, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13390, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13391, %r13367, %r13390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13394, %r13386, %r13391;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13397, %r904, %r4732, %r13378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13402, %r13378, %r13401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13405, %r13397, %r13402;
	// end inline asm
	// begin inline asm
	mov.b32 %r13413, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13424, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13410, %r893, %r4756, %r13413, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13414, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13415, %r13413, %r13414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13418, %r13410, %r13415;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13421, %r904, %r4756, %r13424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13425, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13426, %r13424, %r13425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13429, %r13421, %r13426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13432, %r893, %r4778, %r13413, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13436, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13437, %r13413, %r13436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13440, %r13432, %r13437;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13443, %r904, %r4778, %r13424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13447, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13448, %r13424, %r13447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13451, %r13443, %r13448;
	// end inline asm
	// begin inline asm
	mov.b32 %r13459, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13470, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13456, %r893, %r4802, %r13459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13460, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13461, %r13459, %r13460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13464, %r13456, %r13461;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13467, %r904, %r4802, %r13470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13472, %r13470, %r13471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13475, %r13467, %r13472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13478, %r893, %r4824, %r13459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13482, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13483, %r13459, %r13482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13486, %r13478, %r13483;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13489, %r904, %r4824, %r13470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13493, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13494, %r13470, %r13493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13497, %r13489, %r13494;
	// end inline asm
	// begin inline asm
	mov.b32 %r13505, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13516, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13502, %r893, %r4848, %r13505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13506, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13507, %r13505, %r13506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13510, %r13502, %r13507;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13513, %r904, %r4848, %r13516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13518, %r13516, %r13517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13521, %r13513, %r13518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13524, %r893, %r4870, %r13505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13529, %r13505, %r13528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13532, %r13524, %r13529;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13535, %r904, %r4870, %r13516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13539, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13540, %r13516, %r13539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13543, %r13535, %r13540;
	// end inline asm
	// begin inline asm
	mov.b32 %r13551, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13562, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13548, %r893, %r4894, %r13551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13552, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13553, %r13551, %r13552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13556, %r13548, %r13553;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13559, %r904, %r4894, %r13562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13563, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13564, %r13562, %r13563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13567, %r13559, %r13564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13570, %r893, %r4916, %r13551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13575, %r13551, %r13574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13578, %r13570, %r13575;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13581, %r904, %r4916, %r13562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13586, %r13562, %r13585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13589, %r13581, %r13586;
	// end inline asm
	// begin inline asm
	mov.b32 %r13597, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13608, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13594, %r893, %r4940, %r13597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13598, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13599, %r13597, %r13598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13602, %r13594, %r13599;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13605, %r904, %r4940, %r13608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13609, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13610, %r13608, %r13609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13613, %r13605, %r13610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13616, %r893, %r4962, %r13597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13620, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13621, %r13597, %r13620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13624, %r13616, %r13621;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13627, %r904, %r4962, %r13608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13631, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13632, %r13608, %r13631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13635, %r13627, %r13632;
	// end inline asm
	// begin inline asm
	mov.b32 %r13643, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13654, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13640, %r893, %r4986, %r13643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13644, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13645, %r13643, %r13644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13648, %r13640, %r13645;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13651, %r904, %r4986, %r13654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13655, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13656, %r13654, %r13655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13659, %r13651, %r13656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13662, %r893, %r5008, %r13643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13666, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13667, %r13643, %r13666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13670, %r13662, %r13667;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13673, %r904, %r5008, %r13654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13677, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13678, %r13654, %r13677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13681, %r13673, %r13678;
	// end inline asm
	// begin inline asm
	mov.b32 %r13689, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13700, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13686, %r893, %r5032, %r13689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13690, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13691, %r13689, %r13690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13694, %r13686, %r13691;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13697, %r904, %r5032, %r13700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13701, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13702, %r13700, %r13701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13705, %r13697, %r13702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13708, %r893, %r5054, %r13689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13712, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13713, %r13689, %r13712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13716, %r13708, %r13713;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13719, %r904, %r5054, %r13700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13723, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13724, %r13700, %r13723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13727, %r13719, %r13724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13730, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13732, %r13730, %r13372, %r13234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13736, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13738, %r13736, %r13383, %r13238;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13742, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13744, %r13742, %r13394, %r13242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13748, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13750, %r13748, %r13405, %r13246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13754, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13756, %r13754, %r13418, %r13250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13760, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13762, %r13760, %r13429, %r13254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13766, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13768, %r13766, %r13440, %r13258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13772, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13774, %r13772, %r13451, %r13262;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13778, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13780, %r13778, %r13464, %r13266;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13784, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13786, %r13784, %r13475, %r13270;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13790, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13792, %r13790, %r13486, %r13274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13796, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13798, %r13796, %r13497, %r13278;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13802, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13804, %r13802, %r13510, %r13282;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13808, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13810, %r13808, %r13521, %r13286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13814, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13816, %r13814, %r13532, %r13290;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13820, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13822, %r13820, %r13543, %r13294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13826, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13828, %r13826, %r13556, %r13298;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13832, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13834, %r13832, %r13567, %r13302;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13838, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13840, %r13838, %r13578, %r13306;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13844, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13846, %r13844, %r13589, %r13310;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13850, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13852, %r13850, %r13602, %r13314;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13856, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13858, %r13856, %r13613, %r13318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13862, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13864, %r13862, %r13624, %r13322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13868, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13870, %r13868, %r13635, %r13326;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13874, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13876, %r13874, %r13648, %r13330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13880, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13882, %r13880, %r13659, %r13334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13886, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13888, %r13886, %r13670, %r13338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13892, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13894, %r13892, %r13681, %r13342;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13898, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13900, %r13898, %r13694, %r13346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13904, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13906, %r13904, %r13705, %r13350;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13910, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13912, %r13910, %r13716, %r13354;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13916, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13918, %r13916, %r13727, %r13358;
	// end inline asm
	// begin inline asm
	mov.b32 %r13927, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13938, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13924, %r893, %r8526, %r13927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13929, %r13927, %r13928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13932, %r13924, %r13929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13935, %r904, %r8526, %r13938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13940, %r13938, %r13939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13943, %r13935, %r13940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13946, %r893, %r8548, %r13927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13951, %r13927, %r13950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13954, %r13946, %r13951;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13957, %r904, %r8548, %r13938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13962, %r13938, %r13961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13965, %r13957, %r13962;
	// end inline asm
	// begin inline asm
	mov.b32 %r13973, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13984, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13970, %r893, %r8572, %r13973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13975, %r13973, %r13974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13978, %r13970, %r13975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13981, %r904, %r8572, %r13984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13986, %r13984, %r13985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13989, %r13981, %r13986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13992, %r893, %r8594, %r13973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13997, %r13973, %r13996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14000, %r13992, %r13997;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14003, %r904, %r8594, %r13984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14008, %r13984, %r14007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14011, %r14003, %r14008;
	// end inline asm
	// begin inline asm
	mov.b32 %r14019, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14030, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14016, %r893, %r8618, %r14019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14021, %r14019, %r14020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14024, %r14016, %r14021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14027, %r904, %r8618, %r14030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14032, %r14030, %r14031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14035, %r14027, %r14032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14038, %r893, %r8640, %r14019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14043, %r14019, %r14042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14046, %r14038, %r14043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14049, %r904, %r8640, %r14030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14054, %r14030, %r14053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14057, %r14049, %r14054;
	// end inline asm
	// begin inline asm
	mov.b32 %r14065, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14076, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14062, %r893, %r8664, %r14065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14067, %r14065, %r14066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14070, %r14062, %r14067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14073, %r904, %r8664, %r14076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14078, %r14076, %r14077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14081, %r14073, %r14078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14084, %r893, %r8686, %r14065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14088, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14089, %r14065, %r14088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14092, %r14084, %r14089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14095, %r904, %r8686, %r14076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14100, %r14076, %r14099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14103, %r14095, %r14100;
	// end inline asm
	// begin inline asm
	mov.b32 %r14111, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14122, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14108, %r893, %r8710, %r14111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14113, %r14111, %r14112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14116, %r14108, %r14113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14119, %r904, %r8710, %r14122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14124, %r14122, %r14123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14127, %r14119, %r14124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14130, %r893, %r8732, %r14111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14135, %r14111, %r14134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14138, %r14130, %r14135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14141, %r904, %r8732, %r14122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14145, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14146, %r14122, %r14145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14149, %r14141, %r14146;
	// end inline asm
	// begin inline asm
	mov.b32 %r14157, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14168, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14154, %r893, %r8756, %r14157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14159, %r14157, %r14158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14162, %r14154, %r14159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14165, %r904, %r8756, %r14168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14170, %r14168, %r14169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14173, %r14165, %r14170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14176, %r893, %r8778, %r14157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14180, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14181, %r14157, %r14180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14184, %r14176, %r14181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14187, %r904, %r8778, %r14168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14191, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14192, %r14168, %r14191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14195, %r14187, %r14192;
	// end inline asm
	// begin inline asm
	mov.b32 %r14203, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14214, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14200, %r893, %r8802, %r14203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14204, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14205, %r14203, %r14204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14208, %r14200, %r14205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14211, %r904, %r8802, %r14214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14215, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14216, %r14214, %r14215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14219, %r14211, %r14216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14222, %r893, %r8824, %r14203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14226, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14227, %r14203, %r14226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14230, %r14222, %r14227;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14233, %r904, %r8824, %r14214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14237, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14238, %r14214, %r14237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14241, %r14233, %r14238;
	// end inline asm
	// begin inline asm
	mov.b32 %r14249, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14260, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14246, %r893, %r8848, %r14249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14251, %r14249, %r14250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14254, %r14246, %r14251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14257, %r904, %r8848, %r14260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14261, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14262, %r14260, %r14261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14265, %r14257, %r14262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14268, %r893, %r8870, %r14249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14272, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14273, %r14249, %r14272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14276, %r14268, %r14273;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14279, %r904, %r8870, %r14260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14283, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14284, %r14260, %r14283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14287, %r14279, %r14284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14425, %r385, %r13932, %r13732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14422, %r385, %r13943, %r13738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14434, %r385, %r13954, %r13744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14431, %r385, %r13965, %r13750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14443, %r385, %r13978, %r13756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14440, %r385, %r13989, %r13762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14452, %r385, %r14000, %r13768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14449, %r385, %r14011, %r13774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14461, %r385, %r14024, %r13780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14458, %r385, %r14035, %r13786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14470, %r385, %r14046, %r13792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14467, %r385, %r14057, %r13798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14479, %r385, %r14070, %r13804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14476, %r385, %r14081, %r13810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14488, %r385, %r14092, %r13816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14485, %r385, %r14103, %r13822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14497, %r403, %r14116, %r13828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14494, %r403, %r14127, %r13834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14506, %r403, %r14138, %r13840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14503, %r403, %r14149, %r13846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14515, %r403, %r14162, %r13852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14512, %r403, %r14173, %r13858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14524, %r403, %r14184, %r13864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14521, %r403, %r14195, %r13870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14533, %r403, %r14208, %r13876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14530, %r403, %r14219, %r13882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14542, %r403, %r14230, %r13888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14539, %r403, %r14241, %r13894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14551, %r403, %r14254, %r13900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14548, %r403, %r14265, %r13906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14560, %r403, %r14276, %r13912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14557, %r403, %r14287, %r13918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14418, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14420, %r14418, %r14422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14423, %r467, %r14425, %r14420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14427, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14429, %r14427, %r14431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14432, %r467, %r14434, %r14429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14436, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14438, %r14436, %r14440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14441, %r467, %r14443, %r14438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14445, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14447, %r14445, %r14449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14450, %r467, %r14452, %r14447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14454, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14456, %r14454, %r14458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14459, %r467, %r14461, %r14456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14463, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14465, %r14463, %r14467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14468, %r467, %r14470, %r14465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14472, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14474, %r14472, %r14476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14477, %r467, %r14479, %r14474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14481, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14483, %r14481, %r14485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14486, %r467, %r14488, %r14483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14490, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14492, %r14490, %r14494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14495, %r470, %r14497, %r14492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14499, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14501, %r14499, %r14503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14504, %r470, %r14506, %r14501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14508, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14510, %r14508, %r14512;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14513, %r470, %r14515, %r14510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14517, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14519, %r14517, %r14521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14522, %r470, %r14524, %r14519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14526, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14528, %r14526, %r14530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14531, %r470, %r14533, %r14528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14535, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14537, %r14535, %r14539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14540, %r470, %r14542, %r14537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14544, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14546, %r14544, %r14548;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14549, %r470, %r14551, %r14546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14553, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14555, %r14553, %r14557;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14558, %r470, %r14560, %r14555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14562, %r473, %r14425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14565, %r467, %r14422, %r14562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14569, %r473, %r14434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14572, %r467, %r14431, %r14569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14576, %r473, %r14443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14579, %r467, %r14440, %r14576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14583, %r473, %r14452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14586, %r467, %r14449, %r14583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14590, %r473, %r14461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14593, %r467, %r14458, %r14590;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14597, %r473, %r14470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14600, %r467, %r14467, %r14597;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14604, %r473, %r14479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14607, %r467, %r14476, %r14604;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14611, %r473, %r14488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14614, %r467, %r14485, %r14611;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14618, %r476, %r14497;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14621, %r470, %r14494, %r14618;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14625, %r476, %r14506;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14628, %r470, %r14503, %r14625;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14632, %r476, %r14515;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14635, %r470, %r14512, %r14632;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14639, %r476, %r14524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14642, %r470, %r14521, %r14639;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14646, %r476, %r14533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14649, %r470, %r14530, %r14646;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14653, %r476, %r14542;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14656, %r470, %r14539, %r14653;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14660, %r476, %r14551;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14663, %r470, %r14548, %r14660;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14667, %r476, %r14560;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14670, %r470, %r14557, %r14667;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14841, %r14838}, {%r522, %r528, %r525, %r531}, {%r14423, %r14565}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14850, %r14847}, {%r522, %r528, %r525, %r531}, {%r14432, %r14572}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14859, %r14856}, {%r522, %r528, %r525, %r531}, {%r14441, %r14579}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14868, %r14865}, {%r522, %r528, %r525, %r531}, {%r14450, %r14586}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14877, %r14874}, {%r522, %r528, %r525, %r531}, {%r14459, %r14593}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14886, %r14883}, {%r522, %r528, %r525, %r531}, {%r14468, %r14600}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14895, %r14892}, {%r522, %r528, %r525, %r531}, {%r14477, %r14607}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14904, %r14901}, {%r522, %r528, %r525, %r531}, {%r14486, %r14614}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14913, %r14910}, {%r522, %r528, %r525, %r531}, {%r14495, %r14621}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14922, %r14919}, {%r522, %r528, %r525, %r531}, {%r14504, %r14628}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14931, %r14928}, {%r522, %r528, %r525, %r531}, {%r14513, %r14635}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14940, %r14937}, {%r522, %r528, %r525, %r531}, {%r14522, %r14642}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14949, %r14946}, {%r522, %r528, %r525, %r531}, {%r14531, %r14649}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14958, %r14955}, {%r522, %r528, %r525, %r531}, {%r14540, %r14656}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14967, %r14964}, {%r522, %r528, %r525, %r531}, {%r14549, %r14663}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14976, %r14973}, {%r522, %r528, %r525, %r531}, {%r14558, %r14670}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14834, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14836, %r14834, %r14838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14839, %r572, %r14841, %r14836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14843, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14845, %r14843, %r14847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14848, %r572, %r14850, %r14845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14852, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14854, %r14852, %r14856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14857, %r572, %r14859, %r14854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14861, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14863, %r14861, %r14865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14866, %r572, %r14868, %r14863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14870, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14872, %r14870, %r14874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14875, %r572, %r14877, %r14872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14879, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14881, %r14879, %r14883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14884, %r572, %r14886, %r14881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14888, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14890, %r14888, %r14892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14893, %r572, %r14895, %r14890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14897, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14899, %r14897, %r14901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14902, %r572, %r14904, %r14899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14906, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14908, %r14906, %r14910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14911, %r572, %r14913, %r14908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14915, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14917, %r14915, %r14919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14920, %r572, %r14922, %r14917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14924, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14926, %r14924, %r14928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14929, %r572, %r14931, %r14926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14933, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14935, %r14933, %r14937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14938, %r572, %r14940, %r14935;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14942, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14944, %r14942, %r14946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14947, %r572, %r14949, %r14944;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14951, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14953, %r14951, %r14955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14956, %r572, %r14958, %r14953;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14960, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14962, %r14960, %r14964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14965, %r572, %r14967, %r14962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14969, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14971, %r14969, %r14973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14974, %r572, %r14976, %r14971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14978, %r575, %r14841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14981, %r572, %r14838, %r14978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14985, %r575, %r14850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14988, %r572, %r14847, %r14985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14992, %r575, %r14859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14995, %r572, %r14856, %r14992;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14999, %r575, %r14868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15002, %r572, %r14865, %r14999;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15006, %r575, %r14877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15009, %r572, %r14874, %r15006;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15013, %r575, %r14886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15016, %r572, %r14883, %r15013;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15020, %r575, %r14895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15023, %r572, %r14892, %r15020;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15027, %r575, %r14904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15030, %r572, %r14901, %r15027;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15034, %r575, %r14913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15037, %r572, %r14910, %r15034;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15041, %r575, %r14922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15044, %r572, %r14919, %r15041;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15048, %r575, %r14931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15051, %r572, %r14928, %r15048;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15055, %r575, %r14940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15058, %r572, %r14937, %r15055;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15062, %r575, %r14949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15065, %r572, %r14946, %r15062;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15069, %r575, %r14958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15072, %r572, %r14955, %r15069;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15076, %r575, %r14967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15079, %r572, %r14964, %r15076;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15083, %r575, %r14976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15086, %r572, %r14973, %r15083;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15379, %r15382}, {%r610, %r616, %r613, %r619}, {%r14839, %r14981}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15385, %r15388}, {%r610, %r616, %r613, %r619}, {%r14848, %r14988}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15391, %r15394}, {%r610, %r616, %r613, %r619}, {%r14857, %r14995}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15397, %r15400}, {%r610, %r616, %r613, %r619}, {%r14866, %r15002}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15403, %r15406}, {%r610, %r616, %r613, %r619}, {%r14875, %r15009}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15409, %r15412}, {%r610, %r616, %r613, %r619}, {%r14884, %r15016}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15415, %r15418}, {%r610, %r616, %r613, %r619}, {%r14893, %r15023}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15421, %r15424}, {%r610, %r616, %r613, %r619}, {%r14902, %r15030}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15380, %r15383}, {%r610, %r616, %r613, %r619}, {%r14911, %r15037}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15386, %r15389}, {%r610, %r616, %r613, %r619}, {%r14920, %r15044}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15392, %r15395}, {%r610, %r616, %r613, %r619}, {%r14929, %r15051}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15398, %r15401}, {%r610, %r616, %r613, %r619}, {%r14938, %r15058}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15404, %r15407}, {%r610, %r616, %r613, %r619}, {%r14947, %r15065}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15410, %r15413}, {%r610, %r616, %r613, %r619}, {%r14956, %r15072}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15416, %r15419}, {%r610, %r616, %r613, %r619}, {%r14965, %r15079}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15422, %r15425}, {%r610, %r616, %r613, %r619}, {%r14974, %r15086}, {%r807, %r807};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15378, %r15379, %r15380;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15381, %r15382, %r15383;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15384, %r15385, %r15386;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15387, %r15388, %r15389;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15390, %r15391, %r15392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15393, %r15394, %r15395;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15396, %r15397, %r15398;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15399, %r15400, %r15401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15402, %r15403, %r15404;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15405, %r15406, %r15407;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15408, %r15409, %r15410;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15411, %r15412, %r15413;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15414, %r15415, %r15416;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15417, %r15418, %r15419;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15420, %r15421, %r15422;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15423, %r15424, %r15425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15426, %r15379, %r15380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15429, %r15382, %r15383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15432, %r15385, %r15386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15435, %r15388, %r15389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15438, %r15391, %r15392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15441, %r15394, %r15395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15444, %r15397, %r15398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15447, %r15400, %r15401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15450, %r15403, %r15404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15453, %r15406, %r15407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15456, %r15409, %r15410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15459, %r15412, %r15413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15462, %r15415, %r15416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15465, %r15418, %r15419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15468, %r15421, %r15422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15471, %r15424, %r15425;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15474, %r235, %r15378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15477, %r235, %r15381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15480, %r235, %r15384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15483, %r235, %r15387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15486, %r235, %r15390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15489, %r235, %r15393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15492, %r235, %r15396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15495, %r235, %r15399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15498, %r235, %r15402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15501, %r235, %r15405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15504, %r235, %r15408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15507, %r235, %r15411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15510, %r235, %r15414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15513, %r235, %r15417;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15516, %r235, %r15420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15519, %r235, %r15423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15522, %r237, %r15426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15525, %r237, %r15429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15528, %r237, %r15432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15531, %r237, %r15435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15534, %r237, %r15438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15537, %r237, %r15441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15540, %r237, %r15444;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15543, %r237, %r15447;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15546, %r237, %r15450;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15549, %r237, %r15453;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15552, %r237, %r15456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15555, %r237, %r15459;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15558, %r237, %r15462;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15561, %r237, %r15465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15564, %r237, %r15468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15567, %r237, %r15471;
	// end inline asm
	// begin inline asm
	mov.b32 %r15570, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15571, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15572, %r15474, %r15570;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15575, %r15572, %r15571;
	// end inline asm
	// begin inline asm
	mov.b32 %r15578, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15579, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15580, %r15477, %r15578;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15583, %r15580, %r15579;
	// end inline asm
	// begin inline asm
	mov.b32 %r15586, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15587, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15588, %r15480, %r15586;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15591, %r15588, %r15587;
	// end inline asm
	// begin inline asm
	mov.b32 %r15594, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15595, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15596, %r15483, %r15594;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15599, %r15596, %r15595;
	// end inline asm
	// begin inline asm
	mov.b32 %r15602, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15603, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15604, %r15486, %r15602;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15607, %r15604, %r15603;
	// end inline asm
	// begin inline asm
	mov.b32 %r15610, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15611, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15612, %r15489, %r15610;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15615, %r15612, %r15611;
	// end inline asm
	// begin inline asm
	mov.b32 %r15618, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15619, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15620, %r15492, %r15618;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15623, %r15620, %r15619;
	// end inline asm
	// begin inline asm
	mov.b32 %r15626, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15627, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15628, %r15495, %r15626;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15631, %r15628, %r15627;
	// end inline asm
	// begin inline asm
	mov.b32 %r15634, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15635, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15636, %r15498, %r15634;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15639, %r15636, %r15635;
	// end inline asm
	// begin inline asm
	mov.b32 %r15642, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15643, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15644, %r15501, %r15642;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15647, %r15644, %r15643;
	// end inline asm
	// begin inline asm
	mov.b32 %r15650, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15651, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15652, %r15504, %r15650;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15655, %r15652, %r15651;
	// end inline asm
	// begin inline asm
	mov.b32 %r15658, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15659, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15660, %r15507, %r15658;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15663, %r15660, %r15659;
	// end inline asm
	// begin inline asm
	mov.b32 %r15666, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15667, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15668, %r15510, %r15666;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15671, %r15668, %r15667;
	// end inline asm
	// begin inline asm
	mov.b32 %r15674, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15675, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15676, %r15513, %r15674;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15679, %r15676, %r15675;
	// end inline asm
	// begin inline asm
	mov.b32 %r15682, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15683, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15684, %r15516, %r15682;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15687, %r15684, %r15683;
	// end inline asm
	// begin inline asm
	mov.b32 %r15690, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15691, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15692, %r15519, %r15690;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15695, %r15692, %r15691;
	// end inline asm
	// begin inline asm
	mov.b32 %r15698, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15699, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15700, %r15522, %r15698;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15703, %r15700, %r15699;
	// end inline asm
	// begin inline asm
	mov.b32 %r15706, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15707, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15708, %r15525, %r15706;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15711, %r15708, %r15707;
	// end inline asm
	// begin inline asm
	mov.b32 %r15714, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15715, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15716, %r15528, %r15714;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15719, %r15716, %r15715;
	// end inline asm
	// begin inline asm
	mov.b32 %r15722, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15723, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15724, %r15531, %r15722;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15727, %r15724, %r15723;
	// end inline asm
	// begin inline asm
	mov.b32 %r15730, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15731, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15732, %r15534, %r15730;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15735, %r15732, %r15731;
	// end inline asm
	// begin inline asm
	mov.b32 %r15738, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15739, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15740, %r15537, %r15738;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15743, %r15740, %r15739;
	// end inline asm
	// begin inline asm
	mov.b32 %r15746, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15747, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15748, %r15540, %r15746;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15751, %r15748, %r15747;
	// end inline asm
	// begin inline asm
	mov.b32 %r15754, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15755, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15756, %r15543, %r15754;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15759, %r15756, %r15755;
	// end inline asm
	// begin inline asm
	mov.b32 %r15762, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15763, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15764, %r15546, %r15762;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15767, %r15764, %r15763;
	// end inline asm
	// begin inline asm
	mov.b32 %r15770, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15771, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15772, %r15549, %r15770;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15775, %r15772, %r15771;
	// end inline asm
	// begin inline asm
	mov.b32 %r15778, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15779, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15780, %r15552, %r15778;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15783, %r15780, %r15779;
	// end inline asm
	// begin inline asm
	mov.b32 %r15786, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15787, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15788, %r15555, %r15786;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15791, %r15788, %r15787;
	// end inline asm
	// begin inline asm
	mov.b32 %r15794, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15795, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15796, %r15558, %r15794;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15799, %r15796, %r15795;
	// end inline asm
	// begin inline asm
	mov.b32 %r15802, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15803, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15804, %r15561, %r15802;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15807, %r15804, %r15803;
	// end inline asm
	// begin inline asm
	mov.b32 %r15810, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15811, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15812, %r15564, %r15810;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15815, %r15812, %r15811;
	// end inline asm
	// begin inline asm
	mov.b32 %r15818, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15819, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15820, %r15567, %r15818;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15823, %r15820, %r15819;
	// end inline asm
	// begin inline asm
	mov.b32 %r15829, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15828, %r15829, %r15827;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15831, %r15575, %r15828;
	// end inline asm
	// begin inline asm
	mov.b32 %r15834, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15835, %r15829, %r15834;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15838, %r15583, %r15835;
	// end inline asm
	// begin inline asm
	mov.b32 %r15841, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15842, %r15829, %r15841;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15845, %r15591, %r15842;
	// end inline asm
	// begin inline asm
	mov.b32 %r15848, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15849, %r15829, %r15848;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15852, %r15599, %r15849;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15855, %r15831, %r15845, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15859, %r15838, %r15852, %r4410;
	// end inline asm
	shl.b32 	%r15866, %r15859, 4;
	// begin inline asm
	lop3.b32 %r15863, %r4416, %r15855, %r15866, 202;
	// end inline asm
	xor.b32  	%r16267, %r15863, -2004318072;
	// begin inline asm
	mov.b32 %r15870, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15868, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15869, %r15870, %r15868;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15872, %r15607, %r15869;
	// end inline asm
	// begin inline asm
	mov.b32 %r15875, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15876, %r15870, %r15875;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15879, %r15615, %r15876;
	// end inline asm
	// begin inline asm
	mov.b32 %r15882, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15883, %r15870, %r15882;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15886, %r15623, %r15883;
	// end inline asm
	// begin inline asm
	mov.b32 %r15889, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15890, %r15870, %r15889;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15893, %r15631, %r15890;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15896, %r15872, %r15886, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15900, %r15879, %r15893, %r4410;
	// end inline asm
	shl.b32 	%r15907, %r15900, 4;
	// begin inline asm
	lop3.b32 %r15904, %r4416, %r15896, %r15907, 202;
	// end inline asm
	xor.b32  	%r16268, %r15904, -2004318072;
	// begin inline asm
	mov.b32 %r15911, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15909, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15910, %r15911, %r15909;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15913, %r15639, %r15910;
	// end inline asm
	// begin inline asm
	mov.b32 %r15916, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15917, %r15911, %r15916;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15920, %r15647, %r15917;
	// end inline asm
	// begin inline asm
	mov.b32 %r15923, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15924, %r15911, %r15923;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15927, %r15655, %r15924;
	// end inline asm
	// begin inline asm
	mov.b32 %r15930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15931, %r15911, %r15930;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15934, %r15663, %r15931;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15937, %r15913, %r15927, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15941, %r15920, %r15934, %r4410;
	// end inline asm
	shl.b32 	%r15948, %r15941, 4;
	// begin inline asm
	lop3.b32 %r15945, %r4416, %r15937, %r15948, 202;
	// end inline asm
	xor.b32  	%r16269, %r15945, -2004318072;
	// begin inline asm
	mov.b32 %r15952, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15951, %r15952, %r15950;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15954, %r15671, %r15951;
	// end inline asm
	// begin inline asm
	mov.b32 %r15957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15958, %r15952, %r15957;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15961, %r15679, %r15958;
	// end inline asm
	// begin inline asm
	mov.b32 %r15964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15965, %r15952, %r15964;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15968, %r15687, %r15965;
	// end inline asm
	// begin inline asm
	mov.b32 %r15971, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15972, %r15952, %r15971;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15975, %r15695, %r15972;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15978, %r15954, %r15968, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15982, %r15961, %r15975, %r4410;
	// end inline asm
	shl.b32 	%r15989, %r15982, 4;
	// begin inline asm
	lop3.b32 %r15986, %r4416, %r15978, %r15989, 202;
	// end inline asm
	xor.b32  	%r16270, %r15986, -2004318072;
	// begin inline asm
	mov.b32 %r15993, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15991, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15992, %r15993, %r15991;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15995, %r15703, %r15992;
	// end inline asm
	// begin inline asm
	mov.b32 %r15998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15999, %r15993, %r15998;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16002, %r15711, %r15999;
	// end inline asm
	// begin inline asm
	mov.b32 %r16005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16006, %r15993, %r16005;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16009, %r15719, %r16006;
	// end inline asm
	// begin inline asm
	mov.b32 %r16012, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16013, %r15993, %r16012;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16016, %r15727, %r16013;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16019, %r15995, %r16009, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16023, %r16002, %r16016, %r4410;
	// end inline asm
	shl.b32 	%r16030, %r16023, 4;
	// begin inline asm
	lop3.b32 %r16027, %r4416, %r16019, %r16030, 202;
	// end inline asm
	xor.b32  	%r16271, %r16027, -2004318072;
	// begin inline asm
	mov.b32 %r16034, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16032, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16033, %r16034, %r16032;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16036, %r15735, %r16033;
	// end inline asm
	// begin inline asm
	mov.b32 %r16039, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16040, %r16034, %r16039;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16043, %r15743, %r16040;
	// end inline asm
	// begin inline asm
	mov.b32 %r16046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16047, %r16034, %r16046;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16050, %r15751, %r16047;
	// end inline asm
	// begin inline asm
	mov.b32 %r16053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16054, %r16034, %r16053;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16057, %r15759, %r16054;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16060, %r16036, %r16050, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16064, %r16043, %r16057, %r4410;
	// end inline asm
	shl.b32 	%r16071, %r16064, 4;
	// begin inline asm
	lop3.b32 %r16068, %r4416, %r16060, %r16071, 202;
	// end inline asm
	xor.b32  	%r16272, %r16068, -2004318072;
	// begin inline asm
	mov.b32 %r16075, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16073, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16074, %r16075, %r16073;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16077, %r15767, %r16074;
	// end inline asm
	// begin inline asm
	mov.b32 %r16080, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16081, %r16075, %r16080;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16084, %r15775, %r16081;
	// end inline asm
	// begin inline asm
	mov.b32 %r16087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16088, %r16075, %r16087;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16091, %r15783, %r16088;
	// end inline asm
	// begin inline asm
	mov.b32 %r16094, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16095, %r16075, %r16094;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16098, %r15791, %r16095;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16101, %r16077, %r16091, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16105, %r16084, %r16098, %r4410;
	// end inline asm
	shl.b32 	%r16112, %r16105, 4;
	// begin inline asm
	lop3.b32 %r16109, %r4416, %r16101, %r16112, 202;
	// end inline asm
	xor.b32  	%r16273, %r16109, -2004318072;
	// begin inline asm
	mov.b32 %r16116, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16115, %r16116, %r16114;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16118, %r15799, %r16115;
	// end inline asm
	// begin inline asm
	mov.b32 %r16121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16122, %r16116, %r16121;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16125, %r15807, %r16122;
	// end inline asm
	// begin inline asm
	mov.b32 %r16128, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16129, %r16116, %r16128;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16132, %r15815, %r16129;
	// end inline asm
	// begin inline asm
	mov.b32 %r16135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16136, %r16116, %r16135;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16139, %r15823, %r16136;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16142, %r16118, %r16132, %r4410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16146, %r16125, %r16139, %r4410;
	// end inline asm
	shl.b32 	%r16153, %r16146, 4;
	// begin inline asm
	lop3.b32 %r16150, %r4416, %r16142, %r16153, 202;
	// end inline asm
	xor.b32  	%r16274, %r16150, -2004318072;
	st.shared.u32 	[%rd110], %r16267;
	st.shared.u32 	[%rd112], %r16268;
	st.shared.u32 	[%rd114], %r16269;
	st.shared.u32 	[%rd116], %r16270;
	st.shared.u32 	[%rd118], %r16271;
	st.shared.u32 	[%rd120], %r16272;
	st.shared.u32 	[%rd122], %r16273;
	st.shared.u32 	[%rd124], %r16274;
	add.s32 	%r16443, %r16443, 128;
	setp.eq.s32 	%p328, %r16443, 256;
	@%p328 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;
$L__BB0_184:                            // %guard_exit29817
                                        //   in Loop: Header=BB0_181 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16280, [%rd5];
	ld.shared.u32 	%r16281, [%rd6+128];
	ld.shared.u32 	%r16288, [%rd6+4];
	ld.shared.u32 	%r16289, [%rd6+132];
	ld.shared.u32 	%r16296, [%rd7];
	ld.shared.u32 	%r16297, [%rd8+128];
	ld.shared.u32 	%r16304, [%rd8+4];
	ld.shared.u32 	%r16305, [%rd8+132];
	ld.shared.u32 	%r16312, [%rd5+16644];
	ld.shared.u32 	%r16313, [%rd6+16772];
	ld.shared.u32 	%r16320, [%rd6+16648];
	ld.shared.u32 	%r16321, [%rd6+16776];
	ld.shared.u32 	%r16328, [%rd7+16644];
	ld.shared.u32 	%r16329, [%rd23];
	ld.shared.u32 	%r16336, [%rd8+16648];
	ld.shared.u32 	%r16337, [%rd8+16776];
	// begin inline asm
	prmt.b32 %r16275, %r16280, %r16281, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16279, %r16280, %r16281, %r806;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16283, %r16288, %r16289, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16287, %r16288, %r16289, %r806;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16291, %r16296, %r16297, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16295, %r16296, %r16297, %r806;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16299, %r16304, %r16305, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16303, %r16304, %r16305, %r806;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16307, %r16312, %r16313, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16311, %r16312, %r16313, %r806;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16315, %r16320, %r16321, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16319, %r16320, %r16321, %r806;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16323, %r16328, %r16329, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16327, %r16328, %r16329, %r806;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16331, %r16336, %r16337, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16335, %r16336, %r16337, %r806;
	// end inline asm
	selp.b32 	%r16339, %r16279, %r16275, %p314;
	shfl.sync.bfly.b32	%r258, %r16339, 8, 31, -1;
	selp.b32 	%r16340, %r16287, %r16283, %p314;
	shfl.sync.bfly.b32	%r259, %r16340, 8, 31, -1;
	selp.b32 	%r16341, %r16295, %r16291, %p314;
	shfl.sync.bfly.b32	%r260, %r16341, 8, 31, -1;
	selp.b32 	%r16342, %r16303, %r16299, %p314;
	shfl.sync.bfly.b32	%r261, %r16342, 8, 31, -1;
	selp.b32 	%r16343, %r16311, %r16307, %p314;
	shfl.sync.bfly.b32	%r16344, %r16343, 8, 31, -1;
	selp.b32 	%r16345, %r16319, %r16315, %p314;
	shfl.sync.bfly.b32	%r16346, %r16345, 8, 31, -1;
	selp.b32 	%r16347, %r16327, %r16323, %p314;
	shfl.sync.bfly.b32	%r16348, %r16347, 8, 31, -1;
	selp.b32 	%r16349, %r16335, %r16331, %p314;
	shfl.sync.bfly.b32	%r16350, %r16349, 8, 31, -1;
	and.b32  	%r270, %r16418, 768;
	setp.lt.u32 	%p330, %r270, 384;
	shl.b32 	%r16373, %r16418, 11;
	@%p330 bra 	$L__BB0_186;
// %bb.185:                             // %pass28458
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r16351, %r261, %r16303, %p314;
	selp.b32 	%r16352, %r16299, %r261, %p314;
	selp.b32 	%r16353, %r260, %r16295, %p314;
	selp.b32 	%r16354, %r16291, %r260, %p314;
	selp.b32 	%r16355, %r259, %r16287, %p314;
	selp.b32 	%r16356, %r16283, %r259, %p314;
	selp.b32 	%r16357, %r258, %r16279, %p314;
	selp.b32 	%r16358, %r16275, %r258, %p314;
	or.b32  	%r16360, %r16373, %r124;
	or.b32  	%r16361, %r16360, %r125;
	or.b32  	%r16362, %r16361, %r143;
	cvt.u64.u32 	%rd125, %r16362;
	add.s64 	%rd126, %rd125, %rd9;
	shr.u64 	%rd127, %rd126, 36;
	add.s64 	%rd128, %rd126, %rd127;
	shr.s64 	%rd129, %rd128, 28;
	setp.lt.s64 	%p332, %rd126, 0;
	and.b64  	%rd130, %rd128, -268435456;
	setp.ne.s64 	%p333, %rd130, %rd126;
	and.pred  	%p334, %p332, %p333;
	selp.u64 	%rd131, 1, 0, %p334;
	sub.s64 	%rd132, %rd131, %rd129;
	shl.b64 	%rd133, %rd132, 28;
	add.s64 	%rd134, %rd133, %rd126;
	shl.b64 	%rd135, %rd134, 2;
	add.s64 	%rd136, %rd3, %rd135;
	st.global.v4.u32 	[%rd136], {%r16358, %r16356, %r16357, %r16355};
	or.b32  	%r16363, %r16361, %r144;
	cvt.u64.u32 	%rd137, %r16363;
	add.s64 	%rd138, %rd137, %rd9;
	shr.u64 	%rd139, %rd138, 36;
	add.s64 	%rd140, %rd138, %rd139;
	shr.u64 	%rd141, %rd140, 28;
	shr.u64 	%rd142, %rd138, 63;
	sub.s64 	%rd143, %rd142, %rd141;
	shl.b64 	%rd144, %rd143, 28;
	add.s64 	%rd145, %rd144, %rd138;
	shl.b64 	%rd146, %rd145, 2;
	add.s64 	%rd147, %rd3, %rd146;
	st.global.v4.u32 	[%rd147], {%r16354, %r16352, %r16353, %r16351};
$L__BB0_186:                            // %pass28635
                                        //   in Loop: Header=BB0_181 Depth=1
	or.b32  	%r16364, %r270, 128;
	setp.lt.u32 	%p335, %r16364, 384;
	@%p335 bra 	$L__BB0_187;
// %bb.189:                             // %pass28678
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r262, %r16307, %r16344, %p314;
	selp.b32 	%r263, %r16344, %r16311, %p314;
	selp.b32 	%r264, %r16315, %r16346, %p314;
	selp.b32 	%r265, %r16346, %r16319, %p314;
	selp.b32 	%r266, %r16323, %r16348, %p314;
	selp.b32 	%r267, %r16348, %r16327, %p314;
	selp.b32 	%r268, %r16331, %r16350, %p314;
	selp.b32 	%r269, %r16350, %r16335, %p314;
	or.b32  	%r16366, %r16373, %r124;
	or.b32  	%r16367, %r16366, %r125;
	or.b32  	%r16368, %r16367, 262144;
	or.b32  	%r16369, %r143, %r16368;
	cvt.u64.u32 	%rd148, %r16369;
	add.s64 	%rd149, %rd148, %rd9;
	shr.u64 	%rd150, %rd149, 36;
	add.s64 	%rd151, %rd149, %rd150;
	shr.s64 	%rd152, %rd151, 28;
	setp.lt.s64 	%p336, %rd149, 0;
	and.b64  	%rd153, %rd151, -268435456;
	setp.ne.s64 	%p337, %rd153, %rd149;
	and.pred  	%p338, %p336, %p337;
	selp.u64 	%rd154, 1, 0, %p338;
	sub.s64 	%rd155, %rd154, %rd152;
	shl.b64 	%rd156, %rd155, 28;
	add.s64 	%rd157, %rd156, %rd149;
	shl.b64 	%rd158, %rd157, 2;
	add.s64 	%rd159, %rd3, %rd158;
	st.global.v4.u32 	[%rd159], {%r262, %r264, %r263, %r265};
	or.b32  	%r16370, %r144, %r16368;
	cvt.u64.u32 	%rd160, %r16370;
	add.s64 	%rd161, %rd160, %rd9;
	shr.u64 	%rd162, %rd161, 36;
	add.s64 	%rd163, %rd161, %rd162;
	shr.u64 	%rd164, %rd163, 28;
	shr.u64 	%rd165, %rd161, 63;
	sub.s64 	%rd166, %rd165, %rd164;
	shl.b64 	%rd167, %rd166, 28;
	add.s64 	%rd168, %rd167, %rd161;
	shl.b64 	%rd169, %rd168, 2;
	add.s64 	%rd170, %rd3, %rd169;
	st.global.v4.u32 	[%rd170], {%r266, %r268, %r267, %r269};
	bra.uni 	$L__BB0_187;
$L__BB0_188:                            // %L70764
	mov.u32 	%r16371, 0;
	st.global.u32 	[%rd4], %r16371;
	ret;
$L__BB0_7:                              // %L246
	mov.u32 	%r16372, 2;
	st.global.u32 	[%rd4], %r16372;
	mov.u64 	%rd171, exception5808;
	cvta.global.u64 	%rd172, %rd171;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd172;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd24;
	st.param.b32 	[param0+8], %r271;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd45, exception1;
	cvta.global.u64 	%rd46, %rd45;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd46;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd24;
	st.param.b32 	[param0+8], %r271;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
