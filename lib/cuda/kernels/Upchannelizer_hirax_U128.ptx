// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5808[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<342>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16425>;
	.reg .f32 	%f<1392>;
	.reg .b64 	%rd<170>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r268, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd23, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r269, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r269, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	ld.param.u64 	%rd40, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd24, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r270, %r2, 9;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r271, %r270, %r1;
	or.b32  	%r272, %r271, %r4;
	mul.wide.u32 	%rd46, %r272, 4;
	add.s64 	%rd4, %rd40, %rd46;
	mov.u32 	%r273, 1;
	st.global.u32 	[%rd4], %r273;
	ld.global.u32 	%r5, [%rd24];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L204
	ld.param.u64 	%rd28, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd28];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 16384;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L214
	ld.param.u64 	%rd32, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd32];
	sub.s32 	%r274, %r6, %r5;
	and.b32  	%r275, %r274, 255;
	setp.ne.s32 	%p6, %r275, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L220
	ld.param.u64 	%rd36, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd36];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 128;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L230
	sub.s32 	%r276, %r8, %r7;
	and.b32  	%r277, %r276, 1;
	setp.eq.b32 	%p12, %r277, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass170
	bfe.u32 	%r187, %r1, 1, 1;
	and.b32  	%r188, %r1, 1;
	bfe.u32 	%r190, %r1, 2, 1;
	shr.u32 	%r191, %r1, 4;
	shl.b32 	%r283, %r191, 2;
	shl.b32 	%r284, %r190, 3;
	shl.b32 	%r285, %r188, 4;
	shl.b32 	%r286, %r187, 5;
	or.b32  	%r287, %r285, %r286;
	or.b32  	%r288, %r284, %r287;
	or.b32  	%r289, %r283, %r288;
	bfe.u32 	%r193, %r1, 3, 1;
	shl.b32 	%r290, %r193, 1;
	or.b32  	%r194, %r290, %r289;
	or.b32  	%r195, %r194, 64;
	mov.f32 	%f257, 0f40000000;
	mov.f32 	%f258, 0f43FF8000;
	div.approx.f32 	%f253, %f258, %f257;
	cvt.rn.f32.s32 	%f259, %r194;
	sub.f32 	%f260, %f259, %f253;
	mov.f32 	%f289, 0f43000000;
	div.approx.f32 	%f255, %f260, %f289;
	setp.ne.f32 	%p20, %f255, 0f00000000;
	mov.f32 	%f1351, 0f3F800000;
	mov.f32 	%f1336, %f1351;
	@%p20 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L735
	sin.approx.f32 	%f290, %f255;
	div.approx.f32 	%f1336, %f290, %f255;
$L__BB0_10:                             // %L738
	cvt.rn.f32.s32 	%f293, %r195;
	sub.f32 	%f294, %f293, %f253;
	div.approx.f32 	%f5, %f294, %f289;
	setp.eq.f32 	%p26, %f5, 0f00000000;
	mov.f32 	%f1337, %f1351;
	@%p26 bra 	$L__BB0_12;
// %bb.11:                              // %L755
	sin.approx.f32 	%f324, %f5;
	div.approx.f32 	%f1337, %f324, %f5;
$L__BB0_12:                             // %L758
	or.b32  	%r308, %r194, 1;
	or.b32  	%r10, %r194, 65;
	cvt.rn.f32.s32 	%f328, %r308;
	sub.f32 	%f329, %f328, %f253;
	div.approx.f32 	%f9, %f329, %f289;
	setp.eq.f32 	%p32, %f9, 0f00000000;
	mov.f32 	%f1338, %f1351;
	@%p32 bra 	$L__BB0_14;
// %bb.13:                              // %L837
	sin.approx.f32 	%f359, %f9;
	div.approx.f32 	%f1338, %f359, %f9;
$L__BB0_14:                             // %L840
	cvt.rn.f32.s32 	%f362, %r10;
	sub.f32 	%f363, %f362, %f253;
	div.approx.f32 	%f14, %f363, %f289;
	setp.eq.f32 	%p38, %f14, 0f00000000;
	mov.f32 	%f1339, %f1351;
	@%p38 bra 	$L__BB0_16;
// %bb.15:                              // %L857
	sin.approx.f32 	%f393, %f14;
	div.approx.f32 	%f1339, %f393, %f14;
$L__BB0_16:                             // %L860
	or.b32  	%r326, %r194, 128;
	or.b32  	%r12, %r194, 192;
	cvt.rn.f32.s32 	%f397, %r326;
	sub.f32 	%f398, %f397, %f253;
	div.approx.f32 	%f18, %f398, %f289;
	setp.eq.f32 	%p44, %f18, 0f00000000;
	mov.f32 	%f1340, %f1351;
	@%p44 bra 	$L__BB0_18;
// %bb.17:                              // %L939
	sin.approx.f32 	%f428, %f18;
	div.approx.f32 	%f1340, %f428, %f18;
$L__BB0_18:                             // %L942
	cvt.rn.f32.s32 	%f431, %r12;
	sub.f32 	%f432, %f431, %f253;
	div.approx.f32 	%f23, %f432, %f289;
	setp.eq.f32 	%p50, %f23, 0f00000000;
	mov.f32 	%f1341, %f1351;
	@%p50 bra 	$L__BB0_20;
// %bb.19:                              // %L959
	sin.approx.f32 	%f462, %f23;
	div.approx.f32 	%f1341, %f462, %f23;
$L__BB0_20:                             // %L962
	or.b32  	%r344, %r194, 129;
	or.b32  	%r14, %r194, 193;
	cvt.rn.f32.s32 	%f466, %r344;
	sub.f32 	%f467, %f466, %f253;
	div.approx.f32 	%f27, %f467, %f289;
	setp.eq.f32 	%p56, %f27, 0f00000000;
	mov.f32 	%f1342, %f1351;
	@%p56 bra 	$L__BB0_22;
// %bb.21:                              // %L1041
	sin.approx.f32 	%f497, %f27;
	div.approx.f32 	%f1342, %f497, %f27;
$L__BB0_22:                             // %L1044
	cvt.rn.f32.s32 	%f500, %r14;
	sub.f32 	%f501, %f500, %f253;
	div.approx.f32 	%f32, %f501, %f289;
	setp.eq.f32 	%p62, %f32, 0f00000000;
	mov.f32 	%f1343, %f1351;
	@%p62 bra 	$L__BB0_24;
// %bb.23:                              // %L1061
	sin.approx.f32 	%f531, %f32;
	div.approx.f32 	%f1343, %f531, %f32;
$L__BB0_24:                             // %L1064
	or.b32  	%r362, %r194, 256;
	or.b32  	%r16, %r194, 320;
	cvt.rn.f32.s32 	%f535, %r362;
	sub.f32 	%f536, %f535, %f253;
	div.approx.f32 	%f36, %f536, %f289;
	setp.eq.f32 	%p68, %f36, 0f00000000;
	mov.f32 	%f1344, %f1351;
	@%p68 bra 	$L__BB0_26;
// %bb.25:                              // %L1143
	sin.approx.f32 	%f566, %f36;
	div.approx.f32 	%f1344, %f566, %f36;
$L__BB0_26:                             // %L1146
	mov.f32 	%f261, 0f44004000;
	cvt.rn.f32.s32 	%f569, %r16;
	sub.f32 	%f570, %f569, %f253;
	div.approx.f32 	%f41, %f570, %f289;
	setp.eq.f32 	%p74, %f41, 0f00000000;
	mov.f32 	%f1345, %f1351;
	@%p74 bra 	$L__BB0_28;
// %bb.27:                              // %L1163
	sin.approx.f32 	%f600, %f41;
	div.approx.f32 	%f1345, %f600, %f41;
$L__BB0_28:                             // %L1166
	div.approx.f32 	%f262, %f260, %f261;
	div.approx.f32 	%f296, %f294, %f261;
	div.approx.f32 	%f331, %f329, %f261;
	div.approx.f32 	%f365, %f363, %f261;
	div.approx.f32 	%f400, %f398, %f261;
	div.approx.f32 	%f434, %f432, %f261;
	div.approx.f32 	%f469, %f467, %f261;
	div.approx.f32 	%f503, %f501, %f261;
	div.approx.f32 	%f538, %f536, %f261;
	div.approx.f32 	%f572, %f570, %f261;
	or.b32  	%r380, %r194, 257;
	or.b32  	%r18, %r194, 321;
	cvt.rn.f32.s32 	%f604, %r380;
	sub.f32 	%f605, %f604, %f253;
	div.approx.f32 	%f607, %f605, %f261;
	div.approx.f32 	%f45, %f605, %f289;
	setp.eq.f32 	%p80, %f45, 0f00000000;
	mov.f32 	%f1346, %f1351;
	@%p80 bra 	$L__BB0_30;
// %bb.29:                              // %L1245
	sin.approx.f32 	%f635, %f45;
	div.approx.f32 	%f1346, %f635, %f45;
$L__BB0_30:                             // %L1248
	abs.f32 	%f263, %f262;
	abs.f32 	%f297, %f296;
	abs.f32 	%f332, %f331;
	abs.f32 	%f366, %f365;
	abs.f32 	%f401, %f400;
	abs.f32 	%f435, %f434;
	abs.f32 	%f470, %f469;
	abs.f32 	%f504, %f503;
	abs.f32 	%f539, %f538;
	abs.f32 	%f573, %f572;
	abs.f32 	%f608, %f607;
	cvt.rn.f32.s32 	%f638, %r18;
	sub.f32 	%f639, %f638, %f253;
	div.approx.f32 	%f641, %f639, %f261;
	abs.f32 	%f642, %f641;
	div.approx.f32 	%f50, %f639, %f289;
	setp.eq.f32 	%p86, %f50, 0f00000000;
	mov.f32 	%f1347, %f1351;
	@%p86 bra 	$L__BB0_32;
// %bb.31:                              // %L1265
	sin.approx.f32 	%f669, %f50;
	div.approx.f32 	%f1347, %f669, %f50;
$L__BB0_32:                             // %L1268
	setp.gt.f32 	%p15, %f263, 0f4B800000;
	mul.f32 	%f264, %f262, 0f00000000;
	setp.gt.f32 	%p21, %f297, 0f4B800000;
	mul.f32 	%f298, %f296, 0f00000000;
	setp.gt.f32 	%p27, %f332, 0f4B800000;
	mul.f32 	%f333, %f331, 0f00000000;
	setp.gt.f32 	%p33, %f366, 0f4B800000;
	mul.f32 	%f367, %f365, 0f00000000;
	setp.gt.f32 	%p39, %f401, 0f4B800000;
	mul.f32 	%f402, %f400, 0f00000000;
	setp.gt.f32 	%p45, %f435, 0f4B800000;
	mul.f32 	%f436, %f434, 0f00000000;
	setp.gt.f32 	%p51, %f470, 0f4B800000;
	mul.f32 	%f471, %f469, 0f00000000;
	setp.gt.f32 	%p57, %f504, 0f4B800000;
	mul.f32 	%f505, %f503, 0f00000000;
	setp.gt.f32 	%p63, %f539, 0f4B800000;
	mul.f32 	%f540, %f538, 0f00000000;
	setp.gt.f32 	%p69, %f573, 0f4B800000;
	mul.f32 	%f574, %f572, 0f00000000;
	setp.gt.f32 	%p75, %f608, 0f4B800000;
	mul.f32 	%f609, %f607, 0f00000000;
	setp.gt.f32 	%p81, %f642, 0f4B800000;
	mul.f32 	%f643, %f641, 0f00000000;
	or.b32  	%r398, %r194, 384;
	or.b32  	%r20, %r194, 448;
	cvt.rn.f32.s32 	%f673, %r398;
	sub.f32 	%f674, %f673, %f253;
	div.approx.f32 	%f676, %f674, %f261;
	abs.f32 	%f677, %f676;
	setp.gt.f32 	%p87, %f677, 0f4B800000;
	mul.f32 	%f678, %f676, 0f00000000;
	div.approx.f32 	%f54, %f674, %f289;
	setp.eq.f32 	%p92, %f54, 0f00000000;
	mov.f32 	%f1348, %f1351;
	@%p92 bra 	$L__BB0_34;
// %bb.33:                              // %L1347
	sin.approx.f32 	%f704, %f54;
	div.approx.f32 	%f1348, %f704, %f54;
$L__BB0_34:                             // %L1350
	selp.f32 	%f265, %f264, %f262, %p15;
	selp.f32 	%f299, %f298, %f296, %p21;
	selp.f32 	%f334, %f333, %f331, %p27;
	selp.f32 	%f368, %f367, %f365, %p33;
	selp.f32 	%f403, %f402, %f400, %p39;
	selp.f32 	%f437, %f436, %f434, %p45;
	selp.f32 	%f472, %f471, %f469, %p51;
	selp.f32 	%f506, %f505, %f503, %p57;
	selp.f32 	%f541, %f540, %f538, %p63;
	selp.f32 	%f575, %f574, %f572, %p69;
	selp.f32 	%f610, %f609, %f607, %p75;
	selp.f32 	%f644, %f643, %f641, %p81;
	selp.f32 	%f679, %f678, %f676, %p87;
	cvt.rn.f32.s32 	%f707, %r20;
	sub.f32 	%f708, %f707, %f253;
	div.approx.f32 	%f710, %f708, %f261;
	abs.f32 	%f711, %f710;
	setp.gt.f32 	%p93, %f711, 0f4B800000;
	mul.f32 	%f712, %f710, 0f00000000;
	selp.f32 	%f713, %f712, %f710, %p93;
	div.approx.f32 	%f59, %f708, %f289;
	setp.eq.f32 	%p98, %f59, 0f00000000;
	mov.f32 	%f1349, %f1351;
	@%p98 bra 	$L__BB0_36;
// %bb.35:                              // %L1367
	sin.approx.f32 	%f738, %f59;
	div.approx.f32 	%f1349, %f738, %f59;
$L__BB0_36:                             // %L1370
	add.f32 	%f266, %f265, %f265;
	add.f32 	%f300, %f299, %f299;
	add.f32 	%f335, %f334, %f334;
	add.f32 	%f369, %f368, %f368;
	add.f32 	%f404, %f403, %f403;
	add.f32 	%f438, %f437, %f437;
	add.f32 	%f473, %f472, %f472;
	add.f32 	%f507, %f506, %f506;
	add.f32 	%f542, %f541, %f541;
	add.f32 	%f576, %f575, %f575;
	add.f32 	%f611, %f610, %f610;
	add.f32 	%f645, %f644, %f644;
	add.f32 	%f680, %f679, %f679;
	add.f32 	%f714, %f713, %f713;
	or.b32  	%r416, %r194, 385;
	or.b32  	%r22, %r194, 449;
	cvt.rn.f32.s32 	%f742, %r416;
	sub.f32 	%f743, %f742, %f253;
	div.approx.f32 	%f745, %f743, %f261;
	abs.f32 	%f746, %f745;
	setp.gt.f32 	%p99, %f746, 0f4B800000;
	mul.f32 	%f747, %f745, 0f00000000;
	selp.f32 	%f748, %f747, %f745, %p99;
	add.f32 	%f749, %f748, %f748;
	div.approx.f32 	%f63, %f743, %f289;
	setp.eq.f32 	%p104, %f63, 0f00000000;
	mov.f32 	%f1350, %f1351;
	@%p104 bra 	$L__BB0_38;
// %bb.37:                              // %L1449
	sin.approx.f32 	%f773, %f63;
	div.approx.f32 	%f1350, %f773, %f63;
$L__BB0_38:                             // %L1452
	mov.b32 	%r291, %f266;
	mov.b32 	%r298, %f300;
	mov.b32 	%r309, %f335;
	mov.b32 	%r316, %f369;
	mov.b32 	%r327, %f404;
	mov.b32 	%r334, %f438;
	mov.b32 	%r345, %f473;
	mov.b32 	%r352, %f507;
	mov.b32 	%r363, %f542;
	mov.b32 	%r370, %f576;
	mov.b32 	%r381, %f611;
	mov.b32 	%r388, %f645;
	mov.b32 	%r399, %f680;
	mov.b32 	%r406, %f714;
	mov.b32 	%r417, %f749;
	cvt.rn.f32.s32 	%f776, %r22;
	sub.f32 	%f777, %f776, %f253;
	div.approx.f32 	%f779, %f777, %f261;
	abs.f32 	%f780, %f779;
	setp.gt.f32 	%p105, %f780, 0f4B800000;
	mul.f32 	%f781, %f779, 0f00000000;
	selp.f32 	%f782, %f781, %f779, %p105;
	add.f32 	%f783, %f782, %f782;
	mov.b32 	%r424, %f783;
	div.approx.f32 	%f68, %f777, %f289;
	setp.eq.f32 	%p110, %f68, 0f00000000;
	@%p110 bra 	$L__BB0_40;
// %bb.39:                              // %L1469
	sin.approx.f32 	%f807, %f68;
	div.approx.f32 	%f1351, %f807, %f68;
$L__BB0_40:                             // %L1472
	and.b32  	%r292, %r291, -2147483648;
	and.b32  	%r299, %r298, -2147483648;
	and.b32  	%r310, %r309, -2147483648;
	and.b32  	%r317, %r316, -2147483648;
	and.b32  	%r328, %r327, -2147483648;
	and.b32  	%r335, %r334, -2147483648;
	and.b32  	%r346, %r345, -2147483648;
	and.b32  	%r353, %r352, -2147483648;
	and.b32  	%r364, %r363, -2147483648;
	and.b32  	%r371, %r370, -2147483648;
	and.b32  	%r382, %r381, -2147483648;
	and.b32  	%r389, %r388, -2147483648;
	and.b32  	%r400, %r399, -2147483648;
	and.b32  	%r407, %r406, -2147483648;
	and.b32  	%r418, %r417, -2147483648;
	and.b32  	%r425, %r424, -2147483648;
	mul.lo.s32 	%r24, %r194, 127;
	cvt.rn.f32.s32 	%f810, %r24;
	div.approx.f32 	%f71, %f810, %f289;
	abs.f32 	%f1354, %f71;
	setp.lt.f32 	%p111, %f1354, 0f40000000;
	@%p111 bra 	$L__BB0_52;
// %bb.41:
	setp.gtu.f32 	%p112, %f1354, 0f4B800000;
	@%p112 bra 	$L__BB0_48;
	bra.uni 	$L__BB0_42;
$L__BB0_48:
	mov.b32 	%r26, %f1354;
	and.b32  	%r434, %r26, 8388607;
	or.b32  	%r16355, %r434, 1065353216;
	mov.b32 	%f1353, %r16355;
	add.s32 	%r435, %r26, -1073741824;
	and.b32  	%r16356, %r435, -8388608;
	setp.eq.s32 	%p118, %r16356, 0;
	@%p118 bra 	$L__BB0_51;
// %bb.49:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f821, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f820,%f821;
	// end inline asm
$L__BB0_50:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r436, %r16356, 192937984;
	add.s32 	%r437, %r16355, %r436;
	mov.b32 	%f822, %r437;
	mul.f32 	%f823, %f820, %f822;
	sub.f32 	%f824, %f822, %f823;
	fma.rn.f32 	%f825, %f824, %f820, %f823;
	sub.f32 	%f826, %f822, %f825;
	fma.rz.f32 	%f827, %f826, %f820, %f825;
	cvt.rzi.f32.f32 	%f828, %f827;
	sub.f32 	%f1353, %f822, %f828;
	sub.s32 	%r16356, %r16356, %r436;
	mov.b32 	%r16355, %f1353;
	setp.ne.s32 	%p119, %r16356, 0;
	setp.ne.s32 	%p120, %r16355, 0;
	and.pred  	%p121, %p119, %p120;
	@%p121 bra 	$L__BB0_50;
$L__BB0_51:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p122, %r26, 2139095039;
	selp.f32 	%f829, 0f7FFFFFFF, 0f4B800000, %p122;
	mul.f32 	%f830, %f1353, 0f34000000;
	mul.f32 	%f1354, %f829, %f830;
	bra.uni 	$L__BB0_52;
$L__BB0_42:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f813, %f1354, %f257;
	cvt.rzi.f32.f32 	%f1352, %f813;
	fma.rn.f32 	%f74, %f1352, 0fC0000000, %f1354;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p113, %r25, 1073741824;
	@%p113 bra 	$L__BB0_47;
// %bb.43:
	setp.lt.u32 	%p114, %r25, -2147483647;
	@%p114 bra 	$L__BB0_45;
// %bb.44:
	add.f32 	%f818, %f1352, 0fBF800000;
	setp.lt.f32 	%p117, %f74, 0fC0000000;
	add.f32 	%f819, %f818, 0fBF800000;
	selp.f32 	%f1352, %f819, %f818, %p117;
	bra.uni 	$L__BB0_47;
$L__BB0_45:
	add.f32 	%f1352, %f1352, 0f3F800000;
	setp.ltu.f32 	%p115, %f74, 0f40800000;
	@%p115 bra 	$L__BB0_47;
// %bb.46:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f814, %f1352, 0f3F800000;
	fma.rn.f32 	%f816, %f257, 0fC0400000, %f74;
	setp.ge.f32 	%p116, %f816, 0f00000000;
	add.f32 	%f817, %f814, 0f3F800000;
	selp.f32 	%f1352, %f817, %f814, %p116;
$L__BB0_47:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1354, %f1352, 0fC0000000, %f1354;
$L__BB0_52:                             // %__internal_fmodf_kernel.exit.i
	or.b32  	%r293, %r292, 1056964608;
	or.b32  	%r300, %r299, 1056964608;
	or.b32  	%r311, %r310, 1056964608;
	or.b32  	%r318, %r317, 1056964608;
	or.b32  	%r329, %r328, 1056964608;
	or.b32  	%r336, %r335, 1056964608;
	or.b32  	%r347, %r346, 1056964608;
	or.b32  	%r354, %r353, 1056964608;
	or.b32  	%r365, %r364, 1056964608;
	or.b32  	%r372, %r371, 1056964608;
	or.b32  	%r383, %r382, 1056964608;
	or.b32  	%r390, %r389, 1056964608;
	or.b32  	%r401, %r400, 1056964608;
	or.b32  	%r408, %r407, 1056964608;
	or.b32  	%r419, %r418, 1056964608;
	or.b32  	%r426, %r425, 1056964608;
	abs.f32 	%f831, %f1354;
	setp.gtu.f32 	%p123, %f831, 0f7F800000;
	@%p123 bra 	$L__BB0_54;
// %bb.53:
	mov.b32 	%r438, %f71;
	and.b32  	%r439, %r438, -2147483648;
	mov.b32 	%r440, %f1354;
	or.b32  	%r441, %r439, %r440;
	mov.b32 	%f1354, %r441;
$L__BB0_54:                             // %__nv_fmodf.exit
	mov.b32 	%f267, %r293;
	mov.b32 	%f301, %r300;
	mov.b32 	%f336, %r311;
	mov.b32 	%f370, %r318;
	mov.b32 	%f405, %r329;
	mov.b32 	%f439, %r336;
	mov.b32 	%f474, %r347;
	mov.b32 	%f508, %r354;
	mov.b32 	%f543, %r365;
	mov.b32 	%f577, %r372;
	mov.b32 	%f612, %r383;
	mov.b32 	%f646, %r390;
	mov.b32 	%f681, %r401;
	mov.b32 	%f715, %r408;
	mov.b32 	%f750, %r419;
	mov.b32 	%f784, %r426;
	add.f32 	%f832, %f1354, %f1354;
	mov.b32 	%r442, %f832;
	and.b32  	%r443, %r442, -2147483648;
	or.b32  	%r444, %r443, 1056964608;
	mov.b32 	%f833, %r444;
	add.f32 	%f834, %f832, %f833;
	abs.f32 	%f836, %f832;
	add.s32 	%r450, %r24, 8128;
	cvt.rn.f32.s32 	%f862, %r450;
	div.approx.f32 	%f90, %f862, %f289;
	abs.f32 	%f1358, %f90;
	setp.lt.f32 	%p131, %f1358, 0f40000000;
	@%p131 bra 	$L__BB0_66;
// %bb.55:
	setp.gtu.f32 	%p132, %f1358, 0f4B800000;
	@%p132 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_56;
$L__BB0_62:
	mov.b32 	%r34, %f1358;
	and.b32  	%r451, %r34, 8388607;
	or.b32  	%r16357, %r451, 1065353216;
	mov.b32 	%f1357, %r16357;
	add.s32 	%r452, %r34, -1073741824;
	and.b32  	%r16358, %r452, -8388608;
	setp.eq.s32 	%p138, %r16358, 0;
	@%p138 bra 	$L__BB0_65;
// %bb.63:                              // %__nv_fmaf_rn.exit4.i.i.i1655.preheader
	mov.f32 	%f873, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f872,%f873;
	// end inline asm
$L__BB0_64:                             // %__nv_fmaf_rn.exit4.i.i.i1655
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r453, %r16358, 192937984;
	add.s32 	%r454, %r16357, %r453;
	mov.b32 	%f874, %r454;
	mul.f32 	%f875, %f872, %f874;
	sub.f32 	%f876, %f874, %f875;
	fma.rn.f32 	%f877, %f876, %f872, %f875;
	sub.f32 	%f878, %f874, %f877;
	fma.rz.f32 	%f879, %f878, %f872, %f877;
	cvt.rzi.f32.f32 	%f880, %f879;
	sub.f32 	%f1357, %f874, %f880;
	sub.s32 	%r16358, %r16358, %r453;
	mov.b32 	%r16357, %f1357;
	setp.ne.s32 	%p139, %r16358, 0;
	setp.ne.s32 	%p140, %r16357, 0;
	and.pred  	%p141, %p139, %p140;
	@%p141 bra 	$L__BB0_64;
$L__BB0_65:                             // %__internal_fmodf_slowpath_mod.exit.i.i1657
	setp.gt.u32 	%p142, %r34, 2139095039;
	selp.f32 	%f881, 0f7FFFFFFF, 0f4B800000, %p142;
	mul.f32 	%f882, %f1357, 0f34000000;
	mul.f32 	%f1358, %f881, %f882;
	bra.uni 	$L__BB0_66;
$L__BB0_56:                             // %__nv_fast_fdividef.exit.i.i.i1634
	div.approx.f32 	%f865, %f1358, %f257;
	cvt.rzi.f32.f32 	%f1356, %f865;
	fma.rn.f32 	%f93, %f1356, 0fC0000000, %f1358;
	mov.b32 	%r33, %f93;
	setp.lt.u32 	%p133, %r33, 1073741824;
	@%p133 bra 	$L__BB0_61;
// %bb.57:
	setp.lt.u32 	%p134, %r33, -2147483647;
	@%p134 bra 	$L__BB0_59;
// %bb.58:
	add.f32 	%f870, %f1356, 0fBF800000;
	setp.lt.f32 	%p137, %f93, 0fC0000000;
	add.f32 	%f871, %f870, 0fBF800000;
	selp.f32 	%f1356, %f871, %f870, %p137;
	bra.uni 	$L__BB0_61;
$L__BB0_59:
	add.f32 	%f1356, %f1356, 0f3F800000;
	setp.ltu.f32 	%p135, %f93, 0f40800000;
	@%p135 bra 	$L__BB0_61;
// %bb.60:                              // %__nv_fmaf_rn.exit.i.i.i1638
	add.f32 	%f866, %f1356, 0f3F800000;
	fma.rn.f32 	%f868, %f257, 0fC0400000, %f93;
	setp.ge.f32 	%p136, %f868, 0f00000000;
	add.f32 	%f869, %f866, 0f3F800000;
	selp.f32 	%f1356, %f869, %f866, %p136;
$L__BB0_61:                             // %__internal_fmodf_fastpath_quot.exit.i.i1641
	fma.rn.f32 	%f1358, %f1356, 0fC0000000, %f1358;
$L__BB0_66:                             // %__internal_fmodf_kernel.exit.i1660
	add.f32 	%f268, %f266, %f267;
	abs.f32 	%f270, %f266;
	add.f32 	%f302, %f300, %f301;
	abs.f32 	%f304, %f300;
	add.f32 	%f337, %f335, %f336;
	abs.f32 	%f339, %f335;
	add.f32 	%f371, %f369, %f370;
	abs.f32 	%f373, %f369;
	add.f32 	%f406, %f404, %f405;
	abs.f32 	%f408, %f404;
	add.f32 	%f440, %f438, %f439;
	abs.f32 	%f442, %f438;
	add.f32 	%f475, %f473, %f474;
	abs.f32 	%f477, %f473;
	add.f32 	%f509, %f507, %f508;
	abs.f32 	%f511, %f507;
	add.f32 	%f544, %f542, %f543;
	abs.f32 	%f546, %f542;
	add.f32 	%f578, %f576, %f577;
	abs.f32 	%f580, %f576;
	add.f32 	%f613, %f611, %f612;
	abs.f32 	%f615, %f611;
	add.f32 	%f647, %f645, %f646;
	abs.f32 	%f649, %f645;
	add.f32 	%f682, %f680, %f681;
	abs.f32 	%f684, %f680;
	add.f32 	%f716, %f714, %f715;
	abs.f32 	%f718, %f714;
	add.f32 	%f751, %f749, %f750;
	abs.f32 	%f753, %f749;
	add.f32 	%f785, %f783, %f784;
	abs.f32 	%f787, %f783;
	cvt.rzi.f32.f32 	%f835, %f834;
	setp.gt.f32 	%p124, %f836, 0f4B000000;
	shr.u32 	%r186, %r1, 1;
	shr.u32 	%r192, %r1, 3;
	abs.f32 	%f883, %f1358;
	setp.gtu.f32 	%p143, %f883, 0f7F800000;
	@%p143 bra 	$L__BB0_68;
// %bb.67:
	mov.b32 	%r455, %f90;
	and.b32  	%r456, %r455, -2147483648;
	mov.b32 	%r457, %f1358;
	or.b32  	%r458, %r456, %r457;
	mov.b32 	%f1358, %r458;
$L__BB0_68:                             // %__nv_fmodf.exit1661
	cvt.rzi.f32.f32 	%f269, %f268;
	setp.gt.f32 	%p16, %f270, 0f4B000000;
	cvt.rzi.f32.f32 	%f303, %f302;
	setp.gt.f32 	%p22, %f304, 0f4B000000;
	cvt.rzi.f32.f32 	%f338, %f337;
	setp.gt.f32 	%p28, %f339, 0f4B000000;
	cvt.rzi.f32.f32 	%f372, %f371;
	setp.gt.f32 	%p34, %f373, 0f4B000000;
	cvt.rzi.f32.f32 	%f407, %f406;
	setp.gt.f32 	%p40, %f408, 0f4B000000;
	cvt.rzi.f32.f32 	%f441, %f440;
	setp.gt.f32 	%p46, %f442, 0f4B000000;
	cvt.rzi.f32.f32 	%f476, %f475;
	setp.gt.f32 	%p52, %f477, 0f4B000000;
	cvt.rzi.f32.f32 	%f510, %f509;
	setp.gt.f32 	%p58, %f511, 0f4B000000;
	cvt.rzi.f32.f32 	%f545, %f544;
	setp.gt.f32 	%p64, %f546, 0f4B000000;
	cvt.rzi.f32.f32 	%f579, %f578;
	setp.gt.f32 	%p70, %f580, 0f4B000000;
	cvt.rzi.f32.f32 	%f614, %f613;
	setp.gt.f32 	%p76, %f615, 0f4B000000;
	cvt.rzi.f32.f32 	%f648, %f647;
	setp.gt.f32 	%p82, %f649, 0f4B000000;
	cvt.rzi.f32.f32 	%f683, %f682;
	setp.gt.f32 	%p88, %f684, 0f4B000000;
	cvt.rzi.f32.f32 	%f717, %f716;
	setp.gt.f32 	%p94, %f718, 0f4B000000;
	cvt.rzi.f32.f32 	%f752, %f751;
	setp.gt.f32 	%p100, %f753, 0f4B000000;
	cvt.rzi.f32.f32 	%f786, %f785;
	setp.gt.f32 	%p106, %f787, 0f4B000000;
	selp.f32 	%f837, %f832, %f835, %p124;
	cvt.rzi.f32.f32 	%f838, %f832;
	setp.lt.f32 	%p125, %f836, 0f3F000000;
	add.f32 	%f884, %f1358, %f1358;
	mov.b32 	%r471, %f884;
	and.b32  	%r472, %r471, -2147483648;
	or.b32  	%r473, %r472, 1056964608;
	mov.b32 	%f885, %r473;
	add.f32 	%f886, %f884, %f885;
	cvt.rzi.f32.f32 	%f887, %f886;
	abs.f32 	%f888, %f884;
	setp.gt.f32 	%p144, %f888, 0f4B000000;
	selp.f32 	%f889, %f884, %f887, %p144;
	cvt.rzi.f32.f32 	%f890, %f884;
	setp.lt.f32 	%p145, %f888, 0f3F000000;
	and.b32  	%r479, %r192, 2;
	or.b32  	%r480, %r190, %r479;
	and.b32  	%r481, %r186, 4;
	or.b32  	%r45, %r480, %r481;
	and.b32  	%r482, %r1, 3;
	mul.lo.s32 	%r483, %r482, %r45;
	shl.b32 	%r484, %r483, 1;
	neg.s32 	%r485, %r484;
	cvt.rn.f32.s32 	%f916, %r485;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f107, %f916, %f917;
	abs.f32 	%f1362, %f107;
	setp.lt.f32 	%p151, %f1362, 0f40000000;
	@%p151 bra 	$L__BB0_80;
// %bb.69:
	setp.gtu.f32 	%p152, %f1362, 0f4B800000;
	@%p152 bra 	$L__BB0_76;
	bra.uni 	$L__BB0_70;
$L__BB0_76:
	mov.b32 	%r47, %f1362;
	and.b32  	%r486, %r47, 8388607;
	or.b32  	%r16359, %r486, 1065353216;
	mov.b32 	%f1361, %r16359;
	add.s32 	%r487, %r47, -1073741824;
	and.b32  	%r16360, %r487, -8388608;
	setp.eq.s32 	%p158, %r16360, 0;
	@%p158 bra 	$L__BB0_79;
// %bb.77:                              // %__nv_fmaf_rn.exit4.i.i.i1686.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
$L__BB0_78:                             // %__nv_fmaf_rn.exit4.i.i.i1686
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r488, %r16360, 192937984;
	add.s32 	%r489, %r16359, %r488;
	mov.b32 	%f928, %r489;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1361, %f928, %f934;
	sub.s32 	%r16360, %r16360, %r488;
	mov.b32 	%r16359, %f1361;
	setp.ne.s32 	%p159, %r16360, 0;
	setp.ne.s32 	%p160, %r16359, 0;
	and.pred  	%p161, %p159, %p160;
	@%p161 bra 	$L__BB0_78;
$L__BB0_79:                             // %__internal_fmodf_slowpath_mod.exit.i.i1688
	setp.gt.u32 	%p162, %r47, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p162;
	mul.f32 	%f936, %f1361, 0f34000000;
	mul.f32 	%f1362, %f935, %f936;
	bra.uni 	$L__BB0_80;
$L__BB0_70:                             // %__nv_fast_fdividef.exit.i.i.i1665
	div.approx.f32 	%f919, %f1362, %f257;
	cvt.rzi.f32.f32 	%f1360, %f919;
	fma.rn.f32 	%f110, %f1360, 0fC0000000, %f1362;
	mov.b32 	%r46, %f110;
	setp.lt.u32 	%p153, %r46, 1073741824;
	@%p153 bra 	$L__BB0_75;
// %bb.71:
	setp.lt.u32 	%p154, %r46, -2147483647;
	@%p154 bra 	$L__BB0_73;
// %bb.72:
	add.f32 	%f924, %f1360, 0fBF800000;
	setp.lt.f32 	%p157, %f110, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1360, %f925, %f924, %p157;
	bra.uni 	$L__BB0_75;
$L__BB0_73:
	add.f32 	%f1360, %f1360, 0f3F800000;
	setp.ltu.f32 	%p155, %f110, 0f40800000;
	@%p155 bra 	$L__BB0_75;
// %bb.74:                              // %__nv_fmaf_rn.exit.i.i.i1669
	add.f32 	%f920, %f1360, 0f3F800000;
	fma.rn.f32 	%f922, %f257, 0fC0400000, %f110;
	setp.ge.f32 	%p156, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1360, %f923, %f920, %p156;
$L__BB0_75:                             // %__internal_fmodf_fastpath_quot.exit.i.i1672
	fma.rn.f32 	%f1362, %f1360, 0fC0000000, %f1362;
$L__BB0_80:                             // %__internal_fmodf_kernel.exit.i1691
	selp.f32 	%f271, %f266, %f269, %p16;
	cvt.rzi.f32.f32 	%f272, %f266;
	setp.lt.f32 	%p17, %f270, 0f3F000000;
	selp.f32 	%f305, %f300, %f303, %p22;
	cvt.rzi.f32.f32 	%f306, %f300;
	setp.lt.f32 	%p23, %f304, 0f3F000000;
	selp.f32 	%f340, %f335, %f338, %p28;
	cvt.rzi.f32.f32 	%f341, %f335;
	setp.lt.f32 	%p29, %f339, 0f3F000000;
	selp.f32 	%f374, %f369, %f372, %p34;
	cvt.rzi.f32.f32 	%f375, %f369;
	setp.lt.f32 	%p35, %f373, 0f3F000000;
	selp.f32 	%f409, %f404, %f407, %p40;
	cvt.rzi.f32.f32 	%f410, %f404;
	setp.lt.f32 	%p41, %f408, 0f3F000000;
	selp.f32 	%f443, %f438, %f441, %p46;
	cvt.rzi.f32.f32 	%f444, %f438;
	setp.lt.f32 	%p47, %f442, 0f3F000000;
	selp.f32 	%f478, %f473, %f476, %p52;
	cvt.rzi.f32.f32 	%f479, %f473;
	setp.lt.f32 	%p53, %f477, 0f3F000000;
	selp.f32 	%f512, %f507, %f510, %p58;
	cvt.rzi.f32.f32 	%f513, %f507;
	setp.lt.f32 	%p59, %f511, 0f3F000000;
	selp.f32 	%f547, %f542, %f545, %p64;
	cvt.rzi.f32.f32 	%f548, %f542;
	setp.lt.f32 	%p65, %f546, 0f3F000000;
	selp.f32 	%f581, %f576, %f579, %p70;
	cvt.rzi.f32.f32 	%f582, %f576;
	setp.lt.f32 	%p71, %f580, 0f3F000000;
	selp.f32 	%f616, %f611, %f614, %p76;
	cvt.rzi.f32.f32 	%f617, %f611;
	setp.lt.f32 	%p77, %f615, 0f3F000000;
	selp.f32 	%f650, %f645, %f648, %p82;
	cvt.rzi.f32.f32 	%f651, %f645;
	setp.lt.f32 	%p83, %f649, 0f3F000000;
	selp.f32 	%f685, %f680, %f683, %p88;
	cvt.rzi.f32.f32 	%f686, %f680;
	setp.lt.f32 	%p89, %f684, 0f3F000000;
	selp.f32 	%f719, %f714, %f717, %p94;
	cvt.rzi.f32.f32 	%f720, %f714;
	setp.lt.f32 	%p95, %f718, 0f3F000000;
	selp.f32 	%f754, %f749, %f752, %p100;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p101, %f753, 0f3F000000;
	selp.f32 	%f788, %f783, %f786, %p106;
	cvt.rzi.f32.f32 	%f789, %f783;
	setp.lt.f32 	%p107, %f787, 0f3F000000;
	selp.f32 	%f839, %f838, %f837, %p125;
	selp.f32 	%f891, %f890, %f889, %p145;
	shl.b32 	%r180, %r1, 1;
	abs.f32 	%f937, %f1362;
	setp.gtu.f32 	%p163, %f937, 0f7F800000;
	@%p163 bra 	$L__BB0_82;
// %bb.81:
	mov.b32 	%r490, %f107;
	and.b32  	%r491, %r490, -2147483648;
	mov.b32 	%r492, %f1362;
	or.b32  	%r493, %r491, %r492;
	mov.b32 	%f1362, %r493;
$L__BB0_82:                             // %__nv_fmodf.exit1692
	selp.f32 	%f273, %f272, %f271, %p17;
	selp.f32 	%f307, %f306, %f305, %p23;
	selp.f32 	%f342, %f341, %f340, %p29;
	selp.f32 	%f376, %f375, %f374, %p35;
	selp.f32 	%f411, %f410, %f409, %p41;
	selp.f32 	%f445, %f444, %f443, %p47;
	selp.f32 	%f480, %f479, %f478, %p53;
	selp.f32 	%f514, %f513, %f512, %p59;
	selp.f32 	%f549, %f548, %f547, %p65;
	selp.f32 	%f583, %f582, %f581, %p71;
	selp.f32 	%f618, %f617, %f616, %p77;
	selp.f32 	%f652, %f651, %f650, %p83;
	selp.f32 	%f687, %f686, %f685, %p89;
	selp.f32 	%f721, %f720, %f719, %p95;
	selp.f32 	%f756, %f755, %f754, %p101;
	selp.f32 	%f790, %f789, %f788, %p107;
	fma.rn.f32 	%f840, %f839, 0fBF000000, %f1354;
	fma.rn.f32 	%f892, %f891, 0fBF000000, %f1358;
	add.f32 	%f938, %f1362, %f1362;
	mov.b32 	%r494, %f938;
	and.b32  	%r495, %r494, -2147483648;
	or.b32  	%r496, %r495, 1056964608;
	mov.b32 	%f939, %r496;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p164, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p164;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p165, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p165;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1362;
	and.b32  	%r502, %r180, 6;
	mov.u32 	%r503, -8;
	sub.s32 	%r504, %r503, %r502;
	mul.lo.s32 	%r505, %r45, %r504;
	cvt.rn.f32.s32 	%f968, %r505;
	div.approx.f32 	%f126, %f968, %f917;
	abs.f32 	%f1366, %f126;
	setp.lt.f32 	%p171, %f1366, 0f40000000;
	@%p171 bra 	$L__BB0_94;
// %bb.83:
	setp.gtu.f32 	%p172, %f1366, 0f4B800000;
	@%p172 bra 	$L__BB0_90;
	bra.uni 	$L__BB0_84;
$L__BB0_90:
	mov.b32 	%r55, %f1366;
	and.b32  	%r506, %r55, 8388607;
	or.b32  	%r16361, %r506, 1065353216;
	mov.b32 	%f1365, %r16361;
	add.s32 	%r507, %r55, -1073741824;
	and.b32  	%r16362, %r507, -8388608;
	setp.eq.s32 	%p178, %r16362, 0;
	@%p178 bra 	$L__BB0_93;
// %bb.91:                              // %__nv_fmaf_rn.exit4.i.i.i1717.preheader
	mov.f32 	%f979, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f978,%f979;
	// end inline asm
$L__BB0_92:                             // %__nv_fmaf_rn.exit4.i.i.i1717
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r508, %r16362, 192937984;
	add.s32 	%r509, %r16361, %r508;
	mov.b32 	%f980, %r509;
	mul.f32 	%f981, %f978, %f980;
	sub.f32 	%f982, %f980, %f981;
	fma.rn.f32 	%f983, %f982, %f978, %f981;
	sub.f32 	%f984, %f980, %f983;
	fma.rz.f32 	%f985, %f984, %f978, %f983;
	cvt.rzi.f32.f32 	%f986, %f985;
	sub.f32 	%f1365, %f980, %f986;
	sub.s32 	%r16362, %r16362, %r508;
	mov.b32 	%r16361, %f1365;
	setp.ne.s32 	%p179, %r16362, 0;
	setp.ne.s32 	%p180, %r16361, 0;
	and.pred  	%p181, %p179, %p180;
	@%p181 bra 	$L__BB0_92;
$L__BB0_93:                             // %__internal_fmodf_slowpath_mod.exit.i.i1719
	setp.gt.u32 	%p182, %r55, 2139095039;
	selp.f32 	%f987, 0f7FFFFFFF, 0f4B800000, %p182;
	mul.f32 	%f988, %f1365, 0f34000000;
	mul.f32 	%f1366, %f987, %f988;
	bra.uni 	$L__BB0_94;
$L__BB0_84:                             // %__nv_fast_fdividef.exit.i.i.i1696
	div.approx.f32 	%f971, %f1366, %f257;
	cvt.rzi.f32.f32 	%f1364, %f971;
	fma.rn.f32 	%f129, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r54, %f129;
	setp.lt.u32 	%p173, %r54, 1073741824;
	@%p173 bra 	$L__BB0_89;
// %bb.85:
	setp.lt.u32 	%p174, %r54, -2147483647;
	@%p174 bra 	$L__BB0_87;
// %bb.86:
	add.f32 	%f976, %f1364, 0fBF800000;
	setp.lt.f32 	%p177, %f129, 0fC0000000;
	add.f32 	%f977, %f976, 0fBF800000;
	selp.f32 	%f1364, %f977, %f976, %p177;
	bra.uni 	$L__BB0_89;
$L__BB0_87:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p175, %f129, 0f40800000;
	@%p175 bra 	$L__BB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i1700
	add.f32 	%f972, %f1364, 0f3F800000;
	fma.rn.f32 	%f974, %f257, 0fC0400000, %f129;
	setp.ge.f32 	%p176, %f974, 0f00000000;
	add.f32 	%f975, %f972, 0f3F800000;
	selp.f32 	%f1364, %f975, %f972, %p176;
$L__BB0_89:                             // %__internal_fmodf_fastpath_quot.exit.i.i1703
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
$L__BB0_94:                             // %__internal_fmodf_kernel.exit.i1722
	fma.rn.f32 	%f274, %f273, 0fBF000000, %f265;
	fma.rn.f32 	%f308, %f307, 0fBF000000, %f299;
	fma.rn.f32 	%f343, %f342, 0fBF000000, %f334;
	fma.rn.f32 	%f377, %f376, 0fBF000000, %f368;
	fma.rn.f32 	%f412, %f411, 0fBF000000, %f403;
	fma.rn.f32 	%f446, %f445, 0fBF000000, %f437;
	fma.rn.f32 	%f481, %f480, 0fBF000000, %f472;
	fma.rn.f32 	%f515, %f514, 0fBF000000, %f506;
	fma.rn.f32 	%f550, %f549, 0fBF000000, %f541;
	fma.rn.f32 	%f584, %f583, 0fBF000000, %f575;
	fma.rn.f32 	%f619, %f618, 0fBF000000, %f610;
	fma.rn.f32 	%f653, %f652, 0fBF000000, %f644;
	fma.rn.f32 	%f688, %f687, 0fBF000000, %f679;
	fma.rn.f32 	%f722, %f721, 0fBF000000, %f713;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f748;
	fma.rn.f32 	%f791, %f790, 0fBF000000, %f782;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f893, %f892, %f892;
	mul.f32 	%f947, %f946, %f946;
	abs.f32 	%f989, %f1366;
	setp.gtu.f32 	%p183, %f989, 0f7F800000;
	@%p183 bra 	$L__BB0_96;
// %bb.95:
	mov.b32 	%r510, %f126;
	and.b32  	%r511, %r510, -2147483648;
	mov.b32 	%r512, %f1366;
	or.b32  	%r513, %r511, %r512;
	mov.b32 	%f1366, %r513;
$L__BB0_96:                             // %__nv_fmodf.exit1723
	mul.f32 	%f275, %f274, %f274;
	mul.f32 	%f309, %f308, %f308;
	mul.f32 	%f344, %f343, %f343;
	mul.f32 	%f378, %f377, %f377;
	mul.f32 	%f413, %f412, %f412;
	mul.f32 	%f447, %f446, %f446;
	mul.f32 	%f482, %f481, %f481;
	mul.f32 	%f516, %f515, %f515;
	mul.f32 	%f551, %f550, %f550;
	mul.f32 	%f585, %f584, %f584;
	mul.f32 	%f620, %f619, %f619;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f689, %f688, %f688;
	mul.f32 	%f723, %f722, %f722;
	mul.f32 	%f758, %f757, %f757;
	mul.f32 	%f792, %f791, %f791;
	fma.rn.f32 	%f842, %f841, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f843, %f841, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f894, %f893, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f895, %f893, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f948, %f947, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f949, %f947, 0f3E684E12, 0fBFAAD2E0;
	add.f32 	%f990, %f1366, %f1366;
	mov.b32 	%r526, %f990;
	and.b32  	%r527, %r526, -2147483648;
	or.b32  	%r528, %r527, 1056964608;
	mov.b32 	%f991, %r528;
	add.f32 	%f992, %f990, %f991;
	cvt.rzi.f32.f32 	%f993, %f992;
	abs.f32 	%f994, %f990;
	setp.gt.f32 	%p184, %f994, 0f4B000000;
	selp.f32 	%f995, %f990, %f993, %p184;
	cvt.rzi.f32.f32 	%f996, %f990;
	setp.lt.f32 	%p185, %f994, 0f3F000000;
	selp.f32 	%f997, %f996, %f995, %p185;
	fma.rn.f32 	%f998, %f997, 0fBF000000, %f1366;
	mul.f32 	%f999, %f998, %f998;
	fma.rn.f32 	%f1000, %f999, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1001, %f999, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r534, %r188, 2147483646;
	shl.b32 	%r535, %r187, 2;
	sub.s32 	%r536, %r534, %r535;
	mul.lo.s32 	%r537, %r536, %r45;
	shl.b32 	%r66, %r537, 1;
	cvt.rn.f32.s32 	%f143, %r66;
	div.approx.f32 	%f144, %f143, %f289;
	abs.f32 	%f1370, %f144;
	setp.lt.f32 	%p191, %f1370, 0f40000000;
	@%p191 bra 	$L__BB0_108;
// %bb.97:
	setp.gtu.f32 	%p192, %f1370, 0f4B800000;
	@%p192 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_98;
$L__BB0_104:
	mov.b32 	%r68, %f1370;
	and.b32  	%r538, %r68, 8388607;
	or.b32  	%r16363, %r538, 1065353216;
	mov.b32 	%f1369, %r16363;
	add.s32 	%r539, %r68, -1073741824;
	and.b32  	%r16364, %r539, -8388608;
	setp.eq.s32 	%p198, %r16364, 0;
	@%p198 bra 	$L__BB0_107;
// %bb.105:                             // %__nv_fmaf_rn.exit4.i.i.i1748.preheader
	mov.f32 	%f1032, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1031,%f1032;
	// end inline asm
$L__BB0_106:                            // %__nv_fmaf_rn.exit4.i.i.i1748
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r540, %r16364, 192937984;
	add.s32 	%r541, %r16363, %r540;
	mov.b32 	%f1033, %r541;
	mul.f32 	%f1034, %f1031, %f1033;
	sub.f32 	%f1035, %f1033, %f1034;
	fma.rn.f32 	%f1036, %f1035, %f1031, %f1034;
	sub.f32 	%f1037, %f1033, %f1036;
	fma.rz.f32 	%f1038, %f1037, %f1031, %f1036;
	cvt.rzi.f32.f32 	%f1039, %f1038;
	sub.f32 	%f1369, %f1033, %f1039;
	sub.s32 	%r16364, %r16364, %r540;
	mov.b32 	%r16363, %f1369;
	setp.ne.s32 	%p199, %r16364, 0;
	setp.ne.s32 	%p200, %r16363, 0;
	and.pred  	%p201, %p199, %p200;
	@%p201 bra 	$L__BB0_106;
$L__BB0_107:                            // %__internal_fmodf_slowpath_mod.exit.i.i1750
	setp.gt.u32 	%p202, %r68, 2139095039;
	selp.f32 	%f1040, 0f7FFFFFFF, 0f4B800000, %p202;
	mul.f32 	%f1041, %f1369, 0f34000000;
	mul.f32 	%f1370, %f1040, %f1041;
	bra.uni 	$L__BB0_108;
$L__BB0_98:                             // %__nv_fast_fdividef.exit.i.i.i1727
	div.approx.f32 	%f1024, %f1370, %f257;
	cvt.rzi.f32.f32 	%f1368, %f1024;
	fma.rn.f32 	%f147, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r67, %f147;
	setp.lt.u32 	%p193, %r67, 1073741824;
	@%p193 bra 	$L__BB0_103;
// %bb.99:
	setp.lt.u32 	%p194, %r67, -2147483647;
	@%p194 bra 	$L__BB0_101;
// %bb.100:
	add.f32 	%f1029, %f1368, 0fBF800000;
	setp.lt.f32 	%p197, %f147, 0fC0000000;
	add.f32 	%f1030, %f1029, 0fBF800000;
	selp.f32 	%f1368, %f1030, %f1029, %p197;
	bra.uni 	$L__BB0_103;
$L__BB0_101:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p195, %f147, 0f40800000;
	@%p195 bra 	$L__BB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i1731
	add.f32 	%f1025, %f1368, 0f3F800000;
	fma.rn.f32 	%f1027, %f257, 0fC0400000, %f147;
	setp.ge.f32 	%p196, %f1027, 0f00000000;
	add.f32 	%f1028, %f1025, 0f3F800000;
	selp.f32 	%f1368, %f1028, %f1025, %p196;
$L__BB0_103:                            // %__internal_fmodf_fastpath_quot.exit.i.i1734
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
$L__BB0_108:                            // %__internal_fmodf_kernel.exit.i1753
	cvt.rzi.s32.f32 	%r294, %f273;
	fma.rn.f32 	%f276, %f275, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f277, %f275, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r301, %f307;
	fma.rn.f32 	%f310, %f309, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f311, %f309, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r312, %f342;
	fma.rn.f32 	%f345, %f344, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f346, %f344, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r319, %f376;
	fma.rn.f32 	%f379, %f378, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f380, %f378, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r330, %f411;
	fma.rn.f32 	%f414, %f413, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f415, %f413, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r337, %f445;
	fma.rn.f32 	%f448, %f447, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f449, %f447, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r348, %f480;
	fma.rn.f32 	%f483, %f482, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f484, %f482, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r355, %f514;
	fma.rn.f32 	%f517, %f516, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f518, %f516, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r366, %f549;
	fma.rn.f32 	%f552, %f551, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f553, %f551, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r373, %f583;
	fma.rn.f32 	%f586, %f585, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f587, %f585, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r384, %f618;
	fma.rn.f32 	%f621, %f620, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f622, %f620, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r391, %f652;
	fma.rn.f32 	%f655, %f654, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f656, %f654, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r402, %f687;
	fma.rn.f32 	%f690, %f689, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f691, %f689, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r409, %f721;
	fma.rn.f32 	%f724, %f723, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f725, %f723, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r420, %f756;
	fma.rn.f32 	%f759, %f758, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f760, %f758, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r427, %f790;
	fma.rn.f32 	%f793, %f792, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f794, %f792, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r445, %f839;
	fma.rn.f32 	%f844, %f842, %f841, 0fC0A55DF6;
	fma.rn.f32 	%f845, %f843, %f841, 0f4081E0CF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	cvt.rzi.s32.f32 	%r474, %f891;
	fma.rn.f32 	%f896, %f894, %f893, 0fC0A55DF6;
	fma.rn.f32 	%f897, %f895, %f893, 0f4081E0CF;
	fma.rn.f32 	%f898, %f893, %f892, 0f00000000;
	cvt.rzi.s32.f32 	%r497, %f945;
	fma.rn.f32 	%f950, %f948, %f947, 0fC0A55DF6;
	fma.rn.f32 	%f951, %f949, %f947, 0f4081E0CF;
	fma.rn.f32 	%f952, %f947, %f946, 0f00000000;
	cvt.rzi.s32.f32 	%r529, %f997;
	fma.rn.f32 	%f1002, %f1000, %f999, 0fC0A55DF6;
	fma.rn.f32 	%f1003, %f1001, %f999, 0f4081E0CF;
	fma.rn.f32 	%f1004, %f999, %f998, 0f00000000;
	abs.f32 	%f1042, %f1370;
	setp.gtu.f32 	%p203, %f1042, 0f7F800000;
	@%p203 bra 	$L__BB0_110;
// %bb.109:
	mov.b32 	%r542, %f144;
	and.b32  	%r543, %r542, -2147483648;
	mov.b32 	%r544, %f1370;
	or.b32  	%r545, %r543, %r544;
	mov.b32 	%f1370, %r545;
$L__BB0_110:                            // %__nv_fmodf.exit1754
	add.s32 	%r295, %r294, 1;
	fma.rn.f32 	%f278, %f276, %f275, 0fC0A55DF6;
	fma.rn.f32 	%f279, %f277, %f275, 0f4081E0CF;
	fma.rn.f32 	%f280, %f275, %f274, 0f00000000;
	add.s32 	%r302, %r301, 1;
	fma.rn.f32 	%f312, %f310, %f309, 0fC0A55DF6;
	fma.rn.f32 	%f313, %f311, %f309, 0f4081E0CF;
	fma.rn.f32 	%f314, %f309, %f308, 0f00000000;
	add.s32 	%r313, %r312, 1;
	fma.rn.f32 	%f347, %f345, %f344, 0fC0A55DF6;
	fma.rn.f32 	%f348, %f346, %f344, 0f4081E0CF;
	fma.rn.f32 	%f349, %f344, %f343, 0f00000000;
	add.s32 	%r320, %r319, 1;
	fma.rn.f32 	%f381, %f379, %f378, 0fC0A55DF6;
	fma.rn.f32 	%f382, %f380, %f378, 0f4081E0CF;
	fma.rn.f32 	%f383, %f378, %f377, 0f00000000;
	add.s32 	%r331, %r330, 1;
	fma.rn.f32 	%f416, %f414, %f413, 0fC0A55DF6;
	fma.rn.f32 	%f417, %f415, %f413, 0f4081E0CF;
	fma.rn.f32 	%f418, %f413, %f412, 0f00000000;
	add.s32 	%r338, %r337, 1;
	fma.rn.f32 	%f450, %f448, %f447, 0fC0A55DF6;
	fma.rn.f32 	%f451, %f449, %f447, 0f4081E0CF;
	fma.rn.f32 	%f452, %f447, %f446, 0f00000000;
	add.s32 	%r349, %r348, 1;
	fma.rn.f32 	%f485, %f483, %f482, 0fC0A55DF6;
	fma.rn.f32 	%f486, %f484, %f482, 0f4081E0CF;
	fma.rn.f32 	%f487, %f482, %f481, 0f00000000;
	add.s32 	%r356, %r355, 1;
	fma.rn.f32 	%f519, %f517, %f516, 0fC0A55DF6;
	fma.rn.f32 	%f520, %f518, %f516, 0f4081E0CF;
	fma.rn.f32 	%f521, %f516, %f515, 0f00000000;
	add.s32 	%r367, %r366, 1;
	fma.rn.f32 	%f554, %f552, %f551, 0fC0A55DF6;
	fma.rn.f32 	%f555, %f553, %f551, 0f4081E0CF;
	fma.rn.f32 	%f556, %f551, %f550, 0f00000000;
	add.s32 	%r374, %r373, 1;
	fma.rn.f32 	%f588, %f586, %f585, 0fC0A55DF6;
	fma.rn.f32 	%f589, %f587, %f585, 0f4081E0CF;
	fma.rn.f32 	%f590, %f585, %f584, 0f00000000;
	add.s32 	%r385, %r384, 1;
	fma.rn.f32 	%f623, %f621, %f620, 0fC0A55DF6;
	fma.rn.f32 	%f624, %f622, %f620, 0f4081E0CF;
	fma.rn.f32 	%f625, %f620, %f619, 0f00000000;
	add.s32 	%r392, %r391, 1;
	fma.rn.f32 	%f657, %f655, %f654, 0fC0A55DF6;
	fma.rn.f32 	%f658, %f656, %f654, 0f4081E0CF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	add.s32 	%r403, %r402, 1;
	fma.rn.f32 	%f692, %f690, %f689, 0fC0A55DF6;
	fma.rn.f32 	%f693, %f691, %f689, 0f4081E0CF;
	fma.rn.f32 	%f694, %f689, %f688, 0f00000000;
	add.s32 	%r410, %r409, 1;
	fma.rn.f32 	%f726, %f724, %f723, 0fC0A55DF6;
	fma.rn.f32 	%f727, %f725, %f723, 0f4081E0CF;
	fma.rn.f32 	%f728, %f723, %f722, 0f00000000;
	add.s32 	%r421, %r420, 1;
	fma.rn.f32 	%f761, %f759, %f758, 0fC0A55DF6;
	fma.rn.f32 	%f762, %f760, %f758, 0f4081E0CF;
	fma.rn.f32 	%f763, %f758, %f757, 0f00000000;
	add.s32 	%r428, %r427, 1;
	fma.rn.f32 	%f795, %f793, %f792, 0fC0A55DF6;
	fma.rn.f32 	%f796, %f794, %f792, 0f4081E0CF;
	fma.rn.f32 	%f797, %f792, %f791, 0f00000000;
	fma.rn.f32 	%f847, %f845, %f841, 0fC09DE9E6;
	fma.rn.f32 	%f848, %f844, %f846, 0f00000000;
	and.b32  	%r446, %r445, 1;
	fma.rn.f32 	%f899, %f897, %f893, 0fC09DE9E6;
	fma.rn.f32 	%f900, %f896, %f898, 0f00000000;
	and.b32  	%r475, %r474, 1;
	fma.rn.f32 	%f953, %f951, %f947, 0fC09DE9E6;
	fma.rn.f32 	%f954, %f950, %f952, 0f00000000;
	and.b32  	%r498, %r497, 1;
	fma.rn.f32 	%f1005, %f1003, %f999, 0fC09DE9E6;
	fma.rn.f32 	%f1006, %f1002, %f1004, 0f00000000;
	and.b32  	%r530, %r529, 1;
	add.f32 	%f1043, %f1370, %f1370;
	mov.b32 	%r546, %f1043;
	and.b32  	%r547, %r546, -2147483648;
	or.b32  	%r548, %r547, 1056964608;
	mov.b32 	%f1044, %r548;
	add.f32 	%f1045, %f1043, %f1044;
	cvt.rzi.f32.f32 	%f1046, %f1045;
	abs.f32 	%f1047, %f1043;
	setp.gt.f32 	%p204, %f1047, 0f4B000000;
	selp.f32 	%f1048, %f1043, %f1046, %p204;
	cvt.rzi.f32.f32 	%f1049, %f1043;
	setp.lt.f32 	%p205, %f1047, 0f3F000000;
	selp.f32 	%f1050, %f1049, %f1048, %p205;
	cvt.rzi.s32.f32 	%r549, %f1050;
	fma.rn.f32 	%f1051, %f1050, 0fBF000000, %f1370;
	mul.f32 	%f1052, %f1051, %f1051;
	fma.rn.f32 	%f1053, %f1052, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1054, %f1052, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1055, %f1053, %f1052, 0fC0A55DF6;
	fma.rn.f32 	%f1056, %f1054, %f1052, 0f4081E0CF;
	fma.rn.f32 	%f1057, %f1052, %f1051, 0f00000000;
	shl.b32 	%r554, %r45, 4;
	sub.s32 	%r555, %r66, %r554;
	cvt.rn.f32.s32 	%f163, %r555;
	div.approx.f32 	%f164, %f163, %f289;
	abs.f32 	%f1374, %f164;
	setp.lt.f32 	%p211, %f1374, 0f40000000;
	@%p211 bra 	$L__BB0_122;
// %bb.111:
	setp.gtu.f32 	%p212, %f1374, 0f4B800000;
	@%p212 bra 	$L__BB0_118;
	bra.uni 	$L__BB0_112;
$L__BB0_118:
	mov.b32 	%r76, %f1374;
	and.b32  	%r556, %r76, 8388607;
	or.b32  	%r16365, %r556, 1065353216;
	mov.b32 	%f1373, %r16365;
	add.s32 	%r557, %r76, -1073741824;
	and.b32  	%r16366, %r557, -8388608;
	setp.eq.s32 	%p218, %r16366, 0;
	@%p218 bra 	$L__BB0_121;
// %bb.119:                             // %__nv_fmaf_rn.exit4.i.i.i1779.preheader
	mov.f32 	%f1083, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1082,%f1083;
	// end inline asm
$L__BB0_120:                            // %__nv_fmaf_rn.exit4.i.i.i1779
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r558, %r16366, 192937984;
	add.s32 	%r559, %r16365, %r558;
	mov.b32 	%f1084, %r559;
	mul.f32 	%f1085, %f1082, %f1084;
	sub.f32 	%f1086, %f1084, %f1085;
	fma.rn.f32 	%f1087, %f1086, %f1082, %f1085;
	sub.f32 	%f1088, %f1084, %f1087;
	fma.rz.f32 	%f1089, %f1088, %f1082, %f1087;
	cvt.rzi.f32.f32 	%f1090, %f1089;
	sub.f32 	%f1373, %f1084, %f1090;
	sub.s32 	%r16366, %r16366, %r558;
	mov.b32 	%r16365, %f1373;
	setp.ne.s32 	%p219, %r16366, 0;
	setp.ne.s32 	%p220, %r16365, 0;
	and.pred  	%p221, %p219, %p220;
	@%p221 bra 	$L__BB0_120;
$L__BB0_121:                            // %__internal_fmodf_slowpath_mod.exit.i.i1781
	setp.gt.u32 	%p222, %r76, 2139095039;
	selp.f32 	%f1091, 0f7FFFFFFF, 0f4B800000, %p222;
	mul.f32 	%f1092, %f1373, 0f34000000;
	mul.f32 	%f1374, %f1091, %f1092;
	bra.uni 	$L__BB0_122;
$L__BB0_112:                            // %__nv_fast_fdividef.exit.i.i.i1758
	div.approx.f32 	%f1075, %f1374, %f257;
	cvt.rzi.f32.f32 	%f1372, %f1075;
	fma.rn.f32 	%f167, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r75, %f167;
	setp.lt.u32 	%p213, %r75, 1073741824;
	@%p213 bra 	$L__BB0_117;
// %bb.113:
	setp.lt.u32 	%p214, %r75, -2147483647;
	@%p214 bra 	$L__BB0_115;
// %bb.114:
	add.f32 	%f1080, %f1372, 0fBF800000;
	setp.lt.f32 	%p217, %f167, 0fC0000000;
	add.f32 	%f1081, %f1080, 0fBF800000;
	selp.f32 	%f1372, %f1081, %f1080, %p217;
	bra.uni 	$L__BB0_117;
$L__BB0_115:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p215, %f167, 0f40800000;
	@%p215 bra 	$L__BB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i1762
	add.f32 	%f1076, %f1372, 0f3F800000;
	fma.rn.f32 	%f1078, %f257, 0fC0400000, %f167;
	setp.ge.f32 	%p216, %f1078, 0f00000000;
	add.f32 	%f1079, %f1076, 0f3F800000;
	selp.f32 	%f1372, %f1079, %f1076, %p216;
$L__BB0_117:                            // %__internal_fmodf_fastpath_quot.exit.i.i1765
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
$L__BB0_122:                            // %__internal_fmodf_kernel.exit.i1784
	shl.b32 	%r176, %r2, 5;
	fma.rn.f32 	%f281, %f279, %f275, 0fC09DE9E6;
	fma.rn.f32 	%f282, %f278, %f280, 0f00000000;
	and.b32  	%r296, %r295, 1;
	fma.rn.f32 	%f315, %f313, %f309, 0fC09DE9E6;
	fma.rn.f32 	%f316, %f312, %f314, 0f00000000;
	and.b32  	%r303, %r302, 1;
	fma.rn.f32 	%f350, %f348, %f344, 0fC09DE9E6;
	fma.rn.f32 	%f351, %f347, %f349, 0f00000000;
	and.b32  	%r314, %r313, 1;
	fma.rn.f32 	%f384, %f382, %f378, 0fC09DE9E6;
	fma.rn.f32 	%f385, %f381, %f383, 0f00000000;
	and.b32  	%r321, %r320, 1;
	fma.rn.f32 	%f419, %f417, %f413, 0fC09DE9E6;
	fma.rn.f32 	%f420, %f416, %f418, 0f00000000;
	and.b32  	%r332, %r331, 1;
	fma.rn.f32 	%f453, %f451, %f447, 0fC09DE9E6;
	fma.rn.f32 	%f454, %f450, %f452, 0f00000000;
	and.b32  	%r339, %r338, 1;
	fma.rn.f32 	%f488, %f486, %f482, 0fC09DE9E6;
	fma.rn.f32 	%f489, %f485, %f487, 0f00000000;
	and.b32  	%r350, %r349, 1;
	fma.rn.f32 	%f522, %f520, %f516, 0fC09DE9E6;
	fma.rn.f32 	%f523, %f519, %f521, 0f00000000;
	and.b32  	%r357, %r356, 1;
	fma.rn.f32 	%f557, %f555, %f551, 0fC09DE9E6;
	fma.rn.f32 	%f558, %f554, %f556, 0f00000000;
	and.b32  	%r368, %r367, 1;
	fma.rn.f32 	%f591, %f589, %f585, 0fC09DE9E6;
	fma.rn.f32 	%f592, %f588, %f590, 0f00000000;
	and.b32  	%r375, %r374, 1;
	fma.rn.f32 	%f626, %f624, %f620, 0fC09DE9E6;
	fma.rn.f32 	%f627, %f623, %f625, 0f00000000;
	and.b32  	%r386, %r385, 1;
	fma.rn.f32 	%f660, %f658, %f654, 0fC09DE9E6;
	fma.rn.f32 	%f661, %f657, %f659, 0f00000000;
	and.b32  	%r393, %r392, 1;
	fma.rn.f32 	%f695, %f693, %f689, 0fC09DE9E6;
	fma.rn.f32 	%f696, %f692, %f694, 0f00000000;
	and.b32  	%r404, %r403, 1;
	fma.rn.f32 	%f729, %f727, %f723, 0fC09DE9E6;
	fma.rn.f32 	%f730, %f726, %f728, 0f00000000;
	and.b32  	%r411, %r410, 1;
	fma.rn.f32 	%f764, %f762, %f758, 0fC09DE9E6;
	fma.rn.f32 	%f765, %f761, %f763, 0f00000000;
	and.b32  	%r422, %r421, 1;
	fma.rn.f32 	%f798, %f796, %f792, 0fC09DE9E6;
	fma.rn.f32 	%f799, %f795, %f797, 0f00000000;
	and.b32  	%r429, %r428, 1;
	fma.rn.f32 	%f849, %f847, %f841, 0f3F800000;
	fma.rn.f32 	%f850, %f840, 0f40490FDB, %f848;
	setp.eq.b32 	%p126, %r446, 1;
	fma.rn.f32 	%f901, %f899, %f893, 0f3F800000;
	fma.rn.f32 	%f902, %f892, 0f40490FDB, %f900;
	setp.eq.b32 	%p146, %r475, 1;
	fma.rn.f32 	%f955, %f953, %f947, 0f3F800000;
	fma.rn.f32 	%f956, %f946, 0f40490FDB, %f954;
	setp.eq.b32 	%p166, %r498, 1;
	fma.rn.f32 	%f1007, %f1005, %f999, 0f3F800000;
	fma.rn.f32 	%f1008, %f998, 0f40490FDB, %f1006;
	setp.eq.b32 	%p186, %r530, 1;
	fma.rn.f32 	%f1058, %f1056, %f1052, 0fC09DE9E6;
	fma.rn.f32 	%f1059, %f1055, %f1057, 0f00000000;
	and.b32  	%r550, %r549, 1;
	abs.f32 	%f1093, %f1374;
	setp.gtu.f32 	%p223, %f1093, 0f7F800000;
	@%p223 bra 	$L__BB0_124;
// %bb.123:
	mov.b32 	%r560, %f164;
	and.b32  	%r561, %r560, -2147483648;
	mov.b32 	%r562, %f1374;
	or.b32  	%r563, %r561, %r562;
	mov.b32 	%f1374, %r563;
$L__BB0_124:                            // %__nv_fmodf.exit1785
	and.b32  	%r177, %r176, 1920;
	shl.b32 	%r178, %r1, 2;
	and.b32  	%r183, %r1, 18;
	fma.rn.f32 	%f283, %f281, %f275, 0f3F800000;
	fma.rn.f32 	%f284, %f274, 0f40490FDB, %f282;
	setp.eq.b32 	%p18, %r296, 1;
	fma.rn.f32 	%f317, %f315, %f309, 0f3F800000;
	fma.rn.f32 	%f318, %f308, 0f40490FDB, %f316;
	setp.eq.b32 	%p24, %r303, 1;
	fma.rn.f32 	%f352, %f350, %f344, 0f3F800000;
	fma.rn.f32 	%f353, %f343, 0f40490FDB, %f351;
	setp.eq.b32 	%p30, %r314, 1;
	fma.rn.f32 	%f386, %f384, %f378, 0f3F800000;
	fma.rn.f32 	%f387, %f377, 0f40490FDB, %f385;
	setp.eq.b32 	%p36, %r321, 1;
	fma.rn.f32 	%f421, %f419, %f413, 0f3F800000;
	fma.rn.f32 	%f422, %f412, 0f40490FDB, %f420;
	setp.eq.b32 	%p42, %r332, 1;
	fma.rn.f32 	%f455, %f453, %f447, 0f3F800000;
	fma.rn.f32 	%f456, %f446, 0f40490FDB, %f454;
	setp.eq.b32 	%p48, %r339, 1;
	fma.rn.f32 	%f490, %f488, %f482, 0f3F800000;
	fma.rn.f32 	%f491, %f481, 0f40490FDB, %f489;
	setp.eq.b32 	%p54, %r350, 1;
	fma.rn.f32 	%f524, %f522, %f516, 0f3F800000;
	fma.rn.f32 	%f525, %f515, 0f40490FDB, %f523;
	setp.eq.b32 	%p60, %r357, 1;
	fma.rn.f32 	%f559, %f557, %f551, 0f3F800000;
	fma.rn.f32 	%f560, %f550, 0f40490FDB, %f558;
	setp.eq.b32 	%p66, %r368, 1;
	fma.rn.f32 	%f593, %f591, %f585, 0f3F800000;
	fma.rn.f32 	%f594, %f584, 0f40490FDB, %f592;
	setp.eq.b32 	%p72, %r375, 1;
	fma.rn.f32 	%f628, %f626, %f620, 0f3F800000;
	fma.rn.f32 	%f629, %f619, 0f40490FDB, %f627;
	setp.eq.b32 	%p78, %r386, 1;
	fma.rn.f32 	%f662, %f660, %f654, 0f3F800000;
	fma.rn.f32 	%f663, %f653, 0f40490FDB, %f661;
	setp.eq.b32 	%p84, %r393, 1;
	fma.rn.f32 	%f697, %f695, %f689, 0f3F800000;
	fma.rn.f32 	%f698, %f688, 0f40490FDB, %f696;
	setp.eq.b32 	%p90, %r404, 1;
	fma.rn.f32 	%f731, %f729, %f723, 0f3F800000;
	fma.rn.f32 	%f732, %f722, 0f40490FDB, %f730;
	setp.eq.b32 	%p96, %r411, 1;
	fma.rn.f32 	%f766, %f764, %f758, 0f3F800000;
	fma.rn.f32 	%f767, %f757, 0f40490FDB, %f765;
	setp.eq.b32 	%p102, %r422, 1;
	fma.rn.f32 	%f800, %f798, %f792, 0f3F800000;
	fma.rn.f32 	%f801, %f791, 0f40490FDB, %f799;
	setp.eq.b32 	%p108, %r429, 1;
	selp.f32 	%f851, %f849, %f850, %p126;
	and.b32  	%r447, %r445, 2;
	selp.f32 	%f903, %f901, %f902, %p146;
	and.b32  	%r476, %r474, 2;
	selp.f32 	%f957, %f955, %f956, %p166;
	and.b32  	%r499, %r497, 2;
	selp.f32 	%f1009, %f1007, %f1008, %p186;
	and.b32  	%r531, %r529, 2;
	fma.rn.f32 	%f1060, %f1058, %f1052, 0f3F800000;
	fma.rn.f32 	%f1061, %f1051, 0f40490FDB, %f1059;
	setp.eq.b32 	%p206, %r550, 1;
	add.f32 	%f1094, %f1374, %f1374;
	mov.b32 	%r570, %f1094;
	and.b32  	%r571, %r570, -2147483648;
	or.b32  	%r572, %r571, 1056964608;
	mov.b32 	%f1095, %r572;
	add.f32 	%f1096, %f1094, %f1095;
	cvt.rzi.f32.f32 	%f1097, %f1096;
	abs.f32 	%f1098, %f1094;
	setp.gt.f32 	%p224, %f1098, 0f4B000000;
	selp.f32 	%f1099, %f1094, %f1097, %p224;
	cvt.rzi.f32.f32 	%f1100, %f1094;
	setp.lt.f32 	%p225, %f1098, 0f3F000000;
	selp.f32 	%f1101, %f1100, %f1099, %p225;
	cvt.rzi.s32.f32 	%r573, %f1101;
	fma.rn.f32 	%f1102, %f1101, 0fBF000000, %f1374;
	mul.f32 	%f1103, %f1102, %f1102;
	fma.rn.f32 	%f1104, %f1103, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1105, %f1103, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1106, %f1104, %f1103, 0fC0A55DF6;
	fma.rn.f32 	%f1107, %f1105, %f1103, 0f4081E0CF;
	fma.rn.f32 	%f1108, %f1103, %f1102, 0f00000000;
	fma.rn.f32 	%f1109, %f1107, %f1103, 0fC09DE9E6;
	fma.rn.f32 	%f1110, %f1106, %f1108, 0f00000000;
	fma.rn.f32 	%f1111, %f1109, %f1103, 0f3F800000;
	fma.rn.f32 	%f1112, %f1102, 0f40490FDB, %f1110;
	and.b32  	%r574, %r573, 1;
	setp.eq.b32 	%p226, %r574, 1;
	mov.f32 	%f1126, 0f41800000;
	div.approx.f32 	%f181, %f143, %f1126;
	abs.f32 	%f1378, %f181;
	setp.lt.f32 	%p231, %f1378, 0f40000000;
	@%p231 bra 	$L__BB0_136;
// %bb.125:
	setp.gtu.f32 	%p232, %f1378, 0f4B800000;
	@%p232 bra 	$L__BB0_132;
	bra.uni 	$L__BB0_126;
$L__BB0_132:
	mov.b32 	%r86, %f1378;
	and.b32  	%r578, %r86, 8388607;
	or.b32  	%r16367, %r578, 1065353216;
	mov.b32 	%f1377, %r16367;
	add.s32 	%r579, %r86, -1073741824;
	and.b32  	%r16368, %r579, -8388608;
	setp.eq.s32 	%p238, %r16368, 0;
	@%p238 bra 	$L__BB0_135;
// %bb.133:                             // %__nv_fmaf_rn.exit4.i.i.i1810.preheader
	mov.f32 	%f1136, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1135,%f1136;
	// end inline asm
$L__BB0_134:                            // %__nv_fmaf_rn.exit4.i.i.i1810
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r580, %r16368, 192937984;
	add.s32 	%r581, %r16367, %r580;
	mov.b32 	%f1137, %r581;
	mul.f32 	%f1138, %f1135, %f1137;
	sub.f32 	%f1139, %f1137, %f1138;
	fma.rn.f32 	%f1140, %f1139, %f1135, %f1138;
	sub.f32 	%f1141, %f1137, %f1140;
	fma.rz.f32 	%f1142, %f1141, %f1135, %f1140;
	cvt.rzi.f32.f32 	%f1143, %f1142;
	sub.f32 	%f1377, %f1137, %f1143;
	sub.s32 	%r16368, %r16368, %r580;
	mov.b32 	%r16367, %f1377;
	setp.ne.s32 	%p239, %r16368, 0;
	setp.ne.s32 	%p240, %r16367, 0;
	and.pred  	%p241, %p239, %p240;
	@%p241 bra 	$L__BB0_134;
$L__BB0_135:                            // %__internal_fmodf_slowpath_mod.exit.i.i1812
	setp.gt.u32 	%p242, %r86, 2139095039;
	selp.f32 	%f1144, 0f7FFFFFFF, 0f4B800000, %p242;
	mul.f32 	%f1145, %f1377, 0f34000000;
	mul.f32 	%f1378, %f1144, %f1145;
	bra.uni 	$L__BB0_136;
$L__BB0_126:                            // %__nv_fast_fdividef.exit.i.i.i1789
	div.approx.f32 	%f1128, %f1378, %f257;
	cvt.rzi.f32.f32 	%f1376, %f1128;
	fma.rn.f32 	%f184, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r85, %f184;
	setp.lt.u32 	%p233, %r85, 1073741824;
	@%p233 bra 	$L__BB0_131;
// %bb.127:
	setp.lt.u32 	%p234, %r85, -2147483647;
	@%p234 bra 	$L__BB0_129;
// %bb.128:
	add.f32 	%f1133, %f1376, 0fBF800000;
	setp.lt.f32 	%p237, %f184, 0fC0000000;
	add.f32 	%f1134, %f1133, 0fBF800000;
	selp.f32 	%f1376, %f1134, %f1133, %p237;
	bra.uni 	$L__BB0_131;
$L__BB0_129:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p235, %f184, 0f40800000;
	@%p235 bra 	$L__BB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i1793
	add.f32 	%f1129, %f1376, 0f3F800000;
	fma.rn.f32 	%f1131, %f257, 0fC0400000, %f184;
	setp.ge.f32 	%p236, %f1131, 0f00000000;
	add.f32 	%f1132, %f1129, 0f3F800000;
	selp.f32 	%f1376, %f1132, %f1129, %p236;
$L__BB0_131:                            // %__internal_fmodf_fastpath_quot.exit.i.i1796
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
$L__BB0_136:                            // %__internal_fmodf_kernel.exit.i1815
	and.b32  	%r179, %r178, 4;
	or.b32  	%r278, %r183, %r177;
	selp.f32 	%f285, %f283, %f284, %p18;
	and.b32  	%r297, %r295, 2;
	mov.f32 	%f286, 0f00000000;
	selp.f32 	%f319, %f317, %f318, %p24;
	and.b32  	%r304, %r302, 2;
	selp.f32 	%f354, %f352, %f353, %p30;
	and.b32  	%r315, %r313, 2;
	selp.f32 	%f388, %f386, %f387, %p36;
	and.b32  	%r322, %r320, 2;
	selp.f32 	%f423, %f421, %f422, %p42;
	and.b32  	%r333, %r331, 2;
	selp.f32 	%f457, %f455, %f456, %p48;
	and.b32  	%r340, %r338, 2;
	selp.f32 	%f492, %f490, %f491, %p54;
	and.b32  	%r351, %r349, 2;
	selp.f32 	%f526, %f524, %f525, %p60;
	and.b32  	%r358, %r356, 2;
	selp.f32 	%f561, %f559, %f560, %p66;
	and.b32  	%r369, %r367, 2;
	selp.f32 	%f595, %f593, %f594, %p72;
	and.b32  	%r376, %r374, 2;
	selp.f32 	%f630, %f628, %f629, %p78;
	and.b32  	%r387, %r385, 2;
	selp.f32 	%f664, %f662, %f663, %p84;
	and.b32  	%r394, %r392, 2;
	selp.f32 	%f699, %f697, %f698, %p90;
	and.b32  	%r405, %r403, 2;
	selp.f32 	%f733, %f731, %f732, %p96;
	and.b32  	%r412, %r410, 2;
	selp.f32 	%f768, %f766, %f767, %p102;
	and.b32  	%r423, %r421, 2;
	selp.f32 	%f802, %f800, %f801, %p108;
	and.b32  	%r430, %r428, 2;
	setp.eq.s32 	%p127, %r447, 0;
	neg.f32 	%f853, %f851;
	add.s32 	%r448, %r445, 1;
	cvt.rzi.f32.f32 	%f858, %f1354;
	setp.eq.s32 	%p147, %r476, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r477, %r474, 1;
	cvt.rzi.f32.f32 	%f910, %f1358;
	setp.eq.s32 	%p167, %r499, 0;
	neg.f32 	%f959, %f957;
	add.s32 	%r500, %r497, 1;
	cvt.rzi.f32.f32 	%f964, %f1362;
	setp.eq.s32 	%p187, %r531, 0;
	neg.f32 	%f1011, %f1009;
	add.s32 	%r532, %r529, 1;
	cvt.rzi.f32.f32 	%f1016, %f1366;
	selp.f32 	%f1062, %f1060, %f1061, %p206;
	and.b32  	%r551, %r549, 2;
	selp.f32 	%f1113, %f1111, %f1112, %p226;
	and.b32  	%r575, %r573, 2;
	abs.f32 	%f1146, %f1378;
	setp.gtu.f32 	%p243, %f1146, 0f7F800000;
	@%p243 bra 	$L__BB0_138;
// %bb.137:
	mov.b32 	%r582, %f181;
	and.b32  	%r583, %r582, -2147483648;
	mov.b32 	%r584, %f1378;
	or.b32  	%r585, %r583, %r584;
	mov.b32 	%f1378, %r585;
$L__BB0_138:                            // %__nv_fmodf.exit1816
	and.b32  	%r181, %r180, 8;
	or.b32  	%r279, %r278, %r179;
	setp.eq.s32 	%p19, %r297, 0;
	sub.f32 	%f287, %f286, %f285;
	setp.eq.s32 	%p25, %r304, 0;
	sub.f32 	%f321, %f286, %f319;
	setp.eq.s32 	%p31, %r315, 0;
	sub.f32 	%f356, %f286, %f354;
	setp.eq.s32 	%p37, %r322, 0;
	sub.f32 	%f390, %f286, %f388;
	setp.eq.s32 	%p43, %r333, 0;
	sub.f32 	%f425, %f286, %f423;
	setp.eq.s32 	%p49, %r340, 0;
	sub.f32 	%f459, %f286, %f457;
	setp.eq.s32 	%p55, %r351, 0;
	sub.f32 	%f494, %f286, %f492;
	setp.eq.s32 	%p61, %r358, 0;
	sub.f32 	%f528, %f286, %f526;
	setp.eq.s32 	%p67, %r369, 0;
	sub.f32 	%f563, %f286, %f561;
	setp.eq.s32 	%p73, %r376, 0;
	sub.f32 	%f597, %f286, %f595;
	setp.eq.s32 	%p79, %r387, 0;
	sub.f32 	%f632, %f286, %f630;
	setp.eq.s32 	%p85, %r394, 0;
	sub.f32 	%f666, %f286, %f664;
	setp.eq.s32 	%p91, %r405, 0;
	sub.f32 	%f701, %f286, %f699;
	setp.eq.s32 	%p97, %r412, 0;
	sub.f32 	%f735, %f286, %f733;
	setp.eq.s32 	%p103, %r423, 0;
	sub.f32 	%f770, %f286, %f768;
	setp.eq.s32 	%p109, %r430, 0;
	sub.f32 	%f804, %f286, %f802;
	selp.f32 	%f852, %f850, %f849, %p126;
	selp.f32 	%f854, %f851, %f853, %p127;
	and.b32  	%r449, %r448, 2;
	setp.eq.f32 	%p129, %f858, %f1354;
	mul.f32 	%f859, %f1354, 0f00000000;
	selp.f32 	%f904, %f902, %f901, %p146;
	selp.f32 	%f906, %f903, %f905, %p147;
	and.b32  	%r478, %r477, 2;
	setp.eq.f32 	%p149, %f910, %f1358;
	mul.f32 	%f911, %f1358, 0f00000000;
	selp.f32 	%f958, %f956, %f955, %p166;
	selp.f32 	%f960, %f957, %f959, %p167;
	and.b32  	%r501, %r500, 2;
	setp.eq.f32 	%p169, %f964, %f1362;
	mul.f32 	%f965, %f1362, 0f00000000;
	selp.f32 	%f1010, %f1008, %f1007, %p186;
	selp.f32 	%f1012, %f1009, %f1011, %p187;
	and.b32  	%r533, %r532, 2;
	setp.eq.f32 	%p189, %f1016, %f1366;
	mul.f32 	%f1017, %f1366, 0f00000000;
	setp.eq.s32 	%p207, %r551, 0;
	neg.f32 	%f1064, %f1062;
	add.s32 	%r552, %r549, 1;
	cvt.rzi.f32.f32 	%f1069, %f1370;
	setp.eq.s32 	%p227, %r575, 0;
	neg.f32 	%f1115, %f1113;
	add.s32 	%r576, %r573, 1;
	cvt.rzi.f32.f32 	%f1120, %f1374;
	add.f32 	%f1147, %f1378, %f1378;
	mov.b32 	%r586, %f1147;
	and.b32  	%r587, %r586, -2147483648;
	or.b32  	%r588, %r587, 1056964608;
	mov.b32 	%f1148, %r588;
	add.f32 	%f1149, %f1147, %f1148;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	abs.f32 	%f1151, %f1147;
	setp.gt.f32 	%p244, %f1151, 0f4B000000;
	selp.f32 	%f1152, %f1147, %f1150, %p244;
	cvt.rzi.f32.f32 	%f1153, %f1147;
	setp.lt.f32 	%p245, %f1151, 0f3F000000;
	selp.f32 	%f1154, %f1153, %f1152, %p245;
	cvt.rzi.s32.f32 	%r589, %f1154;
	fma.rn.f32 	%f1155, %f1154, 0fBF000000, %f1378;
	mul.f32 	%f1156, %f1155, %f1155;
	fma.rn.f32 	%f1157, %f1156, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1158, %f1156, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1159, %f1157, %f1156, 0fC0A55DF6;
	fma.rn.f32 	%f1160, %f1158, %f1156, 0f4081E0CF;
	fma.rn.f32 	%f1161, %f1156, %f1155, 0f00000000;
	fma.rn.f32 	%f1162, %f1160, %f1156, 0fC09DE9E6;
	fma.rn.f32 	%f1163, %f1159, %f1161, 0f00000000;
	fma.rn.f32 	%f1164, %f1162, %f1156, 0f3F800000;
	fma.rn.f32 	%f1165, %f1155, 0f40490FDB, %f1163;
	and.b32  	%r590, %r589, 1;
	setp.eq.b32 	%p246, %r590, 1;
	selp.f32 	%f1166, %f1164, %f1165, %p246;
	selp.f32 	%f1167, %f1165, %f1164, %p246;
	and.b32  	%r591, %r589, 2;
	setp.eq.s32 	%p247, %r591, 0;
	neg.f32 	%f1168, %f1166;
	selp.f32 	%f1169, %f1166, %f1168, %p247;
	add.s32 	%r592, %r589, 1;
	and.b32  	%r593, %r592, 2;
	cvt.rzi.f32.f32 	%f1173, %f1378;
	setp.eq.f32 	%p249, %f1173, %f1378;
	mul.f32 	%f1174, %f1378, 0f00000000;
	div.approx.f32 	%f200, %f163, %f1126;
	abs.f32 	%f1382, %f200;
	setp.lt.f32 	%p251, %f1382, 0f40000000;
	@%p251 bra 	$L__BB0_150;
// %bb.139:
	setp.gtu.f32 	%p252, %f1382, 0f4B800000;
	@%p252 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_140;
$L__BB0_146:
	mov.b32 	%r94, %f1382;
	and.b32  	%r594, %r94, 8388607;
	or.b32  	%r16369, %r594, 1065353216;
	mov.b32 	%f1381, %r16369;
	add.s32 	%r595, %r94, -1073741824;
	and.b32  	%r16370, %r595, -8388608;
	setp.eq.s32 	%p258, %r16370, 0;
	@%p258 bra 	$L__BB0_149;
// %bb.147:                             // %__nv_fmaf_rn.exit4.i.i.i1841.preheader
	mov.f32 	%f1187, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1186,%f1187;
	// end inline asm
$L__BB0_148:                            // %__nv_fmaf_rn.exit4.i.i.i1841
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r596, %r16370, 192937984;
	add.s32 	%r597, %r16369, %r596;
	mov.b32 	%f1188, %r597;
	mul.f32 	%f1189, %f1186, %f1188;
	sub.f32 	%f1190, %f1188, %f1189;
	fma.rn.f32 	%f1191, %f1190, %f1186, %f1189;
	sub.f32 	%f1192, %f1188, %f1191;
	fma.rz.f32 	%f1193, %f1192, %f1186, %f1191;
	cvt.rzi.f32.f32 	%f1194, %f1193;
	sub.f32 	%f1381, %f1188, %f1194;
	sub.s32 	%r16370, %r16370, %r596;
	mov.b32 	%r16369, %f1381;
	setp.ne.s32 	%p259, %r16370, 0;
	setp.ne.s32 	%p260, %r16369, 0;
	and.pred  	%p261, %p259, %p260;
	@%p261 bra 	$L__BB0_148;
$L__BB0_149:                            // %__internal_fmodf_slowpath_mod.exit.i.i1843
	setp.gt.u32 	%p262, %r94, 2139095039;
	selp.f32 	%f1195, 0f7FFFFFFF, 0f4B800000, %p262;
	mul.f32 	%f1196, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1195, %f1196;
	bra.uni 	$L__BB0_150;
$L__BB0_140:                            // %__nv_fast_fdividef.exit.i.i.i1820
	div.approx.f32 	%f1179, %f1382, %f257;
	cvt.rzi.f32.f32 	%f1380, %f1179;
	fma.rn.f32 	%f203, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r93, %f203;
	setp.lt.u32 	%p253, %r93, 1073741824;
	@%p253 bra 	$L__BB0_145;
// %bb.141:
	setp.lt.u32 	%p254, %r93, -2147483647;
	@%p254 bra 	$L__BB0_143;
// %bb.142:
	add.f32 	%f1184, %f1380, 0fBF800000;
	setp.lt.f32 	%p257, %f203, 0fC0000000;
	add.f32 	%f1185, %f1184, 0fBF800000;
	selp.f32 	%f1380, %f1185, %f1184, %p257;
	bra.uni 	$L__BB0_145;
$L__BB0_143:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p255, %f203, 0f40800000;
	@%p255 bra 	$L__BB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i1824
	add.f32 	%f1180, %f1380, 0f3F800000;
	fma.rn.f32 	%f1182, %f257, 0fC0400000, %f203;
	setp.ge.f32 	%p256, %f1182, 0f00000000;
	add.f32 	%f1183, %f1180, 0f3F800000;
	selp.f32 	%f1380, %f1183, %f1180, %p256;
$L__BB0_145:                            // %__internal_fmodf_fastpath_quot.exit.i.i1827
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
$L__BB0_150:                            // %__internal_fmodf_kernel.exit.i1846
	and.b32  	%r182, %r178, 32;
	or.b32  	%r280, %r279, %r181;
	selp.f32 	%f288, %f285, %f287, %p19;
	selp.f32 	%f322, %f319, %f321, %p25;
	selp.f32 	%f357, %f354, %f356, %p31;
	selp.f32 	%f391, %f388, %f390, %p37;
	selp.f32 	%f426, %f423, %f425, %p43;
	selp.f32 	%f460, %f457, %f459, %p49;
	selp.f32 	%f495, %f492, %f494, %p55;
	selp.f32 	%f529, %f526, %f528, %p61;
	selp.f32 	%f564, %f561, %f563, %p67;
	selp.f32 	%f598, %f595, %f597, %p73;
	selp.f32 	%f633, %f630, %f632, %p79;
	selp.f32 	%f667, %f664, %f666, %p85;
	selp.f32 	%f702, %f699, %f701, %p91;
	selp.f32 	%f736, %f733, %f735, %p97;
	selp.f32 	%f771, %f768, %f770, %p103;
	selp.f32 	%f805, %f802, %f804, %p109;
	setp.eq.s32 	%p128, %r449, 0;
	sub.f32 	%f856, %f286, %f852;
	selp.f32 	%f88, %f859, %f854, %p129;
	abs.f32 	%f860, %f1354;
	setp.eq.s32 	%p148, %r478, 0;
	sub.f32 	%f908, %f286, %f904;
	selp.f32 	%f912, %f911, %f906, %p149;
	abs.f32 	%f913, %f1358;
	setp.eq.s32 	%p168, %r501, 0;
	sub.f32 	%f962, %f286, %f958;
	selp.f32 	%f124, %f965, %f960, %p169;
	abs.f32 	%f966, %f1362;
	setp.eq.s32 	%p188, %r533, 0;
	sub.f32 	%f1014, %f286, %f1010;
	selp.f32 	%f1018, %f1017, %f1012, %p189;
	abs.f32 	%f1019, %f1366;
	selp.f32 	%f1063, %f1061, %f1060, %p206;
	selp.f32 	%f1065, %f1062, %f1064, %p207;
	and.b32  	%r553, %r552, 2;
	setp.eq.f32 	%p209, %f1069, %f1370;
	mul.f32 	%f1070, %f1370, 0f00000000;
	selp.f32 	%f1114, %f1112, %f1111, %p226;
	selp.f32 	%f1116, %f1113, %f1115, %p227;
	and.b32  	%r577, %r576, 2;
	setp.eq.f32 	%p229, %f1120, %f1374;
	mul.f32 	%f1121, %f1374, 0f00000000;
	setp.eq.s32 	%p248, %r593, 0;
	sub.f32 	%f1171, %f286, %f1167;
	selp.f32 	%f198, %f1174, %f1169, %p249;
	abs.f32 	%f1175, %f1378;
	and.b32  	%r175, %r1, 16;
	abs.f32 	%f1197, %f1382;
	setp.gtu.f32 	%p263, %f1197, 0f7F800000;
	@%p263 bra 	$L__BB0_152;
// %bb.151:
	mov.b32 	%r598, %f200;
	and.b32  	%r599, %r598, -2147483648;
	mov.b32 	%r600, %f1382;
	or.b32  	%r601, %r599, %r600;
	mov.b32 	%f1382, %r601;
$L__BB0_152:                            // %__nv_fmodf.exit1847
	or.b32  	%r281, %r280, %r182;
	mul.f32 	%f254, %f288, %f288;
	mul.f32 	%f4, %f322, %f322;
	mul.f32 	%f8, %f357, %f357;
	mul.f32 	%f13, %f391, %f391;
	mul.f32 	%f17, %f426, %f426;
	mul.f32 	%f22, %f460, %f460;
	mul.f32 	%f26, %f495, %f495;
	mul.f32 	%f31, %f529, %f529;
	mul.f32 	%f35, %f564, %f564;
	mul.f32 	%f40, %f598, %f598;
	mul.f32 	%f44, %f633, %f633;
	mul.f32 	%f49, %f667, %f667;
	mul.f32 	%f53, %f702, %f702;
	mul.f32 	%f58, %f736, %f736;
	mul.f32 	%f62, %f771, %f771;
	mul.f32 	%f67, %f805, %f805;
	selp.f32 	%f857, %f852, %f856, %p128;
	setp.gt.f32 	%p130, %f860, 0f4B800000;
	add.f32 	%f861, %f88, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p148;
	setp.gt.f32 	%p150, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f963, %f958, %f962, %p168;
	setp.gt.f32 	%p170, %f966, 0f4B800000;
	add.f32 	%f967, %f124, 0f3F800000;
	selp.f32 	%f1015, %f1010, %f1014, %p188;
	setp.gt.f32 	%p190, %f1019, 0f4B800000;
	add.f32 	%f1020, %f1018, 0f3F800000;
	setp.eq.s32 	%p208, %r553, 0;
	sub.f32 	%f1067, %f286, %f1063;
	selp.f32 	%f161, %f1070, %f1065, %p209;
	abs.f32 	%f1071, %f1370;
	setp.eq.s32 	%p228, %r577, 0;
	sub.f32 	%f1118, %f286, %f1114;
	selp.f32 	%f1122, %f1121, %f1116, %p229;
	abs.f32 	%f1123, %f1374;
	selp.f32 	%f1172, %f1167, %f1171, %p248;
	setp.gt.f32 	%p250, %f1175, 0f4B800000;
	add.f32 	%f1176, %f198, 0f3F800000;
	add.f32 	%f1198, %f1382, %f1382;
	mov.b32 	%r614, %f1198;
	and.b32  	%r615, %r614, -2147483648;
	or.b32  	%r616, %r615, 1056964608;
	mov.b32 	%f1199, %r616;
	add.f32 	%f1200, %f1198, %f1199;
	cvt.rzi.f32.f32 	%f1201, %f1200;
	abs.f32 	%f1202, %f1198;
	setp.gt.f32 	%p264, %f1202, 0f4B000000;
	selp.f32 	%f1203, %f1198, %f1201, %p264;
	cvt.rzi.f32.f32 	%f1204, %f1198;
	setp.lt.f32 	%p265, %f1202, 0f3F000000;
	selp.f32 	%f1205, %f1204, %f1203, %p265;
	cvt.rzi.s32.f32 	%r617, %f1205;
	fma.rn.f32 	%f1206, %f1205, 0fBF000000, %f1382;
	mul.f32 	%f1207, %f1206, %f1206;
	fma.rn.f32 	%f1208, %f1207, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1209, %f1207, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1210, %f1208, %f1207, 0fC0A55DF6;
	fma.rn.f32 	%f1211, %f1209, %f1207, 0f4081E0CF;
	fma.rn.f32 	%f1212, %f1207, %f1206, 0f00000000;
	fma.rn.f32 	%f1213, %f1211, %f1207, 0fC09DE9E6;
	fma.rn.f32 	%f1214, %f1210, %f1212, 0f00000000;
	fma.rn.f32 	%f1215, %f1213, %f1207, 0f3F800000;
	fma.rn.f32 	%f1216, %f1206, 0f40490FDB, %f1214;
	and.b32  	%r618, %r617, 1;
	setp.eq.b32 	%p266, %r618, 1;
	selp.f32 	%f1217, %f1215, %f1216, %p266;
	selp.f32 	%f1218, %f1216, %f1215, %p266;
	and.b32  	%r619, %r617, 2;
	setp.eq.s32 	%p267, %r619, 0;
	neg.f32 	%f1219, %f1217;
	selp.f32 	%f1220, %f1217, %f1219, %p267;
	add.s32 	%r620, %r617, 1;
	and.b32  	%r621, %r620, 2;
	setp.eq.s32 	%p268, %r621, 0;
	sub.f32 	%f1222, %f286, %f1218;
	selp.f32 	%f1223, %f1218, %f1222, %p268;
	cvt.rzi.f32.f32 	%f1224, %f1382;
	setp.eq.f32 	%p269, %f1224, %f1382;
	mul.f32 	%f1225, %f1382, 0f00000000;
	selp.f32 	%f1226, %f1225, %f1220, %p269;
	abs.f32 	%f1227, %f1382;
	setp.gt.f32 	%p270, %f1227, 0f4B800000;
	add.f32 	%f1228, %f1226, 0f3F800000;
	mul.lo.s32 	%r622, %r190, 2147483640;
	cvt.u16.u32 	%rs1, %r1;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	sub.s32 	%r623, %r622, %r175;
	mad.lo.s32 	%r624, %r193, 2147483616, %r623;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r625, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r626, %rs21;
	sub.s32 	%r627, %r624, %r626;
	shl.b32 	%r628, %r627, 1;
	cvt.rn.f32.s32 	%f1230, %r628;
	div.approx.f32 	%f217, %f1230, %f289;
	abs.f32 	%f1386, %f217;
	setp.lt.f32 	%p271, %f1386, 0f40000000;
	@%p271 bra 	$L__BB0_164;
// %bb.153:
	setp.gtu.f32 	%p272, %f1386, 0f4B800000;
	@%p272 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_154;
$L__BB0_160:
	mov.b32 	%r107, %f1386;
	and.b32  	%r629, %r107, 8388607;
	or.b32  	%r16371, %r629, 1065353216;
	mov.b32 	%f1385, %r16371;
	add.s32 	%r630, %r107, -1073741824;
	and.b32  	%r16372, %r630, -8388608;
	setp.eq.s32 	%p278, %r16372, 0;
	@%p278 bra 	$L__BB0_163;
// %bb.161:                             // %__nv_fmaf_rn.exit4.i.i.i1872.preheader
	mov.f32 	%f1241, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1240,%f1241;
	// end inline asm
$L__BB0_162:                            // %__nv_fmaf_rn.exit4.i.i.i1872
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r631, %r16372, 192937984;
	add.s32 	%r632, %r16371, %r631;
	mov.b32 	%f1242, %r632;
	mul.f32 	%f1243, %f1240, %f1242;
	sub.f32 	%f1244, %f1242, %f1243;
	fma.rn.f32 	%f1245, %f1244, %f1240, %f1243;
	sub.f32 	%f1246, %f1242, %f1245;
	fma.rz.f32 	%f1247, %f1246, %f1240, %f1245;
	cvt.rzi.f32.f32 	%f1248, %f1247;
	sub.f32 	%f1385, %f1242, %f1248;
	sub.s32 	%r16372, %r16372, %r631;
	mov.b32 	%r16371, %f1385;
	setp.ne.s32 	%p279, %r16372, 0;
	setp.ne.s32 	%p280, %r16371, 0;
	and.pred  	%p281, %p279, %p280;
	@%p281 bra 	$L__BB0_162;
$L__BB0_163:                            // %__internal_fmodf_slowpath_mod.exit.i.i1874
	setp.gt.u32 	%p282, %r107, 2139095039;
	selp.f32 	%f1249, 0f7FFFFFFF, 0f4B800000, %p282;
	mul.f32 	%f1250, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1249, %f1250;
	bra.uni 	$L__BB0_164;
$L__BB0_154:                            // %__nv_fast_fdividef.exit.i.i.i1851
	div.approx.f32 	%f1233, %f1386, %f257;
	cvt.rzi.f32.f32 	%f1384, %f1233;
	fma.rn.f32 	%f220, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r106, %f220;
	setp.lt.u32 	%p273, %r106, 1073741824;
	@%p273 bra 	$L__BB0_159;
// %bb.155:
	setp.lt.u32 	%p274, %r106, -2147483647;
	@%p274 bra 	$L__BB0_157;
// %bb.156:
	add.f32 	%f1238, %f1384, 0fBF800000;
	setp.lt.f32 	%p277, %f220, 0fC0000000;
	add.f32 	%f1239, %f1238, 0fBF800000;
	selp.f32 	%f1384, %f1239, %f1238, %p277;
	bra.uni 	$L__BB0_159;
$L__BB0_157:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p275, %f220, 0f40800000;
	@%p275 bra 	$L__BB0_159;
// %bb.158:                             // %__nv_fmaf_rn.exit.i.i.i1855
	add.f32 	%f1234, %f1384, 0f3F800000;
	fma.rn.f32 	%f1236, %f257, 0fC0400000, %f220;
	setp.ge.f32 	%p276, %f1236, 0f00000000;
	add.f32 	%f1237, %f1234, 0f3F800000;
	selp.f32 	%f1384, %f1237, %f1234, %p276;
$L__BB0_159:                            // %__internal_fmodf_fastpath_quot.exit.i.i1858
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
$L__BB0_164:                            // %__internal_fmodf_kernel.exit.i1877
	shr.u32 	%r282, %r281, 1;
	mul.f32 	%f292, %f254, 0f3B8B2FF9;
	mul.f32 	%f326, %f4, 0f3B8B2FF9;
	mul.f32 	%f361, %f8, 0f3B8B2FF9;
	mul.f32 	%f395, %f13, 0f3B8B2FF9;
	mul.f32 	%f430, %f17, 0f3B8B2FF9;
	mul.f32 	%f464, %f22, 0f3B8B2FF9;
	mul.f32 	%f499, %f26, 0f3B8B2FF9;
	mul.f32 	%f533, %f31, 0f3B8B2FF9;
	mul.f32 	%f568, %f35, 0f3B8B2FF9;
	mul.f32 	%f602, %f40, 0f3B8B2FF9;
	mul.f32 	%f637, %f44, 0f3B8B2FF9;
	mul.f32 	%f671, %f49, 0f3B8B2FF9;
	mul.f32 	%f706, %f53, 0f3B8B2FF9;
	mul.f32 	%f740, %f58, 0f3B8B2FF9;
	mul.f32 	%f775, %f62, 0f3B8B2FF9;
	mul.f32 	%f808, %f67, 0f3B8B2FF9;
	selp.f32 	%f89, %f861, %f857, %p130;
	selp.f32 	%f915, %f914, %f909, %p150;
	selp.f32 	%f125, %f967, %f963, %p170;
	selp.f32 	%f1021, %f1020, %f1015, %p190;
	selp.f32 	%f1068, %f1063, %f1067, %p208;
	setp.gt.f32 	%p210, %f1071, 0f4B800000;
	add.f32 	%f1072, %f161, 0f3F800000;
	selp.f32 	%f1119, %f1114, %f1118, %p228;
	setp.gt.f32 	%p230, %f1123, 0f4B800000;
	add.f32 	%f1124, %f1122, 0f3F800000;
	selp.f32 	%f199, %f1176, %f1172, %p250;
	selp.f32 	%f1229, %f1228, %f1223, %p270;
	sub.s32 	%r105, %r624, %r625;
	abs.f32 	%f1251, %f1386;
	setp.gtu.f32 	%p283, %f1251, 0f7F800000;
	@%p283 bra 	$L__BB0_166;
// %bb.165:
	mov.b32 	%r633, %f217;
	and.b32  	%r634, %r633, -2147483648;
	mov.b32 	%r635, %f1386;
	or.b32  	%r636, %r634, %r635;
	mov.b32 	%f1386, %r636;
$L__BB0_166:                            // %__nv_fmodf.exit1878
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd47, %r282, 4;
	mul.f32 	%f3, %f292, %f1336;
	mul.f32 	%f327, %f326, %f1337;
	mul.f32 	%f12, %f361, %f1338;
	mul.f32 	%f396, %f395, %f1339;
	mul.f32 	%f21, %f430, %f1340;
	mul.f32 	%f465, %f464, %f1341;
	mul.f32 	%f30, %f499, %f1342;
	mul.f32 	%f534, %f533, %f1343;
	mul.f32 	%f39, %f568, %f1344;
	mul.f32 	%f603, %f602, %f1345;
	mul.f32 	%f48, %f637, %f1346;
	mul.f32 	%f672, %f671, %f1347;
	mul.f32 	%f57, %f706, %f1348;
	mul.f32 	%f741, %f740, %f1349;
	mul.f32 	%f66, %f775, %f1350;
	mul.f32 	%f809, %f808, %f1351;
	mov.b32 	%r461, %f915;
	mov.b32 	%r460, %f89;
	mov.b32 	%r467, %f912;
	mov.b32 	%r466, %f88;
	mov.b32 	%r516, %f1021;
	mov.b32 	%r515, %f125;
	mov.b32 	%r522, %f1018;
	mov.b32 	%r521, %f124;
	selp.f32 	%f162, %f1072, %f1068, %p210;
	selp.f32 	%f1125, %f1124, %f1119, %p230;
	mov.b32 	%r604, %f1229;
	mov.b32 	%r603, %f199;
	mov.b32 	%r610, %f1226;
	mov.b32 	%r609, %f198;
	add.f32 	%f1252, %f1386, %f1386;
	mov.b32 	%r637, %f1252;
	and.b32  	%r638, %r637, -2147483648;
	or.b32  	%r639, %r638, 1056964608;
	mov.b32 	%f1253, %r639;
	add.f32 	%f1254, %f1252, %f1253;
	cvt.rzi.f32.f32 	%f1255, %f1254;
	abs.f32 	%f1256, %f1252;
	setp.gt.f32 	%p284, %f1256, 0f4B000000;
	selp.f32 	%f1257, %f1252, %f1255, %p284;
	cvt.rzi.f32.f32 	%f1258, %f1252;
	setp.lt.f32 	%p285, %f1256, 0f3F000000;
	selp.f32 	%f1259, %f1258, %f1257, %p285;
	cvt.rzi.s32.f32 	%r640, %f1259;
	fma.rn.f32 	%f1260, %f1259, 0fBF000000, %f1386;
	mul.f32 	%f1261, %f1260, %f1260;
	fma.rn.f32 	%f1262, %f1261, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1263, %f1261, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1264, %f1262, %f1261, 0fC0A55DF6;
	fma.rn.f32 	%f1265, %f1263, %f1261, 0f4081E0CF;
	fma.rn.f32 	%f1266, %f1261, %f1260, 0f00000000;
	fma.rn.f32 	%f1267, %f1265, %f1261, 0fC09DE9E6;
	fma.rn.f32 	%f1268, %f1264, %f1266, 0f00000000;
	fma.rn.f32 	%f1269, %f1267, %f1261, 0f3F800000;
	fma.rn.f32 	%f1270, %f1260, 0f40490FDB, %f1268;
	and.b32  	%r641, %r640, 1;
	setp.eq.b32 	%p286, %r641, 1;
	selp.f32 	%f1271, %f1269, %f1270, %p286;
	selp.f32 	%f1272, %f1270, %f1269, %p286;
	and.b32  	%r642, %r640, 2;
	setp.eq.s32 	%p287, %r642, 0;
	neg.f32 	%f1273, %f1271;
	selp.f32 	%f1274, %f1271, %f1273, %p287;
	add.s32 	%r643, %r640, 1;
	and.b32  	%r644, %r643, 2;
	setp.eq.s32 	%p288, %r644, 0;
	sub.f32 	%f1276, %f286, %f1272;
	selp.f32 	%f1277, %f1272, %f1276, %p288;
	cvt.rzi.f32.f32 	%f1278, %f1386;
	setp.eq.f32 	%p289, %f1278, %f1386;
	mul.f32 	%f1279, %f1386, 0f00000000;
	selp.f32 	%f234, %f1279, %f1274, %p289;
	abs.f32 	%f1280, %f1386;
	setp.gt.f32 	%p290, %f1280, 0f4B800000;
	add.f32 	%f1281, %f234, 0f3F800000;
	shl.b32 	%r645, %r105, 1;
	cvt.rn.f32.s32 	%f1282, %r645;
	div.approx.f32 	%f236, %f1282, %f289;
	abs.f32 	%f1390, %f236;
	setp.lt.f32 	%p291, %f1390, 0f40000000;
	@%p291 bra 	$L__BB0_178;
// %bb.167:
	setp.gtu.f32 	%p292, %f1390, 0f4B800000;
	@%p292 bra 	$L__BB0_174;
	bra.uni 	$L__BB0_168;
$L__BB0_174:
	mov.b32 	%r115, %f1390;
	and.b32  	%r646, %r115, 8388607;
	or.b32  	%r16373, %r646, 1065353216;
	mov.b32 	%f1389, %r16373;
	add.s32 	%r647, %r115, -1073741824;
	and.b32  	%r16374, %r647, -8388608;
	setp.eq.s32 	%p298, %r16374, 0;
	@%p298 bra 	$L__BB0_177;
// %bb.175:                             // %__nv_fmaf_rn.exit4.i.i.i1903.preheader
	mov.f32 	%f1293, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1292,%f1293;
	// end inline asm
$L__BB0_176:                            // %__nv_fmaf_rn.exit4.i.i.i1903
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r648, %r16374, 192937984;
	add.s32 	%r649, %r16373, %r648;
	mov.b32 	%f1294, %r649;
	mul.f32 	%f1295, %f1292, %f1294;
	sub.f32 	%f1296, %f1294, %f1295;
	fma.rn.f32 	%f1297, %f1296, %f1292, %f1295;
	sub.f32 	%f1298, %f1294, %f1297;
	fma.rz.f32 	%f1299, %f1298, %f1292, %f1297;
	cvt.rzi.f32.f32 	%f1300, %f1299;
	sub.f32 	%f1389, %f1294, %f1300;
	sub.s32 	%r16374, %r16374, %r648;
	mov.b32 	%r16373, %f1389;
	setp.ne.s32 	%p299, %r16374, 0;
	setp.ne.s32 	%p300, %r16373, 0;
	and.pred  	%p301, %p299, %p300;
	@%p301 bra 	$L__BB0_176;
$L__BB0_177:                            // %__internal_fmodf_slowpath_mod.exit.i.i1905
	setp.gt.u32 	%p302, %r115, 2139095039;
	selp.f32 	%f1301, 0f7FFFFFFF, 0f4B800000, %p302;
	mul.f32 	%f1302, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1301, %f1302;
	bra.uni 	$L__BB0_178;
$L__BB0_168:                            // %__nv_fast_fdividef.exit.i.i.i1882
	div.approx.f32 	%f1285, %f1390, %f257;
	cvt.rzi.f32.f32 	%f1388, %f1285;
	fma.rn.f32 	%f239, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r114, %f239;
	setp.lt.u32 	%p293, %r114, 1073741824;
	@%p293 bra 	$L__BB0_173;
// %bb.169:
	setp.lt.u32 	%p294, %r114, -2147483647;
	@%p294 bra 	$L__BB0_171;
// %bb.170:
	add.f32 	%f1290, %f1388, 0fBF800000;
	setp.lt.f32 	%p297, %f239, 0fC0000000;
	add.f32 	%f1291, %f1290, 0fBF800000;
	selp.f32 	%f1388, %f1291, %f1290, %p297;
	bra.uni 	$L__BB0_173;
$L__BB0_171:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p295, %f239, 0f40800000;
	@%p295 bra 	$L__BB0_173;
// %bb.172:                             // %__nv_fmaf_rn.exit.i.i.i1886
	add.f32 	%f1286, %f1388, 0f3F800000;
	fma.rn.f32 	%f1288, %f257, 0fC0400000, %f239;
	setp.ge.f32 	%p296, %f1288, 0f00000000;
	add.f32 	%f1289, %f1286, 0f3F800000;
	selp.f32 	%f1388, %f1289, %f1286, %p296;
$L__BB0_173:                            // %__internal_fmodf_fastpath_quot.exit.i.i1889
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
$L__BB0_178:                            // %__internal_fmodf_kernel.exit.i1908
	add.s64 	%rd48, %rd1, %rd47;
	mov.b32 	%r307, %f327;
	mov.b32 	%r306, %f3;
	mov.b32 	%r325, %f396;
	mov.b32 	%r324, %f12;
	mov.b32 	%r343, %f465;
	mov.b32 	%r342, %f21;
	mov.b32 	%r361, %f534;
	mov.b32 	%r360, %f30;
	mov.b32 	%r379, %f603;
	mov.b32 	%r378, %f39;
	mov.b32 	%r397, %f672;
	mov.b32 	%r396, %f48;
	mov.b32 	%r415, %f741;
	mov.b32 	%r414, %f57;
	mov.b32 	%r433, %f809;
	mov.b32 	%r432, %f66;
	xor.b32  	%r519, %r522, -2147483648;
	xor.b32  	%r518, %r521, -2147483648;
	mov.b32 	%r566, %f1125;
	mov.b32 	%r565, %f162;
	mov.b32 	%r569, %f1122;
	mov.b32 	%r568, %f161;
	xor.b32  	%r607, %r610, -2147483648;
	xor.b32  	%r606, %r609, -2147483648;
	selp.f32 	%f235, %f1281, %f1277, %p290;
	abs.f32 	%f1303, %f1390;
	setp.gtu.f32 	%p303, %f1303, 0f7F800000;
	@%p303 bra 	$L__BB0_180;
// %bb.179:
	mov.b32 	%r650, %f236;
	and.b32  	%r651, %r650, -2147483648;
	mov.b32 	%r652, %f1390;
	or.b32  	%r653, %r651, %r652;
	mov.b32 	%f1390, %r653;
$L__BB0_180:                            // %__nv_fmodf.exit1909
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	ld.global.u32 	%r184, [%rd48];
	ld.global.u32 	%r185, [%rd48+128];
	shr.u32 	%r189, %r1, 2;
	// begin inline asm
	cvt.rn.f16x2.f32 %r305, %r307, %r306;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r323, %r325, %r324;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r341, %r343, %r342;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r359, %r361, %r360;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r377, %r379, %r378;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r395, %r397, %r396;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r413, %r415, %r414;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r431, %r433, %r432;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r459, %r461, %r460;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r462, %r461, %r460;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r465, %r467, %r466;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r468, %r467, %r466;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r514, %r516, %r515;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r517, %r519, %r518;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r520, %r522, %r521;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r523, %r516, %r515;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r564, %r566, %r565;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r567, %r569, %r568;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r602, %r604, %r603;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r605, %r607, %r606;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r608, %r610, %r609;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r611, %r604, %r603;
	// end inline asm
	add.f32 	%f1304, %f1390, %f1390;
	mov.b32 	%r661, %f1304;
	and.b32  	%r662, %r661, -2147483648;
	or.b32  	%r663, %r662, 1056964608;
	mov.b32 	%f1305, %r663;
	add.f32 	%f1306, %f1304, %f1305;
	cvt.rzi.f32.f32 	%f1307, %f1306;
	abs.f32 	%f1308, %f1304;
	setp.gt.f32 	%p304, %f1308, 0f4B000000;
	selp.f32 	%f1309, %f1304, %f1307, %p304;
	cvt.rzi.f32.f32 	%f1310, %f1304;
	setp.lt.f32 	%p305, %f1308, 0f3F000000;
	selp.f32 	%f1311, %f1310, %f1309, %p305;
	cvt.rzi.s32.f32 	%r664, %f1311;
	fma.rn.f32 	%f1312, %f1311, 0fBF000000, %f1390;
	mul.f32 	%f1313, %f1312, %f1312;
	fma.rn.f32 	%f1314, %f1313, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1315, %f1313, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1316, %f1314, %f1313, 0fC0A55DF6;
	fma.rn.f32 	%f1317, %f1315, %f1313, 0f4081E0CF;
	fma.rn.f32 	%f1318, %f1313, %f1312, 0f00000000;
	fma.rn.f32 	%f1319, %f1317, %f1313, 0fC09DE9E6;
	fma.rn.f32 	%f1320, %f1316, %f1318, 0f00000000;
	fma.rn.f32 	%f1321, %f1319, %f1313, 0f3F800000;
	fma.rn.f32 	%f1322, %f1312, 0f40490FDB, %f1320;
	and.b32  	%r665, %r664, 1;
	setp.eq.b32 	%p306, %r665, 1;
	selp.f32 	%f1323, %f1321, %f1322, %p306;
	selp.f32 	%f1324, %f1322, %f1321, %p306;
	and.b32  	%r666, %r664, 2;
	setp.eq.s32 	%p307, %r666, 0;
	neg.f32 	%f1325, %f1323;
	selp.f32 	%f1326, %f1323, %f1325, %p307;
	add.s32 	%r667, %r664, 1;
	and.b32  	%r668, %r667, 2;
	setp.eq.s32 	%p308, %r668, 0;
	sub.f32 	%f1328, %f286, %f1324;
	selp.f32 	%f1329, %f1324, %f1328, %p308;
	cvt.rzi.f32.f32 	%f1330, %f1390;
	setp.eq.f32 	%p309, %f1330, %f1390;
	mul.f32 	%f1331, %f1390, 0f00000000;
	selp.f32 	%f1332, %f1331, %f1326, %p309;
	abs.f32 	%f1333, %f1390;
	setp.gt.f32 	%p310, %f1333, 0f4B800000;
	add.f32 	%f1334, %f1332, 0f3F800000;
	selp.f32 	%f1335, %f1334, %f1329, %p310;
	mov.b32 	%r656, %f1335;
	mov.b32 	%r655, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r654, %r656, %r655;
	// end inline asm
	mov.b32 	%r659, %f1332;
	mov.b32 	%r658, %f234;
	// begin inline asm
	cvt.rn.f16x2.f32 %r657, %r659, %r658;
	// end inline asm
	shl.b32 	%r669, %r5, 11;
	and.b32  	%r670, %r178, 28;
	and.b32  	%r671, %r176, 32;
	or.b32  	%r124, %r670, %r671;
	and.b32  	%r125, %r176, 64;
	shl.b32 	%r672, %r1, 3;
	and.b32  	%r673, %r672, 64;
	or.b32  	%r126, %r673, %r180;
	or.b32  	%r674, %r125, %r124;
	or.b32  	%r127, %r669, %r674;
	bfe.s32 	%r675, %r1, 3, 1;
	and.b32  	%r128, %r1, 8;
	shl.b32 	%r676, %r1, 4;
	or.b32  	%r677, %r128, %r676;
	shr.u32 	%r678, %r677, 2;
	and.b32  	%r679, %r678, 30;
	and.b32  	%r680, %r676, 48;
	or.b32  	%r129, %r680, %r181;
	and.b32  	%r681, %r4, 32;
	shr.u32 	%r682, %r3, 1;
	or.b32  	%r683, %r681, %r682;
	or.b32  	%r684, %r683, 8;
	or.b32  	%r685, %r683, 16;
	or.b32  	%r686, %r683, 24;
	or.b32  	%r687, %r183, %r179;
	or.b32  	%r688, %r687, %r182;
	or.b32  	%r689, %r688, %r181;
	shr.u32 	%r690, %r689, 1;
	mul.lo.s32 	%r691, %r690, 65;
	add.s32 	%r130, %r683, %r691;
	add.s32 	%r131, %r684, %r691;
	add.s32 	%r132, %r685, %r691;
	add.s32 	%r133, %r686, %r691;
	add.s32 	%r692, %r691, 2080;
	add.s32 	%r134, %r683, %r692;
	add.s32 	%r135, %r684, %r692;
	add.s32 	%r136, %r685, %r692;
	add.s32 	%r137, %r686, %r692;
	shl.b32 	%r693, %r3, 1;
	or.b32  	%r694, %r191, %r693;
	mul.lo.s32 	%r695, %r694, 65;
	add.s32 	%r696, %r679, %r695;
	mul.wide.u32 	%rd49, %r696, 4;
	mov.u64 	%rd50, shmem;
	add.s64 	%rd5, %rd50, %rd49;
	cvt.u64.u32 	%rd51, %r679;
	cvt.u64.u32 	%rd52, %r695;
	add.s64 	%rd53, %rd52, %rd51;
	shl.b64 	%rd54, %rd53, 2;
	add.s64 	%rd6, %rd50, %rd54;
	or.b32  	%r697, %r694, 32;
	mul.lo.s32 	%r698, %r697, 65;
	add.s32 	%r699, %r698, %r679;
	mul.wide.u32 	%rd55, %r699, 4;
	add.s64 	%rd7, %rd50, %rd55;
	cvt.u64.u32 	%rd56, %r698;
	add.s64 	%rd57, %rd56, %rd51;
	shl.b64 	%rd58, %rd57, 2;
	add.s64 	%rd8, %rd50, %rd58;
	shl.b32 	%r700, %r7, 18;
	add.s32 	%r701, %r700, -786432;
	shl.b32 	%r702, %r3, 2;
	or.b32  	%r703, %r192, %r702;
	or.b32  	%r704, %r703, %r177;
	shl.b32 	%r138, %r704, 7;
	cvt.s64.s32 	%rd9, %r701;
	or.b32  	%r139, %r138, 8192;
	bfe.u32 	%r705, %r676, 5, 1;
	shr.u32 	%r706, %r181, 3;
	setp.gt.u32 	%p311, %r1, 15;
	and.b32  	%r707, %r3, 1;
	neg.s32 	%r708, %r707;
	and.b32  	%r709, %r708, 2080;
	mul.lo.s32 	%r710, %r191, 65;
	shr.u32 	%r711, %r3, 3;
	mul.lo.s32 	%r712, %r711, 260;
	bfe.s32 	%r713, %r3, 2, 1;
	and.b32  	%r714, %r3, 4;
	setp.eq.s32 	%p312, %r714, 0;
	and.b32  	%r715, %r713, 520;
	bfe.s32 	%r716, %r3, 1, 1;
	and.b32  	%r717, %r3, 2;
	setp.eq.s32 	%p313, %r717, 0;
	and.b32  	%r718, %r716, 1040;
	or.b32  	%r719, %r709, %r679;
	add.s32 	%r720, %r719, %r710;
	add.s32 	%r721, %r720, %r712;
	add.s32 	%r722, %r721, %r715;
	add.s32 	%r723, %r722, %r718;
	mul.wide.u32 	%rd59, %r723, 4;
	add.s64 	%rd10, %rd50, %rd59;
	selp.b64 	%rd60, 0, 1040, %p313;
	selp.b64 	%rd61, 0, 520, %p312;
	cvt.u64.u32 	%rd62, %r712;
	cvt.u64.u32 	%rd63, %r710;
	cvt.u64.u32 	%rd64, %r719;
	add.s64 	%rd65, %rd64, %rd63;
	add.s64 	%rd66, %rd65, %rd62;
	add.s64 	%rd67, %rd66, %rd61;
	add.s64 	%rd68, %rd67, %rd60;
	shl.b64 	%rd69, %rd68, 2;
	add.s64 	%rd11, %rd50, %rd69;
	add.s32 	%r724, %r723, 162;
	mul.wide.u32 	%rd70, %r724, 4;
	add.s64 	%rd12, %rd50, %rd70;
	add.s32 	%r725, %r723, 131;
	mul.wide.u32 	%rd71, %r725, 4;
	add.s64 	%rd13, %rd50, %rd71;
	add.s32 	%r726, %r723, 163;
	mul.wide.u32 	%rd72, %r726, 4;
	add.s64 	%rd14, %rd50, %rd72;
	add.s32 	%r727, %r723, 4193;
	mul.wide.u32 	%rd73, %r727, 4;
	add.s64 	%rd15, %rd50, %rd73;
	add.s32 	%r728, %r723, 4162;
	mul.wide.u32 	%rd74, %r728, 4;
	add.s64 	%rd16, %rd50, %rd74;
	add.s32 	%r729, %r723, 4194;
	mul.wide.u32 	%rd75, %r729, 4;
	add.s64 	%rd17, %rd50, %rd75;
	add.s32 	%r730, %r723, 4323;
	mul.wide.u32 	%rd76, %r730, 4;
	add.s64 	%rd18, %rd50, %rd76;
	add.s32 	%r731, %r723, 4292;
	mul.wide.u32 	%rd77, %r731, 4;
	add.s64 	%rd19, %rd50, %rd77;
	add.s32 	%r732, %r723, 4324;
	mul.wide.u32 	%rd78, %r732, 4;
	add.s64 	%rd20, %rd50, %rd78;
	mul.lo.s32 	%r733, %r705, 65;
	mul.lo.s32 	%r734, %r706, 260;
	selp.b32 	%r735, 520, 0, %p311;
	and.b32  	%r736, %r675, 1040;
	setp.eq.s32 	%p314, %r188, 0;
	selp.b32 	%r140, 0, 130, %p314;
	add.s32 	%r737, %r683, %r734;
	add.s32 	%r738, %r737, %r733;
	add.s32 	%r739, %r738, %r735;
	add.s32 	%r141, %r739, %r736;
	add.s32 	%r740, %r684, %r734;
	add.s32 	%r741, %r740, %r733;
	add.s32 	%r742, %r741, %r735;
	add.s32 	%r142, %r742, %r736;
	add.s32 	%r743, %r685, %r734;
	add.s32 	%r744, %r743, %r733;
	add.s32 	%r745, %r744, %r735;
	add.s32 	%r143, %r745, %r736;
	add.s32 	%r746, %r686, %r734;
	add.s32 	%r747, %r746, %r733;
	add.s32 	%r748, %r747, %r735;
	add.s32 	%r144, %r748, %r736;
	add.s32 	%r145, %r683, 2080;
	add.s32 	%r146, %r683, 2088;
	add.s32 	%r147, %r683, 2096;
	add.s32 	%r148, %r683, 2104;
	add.s32 	%r749, %r699, 4193;
	mul.wide.u32 	%rd79, %r749, 4;
	add.s64 	%rd21, %rd50, %rd79;
	add.s32 	%r750, %r699, 4194;
	mul.wide.u32 	%rd80, %r750, 4;
	add.s64 	%rd22, %rd50, %rd80;
	mov.u32 	%r16375, 0;
	setp.eq.s32 	%p316, %r128, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16376, %r16375;
	mov.u32 	%r16377, %r16375;
	mov.u32 	%r16378, %r16375;
	mov.u32 	%r16379, %r16375;
	mov.u32 	%r16380, %r16375;
	mov.u32 	%r16381, %r16375;
	mov.u32 	%r16382, %r16375;
	mov.u32 	%r16383, %r16375;
	mov.u32 	%r16384, %r16375;
	mov.u32 	%r16385, %r16375;
	mov.u32 	%r16386, %r16375;
	mov.u32 	%r16387, %r16375;
	mov.u32 	%r16388, %r16375;
	mov.u32 	%r16389, %r16375;
	mov.u32 	%r16390, %r16375;
	mov.u32 	%r16391, %r16375;
	mov.u32 	%r16392, %r16375;
	mov.u32 	%r16393, %r16375;
	mov.u32 	%r16394, %r16375;
	mov.u32 	%r16395, %r16375;
	mov.u32 	%r16396, %r16375;
	mov.u32 	%r16397, %r16375;
	mov.u32 	%r16398, %r16375;
	mov.u32 	%r16399, %r16375;
	bra.uni 	$L__BB0_181;
$L__BB0_187:                            // %L70753
                                        //   in Loop: Header=BB0_181 Depth=1
	add.s32 	%r174, %r16399, 256;
	setp.ne.s32 	%p341, %r16399, 7936;
	mov.u32 	%r16399, %r174;
	@%p341 bra 	$L__BB0_181;
	bra.uni 	$L__BB0_188;
$L__BB0_181:                            // %L2417
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_183 Depth 2
	add.s32 	%r751, %r16399, %r5;
	setp.gt.s32 	%p315, %r6, %r751;
	@%p315 bra 	$L__BB0_182;
	bra.uni 	$L__BB0_188;
$L__BB0_182:                            // %pass886
                                        //   in Loop: Header=BB0_181 Depth=1
	or.b32  	%r817, %r16399, %r126;
	and.b32  	%r818, %r817, 8032;
	or.b32  	%r819, %r818, %r3;
	shl.b32 	%r820, %r819, 11;
	add.s32 	%r821, %r127, %r820;
	shr.s32 	%r822, %r821, 31;
	shr.u32 	%r823, %r822, 8;
	add.s32 	%r824, %r821, %r823;
	shr.s32 	%r825, %r824, 24;
	setp.lt.s32 	%p317, %r821, 0;
	and.b32  	%r826, %r824, -16777216;
	setp.ne.s32 	%p318, %r826, %r821;
	and.pred  	%p319, %p317, %p318;
	selp.u32 	%r827, 1, 0, %p319;
	sub.s32 	%r828, %r827, %r825;
	shl.b32 	%r829, %r828, 24;
	add.s32 	%r830, %r829, %r821;
	mul.wide.s32 	%rd81, %r830, 4;
	add.s64 	%rd82, %rd2, %rd81;
	ld.global.v4.u32 	{%r831, %r832, %r833, %r834}, [%rd82];
	or.b32  	%r835, %r820, 32768;
	add.s32 	%r836, %r127, %r835;
	shr.s32 	%r837, %r836, 31;
	shr.u32 	%r838, %r837, 8;
	add.s32 	%r839, %r836, %r838;
	shr.s32 	%r840, %r839, 24;
	setp.lt.s32 	%p320, %r836, 0;
	and.b32  	%r841, %r839, -16777216;
	setp.ne.s32 	%p321, %r841, %r836;
	and.pred  	%p322, %p320, %p321;
	selp.u32 	%r842, 1, 0, %p322;
	sub.s32 	%r843, %r842, %r840;
	shl.b32 	%r844, %r843, 24;
	add.s32 	%r845, %r844, %r836;
	mul.wide.s32 	%rd83, %r845, 4;
	add.s64 	%rd84, %rd2, %rd83;
	ld.global.v4.u32 	{%r846, %r847, %r848, %r849}, [%rd84];
	or.b32  	%r850, %r820, 262144;
	add.s32 	%r851, %r127, %r850;
	shr.s32 	%r852, %r851, 31;
	shr.u32 	%r853, %r852, 8;
	add.s32 	%r854, %r851, %r853;
	shr.s32 	%r855, %r854, 24;
	setp.lt.s32 	%p323, %r851, 0;
	and.b32  	%r856, %r854, -16777216;
	setp.ne.s32 	%p324, %r856, %r851;
	and.pred  	%p325, %p323, %p324;
	selp.u32 	%r857, 1, 0, %p325;
	sub.s32 	%r858, %r857, %r855;
	shl.b32 	%r859, %r858, 24;
	add.s32 	%r860, %r859, %r851;
	mul.wide.s32 	%rd85, %r860, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.v4.u32 	{%r861, %r862, %r863, %r864}, [%rd86];
	or.b32  	%r865, %r820, 294912;
	add.s32 	%r866, %r127, %r865;
	shr.s32 	%r867, %r866, 31;
	shr.u32 	%r868, %r867, 8;
	add.s32 	%r869, %r866, %r868;
	shr.s32 	%r870, %r869, 24;
	setp.lt.s32 	%p326, %r866, 0;
	and.b32  	%r871, %r869, -16777216;
	setp.ne.s32 	%p327, %r871, %r866;
	and.pred  	%p328, %p326, %p327;
	selp.u32 	%r872, 1, 0, %p328;
	sub.s32 	%r873, %r872, %r870;
	shl.b32 	%r874, %r873, 24;
	add.s32 	%r875, %r874, %r866;
	mul.wide.s32 	%rd87, %r875, 4;
	add.s64 	%rd88, %rd2, %rd87;
	ld.global.v4.u32 	{%r876, %r877, %r878, %r879}, [%rd88];
	selp.b32 	%r880, %r833, %r831, %p316;
	shfl.sync.bfly.b32	%r881, %r880, 8, 31, -1;
	selp.b32 	%r753, %r831, %r881, %p316;
	selp.b32 	%r754, %r881, %r833, %p316;
	selp.b32 	%r882, %r834, %r832, %p316;
	shfl.sync.bfly.b32	%r883, %r882, 8, 31, -1;
	selp.b32 	%r761, %r832, %r883, %p316;
	selp.b32 	%r762, %r883, %r834, %p316;
	selp.b32 	%r884, %r848, %r846, %p316;
	shfl.sync.bfly.b32	%r885, %r884, 8, 31, -1;
	selp.b32 	%r769, %r846, %r885, %p316;
	selp.b32 	%r770, %r885, %r848, %p316;
	selp.b32 	%r886, %r849, %r847, %p316;
	shfl.sync.bfly.b32	%r887, %r886, 8, 31, -1;
	selp.b32 	%r777, %r847, %r887, %p316;
	selp.b32 	%r778, %r887, %r849, %p316;
	selp.b32 	%r888, %r863, %r861, %p316;
	shfl.sync.bfly.b32	%r889, %r888, 8, 31, -1;
	selp.b32 	%r785, %r861, %r889, %p316;
	selp.b32 	%r786, %r889, %r863, %p316;
	selp.b32 	%r890, %r864, %r862, %p316;
	shfl.sync.bfly.b32	%r891, %r890, 8, 31, -1;
	selp.b32 	%r793, %r862, %r891, %p316;
	selp.b32 	%r794, %r891, %r864, %p316;
	selp.b32 	%r892, %r878, %r876, %p316;
	shfl.sync.bfly.b32	%r893, %r892, 8, 31, -1;
	selp.b32 	%r801, %r876, %r893, %p316;
	selp.b32 	%r802, %r893, %r878, %p316;
	selp.b32 	%r894, %r879, %r877, %p316;
	shfl.sync.bfly.b32	%r895, %r894, 8, 31, -1;
	selp.b32 	%r809, %r877, %r895, %p316;
	selp.b32 	%r810, %r895, %r879, %p316;
	mov.u32 	%r811, 21520;
	// begin inline asm
	prmt.b32 %r752, %r753, %r754, %r811;
	// end inline asm
	mov.u32 	%r815, 30258;
	// begin inline asm
	prmt.b32 %r756, %r753, %r754, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r760, %r761, %r762, %r811;
	// end inline asm
	// begin inline asm
	prmt.b32 %r764, %r761, %r762, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r768, %r769, %r770, %r811;
	// end inline asm
	// begin inline asm
	prmt.b32 %r772, %r769, %r770, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r776, %r777, %r778, %r811;
	// end inline asm
	// begin inline asm
	prmt.b32 %r780, %r777, %r778, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r784, %r785, %r786, %r811;
	// end inline asm
	// begin inline asm
	prmt.b32 %r788, %r785, %r786, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r792, %r793, %r794, %r811;
	// end inline asm
	// begin inline asm
	prmt.b32 %r796, %r793, %r794, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r800, %r801, %r802, %r811;
	// end inline asm
	// begin inline asm
	prmt.b32 %r804, %r801, %r802, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r808, %r809, %r810, %r811;
	// end inline asm
	// begin inline asm
	prmt.b32 %r812, %r809, %r810, %r815;
	// end inline asm
	st.shared.u32 	[%rd10], %r752;
	st.shared.u32 	[%rd11+128], %r756;
	st.shared.u32 	[%rd11+4], %r760;
	st.shared.u32 	[%rd11+132], %r764;
	st.shared.u32 	[%rd10+520], %r768;
	st.shared.u32 	[%rd12], %r772;
	st.shared.u32 	[%rd13], %r776;
	st.shared.u32 	[%rd14], %r780;
	st.shared.u32 	[%rd10+16644], %r784;
	st.shared.u32 	[%rd15], %r788;
	st.shared.u32 	[%rd16], %r792;
	st.shared.u32 	[%rd17], %r796;
	st.shared.u32 	[%rd10+17164], %r800;
	st.shared.u32 	[%rd18], %r804;
	st.shared.u32 	[%rd19], %r808;
	st.shared.u32 	[%rd20], %r812;
	bar.sync 	0;
	or.b32  	%r896, %r16399, %r129;
	or.b32  	%r897, %r189, %r896;
	or.b32  	%r196, %r897, 1;
	mov.u32 	%r3242, 0;
	mov.u32 	%r16400, %r3242;
$L__BB0_183:                            // %pass6435
                                        //   Parent Loop BB0_181 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.eq.s32 	%p329, %r16400, 0;
	selp.b32 	%r16162, 0, 4161, %p329;
	add.s32 	%r16163, %r141, %r16162;
	add.s32 	%r16164, %r16163, %r140;
	mul.wide.u32 	%rd89, %r16164, 4;
	add.s64 	%rd91, %rd50, %rd89;
	ld.shared.u32 	%r16165, [%rd91];
	add.s32 	%r16166, %r142, %r16162;
	add.s32 	%r16167, %r16166, %r140;
	mul.wide.u32 	%rd92, %r16167, 4;
	add.s64 	%rd93, %rd50, %rd92;
	ld.shared.u32 	%r16168, [%rd93];
	add.s32 	%r16169, %r143, %r16162;
	add.s32 	%r16170, %r16169, %r140;
	mul.wide.u32 	%rd94, %r16170, 4;
	add.s64 	%rd95, %rd50, %rd94;
	ld.shared.u32 	%r16171, [%rd95];
	add.s32 	%r16172, %r144, %r16162;
	add.s32 	%r16173, %r16172, %r140;
	mul.wide.u32 	%rd96, %r16173, 4;
	add.s64 	%rd97, %rd50, %rd96;
	ld.shared.u32 	%r16174, [%rd97];
	add.s32 	%r16175, %r196, %r16400;
	bfe.s32 	%r16176, %r16175, 5, 1;
	and.b32  	%r16177, %r16176, 65;
	bfe.s32 	%r16178, %r16175, 3, 1;
	and.b32  	%r16179, %r16178, 260;
	bfe.s32 	%r16180, %r16175, 2, 1;
	and.b32  	%r16181, %r16180, 520;
	bfe.s32 	%r16182, %r16175, 1, 1;
	and.b32  	%r16183, %r16182, 1040;
	bfe.s32 	%r16184, %r16175, 7, 1;
	and.b32  	%r16185, %r16184, 4161;
	bfe.s32 	%r16186, %r16175, 4, 1;
	and.b32  	%r16187, %r16186, 130;
	add.s32 	%r16188, %r145, %r16177;
	add.s32 	%r16189, %r16188, %r16179;
	add.s32 	%r16190, %r16189, %r16181;
	add.s32 	%r16191, %r16190, %r16183;
	add.s32 	%r16192, %r16191, %r16185;
	add.s32 	%r16193, %r16192, %r16187;
	mul.wide.u32 	%rd98, %r16193, 4;
	add.s64 	%rd99, %rd50, %rd98;
	ld.shared.u32 	%r16194, [%rd99];
	add.s32 	%r16195, %r146, %r16177;
	add.s32 	%r16196, %r16195, %r16179;
	add.s32 	%r16197, %r16196, %r16181;
	add.s32 	%r16198, %r16197, %r16183;
	add.s32 	%r16199, %r16198, %r16185;
	add.s32 	%r16200, %r16199, %r16187;
	mul.wide.u32 	%rd100, %r16200, 4;
	add.s64 	%rd101, %rd50, %rd100;
	ld.shared.u32 	%r16201, [%rd101];
	add.s32 	%r16202, %r147, %r16177;
	add.s32 	%r16203, %r16202, %r16179;
	add.s32 	%r16204, %r16203, %r16181;
	add.s32 	%r16205, %r16204, %r16183;
	add.s32 	%r16206, %r16205, %r16185;
	add.s32 	%r16207, %r16206, %r16187;
	mul.wide.u32 	%rd102, %r16207, 4;
	add.s64 	%rd103, %rd50, %rd102;
	ld.shared.u32 	%r16208, [%rd103];
	add.s32 	%r16209, %r148, %r16177;
	add.s32 	%r16210, %r16209, %r16179;
	add.s32 	%r16211, %r16210, %r16181;
	add.s32 	%r16212, %r16211, %r16183;
	add.s32 	%r16213, %r16212, %r16185;
	add.s32 	%r16214, %r16213, %r16187;
	mul.wide.u32 	%rd104, %r16214, 4;
	add.s64 	%rd105, %rd50, %rd104;
	ld.shared.u32 	%r16215, [%rd105];
	// begin inline asm
	mov.b32 %r903, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r914, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r902, %r16165, -2004318072;
	mov.u32 	%r901, 983055;
	// begin inline asm
	lop3.b32 %r900, %r901, %r902, %r903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r904, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r905, %r903, %r904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r908, %r900, %r905;
	// end inline asm
	mov.u32 	%r912, 15728880;
	// begin inline asm
	lop3.b32 %r911, %r912, %r902, %r914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r915, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r916, %r914, %r915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r919, %r911, %r916;
	// end inline asm
	shr.u32 	%r924, %r902, 8;
	// begin inline asm
	lop3.b32 %r922, %r901, %r924, %r903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r926, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r927, %r903, %r926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r930, %r922, %r927;
	// end inline asm
	// begin inline asm
	lop3.b32 %r933, %r912, %r924, %r914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r938, %r914, %r937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r941, %r933, %r938;
	// end inline asm
	// begin inline asm
	mov.b32 %r949, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r960, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r948, %r16168, -2004318072;
	// begin inline asm
	lop3.b32 %r946, %r901, %r948, %r949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r951, %r949, %r950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r954, %r946, %r951;
	// end inline asm
	// begin inline asm
	lop3.b32 %r957, %r912, %r948, %r960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r962, %r960, %r961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r965, %r957, %r962;
	// end inline asm
	shr.u32 	%r970, %r948, 8;
	// begin inline asm
	lop3.b32 %r968, %r901, %r970, %r949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r973, %r949, %r972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r976, %r968, %r973;
	// end inline asm
	// begin inline asm
	lop3.b32 %r979, %r912, %r970, %r960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r984, %r960, %r983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r987, %r979, %r984;
	// end inline asm
	// begin inline asm
	mov.b32 %r995, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1006, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r994, %r16171, -2004318072;
	// begin inline asm
	lop3.b32 %r992, %r901, %r994, %r995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r997, %r995, %r996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1000, %r992, %r997;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1003, %r912, %r994, %r1006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1008, %r1006, %r1007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1011, %r1003, %r1008;
	// end inline asm
	shr.u32 	%r1016, %r994, 8;
	// begin inline asm
	lop3.b32 %r1014, %r901, %r1016, %r995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1019, %r995, %r1018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1022, %r1014, %r1019;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1025, %r912, %r1016, %r1006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1030, %r1006, %r1029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1033, %r1025, %r1030;
	// end inline asm
	// begin inline asm
	mov.b32 %r1041, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1052, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1040, %r16174, -2004318072;
	// begin inline asm
	lop3.b32 %r1038, %r901, %r1040, %r1041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1043, %r1041, %r1042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1046, %r1038, %r1043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1049, %r912, %r1040, %r1052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1054, %r1052, %r1053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1057, %r1049, %r1054;
	// end inline asm
	shr.u32 	%r1062, %r1040, 8;
	// begin inline asm
	lop3.b32 %r1060, %r901, %r1062, %r1041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1065, %r1041, %r1064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1068, %r1060, %r1065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1071, %r912, %r1062, %r1052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1075, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1076, %r1052, %r1075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1079, %r1071, %r1076;
	// end inline asm
	// begin inline asm
	mov.b32 %r1087, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1098, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1086, %r16194, -2004318072;
	// begin inline asm
	lop3.b32 %r1084, %r901, %r1086, %r1087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1088, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1089, %r1087, %r1088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1092, %r1084, %r1089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1095, %r912, %r1086, %r1098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1100, %r1098, %r1099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1103, %r1095, %r1100;
	// end inline asm
	shr.u32 	%r1108, %r1086, 8;
	// begin inline asm
	lop3.b32 %r1106, %r901, %r1108, %r1087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1110, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1111, %r1087, %r1110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1114, %r1106, %r1111;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1117, %r912, %r1108, %r1098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1122, %r1098, %r1121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1125, %r1117, %r1122;
	// end inline asm
	// begin inline asm
	mov.b32 %r1133, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1144, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1132, %r16201, -2004318072;
	// begin inline asm
	lop3.b32 %r1130, %r901, %r1132, %r1133, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1135, %r1133, %r1134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1138, %r1130, %r1135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1141, %r912, %r1132, %r1144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1145, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1146, %r1144, %r1145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1149, %r1141, %r1146;
	// end inline asm
	shr.u32 	%r1154, %r1132, 8;
	// begin inline asm
	lop3.b32 %r1152, %r901, %r1154, %r1133, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1156, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1157, %r1133, %r1156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1160, %r1152, %r1157;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1163, %r912, %r1154, %r1144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1168, %r1144, %r1167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1171, %r1163, %r1168;
	// end inline asm
	// begin inline asm
	mov.b32 %r1179, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1190, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1178, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r1176, %r901, %r1178, %r1179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1180, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1181, %r1179, %r1180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1184, %r1176, %r1181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1187, %r912, %r1178, %r1190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1191, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1192, %r1190, %r1191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1195, %r1187, %r1192;
	// end inline asm
	shr.u32 	%r1200, %r1178, 8;
	// begin inline asm
	lop3.b32 %r1198, %r901, %r1200, %r1179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1202, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1203, %r1179, %r1202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1206, %r1198, %r1203;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1209, %r912, %r1200, %r1190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1214, %r1190, %r1213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1217, %r1209, %r1214;
	// end inline asm
	// begin inline asm
	mov.b32 %r1225, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1236, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1224, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r1222, %r901, %r1224, %r1225, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1226, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1227, %r1225, %r1226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1230, %r1222, %r1227;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1233, %r912, %r1224, %r1236, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1237, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1238, %r1236, %r1237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1241, %r1233, %r1238;
	// end inline asm
	shr.u32 	%r1246, %r1224, 8;
	// begin inline asm
	lop3.b32 %r1244, %r901, %r1246, %r1225, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1248, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1249, %r1225, %r1248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1252, %r1244, %r1249;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1255, %r912, %r1246, %r1236, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1259, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1260, %r1236, %r1259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1263, %r1255, %r1260;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1266, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1268, %r1266, %r908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1271, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1273, %r1271, %r919;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1276, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1278, %r1276, %r930;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1281, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1283, %r1281, %r941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1286, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1288, %r1286, %r954;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1291, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1293, %r1291, %r965;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1296, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1298, %r1296, %r976;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1301, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1303, %r1301, %r987;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1306, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1308, %r1306, %r1000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1311, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1313, %r1311, %r1011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1316, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1318, %r1316, %r1022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1321, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1323, %r1321, %r1033;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1326, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1328, %r1326, %r1046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1331, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1333, %r1331, %r1057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1336, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1338, %r1336, %r1068;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1341, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1343, %r1341, %r1079;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1346, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1348, %r1346, %r1092;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1351, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1353, %r1351, %r1103;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1356, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1358, %r1356, %r1114;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1361, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1363, %r1361, %r1125;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1366, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1368, %r1366, %r1138;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1371, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1373, %r1371, %r1149;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1376, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1378, %r1376, %r1160;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1381, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1383, %r1381, %r1171;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1386, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1388, %r1386, %r1184;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1391, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1393, %r1391, %r1195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1396, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1398, %r1396, %r1206;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1401, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1403, %r1401, %r1217;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1406, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1408, %r1406, %r1230;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1411, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1413, %r1411, %r1241;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1416, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1418, %r1416, %r1252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1421, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1423, %r1421, %r1263;
	// end inline asm
	// begin inline asm
	mov.b32 %r1431, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1442, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1430, %r16375, -2004318072;
	// begin inline asm
	lop3.b32 %r1428, %r901, %r1430, %r1431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1432, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1433, %r1431, %r1432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1436, %r1428, %r1433;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1439, %r912, %r1430, %r1442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1443, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1444, %r1442, %r1443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1447, %r1439, %r1444;
	// end inline asm
	shr.u32 	%r1452, %r1430, 8;
	// begin inline asm
	lop3.b32 %r1450, %r901, %r1452, %r1431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1454, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1455, %r1431, %r1454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1458, %r1450, %r1455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1461, %r912, %r1452, %r1442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1466, %r1442, %r1465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1469, %r1461, %r1466;
	// end inline asm
	// begin inline asm
	mov.b32 %r1477, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1488, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1476, %r16376, -2004318072;
	// begin inline asm
	lop3.b32 %r1474, %r901, %r1476, %r1477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1478, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1479, %r1477, %r1478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1482, %r1474, %r1479;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1485, %r912, %r1476, %r1488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1490, %r1488, %r1489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1493, %r1485, %r1490;
	// end inline asm
	shr.u32 	%r1498, %r1476, 8;
	// begin inline asm
	lop3.b32 %r1496, %r901, %r1498, %r1477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1501, %r1477, %r1500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1504, %r1496, %r1501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1507, %r912, %r1498, %r1488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1512, %r1488, %r1511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1515, %r1507, %r1512;
	// end inline asm
	// begin inline asm
	mov.b32 %r1523, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1534, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1522, %r16377, -2004318072;
	// begin inline asm
	lop3.b32 %r1520, %r901, %r1522, %r1523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1524, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1525, %r1523, %r1524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1528, %r1520, %r1525;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1531, %r912, %r1522, %r1534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1536, %r1534, %r1535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1539, %r1531, %r1536;
	// end inline asm
	shr.u32 	%r1544, %r1522, 8;
	// begin inline asm
	lop3.b32 %r1542, %r901, %r1544, %r1523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1547, %r1523, %r1546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1550, %r1542, %r1547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1553, %r912, %r1544, %r1534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1558, %r1534, %r1557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1561, %r1553, %r1558;
	// end inline asm
	// begin inline asm
	mov.b32 %r1569, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1580, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1568, %r16378, -2004318072;
	// begin inline asm
	lop3.b32 %r1566, %r901, %r1568, %r1569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1570, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1571, %r1569, %r1570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1574, %r1566, %r1571;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1577, %r912, %r1568, %r1580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1581, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1582, %r1580, %r1581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1585, %r1577, %r1582;
	// end inline asm
	shr.u32 	%r1590, %r1568, 8;
	// begin inline asm
	lop3.b32 %r1588, %r901, %r1590, %r1569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1593, %r1569, %r1592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1596, %r1588, %r1593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1599, %r912, %r1590, %r1580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1604, %r1580, %r1603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1607, %r1599, %r1604;
	// end inline asm
	// begin inline asm
	mov.b32 %r1615, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1626, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1614, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r1612, %r901, %r1614, %r1615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1616, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1617, %r1615, %r1616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1620, %r1612, %r1617;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1623, %r912, %r1614, %r1626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1627, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1628, %r1626, %r1627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1631, %r1623, %r1628;
	// end inline asm
	shr.u32 	%r1636, %r1614, 8;
	// begin inline asm
	lop3.b32 %r1634, %r901, %r1636, %r1615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1638, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1639, %r1615, %r1638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1642, %r1634, %r1639;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1645, %r912, %r1636, %r1626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1649, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1650, %r1626, %r1649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1653, %r1645, %r1650;
	// end inline asm
	// begin inline asm
	mov.b32 %r1661, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1672, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1660, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r1658, %r901, %r1660, %r1661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1662, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1663, %r1661, %r1662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1666, %r1658, %r1663;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1669, %r912, %r1660, %r1672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1673, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1674, %r1672, %r1673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1677, %r1669, %r1674;
	// end inline asm
	shr.u32 	%r1682, %r1660, 8;
	// begin inline asm
	lop3.b32 %r1680, %r901, %r1682, %r1661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1684, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1685, %r1661, %r1684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1688, %r1680, %r1685;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1691, %r912, %r1682, %r1672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1695, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1696, %r1672, %r1695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1699, %r1691, %r1696;
	// end inline asm
	// begin inline asm
	mov.b32 %r1707, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1718, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1706, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r1704, %r901, %r1706, %r1707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1708, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1709, %r1707, %r1708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1712, %r1704, %r1709;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1715, %r912, %r1706, %r1718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1719, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1720, %r1718, %r1719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1723, %r1715, %r1720;
	// end inline asm
	shr.u32 	%r1728, %r1706, 8;
	// begin inline asm
	lop3.b32 %r1726, %r901, %r1728, %r1707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1730, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1731, %r1707, %r1730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1734, %r1726, %r1731;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1737, %r912, %r1728, %r1718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1741, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1742, %r1718, %r1741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1745, %r1737, %r1742;
	// end inline asm
	// begin inline asm
	mov.b32 %r1753, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1764, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1752, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r1750, %r901, %r1752, %r1753, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1754, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1755, %r1753, %r1754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1758, %r1750, %r1755;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1761, %r912, %r1752, %r1764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1765, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1766, %r1764, %r1765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1769, %r1761, %r1766;
	// end inline asm
	shr.u32 	%r1774, %r1752, 8;
	// begin inline asm
	lop3.b32 %r1772, %r901, %r1774, %r1753, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1776, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1777, %r1753, %r1776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1780, %r1772, %r1777;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1783, %r912, %r1774, %r1764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1787, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1788, %r1764, %r1787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1791, %r1783, %r1788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1794, %r305, %r1436, %r1268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1798, %r305, %r1447, %r1273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1802, %r305, %r1458, %r1278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1806, %r305, %r1469, %r1283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1810, %r305, %r1482, %r1288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1814, %r305, %r1493, %r1293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1818, %r305, %r1504, %r1298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1822, %r305, %r1515, %r1303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1826, %r305, %r1528, %r1308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1830, %r305, %r1539, %r1313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1834, %r305, %r1550, %r1318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1838, %r305, %r1561, %r1323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1842, %r305, %r1574, %r1328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1846, %r305, %r1585, %r1333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1850, %r305, %r1596, %r1338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1854, %r305, %r1607, %r1343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1858, %r323, %r1620, %r1348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1862, %r323, %r1631, %r1353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1866, %r323, %r1642, %r1358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1870, %r323, %r1653, %r1363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1874, %r323, %r1666, %r1368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1878, %r323, %r1677, %r1373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1882, %r323, %r1688, %r1378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1886, %r323, %r1699, %r1383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1890, %r323, %r1712, %r1388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1894, %r323, %r1723, %r1393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1898, %r323, %r1734, %r1398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1902, %r323, %r1745, %r1403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1906, %r323, %r1758, %r1408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1910, %r323, %r1769, %r1413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1914, %r323, %r1780, %r1418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1918, %r323, %r1791, %r1423;
	// end inline asm
	// begin inline asm
	mov.b32 %r1927, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1938, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1926, %r16379, -2004318072;
	// begin inline asm
	lop3.b32 %r1924, %r901, %r1926, %r1927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1929, %r1927, %r1928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1932, %r1924, %r1929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1935, %r912, %r1926, %r1938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1940, %r1938, %r1939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1943, %r1935, %r1940;
	// end inline asm
	shr.u32 	%r1948, %r1926, 8;
	// begin inline asm
	lop3.b32 %r1946, %r901, %r1948, %r1927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1951, %r1927, %r1950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1954, %r1946, %r1951;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1957, %r912, %r1948, %r1938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1962, %r1938, %r1961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1965, %r1957, %r1962;
	// end inline asm
	// begin inline asm
	mov.b32 %r1973, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1984, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1972, %r16380, -2004318072;
	// begin inline asm
	lop3.b32 %r1970, %r901, %r1972, %r1973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1975, %r1973, %r1974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1978, %r1970, %r1975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1981, %r912, %r1972, %r1984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1986, %r1984, %r1985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1989, %r1981, %r1986;
	// end inline asm
	shr.u32 	%r1994, %r1972, 8;
	// begin inline asm
	lop3.b32 %r1992, %r901, %r1994, %r1973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1997, %r1973, %r1996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2000, %r1992, %r1997;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2003, %r912, %r1994, %r1984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2008, %r1984, %r2007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2011, %r2003, %r2008;
	// end inline asm
	// begin inline asm
	mov.b32 %r2019, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2030, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2018, %r16381, -2004318072;
	// begin inline asm
	lop3.b32 %r2016, %r901, %r2018, %r2019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2021, %r2019, %r2020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2024, %r2016, %r2021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2027, %r912, %r2018, %r2030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2032, %r2030, %r2031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2035, %r2027, %r2032;
	// end inline asm
	shr.u32 	%r2040, %r2018, 8;
	// begin inline asm
	lop3.b32 %r2038, %r901, %r2040, %r2019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2043, %r2019, %r2042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2046, %r2038, %r2043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2049, %r912, %r2040, %r2030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2054, %r2030, %r2053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2057, %r2049, %r2054;
	// end inline asm
	// begin inline asm
	mov.b32 %r2065, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2076, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2064, %r16382, -2004318072;
	// begin inline asm
	lop3.b32 %r2062, %r901, %r2064, %r2065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2067, %r2065, %r2066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2070, %r2062, %r2067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2073, %r912, %r2064, %r2076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2078, %r2076, %r2077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2081, %r2073, %r2078;
	// end inline asm
	shr.u32 	%r2086, %r2064, 8;
	// begin inline asm
	lop3.b32 %r2084, %r901, %r2086, %r2065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2088, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2089, %r2065, %r2088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2092, %r2084, %r2089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2095, %r912, %r2086, %r2076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2100, %r2076, %r2099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2103, %r2095, %r2100;
	// end inline asm
	// begin inline asm
	mov.b32 %r2111, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2122, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2110, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r2108, %r901, %r2110, %r2111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2113, %r2111, %r2112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2116, %r2108, %r2113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2119, %r912, %r2110, %r2122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2124, %r2122, %r2123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2127, %r2119, %r2124;
	// end inline asm
	shr.u32 	%r2132, %r2110, 8;
	// begin inline asm
	lop3.b32 %r2130, %r901, %r2132, %r2111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2135, %r2111, %r2134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2138, %r2130, %r2135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2141, %r912, %r2132, %r2122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2145, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2146, %r2122, %r2145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2149, %r2141, %r2146;
	// end inline asm
	// begin inline asm
	mov.b32 %r2157, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2168, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2156, %r16392, -2004318072;
	// begin inline asm
	lop3.b32 %r2154, %r901, %r2156, %r2157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2159, %r2157, %r2158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2162, %r2154, %r2159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2165, %r912, %r2156, %r2168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2170, %r2168, %r2169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2173, %r2165, %r2170;
	// end inline asm
	shr.u32 	%r2178, %r2156, 8;
	// begin inline asm
	lop3.b32 %r2176, %r901, %r2178, %r2157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2180, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2181, %r2157, %r2180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2184, %r2176, %r2181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2187, %r912, %r2178, %r2168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2191, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2192, %r2168, %r2191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2195, %r2187, %r2192;
	// end inline asm
	// begin inline asm
	mov.b32 %r2203, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2214, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2202, %r16393, -2004318072;
	// begin inline asm
	lop3.b32 %r2200, %r901, %r2202, %r2203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2204, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2205, %r2203, %r2204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2208, %r2200, %r2205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2211, %r912, %r2202, %r2214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2215, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2216, %r2214, %r2215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2219, %r2211, %r2216;
	// end inline asm
	shr.u32 	%r2224, %r2202, 8;
	// begin inline asm
	lop3.b32 %r2222, %r901, %r2224, %r2203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2226, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2227, %r2203, %r2226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2230, %r2222, %r2227;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2233, %r912, %r2224, %r2214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2237, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2238, %r2214, %r2237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2241, %r2233, %r2238;
	// end inline asm
	// begin inline asm
	mov.b32 %r2249, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2260, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2248, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r2246, %r901, %r2248, %r2249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2251, %r2249, %r2250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2254, %r2246, %r2251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2257, %r912, %r2248, %r2260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2261, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2262, %r2260, %r2261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2265, %r2257, %r2262;
	// end inline asm
	shr.u32 	%r2270, %r2248, 8;
	// begin inline asm
	lop3.b32 %r2268, %r901, %r2270, %r2249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2272, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2273, %r2249, %r2272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2276, %r2268, %r2273;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2279, %r912, %r2270, %r2260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2283, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2284, %r2260, %r2283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2287, %r2279, %r2284;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2290, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2292, %r2290, %r1932, %r1794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2296, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2298, %r2296, %r1943, %r1798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2302, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2304, %r2302, %r1954, %r1802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2308, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2310, %r2308, %r1965, %r1806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2314, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2316, %r2314, %r1978, %r1810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2320, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2322, %r2320, %r1989, %r1814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2326, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2328, %r2326, %r2000, %r1818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2332, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2334, %r2332, %r2011, %r1822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2338, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2340, %r2338, %r2024, %r1826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2344, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2346, %r2344, %r2035, %r1830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2350, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2352, %r2350, %r2046, %r1834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2356, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2358, %r2356, %r2057, %r1838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2362, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2364, %r2362, %r2070, %r1842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2368, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2370, %r2368, %r2081, %r1846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2374, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2376, %r2374, %r2092, %r1850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2380, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2382, %r2380, %r2103, %r1854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2386, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2388, %r2386, %r2116, %r1858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2392, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2394, %r2392, %r2127, %r1862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2398, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2400, %r2398, %r2138, %r1866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2404, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2406, %r2404, %r2149, %r1870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2410, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2412, %r2410, %r2162, %r1874;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2416, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2418, %r2416, %r2173, %r1878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2422, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2424, %r2422, %r2184, %r1882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2428, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2430, %r2428, %r2195, %r1886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2434, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2436, %r2434, %r2208, %r1890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2440, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2442, %r2440, %r2219, %r1894;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2446, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2448, %r2446, %r2230, %r1898;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2452, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2454, %r2452, %r2241, %r1902;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2458, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2460, %r2458, %r2254, %r1906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2464, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2466, %r2464, %r2265, %r1910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2470, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2472, %r2470, %r2276, %r1914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2476, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2478, %r2476, %r2287, %r1918;
	// end inline asm
	// begin inline asm
	mov.b32 %r2487, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2498, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2486, %r16383, -2004318072;
	// begin inline asm
	lop3.b32 %r2484, %r901, %r2486, %r2487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2488, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2489, %r2487, %r2488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2492, %r2484, %r2489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2495, %r912, %r2486, %r2498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2500, %r2498, %r2499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2503, %r2495, %r2500;
	// end inline asm
	shr.u32 	%r2508, %r2486, 8;
	// begin inline asm
	lop3.b32 %r2506, %r901, %r2508, %r2487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2511, %r2487, %r2510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2514, %r2506, %r2511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2517, %r912, %r2508, %r2498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2522, %r2498, %r2521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2525, %r2517, %r2522;
	// end inline asm
	// begin inline asm
	mov.b32 %r2533, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2544, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2532, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r2530, %r901, %r2532, %r2533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2534, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2535, %r2533, %r2534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2538, %r2530, %r2535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2541, %r912, %r2532, %r2544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2546, %r2544, %r2545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2549, %r2541, %r2546;
	// end inline asm
	shr.u32 	%r2554, %r2532, 8;
	// begin inline asm
	lop3.b32 %r2552, %r901, %r2554, %r2533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2557, %r2533, %r2556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2560, %r2552, %r2557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2563, %r912, %r2554, %r2544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2568, %r2544, %r2567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2571, %r2563, %r2568;
	// end inline asm
	// begin inline asm
	mov.b32 %r2579, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2590, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2578, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r2576, %r901, %r2578, %r2579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2580, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2581, %r2579, %r2580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2584, %r2576, %r2581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2587, %r912, %r2578, %r2590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2592, %r2590, %r2591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2595, %r2587, %r2592;
	// end inline asm
	shr.u32 	%r2600, %r2578, 8;
	// begin inline asm
	lop3.b32 %r2598, %r901, %r2600, %r2579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2603, %r2579, %r2602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2606, %r2598, %r2603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2609, %r912, %r2600, %r2590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2614, %r2590, %r2613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2617, %r2609, %r2614;
	// end inline asm
	// begin inline asm
	mov.b32 %r2625, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2636, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2624, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r2622, %r901, %r2624, %r2625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2626, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2627, %r2625, %r2626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2630, %r2622, %r2627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2633, %r912, %r2624, %r2636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2638, %r2636, %r2637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2641, %r2633, %r2638;
	// end inline asm
	shr.u32 	%r2646, %r2624, 8;
	// begin inline asm
	lop3.b32 %r2644, %r901, %r2646, %r2625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2649, %r2625, %r2648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2652, %r2644, %r2649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2655, %r912, %r2646, %r2636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2659, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2660, %r2636, %r2659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2663, %r2655, %r2660;
	// end inline asm
	// begin inline asm
	mov.b32 %r2671, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2682, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2670, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r2668, %r901, %r2670, %r2671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2672, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2673, %r2671, %r2672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2676, %r2668, %r2673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2679, %r912, %r2670, %r2682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2683, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2684, %r2682, %r2683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2687, %r2679, %r2684;
	// end inline asm
	shr.u32 	%r2692, %r2670, 8;
	// begin inline asm
	lop3.b32 %r2690, %r901, %r2692, %r2671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2694, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2695, %r2671, %r2694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2698, %r2690, %r2695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2701, %r912, %r2692, %r2682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2705, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2706, %r2682, %r2705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2709, %r2701, %r2706;
	// end inline asm
	// begin inline asm
	mov.b32 %r2717, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2728, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2716, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r2714, %r901, %r2716, %r2717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2718, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2719, %r2717, %r2718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2722, %r2714, %r2719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2725, %r912, %r2716, %r2728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2729, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2730, %r2728, %r2729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2733, %r2725, %r2730;
	// end inline asm
	shr.u32 	%r2738, %r2716, 8;
	// begin inline asm
	lop3.b32 %r2736, %r901, %r2738, %r2717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2740, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2741, %r2717, %r2740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2744, %r2736, %r2741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2747, %r912, %r2738, %r2728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2751, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2752, %r2728, %r2751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2755, %r2747, %r2752;
	// end inline asm
	// begin inline asm
	mov.b32 %r2763, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2774, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2762, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r2760, %r901, %r2762, %r2763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2764, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2765, %r2763, %r2764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2768, %r2760, %r2765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2771, %r912, %r2762, %r2774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2775, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2776, %r2774, %r2775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2779, %r2771, %r2776;
	// end inline asm
	shr.u32 	%r2784, %r2762, 8;
	// begin inline asm
	lop3.b32 %r2782, %r901, %r2784, %r2763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2786, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2787, %r2763, %r2786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2790, %r2782, %r2787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2793, %r912, %r2784, %r2774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2797, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2798, %r2774, %r2797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2801, %r2793, %r2798;
	// end inline asm
	// begin inline asm
	mov.b32 %r2809, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2820, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2808, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r2806, %r901, %r2808, %r2809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2810, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2811, %r2809, %r2810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2814, %r2806, %r2811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2817, %r912, %r2808, %r2820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2821, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2822, %r2820, %r2821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2825, %r2817, %r2822;
	// end inline asm
	shr.u32 	%r2830, %r2808, 8;
	// begin inline asm
	lop3.b32 %r2828, %r901, %r2830, %r2809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2832, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2833, %r2809, %r2832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2836, %r2828, %r2833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2839, %r912, %r2830, %r2820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2843, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2844, %r2820, %r2843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2847, %r2839, %r2844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2985, %r377, %r2492, %r2292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2982, %r377, %r2503, %r2298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2994, %r377, %r2514, %r2304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2991, %r377, %r2525, %r2310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3003, %r377, %r2538, %r2316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3000, %r377, %r2549, %r2322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3012, %r377, %r2560, %r2328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3009, %r377, %r2571, %r2334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3021, %r377, %r2584, %r2340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3018, %r377, %r2595, %r2346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3030, %r377, %r2606, %r2352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3027, %r377, %r2617, %r2358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3039, %r377, %r2630, %r2364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3036, %r377, %r2641, %r2370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3048, %r377, %r2652, %r2376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3045, %r377, %r2663, %r2382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3057, %r395, %r2676, %r2388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3054, %r395, %r2687, %r2394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3066, %r395, %r2698, %r2400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3063, %r395, %r2709, %r2406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3075, %r395, %r2722, %r2412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3072, %r395, %r2733, %r2418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3084, %r395, %r2744, %r2424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3081, %r395, %r2755, %r2430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3093, %r395, %r2768, %r2436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3090, %r395, %r2779, %r2442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3102, %r395, %r2790, %r2448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3099, %r395, %r2801, %r2454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3111, %r395, %r2814, %r2460;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3108, %r395, %r2825, %r2466;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3120, %r395, %r2836, %r2472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3117, %r395, %r2847, %r2478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2978, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2980, %r2978, %r2982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2983, %r459, %r2985, %r2980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2987, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2989, %r2987, %r2991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2992, %r459, %r2994, %r2989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2996, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2998, %r2996, %r3000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3001, %r459, %r3003, %r2998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3005, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3007, %r3005, %r3009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3010, %r459, %r3012, %r3007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3014, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3016, %r3014, %r3018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3019, %r459, %r3021, %r3016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3023, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3025, %r3023, %r3027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3028, %r459, %r3030, %r3025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3032, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3034, %r3032, %r3036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3037, %r459, %r3039, %r3034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3041, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3043, %r3041, %r3045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3046, %r459, %r3048, %r3043;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3050, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3052, %r3050, %r3054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3055, %r462, %r3057, %r3052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3059, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3061, %r3059, %r3063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3064, %r462, %r3066, %r3061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3068, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3070, %r3068, %r3072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3073, %r462, %r3075, %r3070;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3077, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3079, %r3077, %r3081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3082, %r462, %r3084, %r3079;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3086, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3088, %r3086, %r3090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3091, %r462, %r3093, %r3088;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3095, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3097, %r3095, %r3099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3100, %r462, %r3102, %r3097;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3104, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3106, %r3104, %r3108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3109, %r462, %r3111, %r3106;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3113, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3115, %r3113, %r3117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3118, %r462, %r3120, %r3115;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3122, %r465, %r2985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3125, %r459, %r2982, %r3122;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3129, %r465, %r2994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3132, %r459, %r2991, %r3129;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3136, %r465, %r3003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3139, %r459, %r3000, %r3136;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3143, %r465, %r3012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3146, %r459, %r3009, %r3143;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3150, %r465, %r3021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3153, %r459, %r3018, %r3150;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3157, %r465, %r3030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3160, %r459, %r3027, %r3157;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3164, %r465, %r3039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3167, %r459, %r3036, %r3164;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3171, %r465, %r3048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3174, %r459, %r3045, %r3171;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3178, %r468, %r3057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3181, %r462, %r3054, %r3178;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3185, %r468, %r3066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3188, %r462, %r3063, %r3185;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3192, %r468, %r3075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3195, %r462, %r3072, %r3192;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3199, %r468, %r3084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3202, %r462, %r3081, %r3199;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3206, %r468, %r3093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3209, %r462, %r3090, %r3206;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3213, %r468, %r3102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3216, %r462, %r3099, %r3213;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3220, %r468, %r3111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3223, %r462, %r3108, %r3220;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3227, %r468, %r3120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3230, %r462, %r3117, %r3227;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3401, %r3398}, {%r514, %r520, %r517, %r523}, {%r2983, %r3125}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3410, %r3407}, {%r514, %r520, %r517, %r523}, {%r2992, %r3132}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3419, %r3416}, {%r514, %r520, %r517, %r523}, {%r3001, %r3139}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3428, %r3425}, {%r514, %r520, %r517, %r523}, {%r3010, %r3146}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3437, %r3434}, {%r514, %r520, %r517, %r523}, {%r3019, %r3153}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3446, %r3443}, {%r514, %r520, %r517, %r523}, {%r3028, %r3160}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3455, %r3452}, {%r514, %r520, %r517, %r523}, {%r3037, %r3167}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3464, %r3461}, {%r514, %r520, %r517, %r523}, {%r3046, %r3174}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3473, %r3470}, {%r514, %r520, %r517, %r523}, {%r3055, %r3181}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3482, %r3479}, {%r514, %r520, %r517, %r523}, {%r3064, %r3188}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3491, %r3488}, {%r514, %r520, %r517, %r523}, {%r3073, %r3195}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3500, %r3497}, {%r514, %r520, %r517, %r523}, {%r3082, %r3202}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3509, %r3506}, {%r514, %r520, %r517, %r523}, {%r3091, %r3209}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3518, %r3515}, {%r514, %r520, %r517, %r523}, {%r3100, %r3216}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3527, %r3524}, {%r514, %r520, %r517, %r523}, {%r3109, %r3223}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3536, %r3533}, {%r514, %r520, %r517, %r523}, {%r3118, %r3230}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3394, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3396, %r3394, %r3398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3399, %r564, %r3401, %r3396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3403, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3405, %r3403, %r3407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3408, %r564, %r3410, %r3405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3412, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3414, %r3412, %r3416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3417, %r564, %r3419, %r3414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3421, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3423, %r3421, %r3425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3426, %r564, %r3428, %r3423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3430, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3432, %r3430, %r3434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3435, %r564, %r3437, %r3432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3439, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3441, %r3439, %r3443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3444, %r564, %r3446, %r3441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3448, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3450, %r3448, %r3452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3453, %r564, %r3455, %r3450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3457, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3459, %r3457, %r3461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3462, %r564, %r3464, %r3459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3466, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3468, %r3466, %r3470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3471, %r564, %r3473, %r3468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3475, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3477, %r3475, %r3479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3480, %r564, %r3482, %r3477;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3484, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3486, %r3484, %r3488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3489, %r564, %r3491, %r3486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3493, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3495, %r3493, %r3497;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3498, %r564, %r3500, %r3495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3502, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3504, %r3502, %r3506;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3507, %r564, %r3509, %r3504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3511, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3513, %r3511, %r3515;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3516, %r564, %r3518, %r3513;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3520, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3522, %r3520, %r3524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3525, %r564, %r3527, %r3522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3529, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3531, %r3529, %r3533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3534, %r564, %r3536, %r3531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3538, %r567, %r3401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3541, %r564, %r3398, %r3538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3545, %r567, %r3410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3548, %r564, %r3407, %r3545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3552, %r567, %r3419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3555, %r564, %r3416, %r3552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3559, %r567, %r3428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3562, %r564, %r3425, %r3559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3566, %r567, %r3437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3569, %r564, %r3434, %r3566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3573, %r567, %r3446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3576, %r564, %r3443, %r3573;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3580, %r567, %r3455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3583, %r564, %r3452, %r3580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3587, %r567, %r3464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3590, %r564, %r3461, %r3587;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3594, %r567, %r3473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3597, %r564, %r3470, %r3594;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3601, %r567, %r3482;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3604, %r564, %r3479, %r3601;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3608, %r567, %r3491;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3611, %r564, %r3488, %r3608;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3615, %r567, %r3500;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3618, %r564, %r3497, %r3615;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3622, %r567, %r3509;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3625, %r564, %r3506, %r3622;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3629, %r567, %r3518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3632, %r564, %r3515, %r3629;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3636, %r567, %r3527;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3639, %r564, %r3524, %r3636;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3643, %r567, %r3536;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3646, %r564, %r3533, %r3643;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3939, %r3942}, {%r602, %r608, %r605, %r611}, {%r3399, %r3541}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3945, %r3948}, {%r602, %r608, %r605, %r611}, {%r3408, %r3548}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3951, %r3954}, {%r602, %r608, %r605, %r611}, {%r3417, %r3555}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3957, %r3960}, {%r602, %r608, %r605, %r611}, {%r3426, %r3562}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3963, %r3966}, {%r602, %r608, %r605, %r611}, {%r3435, %r3569}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3969, %r3972}, {%r602, %r608, %r605, %r611}, {%r3444, %r3576}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3975, %r3978}, {%r602, %r608, %r605, %r611}, {%r3453, %r3583}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3981, %r3984}, {%r602, %r608, %r605, %r611}, {%r3462, %r3590}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3940, %r3943}, {%r602, %r608, %r605, %r611}, {%r3471, %r3597}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3946, %r3949}, {%r602, %r608, %r605, %r611}, {%r3480, %r3604}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3952, %r3955}, {%r602, %r608, %r605, %r611}, {%r3489, %r3611}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3958, %r3961}, {%r602, %r608, %r605, %r611}, {%r3498, %r3618}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3964, %r3967}, {%r602, %r608, %r605, %r611}, {%r3507, %r3625}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3970, %r3973}, {%r602, %r608, %r605, %r611}, {%r3516, %r3632}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3976, %r3979}, {%r602, %r608, %r605, %r611}, {%r3525, %r3639}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3982, %r3985}, {%r602, %r608, %r605, %r611}, {%r3534, %r3646}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3938, %r3939, %r3940;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3941, %r3942, %r3943;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3944, %r3945, %r3946;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3947, %r3948, %r3949;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3950, %r3951, %r3952;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3953, %r3954, %r3955;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3956, %r3957, %r3958;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3959, %r3960, %r3961;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3962, %r3963, %r3964;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3965, %r3966, %r3967;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3968, %r3969, %r3970;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3971, %r3972, %r3973;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3974, %r3975, %r3976;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3977, %r3978, %r3979;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3980, %r3981, %r3982;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3983, %r3984, %r3985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3986, %r3939, %r3940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3989, %r3942, %r3943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3992, %r3945, %r3946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3995, %r3948, %r3949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3998, %r3951, %r3952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4001, %r3954, %r3955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4004, %r3957, %r3958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4007, %r3960, %r3961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4010, %r3963, %r3964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4013, %r3966, %r3967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4016, %r3969, %r3970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4019, %r3972, %r3973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4022, %r3975, %r3976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4025, %r3978, %r3979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4028, %r3981, %r3982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4031, %r3984, %r3985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4034, %r184, %r3938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4037, %r184, %r3941;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4040, %r184, %r3944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4043, %r184, %r3947;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4046, %r184, %r3950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4049, %r184, %r3953;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4052, %r184, %r3956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4055, %r184, %r3959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4058, %r184, %r3962;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4061, %r184, %r3965;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4064, %r184, %r3968;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4067, %r184, %r3971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4070, %r184, %r3974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4073, %r184, %r3977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4076, %r184, %r3980;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4079, %r184, %r3983;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4082, %r185, %r3986;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4085, %r185, %r3989;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4088, %r185, %r3992;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4091, %r185, %r3995;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4094, %r185, %r3998;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4097, %r185, %r4001;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4100, %r185, %r4004;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4103, %r185, %r4007;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4106, %r185, %r4010;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4109, %r185, %r4013;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4112, %r185, %r4016;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4115, %r185, %r4019;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4118, %r185, %r4022;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4121, %r185, %r4025;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4124, %r185, %r4028;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4127, %r185, %r4031;
	// end inline asm
	// begin inline asm
	mov.b32 %r4130, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4131, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4132, %r4034, %r4130;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4135, %r4132, %r4131;
	// end inline asm
	// begin inline asm
	mov.b32 %r4138, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4139, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4140, %r4037, %r4138;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4143, %r4140, %r4139;
	// end inline asm
	// begin inline asm
	mov.b32 %r4146, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4148, %r4040, %r4146;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4151, %r4148, %r4147;
	// end inline asm
	// begin inline asm
	mov.b32 %r4154, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4155, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4156, %r4043, %r4154;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4159, %r4156, %r4155;
	// end inline asm
	// begin inline asm
	mov.b32 %r4162, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4163, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4164, %r4046, %r4162;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4167, %r4164, %r4163;
	// end inline asm
	// begin inline asm
	mov.b32 %r4170, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4171, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4172, %r4049, %r4170;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4175, %r4172, %r4171;
	// end inline asm
	// begin inline asm
	mov.b32 %r4178, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4179, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4180, %r4052, %r4178;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4183, %r4180, %r4179;
	// end inline asm
	// begin inline asm
	mov.b32 %r4186, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4187, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4188, %r4055, %r4186;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4191, %r4188, %r4187;
	// end inline asm
	// begin inline asm
	mov.b32 %r4194, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4196, %r4058, %r4194;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4199, %r4196, %r4195;
	// end inline asm
	// begin inline asm
	mov.b32 %r4202, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4204, %r4061, %r4202;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4207, %r4204, %r4203;
	// end inline asm
	// begin inline asm
	mov.b32 %r4210, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4211, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4212, %r4064, %r4210;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4215, %r4212, %r4211;
	// end inline asm
	// begin inline asm
	mov.b32 %r4218, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4219, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4220, %r4067, %r4218;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4223, %r4220, %r4219;
	// end inline asm
	// begin inline asm
	mov.b32 %r4226, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4227, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4228, %r4070, %r4226;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4231, %r4228, %r4227;
	// end inline asm
	// begin inline asm
	mov.b32 %r4234, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4236, %r4073, %r4234;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4239, %r4236, %r4235;
	// end inline asm
	// begin inline asm
	mov.b32 %r4242, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4243, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4244, %r4076, %r4242;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4247, %r4244, %r4243;
	// end inline asm
	// begin inline asm
	mov.b32 %r4250, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4251, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4252, %r4079, %r4250;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4255, %r4252, %r4251;
	// end inline asm
	// begin inline asm
	mov.b32 %r4258, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4259, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4260, %r4082, %r4258;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4263, %r4260, %r4259;
	// end inline asm
	// begin inline asm
	mov.b32 %r4266, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4267, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4268, %r4085, %r4266;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4271, %r4268, %r4267;
	// end inline asm
	// begin inline asm
	mov.b32 %r4274, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4275, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4276, %r4088, %r4274;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4279, %r4276, %r4275;
	// end inline asm
	// begin inline asm
	mov.b32 %r4282, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4283, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4284, %r4091, %r4282;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4287, %r4284, %r4283;
	// end inline asm
	// begin inline asm
	mov.b32 %r4290, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4291, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4292, %r4094, %r4290;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4295, %r4292, %r4291;
	// end inline asm
	// begin inline asm
	mov.b32 %r4298, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4299, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4300, %r4097, %r4298;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4303, %r4300, %r4299;
	// end inline asm
	// begin inline asm
	mov.b32 %r4306, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4307, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4308, %r4100, %r4306;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4311, %r4308, %r4307;
	// end inline asm
	// begin inline asm
	mov.b32 %r4314, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4315, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4316, %r4103, %r4314;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4319, %r4316, %r4315;
	// end inline asm
	// begin inline asm
	mov.b32 %r4322, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4323, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4324, %r4106, %r4322;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4327, %r4324, %r4323;
	// end inline asm
	// begin inline asm
	mov.b32 %r4330, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4331, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4332, %r4109, %r4330;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4335, %r4332, %r4331;
	// end inline asm
	// begin inline asm
	mov.b32 %r4338, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4339, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4340, %r4112, %r4338;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4343, %r4340, %r4339;
	// end inline asm
	// begin inline asm
	mov.b32 %r4346, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4347, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4348, %r4115, %r4346;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4351, %r4348, %r4347;
	// end inline asm
	// begin inline asm
	mov.b32 %r4354, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4355, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4356, %r4118, %r4354;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4359, %r4356, %r4355;
	// end inline asm
	// begin inline asm
	mov.b32 %r4362, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4363, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4364, %r4121, %r4362;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4367, %r4364, %r4363;
	// end inline asm
	// begin inline asm
	mov.b32 %r4370, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4371, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4372, %r4124, %r4370;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4375, %r4372, %r4371;
	// end inline asm
	// begin inline asm
	mov.b32 %r4378, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4379, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4380, %r4127, %r4378;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4383, %r4380, %r4379;
	// end inline asm
	// begin inline asm
	mov.b32 %r4389, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4388, %r4389, %r4387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4391, %r4135, %r4388;
	// end inline asm
	// begin inline asm
	mov.b32 %r4394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4395, %r4389, %r4394;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4398, %r4143, %r4395;
	// end inline asm
	// begin inline asm
	mov.b32 %r4401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4402, %r4389, %r4401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4405, %r4151, %r4402;
	// end inline asm
	// begin inline asm
	mov.b32 %r4408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4409, %r4389, %r4408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4412, %r4159, %r4409;
	// end inline asm
	mov.u32 	%r4418, 25152;
	// begin inline asm
	prmt.b32 %r4415, %r4391, %r4405, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4419, %r4398, %r4412, %r4418;
	// end inline asm
	shl.b32 	%r4426, %r4419, 4;
	mov.u32 	%r4424, 252645135;
	// begin inline asm
	lop3.b32 %r4423, %r4424, %r4415, %r4426, 202;
	// end inline asm
	xor.b32  	%r16216, %r4423, -2004318072;
	// begin inline asm
	mov.b32 %r4430, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4429, %r4430, %r4428;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4432, %r4167, %r4429;
	// end inline asm
	// begin inline asm
	mov.b32 %r4435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4436, %r4430, %r4435;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4439, %r4175, %r4436;
	// end inline asm
	// begin inline asm
	mov.b32 %r4442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4443, %r4430, %r4442;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4446, %r4183, %r4443;
	// end inline asm
	// begin inline asm
	mov.b32 %r4449, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4450, %r4430, %r4449;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4453, %r4191, %r4450;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4456, %r4432, %r4446, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4460, %r4439, %r4453, %r4418;
	// end inline asm
	shl.b32 	%r4467, %r4460, 4;
	// begin inline asm
	lop3.b32 %r4464, %r4424, %r4456, %r4467, 202;
	// end inline asm
	xor.b32  	%r16217, %r4464, -2004318072;
	// begin inline asm
	mov.b32 %r4471, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4470, %r4471, %r4469;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4473, %r4199, %r4470;
	// end inline asm
	// begin inline asm
	mov.b32 %r4476, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4477, %r4471, %r4476;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4480, %r4207, %r4477;
	// end inline asm
	// begin inline asm
	mov.b32 %r4483, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4484, %r4471, %r4483;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4487, %r4215, %r4484;
	// end inline asm
	// begin inline asm
	mov.b32 %r4490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4491, %r4471, %r4490;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4494, %r4223, %r4491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4497, %r4473, %r4487, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4501, %r4480, %r4494, %r4418;
	// end inline asm
	shl.b32 	%r4508, %r4501, 4;
	// begin inline asm
	lop3.b32 %r4505, %r4424, %r4497, %r4508, 202;
	// end inline asm
	xor.b32  	%r16218, %r4505, -2004318072;
	// begin inline asm
	mov.b32 %r4512, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4511, %r4512, %r4510;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4514, %r4231, %r4511;
	// end inline asm
	// begin inline asm
	mov.b32 %r4517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4518, %r4512, %r4517;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4521, %r4239, %r4518;
	// end inline asm
	// begin inline asm
	mov.b32 %r4524, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4525, %r4512, %r4524;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4528, %r4247, %r4525;
	// end inline asm
	// begin inline asm
	mov.b32 %r4531, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4532, %r4512, %r4531;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4535, %r4255, %r4532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4538, %r4514, %r4528, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4542, %r4521, %r4535, %r4418;
	// end inline asm
	shl.b32 	%r4549, %r4542, 4;
	// begin inline asm
	lop3.b32 %r4546, %r4424, %r4538, %r4549, 202;
	// end inline asm
	xor.b32  	%r16219, %r4546, -2004318072;
	// begin inline asm
	mov.b32 %r4553, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4552, %r4553, %r4551;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4555, %r4263, %r4552;
	// end inline asm
	// begin inline asm
	mov.b32 %r4558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4559, %r4553, %r4558;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4562, %r4271, %r4559;
	// end inline asm
	// begin inline asm
	mov.b32 %r4565, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4566, %r4553, %r4565;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4569, %r4279, %r4566;
	// end inline asm
	// begin inline asm
	mov.b32 %r4572, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4573, %r4553, %r4572;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4576, %r4287, %r4573;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4579, %r4555, %r4569, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4583, %r4562, %r4576, %r4418;
	// end inline asm
	shl.b32 	%r4590, %r4583, 4;
	// begin inline asm
	lop3.b32 %r4587, %r4424, %r4579, %r4590, 202;
	// end inline asm
	xor.b32  	%r16220, %r4587, -2004318072;
	// begin inline asm
	mov.b32 %r4594, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4593, %r4594, %r4592;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4596, %r4295, %r4593;
	// end inline asm
	// begin inline asm
	mov.b32 %r4599, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4600, %r4594, %r4599;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4603, %r4303, %r4600;
	// end inline asm
	// begin inline asm
	mov.b32 %r4606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4607, %r4594, %r4606;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4610, %r4311, %r4607;
	// end inline asm
	// begin inline asm
	mov.b32 %r4613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4614, %r4594, %r4613;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4617, %r4319, %r4614;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4620, %r4596, %r4610, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4624, %r4603, %r4617, %r4418;
	// end inline asm
	shl.b32 	%r4631, %r4624, 4;
	// begin inline asm
	lop3.b32 %r4628, %r4424, %r4620, %r4631, 202;
	// end inline asm
	xor.b32  	%r16221, %r4628, -2004318072;
	// begin inline asm
	mov.b32 %r4635, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4633, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4634, %r4635, %r4633;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4637, %r4327, %r4634;
	// end inline asm
	// begin inline asm
	mov.b32 %r4640, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4641, %r4635, %r4640;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4644, %r4335, %r4641;
	// end inline asm
	// begin inline asm
	mov.b32 %r4647, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4648, %r4635, %r4647;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4651, %r4343, %r4648;
	// end inline asm
	// begin inline asm
	mov.b32 %r4654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4655, %r4635, %r4654;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4658, %r4351, %r4655;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4661, %r4637, %r4651, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4665, %r4644, %r4658, %r4418;
	// end inline asm
	shl.b32 	%r4672, %r4665, 4;
	// begin inline asm
	lop3.b32 %r4669, %r4424, %r4661, %r4672, 202;
	// end inline asm
	xor.b32  	%r16222, %r4669, -2004318072;
	// begin inline asm
	mov.b32 %r4676, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4675, %r4676, %r4674;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4678, %r4359, %r4675;
	// end inline asm
	// begin inline asm
	mov.b32 %r4681, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4682, %r4676, %r4681;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4685, %r4367, %r4682;
	// end inline asm
	// begin inline asm
	mov.b32 %r4688, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4689, %r4676, %r4688;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4692, %r4375, %r4689;
	// end inline asm
	// begin inline asm
	mov.b32 %r4695, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4696, %r4676, %r4695;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4699, %r4383, %r4696;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4702, %r4678, %r4692, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4706, %r4685, %r4699, %r4418;
	// end inline asm
	shl.b32 	%r4713, %r4706, 4;
	// begin inline asm
	lop3.b32 %r4710, %r4424, %r4702, %r4713, 202;
	// end inline asm
	xor.b32  	%r16223, %r4710, -2004318072;
	add.s32 	%r16224, %r130, %r16162;
	mul.wide.u32 	%rd106, %r16224, 4;
	add.s64 	%rd107, %rd50, %rd106;
	st.shared.u32 	[%rd107], %r16216;
	add.s32 	%r16225, %r131, %r16162;
	mul.wide.u32 	%rd108, %r16225, 4;
	add.s64 	%rd109, %rd50, %rd108;
	st.shared.u32 	[%rd109], %r16217;
	add.s32 	%r16226, %r132, %r16162;
	mul.wide.u32 	%rd110, %r16226, 4;
	add.s64 	%rd111, %rd50, %rd110;
	st.shared.u32 	[%rd111], %r16218;
	add.s32 	%r16227, %r133, %r16162;
	mul.wide.u32 	%rd112, %r16227, 4;
	add.s64 	%rd113, %rd50, %rd112;
	st.shared.u32 	[%rd113], %r16219;
	add.s32 	%r16228, %r134, %r16162;
	mul.wide.u32 	%rd114, %r16228, 4;
	add.s64 	%rd115, %rd50, %rd114;
	st.shared.u32 	[%rd115], %r16220;
	add.s32 	%r16229, %r135, %r16162;
	mul.wide.u32 	%rd116, %r16229, 4;
	add.s64 	%rd117, %rd50, %rd116;
	st.shared.u32 	[%rd117], %r16221;
	add.s32 	%r16230, %r136, %r16162;
	mul.wide.u32 	%rd118, %r16230, 4;
	add.s64 	%rd119, %rd50, %rd118;
	st.shared.u32 	[%rd119], %r16222;
	add.s32 	%r16231, %r137, %r16162;
	mul.wide.u32 	%rd120, %r16231, 4;
	add.s64 	%rd121, %rd50, %rd120;
	st.shared.u32 	[%rd121], %r16223;
	ld.shared.u32 	%r16375, [%rd91];
	ld.shared.u32 	%r16376, [%rd93];
	ld.shared.u32 	%r16377, [%rd95];
	ld.shared.u32 	%r16378, [%rd97];
	ld.shared.u32 	%r16387, [%rd99];
	ld.shared.u32 	%r16388, [%rd101];
	ld.shared.u32 	%r16389, [%rd103];
	ld.shared.u32 	%r16390, [%rd105];
	// begin inline asm
	mov.b32 %r4719, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4730, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4718, %r16375, -2004318072;
	// begin inline asm
	lop3.b32 %r4716, %r901, %r4718, %r4719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4720, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4721, %r4719, %r4720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4724, %r4716, %r4721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4727, %r912, %r4718, %r4730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4731, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4732, %r4730, %r4731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4735, %r4727, %r4732;
	// end inline asm
	shr.u32 	%r4740, %r4718, 8;
	// begin inline asm
	lop3.b32 %r4738, %r901, %r4740, %r4719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4742, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4743, %r4719, %r4742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4746, %r4738, %r4743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4749, %r912, %r4740, %r4730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4753, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4754, %r4730, %r4753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4757, %r4749, %r4754;
	// end inline asm
	// begin inline asm
	mov.b32 %r4765, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4776, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4764, %r16376, -2004318072;
	// begin inline asm
	lop3.b32 %r4762, %r901, %r4764, %r4765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4766, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4767, %r4765, %r4766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4770, %r4762, %r4767;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4773, %r912, %r4764, %r4776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4777, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4778, %r4776, %r4777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4781, %r4773, %r4778;
	// end inline asm
	shr.u32 	%r4786, %r4764, 8;
	// begin inline asm
	lop3.b32 %r4784, %r901, %r4786, %r4765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4788, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4789, %r4765, %r4788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4792, %r4784, %r4789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4795, %r912, %r4786, %r4776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4799, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4800, %r4776, %r4799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4803, %r4795, %r4800;
	// end inline asm
	// begin inline asm
	mov.b32 %r4811, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4822, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4810, %r16377, -2004318072;
	// begin inline asm
	lop3.b32 %r4808, %r901, %r4810, %r4811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4812, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4813, %r4811, %r4812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4816, %r4808, %r4813;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4819, %r912, %r4810, %r4822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4823, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4824, %r4822, %r4823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4827, %r4819, %r4824;
	// end inline asm
	shr.u32 	%r4832, %r4810, 8;
	// begin inline asm
	lop3.b32 %r4830, %r901, %r4832, %r4811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4834, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4835, %r4811, %r4834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4838, %r4830, %r4835;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4841, %r912, %r4832, %r4822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4845, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4846, %r4822, %r4845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4849, %r4841, %r4846;
	// end inline asm
	// begin inline asm
	mov.b32 %r4857, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4868, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4856, %r16378, -2004318072;
	// begin inline asm
	lop3.b32 %r4854, %r901, %r4856, %r4857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4858, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4859, %r4857, %r4858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4862, %r4854, %r4859;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4865, %r912, %r4856, %r4868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4870, %r4868, %r4869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4873, %r4865, %r4870;
	// end inline asm
	shr.u32 	%r4878, %r4856, 8;
	// begin inline asm
	lop3.b32 %r4876, %r901, %r4878, %r4857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4880, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4881, %r4857, %r4880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4884, %r4876, %r4881;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4887, %r912, %r4878, %r4868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4891, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4892, %r4868, %r4891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4895, %r4887, %r4892;
	// end inline asm
	// begin inline asm
	mov.b32 %r4903, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4914, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4902, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r4900, %r901, %r4902, %r4903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4904, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4905, %r4903, %r4904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4908, %r4900, %r4905;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4911, %r912, %r4902, %r4914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4915, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4916, %r4914, %r4915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4919, %r4911, %r4916;
	// end inline asm
	shr.u32 	%r4924, %r4902, 8;
	// begin inline asm
	lop3.b32 %r4922, %r901, %r4924, %r4903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4926, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4927, %r4903, %r4926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4930, %r4922, %r4927;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4933, %r912, %r4924, %r4914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4938, %r4914, %r4937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4941, %r4933, %r4938;
	// end inline asm
	// begin inline asm
	mov.b32 %r4949, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4960, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4948, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r4946, %r901, %r4948, %r4949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4951, %r4949, %r4950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4954, %r4946, %r4951;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4957, %r912, %r4948, %r4960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4962, %r4960, %r4961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4965, %r4957, %r4962;
	// end inline asm
	shr.u32 	%r4970, %r4948, 8;
	// begin inline asm
	lop3.b32 %r4968, %r901, %r4970, %r4949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4973, %r4949, %r4972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4976, %r4968, %r4973;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4979, %r912, %r4970, %r4960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4984, %r4960, %r4983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4987, %r4979, %r4984;
	// end inline asm
	// begin inline asm
	mov.b32 %r4995, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5006, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4994, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r4992, %r901, %r4994, %r4995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4997, %r4995, %r4996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5000, %r4992, %r4997;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5003, %r912, %r4994, %r5006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5008, %r5006, %r5007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5011, %r5003, %r5008;
	// end inline asm
	shr.u32 	%r5016, %r4994, 8;
	// begin inline asm
	lop3.b32 %r5014, %r901, %r5016, %r4995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5019, %r4995, %r5018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5022, %r5014, %r5019;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5025, %r912, %r5016, %r5006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5030, %r5006, %r5029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5033, %r5025, %r5030;
	// end inline asm
	// begin inline asm
	mov.b32 %r5041, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5052, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r5040, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r5038, %r901, %r5040, %r5041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5043, %r5041, %r5042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5046, %r5038, %r5043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5049, %r912, %r5040, %r5052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5054, %r5052, %r5053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5057, %r5049, %r5054;
	// end inline asm
	shr.u32 	%r5062, %r5040, 8;
	// begin inline asm
	lop3.b32 %r5060, %r901, %r5062, %r5041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5065, %r5041, %r5064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5068, %r5060, %r5065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5071, %r912, %r5062, %r5052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5075, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5076, %r5052, %r5075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5079, %r5071, %r5076;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5082, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5084, %r5082, %r4724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5087, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5089, %r5087, %r4735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5092, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5094, %r5092, %r4746;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5097, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5099, %r5097, %r4757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5102, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5104, %r5102, %r4770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5107, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5109, %r5107, %r4781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5112, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5114, %r5112, %r4792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5117, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5119, %r5117, %r4803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5122, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5124, %r5122, %r4816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5127, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5129, %r5127, %r4827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5132, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5134, %r5132, %r4838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5137, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5139, %r5137, %r4849;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5142, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5144, %r5142, %r4862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5147, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5149, %r5147, %r4873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5152, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5154, %r5152, %r4884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5157, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5159, %r5157, %r4895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5162, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5164, %r5162, %r4908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5167, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5169, %r5167, %r4919;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5172, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5174, %r5172, %r4930;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5177, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5179, %r5177, %r4941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5182, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5184, %r5182, %r4954;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5187, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5189, %r5187, %r4965;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5192, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5194, %r5192, %r4976;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5197, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5199, %r5197, %r4987;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5202, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5204, %r5202, %r5000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5207, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5209, %r5207, %r5011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5212, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5214, %r5212, %r5022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5217, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5219, %r5217, %r5033;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5222, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5224, %r5222, %r5046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5227, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5229, %r5227, %r5057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5232, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5234, %r5232, %r5068;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5237, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5239, %r5237, %r5079;
	// end inline asm
	// begin inline asm
	mov.b32 %r5247, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5258, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5244, %r901, %r1926, %r5247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5248, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5249, %r5247, %r5248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5252, %r5244, %r5249;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5255, %r912, %r1926, %r5258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5259, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5260, %r5258, %r5259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5263, %r5255, %r5260;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5266, %r901, %r1948, %r5247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5270, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5271, %r5247, %r5270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5274, %r5266, %r5271;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5277, %r912, %r1948, %r5258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5281, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5282, %r5258, %r5281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5285, %r5277, %r5282;
	// end inline asm
	// begin inline asm
	mov.b32 %r5293, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5304, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5290, %r901, %r1972, %r5293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5294, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5295, %r5293, %r5294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5298, %r5290, %r5295;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5301, %r912, %r1972, %r5304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5306, %r5304, %r5305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5309, %r5301, %r5306;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5312, %r901, %r1994, %r5293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5316, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5317, %r5293, %r5316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5320, %r5312, %r5317;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5323, %r912, %r1994, %r5304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5327, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5328, %r5304, %r5327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5331, %r5323, %r5328;
	// end inline asm
	// begin inline asm
	mov.b32 %r5339, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5350, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5336, %r901, %r2018, %r5339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5340, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5341, %r5339, %r5340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5344, %r5336, %r5341;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5347, %r912, %r2018, %r5350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5352, %r5350, %r5351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5355, %r5347, %r5352;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5358, %r901, %r2040, %r5339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5362, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5363, %r5339, %r5362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5366, %r5358, %r5363;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5369, %r912, %r2040, %r5350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5374, %r5350, %r5373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5377, %r5369, %r5374;
	// end inline asm
	// begin inline asm
	mov.b32 %r5385, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5396, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5382, %r901, %r2064, %r5385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5386, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5387, %r5385, %r5386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5390, %r5382, %r5387;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5393, %r912, %r2064, %r5396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5398, %r5396, %r5397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5401, %r5393, %r5398;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5404, %r901, %r2086, %r5385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5409, %r5385, %r5408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5412, %r5404, %r5409;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5415, %r912, %r2086, %r5396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5420, %r5396, %r5419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5423, %r5415, %r5420;
	// end inline asm
	// begin inline asm
	mov.b32 %r5431, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5442, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5428, %r901, %r2110, %r5431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5432, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5433, %r5431, %r5432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5436, %r5428, %r5433;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5439, %r912, %r2110, %r5442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5443, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5444, %r5442, %r5443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5447, %r5439, %r5444;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5450, %r901, %r2132, %r5431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5454, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5455, %r5431, %r5454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5458, %r5450, %r5455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5461, %r912, %r2132, %r5442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5466, %r5442, %r5465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5469, %r5461, %r5466;
	// end inline asm
	// begin inline asm
	mov.b32 %r5477, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5488, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5474, %r901, %r2156, %r5477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5478, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5479, %r5477, %r5478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5482, %r5474, %r5479;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5485, %r912, %r2156, %r5488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5490, %r5488, %r5489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5493, %r5485, %r5490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5496, %r901, %r2178, %r5477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5501, %r5477, %r5500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5504, %r5496, %r5501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5507, %r912, %r2178, %r5488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5512, %r5488, %r5511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5515, %r5507, %r5512;
	// end inline asm
	// begin inline asm
	mov.b32 %r5523, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5534, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5520, %r901, %r2202, %r5523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5524, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5525, %r5523, %r5524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5528, %r5520, %r5525;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5531, %r912, %r2202, %r5534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5536, %r5534, %r5535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5539, %r5531, %r5536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5542, %r901, %r2224, %r5523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5547, %r5523, %r5546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5550, %r5542, %r5547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5553, %r912, %r2224, %r5534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5558, %r5534, %r5557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5561, %r5553, %r5558;
	// end inline asm
	// begin inline asm
	mov.b32 %r5569, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5580, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5566, %r901, %r2248, %r5569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5570, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5571, %r5569, %r5570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5574, %r5566, %r5571;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5577, %r912, %r2248, %r5580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5581, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5582, %r5580, %r5581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5585, %r5577, %r5582;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5588, %r901, %r2270, %r5569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5593, %r5569, %r5592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5596, %r5588, %r5593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5599, %r912, %r2270, %r5580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5604, %r5580, %r5603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5607, %r5599, %r5604;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5610, %r305, %r5252, %r5084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5614, %r305, %r5263, %r5089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5618, %r305, %r5274, %r5094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5622, %r305, %r5285, %r5099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5626, %r305, %r5298, %r5104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5630, %r305, %r5309, %r5109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5634, %r305, %r5320, %r5114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5638, %r305, %r5331, %r5119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5642, %r305, %r5344, %r5124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5646, %r305, %r5355, %r5129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5650, %r305, %r5366, %r5134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5654, %r305, %r5377, %r5139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5658, %r305, %r5390, %r5144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5662, %r305, %r5401, %r5149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5666, %r305, %r5412, %r5154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5670, %r305, %r5423, %r5159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5674, %r323, %r5436, %r5164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5678, %r323, %r5447, %r5169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5682, %r323, %r5458, %r5174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5686, %r323, %r5469, %r5179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5690, %r323, %r5482, %r5184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5694, %r323, %r5493, %r5189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5698, %r323, %r5504, %r5194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5702, %r323, %r5515, %r5199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5706, %r323, %r5528, %r5204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5710, %r323, %r5539, %r5209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5714, %r323, %r5550, %r5214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5718, %r323, %r5561, %r5219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5722, %r323, %r5574, %r5224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5726, %r323, %r5585, %r5229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5730, %r323, %r5596, %r5234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5734, %r323, %r5607, %r5239;
	// end inline asm
	// begin inline asm
	mov.b32 %r5743, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5754, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5740, %r901, %r2486, %r5743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5744, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5745, %r5743, %r5744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5748, %r5740, %r5745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5751, %r912, %r2486, %r5754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5755, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5756, %r5754, %r5755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5759, %r5751, %r5756;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5762, %r901, %r2508, %r5743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5766, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5767, %r5743, %r5766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5770, %r5762, %r5767;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5773, %r912, %r2508, %r5754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5777, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5778, %r5754, %r5777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5781, %r5773, %r5778;
	// end inline asm
	// begin inline asm
	mov.b32 %r5789, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5800, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5786, %r901, %r2532, %r5789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5790, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5791, %r5789, %r5790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5794, %r5786, %r5791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5797, %r912, %r2532, %r5800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5801, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5802, %r5800, %r5801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5805, %r5797, %r5802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5808, %r901, %r2554, %r5789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5812, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5813, %r5789, %r5812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5816, %r5808, %r5813;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5819, %r912, %r2554, %r5800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5823, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5824, %r5800, %r5823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5827, %r5819, %r5824;
	// end inline asm
	// begin inline asm
	mov.b32 %r5835, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5846, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5832, %r901, %r2578, %r5835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5836, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5837, %r5835, %r5836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5840, %r5832, %r5837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5843, %r912, %r2578, %r5846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5847, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5848, %r5846, %r5847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5851, %r5843, %r5848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5854, %r901, %r2600, %r5835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5858, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5859, %r5835, %r5858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5862, %r5854, %r5859;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5865, %r912, %r2600, %r5846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5870, %r5846, %r5869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5873, %r5865, %r5870;
	// end inline asm
	// begin inline asm
	mov.b32 %r5881, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5892, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5878, %r901, %r2624, %r5881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5882, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5883, %r5881, %r5882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5886, %r5878, %r5883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5889, %r912, %r2624, %r5892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5893, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5894, %r5892, %r5893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5897, %r5889, %r5894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5900, %r901, %r2646, %r5881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5904, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5905, %r5881, %r5904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5908, %r5900, %r5905;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5911, %r912, %r2646, %r5892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5915, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5916, %r5892, %r5915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5919, %r5911, %r5916;
	// end inline asm
	// begin inline asm
	mov.b32 %r5927, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5938, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5924, %r901, %r2670, %r5927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5929, %r5927, %r5928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5932, %r5924, %r5929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5935, %r912, %r2670, %r5938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5940, %r5938, %r5939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5943, %r5935, %r5940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5946, %r901, %r2692, %r5927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5951, %r5927, %r5950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5954, %r5946, %r5951;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5957, %r912, %r2692, %r5938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5962, %r5938, %r5961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5965, %r5957, %r5962;
	// end inline asm
	// begin inline asm
	mov.b32 %r5973, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5984, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5970, %r901, %r2716, %r5973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5975, %r5973, %r5974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5978, %r5970, %r5975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5981, %r912, %r2716, %r5984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5986, %r5984, %r5985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5989, %r5981, %r5986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5992, %r901, %r2738, %r5973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5997, %r5973, %r5996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6000, %r5992, %r5997;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6003, %r912, %r2738, %r5984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6008, %r5984, %r6007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6011, %r6003, %r6008;
	// end inline asm
	// begin inline asm
	mov.b32 %r6019, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6030, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6016, %r901, %r2762, %r6019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6021, %r6019, %r6020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6024, %r6016, %r6021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6027, %r912, %r2762, %r6030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6032, %r6030, %r6031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6035, %r6027, %r6032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6038, %r901, %r2784, %r6019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6043, %r6019, %r6042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6046, %r6038, %r6043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6049, %r912, %r2784, %r6030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6054, %r6030, %r6053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6057, %r6049, %r6054;
	// end inline asm
	// begin inline asm
	mov.b32 %r6065, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6076, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6062, %r901, %r2808, %r6065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6067, %r6065, %r6066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6070, %r6062, %r6067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6073, %r912, %r2808, %r6076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6078, %r6076, %r6077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6081, %r6073, %r6078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6084, %r901, %r2830, %r6065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6088, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6089, %r6065, %r6088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6092, %r6084, %r6089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6095, %r912, %r2830, %r6076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6100, %r6076, %r6099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6103, %r6095, %r6100;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6106, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6108, %r6106, %r5748, %r5610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6112, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6114, %r6112, %r5759, %r5614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6118, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6120, %r6118, %r5770, %r5618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6124, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6126, %r6124, %r5781, %r5622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6130, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6132, %r6130, %r5794, %r5626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6136, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6138, %r6136, %r5805, %r5630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6142, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6144, %r6142, %r5816, %r5634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6148, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6150, %r6148, %r5827, %r5638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6154, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6156, %r6154, %r5840, %r5642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6160, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6162, %r6160, %r5851, %r5646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6166, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6168, %r6166, %r5862, %r5650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6172, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6174, %r6172, %r5873, %r5654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6178, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6180, %r6178, %r5886, %r5658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6184, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6186, %r6184, %r5897, %r5662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6190, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6192, %r6190, %r5908, %r5666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6196, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6198, %r6196, %r5919, %r5670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6202, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6204, %r6202, %r5932, %r5674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6208, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6210, %r6208, %r5943, %r5678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6214, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6216, %r6214, %r5954, %r5682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6220, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6222, %r6220, %r5965, %r5686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6226, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6228, %r6226, %r5978, %r5690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6232, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6234, %r6232, %r5989, %r5694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6238, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6240, %r6238, %r6000, %r5698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6244, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6246, %r6244, %r6011, %r5702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6250, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6252, %r6250, %r6024, %r5706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6256, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6258, %r6256, %r6035, %r5710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6262, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6264, %r6262, %r6046, %r5714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6268, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6270, %r6268, %r6057, %r5718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6274, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6276, %r6274, %r6070, %r5722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6280, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6282, %r6280, %r6081, %r5726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6286, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6288, %r6286, %r6092, %r5730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6292, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6294, %r6292, %r6103, %r5734;
	// end inline asm
	// begin inline asm
	mov.b32 %r6303, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6314, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6300, %r901, %r902, %r6303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6304, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6305, %r6303, %r6304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6308, %r6300, %r6305;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6311, %r912, %r902, %r6314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6315, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6316, %r6314, %r6315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6319, %r6311, %r6316;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6322, %r901, %r924, %r6303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6327, %r6303, %r6326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6330, %r6322, %r6327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6333, %r912, %r924, %r6314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6337, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6338, %r6314, %r6337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6341, %r6333, %r6338;
	// end inline asm
	// begin inline asm
	mov.b32 %r6349, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6360, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6346, %r901, %r948, %r6349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6350, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6351, %r6349, %r6350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6354, %r6346, %r6351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6357, %r912, %r948, %r6360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6361, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6362, %r6360, %r6361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6365, %r6357, %r6362;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6368, %r901, %r970, %r6349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6373, %r6349, %r6372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6376, %r6368, %r6373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6379, %r912, %r970, %r6360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6384, %r6360, %r6383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6387, %r6379, %r6384;
	// end inline asm
	// begin inline asm
	mov.b32 %r6395, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6406, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6392, %r901, %r994, %r6395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6396, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6397, %r6395, %r6396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6400, %r6392, %r6397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6403, %r912, %r994, %r6406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6408, %r6406, %r6407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6411, %r6403, %r6408;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6414, %r901, %r1016, %r6395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6419, %r6395, %r6418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6422, %r6414, %r6419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6425, %r912, %r1016, %r6406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6429, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6430, %r6406, %r6429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6433, %r6425, %r6430;
	// end inline asm
	// begin inline asm
	mov.b32 %r6441, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6452, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6438, %r901, %r1040, %r6441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6443, %r6441, %r6442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6446, %r6438, %r6443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6449, %r912, %r1040, %r6452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6454, %r6452, %r6453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6457, %r6449, %r6454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6460, %r901, %r1062, %r6441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6465, %r6441, %r6464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6468, %r6460, %r6465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6471, %r912, %r1062, %r6452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6476, %r6452, %r6475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6479, %r6471, %r6476;
	// end inline asm
	// begin inline asm
	mov.b32 %r6487, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6498, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6484, %r901, %r1086, %r6487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6488, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6489, %r6487, %r6488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6492, %r6484, %r6489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6495, %r912, %r1086, %r6498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6500, %r6498, %r6499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6503, %r6495, %r6500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6506, %r901, %r1108, %r6487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6511, %r6487, %r6510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6514, %r6506, %r6511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6517, %r912, %r1108, %r6498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6522, %r6498, %r6521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6525, %r6517, %r6522;
	// end inline asm
	// begin inline asm
	mov.b32 %r6533, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6544, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6530, %r901, %r1132, %r6533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6534, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6535, %r6533, %r6534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6538, %r6530, %r6535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6541, %r912, %r1132, %r6544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6546, %r6544, %r6545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6549, %r6541, %r6546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6552, %r901, %r1154, %r6533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6557, %r6533, %r6556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6560, %r6552, %r6557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6563, %r912, %r1154, %r6544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6568, %r6544, %r6567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6571, %r6563, %r6568;
	// end inline asm
	// begin inline asm
	mov.b32 %r6579, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6590, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6576, %r901, %r1178, %r6579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6580, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6581, %r6579, %r6580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6584, %r6576, %r6581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6587, %r912, %r1178, %r6590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6592, %r6590, %r6591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6595, %r6587, %r6592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6598, %r901, %r1200, %r6579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6603, %r6579, %r6602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6606, %r6598, %r6603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6609, %r912, %r1200, %r6590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6614, %r6590, %r6613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6617, %r6609, %r6614;
	// end inline asm
	// begin inline asm
	mov.b32 %r6625, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6636, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6622, %r901, %r1224, %r6625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6626, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6627, %r6625, %r6626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6630, %r6622, %r6627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6633, %r912, %r1224, %r6636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6638, %r6636, %r6637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6641, %r6633, %r6638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6644, %r901, %r1246, %r6625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6649, %r6625, %r6648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6652, %r6644, %r6649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6655, %r912, %r1246, %r6636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6659, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6660, %r6636, %r6659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6663, %r6655, %r6660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6801, %r377, %r6308, %r6108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6798, %r377, %r6319, %r6114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6810, %r377, %r6330, %r6120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6807, %r377, %r6341, %r6126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6819, %r377, %r6354, %r6132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6816, %r377, %r6365, %r6138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6828, %r377, %r6376, %r6144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6825, %r377, %r6387, %r6150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6837, %r377, %r6400, %r6156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6834, %r377, %r6411, %r6162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6846, %r377, %r6422, %r6168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6843, %r377, %r6433, %r6174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6855, %r377, %r6446, %r6180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6852, %r377, %r6457, %r6186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6864, %r377, %r6468, %r6192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6861, %r377, %r6479, %r6198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6873, %r395, %r6492, %r6204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6870, %r395, %r6503, %r6210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6882, %r395, %r6514, %r6216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6879, %r395, %r6525, %r6222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6891, %r395, %r6538, %r6228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6888, %r395, %r6549, %r6234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6900, %r395, %r6560, %r6240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6897, %r395, %r6571, %r6246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6909, %r395, %r6584, %r6252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6906, %r395, %r6595, %r6258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6918, %r395, %r6606, %r6264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6915, %r395, %r6617, %r6270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6927, %r395, %r6630, %r6276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6924, %r395, %r6641, %r6282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6936, %r395, %r6652, %r6288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6933, %r395, %r6663, %r6294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6794, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6796, %r6794, %r6798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6799, %r459, %r6801, %r6796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6803, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6805, %r6803, %r6807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6808, %r459, %r6810, %r6805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6812, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6814, %r6812, %r6816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6817, %r459, %r6819, %r6814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6821, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6823, %r6821, %r6825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6826, %r459, %r6828, %r6823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6830, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6832, %r6830, %r6834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6835, %r459, %r6837, %r6832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6839, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6841, %r6839, %r6843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6844, %r459, %r6846, %r6841;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6848, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6850, %r6848, %r6852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6853, %r459, %r6855, %r6850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6857, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6859, %r6857, %r6861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6862, %r459, %r6864, %r6859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6866, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6868, %r6866, %r6870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6871, %r462, %r6873, %r6868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6875, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6877, %r6875, %r6879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6880, %r462, %r6882, %r6877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6884, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6886, %r6884, %r6888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6889, %r462, %r6891, %r6886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6893, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6895, %r6893, %r6897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6898, %r462, %r6900, %r6895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6902, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6904, %r6902, %r6906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6907, %r462, %r6909, %r6904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6911, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6913, %r6911, %r6915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6916, %r462, %r6918, %r6913;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6920, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6922, %r6920, %r6924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6925, %r462, %r6927, %r6922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6929, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6931, %r6929, %r6933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6934, %r462, %r6936, %r6931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6938, %r465, %r6801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6941, %r459, %r6798, %r6938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6945, %r465, %r6810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6948, %r459, %r6807, %r6945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6952, %r465, %r6819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6955, %r459, %r6816, %r6952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6959, %r465, %r6828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6962, %r459, %r6825, %r6959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6966, %r465, %r6837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6969, %r459, %r6834, %r6966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6973, %r465, %r6846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6976, %r459, %r6843, %r6973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6980, %r465, %r6855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6983, %r459, %r6852, %r6980;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6987, %r465, %r6864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6990, %r459, %r6861, %r6987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6994, %r468, %r6873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6997, %r462, %r6870, %r6994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7001, %r468, %r6882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7004, %r462, %r6879, %r7001;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7008, %r468, %r6891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7011, %r462, %r6888, %r7008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7015, %r468, %r6900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7018, %r462, %r6897, %r7015;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7022, %r468, %r6909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7025, %r462, %r6906, %r7022;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7029, %r468, %r6918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7032, %r462, %r6915, %r7029;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7036, %r468, %r6927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7039, %r462, %r6924, %r7036;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7043, %r468, %r6936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7046, %r462, %r6933, %r7043;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7217, %r7214}, {%r514, %r520, %r517, %r523}, {%r6799, %r6941}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7226, %r7223}, {%r514, %r520, %r517, %r523}, {%r6808, %r6948}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7235, %r7232}, {%r514, %r520, %r517, %r523}, {%r6817, %r6955}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7244, %r7241}, {%r514, %r520, %r517, %r523}, {%r6826, %r6962}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7253, %r7250}, {%r514, %r520, %r517, %r523}, {%r6835, %r6969}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7262, %r7259}, {%r514, %r520, %r517, %r523}, {%r6844, %r6976}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7271, %r7268}, {%r514, %r520, %r517, %r523}, {%r6853, %r6983}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7280, %r7277}, {%r514, %r520, %r517, %r523}, {%r6862, %r6990}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7289, %r7286}, {%r514, %r520, %r517, %r523}, {%r6871, %r6997}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7298, %r7295}, {%r514, %r520, %r517, %r523}, {%r6880, %r7004}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7307, %r7304}, {%r514, %r520, %r517, %r523}, {%r6889, %r7011}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7316, %r7313}, {%r514, %r520, %r517, %r523}, {%r6898, %r7018}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7325, %r7322}, {%r514, %r520, %r517, %r523}, {%r6907, %r7025}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7334, %r7331}, {%r514, %r520, %r517, %r523}, {%r6916, %r7032}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7343, %r7340}, {%r514, %r520, %r517, %r523}, {%r6925, %r7039}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7352, %r7349}, {%r514, %r520, %r517, %r523}, {%r6934, %r7046}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7210, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7212, %r7210, %r7214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7215, %r564, %r7217, %r7212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7219, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7221, %r7219, %r7223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7224, %r564, %r7226, %r7221;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7228, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7230, %r7228, %r7232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7233, %r564, %r7235, %r7230;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7237, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7239, %r7237, %r7241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7242, %r564, %r7244, %r7239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7246, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7248, %r7246, %r7250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7251, %r564, %r7253, %r7248;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7255, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7257, %r7255, %r7259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7260, %r564, %r7262, %r7257;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7264, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7266, %r7264, %r7268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7269, %r564, %r7271, %r7266;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7273, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7275, %r7273, %r7277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7278, %r564, %r7280, %r7275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7282, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7284, %r7282, %r7286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7287, %r564, %r7289, %r7284;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7291, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7293, %r7291, %r7295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7296, %r564, %r7298, %r7293;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7300, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7302, %r7300, %r7304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7305, %r564, %r7307, %r7302;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7309, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7311, %r7309, %r7313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7314, %r564, %r7316, %r7311;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7318, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7320, %r7318, %r7322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7323, %r564, %r7325, %r7320;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7327, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7329, %r7327, %r7331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7332, %r564, %r7334, %r7329;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7336, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7338, %r7336, %r7340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7341, %r564, %r7343, %r7338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7345, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7347, %r7345, %r7349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7350, %r564, %r7352, %r7347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7354, %r567, %r7217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7357, %r564, %r7214, %r7354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7361, %r567, %r7226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7364, %r564, %r7223, %r7361;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7368, %r567, %r7235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7371, %r564, %r7232, %r7368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7375, %r567, %r7244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7378, %r564, %r7241, %r7375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7382, %r567, %r7253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7385, %r564, %r7250, %r7382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7389, %r567, %r7262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7392, %r564, %r7259, %r7389;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7396, %r567, %r7271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7399, %r564, %r7268, %r7396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7403, %r567, %r7280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7406, %r564, %r7277, %r7403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7410, %r567, %r7289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7413, %r564, %r7286, %r7410;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7417, %r567, %r7298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7420, %r564, %r7295, %r7417;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7424, %r567, %r7307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7427, %r564, %r7304, %r7424;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7431, %r567, %r7316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7434, %r564, %r7313, %r7431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7438, %r567, %r7325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7441, %r564, %r7322, %r7438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7445, %r567, %r7334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7448, %r564, %r7331, %r7445;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7452, %r567, %r7343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7455, %r564, %r7340, %r7452;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7459, %r567, %r7352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7462, %r564, %r7349, %r7459;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7755, %r7758}, {%r602, %r608, %r605, %r611}, {%r7215, %r7357}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7761, %r7764}, {%r602, %r608, %r605, %r611}, {%r7224, %r7364}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7767, %r7770}, {%r602, %r608, %r605, %r611}, {%r7233, %r7371}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7773, %r7776}, {%r602, %r608, %r605, %r611}, {%r7242, %r7378}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7779, %r7782}, {%r602, %r608, %r605, %r611}, {%r7251, %r7385}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7785, %r7788}, {%r602, %r608, %r605, %r611}, {%r7260, %r7392}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7791, %r7794}, {%r602, %r608, %r605, %r611}, {%r7269, %r7399}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7797, %r7800}, {%r602, %r608, %r605, %r611}, {%r7278, %r7406}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7756, %r7759}, {%r602, %r608, %r605, %r611}, {%r7287, %r7413}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7762, %r7765}, {%r602, %r608, %r605, %r611}, {%r7296, %r7420}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7768, %r7771}, {%r602, %r608, %r605, %r611}, {%r7305, %r7427}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7774, %r7777}, {%r602, %r608, %r605, %r611}, {%r7314, %r7434}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7780, %r7783}, {%r602, %r608, %r605, %r611}, {%r7323, %r7441}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7786, %r7789}, {%r602, %r608, %r605, %r611}, {%r7332, %r7448}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7792, %r7795}, {%r602, %r608, %r605, %r611}, {%r7341, %r7455}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7798, %r7801}, {%r602, %r608, %r605, %r611}, {%r7350, %r7462}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7754, %r7755, %r7756;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7757, %r7758, %r7759;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7760, %r7761, %r7762;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7763, %r7764, %r7765;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7766, %r7767, %r7768;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7769, %r7770, %r7771;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7772, %r7773, %r7774;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7775, %r7776, %r7777;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7778, %r7779, %r7780;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7781, %r7782, %r7783;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7784, %r7785, %r7786;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7787, %r7788, %r7789;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7790, %r7791, %r7792;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7793, %r7794, %r7795;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7796, %r7797, %r7798;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7799, %r7800, %r7801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7802, %r7755, %r7756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7805, %r7758, %r7759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7808, %r7761, %r7762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7811, %r7764, %r7765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7814, %r7767, %r7768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7817, %r7770, %r7771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7820, %r7773, %r7774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7823, %r7776, %r7777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7826, %r7779, %r7780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7829, %r7782, %r7783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7832, %r7785, %r7786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7835, %r7788, %r7789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7838, %r7791, %r7792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7841, %r7794, %r7795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7844, %r7797, %r7798;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7847, %r7800, %r7801;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7850, %r184, %r7754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7853, %r184, %r7757;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7856, %r184, %r7760;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7859, %r184, %r7763;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7862, %r184, %r7766;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7865, %r184, %r7769;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7868, %r184, %r7772;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7871, %r184, %r7775;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7874, %r184, %r7778;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7877, %r184, %r7781;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7880, %r184, %r7784;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7883, %r184, %r7787;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7886, %r184, %r7790;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7889, %r184, %r7793;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7892, %r184, %r7796;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7895, %r184, %r7799;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7898, %r185, %r7802;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7901, %r185, %r7805;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7904, %r185, %r7808;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7907, %r185, %r7811;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7910, %r185, %r7814;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7913, %r185, %r7817;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7916, %r185, %r7820;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7919, %r185, %r7823;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7922, %r185, %r7826;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7925, %r185, %r7829;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7928, %r185, %r7832;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7931, %r185, %r7835;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7934, %r185, %r7838;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7937, %r185, %r7841;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7940, %r185, %r7844;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7943, %r185, %r7847;
	// end inline asm
	// begin inline asm
	mov.b32 %r7946, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7947, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7948, %r7850, %r7946;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7951, %r7948, %r7947;
	// end inline asm
	// begin inline asm
	mov.b32 %r7954, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7955, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7956, %r7853, %r7954;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7959, %r7956, %r7955;
	// end inline asm
	// begin inline asm
	mov.b32 %r7962, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7963, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7964, %r7856, %r7962;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7967, %r7964, %r7963;
	// end inline asm
	// begin inline asm
	mov.b32 %r7970, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7971, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7972, %r7859, %r7970;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7975, %r7972, %r7971;
	// end inline asm
	// begin inline asm
	mov.b32 %r7978, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7979, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7980, %r7862, %r7978;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7983, %r7980, %r7979;
	// end inline asm
	// begin inline asm
	mov.b32 %r7986, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7987, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7988, %r7865, %r7986;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7991, %r7988, %r7987;
	// end inline asm
	// begin inline asm
	mov.b32 %r7994, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7995, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7996, %r7868, %r7994;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7999, %r7996, %r7995;
	// end inline asm
	// begin inline asm
	mov.b32 %r8002, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8003, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8004, %r7871, %r8002;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8007, %r8004, %r8003;
	// end inline asm
	// begin inline asm
	mov.b32 %r8010, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8011, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8012, %r7874, %r8010;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8015, %r8012, %r8011;
	// end inline asm
	// begin inline asm
	mov.b32 %r8018, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8019, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8020, %r7877, %r8018;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8023, %r8020, %r8019;
	// end inline asm
	// begin inline asm
	mov.b32 %r8026, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8027, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8028, %r7880, %r8026;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8031, %r8028, %r8027;
	// end inline asm
	// begin inline asm
	mov.b32 %r8034, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8035, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8036, %r7883, %r8034;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8039, %r8036, %r8035;
	// end inline asm
	// begin inline asm
	mov.b32 %r8042, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8043, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8044, %r7886, %r8042;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8047, %r8044, %r8043;
	// end inline asm
	// begin inline asm
	mov.b32 %r8050, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8051, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8052, %r7889, %r8050;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8055, %r8052, %r8051;
	// end inline asm
	// begin inline asm
	mov.b32 %r8058, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8059, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8060, %r7892, %r8058;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8063, %r8060, %r8059;
	// end inline asm
	// begin inline asm
	mov.b32 %r8066, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8067, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8068, %r7895, %r8066;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8071, %r8068, %r8067;
	// end inline asm
	// begin inline asm
	mov.b32 %r8074, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8075, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8076, %r7898, %r8074;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8079, %r8076, %r8075;
	// end inline asm
	// begin inline asm
	mov.b32 %r8082, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8083, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8084, %r7901, %r8082;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8087, %r8084, %r8083;
	// end inline asm
	// begin inline asm
	mov.b32 %r8090, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8091, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8092, %r7904, %r8090;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8095, %r8092, %r8091;
	// end inline asm
	// begin inline asm
	mov.b32 %r8098, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8099, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8100, %r7907, %r8098;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8103, %r8100, %r8099;
	// end inline asm
	// begin inline asm
	mov.b32 %r8106, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8107, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8108, %r7910, %r8106;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8111, %r8108, %r8107;
	// end inline asm
	// begin inline asm
	mov.b32 %r8114, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8115, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8116, %r7913, %r8114;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8119, %r8116, %r8115;
	// end inline asm
	// begin inline asm
	mov.b32 %r8122, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8123, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8124, %r7916, %r8122;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8127, %r8124, %r8123;
	// end inline asm
	// begin inline asm
	mov.b32 %r8130, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8131, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8132, %r7919, %r8130;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8135, %r8132, %r8131;
	// end inline asm
	// begin inline asm
	mov.b32 %r8138, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8139, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8140, %r7922, %r8138;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8143, %r8140, %r8139;
	// end inline asm
	// begin inline asm
	mov.b32 %r8146, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8147, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8148, %r7925, %r8146;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8151, %r8148, %r8147;
	// end inline asm
	// begin inline asm
	mov.b32 %r8154, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8155, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8156, %r7928, %r8154;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8159, %r8156, %r8155;
	// end inline asm
	// begin inline asm
	mov.b32 %r8162, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8163, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8164, %r7931, %r8162;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8167, %r8164, %r8163;
	// end inline asm
	// begin inline asm
	mov.b32 %r8170, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8171, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8172, %r7934, %r8170;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8175, %r8172, %r8171;
	// end inline asm
	// begin inline asm
	mov.b32 %r8178, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8179, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8180, %r7937, %r8178;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8183, %r8180, %r8179;
	// end inline asm
	// begin inline asm
	mov.b32 %r8186, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8187, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8188, %r7940, %r8186;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8191, %r8188, %r8187;
	// end inline asm
	// begin inline asm
	mov.b32 %r8194, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8195, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8196, %r7943, %r8194;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8199, %r8196, %r8195;
	// end inline asm
	// begin inline asm
	mov.b32 %r8205, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8204, %r8205, %r8203;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8207, %r7951, %r8204;
	// end inline asm
	// begin inline asm
	mov.b32 %r8210, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8211, %r8205, %r8210;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8214, %r7959, %r8211;
	// end inline asm
	// begin inline asm
	mov.b32 %r8217, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8218, %r8205, %r8217;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8221, %r7967, %r8218;
	// end inline asm
	// begin inline asm
	mov.b32 %r8224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8225, %r8205, %r8224;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8228, %r7975, %r8225;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8231, %r8207, %r8221, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8235, %r8214, %r8228, %r4418;
	// end inline asm
	shl.b32 	%r8242, %r8235, 4;
	// begin inline asm
	lop3.b32 %r8239, %r4424, %r8231, %r8242, 202;
	// end inline asm
	xor.b32  	%r16232, %r8239, -2004318072;
	// begin inline asm
	mov.b32 %r8246, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8245, %r8246, %r8244;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8248, %r7983, %r8245;
	// end inline asm
	// begin inline asm
	mov.b32 %r8251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8252, %r8246, %r8251;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8255, %r7991, %r8252;
	// end inline asm
	// begin inline asm
	mov.b32 %r8258, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8259, %r8246, %r8258;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8262, %r7999, %r8259;
	// end inline asm
	// begin inline asm
	mov.b32 %r8265, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8266, %r8246, %r8265;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8269, %r8007, %r8266;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8272, %r8248, %r8262, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8276, %r8255, %r8269, %r4418;
	// end inline asm
	shl.b32 	%r8283, %r8276, 4;
	// begin inline asm
	lop3.b32 %r8280, %r4424, %r8272, %r8283, 202;
	// end inline asm
	xor.b32  	%r16233, %r8280, -2004318072;
	// begin inline asm
	mov.b32 %r8287, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8286, %r8287, %r8285;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8289, %r8015, %r8286;
	// end inline asm
	// begin inline asm
	mov.b32 %r8292, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8293, %r8287, %r8292;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8296, %r8023, %r8293;
	// end inline asm
	// begin inline asm
	mov.b32 %r8299, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8300, %r8287, %r8299;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8303, %r8031, %r8300;
	// end inline asm
	// begin inline asm
	mov.b32 %r8306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8307, %r8287, %r8306;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8310, %r8039, %r8307;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8313, %r8289, %r8303, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8317, %r8296, %r8310, %r4418;
	// end inline asm
	shl.b32 	%r8324, %r8317, 4;
	// begin inline asm
	lop3.b32 %r8321, %r4424, %r8313, %r8324, 202;
	// end inline asm
	xor.b32  	%r16234, %r8321, -2004318072;
	// begin inline asm
	mov.b32 %r8328, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8327, %r8328, %r8326;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8330, %r8047, %r8327;
	// end inline asm
	// begin inline asm
	mov.b32 %r8333, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8334, %r8328, %r8333;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8337, %r8055, %r8334;
	// end inline asm
	// begin inline asm
	mov.b32 %r8340, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8341, %r8328, %r8340;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8344, %r8063, %r8341;
	// end inline asm
	// begin inline asm
	mov.b32 %r8347, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8348, %r8328, %r8347;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8351, %r8071, %r8348;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8354, %r8330, %r8344, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8358, %r8337, %r8351, %r4418;
	// end inline asm
	shl.b32 	%r8365, %r8358, 4;
	// begin inline asm
	lop3.b32 %r8362, %r4424, %r8354, %r8365, 202;
	// end inline asm
	xor.b32  	%r16235, %r8362, -2004318072;
	// begin inline asm
	mov.b32 %r8369, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8368, %r8369, %r8367;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8371, %r8079, %r8368;
	// end inline asm
	// begin inline asm
	mov.b32 %r8374, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8375, %r8369, %r8374;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8378, %r8087, %r8375;
	// end inline asm
	// begin inline asm
	mov.b32 %r8381, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8382, %r8369, %r8381;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8385, %r8095, %r8382;
	// end inline asm
	// begin inline asm
	mov.b32 %r8388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8389, %r8369, %r8388;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8392, %r8103, %r8389;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8395, %r8371, %r8385, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8399, %r8378, %r8392, %r4418;
	// end inline asm
	shl.b32 	%r8406, %r8399, 4;
	// begin inline asm
	lop3.b32 %r8403, %r4424, %r8395, %r8406, 202;
	// end inline asm
	xor.b32  	%r16236, %r8403, -2004318072;
	// begin inline asm
	mov.b32 %r8410, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8409, %r8410, %r8408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8412, %r8111, %r8409;
	// end inline asm
	// begin inline asm
	mov.b32 %r8415, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8416, %r8410, %r8415;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8419, %r8119, %r8416;
	// end inline asm
	// begin inline asm
	mov.b32 %r8422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8423, %r8410, %r8422;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8426, %r8127, %r8423;
	// end inline asm
	// begin inline asm
	mov.b32 %r8429, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8430, %r8410, %r8429;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8433, %r8135, %r8430;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8436, %r8412, %r8426, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8440, %r8419, %r8433, %r4418;
	// end inline asm
	shl.b32 	%r8447, %r8440, 4;
	// begin inline asm
	lop3.b32 %r8444, %r4424, %r8436, %r8447, 202;
	// end inline asm
	xor.b32  	%r16237, %r8444, -2004318072;
	// begin inline asm
	mov.b32 %r8451, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8449, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8450, %r8451, %r8449;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8453, %r8143, %r8450;
	// end inline asm
	// begin inline asm
	mov.b32 %r8456, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8457, %r8451, %r8456;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8460, %r8151, %r8457;
	// end inline asm
	// begin inline asm
	mov.b32 %r8463, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8464, %r8451, %r8463;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8467, %r8159, %r8464;
	// end inline asm
	// begin inline asm
	mov.b32 %r8470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8471, %r8451, %r8470;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8474, %r8167, %r8471;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8477, %r8453, %r8467, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8481, %r8460, %r8474, %r4418;
	// end inline asm
	shl.b32 	%r8488, %r8481, 4;
	// begin inline asm
	lop3.b32 %r8485, %r4424, %r8477, %r8488, 202;
	// end inline asm
	xor.b32  	%r16238, %r8485, -2004318072;
	// begin inline asm
	mov.b32 %r8492, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8491, %r8492, %r8490;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8494, %r8175, %r8491;
	// end inline asm
	// begin inline asm
	mov.b32 %r8497, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8498, %r8492, %r8497;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8501, %r8183, %r8498;
	// end inline asm
	// begin inline asm
	mov.b32 %r8504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8505, %r8492, %r8504;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8508, %r8191, %r8505;
	// end inline asm
	// begin inline asm
	mov.b32 %r8511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8512, %r8492, %r8511;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8515, %r8199, %r8512;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8518, %r8494, %r8508, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8522, %r8501, %r8515, %r4418;
	// end inline asm
	shl.b32 	%r8529, %r8522, 4;
	// begin inline asm
	lop3.b32 %r8526, %r4424, %r8518, %r8529, 202;
	// end inline asm
	xor.b32  	%r16239, %r8526, -2004318072;
	st.shared.u32 	[%rd107], %r16232;
	st.shared.u32 	[%rd109], %r16233;
	st.shared.u32 	[%rd111], %r16234;
	st.shared.u32 	[%rd113], %r16235;
	st.shared.u32 	[%rd115], %r16236;
	st.shared.u32 	[%rd117], %r16237;
	st.shared.u32 	[%rd119], %r16238;
	st.shared.u32 	[%rd121], %r16239;
	ld.shared.u32 	%r16379, [%rd91];
	ld.shared.u32 	%r16380, [%rd93];
	ld.shared.u32 	%r16381, [%rd95];
	ld.shared.u32 	%r16382, [%rd97];
	ld.shared.u32 	%r16391, [%rd99];
	ld.shared.u32 	%r16392, [%rd101];
	ld.shared.u32 	%r16393, [%rd103];
	ld.shared.u32 	%r16394, [%rd105];
	// begin inline asm
	mov.b32 %r8535, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8546, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8534, %r16379, -2004318072;
	// begin inline asm
	lop3.b32 %r8532, %r901, %r8534, %r8535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8537, %r8535, %r8536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8540, %r8532, %r8537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8543, %r912, %r8534, %r8546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8548, %r8546, %r8547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8551, %r8543, %r8548;
	// end inline asm
	shr.u32 	%r8556, %r8534, 8;
	// begin inline asm
	lop3.b32 %r8554, %r901, %r8556, %r8535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8559, %r8535, %r8558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8562, %r8554, %r8559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8565, %r912, %r8556, %r8546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8569, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8570, %r8546, %r8569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8573, %r8565, %r8570;
	// end inline asm
	// begin inline asm
	mov.b32 %r8581, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8592, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8580, %r16380, -2004318072;
	// begin inline asm
	lop3.b32 %r8578, %r901, %r8580, %r8581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8583, %r8581, %r8582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8586, %r8578, %r8583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8589, %r912, %r8580, %r8592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8594, %r8592, %r8593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8597, %r8589, %r8594;
	// end inline asm
	shr.u32 	%r8602, %r8580, 8;
	// begin inline asm
	lop3.b32 %r8600, %r901, %r8602, %r8581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8604, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8605, %r8581, %r8604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8608, %r8600, %r8605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8611, %r912, %r8602, %r8592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8615, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8616, %r8592, %r8615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8619, %r8611, %r8616;
	// end inline asm
	// begin inline asm
	mov.b32 %r8627, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8638, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8626, %r16381, -2004318072;
	// begin inline asm
	lop3.b32 %r8624, %r901, %r8626, %r8627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8628, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8629, %r8627, %r8628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8632, %r8624, %r8629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8635, %r912, %r8626, %r8638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8640, %r8638, %r8639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8643, %r8635, %r8640;
	// end inline asm
	shr.u32 	%r8648, %r8626, 8;
	// begin inline asm
	lop3.b32 %r8646, %r901, %r8648, %r8627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8650, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8651, %r8627, %r8650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8654, %r8646, %r8651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8657, %r912, %r8648, %r8638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8661, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8662, %r8638, %r8661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8665, %r8657, %r8662;
	// end inline asm
	// begin inline asm
	mov.b32 %r8673, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8684, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8672, %r16382, -2004318072;
	// begin inline asm
	lop3.b32 %r8670, %r901, %r8672, %r8673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8675, %r8673, %r8674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8678, %r8670, %r8675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8681, %r912, %r8672, %r8684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8685, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8686, %r8684, %r8685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8689, %r8681, %r8686;
	// end inline asm
	shr.u32 	%r8694, %r8672, 8;
	// begin inline asm
	lop3.b32 %r8692, %r901, %r8694, %r8673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8696, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8697, %r8673, %r8696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8700, %r8692, %r8697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8703, %r912, %r8694, %r8684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8707, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8708, %r8684, %r8707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8711, %r8703, %r8708;
	// end inline asm
	// begin inline asm
	mov.b32 %r8719, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8730, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8718, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r8716, %r901, %r8718, %r8719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8720, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8721, %r8719, %r8720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8724, %r8716, %r8721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8727, %r912, %r8718, %r8730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8731, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8732, %r8730, %r8731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8735, %r8727, %r8732;
	// end inline asm
	shr.u32 	%r8740, %r8718, 8;
	// begin inline asm
	lop3.b32 %r8738, %r901, %r8740, %r8719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8742, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8743, %r8719, %r8742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8746, %r8738, %r8743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8749, %r912, %r8740, %r8730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8753, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8754, %r8730, %r8753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8757, %r8749, %r8754;
	// end inline asm
	// begin inline asm
	mov.b32 %r8765, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8776, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8764, %r16392, -2004318072;
	// begin inline asm
	lop3.b32 %r8762, %r901, %r8764, %r8765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8766, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8767, %r8765, %r8766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8770, %r8762, %r8767;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8773, %r912, %r8764, %r8776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8777, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8778, %r8776, %r8777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8781, %r8773, %r8778;
	// end inline asm
	shr.u32 	%r8786, %r8764, 8;
	// begin inline asm
	lop3.b32 %r8784, %r901, %r8786, %r8765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8788, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8789, %r8765, %r8788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8792, %r8784, %r8789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8795, %r912, %r8786, %r8776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8799, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8800, %r8776, %r8799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8803, %r8795, %r8800;
	// end inline asm
	// begin inline asm
	mov.b32 %r8811, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8822, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8810, %r16393, -2004318072;
	// begin inline asm
	lop3.b32 %r8808, %r901, %r8810, %r8811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8812, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8813, %r8811, %r8812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8816, %r8808, %r8813;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8819, %r912, %r8810, %r8822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8823, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8824, %r8822, %r8823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8827, %r8819, %r8824;
	// end inline asm
	shr.u32 	%r8832, %r8810, 8;
	// begin inline asm
	lop3.b32 %r8830, %r901, %r8832, %r8811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8834, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8835, %r8811, %r8834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8838, %r8830, %r8835;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8841, %r912, %r8832, %r8822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8845, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8846, %r8822, %r8845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8849, %r8841, %r8846;
	// end inline asm
	// begin inline asm
	mov.b32 %r8857, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8868, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8856, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r8854, %r901, %r8856, %r8857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8858, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8859, %r8857, %r8858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8862, %r8854, %r8859;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8865, %r912, %r8856, %r8868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8870, %r8868, %r8869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8873, %r8865, %r8870;
	// end inline asm
	shr.u32 	%r8878, %r8856, 8;
	// begin inline asm
	lop3.b32 %r8876, %r901, %r8878, %r8857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8880, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8881, %r8857, %r8880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8884, %r8876, %r8881;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8887, %r912, %r8878, %r8868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8891, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8892, %r8868, %r8891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8895, %r8887, %r8892;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8898, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8900, %r8898, %r8540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8903, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8905, %r8903, %r8551;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8908, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8910, %r8908, %r8562;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8913, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8915, %r8913, %r8573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8918, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8920, %r8918, %r8586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8923, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8925, %r8923, %r8597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8928, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8930, %r8928, %r8608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8933, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8935, %r8933, %r8619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8938, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8940, %r8938, %r8632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8943, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8945, %r8943, %r8643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8948, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8950, %r8948, %r8654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8953, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8955, %r8953, %r8665;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8958, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8960, %r8958, %r8678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8963, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8965, %r8963, %r8689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8968, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8970, %r8968, %r8700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8973, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8975, %r8973, %r8711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8978, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8980, %r8978, %r8724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8983, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8985, %r8983, %r8735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8988, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8990, %r8988, %r8746;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8993, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8995, %r8993, %r8757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8998, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9000, %r8998, %r8770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9003, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9005, %r9003, %r8781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9008, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9010, %r9008, %r8792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9013, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9015, %r9013, %r8803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9018, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9020, %r9018, %r8816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9023, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9025, %r9023, %r8827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9028, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9030, %r9028, %r8838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9033, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9035, %r9033, %r8849;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9038, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9040, %r9038, %r8862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9043, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9045, %r9043, %r8873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9048, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9050, %r9048, %r8884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9053, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9055, %r9053, %r8895;
	// end inline asm
	// begin inline asm
	mov.b32 %r9063, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9074, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9060, %r901, %r2486, %r9063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9065, %r9063, %r9064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9068, %r9060, %r9065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9071, %r912, %r2486, %r9074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9075, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9076, %r9074, %r9075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9079, %r9071, %r9076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9082, %r901, %r2508, %r9063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9086, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9087, %r9063, %r9086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9090, %r9082, %r9087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9093, %r912, %r2508, %r9074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9098, %r9074, %r9097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9101, %r9093, %r9098;
	// end inline asm
	// begin inline asm
	mov.b32 %r9109, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9120, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9106, %r901, %r2532, %r9109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9110, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9111, %r9109, %r9110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9114, %r9106, %r9111;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9117, %r912, %r2532, %r9120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9122, %r9120, %r9121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9125, %r9117, %r9122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9128, %r901, %r2554, %r9109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9132, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9133, %r9109, %r9132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9136, %r9128, %r9133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9139, %r912, %r2554, %r9120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9144, %r9120, %r9143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9147, %r9139, %r9144;
	// end inline asm
	// begin inline asm
	mov.b32 %r9155, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9166, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9152, %r901, %r2578, %r9155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9156, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9157, %r9155, %r9156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9160, %r9152, %r9157;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9163, %r912, %r2578, %r9166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9168, %r9166, %r9167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9171, %r9163, %r9168;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9174, %r901, %r2600, %r9155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9178, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9179, %r9155, %r9178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9182, %r9174, %r9179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9185, %r912, %r2600, %r9166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9190, %r9166, %r9189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9193, %r9185, %r9190;
	// end inline asm
	// begin inline asm
	mov.b32 %r9201, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9212, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9198, %r901, %r2624, %r9201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9202, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9203, %r9201, %r9202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9206, %r9198, %r9203;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9209, %r912, %r2624, %r9212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9214, %r9212, %r9213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9217, %r9209, %r9214;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9220, %r901, %r2646, %r9201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9225, %r9201, %r9224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9228, %r9220, %r9225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9231, %r912, %r2646, %r9212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9236, %r9212, %r9235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9239, %r9231, %r9236;
	// end inline asm
	// begin inline asm
	mov.b32 %r9247, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9258, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9244, %r901, %r2670, %r9247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9248, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9249, %r9247, %r9248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9252, %r9244, %r9249;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9255, %r912, %r2670, %r9258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9259, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9260, %r9258, %r9259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9263, %r9255, %r9260;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9266, %r901, %r2692, %r9247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9270, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9271, %r9247, %r9270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9274, %r9266, %r9271;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9277, %r912, %r2692, %r9258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9281, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9282, %r9258, %r9281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9285, %r9277, %r9282;
	// end inline asm
	// begin inline asm
	mov.b32 %r9293, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9304, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9290, %r901, %r2716, %r9293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9294, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9295, %r9293, %r9294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9298, %r9290, %r9295;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9301, %r912, %r2716, %r9304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9306, %r9304, %r9305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9309, %r9301, %r9306;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9312, %r901, %r2738, %r9293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9316, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9317, %r9293, %r9316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9320, %r9312, %r9317;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9323, %r912, %r2738, %r9304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9327, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9328, %r9304, %r9327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9331, %r9323, %r9328;
	// end inline asm
	// begin inline asm
	mov.b32 %r9339, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9350, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9336, %r901, %r2762, %r9339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9340, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9341, %r9339, %r9340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9344, %r9336, %r9341;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9347, %r912, %r2762, %r9350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9352, %r9350, %r9351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9355, %r9347, %r9352;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9358, %r901, %r2784, %r9339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9362, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9363, %r9339, %r9362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9366, %r9358, %r9363;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9369, %r912, %r2784, %r9350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9374, %r9350, %r9373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9377, %r9369, %r9374;
	// end inline asm
	// begin inline asm
	mov.b32 %r9385, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9396, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9382, %r901, %r2808, %r9385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9386, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9387, %r9385, %r9386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9390, %r9382, %r9387;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9393, %r912, %r2808, %r9396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9398, %r9396, %r9397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9401, %r9393, %r9398;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9404, %r901, %r2830, %r9385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9409, %r9385, %r9408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9412, %r9404, %r9409;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9415, %r912, %r2830, %r9396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9420, %r9396, %r9419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9423, %r9415, %r9420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9426, %r305, %r9068, %r8900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9430, %r305, %r9079, %r8905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9434, %r305, %r9090, %r8910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9438, %r305, %r9101, %r8915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9442, %r305, %r9114, %r8920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9446, %r305, %r9125, %r8925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9450, %r305, %r9136, %r8930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9454, %r305, %r9147, %r8935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9458, %r305, %r9160, %r8940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9462, %r305, %r9171, %r8945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9466, %r305, %r9182, %r8950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9470, %r305, %r9193, %r8955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9474, %r305, %r9206, %r8960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9478, %r305, %r9217, %r8965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9482, %r305, %r9228, %r8970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9486, %r305, %r9239, %r8975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9490, %r323, %r9252, %r8980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9494, %r323, %r9263, %r8985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9498, %r323, %r9274, %r8990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9502, %r323, %r9285, %r8995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9506, %r323, %r9298, %r9000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9510, %r323, %r9309, %r9005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9514, %r323, %r9320, %r9010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9518, %r323, %r9331, %r9015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9522, %r323, %r9344, %r9020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9526, %r323, %r9355, %r9025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9530, %r323, %r9366, %r9030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9534, %r323, %r9377, %r9035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9538, %r323, %r9390, %r9040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9542, %r323, %r9401, %r9045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9546, %r323, %r9412, %r9050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9550, %r323, %r9423, %r9055;
	// end inline asm
	// begin inline asm
	mov.b32 %r9559, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9570, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9556, %r901, %r902, %r9559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9561, %r9559, %r9560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9564, %r9556, %r9561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9567, %r912, %r902, %r9570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9572, %r9570, %r9571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9575, %r9567, %r9572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9578, %r901, %r924, %r9559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9583, %r9559, %r9582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9586, %r9578, %r9583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9589, %r912, %r924, %r9570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9594, %r9570, %r9593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9597, %r9589, %r9594;
	// end inline asm
	// begin inline asm
	mov.b32 %r9605, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9616, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9602, %r901, %r948, %r9605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9607, %r9605, %r9606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9610, %r9602, %r9607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9613, %r912, %r948, %r9616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9618, %r9616, %r9617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9621, %r9613, %r9618;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9624, %r901, %r970, %r9605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9628, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9629, %r9605, %r9628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9632, %r9624, %r9629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9635, %r912, %r970, %r9616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9640, %r9616, %r9639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9643, %r9635, %r9640;
	// end inline asm
	// begin inline asm
	mov.b32 %r9651, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9662, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9648, %r901, %r994, %r9651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9653, %r9651, %r9652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9656, %r9648, %r9653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9659, %r912, %r994, %r9662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9664, %r9662, %r9663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9667, %r9659, %r9664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9670, %r901, %r1016, %r9651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9675, %r9651, %r9674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9678, %r9670, %r9675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9681, %r912, %r1016, %r9662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9685, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9686, %r9662, %r9685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9689, %r9681, %r9686;
	// end inline asm
	// begin inline asm
	mov.b32 %r9697, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9708, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9694, %r901, %r1040, %r9697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9698, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9699, %r9697, %r9698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9702, %r9694, %r9699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9705, %r912, %r1040, %r9708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9709, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9710, %r9708, %r9709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9713, %r9705, %r9710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9716, %r901, %r1062, %r9697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9720, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9721, %r9697, %r9720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9724, %r9716, %r9721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9727, %r912, %r1062, %r9708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9731, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9732, %r9708, %r9731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9735, %r9727, %r9732;
	// end inline asm
	// begin inline asm
	mov.b32 %r9743, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9754, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9740, %r901, %r1086, %r9743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9744, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9745, %r9743, %r9744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9748, %r9740, %r9745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9751, %r912, %r1086, %r9754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9755, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9756, %r9754, %r9755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9759, %r9751, %r9756;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9762, %r901, %r1108, %r9743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9766, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9767, %r9743, %r9766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9770, %r9762, %r9767;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9773, %r912, %r1108, %r9754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9777, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9778, %r9754, %r9777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9781, %r9773, %r9778;
	// end inline asm
	// begin inline asm
	mov.b32 %r9789, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9800, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9786, %r901, %r1132, %r9789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9790, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9791, %r9789, %r9790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9794, %r9786, %r9791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9797, %r912, %r1132, %r9800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9801, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9802, %r9800, %r9801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9805, %r9797, %r9802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9808, %r901, %r1154, %r9789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9812, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9813, %r9789, %r9812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9816, %r9808, %r9813;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9819, %r912, %r1154, %r9800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9823, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9824, %r9800, %r9823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9827, %r9819, %r9824;
	// end inline asm
	// begin inline asm
	mov.b32 %r9835, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9846, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9832, %r901, %r1178, %r9835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9836, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9837, %r9835, %r9836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9840, %r9832, %r9837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9843, %r912, %r1178, %r9846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9847, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9848, %r9846, %r9847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9851, %r9843, %r9848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9854, %r901, %r1200, %r9835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9858, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9859, %r9835, %r9858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9862, %r9854, %r9859;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9865, %r912, %r1200, %r9846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9870, %r9846, %r9869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9873, %r9865, %r9870;
	// end inline asm
	// begin inline asm
	mov.b32 %r9881, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9892, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9878, %r901, %r1224, %r9881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9882, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9883, %r9881, %r9882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9886, %r9878, %r9883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9889, %r912, %r1224, %r9892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9893, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9894, %r9892, %r9893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9897, %r9889, %r9894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9900, %r901, %r1246, %r9881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9904, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9905, %r9881, %r9904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9908, %r9900, %r9905;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9911, %r912, %r1246, %r9892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9915, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9916, %r9892, %r9915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9919, %r9911, %r9916;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9922, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9924, %r9922, %r9564, %r9426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9928, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9930, %r9928, %r9575, %r9430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9934, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9936, %r9934, %r9586, %r9434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9940, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9942, %r9940, %r9597, %r9438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9946, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9948, %r9946, %r9610, %r9442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9952, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9954, %r9952, %r9621, %r9446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9958, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9960, %r9958, %r9632, %r9450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9964, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9966, %r9964, %r9643, %r9454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9970, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9972, %r9970, %r9656, %r9458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9976, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9978, %r9976, %r9667, %r9462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9982, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9984, %r9982, %r9678, %r9466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9988, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9990, %r9988, %r9689, %r9470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9994, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9996, %r9994, %r9702, %r9474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10000, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10002, %r10000, %r9713, %r9478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10006, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10008, %r10006, %r9724, %r9482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10012, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10014, %r10012, %r9735, %r9486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10018, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10020, %r10018, %r9748, %r9490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10024, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10026, %r10024, %r9759, %r9494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10030, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10032, %r10030, %r9770, %r9498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10036, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10038, %r10036, %r9781, %r9502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10042, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10044, %r10042, %r9794, %r9506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10048, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10050, %r10048, %r9805, %r9510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10054, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10056, %r10054, %r9816, %r9514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10060, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10062, %r10060, %r9827, %r9518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10066, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10068, %r10066, %r9840, %r9522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10072, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10074, %r10072, %r9851, %r9526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10078, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10080, %r10078, %r9862, %r9530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10084, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10086, %r10084, %r9873, %r9534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10090, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10092, %r10090, %r9886, %r9538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10096, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10098, %r10096, %r9897, %r9542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10102, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10104, %r10102, %r9908, %r9546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10108, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10110, %r10108, %r9919, %r9550;
	// end inline asm
	// begin inline asm
	mov.b32 %r10119, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10130, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10116, %r901, %r4718, %r10119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10120, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10121, %r10119, %r10120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10124, %r10116, %r10121;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10127, %r912, %r4718, %r10130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10131, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10132, %r10130, %r10131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10135, %r10127, %r10132;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10138, %r901, %r4740, %r10119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10143, %r10119, %r10142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10146, %r10138, %r10143;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10149, %r912, %r4740, %r10130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10153, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10154, %r10130, %r10153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10157, %r10149, %r10154;
	// end inline asm
	// begin inline asm
	mov.b32 %r10165, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10176, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10162, %r901, %r4764, %r10165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10166, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10167, %r10165, %r10166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10170, %r10162, %r10167;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10173, %r912, %r4764, %r10176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10177, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10178, %r10176, %r10177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10181, %r10173, %r10178;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10184, %r901, %r4786, %r10165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10188, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10189, %r10165, %r10188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10192, %r10184, %r10189;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10195, %r912, %r4786, %r10176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10199, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10200, %r10176, %r10199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10203, %r10195, %r10200;
	// end inline asm
	// begin inline asm
	mov.b32 %r10211, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10222, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10208, %r901, %r4810, %r10211, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10212, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10213, %r10211, %r10212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10216, %r10208, %r10213;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10219, %r912, %r4810, %r10222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10223, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10224, %r10222, %r10223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10227, %r10219, %r10224;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10230, %r901, %r4832, %r10211, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10234, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10235, %r10211, %r10234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10238, %r10230, %r10235;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10241, %r912, %r4832, %r10222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10245, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10246, %r10222, %r10245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10249, %r10241, %r10246;
	// end inline asm
	// begin inline asm
	mov.b32 %r10257, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10268, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10254, %r901, %r4856, %r10257, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10258, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10259, %r10257, %r10258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10262, %r10254, %r10259;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10265, %r912, %r4856, %r10268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10269, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10270, %r10268, %r10269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10273, %r10265, %r10270;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10276, %r901, %r4878, %r10257, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10280, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10281, %r10257, %r10280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10284, %r10276, %r10281;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10287, %r912, %r4878, %r10268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10291, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10292, %r10268, %r10291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10295, %r10287, %r10292;
	// end inline asm
	// begin inline asm
	mov.b32 %r10303, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10314, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10300, %r901, %r4902, %r10303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10304, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10305, %r10303, %r10304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10308, %r10300, %r10305;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10311, %r912, %r4902, %r10314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10315, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10316, %r10314, %r10315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10319, %r10311, %r10316;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10322, %r901, %r4924, %r10303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10327, %r10303, %r10326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10330, %r10322, %r10327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10333, %r912, %r4924, %r10314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10337, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10338, %r10314, %r10337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10341, %r10333, %r10338;
	// end inline asm
	// begin inline asm
	mov.b32 %r10349, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10360, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10346, %r901, %r4948, %r10349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10350, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10351, %r10349, %r10350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10354, %r10346, %r10351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10357, %r912, %r4948, %r10360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10361, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10362, %r10360, %r10361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10365, %r10357, %r10362;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10368, %r901, %r4970, %r10349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10373, %r10349, %r10372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10376, %r10368, %r10373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10379, %r912, %r4970, %r10360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10384, %r10360, %r10383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10387, %r10379, %r10384;
	// end inline asm
	// begin inline asm
	mov.b32 %r10395, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10406, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10392, %r901, %r4994, %r10395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10396, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10397, %r10395, %r10396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10400, %r10392, %r10397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10403, %r912, %r4994, %r10406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10408, %r10406, %r10407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10411, %r10403, %r10408;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10414, %r901, %r5016, %r10395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10419, %r10395, %r10418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10422, %r10414, %r10419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10425, %r912, %r5016, %r10406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10429, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10430, %r10406, %r10429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10433, %r10425, %r10430;
	// end inline asm
	// begin inline asm
	mov.b32 %r10441, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10452, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10438, %r901, %r5040, %r10441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10443, %r10441, %r10442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10446, %r10438, %r10443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10449, %r912, %r5040, %r10452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10454, %r10452, %r10453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10457, %r10449, %r10454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10460, %r901, %r5062, %r10441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10465, %r10441, %r10464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10468, %r10460, %r10465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10471, %r912, %r5062, %r10452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10476, %r10452, %r10475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10479, %r10471, %r10476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10617, %r377, %r10124, %r9924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10614, %r377, %r10135, %r9930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10626, %r377, %r10146, %r9936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10623, %r377, %r10157, %r9942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10635, %r377, %r10170, %r9948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10632, %r377, %r10181, %r9954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10644, %r377, %r10192, %r9960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10641, %r377, %r10203, %r9966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10653, %r377, %r10216, %r9972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10650, %r377, %r10227, %r9978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10662, %r377, %r10238, %r9984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10659, %r377, %r10249, %r9990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10671, %r377, %r10262, %r9996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10668, %r377, %r10273, %r10002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10680, %r377, %r10284, %r10008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10677, %r377, %r10295, %r10014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10689, %r395, %r10308, %r10020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10686, %r395, %r10319, %r10026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10698, %r395, %r10330, %r10032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10695, %r395, %r10341, %r10038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10707, %r395, %r10354, %r10044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10704, %r395, %r10365, %r10050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10716, %r395, %r10376, %r10056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10713, %r395, %r10387, %r10062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10725, %r395, %r10400, %r10068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10722, %r395, %r10411, %r10074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10734, %r395, %r10422, %r10080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10731, %r395, %r10433, %r10086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10743, %r395, %r10446, %r10092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10740, %r395, %r10457, %r10098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10752, %r395, %r10468, %r10104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10749, %r395, %r10479, %r10110;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10610, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10612, %r10610, %r10614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10615, %r459, %r10617, %r10612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10619, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10621, %r10619, %r10623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10624, %r459, %r10626, %r10621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10628, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10630, %r10628, %r10632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10633, %r459, %r10635, %r10630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10637, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10639, %r10637, %r10641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10642, %r459, %r10644, %r10639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10646, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10648, %r10646, %r10650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10651, %r459, %r10653, %r10648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10655, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10657, %r10655, %r10659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10660, %r459, %r10662, %r10657;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10664, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10666, %r10664, %r10668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10669, %r459, %r10671, %r10666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10673, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10675, %r10673, %r10677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10678, %r459, %r10680, %r10675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10682, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10684, %r10682, %r10686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10687, %r462, %r10689, %r10684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10691, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10693, %r10691, %r10695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10696, %r462, %r10698, %r10693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10700, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10702, %r10700, %r10704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10705, %r462, %r10707, %r10702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10709, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10711, %r10709, %r10713;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10714, %r462, %r10716, %r10711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10718, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10720, %r10718, %r10722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10723, %r462, %r10725, %r10720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10727, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10729, %r10727, %r10731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10732, %r462, %r10734, %r10729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10736, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10738, %r10736, %r10740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10741, %r462, %r10743, %r10738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10745, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10747, %r10745, %r10749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10750, %r462, %r10752, %r10747;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10754, %r465, %r10617;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10757, %r459, %r10614, %r10754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10761, %r465, %r10626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10764, %r459, %r10623, %r10761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10768, %r465, %r10635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10771, %r459, %r10632, %r10768;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10775, %r465, %r10644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10778, %r459, %r10641, %r10775;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10782, %r465, %r10653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10785, %r459, %r10650, %r10782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10789, %r465, %r10662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10792, %r459, %r10659, %r10789;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10796, %r465, %r10671;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10799, %r459, %r10668, %r10796;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10803, %r465, %r10680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10806, %r459, %r10677, %r10803;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10810, %r468, %r10689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10813, %r462, %r10686, %r10810;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10817, %r468, %r10698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10820, %r462, %r10695, %r10817;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10824, %r468, %r10707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10827, %r462, %r10704, %r10824;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10831, %r468, %r10716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10834, %r462, %r10713, %r10831;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10838, %r468, %r10725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10841, %r462, %r10722, %r10838;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10845, %r468, %r10734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10848, %r462, %r10731, %r10845;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10852, %r468, %r10743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10855, %r462, %r10740, %r10852;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10859, %r468, %r10752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10862, %r462, %r10749, %r10859;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11033, %r11030}, {%r514, %r520, %r517, %r523}, {%r10615, %r10757}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11042, %r11039}, {%r514, %r520, %r517, %r523}, {%r10624, %r10764}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11051, %r11048}, {%r514, %r520, %r517, %r523}, {%r10633, %r10771}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11060, %r11057}, {%r514, %r520, %r517, %r523}, {%r10642, %r10778}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11069, %r11066}, {%r514, %r520, %r517, %r523}, {%r10651, %r10785}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11078, %r11075}, {%r514, %r520, %r517, %r523}, {%r10660, %r10792}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11087, %r11084}, {%r514, %r520, %r517, %r523}, {%r10669, %r10799}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11096, %r11093}, {%r514, %r520, %r517, %r523}, {%r10678, %r10806}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11105, %r11102}, {%r514, %r520, %r517, %r523}, {%r10687, %r10813}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11114, %r11111}, {%r514, %r520, %r517, %r523}, {%r10696, %r10820}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11123, %r11120}, {%r514, %r520, %r517, %r523}, {%r10705, %r10827}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11132, %r11129}, {%r514, %r520, %r517, %r523}, {%r10714, %r10834}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11141, %r11138}, {%r514, %r520, %r517, %r523}, {%r10723, %r10841}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11150, %r11147}, {%r514, %r520, %r517, %r523}, {%r10732, %r10848}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11159, %r11156}, {%r514, %r520, %r517, %r523}, {%r10741, %r10855}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11168, %r11165}, {%r514, %r520, %r517, %r523}, {%r10750, %r10862}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11026, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11028, %r11026, %r11030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11031, %r564, %r11033, %r11028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11035, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11037, %r11035, %r11039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11040, %r564, %r11042, %r11037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11044, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11046, %r11044, %r11048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11049, %r564, %r11051, %r11046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11053, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11055, %r11053, %r11057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11058, %r564, %r11060, %r11055;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11062, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11064, %r11062, %r11066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11067, %r564, %r11069, %r11064;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11071, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11073, %r11071, %r11075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11076, %r564, %r11078, %r11073;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11080, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11082, %r11080, %r11084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11085, %r564, %r11087, %r11082;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11089, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11091, %r11089, %r11093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11094, %r564, %r11096, %r11091;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11098, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11100, %r11098, %r11102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11103, %r564, %r11105, %r11100;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11107, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11109, %r11107, %r11111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11112, %r564, %r11114, %r11109;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11116, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11118, %r11116, %r11120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11121, %r564, %r11123, %r11118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11125, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11127, %r11125, %r11129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11130, %r564, %r11132, %r11127;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11134, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11136, %r11134, %r11138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11139, %r564, %r11141, %r11136;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11143, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11145, %r11143, %r11147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11148, %r564, %r11150, %r11145;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11152, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11154, %r11152, %r11156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11157, %r564, %r11159, %r11154;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11161, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11163, %r11161, %r11165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11166, %r564, %r11168, %r11163;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11170, %r567, %r11033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11173, %r564, %r11030, %r11170;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11177, %r567, %r11042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11180, %r564, %r11039, %r11177;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11184, %r567, %r11051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11187, %r564, %r11048, %r11184;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11191, %r567, %r11060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11194, %r564, %r11057, %r11191;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11198, %r567, %r11069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11201, %r564, %r11066, %r11198;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11205, %r567, %r11078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11208, %r564, %r11075, %r11205;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11212, %r567, %r11087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11215, %r564, %r11084, %r11212;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11219, %r567, %r11096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11222, %r564, %r11093, %r11219;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11226, %r567, %r11105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11229, %r564, %r11102, %r11226;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11233, %r567, %r11114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11236, %r564, %r11111, %r11233;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11240, %r567, %r11123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11243, %r564, %r11120, %r11240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11247, %r567, %r11132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11250, %r564, %r11129, %r11247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11254, %r567, %r11141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11257, %r564, %r11138, %r11254;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11261, %r567, %r11150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11264, %r564, %r11147, %r11261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11268, %r567, %r11159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11271, %r564, %r11156, %r11268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11275, %r567, %r11168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11278, %r564, %r11165, %r11275;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11571, %r11574}, {%r602, %r608, %r605, %r611}, {%r11031, %r11173}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11577, %r11580}, {%r602, %r608, %r605, %r611}, {%r11040, %r11180}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11583, %r11586}, {%r602, %r608, %r605, %r611}, {%r11049, %r11187}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11589, %r11592}, {%r602, %r608, %r605, %r611}, {%r11058, %r11194}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11595, %r11598}, {%r602, %r608, %r605, %r611}, {%r11067, %r11201}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11601, %r11604}, {%r602, %r608, %r605, %r611}, {%r11076, %r11208}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11607, %r11610}, {%r602, %r608, %r605, %r611}, {%r11085, %r11215}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11613, %r11616}, {%r602, %r608, %r605, %r611}, {%r11094, %r11222}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11572, %r11575}, {%r602, %r608, %r605, %r611}, {%r11103, %r11229}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11578, %r11581}, {%r602, %r608, %r605, %r611}, {%r11112, %r11236}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11584, %r11587}, {%r602, %r608, %r605, %r611}, {%r11121, %r11243}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11590, %r11593}, {%r602, %r608, %r605, %r611}, {%r11130, %r11250}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11596, %r11599}, {%r602, %r608, %r605, %r611}, {%r11139, %r11257}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11602, %r11605}, {%r602, %r608, %r605, %r611}, {%r11148, %r11264}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11608, %r11611}, {%r602, %r608, %r605, %r611}, {%r11157, %r11271}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11614, %r11617}, {%r602, %r608, %r605, %r611}, {%r11166, %r11278}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11570, %r11571, %r11572;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11573, %r11574, %r11575;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11576, %r11577, %r11578;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11579, %r11580, %r11581;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11582, %r11583, %r11584;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11585, %r11586, %r11587;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11588, %r11589, %r11590;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11591, %r11592, %r11593;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11594, %r11595, %r11596;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11597, %r11598, %r11599;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11600, %r11601, %r11602;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11603, %r11604, %r11605;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11606, %r11607, %r11608;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11609, %r11610, %r11611;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11612, %r11613, %r11614;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11615, %r11616, %r11617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11618, %r11571, %r11572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11621, %r11574, %r11575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11624, %r11577, %r11578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11627, %r11580, %r11581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11630, %r11583, %r11584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11633, %r11586, %r11587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11636, %r11589, %r11590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11639, %r11592, %r11593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11642, %r11595, %r11596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11645, %r11598, %r11599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11648, %r11601, %r11602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11651, %r11604, %r11605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11654, %r11607, %r11608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11657, %r11610, %r11611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11660, %r11613, %r11614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11663, %r11616, %r11617;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11666, %r184, %r11570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11669, %r184, %r11573;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11672, %r184, %r11576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11675, %r184, %r11579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11678, %r184, %r11582;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11681, %r184, %r11585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11684, %r184, %r11588;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11687, %r184, %r11591;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11690, %r184, %r11594;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11693, %r184, %r11597;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11696, %r184, %r11600;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11699, %r184, %r11603;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11702, %r184, %r11606;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11705, %r184, %r11609;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11708, %r184, %r11612;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11711, %r184, %r11615;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11714, %r185, %r11618;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11717, %r185, %r11621;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11720, %r185, %r11624;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11723, %r185, %r11627;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11726, %r185, %r11630;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11729, %r185, %r11633;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11732, %r185, %r11636;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11735, %r185, %r11639;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11738, %r185, %r11642;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11741, %r185, %r11645;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11744, %r185, %r11648;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11747, %r185, %r11651;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11750, %r185, %r11654;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11753, %r185, %r11657;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11756, %r185, %r11660;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11759, %r185, %r11663;
	// end inline asm
	// begin inline asm
	mov.b32 %r11762, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11763, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11764, %r11666, %r11762;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11767, %r11764, %r11763;
	// end inline asm
	// begin inline asm
	mov.b32 %r11770, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11771, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11772, %r11669, %r11770;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11775, %r11772, %r11771;
	// end inline asm
	// begin inline asm
	mov.b32 %r11778, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11779, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11780, %r11672, %r11778;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11783, %r11780, %r11779;
	// end inline asm
	// begin inline asm
	mov.b32 %r11786, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11787, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11788, %r11675, %r11786;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11791, %r11788, %r11787;
	// end inline asm
	// begin inline asm
	mov.b32 %r11794, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11795, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11796, %r11678, %r11794;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11799, %r11796, %r11795;
	// end inline asm
	// begin inline asm
	mov.b32 %r11802, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11803, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11804, %r11681, %r11802;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11807, %r11804, %r11803;
	// end inline asm
	// begin inline asm
	mov.b32 %r11810, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11811, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11812, %r11684, %r11810;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11815, %r11812, %r11811;
	// end inline asm
	// begin inline asm
	mov.b32 %r11818, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11819, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11820, %r11687, %r11818;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11823, %r11820, %r11819;
	// end inline asm
	// begin inline asm
	mov.b32 %r11826, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11827, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11828, %r11690, %r11826;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11831, %r11828, %r11827;
	// end inline asm
	// begin inline asm
	mov.b32 %r11834, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11835, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11836, %r11693, %r11834;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11839, %r11836, %r11835;
	// end inline asm
	// begin inline asm
	mov.b32 %r11842, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11843, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11844, %r11696, %r11842;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11847, %r11844, %r11843;
	// end inline asm
	// begin inline asm
	mov.b32 %r11850, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11851, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11852, %r11699, %r11850;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11855, %r11852, %r11851;
	// end inline asm
	// begin inline asm
	mov.b32 %r11858, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11859, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11860, %r11702, %r11858;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11863, %r11860, %r11859;
	// end inline asm
	// begin inline asm
	mov.b32 %r11866, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11867, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11868, %r11705, %r11866;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11871, %r11868, %r11867;
	// end inline asm
	// begin inline asm
	mov.b32 %r11874, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11875, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11876, %r11708, %r11874;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11879, %r11876, %r11875;
	// end inline asm
	// begin inline asm
	mov.b32 %r11882, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11883, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11884, %r11711, %r11882;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11887, %r11884, %r11883;
	// end inline asm
	// begin inline asm
	mov.b32 %r11890, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11891, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11892, %r11714, %r11890;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11895, %r11892, %r11891;
	// end inline asm
	// begin inline asm
	mov.b32 %r11898, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11899, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11900, %r11717, %r11898;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11903, %r11900, %r11899;
	// end inline asm
	// begin inline asm
	mov.b32 %r11906, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11907, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11908, %r11720, %r11906;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11911, %r11908, %r11907;
	// end inline asm
	// begin inline asm
	mov.b32 %r11914, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11915, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11916, %r11723, %r11914;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11919, %r11916, %r11915;
	// end inline asm
	// begin inline asm
	mov.b32 %r11922, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11923, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11924, %r11726, %r11922;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11927, %r11924, %r11923;
	// end inline asm
	// begin inline asm
	mov.b32 %r11930, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11931, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11932, %r11729, %r11930;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11935, %r11932, %r11931;
	// end inline asm
	// begin inline asm
	mov.b32 %r11938, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11939, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11940, %r11732, %r11938;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11943, %r11940, %r11939;
	// end inline asm
	// begin inline asm
	mov.b32 %r11946, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11947, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11948, %r11735, %r11946;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11951, %r11948, %r11947;
	// end inline asm
	// begin inline asm
	mov.b32 %r11954, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11955, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11956, %r11738, %r11954;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11959, %r11956, %r11955;
	// end inline asm
	// begin inline asm
	mov.b32 %r11962, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11963, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11964, %r11741, %r11962;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11967, %r11964, %r11963;
	// end inline asm
	// begin inline asm
	mov.b32 %r11970, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11971, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11972, %r11744, %r11970;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11975, %r11972, %r11971;
	// end inline asm
	// begin inline asm
	mov.b32 %r11978, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11979, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11980, %r11747, %r11978;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11983, %r11980, %r11979;
	// end inline asm
	// begin inline asm
	mov.b32 %r11986, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11987, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11988, %r11750, %r11986;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11991, %r11988, %r11987;
	// end inline asm
	// begin inline asm
	mov.b32 %r11994, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11995, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11996, %r11753, %r11994;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11999, %r11996, %r11995;
	// end inline asm
	// begin inline asm
	mov.b32 %r12002, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r12003, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12004, %r11756, %r12002;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12007, %r12004, %r12003;
	// end inline asm
	// begin inline asm
	mov.b32 %r12010, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r12011, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12012, %r11759, %r12010;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12015, %r12012, %r12011;
	// end inline asm
	// begin inline asm
	mov.b32 %r12021, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12020, %r12021, %r12019;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12023, %r11767, %r12020;
	// end inline asm
	// begin inline asm
	mov.b32 %r12026, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12027, %r12021, %r12026;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12030, %r11775, %r12027;
	// end inline asm
	// begin inline asm
	mov.b32 %r12033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12034, %r12021, %r12033;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12037, %r11783, %r12034;
	// end inline asm
	// begin inline asm
	mov.b32 %r12040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12041, %r12021, %r12040;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12044, %r11791, %r12041;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12047, %r12023, %r12037, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12051, %r12030, %r12044, %r4418;
	// end inline asm
	shl.b32 	%r12058, %r12051, 4;
	// begin inline asm
	lop3.b32 %r12055, %r4424, %r12047, %r12058, 202;
	// end inline asm
	xor.b32  	%r16240, %r12055, -2004318072;
	// begin inline asm
	mov.b32 %r12062, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12061, %r12062, %r12060;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12064, %r11799, %r12061;
	// end inline asm
	// begin inline asm
	mov.b32 %r12067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12068, %r12062, %r12067;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12071, %r11807, %r12068;
	// end inline asm
	// begin inline asm
	mov.b32 %r12074, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12075, %r12062, %r12074;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12078, %r11815, %r12075;
	// end inline asm
	// begin inline asm
	mov.b32 %r12081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12082, %r12062, %r12081;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12085, %r11823, %r12082;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12088, %r12064, %r12078, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12092, %r12071, %r12085, %r4418;
	// end inline asm
	shl.b32 	%r12099, %r12092, 4;
	// begin inline asm
	lop3.b32 %r12096, %r4424, %r12088, %r12099, 202;
	// end inline asm
	xor.b32  	%r16241, %r12096, -2004318072;
	// begin inline asm
	mov.b32 %r12103, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12102, %r12103, %r12101;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12105, %r11831, %r12102;
	// end inline asm
	// begin inline asm
	mov.b32 %r12108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12109, %r12103, %r12108;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12112, %r11839, %r12109;
	// end inline asm
	// begin inline asm
	mov.b32 %r12115, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12116, %r12103, %r12115;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12119, %r11847, %r12116;
	// end inline asm
	// begin inline asm
	mov.b32 %r12122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12123, %r12103, %r12122;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12126, %r11855, %r12123;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12129, %r12105, %r12119, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12133, %r12112, %r12126, %r4418;
	// end inline asm
	shl.b32 	%r12140, %r12133, 4;
	// begin inline asm
	lop3.b32 %r12137, %r4424, %r12129, %r12140, 202;
	// end inline asm
	xor.b32  	%r16242, %r12137, -2004318072;
	// begin inline asm
	mov.b32 %r12144, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12143, %r12144, %r12142;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12146, %r11863, %r12143;
	// end inline asm
	// begin inline asm
	mov.b32 %r12149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12150, %r12144, %r12149;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12153, %r11871, %r12150;
	// end inline asm
	// begin inline asm
	mov.b32 %r12156, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12157, %r12144, %r12156;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12160, %r11879, %r12157;
	// end inline asm
	// begin inline asm
	mov.b32 %r12163, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12164, %r12144, %r12163;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12167, %r11887, %r12164;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12170, %r12146, %r12160, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12174, %r12153, %r12167, %r4418;
	// end inline asm
	shl.b32 	%r12181, %r12174, 4;
	// begin inline asm
	lop3.b32 %r12178, %r4424, %r12170, %r12181, 202;
	// end inline asm
	xor.b32  	%r16243, %r12178, -2004318072;
	// begin inline asm
	mov.b32 %r12185, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12183, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12184, %r12185, %r12183;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12187, %r11895, %r12184;
	// end inline asm
	// begin inline asm
	mov.b32 %r12190, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12191, %r12185, %r12190;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12194, %r11903, %r12191;
	// end inline asm
	// begin inline asm
	mov.b32 %r12197, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12198, %r12185, %r12197;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12201, %r11911, %r12198;
	// end inline asm
	// begin inline asm
	mov.b32 %r12204, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12205, %r12185, %r12204;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12208, %r11919, %r12205;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12211, %r12187, %r12201, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12215, %r12194, %r12208, %r4418;
	// end inline asm
	shl.b32 	%r12222, %r12215, 4;
	// begin inline asm
	lop3.b32 %r12219, %r4424, %r12211, %r12222, 202;
	// end inline asm
	xor.b32  	%r16244, %r12219, -2004318072;
	// begin inline asm
	mov.b32 %r12226, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12225, %r12226, %r12224;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12228, %r11927, %r12225;
	// end inline asm
	// begin inline asm
	mov.b32 %r12231, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12232, %r12226, %r12231;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12235, %r11935, %r12232;
	// end inline asm
	// begin inline asm
	mov.b32 %r12238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12239, %r12226, %r12238;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12242, %r11943, %r12239;
	// end inline asm
	// begin inline asm
	mov.b32 %r12245, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12246, %r12226, %r12245;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12249, %r11951, %r12246;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12252, %r12228, %r12242, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12256, %r12235, %r12249, %r4418;
	// end inline asm
	shl.b32 	%r12263, %r12256, 4;
	// begin inline asm
	lop3.b32 %r12260, %r4424, %r12252, %r12263, 202;
	// end inline asm
	xor.b32  	%r16245, %r12260, -2004318072;
	// begin inline asm
	mov.b32 %r12267, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12265, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12266, %r12267, %r12265;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12269, %r11959, %r12266;
	// end inline asm
	// begin inline asm
	mov.b32 %r12272, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12273, %r12267, %r12272;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12276, %r11967, %r12273;
	// end inline asm
	// begin inline asm
	mov.b32 %r12279, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12280, %r12267, %r12279;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12283, %r11975, %r12280;
	// end inline asm
	// begin inline asm
	mov.b32 %r12286, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12287, %r12267, %r12286;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12290, %r11983, %r12287;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12293, %r12269, %r12283, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12297, %r12276, %r12290, %r4418;
	// end inline asm
	shl.b32 	%r12304, %r12297, 4;
	// begin inline asm
	lop3.b32 %r12301, %r4424, %r12293, %r12304, 202;
	// end inline asm
	xor.b32  	%r16246, %r12301, -2004318072;
	// begin inline asm
	mov.b32 %r12308, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12307, %r12308, %r12306;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12310, %r11991, %r12307;
	// end inline asm
	// begin inline asm
	mov.b32 %r12313, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12314, %r12308, %r12313;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12317, %r11999, %r12314;
	// end inline asm
	// begin inline asm
	mov.b32 %r12320, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12321, %r12308, %r12320;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12324, %r12007, %r12321;
	// end inline asm
	// begin inline asm
	mov.b32 %r12327, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12328, %r12308, %r12327;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12331, %r12015, %r12328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12334, %r12310, %r12324, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12338, %r12317, %r12331, %r4418;
	// end inline asm
	shl.b32 	%r12345, %r12338, 4;
	// begin inline asm
	lop3.b32 %r12342, %r4424, %r12334, %r12345, 202;
	// end inline asm
	xor.b32  	%r16247, %r12342, -2004318072;
	st.shared.u32 	[%rd107], %r16240;
	st.shared.u32 	[%rd109], %r16241;
	st.shared.u32 	[%rd111], %r16242;
	st.shared.u32 	[%rd113], %r16243;
	st.shared.u32 	[%rd115], %r16244;
	st.shared.u32 	[%rd117], %r16245;
	st.shared.u32 	[%rd119], %r16246;
	st.shared.u32 	[%rd121], %r16247;
	ld.shared.u32 	%r16383, [%rd91];
	ld.shared.u32 	%r16384, [%rd93];
	ld.shared.u32 	%r16385, [%rd95];
	ld.shared.u32 	%r16386, [%rd97];
	ld.shared.u32 	%r16395, [%rd99];
	ld.shared.u32 	%r16396, [%rd101];
	ld.shared.u32 	%r16397, [%rd103];
	ld.shared.u32 	%r16398, [%rd105];
	// begin inline asm
	mov.b32 %r12351, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12362, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12350, %r16383, -2004318072;
	// begin inline asm
	lop3.b32 %r12348, %r901, %r12350, %r12351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12352, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12353, %r12351, %r12352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12356, %r12348, %r12353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12359, %r912, %r12350, %r12362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12364, %r12362, %r12363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12367, %r12359, %r12364;
	// end inline asm
	shr.u32 	%r12372, %r12350, 8;
	// begin inline asm
	lop3.b32 %r12370, %r901, %r12372, %r12351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12374, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12375, %r12351, %r12374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12378, %r12370, %r12375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12381, %r912, %r12372, %r12362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12385, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12386, %r12362, %r12385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12389, %r12381, %r12386;
	// end inline asm
	// begin inline asm
	mov.b32 %r12397, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12408, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12396, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r12394, %r901, %r12396, %r12397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12399, %r12397, %r12398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12402, %r12394, %r12399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12405, %r912, %r12396, %r12408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12410, %r12408, %r12409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12413, %r12405, %r12410;
	// end inline asm
	shr.u32 	%r12418, %r12396, 8;
	// begin inline asm
	lop3.b32 %r12416, %r901, %r12418, %r12397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12420, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12421, %r12397, %r12420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12424, %r12416, %r12421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12427, %r912, %r12418, %r12408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12431, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12432, %r12408, %r12431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12435, %r12427, %r12432;
	// end inline asm
	// begin inline asm
	mov.b32 %r12443, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12454, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12442, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r12440, %r901, %r12442, %r12443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12445, %r12443, %r12444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12448, %r12440, %r12445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12451, %r912, %r12442, %r12454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12456, %r12454, %r12455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12459, %r12451, %r12456;
	// end inline asm
	shr.u32 	%r12464, %r12442, 8;
	// begin inline asm
	lop3.b32 %r12462, %r901, %r12464, %r12443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12466, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12467, %r12443, %r12466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12470, %r12462, %r12467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12473, %r912, %r12464, %r12454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12477, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12478, %r12454, %r12477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12481, %r12473, %r12478;
	// end inline asm
	// begin inline asm
	mov.b32 %r12489, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12500, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12488, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r12486, %r901, %r12488, %r12489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12491, %r12489, %r12490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12494, %r12486, %r12491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12497, %r912, %r12488, %r12500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12502, %r12500, %r12501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12505, %r12497, %r12502;
	// end inline asm
	shr.u32 	%r12510, %r12488, 8;
	// begin inline asm
	lop3.b32 %r12508, %r901, %r12510, %r12489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12512, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12513, %r12489, %r12512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12516, %r12508, %r12513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12519, %r912, %r12510, %r12500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12523, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12524, %r12500, %r12523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12527, %r12519, %r12524;
	// end inline asm
	// begin inline asm
	mov.b32 %r12535, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12546, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12534, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r12532, %r901, %r12534, %r12535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12537, %r12535, %r12536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12540, %r12532, %r12537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12543, %r912, %r12534, %r12546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12548, %r12546, %r12547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12551, %r12543, %r12548;
	// end inline asm
	shr.u32 	%r12556, %r12534, 8;
	// begin inline asm
	lop3.b32 %r12554, %r901, %r12556, %r12535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12559, %r12535, %r12558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12562, %r12554, %r12559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12565, %r912, %r12556, %r12546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12569, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12570, %r12546, %r12569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12573, %r12565, %r12570;
	// end inline asm
	// begin inline asm
	mov.b32 %r12581, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12592, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12580, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r12578, %r901, %r12580, %r12581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12583, %r12581, %r12582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12586, %r12578, %r12583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12589, %r912, %r12580, %r12592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12594, %r12592, %r12593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12597, %r12589, %r12594;
	// end inline asm
	shr.u32 	%r12602, %r12580, 8;
	// begin inline asm
	lop3.b32 %r12600, %r901, %r12602, %r12581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12604, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12605, %r12581, %r12604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12608, %r12600, %r12605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12611, %r912, %r12602, %r12592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12615, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12616, %r12592, %r12615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12619, %r12611, %r12616;
	// end inline asm
	// begin inline asm
	mov.b32 %r12627, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12638, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12626, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r12624, %r901, %r12626, %r12627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12628, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12629, %r12627, %r12628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12632, %r12624, %r12629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12635, %r912, %r12626, %r12638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12640, %r12638, %r12639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12643, %r12635, %r12640;
	// end inline asm
	shr.u32 	%r12648, %r12626, 8;
	// begin inline asm
	lop3.b32 %r12646, %r901, %r12648, %r12627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12650, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12651, %r12627, %r12650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12654, %r12646, %r12651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12657, %r912, %r12648, %r12638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12661, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12662, %r12638, %r12661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12665, %r12657, %r12662;
	// end inline asm
	// begin inline asm
	mov.b32 %r12673, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12684, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12672, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r12670, %r901, %r12672, %r12673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12675, %r12673, %r12674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12678, %r12670, %r12675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12681, %r912, %r12672, %r12684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12685, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12686, %r12684, %r12685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12689, %r12681, %r12686;
	// end inline asm
	shr.u32 	%r12694, %r12672, 8;
	// begin inline asm
	lop3.b32 %r12692, %r901, %r12694, %r12673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12696, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12697, %r12673, %r12696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12700, %r12692, %r12697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12703, %r912, %r12694, %r12684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12707, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12708, %r12684, %r12707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12711, %r12703, %r12708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12714, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12716, %r12714, %r12356;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12719, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12721, %r12719, %r12367;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12724, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12726, %r12724, %r12378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12729, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12731, %r12729, %r12389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12734, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12736, %r12734, %r12402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12739, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12741, %r12739, %r12413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12744, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12746, %r12744, %r12424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12749, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12751, %r12749, %r12435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12754, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12756, %r12754, %r12448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12759, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12761, %r12759, %r12459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12764, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12766, %r12764, %r12470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12769, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12771, %r12769, %r12481;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12774, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12776, %r12774, %r12494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12779, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12781, %r12779, %r12505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12784, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12786, %r12784, %r12516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12789, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12791, %r12789, %r12527;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12794, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12796, %r12794, %r12540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12799, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12801, %r12799, %r12551;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12804, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12806, %r12804, %r12562;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12809, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12811, %r12809, %r12573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12814, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12816, %r12814, %r12586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12819, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12821, %r12819, %r12597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12824, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12826, %r12824, %r12608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12829, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12831, %r12829, %r12619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12834, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12836, %r12834, %r12632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12839, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12841, %r12839, %r12643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12844, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12846, %r12844, %r12654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12849, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12851, %r12849, %r12665;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12854, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12856, %r12854, %r12678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12859, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12861, %r12859, %r12689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12864, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12866, %r12864, %r12700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12869, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12871, %r12869, %r12711;
	// end inline asm
	// begin inline asm
	mov.b32 %r12879, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12890, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12876, %r901, %r902, %r12879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12880, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12881, %r12879, %r12880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12884, %r12876, %r12881;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12887, %r912, %r902, %r12890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12891, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12892, %r12890, %r12891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12895, %r12887, %r12892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12898, %r901, %r924, %r12879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12902, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12903, %r12879, %r12902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12906, %r12898, %r12903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12909, %r912, %r924, %r12890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12913, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12914, %r12890, %r12913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12917, %r12909, %r12914;
	// end inline asm
	// begin inline asm
	mov.b32 %r12925, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12936, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12922, %r901, %r948, %r12925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12926, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12927, %r12925, %r12926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12930, %r12922, %r12927;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12933, %r912, %r948, %r12936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12938, %r12936, %r12937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12941, %r12933, %r12938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12944, %r901, %r970, %r12925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12948, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12949, %r12925, %r12948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12952, %r12944, %r12949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12955, %r912, %r970, %r12936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12959, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12960, %r12936, %r12959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12963, %r12955, %r12960;
	// end inline asm
	// begin inline asm
	mov.b32 %r12971, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12982, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12968, %r901, %r994, %r12971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12973, %r12971, %r12972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12976, %r12968, %r12973;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12979, %r912, %r994, %r12982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12984, %r12982, %r12983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12987, %r12979, %r12984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12990, %r901, %r1016, %r12971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12994, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12995, %r12971, %r12994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12998, %r12990, %r12995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13001, %r912, %r1016, %r12982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13006, %r12982, %r13005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13009, %r13001, %r13006;
	// end inline asm
	// begin inline asm
	mov.b32 %r13017, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13028, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13014, %r901, %r1040, %r13017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13019, %r13017, %r13018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13022, %r13014, %r13019;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13025, %r912, %r1040, %r13028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13030, %r13028, %r13029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13033, %r13025, %r13030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13036, %r901, %r1062, %r13017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13041, %r13017, %r13040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13044, %r13036, %r13041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13047, %r912, %r1062, %r13028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13052, %r13028, %r13051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13055, %r13047, %r13052;
	// end inline asm
	// begin inline asm
	mov.b32 %r13063, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13074, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13060, %r901, %r1086, %r13063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13065, %r13063, %r13064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13068, %r13060, %r13065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13071, %r912, %r1086, %r13074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13075, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13076, %r13074, %r13075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13079, %r13071, %r13076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13082, %r901, %r1108, %r13063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13086, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13087, %r13063, %r13086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13090, %r13082, %r13087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13093, %r912, %r1108, %r13074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13098, %r13074, %r13097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13101, %r13093, %r13098;
	// end inline asm
	// begin inline asm
	mov.b32 %r13109, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13120, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13106, %r901, %r1132, %r13109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13110, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13111, %r13109, %r13110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13114, %r13106, %r13111;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13117, %r912, %r1132, %r13120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13122, %r13120, %r13121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13125, %r13117, %r13122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13128, %r901, %r1154, %r13109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13132, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13133, %r13109, %r13132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13136, %r13128, %r13133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13139, %r912, %r1154, %r13120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13144, %r13120, %r13143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13147, %r13139, %r13144;
	// end inline asm
	// begin inline asm
	mov.b32 %r13155, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13166, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13152, %r901, %r1178, %r13155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13156, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13157, %r13155, %r13156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13160, %r13152, %r13157;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13163, %r912, %r1178, %r13166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13168, %r13166, %r13167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13171, %r13163, %r13168;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13174, %r901, %r1200, %r13155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13178, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13179, %r13155, %r13178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13182, %r13174, %r13179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13185, %r912, %r1200, %r13166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13190, %r13166, %r13189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13193, %r13185, %r13190;
	// end inline asm
	// begin inline asm
	mov.b32 %r13201, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13212, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13198, %r901, %r1224, %r13201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13202, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13203, %r13201, %r13202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13206, %r13198, %r13203;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13209, %r912, %r1224, %r13212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13214, %r13212, %r13213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13217, %r13209, %r13214;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13220, %r901, %r1246, %r13201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13225, %r13201, %r13224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13228, %r13220, %r13225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13231, %r912, %r1246, %r13212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13236, %r13212, %r13235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13239, %r13231, %r13236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13242, %r305, %r12884, %r12716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13246, %r305, %r12895, %r12721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13250, %r305, %r12906, %r12726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13254, %r305, %r12917, %r12731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13258, %r305, %r12930, %r12736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13262, %r305, %r12941, %r12741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13266, %r305, %r12952, %r12746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13270, %r305, %r12963, %r12751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13274, %r305, %r12976, %r12756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13278, %r305, %r12987, %r12761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13282, %r305, %r12998, %r12766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13286, %r305, %r13009, %r12771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13290, %r305, %r13022, %r12776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13294, %r305, %r13033, %r12781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13298, %r305, %r13044, %r12786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13302, %r305, %r13055, %r12791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13306, %r323, %r13068, %r12796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13310, %r323, %r13079, %r12801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13314, %r323, %r13090, %r12806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13318, %r323, %r13101, %r12811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13322, %r323, %r13114, %r12816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13326, %r323, %r13125, %r12821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13330, %r323, %r13136, %r12826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13334, %r323, %r13147, %r12831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13338, %r323, %r13160, %r12836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13342, %r323, %r13171, %r12841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13346, %r323, %r13182, %r12846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13350, %r323, %r13193, %r12851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13354, %r323, %r13206, %r12856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13358, %r323, %r13217, %r12861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13362, %r323, %r13228, %r12866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13366, %r323, %r13239, %r12871;
	// end inline asm
	// begin inline asm
	mov.b32 %r13375, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13386, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13372, %r901, %r4718, %r13375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13377, %r13375, %r13376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13380, %r13372, %r13377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13383, %r912, %r4718, %r13386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13388, %r13386, %r13387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13391, %r13383, %r13388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13394, %r901, %r4740, %r13375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13399, %r13375, %r13398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13402, %r13394, %r13399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13405, %r912, %r4740, %r13386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13410, %r13386, %r13409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13413, %r13405, %r13410;
	// end inline asm
	// begin inline asm
	mov.b32 %r13421, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13432, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13418, %r901, %r4764, %r13421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13423, %r13421, %r13422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13426, %r13418, %r13423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13429, %r912, %r4764, %r13432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13434, %r13432, %r13433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13437, %r13429, %r13434;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13440, %r901, %r4786, %r13421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13445, %r13421, %r13444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13448, %r13440, %r13445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13451, %r912, %r4786, %r13432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13456, %r13432, %r13455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13459, %r13451, %r13456;
	// end inline asm
	// begin inline asm
	mov.b32 %r13467, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13478, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13464, %r901, %r4810, %r13467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13469, %r13467, %r13468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13472, %r13464, %r13469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13475, %r912, %r4810, %r13478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13480, %r13478, %r13479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13483, %r13475, %r13480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13486, %r901, %r4832, %r13467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13491, %r13467, %r13490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13494, %r13486, %r13491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13497, %r912, %r4832, %r13478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13502, %r13478, %r13501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13505, %r13497, %r13502;
	// end inline asm
	// begin inline asm
	mov.b32 %r13513, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13524, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13510, %r901, %r4856, %r13513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13515, %r13513, %r13514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13518, %r13510, %r13515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13521, %r912, %r4856, %r13524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13526, %r13524, %r13525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13529, %r13521, %r13526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13532, %r901, %r4878, %r13513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13537, %r13513, %r13536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13540, %r13532, %r13537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13543, %r912, %r4878, %r13524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13548, %r13524, %r13547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13551, %r13543, %r13548;
	// end inline asm
	// begin inline asm
	mov.b32 %r13559, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13570, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13556, %r901, %r4902, %r13559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13561, %r13559, %r13560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13564, %r13556, %r13561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13567, %r912, %r4902, %r13570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13572, %r13570, %r13571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13575, %r13567, %r13572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13578, %r901, %r4924, %r13559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13583, %r13559, %r13582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13586, %r13578, %r13583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13589, %r912, %r4924, %r13570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13594, %r13570, %r13593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13597, %r13589, %r13594;
	// end inline asm
	// begin inline asm
	mov.b32 %r13605, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13616, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13602, %r901, %r4948, %r13605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13607, %r13605, %r13606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13610, %r13602, %r13607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13613, %r912, %r4948, %r13616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13618, %r13616, %r13617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13621, %r13613, %r13618;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13624, %r901, %r4970, %r13605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13628, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13629, %r13605, %r13628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13632, %r13624, %r13629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13635, %r912, %r4970, %r13616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13640, %r13616, %r13639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13643, %r13635, %r13640;
	// end inline asm
	// begin inline asm
	mov.b32 %r13651, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13662, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13648, %r901, %r4994, %r13651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13653, %r13651, %r13652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13656, %r13648, %r13653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13659, %r912, %r4994, %r13662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13664, %r13662, %r13663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13667, %r13659, %r13664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13670, %r901, %r5016, %r13651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13675, %r13651, %r13674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13678, %r13670, %r13675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13681, %r912, %r5016, %r13662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13685, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13686, %r13662, %r13685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13689, %r13681, %r13686;
	// end inline asm
	// begin inline asm
	mov.b32 %r13697, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13708, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13694, %r901, %r5040, %r13697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13698, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13699, %r13697, %r13698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13702, %r13694, %r13699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13705, %r912, %r5040, %r13708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13709, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13710, %r13708, %r13709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13713, %r13705, %r13710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13716, %r901, %r5062, %r13697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13720, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13721, %r13697, %r13720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13724, %r13716, %r13721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13727, %r912, %r5062, %r13708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13731, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13732, %r13708, %r13731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13735, %r13727, %r13732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13738, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13740, %r13738, %r13380, %r13242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13744, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13746, %r13744, %r13391, %r13246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13750, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13752, %r13750, %r13402, %r13250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13756, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13758, %r13756, %r13413, %r13254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13762, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13764, %r13762, %r13426, %r13258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13768, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13770, %r13768, %r13437, %r13262;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13774, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13776, %r13774, %r13448, %r13266;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13780, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13782, %r13780, %r13459, %r13270;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13786, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13788, %r13786, %r13472, %r13274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13792, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13794, %r13792, %r13483, %r13278;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13798, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13800, %r13798, %r13494, %r13282;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13804, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13806, %r13804, %r13505, %r13286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13810, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13812, %r13810, %r13518, %r13290;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13816, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13818, %r13816, %r13529, %r13294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13822, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13824, %r13822, %r13540, %r13298;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13828, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13830, %r13828, %r13551, %r13302;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13834, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13836, %r13834, %r13564, %r13306;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13840, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13842, %r13840, %r13575, %r13310;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13846, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13848, %r13846, %r13586, %r13314;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13852, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13854, %r13852, %r13597, %r13318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13858, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13860, %r13858, %r13610, %r13322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13864, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13866, %r13864, %r13621, %r13326;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13870, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13872, %r13870, %r13632, %r13330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13876, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13878, %r13876, %r13643, %r13334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13882, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13884, %r13882, %r13656, %r13338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13888, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13890, %r13888, %r13667, %r13342;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13894, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13896, %r13894, %r13678, %r13346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13900, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13902, %r13900, %r13689, %r13350;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13906, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13908, %r13906, %r13702, %r13354;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13912, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13914, %r13912, %r13713, %r13358;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13918, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13920, %r13918, %r13724, %r13362;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13924, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13926, %r13924, %r13735, %r13366;
	// end inline asm
	// begin inline asm
	mov.b32 %r13935, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13946, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13932, %r901, %r8534, %r13935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13936, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13937, %r13935, %r13936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13940, %r13932, %r13937;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13943, %r912, %r8534, %r13946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13947, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13948, %r13946, %r13947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13951, %r13943, %r13948;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13954, %r901, %r8556, %r13935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13958, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13959, %r13935, %r13958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13962, %r13954, %r13959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13965, %r912, %r8556, %r13946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13969, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13970, %r13946, %r13969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13973, %r13965, %r13970;
	// end inline asm
	// begin inline asm
	mov.b32 %r13981, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13992, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13978, %r901, %r8580, %r13981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13982, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13983, %r13981, %r13982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13986, %r13978, %r13983;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13989, %r912, %r8580, %r13992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13993, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13994, %r13992, %r13993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13997, %r13989, %r13994;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14000, %r901, %r8602, %r13981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14004, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14005, %r13981, %r14004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14008, %r14000, %r14005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14011, %r912, %r8602, %r13992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14015, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14016, %r13992, %r14015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14019, %r14011, %r14016;
	// end inline asm
	// begin inline asm
	mov.b32 %r14027, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14038, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14024, %r901, %r8626, %r14027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14028, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14029, %r14027, %r14028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14032, %r14024, %r14029;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14035, %r912, %r8626, %r14038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14039, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14040, %r14038, %r14039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14043, %r14035, %r14040;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14046, %r901, %r8648, %r14027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14050, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14051, %r14027, %r14050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14054, %r14046, %r14051;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14057, %r912, %r8648, %r14038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14061, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14062, %r14038, %r14061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14065, %r14057, %r14062;
	// end inline asm
	// begin inline asm
	mov.b32 %r14073, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14084, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14070, %r901, %r8672, %r14073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14074, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14075, %r14073, %r14074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14078, %r14070, %r14075;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14081, %r912, %r8672, %r14084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14086, %r14084, %r14085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14089, %r14081, %r14086;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14092, %r901, %r8694, %r14073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14096, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14097, %r14073, %r14096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14100, %r14092, %r14097;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14103, %r912, %r8694, %r14084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14107, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14108, %r14084, %r14107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14111, %r14103, %r14108;
	// end inline asm
	// begin inline asm
	mov.b32 %r14119, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14130, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14116, %r901, %r8718, %r14119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14120, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14121, %r14119, %r14120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14124, %r14116, %r14121;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14127, %r912, %r8718, %r14130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14131, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14132, %r14130, %r14131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14135, %r14127, %r14132;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14138, %r901, %r8740, %r14119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14143, %r14119, %r14142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14146, %r14138, %r14143;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14149, %r912, %r8740, %r14130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14153, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14154, %r14130, %r14153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14157, %r14149, %r14154;
	// end inline asm
	// begin inline asm
	mov.b32 %r14165, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14176, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14162, %r901, %r8764, %r14165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14166, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14167, %r14165, %r14166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14170, %r14162, %r14167;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14173, %r912, %r8764, %r14176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14177, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14178, %r14176, %r14177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14181, %r14173, %r14178;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14184, %r901, %r8786, %r14165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14188, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14189, %r14165, %r14188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14192, %r14184, %r14189;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14195, %r912, %r8786, %r14176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14199, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14200, %r14176, %r14199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14203, %r14195, %r14200;
	// end inline asm
	// begin inline asm
	mov.b32 %r14211, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14222, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14208, %r901, %r8810, %r14211, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14212, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14213, %r14211, %r14212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14216, %r14208, %r14213;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14219, %r912, %r8810, %r14222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14223, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14224, %r14222, %r14223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14227, %r14219, %r14224;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14230, %r901, %r8832, %r14211, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14234, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14235, %r14211, %r14234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14238, %r14230, %r14235;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14241, %r912, %r8832, %r14222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14245, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14246, %r14222, %r14245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14249, %r14241, %r14246;
	// end inline asm
	// begin inline asm
	mov.b32 %r14257, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14268, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14254, %r901, %r8856, %r14257, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14258, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14259, %r14257, %r14258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14262, %r14254, %r14259;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14265, %r912, %r8856, %r14268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14269, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14270, %r14268, %r14269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14273, %r14265, %r14270;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14276, %r901, %r8878, %r14257, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14280, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14281, %r14257, %r14280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14284, %r14276, %r14281;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14287, %r912, %r8878, %r14268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14291, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14292, %r14268, %r14291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14295, %r14287, %r14292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14433, %r377, %r13940, %r13740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14430, %r377, %r13951, %r13746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14442, %r377, %r13962, %r13752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14439, %r377, %r13973, %r13758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14451, %r377, %r13986, %r13764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14448, %r377, %r13997, %r13770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14460, %r377, %r14008, %r13776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14457, %r377, %r14019, %r13782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14469, %r377, %r14032, %r13788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14466, %r377, %r14043, %r13794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14478, %r377, %r14054, %r13800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14475, %r377, %r14065, %r13806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14487, %r377, %r14078, %r13812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14484, %r377, %r14089, %r13818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14496, %r377, %r14100, %r13824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14493, %r377, %r14111, %r13830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14505, %r395, %r14124, %r13836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14502, %r395, %r14135, %r13842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14514, %r395, %r14146, %r13848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14511, %r395, %r14157, %r13854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14523, %r395, %r14170, %r13860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14520, %r395, %r14181, %r13866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14532, %r395, %r14192, %r13872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14529, %r395, %r14203, %r13878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14541, %r395, %r14216, %r13884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14538, %r395, %r14227, %r13890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14550, %r395, %r14238, %r13896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14547, %r395, %r14249, %r13902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14559, %r395, %r14262, %r13908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14556, %r395, %r14273, %r13914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14568, %r395, %r14284, %r13920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14565, %r395, %r14295, %r13926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14426, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14428, %r14426, %r14430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14431, %r459, %r14433, %r14428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14435, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14437, %r14435, %r14439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14440, %r459, %r14442, %r14437;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14444, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14446, %r14444, %r14448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14449, %r459, %r14451, %r14446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14453, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14455, %r14453, %r14457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14458, %r459, %r14460, %r14455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14462, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14464, %r14462, %r14466;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14467, %r459, %r14469, %r14464;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14471, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14473, %r14471, %r14475;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14476, %r459, %r14478, %r14473;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14480, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14482, %r14480, %r14484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14485, %r459, %r14487, %r14482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14489, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14491, %r14489, %r14493;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14494, %r459, %r14496, %r14491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14498, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14500, %r14498, %r14502;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14503, %r462, %r14505, %r14500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14507, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14509, %r14507, %r14511;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14512, %r462, %r14514, %r14509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14516, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14518, %r14516, %r14520;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14521, %r462, %r14523, %r14518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14525, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14527, %r14525, %r14529;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14530, %r462, %r14532, %r14527;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14534, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14536, %r14534, %r14538;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14539, %r462, %r14541, %r14536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14543, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14545, %r14543, %r14547;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14548, %r462, %r14550, %r14545;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14552, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14554, %r14552, %r14556;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14557, %r462, %r14559, %r14554;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14561, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14563, %r14561, %r14565;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14566, %r462, %r14568, %r14563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14570, %r465, %r14433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14573, %r459, %r14430, %r14570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14577, %r465, %r14442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14580, %r459, %r14439, %r14577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14584, %r465, %r14451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14587, %r459, %r14448, %r14584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14591, %r465, %r14460;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14594, %r459, %r14457, %r14591;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14598, %r465, %r14469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14601, %r459, %r14466, %r14598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14605, %r465, %r14478;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14608, %r459, %r14475, %r14605;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14612, %r465, %r14487;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14615, %r459, %r14484, %r14612;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14619, %r465, %r14496;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14622, %r459, %r14493, %r14619;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14626, %r468, %r14505;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14629, %r462, %r14502, %r14626;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14633, %r468, %r14514;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14636, %r462, %r14511, %r14633;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14640, %r468, %r14523;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14643, %r462, %r14520, %r14640;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14647, %r468, %r14532;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14650, %r462, %r14529, %r14647;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14654, %r468, %r14541;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14657, %r462, %r14538, %r14654;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14661, %r468, %r14550;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14664, %r462, %r14547, %r14661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14668, %r468, %r14559;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14671, %r462, %r14556, %r14668;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14675, %r468, %r14568;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14678, %r462, %r14565, %r14675;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14849, %r14846}, {%r514, %r520, %r517, %r523}, {%r14431, %r14573}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14858, %r14855}, {%r514, %r520, %r517, %r523}, {%r14440, %r14580}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14867, %r14864}, {%r514, %r520, %r517, %r523}, {%r14449, %r14587}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14876, %r14873}, {%r514, %r520, %r517, %r523}, {%r14458, %r14594}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14885, %r14882}, {%r514, %r520, %r517, %r523}, {%r14467, %r14601}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14894, %r14891}, {%r514, %r520, %r517, %r523}, {%r14476, %r14608}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14903, %r14900}, {%r514, %r520, %r517, %r523}, {%r14485, %r14615}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14912, %r14909}, {%r514, %r520, %r517, %r523}, {%r14494, %r14622}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14921, %r14918}, {%r514, %r520, %r517, %r523}, {%r14503, %r14629}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14930, %r14927}, {%r514, %r520, %r517, %r523}, {%r14512, %r14636}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14939, %r14936}, {%r514, %r520, %r517, %r523}, {%r14521, %r14643}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14948, %r14945}, {%r514, %r520, %r517, %r523}, {%r14530, %r14650}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14957, %r14954}, {%r514, %r520, %r517, %r523}, {%r14539, %r14657}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14966, %r14963}, {%r514, %r520, %r517, %r523}, {%r14548, %r14664}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14975, %r14972}, {%r514, %r520, %r517, %r523}, {%r14557, %r14671}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14984, %r14981}, {%r514, %r520, %r517, %r523}, {%r14566, %r14678}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14842, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14844, %r14842, %r14846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14847, %r564, %r14849, %r14844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14851, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14853, %r14851, %r14855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14856, %r564, %r14858, %r14853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14860, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14862, %r14860, %r14864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14865, %r564, %r14867, %r14862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14869, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14871, %r14869, %r14873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14874, %r564, %r14876, %r14871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14878, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14880, %r14878, %r14882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14883, %r564, %r14885, %r14880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14887, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14889, %r14887, %r14891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14892, %r564, %r14894, %r14889;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14896, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14898, %r14896, %r14900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14901, %r564, %r14903, %r14898;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14905, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14907, %r14905, %r14909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14910, %r564, %r14912, %r14907;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14914, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14916, %r14914, %r14918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14919, %r564, %r14921, %r14916;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14923, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14925, %r14923, %r14927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14928, %r564, %r14930, %r14925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14932, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14934, %r14932, %r14936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14937, %r564, %r14939, %r14934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14941, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14943, %r14941, %r14945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14946, %r564, %r14948, %r14943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14950, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14952, %r14950, %r14954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14955, %r564, %r14957, %r14952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14959, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14961, %r14959, %r14963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14964, %r564, %r14966, %r14961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14968, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14970, %r14968, %r14972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14973, %r564, %r14975, %r14970;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14977, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14979, %r14977, %r14981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14982, %r564, %r14984, %r14979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14986, %r567, %r14849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14989, %r564, %r14846, %r14986;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14993, %r567, %r14858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14996, %r564, %r14855, %r14993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15000, %r567, %r14867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15003, %r564, %r14864, %r15000;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15007, %r567, %r14876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15010, %r564, %r14873, %r15007;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15014, %r567, %r14885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15017, %r564, %r14882, %r15014;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15021, %r567, %r14894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15024, %r564, %r14891, %r15021;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15028, %r567, %r14903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15031, %r564, %r14900, %r15028;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15035, %r567, %r14912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15038, %r564, %r14909, %r15035;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15042, %r567, %r14921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15045, %r564, %r14918, %r15042;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15049, %r567, %r14930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15052, %r564, %r14927, %r15049;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15056, %r567, %r14939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15059, %r564, %r14936, %r15056;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15063, %r567, %r14948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15066, %r564, %r14945, %r15063;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15070, %r567, %r14957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15073, %r564, %r14954, %r15070;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15077, %r567, %r14966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15080, %r564, %r14963, %r15077;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15084, %r567, %r14975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15087, %r564, %r14972, %r15084;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15091, %r567, %r14984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15094, %r564, %r14981, %r15091;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15387, %r15390}, {%r602, %r608, %r605, %r611}, {%r14847, %r14989}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15393, %r15396}, {%r602, %r608, %r605, %r611}, {%r14856, %r14996}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15399, %r15402}, {%r602, %r608, %r605, %r611}, {%r14865, %r15003}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15405, %r15408}, {%r602, %r608, %r605, %r611}, {%r14874, %r15010}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15411, %r15414}, {%r602, %r608, %r605, %r611}, {%r14883, %r15017}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15417, %r15420}, {%r602, %r608, %r605, %r611}, {%r14892, %r15024}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15423, %r15426}, {%r602, %r608, %r605, %r611}, {%r14901, %r15031}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15429, %r15432}, {%r602, %r608, %r605, %r611}, {%r14910, %r15038}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15388, %r15391}, {%r602, %r608, %r605, %r611}, {%r14919, %r15045}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15394, %r15397}, {%r602, %r608, %r605, %r611}, {%r14928, %r15052}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15400, %r15403}, {%r602, %r608, %r605, %r611}, {%r14937, %r15059}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15406, %r15409}, {%r602, %r608, %r605, %r611}, {%r14946, %r15066}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15412, %r15415}, {%r602, %r608, %r605, %r611}, {%r14955, %r15073}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15418, %r15421}, {%r602, %r608, %r605, %r611}, {%r14964, %r15080}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15424, %r15427}, {%r602, %r608, %r605, %r611}, {%r14973, %r15087}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15430, %r15433}, {%r602, %r608, %r605, %r611}, {%r14982, %r15094}, {%r3242, %r3242};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15386, %r15387, %r15388;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15389, %r15390, %r15391;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15392, %r15393, %r15394;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15395, %r15396, %r15397;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15398, %r15399, %r15400;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15401, %r15402, %r15403;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15404, %r15405, %r15406;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15407, %r15408, %r15409;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15410, %r15411, %r15412;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15413, %r15414, %r15415;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15416, %r15417, %r15418;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15419, %r15420, %r15421;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15422, %r15423, %r15424;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15425, %r15426, %r15427;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15428, %r15429, %r15430;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15431, %r15432, %r15433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15434, %r15387, %r15388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15437, %r15390, %r15391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15440, %r15393, %r15394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15443, %r15396, %r15397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15446, %r15399, %r15400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15449, %r15402, %r15403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15452, %r15405, %r15406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15455, %r15408, %r15409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15458, %r15411, %r15412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15461, %r15414, %r15415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15464, %r15417, %r15418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15467, %r15420, %r15421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15470, %r15423, %r15424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15473, %r15426, %r15427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15476, %r15429, %r15430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15479, %r15432, %r15433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15482, %r184, %r15386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15485, %r184, %r15389;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15488, %r184, %r15392;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15491, %r184, %r15395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15494, %r184, %r15398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15497, %r184, %r15401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15500, %r184, %r15404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15503, %r184, %r15407;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15506, %r184, %r15410;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15509, %r184, %r15413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15512, %r184, %r15416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15515, %r184, %r15419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15518, %r184, %r15422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15521, %r184, %r15425;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15524, %r184, %r15428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15527, %r184, %r15431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15530, %r185, %r15434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15533, %r185, %r15437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15536, %r185, %r15440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15539, %r185, %r15443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15542, %r185, %r15446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15545, %r185, %r15449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15548, %r185, %r15452;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15551, %r185, %r15455;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15554, %r185, %r15458;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15557, %r185, %r15461;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15560, %r185, %r15464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15563, %r185, %r15467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15566, %r185, %r15470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15569, %r185, %r15473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15572, %r185, %r15476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15575, %r185, %r15479;
	// end inline asm
	// begin inline asm
	mov.b32 %r15578, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15579, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15580, %r15482, %r15578;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15583, %r15580, %r15579;
	// end inline asm
	// begin inline asm
	mov.b32 %r15586, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15587, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15588, %r15485, %r15586;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15591, %r15588, %r15587;
	// end inline asm
	// begin inline asm
	mov.b32 %r15594, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15595, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15596, %r15488, %r15594;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15599, %r15596, %r15595;
	// end inline asm
	// begin inline asm
	mov.b32 %r15602, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15603, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15604, %r15491, %r15602;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15607, %r15604, %r15603;
	// end inline asm
	// begin inline asm
	mov.b32 %r15610, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15611, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15612, %r15494, %r15610;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15615, %r15612, %r15611;
	// end inline asm
	// begin inline asm
	mov.b32 %r15618, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15619, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15620, %r15497, %r15618;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15623, %r15620, %r15619;
	// end inline asm
	// begin inline asm
	mov.b32 %r15626, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15627, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15628, %r15500, %r15626;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15631, %r15628, %r15627;
	// end inline asm
	// begin inline asm
	mov.b32 %r15634, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15635, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15636, %r15503, %r15634;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15639, %r15636, %r15635;
	// end inline asm
	// begin inline asm
	mov.b32 %r15642, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15643, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15644, %r15506, %r15642;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15647, %r15644, %r15643;
	// end inline asm
	// begin inline asm
	mov.b32 %r15650, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15651, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15652, %r15509, %r15650;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15655, %r15652, %r15651;
	// end inline asm
	// begin inline asm
	mov.b32 %r15658, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15659, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15660, %r15512, %r15658;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15663, %r15660, %r15659;
	// end inline asm
	// begin inline asm
	mov.b32 %r15666, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15667, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15668, %r15515, %r15666;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15671, %r15668, %r15667;
	// end inline asm
	// begin inline asm
	mov.b32 %r15674, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15675, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15676, %r15518, %r15674;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15679, %r15676, %r15675;
	// end inline asm
	// begin inline asm
	mov.b32 %r15682, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15683, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15684, %r15521, %r15682;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15687, %r15684, %r15683;
	// end inline asm
	// begin inline asm
	mov.b32 %r15690, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15691, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15692, %r15524, %r15690;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15695, %r15692, %r15691;
	// end inline asm
	// begin inline asm
	mov.b32 %r15698, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15699, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15700, %r15527, %r15698;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15703, %r15700, %r15699;
	// end inline asm
	// begin inline asm
	mov.b32 %r15706, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15707, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15708, %r15530, %r15706;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15711, %r15708, %r15707;
	// end inline asm
	// begin inline asm
	mov.b32 %r15714, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15715, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15716, %r15533, %r15714;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15719, %r15716, %r15715;
	// end inline asm
	// begin inline asm
	mov.b32 %r15722, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15723, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15724, %r15536, %r15722;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15727, %r15724, %r15723;
	// end inline asm
	// begin inline asm
	mov.b32 %r15730, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15731, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15732, %r15539, %r15730;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15735, %r15732, %r15731;
	// end inline asm
	// begin inline asm
	mov.b32 %r15738, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15739, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15740, %r15542, %r15738;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15743, %r15740, %r15739;
	// end inline asm
	// begin inline asm
	mov.b32 %r15746, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15747, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15748, %r15545, %r15746;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15751, %r15748, %r15747;
	// end inline asm
	// begin inline asm
	mov.b32 %r15754, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15755, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15756, %r15548, %r15754;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15759, %r15756, %r15755;
	// end inline asm
	// begin inline asm
	mov.b32 %r15762, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15763, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15764, %r15551, %r15762;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15767, %r15764, %r15763;
	// end inline asm
	// begin inline asm
	mov.b32 %r15770, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15771, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15772, %r15554, %r15770;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15775, %r15772, %r15771;
	// end inline asm
	// begin inline asm
	mov.b32 %r15778, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15779, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15780, %r15557, %r15778;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15783, %r15780, %r15779;
	// end inline asm
	// begin inline asm
	mov.b32 %r15786, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15787, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15788, %r15560, %r15786;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15791, %r15788, %r15787;
	// end inline asm
	// begin inline asm
	mov.b32 %r15794, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15795, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15796, %r15563, %r15794;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15799, %r15796, %r15795;
	// end inline asm
	// begin inline asm
	mov.b32 %r15802, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15803, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15804, %r15566, %r15802;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15807, %r15804, %r15803;
	// end inline asm
	// begin inline asm
	mov.b32 %r15810, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15811, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15812, %r15569, %r15810;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15815, %r15812, %r15811;
	// end inline asm
	// begin inline asm
	mov.b32 %r15818, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15819, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15820, %r15572, %r15818;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15823, %r15820, %r15819;
	// end inline asm
	// begin inline asm
	mov.b32 %r15826, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15827, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15828, %r15575, %r15826;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15831, %r15828, %r15827;
	// end inline asm
	// begin inline asm
	mov.b32 %r15837, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15835, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15836, %r15837, %r15835;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15839, %r15583, %r15836;
	// end inline asm
	// begin inline asm
	mov.b32 %r15842, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15843, %r15837, %r15842;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15846, %r15591, %r15843;
	// end inline asm
	// begin inline asm
	mov.b32 %r15849, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15850, %r15837, %r15849;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15853, %r15599, %r15850;
	// end inline asm
	// begin inline asm
	mov.b32 %r15856, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15857, %r15837, %r15856;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15860, %r15607, %r15857;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15863, %r15839, %r15853, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15867, %r15846, %r15860, %r4418;
	// end inline asm
	shl.b32 	%r15874, %r15867, 4;
	// begin inline asm
	lop3.b32 %r15871, %r4424, %r15863, %r15874, 202;
	// end inline asm
	xor.b32  	%r16248, %r15871, -2004318072;
	// begin inline asm
	mov.b32 %r15878, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15876, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15877, %r15878, %r15876;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15880, %r15615, %r15877;
	// end inline asm
	// begin inline asm
	mov.b32 %r15883, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15884, %r15878, %r15883;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15887, %r15623, %r15884;
	// end inline asm
	// begin inline asm
	mov.b32 %r15890, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15891, %r15878, %r15890;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15894, %r15631, %r15891;
	// end inline asm
	// begin inline asm
	mov.b32 %r15897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15898, %r15878, %r15897;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15901, %r15639, %r15898;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15904, %r15880, %r15894, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15908, %r15887, %r15901, %r4418;
	// end inline asm
	shl.b32 	%r15915, %r15908, 4;
	// begin inline asm
	lop3.b32 %r15912, %r4424, %r15904, %r15915, 202;
	// end inline asm
	xor.b32  	%r16249, %r15912, -2004318072;
	// begin inline asm
	mov.b32 %r15919, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15918, %r15919, %r15917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15921, %r15647, %r15918;
	// end inline asm
	// begin inline asm
	mov.b32 %r15924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15925, %r15919, %r15924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15928, %r15655, %r15925;
	// end inline asm
	// begin inline asm
	mov.b32 %r15931, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15932, %r15919, %r15931;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15935, %r15663, %r15932;
	// end inline asm
	// begin inline asm
	mov.b32 %r15938, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15939, %r15919, %r15938;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15942, %r15671, %r15939;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15945, %r15921, %r15935, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15949, %r15928, %r15942, %r4418;
	// end inline asm
	shl.b32 	%r15956, %r15949, 4;
	// begin inline asm
	lop3.b32 %r15953, %r4424, %r15945, %r15956, 202;
	// end inline asm
	xor.b32  	%r16250, %r15953, -2004318072;
	// begin inline asm
	mov.b32 %r15960, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15958, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15959, %r15960, %r15958;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15962, %r15679, %r15959;
	// end inline asm
	// begin inline asm
	mov.b32 %r15965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15966, %r15960, %r15965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15969, %r15687, %r15966;
	// end inline asm
	// begin inline asm
	mov.b32 %r15972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15973, %r15960, %r15972;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15976, %r15695, %r15973;
	// end inline asm
	// begin inline asm
	mov.b32 %r15979, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15980, %r15960, %r15979;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15983, %r15703, %r15980;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15986, %r15962, %r15976, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15990, %r15969, %r15983, %r4418;
	// end inline asm
	shl.b32 	%r15997, %r15990, 4;
	// begin inline asm
	lop3.b32 %r15994, %r4424, %r15986, %r15997, 202;
	// end inline asm
	xor.b32  	%r16251, %r15994, -2004318072;
	// begin inline asm
	mov.b32 %r16001, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16000, %r16001, %r15999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16003, %r15711, %r16000;
	// end inline asm
	// begin inline asm
	mov.b32 %r16006, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16007, %r16001, %r16006;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16010, %r15719, %r16007;
	// end inline asm
	// begin inline asm
	mov.b32 %r16013, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16014, %r16001, %r16013;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16017, %r15727, %r16014;
	// end inline asm
	// begin inline asm
	mov.b32 %r16020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16021, %r16001, %r16020;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16024, %r15735, %r16021;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16027, %r16003, %r16017, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16031, %r16010, %r16024, %r4418;
	// end inline asm
	shl.b32 	%r16038, %r16031, 4;
	// begin inline asm
	lop3.b32 %r16035, %r4424, %r16027, %r16038, 202;
	// end inline asm
	xor.b32  	%r16252, %r16035, -2004318072;
	// begin inline asm
	mov.b32 %r16042, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16041, %r16042, %r16040;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16044, %r15743, %r16041;
	// end inline asm
	// begin inline asm
	mov.b32 %r16047, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16048, %r16042, %r16047;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16051, %r15751, %r16048;
	// end inline asm
	// begin inline asm
	mov.b32 %r16054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16055, %r16042, %r16054;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16058, %r15759, %r16055;
	// end inline asm
	// begin inline asm
	mov.b32 %r16061, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16062, %r16042, %r16061;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16065, %r15767, %r16062;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16068, %r16044, %r16058, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16072, %r16051, %r16065, %r4418;
	// end inline asm
	shl.b32 	%r16079, %r16072, 4;
	// begin inline asm
	lop3.b32 %r16076, %r4424, %r16068, %r16079, 202;
	// end inline asm
	xor.b32  	%r16253, %r16076, -2004318072;
	// begin inline asm
	mov.b32 %r16083, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16082, %r16083, %r16081;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16085, %r15775, %r16082;
	// end inline asm
	// begin inline asm
	mov.b32 %r16088, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16089, %r16083, %r16088;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16092, %r15783, %r16089;
	// end inline asm
	// begin inline asm
	mov.b32 %r16095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16096, %r16083, %r16095;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16099, %r15791, %r16096;
	// end inline asm
	// begin inline asm
	mov.b32 %r16102, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16103, %r16083, %r16102;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16106, %r15799, %r16103;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16109, %r16085, %r16099, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16113, %r16092, %r16106, %r4418;
	// end inline asm
	shl.b32 	%r16120, %r16113, 4;
	// begin inline asm
	lop3.b32 %r16117, %r4424, %r16109, %r16120, 202;
	// end inline asm
	xor.b32  	%r16254, %r16117, -2004318072;
	// begin inline asm
	mov.b32 %r16124, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16123, %r16124, %r16122;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16126, %r15807, %r16123;
	// end inline asm
	// begin inline asm
	mov.b32 %r16129, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16130, %r16124, %r16129;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16133, %r15815, %r16130;
	// end inline asm
	// begin inline asm
	mov.b32 %r16136, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16137, %r16124, %r16136;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16140, %r15823, %r16137;
	// end inline asm
	// begin inline asm
	mov.b32 %r16143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16144, %r16124, %r16143;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16147, %r15831, %r16144;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16150, %r16126, %r16140, %r4418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16154, %r16133, %r16147, %r4418;
	// end inline asm
	shl.b32 	%r16161, %r16154, 4;
	// begin inline asm
	lop3.b32 %r16158, %r4424, %r16150, %r16161, 202;
	// end inline asm
	xor.b32  	%r16255, %r16158, -2004318072;
	st.shared.u32 	[%rd107], %r16248;
	st.shared.u32 	[%rd109], %r16249;
	st.shared.u32 	[%rd111], %r16250;
	st.shared.u32 	[%rd113], %r16251;
	st.shared.u32 	[%rd115], %r16252;
	st.shared.u32 	[%rd117], %r16253;
	st.shared.u32 	[%rd119], %r16254;
	st.shared.u32 	[%rd121], %r16255;
	add.s32 	%r16400, %r16400, 128;
	setp.eq.s32 	%p330, %r16400, 256;
	@%p330 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;
$L__BB0_184:                            // %guard_exit29817
                                        //   in Loop: Header=BB0_181 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16261, [%rd5];
	ld.shared.u32 	%r16262, [%rd6+128];
	ld.shared.u32 	%r16269, [%rd6+4];
	ld.shared.u32 	%r16270, [%rd6+132];
	ld.shared.u32 	%r16277, [%rd7];
	ld.shared.u32 	%r16278, [%rd8+128];
	ld.shared.u32 	%r16285, [%rd8+4];
	ld.shared.u32 	%r16286, [%rd8+132];
	ld.shared.u32 	%r16293, [%rd5+16644];
	ld.shared.u32 	%r16294, [%rd6+16772];
	ld.shared.u32 	%r16301, [%rd6+16648];
	ld.shared.u32 	%r16302, [%rd6+16776];
	ld.shared.u32 	%r16309, [%rd7+16644];
	ld.shared.u32 	%r16310, [%rd21];
	ld.shared.u32 	%r16317, [%rd8+16648];
	ld.shared.u32 	%r16318, [%rd22];
	// begin inline asm
	prmt.b32 %r16256, %r16261, %r16262, %r811;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16260, %r16261, %r16262, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16264, %r16269, %r16270, %r811;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16268, %r16269, %r16270, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16272, %r16277, %r16278, %r811;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16276, %r16277, %r16278, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16280, %r16285, %r16286, %r811;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16284, %r16285, %r16286, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16288, %r16293, %r16294, %r811;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16292, %r16293, %r16294, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16296, %r16301, %r16302, %r811;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16300, %r16301, %r16302, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16304, %r16309, %r16310, %r811;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16308, %r16309, %r16310, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16312, %r16317, %r16318, %r811;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16316, %r16317, %r16318, %r815;
	// end inline asm
	selp.b32 	%r16320, %r16260, %r16256, %p316;
	shfl.sync.bfly.b32	%r255, %r16320, 8, 31, -1;
	selp.b32 	%r16321, %r16268, %r16264, %p316;
	shfl.sync.bfly.b32	%r256, %r16321, 8, 31, -1;
	selp.b32 	%r16322, %r16276, %r16272, %p316;
	shfl.sync.bfly.b32	%r257, %r16322, 8, 31, -1;
	selp.b32 	%r16323, %r16284, %r16280, %p316;
	shfl.sync.bfly.b32	%r258, %r16323, 8, 31, -1;
	selp.b32 	%r16324, %r16292, %r16288, %p316;
	shfl.sync.bfly.b32	%r16325, %r16324, 8, 31, -1;
	selp.b32 	%r16326, %r16300, %r16296, %p316;
	shfl.sync.bfly.b32	%r16327, %r16326, 8, 31, -1;
	selp.b32 	%r16328, %r16308, %r16304, %p316;
	shfl.sync.bfly.b32	%r16329, %r16328, 8, 31, -1;
	selp.b32 	%r16330, %r16316, %r16312, %p316;
	shfl.sync.bfly.b32	%r16331, %r16330, 8, 31, -1;
	and.b32  	%r267, %r16399, 768;
	setp.lt.u32 	%p332, %r267, 384;
	shl.b32 	%r16354, %r16399, 11;
	@%p332 bra 	$L__BB0_186;
// %bb.185:                             // %pass28458
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r16332, %r258, %r16284, %p316;
	selp.b32 	%r16333, %r16280, %r258, %p316;
	selp.b32 	%r16334, %r257, %r16276, %p316;
	selp.b32 	%r16335, %r16272, %r257, %p316;
	selp.b32 	%r16336, %r256, %r16268, %p316;
	selp.b32 	%r16337, %r16264, %r256, %p316;
	selp.b32 	%r16338, %r255, %r16260, %p316;
	selp.b32 	%r16339, %r16256, %r255, %p316;
	or.b32  	%r16341, %r16354, %r124;
	or.b32  	%r16342, %r16341, %r125;
	or.b32  	%r16343, %r16342, %r138;
	cvt.u64.u32 	%rd122, %r16343;
	add.s64 	%rd123, %rd122, %rd9;
	shr.u64 	%rd124, %rd123, 40;
	add.s64 	%rd125, %rd123, %rd124;
	shr.s64 	%rd126, %rd125, 24;
	setp.lt.s64 	%p334, %rd123, 0;
	and.b64  	%rd127, %rd125, -16777216;
	setp.ne.s64 	%p335, %rd127, %rd123;
	and.pred  	%p336, %p334, %p335;
	selp.u64 	%rd128, 1, 0, %p336;
	sub.s64 	%rd129, %rd128, %rd126;
	shl.b64 	%rd130, %rd129, 24;
	add.s64 	%rd131, %rd130, %rd123;
	shl.b64 	%rd132, %rd131, 2;
	add.s64 	%rd133, %rd3, %rd132;
	st.global.v4.u32 	[%rd133], {%r16339, %r16337, %r16338, %r16336};
	or.b32  	%r16344, %r16342, %r139;
	cvt.s64.s32 	%rd134, %r16344;
	add.s64 	%rd135, %rd134, %rd9;
	shr.u64 	%rd136, %rd135, 40;
	add.s64 	%rd137, %rd135, %rd136;
	shr.u64 	%rd138, %rd137, 24;
	shr.u64 	%rd139, %rd135, 63;
	sub.s64 	%rd140, %rd139, %rd138;
	shl.b64 	%rd141, %rd140, 24;
	add.s64 	%rd142, %rd141, %rd135;
	shl.b64 	%rd143, %rd142, 2;
	add.s64 	%rd144, %rd3, %rd143;
	st.global.v4.u32 	[%rd144], {%r16335, %r16333, %r16334, %r16332};
$L__BB0_186:                            // %pass28635
                                        //   in Loop: Header=BB0_181 Depth=1
	or.b32  	%r16345, %r267, 128;
	setp.lt.u32 	%p337, %r16345, 384;
	@%p337 bra 	$L__BB0_187;
// %bb.189:                             // %pass28678
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r259, %r16288, %r16325, %p316;
	selp.b32 	%r260, %r16325, %r16292, %p316;
	selp.b32 	%r261, %r16296, %r16327, %p316;
	selp.b32 	%r262, %r16327, %r16300, %p316;
	selp.b32 	%r263, %r16304, %r16329, %p316;
	selp.b32 	%r264, %r16329, %r16308, %p316;
	selp.b32 	%r265, %r16312, %r16331, %p316;
	selp.b32 	%r266, %r16331, %r16316, %p316;
	or.b32  	%r16347, %r16354, %r124;
	or.b32  	%r16348, %r16347, %r125;
	or.b32  	%r16349, %r16348, 262144;
	or.b32  	%r16350, %r16349, %r138;
	cvt.u64.u32 	%rd145, %r16350;
	add.s64 	%rd146, %rd145, %rd9;
	shr.u64 	%rd147, %rd146, 40;
	add.s64 	%rd148, %rd146, %rd147;
	shr.s64 	%rd149, %rd148, 24;
	setp.lt.s64 	%p338, %rd146, 0;
	and.b64  	%rd150, %rd148, -16777216;
	setp.ne.s64 	%p339, %rd150, %rd146;
	and.pred  	%p340, %p338, %p339;
	selp.u64 	%rd151, 1, 0, %p340;
	sub.s64 	%rd152, %rd151, %rd149;
	shl.b64 	%rd153, %rd152, 24;
	add.s64 	%rd154, %rd153, %rd146;
	shl.b64 	%rd155, %rd154, 2;
	add.s64 	%rd156, %rd3, %rd155;
	st.global.v4.u32 	[%rd156], {%r259, %r261, %r260, %r262};
	or.b32  	%r16351, %r139, %r16349;
	cvt.s64.s32 	%rd157, %r16351;
	add.s64 	%rd158, %rd157, %rd9;
	shr.u64 	%rd159, %rd158, 40;
	add.s64 	%rd160, %rd158, %rd159;
	shr.u64 	%rd161, %rd160, 24;
	shr.u64 	%rd162, %rd158, 63;
	sub.s64 	%rd163, %rd162, %rd161;
	shl.b64 	%rd164, %rd163, 24;
	add.s64 	%rd165, %rd164, %rd158;
	shl.b64 	%rd166, %rd165, 2;
	add.s64 	%rd167, %rd3, %rd166;
	st.global.v4.u32 	[%rd167], {%r263, %r265, %r264, %r266};
	bra.uni 	$L__BB0_187;
$L__BB0_188:                            // %L70764
	mov.u32 	%r16352, 0;
	st.global.u32 	[%rd4], %r16352;
	ret;
$L__BB0_7:                              // %L246
	mov.u32 	%r16353, 2;
	st.global.u32 	[%rd4], %r16353;
	mov.u64 	%rd168, exception5808;
	cvta.global.u64 	%rd169, %rd168;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd169;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r268;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd44, exception1;
	cvta.global.u64 	%rd45, %rd44;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd45;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r268;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
