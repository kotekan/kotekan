// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5805[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception15829[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<318>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16410>;
	.reg .f32 	%f<1310>;
	.reg .b64 	%rd<162>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r249, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd24, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r256, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r256, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd25, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r250, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r257, %r1, 9;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r258, %r3, %r4;
	or.b32  	%r259, %r258, %r257;
	mul.wide.u32 	%rd31, %r259, 4;
	add.s64 	%rd4, %rd25, %rd31;
	mov.u32 	%r260, 1;
	st.global.u32 	[%rd4], %r260;
	setp.gt.u32 	%p2, %r250, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L119
	ld.param.u32 	%r251, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r251, %r250;
	setp.gt.s32 	%p4, %r251, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L126
	ld.param.u32 	%r252, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r261, %r251, %r250;
	and.b32  	%r262, %r261, 255;
	setp.ne.s32 	%p6, %r262, 0;
	setp.gt.u32 	%p7, %r252, 255;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L137
	ld.param.u32 	%r253, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r253, %r252;
	setp.gt.s32 	%p10, %r253, 511;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L144
	sub.s32 	%r263, %r253, %r252;
	and.b32  	%r264, %r263, 1;
	setp.eq.b32 	%p12, %r264, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r254, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p15, %r254, 0;
	@%p15 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r255, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p16, %r254, %r255;
	setp.lt.s32 	%p17, %r255, 65;
	and.pred  	%p18, %p16, %p17;
	@%p18 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass180
	bfe.u32 	%r186, %r4, 1, 1;
	and.b32  	%r187, %r4, 1;
	bfe.u32 	%r189, %r4, 2, 1;
	shr.u32 	%r190, %r4, 4;
	shl.b32 	%r275, %r190, 2;
	shl.b32 	%r276, %r189, 3;
	shl.b32 	%r277, %r187, 4;
	shl.b32 	%r278, %r186, 5;
	or.b32  	%r279, %r277, %r278;
	or.b32  	%r280, %r276, %r279;
	or.b32  	%r281, %r275, %r280;
	bfe.u32 	%r192, %r4, 3, 1;
	shl.b32 	%r282, %r192, 1;
	or.b32  	%r193, %r282, %r281;
	or.b32  	%r194, %r193, 64;
	mov.f32 	%f221, 0f40000000;
	mov.f32 	%f222, 0f43FF8000;
	div.approx.f32 	%f140, %f222, %f221;
	cvt.rn.f32.s32 	%f223, %r193;
	sub.f32 	%f224, %f223, %f140;
	mov.f32 	%f253, 0f43000000;
	div.approx.f32 	%f142, %f224, %f253;
	setp.ne.f32 	%p24, %f142, 0f00000000;
	mov.f32 	%f1277, 0f3F800000;
	mov.f32 	%f1262, %f1277;
	@%p24 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L768
	sin.approx.f32 	%f254, %f142;
	div.approx.f32 	%f1262, %f254, %f142;
$L__BB0_13:                             // %L771
	cvt.rn.f32.s32 	%f257, %r194;
	sub.f32 	%f258, %f257, %f140;
	div.approx.f32 	%f5, %f258, %f253;
	setp.eq.f32 	%p30, %f5, 0f00000000;
	mov.f32 	%f1263, %f1277;
	@%p30 bra 	$L__BB0_15;
// %bb.14:                              // %L788
	sin.approx.f32 	%f288, %f5;
	div.approx.f32 	%f1263, %f288, %f5;
$L__BB0_15:                             // %L791
	or.b32  	%r300, %r193, 1;
	or.b32  	%r6, %r193, 65;
	cvt.rn.f32.s32 	%f292, %r300;
	sub.f32 	%f293, %f292, %f140;
	div.approx.f32 	%f9, %f293, %f253;
	setp.eq.f32 	%p36, %f9, 0f00000000;
	mov.f32 	%f1264, %f1277;
	@%p36 bra 	$L__BB0_17;
// %bb.16:                              // %L870
	sin.approx.f32 	%f323, %f9;
	div.approx.f32 	%f1264, %f323, %f9;
$L__BB0_17:                             // %L873
	cvt.rn.f32.s32 	%f326, %r6;
	sub.f32 	%f327, %f326, %f140;
	div.approx.f32 	%f14, %f327, %f253;
	setp.eq.f32 	%p42, %f14, 0f00000000;
	mov.f32 	%f1265, %f1277;
	@%p42 bra 	$L__BB0_19;
// %bb.18:                              // %L890
	sin.approx.f32 	%f357, %f14;
	div.approx.f32 	%f1265, %f357, %f14;
$L__BB0_19:                             // %L893
	or.b32  	%r318, %r193, 128;
	or.b32  	%r8, %r193, 192;
	cvt.rn.f32.s32 	%f361, %r318;
	sub.f32 	%f362, %f361, %f140;
	div.approx.f32 	%f18, %f362, %f253;
	setp.eq.f32 	%p48, %f18, 0f00000000;
	mov.f32 	%f1266, %f1277;
	@%p48 bra 	$L__BB0_21;
// %bb.20:                              // %L972
	sin.approx.f32 	%f392, %f18;
	div.approx.f32 	%f1266, %f392, %f18;
$L__BB0_21:                             // %L975
	mov.f32 	%f225, 0f44004000;
	cvt.rn.f32.s32 	%f395, %r8;
	sub.f32 	%f396, %f395, %f140;
	div.approx.f32 	%f23, %f396, %f253;
	setp.eq.f32 	%p54, %f23, 0f00000000;
	mov.f32 	%f1267, %f1277;
	@%p54 bra 	$L__BB0_23;
// %bb.22:                              // %L992
	sin.approx.f32 	%f426, %f23;
	div.approx.f32 	%f1267, %f426, %f23;
$L__BB0_23:                             // %L995
	div.approx.f32 	%f226, %f224, %f225;
	div.approx.f32 	%f260, %f258, %f225;
	div.approx.f32 	%f295, %f293, %f225;
	div.approx.f32 	%f329, %f327, %f225;
	div.approx.f32 	%f364, %f362, %f225;
	div.approx.f32 	%f398, %f396, %f225;
	or.b32  	%r336, %r193, 129;
	or.b32  	%r10, %r193, 193;
	cvt.rn.f32.s32 	%f430, %r336;
	sub.f32 	%f431, %f430, %f140;
	div.approx.f32 	%f433, %f431, %f225;
	div.approx.f32 	%f27, %f431, %f253;
	setp.eq.f32 	%p60, %f27, 0f00000000;
	mov.f32 	%f1268, %f1277;
	@%p60 bra 	$L__BB0_25;
// %bb.24:                              // %L1074
	sin.approx.f32 	%f461, %f27;
	div.approx.f32 	%f1268, %f461, %f27;
$L__BB0_25:                             // %L1077
	abs.f32 	%f227, %f226;
	abs.f32 	%f261, %f260;
	abs.f32 	%f296, %f295;
	abs.f32 	%f330, %f329;
	abs.f32 	%f365, %f364;
	abs.f32 	%f399, %f398;
	abs.f32 	%f434, %f433;
	cvt.rn.f32.s32 	%f464, %r10;
	sub.f32 	%f465, %f464, %f140;
	div.approx.f32 	%f467, %f465, %f225;
	abs.f32 	%f468, %f467;
	div.approx.f32 	%f32, %f465, %f253;
	setp.eq.f32 	%p66, %f32, 0f00000000;
	mov.f32 	%f1269, %f1277;
	@%p66 bra 	$L__BB0_27;
// %bb.26:                              // %L1094
	sin.approx.f32 	%f495, %f32;
	div.approx.f32 	%f1269, %f495, %f32;
$L__BB0_27:                             // %L1097
	setp.gt.f32 	%p19, %f227, 0f4B800000;
	mul.f32 	%f228, %f226, 0f00000000;
	setp.gt.f32 	%p25, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p31, %f296, 0f4B800000;
	mul.f32 	%f297, %f295, 0f00000000;
	setp.gt.f32 	%p37, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p43, %f365, 0f4B800000;
	mul.f32 	%f366, %f364, 0f00000000;
	setp.gt.f32 	%p49, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p55, %f434, 0f4B800000;
	mul.f32 	%f435, %f433, 0f00000000;
	setp.gt.f32 	%p61, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	or.b32  	%r354, %r193, 256;
	or.b32  	%r12, %r193, 320;
	cvt.rn.f32.s32 	%f499, %r354;
	sub.f32 	%f500, %f499, %f140;
	div.approx.f32 	%f502, %f500, %f225;
	abs.f32 	%f503, %f502;
	setp.gt.f32 	%p67, %f503, 0f4B800000;
	mul.f32 	%f504, %f502, 0f00000000;
	div.approx.f32 	%f36, %f500, %f253;
	setp.eq.f32 	%p72, %f36, 0f00000000;
	mov.f32 	%f1270, %f1277;
	@%p72 bra 	$L__BB0_29;
// %bb.28:                              // %L1176
	sin.approx.f32 	%f530, %f36;
	div.approx.f32 	%f1270, %f530, %f36;
$L__BB0_29:                             // %L1179
	selp.f32 	%f229, %f228, %f226, %p19;
	selp.f32 	%f263, %f262, %f260, %p25;
	selp.f32 	%f298, %f297, %f295, %p31;
	selp.f32 	%f332, %f331, %f329, %p37;
	selp.f32 	%f367, %f366, %f364, %p43;
	selp.f32 	%f401, %f400, %f398, %p49;
	selp.f32 	%f436, %f435, %f433, %p55;
	selp.f32 	%f470, %f469, %f467, %p61;
	selp.f32 	%f505, %f504, %f502, %p67;
	cvt.rn.f32.s32 	%f533, %r12;
	sub.f32 	%f534, %f533, %f140;
	div.approx.f32 	%f536, %f534, %f225;
	abs.f32 	%f537, %f536;
	setp.gt.f32 	%p73, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	selp.f32 	%f539, %f538, %f536, %p73;
	div.approx.f32 	%f41, %f534, %f253;
	setp.eq.f32 	%p78, %f41, 0f00000000;
	mov.f32 	%f1271, %f1277;
	@%p78 bra 	$L__BB0_31;
// %bb.30:                              // %L1196
	sin.approx.f32 	%f564, %f41;
	div.approx.f32 	%f1271, %f564, %f41;
$L__BB0_31:                             // %L1199
	add.f32 	%f230, %f229, %f229;
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f299, %f298, %f298;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f368, %f367, %f367;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f437, %f436, %f436;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f506, %f505, %f505;
	add.f32 	%f540, %f539, %f539;
	or.b32  	%r372, %r193, 257;
	or.b32  	%r14, %r193, 321;
	cvt.rn.f32.s32 	%f568, %r372;
	sub.f32 	%f569, %f568, %f140;
	div.approx.f32 	%f571, %f569, %f225;
	abs.f32 	%f572, %f571;
	setp.gt.f32 	%p79, %f572, 0f4B800000;
	mul.f32 	%f573, %f571, 0f00000000;
	selp.f32 	%f574, %f573, %f571, %p79;
	add.f32 	%f575, %f574, %f574;
	div.approx.f32 	%f45, %f569, %f253;
	setp.eq.f32 	%p84, %f45, 0f00000000;
	mov.f32 	%f1272, %f1277;
	@%p84 bra 	$L__BB0_33;
// %bb.32:                              // %L1278
	sin.approx.f32 	%f599, %f45;
	div.approx.f32 	%f1272, %f599, %f45;
$L__BB0_33:                             // %L1281
	mov.b32 	%r283, %f230;
	mov.b32 	%r290, %f264;
	mov.b32 	%r301, %f299;
	mov.b32 	%r308, %f333;
	mov.b32 	%r319, %f368;
	mov.b32 	%r326, %f402;
	mov.b32 	%r337, %f437;
	mov.b32 	%r344, %f471;
	mov.b32 	%r355, %f506;
	mov.b32 	%r362, %f540;
	mov.b32 	%r373, %f575;
	cvt.rn.f32.s32 	%f602, %r14;
	sub.f32 	%f603, %f602, %f140;
	div.approx.f32 	%f605, %f603, %f225;
	abs.f32 	%f606, %f605;
	setp.gt.f32 	%p85, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	selp.f32 	%f608, %f607, %f605, %p85;
	add.f32 	%f609, %f608, %f608;
	mov.b32 	%r380, %f609;
	div.approx.f32 	%f50, %f603, %f253;
	setp.eq.f32 	%p90, %f50, 0f00000000;
	mov.f32 	%f1273, %f1277;
	@%p90 bra 	$L__BB0_35;
// %bb.34:                              // %L1298
	sin.approx.f32 	%f633, %f50;
	div.approx.f32 	%f1273, %f633, %f50;
$L__BB0_35:                             // %L1301
	and.b32  	%r284, %r283, -2147483648;
	and.b32  	%r291, %r290, -2147483648;
	and.b32  	%r302, %r301, -2147483648;
	and.b32  	%r309, %r308, -2147483648;
	and.b32  	%r320, %r319, -2147483648;
	and.b32  	%r327, %r326, -2147483648;
	and.b32  	%r338, %r337, -2147483648;
	and.b32  	%r345, %r344, -2147483648;
	and.b32  	%r356, %r355, -2147483648;
	and.b32  	%r363, %r362, -2147483648;
	and.b32  	%r374, %r373, -2147483648;
	and.b32  	%r381, %r380, -2147483648;
	or.b32  	%r390, %r193, 384;
	or.b32  	%r16, %r193, 448;
	cvt.rn.f32.s32 	%f637, %r390;
	sub.f32 	%f638, %f637, %f140;
	div.approx.f32 	%f640, %f638, %f225;
	abs.f32 	%f641, %f640;
	setp.gt.f32 	%p91, %f641, 0f4B800000;
	mul.f32 	%f642, %f640, 0f00000000;
	selp.f32 	%f643, %f642, %f640, %p91;
	add.f32 	%f644, %f643, %f643;
	mov.b32 	%r391, %f644;
	and.b32  	%r392, %r391, -2147483648;
	div.approx.f32 	%f54, %f638, %f253;
	setp.eq.f32 	%p96, %f54, 0f00000000;
	mov.f32 	%f1274, %f1277;
	@%p96 bra 	$L__BB0_37;
// %bb.36:                              // %L1380
	sin.approx.f32 	%f668, %f54;
	div.approx.f32 	%f1274, %f668, %f54;
$L__BB0_37:                             // %L1383
	or.b32  	%r285, %r284, 1056964608;
	or.b32  	%r292, %r291, 1056964608;
	or.b32  	%r303, %r302, 1056964608;
	or.b32  	%r310, %r309, 1056964608;
	or.b32  	%r321, %r320, 1056964608;
	or.b32  	%r328, %r327, 1056964608;
	or.b32  	%r339, %r338, 1056964608;
	or.b32  	%r346, %r345, 1056964608;
	or.b32  	%r357, %r356, 1056964608;
	or.b32  	%r364, %r363, 1056964608;
	or.b32  	%r375, %r374, 1056964608;
	or.b32  	%r382, %r381, 1056964608;
	or.b32  	%r393, %r392, 1056964608;
	cvt.rn.f32.s32 	%f671, %r16;
	sub.f32 	%f672, %f671, %f140;
	div.approx.f32 	%f674, %f672, %f225;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p97, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	selp.f32 	%f677, %f676, %f674, %p97;
	add.f32 	%f678, %f677, %f677;
	mov.b32 	%r398, %f678;
	and.b32  	%r399, %r398, -2147483648;
	or.b32  	%r400, %r399, 1056964608;
	div.approx.f32 	%f59, %f672, %f253;
	setp.eq.f32 	%p102, %f59, 0f00000000;
	mov.f32 	%f1275, %f1277;
	@%p102 bra 	$L__BB0_39;
// %bb.38:                              // %L1400
	sin.approx.f32 	%f702, %f59;
	div.approx.f32 	%f1275, %f702, %f59;
$L__BB0_39:                             // %L1403
	mov.b32 	%f231, %r285;
	mov.b32 	%f265, %r292;
	mov.b32 	%f300, %r303;
	mov.b32 	%f334, %r310;
	mov.b32 	%f369, %r321;
	mov.b32 	%f403, %r328;
	mov.b32 	%f438, %r339;
	mov.b32 	%f472, %r346;
	mov.b32 	%f507, %r357;
	mov.b32 	%f541, %r364;
	mov.b32 	%f576, %r375;
	mov.b32 	%f610, %r382;
	mov.b32 	%f645, %r393;
	mov.b32 	%f679, %r400;
	or.b32  	%r408, %r193, 385;
	or.b32  	%r18, %r193, 449;
	cvt.rn.f32.s32 	%f706, %r408;
	sub.f32 	%f707, %f706, %f140;
	div.approx.f32 	%f709, %f707, %f225;
	abs.f32 	%f710, %f709;
	setp.gt.f32 	%p103, %f710, 0f4B800000;
	mul.f32 	%f711, %f709, 0f00000000;
	selp.f32 	%f712, %f711, %f709, %p103;
	add.f32 	%f713, %f712, %f712;
	mov.b32 	%r409, %f713;
	and.b32  	%r410, %r409, -2147483648;
	or.b32  	%r411, %r410, 1056964608;
	mov.b32 	%f714, %r411;
	div.approx.f32 	%f63, %f707, %f253;
	setp.eq.f32 	%p108, %f63, 0f00000000;
	mov.f32 	%f1276, %f1277;
	@%p108 bra 	$L__BB0_41;
// %bb.40:                              // %L1482
	sin.approx.f32 	%f737, %f63;
	div.approx.f32 	%f1276, %f737, %f63;
$L__BB0_41:                             // %L1485
	add.f32 	%f232, %f230, %f231;
	abs.f32 	%f234, %f230;
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f301, %f299, %f300;
	abs.f32 	%f303, %f299;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f370, %f368, %f369;
	abs.f32 	%f372, %f368;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f439, %f437, %f438;
	abs.f32 	%f441, %f437;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f508, %f506, %f507;
	abs.f32 	%f510, %f506;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f577, %f575, %f576;
	abs.f32 	%f579, %f575;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f646, %f644, %f645;
	abs.f32 	%f648, %f644;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f715, %f713, %f714;
	abs.f32 	%f717, %f713;
	shr.u32 	%r185, %r4, 1;
	shr.u32 	%r191, %r4, 3;
	cvt.rn.f32.s32 	%f740, %r18;
	sub.f32 	%f741, %f740, %f140;
	div.approx.f32 	%f743, %f741, %f225;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p109, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p109;
	add.f32 	%f747, %f746, %f746;
	mov.b32 	%r416, %f747;
	and.b32  	%r417, %r416, -2147483648;
	or.b32  	%r418, %r417, 1056964608;
	mov.b32 	%f748, %r418;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	div.approx.f32 	%f68, %f741, %f253;
	setp.eq.f32 	%p114, %f68, 0f00000000;
	@%p114 bra 	$L__BB0_43;
// %bb.42:                              // %L1502
	sin.approx.f32 	%f771, %f68;
	div.approx.f32 	%f1277, %f771, %f68;
$L__BB0_43:                             // %L1505
	cvt.rzi.f32.f32 	%f233, %f232;
	setp.gt.f32 	%p20, %f234, 0f4B000000;
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p26, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f302, %f301;
	setp.gt.f32 	%p32, %f303, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p38, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f371, %f370;
	setp.gt.f32 	%p44, %f372, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p50, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f440, %f439;
	setp.gt.f32 	%p56, %f441, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p62, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f509, %f508;
	setp.gt.f32 	%p68, %f510, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p74, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f578, %f577;
	setp.gt.f32 	%p80, %f579, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p86, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f647, %f646;
	setp.gt.f32 	%p92, %f648, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p98, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f716, %f715;
	setp.gt.f32 	%p104, %f717, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p110, %f751, 0f4B000000;
	mul.lo.s32 	%r438, %r193, 127;
	and.b32  	%r439, %r438, 255;
	cvt.rn.f32.s32 	%f774, %r439;
	div.approx.f32 	%f776, %f774, %f253;
	add.f32 	%f777, %f776, %f776;
	mov.b32 	%r440, %f777;
	and.b32  	%r441, %r440, -2147483648;
	or.b32  	%r442, %r441, 1056964608;
	mov.b32 	%f778, %r442;
	add.f32 	%f779, %f777, %f778;
	cvt.rzi.f32.f32 	%f780, %f779;
	abs.f32 	%f781, %f777;
	setp.gt.f32 	%p115, %f781, 0f4B000000;
	selp.f32 	%f782, %f777, %f780, %p115;
	cvt.rzi.f32.f32 	%f783, %f777;
	setp.lt.f32 	%p116, %f781, 0f3F000000;
	add.s32 	%r448, %r438, 192;
	and.b32  	%r449, %r448, 255;
	cvt.rn.f32.s32 	%f809, %r449;
	div.approx.f32 	%f810, %f809, %f253;
	add.f32 	%f811, %f810, %f810;
	mov.b32 	%r450, %f811;
	and.b32  	%r451, %r450, -2147483648;
	or.b32  	%r452, %r451, 1056964608;
	mov.b32 	%f812, %r452;
	add.f32 	%f813, %f811, %f812;
	cvt.rzi.f32.f32 	%f814, %f813;
	abs.f32 	%f815, %f811;
	setp.gt.f32 	%p122, %f815, 0f4B000000;
	selp.f32 	%f816, %f811, %f814, %p122;
	cvt.rzi.f32.f32 	%f817, %f811;
	setp.lt.f32 	%p123, %f815, 0f3F000000;
	and.b32  	%r458, %r191, 2;
	and.b32  	%r459, %r185, 4;
	or.b32  	%r460, %r189, %r458;
	or.b32  	%r24, %r460, %r459;
	and.b32  	%r461, %r4, 3;
	mul.lo.s32 	%r462, %r461, %r24;
	shl.b32 	%r463, %r462, 1;
	neg.s32 	%r464, %r463;
	cvt.rn.f32.s32 	%f842, %r464;
	mov.f32 	%f843, 0f41000000;
	div.approx.f32 	%f71, %f842, %f843;
	abs.f32 	%f1296, %f71;
	setp.lt.f32 	%p129, %f1296, 0f40000000;
	@%p129 bra 	$L__BB0_131;
// %bb.44:
	setp.gtu.f32 	%p130, %f1296, 0f4B800000;
	@%p130 bra 	$L__BB0_127;
	bra.uni 	$L__BB0_45;
$L__BB0_127:
	mov.b32 	%r196, %f1296;
	and.b32  	%r465, %r196, 8388607;
	or.b32  	%r16402, %r465, 1065353216;
	mov.b32 	%f1295, %r16402;
	add.s32 	%r466, %r196, -1073741824;
	and.b32  	%r16403, %r466, -8388608;
	setp.eq.s32 	%p136, %r16403, 0;
	@%p136 bra 	$L__BB0_130;
// %bb.128:                             // %__nv_fmaf_rn.exit4.i.i.i1712.preheader
	mov.f32 	%f853, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f852,%f853;
	// end inline asm
$L__BB0_129:                            // %__nv_fmaf_rn.exit4.i.i.i1712
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r467, %r16403, 192937984;
	add.s32 	%r468, %r16402, %r467;
	mov.b32 	%f854, %r468;
	mul.f32 	%f855, %f852, %f854;
	sub.f32 	%f856, %f854, %f855;
	fma.rn.f32 	%f857, %f856, %f852, %f855;
	sub.f32 	%f858, %f854, %f857;
	fma.rz.f32 	%f859, %f858, %f852, %f857;
	cvt.rzi.f32.f32 	%f860, %f859;
	sub.f32 	%f1295, %f854, %f860;
	sub.s32 	%r16403, %r16403, %r467;
	mov.b32 	%r16402, %f1295;
	setp.ne.s32 	%p137, %r16403, 0;
	setp.ne.s32 	%p138, %r16402, 0;
	and.pred  	%p139, %p137, %p138;
	@%p139 bra 	$L__BB0_129;
$L__BB0_130:                            // %__internal_fmodf_slowpath_mod.exit.i.i1714
	setp.gt.u32 	%p140, %r196, 2139095039;
	selp.f32 	%f861, 0f7FFFFFFF, 0f4B800000, %p140;
	mul.f32 	%f862, %f1295, 0f34000000;
	mul.f32 	%f1296, %f861, %f862;
	bra.uni 	$L__BB0_131;
$L__BB0_45:                             // %__nv_fast_fdividef.exit.i.i.i1691
	div.approx.f32 	%f845, %f1296, %f221;
	cvt.rzi.f32.f32 	%f1294, %f845;
	fma.rn.f32 	%f144, %f1294, 0fC0000000, %f1296;
	mov.b32 	%r195, %f144;
	setp.lt.u32 	%p131, %r195, 1073741824;
	@%p131 bra 	$L__BB0_126;
// %bb.46:
	setp.lt.u32 	%p132, %r195, -2147483647;
	@%p132 bra 	$L__BB0_124;
// %bb.47:
	add.f32 	%f850, %f1294, 0fBF800000;
	setp.lt.f32 	%p135, %f144, 0fC0000000;
	add.f32 	%f851, %f850, 0fBF800000;
	selp.f32 	%f1294, %f851, %f850, %p135;
	bra.uni 	$L__BB0_126;
$L__BB0_124:
	add.f32 	%f1294, %f1294, 0f3F800000;
	setp.ltu.f32 	%p133, %f144, 0f40800000;
	@%p133 bra 	$L__BB0_126;
// %bb.125:                             // %__nv_fmaf_rn.exit.i.i.i1695
	add.f32 	%f846, %f1294, 0f3F800000;
	fma.rn.f32 	%f848, %f221, 0fC0400000, %f144;
	setp.ge.f32 	%p134, %f848, 0f00000000;
	add.f32 	%f849, %f846, 0f3F800000;
	selp.f32 	%f1294, %f849, %f846, %p134;
$L__BB0_126:                            // %__internal_fmodf_fastpath_quot.exit.i.i1698
	fma.rn.f32 	%f1296, %f1294, 0fC0000000, %f1296;
$L__BB0_131:                            // %__internal_fmodf_kernel.exit.i1717
	selp.f32 	%f235, %f230, %f233, %p20;
	cvt.rzi.f32.f32 	%f236, %f230;
	setp.lt.f32 	%p21, %f234, 0f3F000000;
	selp.f32 	%f269, %f264, %f267, %p26;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p27, %f268, 0f3F000000;
	selp.f32 	%f304, %f299, %f302, %p32;
	cvt.rzi.f32.f32 	%f305, %f299;
	setp.lt.f32 	%p33, %f303, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p38;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p39, %f337, 0f3F000000;
	selp.f32 	%f373, %f368, %f371, %p44;
	cvt.rzi.f32.f32 	%f374, %f368;
	setp.lt.f32 	%p45, %f372, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p50;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p51, %f406, 0f3F000000;
	selp.f32 	%f442, %f437, %f440, %p56;
	cvt.rzi.f32.f32 	%f443, %f437;
	setp.lt.f32 	%p57, %f441, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p62;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p63, %f475, 0f3F000000;
	selp.f32 	%f511, %f506, %f509, %p68;
	cvt.rzi.f32.f32 	%f512, %f506;
	setp.lt.f32 	%p69, %f510, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p74;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p75, %f544, 0f3F000000;
	selp.f32 	%f580, %f575, %f578, %p80;
	cvt.rzi.f32.f32 	%f581, %f575;
	setp.lt.f32 	%p81, %f579, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p86;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p87, %f613, 0f3F000000;
	selp.f32 	%f649, %f644, %f647, %p92;
	cvt.rzi.f32.f32 	%f650, %f644;
	setp.lt.f32 	%p93, %f648, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p98;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p99, %f682, 0f3F000000;
	selp.f32 	%f718, %f713, %f716, %p104;
	cvt.rzi.f32.f32 	%f719, %f713;
	setp.lt.f32 	%p105, %f717, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p110;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p111, %f751, 0f3F000000;
	selp.f32 	%f784, %f783, %f782, %p116;
	selp.f32 	%f818, %f817, %f816, %p123;
	shl.b32 	%r173, %r4, 1;
	abs.f32 	%f863, %f1296;
	setp.gtu.f32 	%p141, %f863, 0f7F800000;
	@%p141 bra 	$L__BB0_133;
// %bb.132:
	mov.b32 	%r469, %f71;
	and.b32  	%r470, %r469, -2147483648;
	mov.b32 	%r471, %f1296;
	or.b32  	%r472, %r470, %r471;
	mov.b32 	%f1296, %r472;
$L__BB0_133:                            // %__nv_fmodf.exit1718
	selp.f32 	%f237, %f236, %f235, %p21;
	selp.f32 	%f271, %f270, %f269, %p27;
	selp.f32 	%f306, %f305, %f304, %p33;
	selp.f32 	%f340, %f339, %f338, %p39;
	selp.f32 	%f375, %f374, %f373, %p45;
	selp.f32 	%f409, %f408, %f407, %p51;
	selp.f32 	%f444, %f443, %f442, %p57;
	selp.f32 	%f478, %f477, %f476, %p63;
	selp.f32 	%f513, %f512, %f511, %p69;
	selp.f32 	%f547, %f546, %f545, %p75;
	selp.f32 	%f582, %f581, %f580, %p81;
	selp.f32 	%f616, %f615, %f614, %p87;
	selp.f32 	%f651, %f650, %f649, %p93;
	selp.f32 	%f685, %f684, %f683, %p99;
	selp.f32 	%f720, %f719, %f718, %p105;
	selp.f32 	%f754, %f753, %f752, %p111;
	fma.rn.f32 	%f785, %f784, 0fBF000000, %f776;
	fma.rn.f32 	%f819, %f818, 0fBF000000, %f810;
	add.f32 	%f864, %f1296, %f1296;
	mov.b32 	%r473, %f864;
	and.b32  	%r474, %r473, -2147483648;
	or.b32  	%r475, %r474, 1056964608;
	mov.b32 	%f865, %r475;
	add.f32 	%f866, %f864, %f865;
	cvt.rzi.f32.f32 	%f867, %f866;
	abs.f32 	%f868, %f864;
	setp.gt.f32 	%p142, %f868, 0f4B000000;
	selp.f32 	%f869, %f864, %f867, %p142;
	cvt.rzi.f32.f32 	%f870, %f864;
	setp.lt.f32 	%p143, %f868, 0f3F000000;
	selp.f32 	%f871, %f870, %f869, %p143;
	fma.rn.f32 	%f872, %f871, 0fBF000000, %f1296;
	and.b32  	%r481, %r173, 6;
	mov.u32 	%r482, -8;
	sub.s32 	%r483, %r482, %r481;
	mul.lo.s32 	%r484, %r24, %r483;
	cvt.rn.f32.s32 	%f894, %r484;
	div.approx.f32 	%f160, %f894, %f843;
	abs.f32 	%f1280, %f160;
	setp.lt.f32 	%p149, %f1280, 0f40000000;
	@%p149 bra 	$L__BB0_59;
// %bb.48:
	setp.gtu.f32 	%p150, %f1280, 0f4B800000;
	@%p150 bra 	$L__BB0_55;
	bra.uni 	$L__BB0_49;
$L__BB0_55:
	mov.b32 	%r26, %f1280;
	and.b32  	%r485, %r26, 8388607;
	or.b32  	%r16344, %r485, 1065353216;
	mov.b32 	%f1279, %r16344;
	add.s32 	%r486, %r26, -1073741824;
	and.b32  	%r16345, %r486, -8388608;
	setp.eq.s32 	%p156, %r16345, 0;
	@%p156 bra 	$L__BB0_58;
// %bb.56:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f905, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f904,%f905;
	// end inline asm
$L__BB0_57:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r487, %r16345, 192937984;
	add.s32 	%r488, %r16344, %r487;
	mov.b32 	%f906, %r488;
	mul.f32 	%f907, %f904, %f906;
	sub.f32 	%f908, %f906, %f907;
	fma.rn.f32 	%f909, %f908, %f904, %f907;
	sub.f32 	%f910, %f906, %f909;
	fma.rz.f32 	%f911, %f910, %f904, %f909;
	cvt.rzi.f32.f32 	%f912, %f911;
	sub.f32 	%f1279, %f906, %f912;
	sub.s32 	%r16345, %r16345, %r487;
	mov.b32 	%r16344, %f1279;
	setp.ne.s32 	%p157, %r16345, 0;
	setp.ne.s32 	%p158, %r16344, 0;
	and.pred  	%p159, %p157, %p158;
	@%p159 bra 	$L__BB0_57;
$L__BB0_58:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p160, %r26, 2139095039;
	selp.f32 	%f913, 0f7FFFFFFF, 0f4B800000, %p160;
	mul.f32 	%f914, %f1279, 0f34000000;
	mul.f32 	%f1280, %f913, %f914;
	bra.uni 	$L__BB0_59;
$L__BB0_49:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f897, %f1280, %f221;
	cvt.rzi.f32.f32 	%f1278, %f897;
	fma.rn.f32 	%f74, %f1278, 0fC0000000, %f1280;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p151, %r25, 1073741824;
	@%p151 bra 	$L__BB0_54;
// %bb.50:
	setp.lt.u32 	%p152, %r25, -2147483647;
	@%p152 bra 	$L__BB0_52;
// %bb.51:
	add.f32 	%f902, %f1278, 0fBF800000;
	setp.lt.f32 	%p155, %f74, 0fC0000000;
	add.f32 	%f903, %f902, 0fBF800000;
	selp.f32 	%f1278, %f903, %f902, %p155;
	bra.uni 	$L__BB0_54;
$L__BB0_52:
	add.f32 	%f1278, %f1278, 0f3F800000;
	setp.ltu.f32 	%p153, %f74, 0f40800000;
	@%p153 bra 	$L__BB0_54;
// %bb.53:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f898, %f1278, 0f3F800000;
	fma.rn.f32 	%f900, %f221, 0fC0400000, %f74;
	setp.ge.f32 	%p154, %f900, 0f00000000;
	add.f32 	%f901, %f898, 0f3F800000;
	selp.f32 	%f1278, %f901, %f898, %p154;
$L__BB0_54:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1280, %f1278, 0fC0000000, %f1280;
$L__BB0_59:                             // %__internal_fmodf_kernel.exit.i
	fma.rn.f32 	%f238, %f237, 0fBF000000, %f229;
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f307, %f306, 0fBF000000, %f298;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f376, %f375, 0fBF000000, %f367;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f445, %f444, 0fBF000000, %f436;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f514, %f513, 0fBF000000, %f505;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f583, %f582, 0fBF000000, %f574;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f652, %f651, 0fBF000000, %f643;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f721, %f720, 0fBF000000, %f712;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	mul.f32 	%f786, %f785, %f785;
	mul.f32 	%f820, %f819, %f819;
	mul.f32 	%f873, %f872, %f872;
	abs.f32 	%f915, %f1280;
	setp.gtu.f32 	%p161, %f915, 0f7F800000;
	@%p161 bra 	$L__BB0_61;
// %bb.60:
	mov.b32 	%r489, %f160;
	and.b32  	%r490, %r489, -2147483648;
	mov.b32 	%r491, %f1280;
	or.b32  	%r492, %r490, %r491;
	mov.b32 	%f1280, %r492;
$L__BB0_61:                             // %__nv_fmodf.exit
	mul.f32 	%f239, %f238, %f238;
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f308, %f307, %f307;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f377, %f376, %f376;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f446, %f445, %f445;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f515, %f514, %f514;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f584, %f583, %f583;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f653, %f652, %f652;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f722, %f721, %f721;
	mul.f32 	%f756, %f755, %f755;
	fma.rn.f32 	%f787, %f786, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f788, %f786, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f821, %f820, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f822, %f820, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f874, %f873, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f875, %f873, 0f3E684E12, 0fBFAAD2E0;
	add.f32 	%f916, %f1280, %f1280;
	mov.b32 	%r505, %f916;
	and.b32  	%r506, %r505, -2147483648;
	or.b32  	%r507, %r506, 1056964608;
	mov.b32 	%f917, %r507;
	add.f32 	%f918, %f916, %f917;
	cvt.rzi.f32.f32 	%f919, %f918;
	abs.f32 	%f920, %f916;
	setp.gt.f32 	%p162, %f920, 0f4B000000;
	selp.f32 	%f921, %f916, %f919, %p162;
	cvt.rzi.f32.f32 	%f922, %f916;
	setp.lt.f32 	%p163, %f920, 0f3F000000;
	selp.f32 	%f923, %f922, %f921, %p163;
	fma.rn.f32 	%f924, %f923, 0fBF000000, %f1280;
	mul.f32 	%f925, %f924, %f924;
	fma.rn.f32 	%f926, %f925, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f927, %f925, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r513, %r187, 2147483646;
	shl.b32 	%r514, %r186, 2;
	sub.s32 	%r515, %r513, %r514;
	mul.lo.s32 	%r516, %r515, %r24;
	shl.b32 	%r37, %r516, 1;
	cvt.rn.f32.s32 	%f88, %r37;
	mov.f32 	%f948, 0f42800000;
	div.approx.f32 	%f89, %f88, %f948;
	abs.f32 	%f1300, %f89;
	setp.lt.f32 	%p169, %f1300, 0f40000000;
	@%p169 bra 	$L__BB0_141;
// %bb.62:
	setp.gtu.f32 	%p170, %f1300, 0f4B800000;
	@%p170 bra 	$L__BB0_137;
	bra.uni 	$L__BB0_63;
$L__BB0_137:
	mov.b32 	%r204, %f1300;
	and.b32  	%r517, %r204, 8388607;
	or.b32  	%r16404, %r517, 1065353216;
	mov.b32 	%f1299, %r16404;
	add.s32 	%r518, %r204, -1073741824;
	and.b32  	%r16405, %r518, -8388608;
	setp.eq.s32 	%p176, %r16405, 0;
	@%p176 bra 	$L__BB0_140;
// %bb.138:                             // %__nv_fmaf_rn.exit4.i.i.i1743.preheader
	mov.f32 	%f958, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f957,%f958;
	// end inline asm
$L__BB0_139:                            // %__nv_fmaf_rn.exit4.i.i.i1743
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r519, %r16405, 192937984;
	add.s32 	%r520, %r16404, %r519;
	mov.b32 	%f959, %r520;
	mul.f32 	%f960, %f957, %f959;
	sub.f32 	%f961, %f959, %f960;
	fma.rn.f32 	%f962, %f961, %f957, %f960;
	sub.f32 	%f963, %f959, %f962;
	fma.rz.f32 	%f964, %f963, %f957, %f962;
	cvt.rzi.f32.f32 	%f965, %f964;
	sub.f32 	%f1299, %f959, %f965;
	sub.s32 	%r16405, %r16405, %r519;
	mov.b32 	%r16404, %f1299;
	setp.ne.s32 	%p177, %r16405, 0;
	setp.ne.s32 	%p178, %r16404, 0;
	and.pred  	%p179, %p177, %p178;
	@%p179 bra 	$L__BB0_139;
$L__BB0_140:                            // %__internal_fmodf_slowpath_mod.exit.i.i1745
	setp.gt.u32 	%p180, %r204, 2139095039;
	selp.f32 	%f966, 0f7FFFFFFF, 0f4B800000, %p180;
	mul.f32 	%f967, %f1299, 0f34000000;
	mul.f32 	%f1300, %f966, %f967;
	bra.uni 	$L__BB0_141;
$L__BB0_63:                             // %__nv_fast_fdividef.exit.i.i.i1722
	div.approx.f32 	%f950, %f1300, %f221;
	cvt.rzi.f32.f32 	%f1298, %f950;
	fma.rn.f32 	%f163, %f1298, 0fC0000000, %f1300;
	mov.b32 	%r203, %f163;
	setp.lt.u32 	%p171, %r203, 1073741824;
	@%p171 bra 	$L__BB0_136;
// %bb.64:
	setp.lt.u32 	%p172, %r203, -2147483647;
	@%p172 bra 	$L__BB0_134;
// %bb.65:
	add.f32 	%f955, %f1298, 0fBF800000;
	setp.lt.f32 	%p175, %f163, 0fC0000000;
	add.f32 	%f956, %f955, 0fBF800000;
	selp.f32 	%f1298, %f956, %f955, %p175;
	bra.uni 	$L__BB0_136;
$L__BB0_134:
	add.f32 	%f1298, %f1298, 0f3F800000;
	setp.ltu.f32 	%p173, %f163, 0f40800000;
	@%p173 bra 	$L__BB0_136;
// %bb.135:                             // %__nv_fmaf_rn.exit.i.i.i1726
	add.f32 	%f951, %f1298, 0f3F800000;
	fma.rn.f32 	%f953, %f221, 0fC0400000, %f163;
	setp.ge.f32 	%p174, %f953, 0f00000000;
	add.f32 	%f954, %f951, 0f3F800000;
	selp.f32 	%f1298, %f954, %f951, %p174;
$L__BB0_136:                            // %__internal_fmodf_fastpath_quot.exit.i.i1729
	fma.rn.f32 	%f1300, %f1298, 0fC0000000, %f1300;
$L__BB0_141:                            // %__internal_fmodf_kernel.exit.i1748
	cvt.rzi.s32.f32 	%r286, %f237;
	fma.rn.f32 	%f240, %f239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f241, %f239, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r293, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r304, %f306;
	fma.rn.f32 	%f309, %f308, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f310, %f308, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r311, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r322, %f375;
	fma.rn.f32 	%f378, %f377, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f379, %f377, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r329, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r340, %f444;
	fma.rn.f32 	%f447, %f446, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f448, %f446, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r347, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r358, %f513;
	fma.rn.f32 	%f516, %f515, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f517, %f515, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r365, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r376, %f582;
	fma.rn.f32 	%f585, %f584, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f586, %f584, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r383, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r394, %f651;
	fma.rn.f32 	%f654, %f653, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f655, %f653, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r401, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r412, %f720;
	fma.rn.f32 	%f723, %f722, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f724, %f722, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r419, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r443, %f784;
	fma.rn.f32 	%f789, %f787, %f786, 0fC0A55DF6;
	fma.rn.f32 	%f790, %f788, %f786, 0f4081E0CF;
	fma.rn.f32 	%f791, %f786, %f785, 0f00000000;
	cvt.rzi.s32.f32 	%r453, %f818;
	fma.rn.f32 	%f823, %f821, %f820, 0fC0A55DF6;
	fma.rn.f32 	%f824, %f822, %f820, 0f4081E0CF;
	fma.rn.f32 	%f825, %f820, %f819, 0f00000000;
	cvt.rzi.s32.f32 	%r476, %f871;
	fma.rn.f32 	%f876, %f874, %f873, 0fC0A55DF6;
	fma.rn.f32 	%f877, %f875, %f873, 0f4081E0CF;
	fma.rn.f32 	%f878, %f873, %f872, 0f00000000;
	cvt.rzi.s32.f32 	%r508, %f923;
	fma.rn.f32 	%f928, %f926, %f925, 0fC0A55DF6;
	fma.rn.f32 	%f929, %f927, %f925, 0f4081E0CF;
	fma.rn.f32 	%f930, %f925, %f924, 0f00000000;
	abs.f32 	%f968, %f1300;
	setp.gtu.f32 	%p181, %f968, 0f7F800000;
	@%p181 bra 	$L__BB0_143;
// %bb.142:
	mov.b32 	%r521, %f89;
	and.b32  	%r522, %r521, -2147483648;
	mov.b32 	%r523, %f1300;
	or.b32  	%r524, %r522, %r523;
	mov.b32 	%f1300, %r524;
$L__BB0_143:                            // %__nv_fmodf.exit1749
	add.s32 	%r287, %r286, 1;
	fma.rn.f32 	%f242, %f240, %f239, 0fC0A55DF6;
	fma.rn.f32 	%f243, %f241, %f239, 0f4081E0CF;
	fma.rn.f32 	%f244, %f239, %f238, 0f00000000;
	add.s32 	%r294, %r293, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r305, %r304, 1;
	fma.rn.f32 	%f311, %f309, %f308, 0fC0A55DF6;
	fma.rn.f32 	%f312, %f310, %f308, 0f4081E0CF;
	fma.rn.f32 	%f313, %f308, %f307, 0f00000000;
	add.s32 	%r312, %r311, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r323, %r322, 1;
	fma.rn.f32 	%f380, %f378, %f377, 0fC0A55DF6;
	fma.rn.f32 	%f381, %f379, %f377, 0f4081E0CF;
	fma.rn.f32 	%f382, %f377, %f376, 0f00000000;
	add.s32 	%r330, %r329, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r341, %r340, 1;
	fma.rn.f32 	%f449, %f447, %f446, 0fC0A55DF6;
	fma.rn.f32 	%f450, %f448, %f446, 0f4081E0CF;
	fma.rn.f32 	%f451, %f446, %f445, 0f00000000;
	add.s32 	%r348, %r347, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r359, %r358, 1;
	fma.rn.f32 	%f518, %f516, %f515, 0fC0A55DF6;
	fma.rn.f32 	%f519, %f517, %f515, 0f4081E0CF;
	fma.rn.f32 	%f520, %f515, %f514, 0f00000000;
	add.s32 	%r366, %r365, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r377, %r376, 1;
	fma.rn.f32 	%f587, %f585, %f584, 0fC0A55DF6;
	fma.rn.f32 	%f588, %f586, %f584, 0f4081E0CF;
	fma.rn.f32 	%f589, %f584, %f583, 0f00000000;
	add.s32 	%r384, %r383, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r395, %r394, 1;
	fma.rn.f32 	%f656, %f654, %f653, 0fC0A55DF6;
	fma.rn.f32 	%f657, %f655, %f653, 0f4081E0CF;
	fma.rn.f32 	%f658, %f653, %f652, 0f00000000;
	add.s32 	%r402, %r401, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r413, %r412, 1;
	fma.rn.f32 	%f725, %f723, %f722, 0fC0A55DF6;
	fma.rn.f32 	%f726, %f724, %f722, 0f4081E0CF;
	fma.rn.f32 	%f727, %f722, %f721, 0f00000000;
	add.s32 	%r420, %r419, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	fma.rn.f32 	%f792, %f790, %f786, 0fC09DE9E6;
	fma.rn.f32 	%f793, %f789, %f791, 0f00000000;
	and.b32  	%r444, %r443, 1;
	fma.rn.f32 	%f826, %f824, %f820, 0fC09DE9E6;
	fma.rn.f32 	%f827, %f823, %f825, 0f00000000;
	and.b32  	%r454, %r453, 1;
	fma.rn.f32 	%f879, %f877, %f873, 0fC09DE9E6;
	fma.rn.f32 	%f880, %f876, %f878, 0f00000000;
	and.b32  	%r477, %r476, 1;
	fma.rn.f32 	%f931, %f929, %f925, 0fC09DE9E6;
	fma.rn.f32 	%f932, %f928, %f930, 0f00000000;
	and.b32  	%r509, %r508, 1;
	add.f32 	%f969, %f1300, %f1300;
	mov.b32 	%r525, %f969;
	and.b32  	%r526, %r525, -2147483648;
	or.b32  	%r527, %r526, 1056964608;
	mov.b32 	%f970, %r527;
	add.f32 	%f971, %f969, %f970;
	cvt.rzi.f32.f32 	%f972, %f971;
	abs.f32 	%f973, %f969;
	setp.gt.f32 	%p182, %f973, 0f4B000000;
	selp.f32 	%f974, %f969, %f972, %p182;
	cvt.rzi.f32.f32 	%f975, %f969;
	setp.lt.f32 	%p183, %f973, 0f3F000000;
	selp.f32 	%f976, %f975, %f974, %p183;
	cvt.rzi.s32.f32 	%r528, %f976;
	fma.rn.f32 	%f977, %f976, 0fBF000000, %f1300;
	mul.f32 	%f978, %f977, %f977;
	fma.rn.f32 	%f979, %f978, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f980, %f978, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f981, %f979, %f978, 0fC0A55DF6;
	fma.rn.f32 	%f982, %f980, %f978, 0f4081E0CF;
	fma.rn.f32 	%f983, %f978, %f977, 0f00000000;
	shl.b32 	%r533, %r24, 4;
	sub.s32 	%r534, %r37, %r533;
	cvt.rn.f32.s32 	%f179, %r534;
	div.approx.f32 	%f180, %f179, %f948;
	abs.f32 	%f1284, %f180;
	setp.lt.f32 	%p189, %f1284, 0f40000000;
	@%p189 bra 	$L__BB0_77;
// %bb.66:
	setp.gtu.f32 	%p190, %f1284, 0f4B800000;
	@%p190 bra 	$L__BB0_73;
	bra.uni 	$L__BB0_67;
$L__BB0_73:
	mov.b32 	%r39, %f1284;
	and.b32  	%r535, %r39, 8388607;
	or.b32  	%r16346, %r535, 1065353216;
	mov.b32 	%f1283, %r16346;
	add.s32 	%r536, %r39, -1073741824;
	and.b32  	%r16347, %r536, -8388608;
	setp.eq.s32 	%p196, %r16347, 0;
	@%p196 bra 	$L__BB0_76;
// %bb.74:                              // %__nv_fmaf_rn.exit4.i.i.i1619.preheader
	mov.f32 	%f1009, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1008,%f1009;
	// end inline asm
$L__BB0_75:                             // %__nv_fmaf_rn.exit4.i.i.i1619
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r537, %r16347, 192937984;
	add.s32 	%r538, %r16346, %r537;
	mov.b32 	%f1010, %r538;
	mul.f32 	%f1011, %f1008, %f1010;
	sub.f32 	%f1012, %f1010, %f1011;
	fma.rn.f32 	%f1013, %f1012, %f1008, %f1011;
	sub.f32 	%f1014, %f1010, %f1013;
	fma.rz.f32 	%f1015, %f1014, %f1008, %f1013;
	cvt.rzi.f32.f32 	%f1016, %f1015;
	sub.f32 	%f1283, %f1010, %f1016;
	sub.s32 	%r16347, %r16347, %r537;
	mov.b32 	%r16346, %f1283;
	setp.ne.s32 	%p197, %r16347, 0;
	setp.ne.s32 	%p198, %r16346, 0;
	and.pred  	%p199, %p197, %p198;
	@%p199 bra 	$L__BB0_75;
$L__BB0_76:                             // %__internal_fmodf_slowpath_mod.exit.i.i1621
	setp.gt.u32 	%p200, %r39, 2139095039;
	selp.f32 	%f1017, 0f7FFFFFFF, 0f4B800000, %p200;
	mul.f32 	%f1018, %f1283, 0f34000000;
	mul.f32 	%f1284, %f1017, %f1018;
	bra.uni 	$L__BB0_77;
$L__BB0_67:                             // %__nv_fast_fdividef.exit.i.i.i1598
	div.approx.f32 	%f1001, %f1284, %f221;
	cvt.rzi.f32.f32 	%f1282, %f1001;
	fma.rn.f32 	%f92, %f1282, 0fC0000000, %f1284;
	mov.b32 	%r38, %f92;
	setp.lt.u32 	%p191, %r38, 1073741824;
	@%p191 bra 	$L__BB0_72;
// %bb.68:
	setp.lt.u32 	%p192, %r38, -2147483647;
	@%p192 bra 	$L__BB0_70;
// %bb.69:
	add.f32 	%f1006, %f1282, 0fBF800000;
	setp.lt.f32 	%p195, %f92, 0fC0000000;
	add.f32 	%f1007, %f1006, 0fBF800000;
	selp.f32 	%f1282, %f1007, %f1006, %p195;
	bra.uni 	$L__BB0_72;
$L__BB0_70:
	add.f32 	%f1282, %f1282, 0f3F800000;
	setp.ltu.f32 	%p193, %f92, 0f40800000;
	@%p193 bra 	$L__BB0_72;
// %bb.71:                              // %__nv_fmaf_rn.exit.i.i.i1602
	add.f32 	%f1002, %f1282, 0f3F800000;
	fma.rn.f32 	%f1004, %f221, 0fC0400000, %f92;
	setp.ge.f32 	%p194, %f1004, 0f00000000;
	add.f32 	%f1005, %f1002, 0f3F800000;
	selp.f32 	%f1282, %f1005, %f1002, %p194;
$L__BB0_72:                             // %__internal_fmodf_fastpath_quot.exit.i.i1605
	fma.rn.f32 	%f1284, %f1282, 0fC0000000, %f1284;
$L__BB0_77:                             // %__internal_fmodf_kernel.exit.i1624
	and.b32  	%r181, %r4, 18;
	fma.rn.f32 	%f245, %f243, %f239, 0fC09DE9E6;
	fma.rn.f32 	%f246, %f242, %f244, 0f00000000;
	and.b32  	%r288, %r287, 1;
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r295, %r294, 1;
	fma.rn.f32 	%f314, %f312, %f308, 0fC09DE9E6;
	fma.rn.f32 	%f315, %f311, %f313, 0f00000000;
	and.b32  	%r306, %r305, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r313, %r312, 1;
	fma.rn.f32 	%f383, %f381, %f377, 0fC09DE9E6;
	fma.rn.f32 	%f384, %f380, %f382, 0f00000000;
	and.b32  	%r324, %r323, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r331, %r330, 1;
	fma.rn.f32 	%f452, %f450, %f446, 0fC09DE9E6;
	fma.rn.f32 	%f453, %f449, %f451, 0f00000000;
	and.b32  	%r342, %r341, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r349, %r348, 1;
	fma.rn.f32 	%f521, %f519, %f515, 0fC09DE9E6;
	fma.rn.f32 	%f522, %f518, %f520, 0f00000000;
	and.b32  	%r360, %r359, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r367, %r366, 1;
	fma.rn.f32 	%f590, %f588, %f584, 0fC09DE9E6;
	fma.rn.f32 	%f591, %f587, %f589, 0f00000000;
	and.b32  	%r378, %r377, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r385, %r384, 1;
	fma.rn.f32 	%f659, %f657, %f653, 0fC09DE9E6;
	fma.rn.f32 	%f660, %f656, %f658, 0f00000000;
	and.b32  	%r396, %r395, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r403, %r402, 1;
	fma.rn.f32 	%f728, %f726, %f722, 0fC09DE9E6;
	fma.rn.f32 	%f729, %f725, %f727, 0f00000000;
	and.b32  	%r414, %r413, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r421, %r420, 1;
	fma.rn.f32 	%f794, %f792, %f786, 0f3F800000;
	fma.rn.f32 	%f795, %f785, 0f40490FDB, %f793;
	setp.eq.b32 	%p117, %r444, 1;
	fma.rn.f32 	%f828, %f826, %f820, 0f3F800000;
	fma.rn.f32 	%f829, %f819, 0f40490FDB, %f827;
	setp.eq.b32 	%p124, %r454, 1;
	fma.rn.f32 	%f881, %f879, %f873, 0f3F800000;
	fma.rn.f32 	%f882, %f872, 0f40490FDB, %f880;
	setp.eq.b32 	%p144, %r477, 1;
	fma.rn.f32 	%f933, %f931, %f925, 0f3F800000;
	fma.rn.f32 	%f934, %f924, 0f40490FDB, %f932;
	setp.eq.b32 	%p164, %r509, 1;
	fma.rn.f32 	%f984, %f982, %f978, 0fC09DE9E6;
	fma.rn.f32 	%f985, %f981, %f983, 0f00000000;
	and.b32  	%r529, %r528, 1;
	abs.f32 	%f1019, %f1284;
	setp.gtu.f32 	%p201, %f1019, 0f7F800000;
	@%p201 bra 	$L__BB0_79;
// %bb.78:
	mov.b32 	%r539, %f180;
	and.b32  	%r540, %r539, -2147483648;
	mov.b32 	%r541, %f1284;
	or.b32  	%r542, %r540, %r541;
	mov.b32 	%f1284, %r542;
$L__BB0_79:                             // %__nv_fmodf.exit1625
	and.b32  	%r174, %r173, 8;
	shl.b32 	%r176, %r1, 5;
	or.b32  	%r183, %r181, 64;
	fma.rn.f32 	%f247, %f245, %f239, 0f3F800000;
	fma.rn.f32 	%f248, %f238, 0f40490FDB, %f246;
	setp.eq.b32 	%p22, %r288, 1;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p28, %r295, 1;
	fma.rn.f32 	%f316, %f314, %f308, 0f3F800000;
	fma.rn.f32 	%f317, %f307, 0f40490FDB, %f315;
	setp.eq.b32 	%p34, %r306, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p40, %r313, 1;
	fma.rn.f32 	%f385, %f383, %f377, 0f3F800000;
	fma.rn.f32 	%f386, %f376, 0f40490FDB, %f384;
	setp.eq.b32 	%p46, %r324, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p52, %r331, 1;
	fma.rn.f32 	%f454, %f452, %f446, 0f3F800000;
	fma.rn.f32 	%f455, %f445, 0f40490FDB, %f453;
	setp.eq.b32 	%p58, %r342, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p64, %r349, 1;
	fma.rn.f32 	%f523, %f521, %f515, 0f3F800000;
	fma.rn.f32 	%f524, %f514, 0f40490FDB, %f522;
	setp.eq.b32 	%p70, %r360, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p76, %r367, 1;
	fma.rn.f32 	%f592, %f590, %f584, 0f3F800000;
	fma.rn.f32 	%f593, %f583, 0f40490FDB, %f591;
	setp.eq.b32 	%p82, %r378, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p88, %r385, 1;
	fma.rn.f32 	%f661, %f659, %f653, 0f3F800000;
	fma.rn.f32 	%f662, %f652, 0f40490FDB, %f660;
	setp.eq.b32 	%p94, %r396, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p100, %r403, 1;
	fma.rn.f32 	%f730, %f728, %f722, 0f3F800000;
	fma.rn.f32 	%f731, %f721, 0f40490FDB, %f729;
	setp.eq.b32 	%p106, %r414, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p112, %r421, 1;
	selp.f32 	%f796, %f794, %f795, %p117;
	and.b32  	%r445, %r443, 2;
	selp.f32 	%f830, %f828, %f829, %p124;
	and.b32  	%r455, %r453, 2;
	selp.f32 	%f883, %f881, %f882, %p144;
	and.b32  	%r478, %r476, 2;
	selp.f32 	%f935, %f933, %f934, %p164;
	and.b32  	%r510, %r508, 2;
	fma.rn.f32 	%f986, %f984, %f978, 0f3F800000;
	fma.rn.f32 	%f987, %f977, 0f40490FDB, %f985;
	setp.eq.b32 	%p184, %r529, 1;
	add.f32 	%f1020, %f1284, %f1284;
	mov.b32 	%r549, %f1020;
	and.b32  	%r550, %r549, -2147483648;
	or.b32  	%r551, %r550, 1056964608;
	mov.b32 	%f1021, %r551;
	add.f32 	%f1022, %f1020, %f1021;
	cvt.rzi.f32.f32 	%f1023, %f1022;
	abs.f32 	%f1024, %f1020;
	setp.gt.f32 	%p202, %f1024, 0f4B000000;
	selp.f32 	%f1025, %f1020, %f1023, %p202;
	cvt.rzi.f32.f32 	%f1026, %f1020;
	setp.lt.f32 	%p203, %f1024, 0f3F000000;
	selp.f32 	%f1027, %f1026, %f1025, %p203;
	cvt.rzi.s32.f32 	%r552, %f1027;
	fma.rn.f32 	%f1028, %f1027, 0fBF000000, %f1284;
	mul.f32 	%f1029, %f1028, %f1028;
	fma.rn.f32 	%f1030, %f1029, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1031, %f1029, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1032, %f1030, %f1029, 0fC0A55DF6;
	fma.rn.f32 	%f1033, %f1031, %f1029, 0f4081E0CF;
	fma.rn.f32 	%f1034, %f1029, %f1028, 0f00000000;
	fma.rn.f32 	%f1035, %f1033, %f1029, 0fC09DE9E6;
	fma.rn.f32 	%f1036, %f1032, %f1034, 0f00000000;
	fma.rn.f32 	%f1037, %f1035, %f1029, 0f3F800000;
	fma.rn.f32 	%f1038, %f1028, 0f40490FDB, %f1036;
	and.b32  	%r553, %r552, 1;
	setp.eq.b32 	%p204, %r553, 1;
	div.approx.f32 	%f106, %f88, %f843;
	abs.f32 	%f1304, %f106;
	setp.lt.f32 	%p209, %f1304, 0f40000000;
	@%p209 bra 	$L__BB0_151;
// %bb.80:
	setp.gtu.f32 	%p210, %f1304, 0f4B800000;
	@%p210 bra 	$L__BB0_147;
	bra.uni 	$L__BB0_81;
$L__BB0_147:
	mov.b32 	%r212, %f1304;
	and.b32  	%r557, %r212, 8388607;
	or.b32  	%r16406, %r557, 1065353216;
	mov.b32 	%f1303, %r16406;
	add.s32 	%r558, %r212, -1073741824;
	and.b32  	%r16407, %r558, -8388608;
	setp.eq.s32 	%p216, %r16407, 0;
	@%p216 bra 	$L__BB0_150;
// %bb.148:                             // %__nv_fmaf_rn.exit4.i.i.i1774.preheader
	mov.f32 	%f1062, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1061,%f1062;
	// end inline asm
$L__BB0_149:                            // %__nv_fmaf_rn.exit4.i.i.i1774
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r559, %r16407, 192937984;
	add.s32 	%r560, %r16406, %r559;
	mov.b32 	%f1063, %r560;
	mul.f32 	%f1064, %f1061, %f1063;
	sub.f32 	%f1065, %f1063, %f1064;
	fma.rn.f32 	%f1066, %f1065, %f1061, %f1064;
	sub.f32 	%f1067, %f1063, %f1066;
	fma.rz.f32 	%f1068, %f1067, %f1061, %f1066;
	cvt.rzi.f32.f32 	%f1069, %f1068;
	sub.f32 	%f1303, %f1063, %f1069;
	sub.s32 	%r16407, %r16407, %r559;
	mov.b32 	%r16406, %f1303;
	setp.ne.s32 	%p217, %r16407, 0;
	setp.ne.s32 	%p218, %r16406, 0;
	and.pred  	%p219, %p217, %p218;
	@%p219 bra 	$L__BB0_149;
$L__BB0_150:                            // %__internal_fmodf_slowpath_mod.exit.i.i1776
	setp.gt.u32 	%p220, %r212, 2139095039;
	selp.f32 	%f1070, 0f7FFFFFFF, 0f4B800000, %p220;
	mul.f32 	%f1071, %f1303, 0f34000000;
	mul.f32 	%f1304, %f1070, %f1071;
	bra.uni 	$L__BB0_151;
$L__BB0_81:                             // %__nv_fast_fdividef.exit.i.i.i1753
	div.approx.f32 	%f1054, %f1304, %f221;
	cvt.rzi.f32.f32 	%f1302, %f1054;
	fma.rn.f32 	%f183, %f1302, 0fC0000000, %f1304;
	mov.b32 	%r211, %f183;
	setp.lt.u32 	%p211, %r211, 1073741824;
	@%p211 bra 	$L__BB0_146;
// %bb.82:
	setp.lt.u32 	%p212, %r211, -2147483647;
	@%p212 bra 	$L__BB0_144;
// %bb.83:
	add.f32 	%f1059, %f1302, 0fBF800000;
	setp.lt.f32 	%p215, %f183, 0fC0000000;
	add.f32 	%f1060, %f1059, 0fBF800000;
	selp.f32 	%f1302, %f1060, %f1059, %p215;
	bra.uni 	$L__BB0_146;
$L__BB0_144:
	add.f32 	%f1302, %f1302, 0f3F800000;
	setp.ltu.f32 	%p213, %f183, 0f40800000;
	@%p213 bra 	$L__BB0_146;
// %bb.145:                             // %__nv_fmaf_rn.exit.i.i.i1757
	add.f32 	%f1055, %f1302, 0f3F800000;
	fma.rn.f32 	%f1057, %f221, 0fC0400000, %f183;
	setp.ge.f32 	%p214, %f1057, 0f00000000;
	add.f32 	%f1058, %f1055, 0f3F800000;
	selp.f32 	%f1302, %f1058, %f1055, %p214;
$L__BB0_146:                            // %__internal_fmodf_fastpath_quot.exit.i.i1760
	fma.rn.f32 	%f1304, %f1302, 0fC0000000, %f1304;
$L__BB0_151:                            // %__internal_fmodf_kernel.exit.i1779
	and.b32  	%r177, %r176, 8064;
	shl.b32 	%r178, %r4, 2;
	or.b32  	%r265, %r181, %r174;
	or.b32  	%r270, %r183, %r174;
	selp.f32 	%f249, %f247, %f248, %p22;
	and.b32  	%r289, %r287, 2;
	mov.f32 	%f250, 0f00000000;
	selp.f32 	%f283, %f281, %f282, %p28;
	and.b32  	%r296, %r294, 2;
	selp.f32 	%f318, %f316, %f317, %p34;
	and.b32  	%r307, %r305, 2;
	selp.f32 	%f352, %f350, %f351, %p40;
	and.b32  	%r314, %r312, 2;
	selp.f32 	%f387, %f385, %f386, %p46;
	and.b32  	%r325, %r323, 2;
	selp.f32 	%f421, %f419, %f420, %p52;
	and.b32  	%r332, %r330, 2;
	selp.f32 	%f456, %f454, %f455, %p58;
	and.b32  	%r343, %r341, 2;
	selp.f32 	%f490, %f488, %f489, %p64;
	and.b32  	%r350, %r348, 2;
	selp.f32 	%f525, %f523, %f524, %p70;
	and.b32  	%r361, %r359, 2;
	selp.f32 	%f559, %f557, %f558, %p76;
	and.b32  	%r368, %r366, 2;
	selp.f32 	%f594, %f592, %f593, %p82;
	and.b32  	%r379, %r377, 2;
	selp.f32 	%f628, %f626, %f627, %p88;
	and.b32  	%r386, %r384, 2;
	selp.f32 	%f663, %f661, %f662, %p94;
	and.b32  	%r397, %r395, 2;
	selp.f32 	%f697, %f695, %f696, %p100;
	and.b32  	%r404, %r402, 2;
	selp.f32 	%f732, %f730, %f731, %p106;
	and.b32  	%r415, %r413, 2;
	selp.f32 	%f766, %f764, %f765, %p112;
	and.b32  	%r422, %r420, 2;
	setp.eq.s32 	%p118, %r445, 0;
	neg.f32 	%f798, %f796;
	add.s32 	%r446, %r443, 1;
	cvt.rzi.f32.f32 	%f803, %f776;
	setp.eq.s32 	%p125, %r455, 0;
	neg.f32 	%f832, %f830;
	add.s32 	%r456, %r453, 1;
	cvt.rzi.f32.f32 	%f836, %f810;
	setp.eq.s32 	%p145, %r478, 0;
	neg.f32 	%f885, %f883;
	add.s32 	%r479, %r476, 1;
	cvt.rzi.f32.f32 	%f890, %f1296;
	setp.eq.s32 	%p165, %r510, 0;
	neg.f32 	%f937, %f935;
	add.s32 	%r511, %r508, 1;
	cvt.rzi.f32.f32 	%f942, %f1280;
	selp.f32 	%f988, %f986, %f987, %p184;
	and.b32  	%r530, %r528, 2;
	selp.f32 	%f1039, %f1037, %f1038, %p204;
	and.b32  	%r554, %r552, 2;
	abs.f32 	%f1072, %f1304;
	setp.gtu.f32 	%p221, %f1072, 0f7F800000;
	@%p221 bra 	$L__BB0_153;
// %bb.152:
	mov.b32 	%r561, %f106;
	and.b32  	%r562, %r561, -2147483648;
	mov.b32 	%r563, %f1304;
	or.b32  	%r564, %r562, %r563;
	mov.b32 	%f1304, %r564;
$L__BB0_153:                            // %__nv_fmodf.exit1780
	and.b32  	%r179, %r178, 4;
	or.b32  	%r266, %r265, %r177;
	or.b32  	%r271, %r270, %r177;
	setp.eq.s32 	%p23, %r289, 0;
	sub.f32 	%f251, %f250, %f249;
	setp.eq.s32 	%p29, %r296, 0;
	sub.f32 	%f285, %f250, %f283;
	setp.eq.s32 	%p35, %r307, 0;
	sub.f32 	%f320, %f250, %f318;
	setp.eq.s32 	%p41, %r314, 0;
	sub.f32 	%f354, %f250, %f352;
	setp.eq.s32 	%p47, %r325, 0;
	sub.f32 	%f389, %f250, %f387;
	setp.eq.s32 	%p53, %r332, 0;
	sub.f32 	%f423, %f250, %f421;
	setp.eq.s32 	%p59, %r343, 0;
	sub.f32 	%f458, %f250, %f456;
	setp.eq.s32 	%p65, %r350, 0;
	sub.f32 	%f492, %f250, %f490;
	setp.eq.s32 	%p71, %r361, 0;
	sub.f32 	%f527, %f250, %f525;
	setp.eq.s32 	%p77, %r368, 0;
	sub.f32 	%f561, %f250, %f559;
	setp.eq.s32 	%p83, %r379, 0;
	sub.f32 	%f596, %f250, %f594;
	setp.eq.s32 	%p89, %r386, 0;
	sub.f32 	%f630, %f250, %f628;
	setp.eq.s32 	%p95, %r397, 0;
	sub.f32 	%f665, %f250, %f663;
	setp.eq.s32 	%p101, %r404, 0;
	sub.f32 	%f699, %f250, %f697;
	setp.eq.s32 	%p107, %r415, 0;
	sub.f32 	%f734, %f250, %f732;
	setp.eq.s32 	%p113, %r422, 0;
	sub.f32 	%f768, %f250, %f766;
	selp.f32 	%f797, %f795, %f794, %p117;
	selp.f32 	%f799, %f796, %f798, %p118;
	and.b32  	%r447, %r446, 2;
	setp.eq.f32 	%p120, %f803, %f776;
	mul.f32 	%f804, %f776, 0f00000000;
	selp.f32 	%f831, %f829, %f828, %p124;
	selp.f32 	%f833, %f830, %f832, %p125;
	and.b32  	%r457, %r456, 2;
	setp.eq.f32 	%p127, %f836, %f810;
	mul.f32 	%f837, %f810, 0f00000000;
	selp.f32 	%f884, %f882, %f881, %p144;
	selp.f32 	%f886, %f883, %f885, %p145;
	and.b32  	%r480, %r479, 2;
	setp.eq.f32 	%p147, %f890, %f1296;
	mul.f32 	%f891, %f1296, 0f00000000;
	selp.f32 	%f936, %f934, %f933, %p164;
	selp.f32 	%f938, %f935, %f937, %p165;
	and.b32  	%r512, %r511, 2;
	setp.eq.f32 	%p167, %f942, %f1280;
	mul.f32 	%f943, %f1280, 0f00000000;
	setp.eq.s32 	%p185, %r530, 0;
	neg.f32 	%f990, %f988;
	add.s32 	%r531, %r528, 1;
	cvt.rzi.f32.f32 	%f995, %f1300;
	setp.eq.s32 	%p205, %r554, 0;
	neg.f32 	%f1041, %f1039;
	add.s32 	%r555, %r552, 1;
	cvt.rzi.f32.f32 	%f1046, %f1284;
	add.f32 	%f1073, %f1304, %f1304;
	mov.b32 	%r565, %f1073;
	and.b32  	%r566, %r565, -2147483648;
	or.b32  	%r567, %r566, 1056964608;
	mov.b32 	%f1074, %r567;
	add.f32 	%f1075, %f1073, %f1074;
	cvt.rzi.f32.f32 	%f1076, %f1075;
	abs.f32 	%f1077, %f1073;
	setp.gt.f32 	%p222, %f1077, 0f4B000000;
	selp.f32 	%f1078, %f1073, %f1076, %p222;
	cvt.rzi.f32.f32 	%f1079, %f1073;
	setp.lt.f32 	%p223, %f1077, 0f3F000000;
	selp.f32 	%f1080, %f1079, %f1078, %p223;
	cvt.rzi.s32.f32 	%r568, %f1080;
	fma.rn.f32 	%f1081, %f1080, 0fBF000000, %f1304;
	mul.f32 	%f1082, %f1081, %f1081;
	fma.rn.f32 	%f1083, %f1082, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1084, %f1082, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1085, %f1083, %f1082, 0fC0A55DF6;
	fma.rn.f32 	%f1086, %f1084, %f1082, 0f4081E0CF;
	fma.rn.f32 	%f1087, %f1082, %f1081, 0f00000000;
	fma.rn.f32 	%f1088, %f1086, %f1082, 0fC09DE9E6;
	fma.rn.f32 	%f1089, %f1085, %f1087, 0f00000000;
	fma.rn.f32 	%f1090, %f1088, %f1082, 0f3F800000;
	fma.rn.f32 	%f1091, %f1081, 0f40490FDB, %f1089;
	and.b32  	%r569, %r568, 1;
	setp.eq.b32 	%p224, %r569, 1;
	selp.f32 	%f1092, %f1090, %f1091, %p224;
	selp.f32 	%f1093, %f1091, %f1090, %p224;
	and.b32  	%r570, %r568, 2;
	setp.eq.s32 	%p225, %r570, 0;
	neg.f32 	%f1094, %f1092;
	selp.f32 	%f1095, %f1092, %f1094, %p225;
	add.s32 	%r571, %r568, 1;
	and.b32  	%r572, %r571, 2;
	cvt.rzi.f32.f32 	%f1099, %f1304;
	setp.eq.f32 	%p227, %f1099, %f1304;
	mul.f32 	%f1100, %f1304, 0f00000000;
	div.approx.f32 	%f199, %f179, %f843;
	abs.f32 	%f1288, %f199;
	setp.lt.f32 	%p229, %f1288, 0f40000000;
	@%p229 bra 	$L__BB0_95;
// %bb.84:
	setp.gtu.f32 	%p230, %f1288, 0f4B800000;
	@%p230 bra 	$L__BB0_91;
	bra.uni 	$L__BB0_85;
$L__BB0_91:
	mov.b32 	%r49, %f1288;
	and.b32  	%r573, %r49, 8388607;
	or.b32  	%r16348, %r573, 1065353216;
	mov.b32 	%f1287, %r16348;
	add.s32 	%r574, %r49, -1073741824;
	and.b32  	%r16349, %r574, -8388608;
	setp.eq.s32 	%p236, %r16349, 0;
	@%p236 bra 	$L__BB0_94;
// %bb.92:                              // %__nv_fmaf_rn.exit4.i.i.i1650.preheader
	mov.f32 	%f1113, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1112,%f1113;
	// end inline asm
$L__BB0_93:                             // %__nv_fmaf_rn.exit4.i.i.i1650
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r575, %r16349, 192937984;
	add.s32 	%r576, %r16348, %r575;
	mov.b32 	%f1114, %r576;
	mul.f32 	%f1115, %f1112, %f1114;
	sub.f32 	%f1116, %f1114, %f1115;
	fma.rn.f32 	%f1117, %f1116, %f1112, %f1115;
	sub.f32 	%f1118, %f1114, %f1117;
	fma.rz.f32 	%f1119, %f1118, %f1112, %f1117;
	cvt.rzi.f32.f32 	%f1120, %f1119;
	sub.f32 	%f1287, %f1114, %f1120;
	sub.s32 	%r16349, %r16349, %r575;
	mov.b32 	%r16348, %f1287;
	setp.ne.s32 	%p237, %r16349, 0;
	setp.ne.s32 	%p238, %r16348, 0;
	and.pred  	%p239, %p237, %p238;
	@%p239 bra 	$L__BB0_93;
$L__BB0_94:                             // %__internal_fmodf_slowpath_mod.exit.i.i1652
	setp.gt.u32 	%p240, %r49, 2139095039;
	selp.f32 	%f1121, 0f7FFFFFFF, 0f4B800000, %p240;
	mul.f32 	%f1122, %f1287, 0f34000000;
	mul.f32 	%f1288, %f1121, %f1122;
	bra.uni 	$L__BB0_95;
$L__BB0_85:                             // %__nv_fast_fdividef.exit.i.i.i1629
	div.approx.f32 	%f1105, %f1288, %f221;
	cvt.rzi.f32.f32 	%f1286, %f1105;
	fma.rn.f32 	%f109, %f1286, 0fC0000000, %f1288;
	mov.b32 	%r48, %f109;
	setp.lt.u32 	%p231, %r48, 1073741824;
	@%p231 bra 	$L__BB0_90;
// %bb.86:
	setp.lt.u32 	%p232, %r48, -2147483647;
	@%p232 bra 	$L__BB0_88;
// %bb.87:
	add.f32 	%f1110, %f1286, 0fBF800000;
	setp.lt.f32 	%p235, %f109, 0fC0000000;
	add.f32 	%f1111, %f1110, 0fBF800000;
	selp.f32 	%f1286, %f1111, %f1110, %p235;
	bra.uni 	$L__BB0_90;
$L__BB0_88:
	add.f32 	%f1286, %f1286, 0f3F800000;
	setp.ltu.f32 	%p233, %f109, 0f40800000;
	@%p233 bra 	$L__BB0_90;
// %bb.89:                              // %__nv_fmaf_rn.exit.i.i.i1633
	add.f32 	%f1106, %f1286, 0f3F800000;
	fma.rn.f32 	%f1108, %f221, 0fC0400000, %f109;
	setp.ge.f32 	%p234, %f1108, 0f00000000;
	add.f32 	%f1109, %f1106, 0f3F800000;
	selp.f32 	%f1286, %f1109, %f1106, %p234;
$L__BB0_90:                             // %__internal_fmodf_fastpath_quot.exit.i.i1636
	fma.rn.f32 	%f1288, %f1286, 0fC0000000, %f1288;
$L__BB0_95:                             // %__internal_fmodf_kernel.exit.i1655
	and.b32  	%r180, %r178, 32;
	or.b32  	%r267, %r266, %r179;
	or.b32  	%r272, %r271, %r179;
	selp.f32 	%f252, %f249, %f251, %p23;
	selp.f32 	%f286, %f283, %f285, %p29;
	selp.f32 	%f321, %f318, %f320, %p35;
	selp.f32 	%f355, %f352, %f354, %p41;
	selp.f32 	%f390, %f387, %f389, %p47;
	selp.f32 	%f424, %f421, %f423, %p53;
	selp.f32 	%f459, %f456, %f458, %p59;
	selp.f32 	%f493, %f490, %f492, %p65;
	selp.f32 	%f528, %f525, %f527, %p71;
	selp.f32 	%f562, %f559, %f561, %p77;
	selp.f32 	%f597, %f594, %f596, %p83;
	selp.f32 	%f631, %f628, %f630, %p89;
	selp.f32 	%f666, %f663, %f665, %p95;
	selp.f32 	%f700, %f697, %f699, %p101;
	selp.f32 	%f735, %f732, %f734, %p107;
	selp.f32 	%f769, %f766, %f768, %p113;
	setp.eq.s32 	%p119, %r447, 0;
	sub.f32 	%f801, %f250, %f797;
	selp.f32 	%f805, %f804, %f799, %p120;
	abs.f32 	%f806, %f776;
	setp.eq.s32 	%p126, %r457, 0;
	sub.f32 	%f834, %f250, %f831;
	selp.f32 	%f838, %f837, %f833, %p127;
	abs.f32 	%f839, %f810;
	setp.eq.s32 	%p146, %r480, 0;
	sub.f32 	%f888, %f250, %f884;
	selp.f32 	%f158, %f891, %f886, %p147;
	abs.f32 	%f892, %f1296;
	setp.eq.s32 	%p166, %r512, 0;
	sub.f32 	%f940, %f250, %f936;
	selp.f32 	%f944, %f943, %f938, %p167;
	abs.f32 	%f945, %f1280;
	selp.f32 	%f989, %f987, %f986, %p184;
	selp.f32 	%f991, %f988, %f990, %p185;
	and.b32  	%r532, %r531, 2;
	setp.eq.f32 	%p187, %f995, %f1300;
	mul.f32 	%f996, %f1300, 0f00000000;
	selp.f32 	%f1040, %f1038, %f1037, %p204;
	selp.f32 	%f1042, %f1039, %f1041, %p205;
	and.b32  	%r556, %r555, 2;
	setp.eq.f32 	%p207, %f1046, %f1284;
	mul.f32 	%f1047, %f1284, 0f00000000;
	setp.eq.s32 	%p226, %r572, 0;
	sub.f32 	%f1097, %f250, %f1093;
	selp.f32 	%f197, %f1100, %f1095, %p227;
	abs.f32 	%f1101, %f1304;
	and.b32  	%r175, %r4, 16;
	abs.f32 	%f1123, %f1288;
	setp.gtu.f32 	%p241, %f1123, 0f7F800000;
	@%p241 bra 	$L__BB0_97;
// %bb.96:
	mov.b32 	%r577, %f199;
	and.b32  	%r578, %r577, -2147483648;
	mov.b32 	%r579, %f1288;
	or.b32  	%r580, %r578, %r579;
	mov.b32 	%f1288, %r580;
$L__BB0_97:                             // %__nv_fmodf.exit1656
	or.b32  	%r268, %r267, %r180;
	or.b32  	%r273, %r272, %r180;
	mul.f32 	%f141, %f252, %f252;
	mul.f32 	%f4, %f286, %f286;
	mul.f32 	%f8, %f321, %f321;
	mul.f32 	%f13, %f355, %f355;
	mul.f32 	%f17, %f390, %f390;
	mul.f32 	%f22, %f424, %f424;
	mul.f32 	%f26, %f459, %f459;
	mul.f32 	%f31, %f493, %f493;
	mul.f32 	%f35, %f528, %f528;
	mul.f32 	%f40, %f562, %f562;
	mul.f32 	%f44, %f597, %f597;
	mul.f32 	%f49, %f631, %f631;
	mul.f32 	%f53, %f666, %f666;
	mul.f32 	%f58, %f700, %f700;
	mul.f32 	%f62, %f735, %f735;
	mul.f32 	%f67, %f769, %f769;
	selp.f32 	%f802, %f797, %f801, %p119;
	setp.gt.f32 	%p121, %f806, 0f4B800000;
	add.f32 	%f807, %f805, 0f3F800000;
	selp.f32 	%f835, %f831, %f834, %p126;
	setp.gt.f32 	%p128, %f839, 0f4B800000;
	add.f32 	%f840, %f838, 0f3F800000;
	selp.f32 	%f889, %f884, %f888, %p146;
	setp.gt.f32 	%p148, %f892, 0f4B800000;
	add.f32 	%f893, %f158, 0f3F800000;
	selp.f32 	%f941, %f936, %f940, %p166;
	setp.gt.f32 	%p168, %f945, 0f4B800000;
	add.f32 	%f946, %f944, 0f3F800000;
	setp.eq.s32 	%p186, %r532, 0;
	sub.f32 	%f993, %f250, %f989;
	selp.f32 	%f177, %f996, %f991, %p187;
	abs.f32 	%f997, %f1300;
	setp.eq.s32 	%p206, %r556, 0;
	sub.f32 	%f1044, %f250, %f1040;
	selp.f32 	%f1048, %f1047, %f1042, %p207;
	abs.f32 	%f1049, %f1284;
	selp.f32 	%f1098, %f1093, %f1097, %p226;
	setp.gt.f32 	%p228, %f1101, 0f4B800000;
	add.f32 	%f1102, %f197, 0f3F800000;
	add.f32 	%f1124, %f1288, %f1288;
	mov.b32 	%r593, %f1124;
	and.b32  	%r594, %r593, -2147483648;
	or.b32  	%r595, %r594, 1056964608;
	mov.b32 	%f1125, %r595;
	add.f32 	%f1126, %f1124, %f1125;
	cvt.rzi.f32.f32 	%f1127, %f1126;
	abs.f32 	%f1128, %f1124;
	setp.gt.f32 	%p242, %f1128, 0f4B000000;
	selp.f32 	%f1129, %f1124, %f1127, %p242;
	cvt.rzi.f32.f32 	%f1130, %f1124;
	setp.lt.f32 	%p243, %f1128, 0f3F000000;
	selp.f32 	%f1131, %f1130, %f1129, %p243;
	cvt.rzi.s32.f32 	%r596, %f1131;
	fma.rn.f32 	%f1132, %f1131, 0fBF000000, %f1288;
	mul.f32 	%f1133, %f1132, %f1132;
	fma.rn.f32 	%f1134, %f1133, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1135, %f1133, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1136, %f1134, %f1133, 0fC0A55DF6;
	fma.rn.f32 	%f1137, %f1135, %f1133, 0f4081E0CF;
	fma.rn.f32 	%f1138, %f1133, %f1132, 0f00000000;
	fma.rn.f32 	%f1139, %f1137, %f1133, 0fC09DE9E6;
	fma.rn.f32 	%f1140, %f1136, %f1138, 0f00000000;
	fma.rn.f32 	%f1141, %f1139, %f1133, 0f3F800000;
	fma.rn.f32 	%f1142, %f1132, 0f40490FDB, %f1140;
	and.b32  	%r597, %r596, 1;
	setp.eq.b32 	%p244, %r597, 1;
	selp.f32 	%f1143, %f1141, %f1142, %p244;
	selp.f32 	%f1144, %f1142, %f1141, %p244;
	and.b32  	%r598, %r596, 2;
	setp.eq.s32 	%p245, %r598, 0;
	neg.f32 	%f1145, %f1143;
	selp.f32 	%f1146, %f1143, %f1145, %p245;
	add.s32 	%r599, %r596, 1;
	and.b32  	%r600, %r599, 2;
	setp.eq.s32 	%p246, %r600, 0;
	sub.f32 	%f1148, %f250, %f1144;
	selp.f32 	%f1149, %f1144, %f1148, %p246;
	cvt.rzi.f32.f32 	%f1150, %f1288;
	setp.eq.f32 	%p247, %f1150, %f1288;
	mul.f32 	%f1151, %f1288, 0f00000000;
	selp.f32 	%f1152, %f1151, %f1146, %p247;
	abs.f32 	%f1153, %f1288;
	setp.gt.f32 	%p248, %f1153, 0f4B800000;
	add.f32 	%f1154, %f1152, 0f3F800000;
	mul.lo.s32 	%r601, %r189, 2147483640;
	cvt.u16.u32 	%rs1, %r4;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	sub.s32 	%r602, %r601, %r175;
	mad.lo.s32 	%r603, %r192, 2147483616, %r602;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r604, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r605, %rs21;
	sub.s32 	%r606, %r603, %r605;
	shl.b32 	%r607, %r606, 1;
	cvt.rn.f32.s32 	%f1156, %r607;
	div.approx.f32 	%f123, %f1156, %f253;
	abs.f32 	%f1308, %f123;
	setp.lt.f32 	%p249, %f1308, 0f40000000;
	@%p249 bra 	$L__BB0_161;
// %bb.98:
	setp.gtu.f32 	%p250, %f1308, 0f4B800000;
	@%p250 bra 	$L__BB0_157;
	bra.uni 	$L__BB0_99;
$L__BB0_157:
	mov.b32 	%r220, %f1308;
	and.b32  	%r608, %r220, 8388607;
	or.b32  	%r16408, %r608, 1065353216;
	mov.b32 	%f1307, %r16408;
	add.s32 	%r609, %r220, -1073741824;
	and.b32  	%r16409, %r609, -8388608;
	setp.eq.s32 	%p256, %r16409, 0;
	@%p256 bra 	$L__BB0_160;
// %bb.158:                             // %__nv_fmaf_rn.exit4.i.i.i1805.preheader
	mov.f32 	%f1167, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1166,%f1167;
	// end inline asm
$L__BB0_159:                            // %__nv_fmaf_rn.exit4.i.i.i1805
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r610, %r16409, 192937984;
	add.s32 	%r611, %r16408, %r610;
	mov.b32 	%f1168, %r611;
	mul.f32 	%f1169, %f1166, %f1168;
	sub.f32 	%f1170, %f1168, %f1169;
	fma.rn.f32 	%f1171, %f1170, %f1166, %f1169;
	sub.f32 	%f1172, %f1168, %f1171;
	fma.rz.f32 	%f1173, %f1172, %f1166, %f1171;
	cvt.rzi.f32.f32 	%f1174, %f1173;
	sub.f32 	%f1307, %f1168, %f1174;
	sub.s32 	%r16409, %r16409, %r610;
	mov.b32 	%r16408, %f1307;
	setp.ne.s32 	%p257, %r16409, 0;
	setp.ne.s32 	%p258, %r16408, 0;
	and.pred  	%p259, %p257, %p258;
	@%p259 bra 	$L__BB0_159;
$L__BB0_160:                            // %__internal_fmodf_slowpath_mod.exit.i.i1807
	setp.gt.u32 	%p260, %r220, 2139095039;
	selp.f32 	%f1175, 0f7FFFFFFF, 0f4B800000, %p260;
	mul.f32 	%f1176, %f1307, 0f34000000;
	mul.f32 	%f1308, %f1175, %f1176;
	bra.uni 	$L__BB0_161;
$L__BB0_99:                             // %__nv_fast_fdividef.exit.i.i.i1784
	div.approx.f32 	%f1159, %f1308, %f221;
	cvt.rzi.f32.f32 	%f1306, %f1159;
	fma.rn.f32 	%f202, %f1306, 0fC0000000, %f1308;
	mov.b32 	%r219, %f202;
	setp.lt.u32 	%p251, %r219, 1073741824;
	@%p251 bra 	$L__BB0_156;
// %bb.100:
	setp.lt.u32 	%p252, %r219, -2147483647;
	@%p252 bra 	$L__BB0_154;
// %bb.101:
	add.f32 	%f1164, %f1306, 0fBF800000;
	setp.lt.f32 	%p255, %f202, 0fC0000000;
	add.f32 	%f1165, %f1164, 0fBF800000;
	selp.f32 	%f1306, %f1165, %f1164, %p255;
	bra.uni 	$L__BB0_156;
$L__BB0_154:
	add.f32 	%f1306, %f1306, 0f3F800000;
	setp.ltu.f32 	%p253, %f202, 0f40800000;
	@%p253 bra 	$L__BB0_156;
// %bb.155:                             // %__nv_fmaf_rn.exit.i.i.i1788
	add.f32 	%f1160, %f1306, 0f3F800000;
	fma.rn.f32 	%f1162, %f221, 0fC0400000, %f202;
	setp.ge.f32 	%p254, %f1162, 0f00000000;
	add.f32 	%f1163, %f1160, 0f3F800000;
	selp.f32 	%f1306, %f1163, %f1160, %p254;
$L__BB0_156:                            // %__internal_fmodf_fastpath_quot.exit.i.i1791
	fma.rn.f32 	%f1308, %f1306, 0fC0000000, %f1308;
$L__BB0_161:                            // %__internal_fmodf_kernel.exit.i1810
	shr.u32 	%r269, %r268, 1;
	bfe.u32 	%r274, %r273, 1, 12;
	mul.f32 	%f256, %f141, 0f3B8B2FF9;
	mul.f32 	%f290, %f4, 0f3B8B2FF9;
	mul.f32 	%f325, %f8, 0f3B8B2FF9;
	mul.f32 	%f359, %f13, 0f3B8B2FF9;
	mul.f32 	%f394, %f17, 0f3B8B2FF9;
	mul.f32 	%f428, %f22, 0f3B8B2FF9;
	mul.f32 	%f463, %f26, 0f3B8B2FF9;
	mul.f32 	%f497, %f31, 0f3B8B2FF9;
	mul.f32 	%f532, %f35, 0f3B8B2FF9;
	mul.f32 	%f566, %f40, 0f3B8B2FF9;
	mul.f32 	%f601, %f44, 0f3B8B2FF9;
	mul.f32 	%f635, %f49, 0f3B8B2FF9;
	mul.f32 	%f670, %f53, 0f3B8B2FF9;
	mul.f32 	%f704, %f58, 0f3B8B2FF9;
	mul.f32 	%f739, %f62, 0f3B8B2FF9;
	mul.f32 	%f772, %f67, 0f3B8B2FF9;
	selp.f32 	%f808, %f807, %f802, %p121;
	selp.f32 	%f841, %f840, %f835, %p128;
	selp.f32 	%f159, %f893, %f889, %p148;
	selp.f32 	%f947, %f946, %f941, %p168;
	selp.f32 	%f994, %f989, %f993, %p186;
	setp.gt.f32 	%p188, %f997, 0f4B800000;
	add.f32 	%f998, %f177, 0f3F800000;
	selp.f32 	%f1045, %f1040, %f1044, %p206;
	setp.gt.f32 	%p208, %f1049, 0f4B800000;
	add.f32 	%f1050, %f1048, 0f3F800000;
	selp.f32 	%f198, %f1102, %f1098, %p228;
	selp.f32 	%f1155, %f1154, %f1149, %p248;
	sub.s32 	%r60, %r603, %r604;
	abs.f32 	%f1177, %f1308;
	setp.gtu.f32 	%p261, %f1177, 0f7F800000;
	@%p261 bra 	$L__BB0_163;
// %bb.162:
	mov.b32 	%r612, %f123;
	and.b32  	%r613, %r612, -2147483648;
	mov.b32 	%r614, %f1308;
	or.b32  	%r615, %r613, %r614;
	mov.b32 	%f1308, %r615;
$L__BB0_163:                            // %__nv_fmodf.exit1811
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd32, %r269, 4;
	mul.wide.u32 	%rd34, %r274, 4;
	mul.f32 	%f3, %f256, %f1262;
	mul.f32 	%f291, %f290, %f1263;
	mul.f32 	%f12, %f325, %f1264;
	mul.f32 	%f360, %f359, %f1265;
	mul.f32 	%f21, %f394, %f1266;
	mul.f32 	%f429, %f428, %f1267;
	mul.f32 	%f30, %f463, %f1268;
	mul.f32 	%f498, %f497, %f1269;
	mul.f32 	%f39, %f532, %f1270;
	mul.f32 	%f567, %f566, %f1271;
	mul.f32 	%f48, %f601, %f1272;
	mul.f32 	%f636, %f635, %f1273;
	mul.f32 	%f57, %f670, %f1274;
	mul.f32 	%f705, %f704, %f1275;
	mul.f32 	%f66, %f739, %f1276;
	mul.f32 	%f773, %f772, %f1277;
	mov.b32 	%r430, %f808;
	mov.b32 	%r431, %f841;
	mov.b32 	%r436, %f805;
	mov.b32 	%r437, %f838;
	mov.b32 	%r504, %f947;
	mov.b32 	%r503, %f159;
	mov.b32 	%r501, %f944;
	mov.b32 	%r500, %f158;
	selp.f32 	%f178, %f998, %f994, %p188;
	selp.f32 	%f1051, %f1050, %f1045, %p208;
	mov.b32 	%r592, %f1155;
	mov.b32 	%r591, %f198;
	mov.b32 	%r589, %f1152;
	mov.b32 	%r588, %f197;
	add.f32 	%f1178, %f1308, %f1308;
	mov.b32 	%r616, %f1178;
	and.b32  	%r617, %r616, -2147483648;
	or.b32  	%r618, %r617, 1056964608;
	mov.b32 	%f1179, %r618;
	add.f32 	%f1180, %f1178, %f1179;
	cvt.rzi.f32.f32 	%f1181, %f1180;
	abs.f32 	%f1182, %f1178;
	setp.gt.f32 	%p262, %f1182, 0f4B000000;
	selp.f32 	%f1183, %f1178, %f1181, %p262;
	cvt.rzi.f32.f32 	%f1184, %f1178;
	setp.lt.f32 	%p263, %f1182, 0f3F000000;
	selp.f32 	%f1185, %f1184, %f1183, %p263;
	cvt.rzi.s32.f32 	%r619, %f1185;
	fma.rn.f32 	%f1186, %f1185, 0fBF000000, %f1308;
	mul.f32 	%f1187, %f1186, %f1186;
	fma.rn.f32 	%f1188, %f1187, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1189, %f1187, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1190, %f1188, %f1187, 0fC0A55DF6;
	fma.rn.f32 	%f1191, %f1189, %f1187, 0f4081E0CF;
	fma.rn.f32 	%f1192, %f1187, %f1186, 0f00000000;
	fma.rn.f32 	%f1193, %f1191, %f1187, 0fC09DE9E6;
	fma.rn.f32 	%f1194, %f1190, %f1192, 0f00000000;
	fma.rn.f32 	%f1195, %f1193, %f1187, 0f3F800000;
	fma.rn.f32 	%f1196, %f1186, 0f40490FDB, %f1194;
	and.b32  	%r620, %r619, 1;
	setp.eq.b32 	%p264, %r620, 1;
	selp.f32 	%f1197, %f1195, %f1196, %p264;
	selp.f32 	%f1198, %f1196, %f1195, %p264;
	and.b32  	%r621, %r619, 2;
	setp.eq.s32 	%p265, %r621, 0;
	neg.f32 	%f1199, %f1197;
	selp.f32 	%f1200, %f1197, %f1199, %p265;
	add.s32 	%r622, %r619, 1;
	and.b32  	%r623, %r622, 2;
	setp.eq.s32 	%p266, %r623, 0;
	sub.f32 	%f1202, %f250, %f1198;
	selp.f32 	%f1203, %f1198, %f1202, %p266;
	cvt.rzi.f32.f32 	%f1204, %f1308;
	setp.eq.f32 	%p267, %f1204, %f1308;
	mul.f32 	%f1205, %f1308, 0f00000000;
	selp.f32 	%f216, %f1205, %f1200, %p267;
	abs.f32 	%f1206, %f1308;
	setp.gt.f32 	%p268, %f1206, 0f4B800000;
	add.f32 	%f1207, %f216, 0f3F800000;
	shl.b32 	%r624, %r60, 1;
	cvt.rn.f32.s32 	%f1208, %r624;
	div.approx.f32 	%f218, %f1208, %f253;
	abs.f32 	%f1292, %f218;
	setp.lt.f32 	%p269, %f1292, 0f40000000;
	@%p269 bra 	$L__BB0_113;
// %bb.102:
	setp.gtu.f32 	%p270, %f1292, 0f4B800000;
	@%p270 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_103;
$L__BB0_109:
	mov.b32 	%r62, %f1292;
	and.b32  	%r625, %r62, 8388607;
	or.b32  	%r16350, %r625, 1065353216;
	mov.b32 	%f1291, %r16350;
	add.s32 	%r626, %r62, -1073741824;
	and.b32  	%r16351, %r626, -8388608;
	setp.eq.s32 	%p276, %r16351, 0;
	@%p276 bra 	$L__BB0_112;
// %bb.110:                             // %__nv_fmaf_rn.exit4.i.i.i1681.preheader
	mov.f32 	%f1219, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1218,%f1219;
	// end inline asm
$L__BB0_111:                            // %__nv_fmaf_rn.exit4.i.i.i1681
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r627, %r16351, 192937984;
	add.s32 	%r628, %r16350, %r627;
	mov.b32 	%f1220, %r628;
	mul.f32 	%f1221, %f1218, %f1220;
	sub.f32 	%f1222, %f1220, %f1221;
	fma.rn.f32 	%f1223, %f1222, %f1218, %f1221;
	sub.f32 	%f1224, %f1220, %f1223;
	fma.rz.f32 	%f1225, %f1224, %f1218, %f1223;
	cvt.rzi.f32.f32 	%f1226, %f1225;
	sub.f32 	%f1291, %f1220, %f1226;
	sub.s32 	%r16351, %r16351, %r627;
	mov.b32 	%r16350, %f1291;
	setp.ne.s32 	%p277, %r16351, 0;
	setp.ne.s32 	%p278, %r16350, 0;
	and.pred  	%p279, %p277, %p278;
	@%p279 bra 	$L__BB0_111;
$L__BB0_112:                            // %__internal_fmodf_slowpath_mod.exit.i.i1683
	setp.gt.u32 	%p280, %r62, 2139095039;
	selp.f32 	%f1227, 0f7FFFFFFF, 0f4B800000, %p280;
	mul.f32 	%f1228, %f1291, 0f34000000;
	mul.f32 	%f1292, %f1227, %f1228;
	bra.uni 	$L__BB0_113;
$L__BB0_103:                            // %__nv_fast_fdividef.exit.i.i.i1660
	div.approx.f32 	%f1211, %f1292, %f221;
	cvt.rzi.f32.f32 	%f1290, %f1211;
	fma.rn.f32 	%f126, %f1290, 0fC0000000, %f1292;
	mov.b32 	%r61, %f126;
	setp.lt.u32 	%p271, %r61, 1073741824;
	@%p271 bra 	$L__BB0_108;
// %bb.104:
	setp.lt.u32 	%p272, %r61, -2147483647;
	@%p272 bra 	$L__BB0_106;
// %bb.105:
	add.f32 	%f1216, %f1290, 0fBF800000;
	setp.lt.f32 	%p275, %f126, 0fC0000000;
	add.f32 	%f1217, %f1216, 0fBF800000;
	selp.f32 	%f1290, %f1217, %f1216, %p275;
	bra.uni 	$L__BB0_108;
$L__BB0_106:
	add.f32 	%f1290, %f1290, 0f3F800000;
	setp.ltu.f32 	%p273, %f126, 0f40800000;
	@%p273 bra 	$L__BB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i1664
	add.f32 	%f1212, %f1290, 0f3F800000;
	fma.rn.f32 	%f1214, %f221, 0fC0400000, %f126;
	setp.ge.f32 	%p274, %f1214, 0f00000000;
	add.f32 	%f1215, %f1212, 0f3F800000;
	selp.f32 	%f1290, %f1215, %f1212, %p274;
$L__BB0_108:                            // %__internal_fmodf_fastpath_quot.exit.i.i1667
	fma.rn.f32 	%f1292, %f1290, 0fC0000000, %f1292;
$L__BB0_113:                            // %__internal_fmodf_kernel.exit.i1686
	add.s64 	%rd33, %rd1, %rd32;
	add.s64 	%rd35, %rd1, %rd34;
	shr.u32 	%r188, %r4, 2;
	mov.b32 	%r299, %f291;
	mov.b32 	%r298, %f3;
	mov.b32 	%r317, %f360;
	mov.b32 	%r316, %f12;
	mov.b32 	%r335, %f429;
	mov.b32 	%r334, %f21;
	mov.b32 	%r353, %f498;
	mov.b32 	%r352, %f30;
	mov.b32 	%r371, %f567;
	mov.b32 	%r370, %f39;
	mov.b32 	%r389, %f636;
	mov.b32 	%r388, %f48;
	mov.b32 	%r407, %f705;
	mov.b32 	%r406, %f57;
	mov.b32 	%r425, %f773;
	mov.b32 	%r424, %f66;
	xor.b32  	%r498, %r501, -2147483648;
	xor.b32  	%r497, %r500, -2147483648;
	mov.b32 	%r545, %f1051;
	mov.b32 	%r544, %f178;
	mov.b32 	%r548, %f1048;
	mov.b32 	%r547, %f177;
	xor.b32  	%r586, %r589, -2147483648;
	xor.b32  	%r585, %r588, -2147483648;
	selp.f32 	%f217, %f1207, %f1203, %p268;
	abs.f32 	%f1229, %f1292;
	setp.gtu.f32 	%p281, %f1229, 0f7F800000;
	@%p281 bra 	$L__BB0_115;
// %bb.114:
	mov.b32 	%r629, %f218;
	and.b32  	%r630, %r629, -2147483648;
	mov.b32 	%r631, %f1292;
	or.b32  	%r632, %r630, %r631;
	mov.b32 	%f1292, %r632;
$L__BB0_115:                            // %__nv_fmodf.exit1687
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r182, [%rd33];
	ld.global.u32 	%r184, [%rd35];
	// begin inline asm
	cvt.rn.f16x2.f32 %r297, %r299, %r298;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r315, %r317, %r316;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r333, %r335, %r334;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r351, %r353, %r352;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r369, %r371, %r370;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r387, %r389, %r388;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r405, %r407, %r406;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r423, %r425, %r424;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r426, %r431, %r430;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r429, %r431, %r430;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r432, %r437, %r436;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r435, %r437, %r436;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r493, %r504, %r503;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r496, %r498, %r497;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r499, %r501, %r500;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r502, %r504, %r503;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r543, %r545, %r544;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r546, %r548, %r547;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r581, %r592, %r591;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r584, %r586, %r585;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r587, %r589, %r588;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r590, %r592, %r591;
	// end inline asm
	add.f32 	%f1230, %f1292, %f1292;
	mov.b32 	%r640, %f1230;
	and.b32  	%r641, %r640, -2147483648;
	or.b32  	%r642, %r641, 1056964608;
	mov.b32 	%f1231, %r642;
	add.f32 	%f1232, %f1230, %f1231;
	cvt.rzi.f32.f32 	%f1233, %f1232;
	abs.f32 	%f1234, %f1230;
	setp.gt.f32 	%p282, %f1234, 0f4B000000;
	selp.f32 	%f1235, %f1230, %f1233, %p282;
	cvt.rzi.f32.f32 	%f1236, %f1230;
	setp.lt.f32 	%p283, %f1234, 0f3F000000;
	selp.f32 	%f1237, %f1236, %f1235, %p283;
	cvt.rzi.s32.f32 	%r643, %f1237;
	fma.rn.f32 	%f1238, %f1237, 0fBF000000, %f1292;
	mul.f32 	%f1239, %f1238, %f1238;
	fma.rn.f32 	%f1240, %f1239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1241, %f1239, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1242, %f1240, %f1239, 0fC0A55DF6;
	fma.rn.f32 	%f1243, %f1241, %f1239, 0f4081E0CF;
	fma.rn.f32 	%f1244, %f1239, %f1238, 0f00000000;
	fma.rn.f32 	%f1245, %f1243, %f1239, 0fC09DE9E6;
	fma.rn.f32 	%f1246, %f1242, %f1244, 0f00000000;
	fma.rn.f32 	%f1247, %f1245, %f1239, 0f3F800000;
	fma.rn.f32 	%f1248, %f1238, 0f40490FDB, %f1246;
	and.b32  	%r644, %r643, 1;
	setp.eq.b32 	%p284, %r644, 1;
	selp.f32 	%f1249, %f1247, %f1248, %p284;
	selp.f32 	%f1250, %f1248, %f1247, %p284;
	and.b32  	%r645, %r643, 2;
	setp.eq.s32 	%p285, %r645, 0;
	neg.f32 	%f1251, %f1249;
	selp.f32 	%f1252, %f1249, %f1251, %p285;
	add.s32 	%r646, %r643, 1;
	and.b32  	%r647, %r646, 2;
	setp.eq.s32 	%p286, %r647, 0;
	sub.f32 	%f1254, %f250, %f1250;
	selp.f32 	%f1255, %f1250, %f1254, %p286;
	cvt.rzi.f32.f32 	%f1256, %f1292;
	setp.eq.f32 	%p287, %f1256, %f1292;
	mul.f32 	%f1257, %f1292, 0f00000000;
	selp.f32 	%f1258, %f1257, %f1252, %p287;
	abs.f32 	%f1259, %f1292;
	setp.gt.f32 	%p288, %f1259, 0f4B800000;
	add.f32 	%f1260, %f1258, 0f3F800000;
	selp.f32 	%f1261, %f1260, %f1255, %p288;
	mov.b32 	%r635, %f1261;
	mov.b32 	%r634, %f217;
	// begin inline asm
	cvt.rn.f16x2.f32 %r633, %r635, %r634;
	// end inline asm
	mov.b32 	%r638, %f1258;
	mov.b32 	%r637, %f216;
	// begin inline asm
	cvt.rn.f16x2.f32 %r636, %r638, %r637;
	// end inline asm
	shl.b32 	%r648, %r250, 13;
	shl.b32 	%r649, %r254, 7;
	and.b32  	%r650, %r173, 32;
	or.b32  	%r651, %r650, %r2;
	shl.b32 	%r652, %r4, 3;
	and.b32  	%r653, %r652, 64;
	or.b32  	%r71, %r651, %r653;
	and.b32  	%r654, %r178, 28;
	and.b32  	%r655, %r176, 32;
	or.b32  	%r72, %r655, %r654;
	and.b32  	%r73, %r176, 64;
	or.b32  	%r656, %r648, %r73;
	or.b32  	%r657, %r656, %r72;
	add.s32 	%r74, %r657, %r649;
	and.b32  	%r75, %r4, 8;
	shl.b32 	%r658, %r4, 4;
	or.b32  	%r659, %r658, %r75;
	shr.u32 	%r660, %r659, 2;
	and.b32  	%r661, %r660, 30;
	and.b32  	%r662, %r188, 6;
	and.b32  	%r663, %r658, 48;
	or.b32  	%r76, %r663, %r662;
	shr.u32 	%r664, %r2, 1;
	and.b32  	%r665, %r3, 32;
	or.b32  	%r77, %r665, %r664;
	or.b32  	%r78, %r77, 8;
	or.b32  	%r79, %r77, 16;
	or.b32  	%r80, %r77, 24;
	or.b32  	%r81, %r188, %r663;
	or.b32  	%r666, %r181, %r179;
	or.b32  	%r667, %r666, %r174;
	or.b32  	%r668, %r667, %r180;
	shr.u32 	%r669, %r668, 1;
	mul.lo.s32 	%r670, %r669, 65;
	add.s32 	%r82, %r77, %r670;
	add.s32 	%r83, %r78, %r670;
	add.s32 	%r84, %r79, %r670;
	add.s32 	%r85, %r80, %r670;
	or.b32  	%r671, %r183, %r179;
	or.b32  	%r672, %r671, %r174;
	or.b32  	%r673, %r672, %r180;
	shr.u32 	%r674, %r673, 1;
	mul.lo.s32 	%r675, %r674, 65;
	add.s32 	%r86, %r77, %r675;
	add.s32 	%r87, %r78, %r675;
	add.s32 	%r88, %r79, %r675;
	add.s32 	%r89, %r80, %r675;
	shl.b32 	%r676, %r2, 1;
	or.b32  	%r677, %r676, %r190;
	mul.lo.s32 	%r678, %r677, 65;
	add.s32 	%r679, %r661, %r678;
	mul.wide.u32 	%rd36, %r679, 4;
	mov.u64 	%rd37, shmem;
	add.s64 	%rd5, %rd37, %rd36;
	cvt.u64.u32 	%rd38, %r661;
	cvt.u64.u32 	%rd39, %r678;
	add.s64 	%rd40, %rd39, %rd38;
	shl.b64 	%rd41, %rd40, 2;
	add.s64 	%rd6, %rd37, %rd41;
	or.b32  	%r680, %r677, 32;
	mul.lo.s32 	%r681, %r680, 65;
	add.s32 	%r682, %r661, %r681;
	mul.wide.u32 	%rd42, %r682, 4;
	add.s64 	%rd7, %rd37, %rd42;
	cvt.u64.u32 	%rd43, %r681;
	add.s64 	%rd44, %rd38, %rd43;
	shl.b64 	%rd45, %rd44, 2;
	add.s64 	%rd8, %rd37, %rd45;
	shl.b32 	%r683, %r252, 20;
	add.s32 	%r684, %r683, -3145728;
	or.b32  	%r685, %r177, %r191;
	shl.b32 	%r686, %r2, 9;
	shl.b32 	%r687, %r685, 7;
	or.b32  	%r90, %r686, %r687;
	cvt.s64.s32 	%rd9, %r684;
	bfe.u32 	%r688, %r658, 5, 1;
	and.b32  	%r689, %r2, 1;
	neg.s32 	%r690, %r689;
	and.b32  	%r691, %r690, 2080;
	mul.lo.s32 	%r692, %r190, 65;
	bfe.s32 	%r693, %r2, 2, 1;
	and.b32  	%r694, %r2, 4;
	setp.eq.s32 	%p289, %r694, 0;
	and.b32  	%r695, %r693, 520;
	bfe.s32 	%r696, %r2, 1, 1;
	and.b32  	%r697, %r2, 2;
	setp.eq.s32 	%p290, %r697, 0;
	and.b32  	%r698, %r696, 1040;
	shr.u32 	%r699, %r2, 3;
	mul.lo.s32 	%r700, %r699, 260;
	or.b32  	%r701, %r691, %r661;
	add.s32 	%r702, %r701, %r692;
	add.s32 	%r703, %r702, %r695;
	add.s32 	%r704, %r703, %r698;
	add.s32 	%r705, %r704, %r700;
	mul.wide.u32 	%rd46, %r705, 4;
	add.s64 	%rd10, %rd37, %rd46;
	cvt.u64.u32 	%rd47, %r700;
	selp.b64 	%rd48, 0, 1040, %p290;
	selp.b64 	%rd49, 0, 520, %p289;
	cvt.u64.u32 	%rd50, %r692;
	cvt.u64.u32 	%rd51, %r701;
	add.s64 	%rd52, %rd51, %rd50;
	add.s64 	%rd53, %rd52, %rd49;
	add.s64 	%rd54, %rd53, %rd48;
	add.s64 	%rd55, %rd54, %rd47;
	shl.b64 	%rd56, %rd55, 2;
	add.s64 	%rd16, %rd37, %rd56;
	cvt.u64.u32 	%rd57, %r703;
	add.s64 	%rd58, %rd57, %rd48;
	add.s64 	%rd59, %rd58, %rd47;
	shl.b64 	%rd60, %rd59, 2;
	add.s64 	%rd12, %rd37, %rd60;
	add.s32 	%r706, %r705, 162;
	mul.wide.u32 	%rd61, %r706, 4;
	add.s64 	%rd13, %rd37, %rd61;
	add.s32 	%r707, %r705, 131;
	mul.wide.u32 	%rd62, %r707, 4;
	add.s64 	%rd14, %rd37, %rd62;
	add.s32 	%r708, %r705, 163;
	mul.wide.u32 	%rd63, %r708, 4;
	add.s64 	%rd15, %rd37, %rd63;
	add.s32 	%r709, %r705, 4193;
	mul.wide.u32 	%rd64, %r709, 4;
	add.s64 	%rd17, %rd37, %rd64;
	add.s32 	%r710, %r705, 4162;
	mul.wide.u32 	%rd65, %r710, 4;
	add.s64 	%rd18, %rd37, %rd65;
	add.s32 	%r711, %r705, 4194;
	mul.wide.u32 	%rd66, %r711, 4;
	add.s64 	%rd19, %rd37, %rd66;
	add.s32 	%r712, %r705, 4291;
	mul.wide.u32 	%rd67, %r712, 4;
	add.s64 	%rd20, %rd37, %rd67;
	add.s32 	%r713, %r705, 4323;
	mul.wide.u32 	%rd68, %r713, 4;
	add.s64 	%rd21, %rd37, %rd68;
	add.s32 	%r714, %r705, 4292;
	mul.wide.u32 	%rd69, %r714, 4;
	add.s64 	%rd22, %rd37, %rd69;
	add.s32 	%r715, %r705, 4324;
	mul.wide.u32 	%rd70, %r715, 4;
	add.s64 	%rd23, %rd37, %rd70;
	mul.lo.s32 	%r91, %r688, 65;
	bfe.s32 	%r716, %r4, 2, 1;
	and.b32  	%r92, %r716, 260;
	add.s32 	%r93, %r77, 2080;
	add.s32 	%r94, %r78, 2080;
	add.s32 	%r95, %r79, 2080;
	add.s32 	%r96, %r80, 2080;
	mov.u32 	%r16352, 0;
	setp.eq.s32 	%p292, %r75, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16353, %r16352;
	mov.u32 	%r16354, %r16352;
	mov.u32 	%r16355, %r16352;
	mov.u32 	%r16356, %r16352;
	mov.u32 	%r16357, %r16352;
	mov.u32 	%r16358, %r16352;
	mov.u32 	%r16359, %r16352;
	mov.u32 	%r16360, %r16352;
	mov.u32 	%r16361, %r16352;
	mov.u32 	%r16362, %r16352;
	mov.u32 	%r16363, %r16352;
	mov.u32 	%r16364, %r16352;
	mov.u32 	%r16365, %r16352;
	mov.u32 	%r16366, %r16352;
	mov.u32 	%r16367, %r16352;
	mov.u32 	%r16368, %r16352;
	mov.u32 	%r16369, %r16352;
	mov.u32 	%r16370, %r16352;
	mov.u32 	%r16371, %r16352;
	mov.u32 	%r16372, %r16352;
	mov.u32 	%r16373, %r16352;
	mov.u32 	%r16374, %r16352;
	mov.u32 	%r16375, %r16352;
	mov.u32 	%r16376, %r16352;
	bra.uni 	$L__BB0_116;
$L__BB0_122:                            // %L70918
                                        //   in Loop: Header=BB0_116 Depth=1
	add.s32 	%r172, %r16376, 256;
	setp.ne.s32 	%p317, %r16376, 32512;
	mov.u32 	%r16376, %r172;
	@%p317 bra 	$L__BB0_116;
	bra.uni 	$L__BB0_123;
$L__BB0_116:                            // %L2126
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_118 Depth 2
	add.s32 	%r717, %r16376, %r250;
	setp.lt.s32 	%p291, %r717, %r251;
	@%p291 bra 	$L__BB0_117;
	bra.uni 	$L__BB0_123;
$L__BB0_117:                            // %pass776
                                        //   in Loop: Header=BB0_116 Depth=1
	and.b32  	%r783, %r16376, 32512;
	or.b32  	%r784, %r71, %r783;
	shl.b32 	%r785, %r784, 13;
	add.s32 	%r786, %r74, %r785;
	shr.s32 	%r787, %r786, 31;
	shr.u32 	%r788, %r787, 4;
	add.s32 	%r789, %r786, %r788;
	shr.s32 	%r790, %r789, 28;
	setp.lt.s32 	%p293, %r786, 0;
	and.b32  	%r791, %r789, -268435456;
	setp.ne.s32 	%p294, %r791, %r786;
	and.pred  	%p295, %p293, %p294;
	selp.u32 	%r792, 1, 0, %p295;
	sub.s32 	%r793, %r792, %r790;
	shl.b32 	%r794, %r793, 28;
	add.s32 	%r795, %r794, %r786;
	mul.wide.s32 	%rd71, %r795, 4;
	add.s64 	%rd72, %rd2, %rd71;
	ld.global.v4.u32 	{%r796, %r797, %r798, %r799}, [%rd72];
	or.b32  	%r800, %r785, 131072;
	add.s32 	%r801, %r74, %r800;
	shr.s32 	%r802, %r801, 31;
	shr.u32 	%r803, %r802, 4;
	add.s32 	%r804, %r801, %r803;
	shr.s32 	%r805, %r804, 28;
	setp.lt.s32 	%p296, %r801, 0;
	and.b32  	%r806, %r804, -268435456;
	setp.ne.s32 	%p297, %r806, %r801;
	and.pred  	%p298, %p296, %p297;
	selp.u32 	%r807, 1, 0, %p298;
	sub.s32 	%r808, %r807, %r805;
	shl.b32 	%r809, %r808, 28;
	add.s32 	%r810, %r809, %r801;
	mul.wide.s32 	%rd73, %r810, 4;
	add.s64 	%rd74, %rd2, %rd73;
	ld.global.v4.u32 	{%r811, %r812, %r813, %r814}, [%rd74];
	or.b32  	%r815, %r785, 1048576;
	add.s32 	%r816, %r74, %r815;
	shr.s32 	%r817, %r816, 31;
	shr.u32 	%r818, %r817, 4;
	add.s32 	%r819, %r816, %r818;
	shr.s32 	%r820, %r819, 28;
	setp.lt.s32 	%p299, %r816, 0;
	and.b32  	%r821, %r819, -268435456;
	setp.ne.s32 	%p300, %r821, %r816;
	and.pred  	%p301, %p299, %p300;
	selp.u32 	%r822, 1, 0, %p301;
	sub.s32 	%r823, %r822, %r820;
	shl.b32 	%r824, %r823, 28;
	add.s32 	%r825, %r824, %r816;
	mul.wide.s32 	%rd75, %r825, 4;
	add.s64 	%rd76, %rd2, %rd75;
	ld.global.v4.u32 	{%r826, %r827, %r828, %r829}, [%rd76];
	or.b32  	%r830, %r785, 1179648;
	add.s32 	%r831, %r74, %r830;
	shr.s32 	%r832, %r831, 31;
	shr.u32 	%r833, %r832, 4;
	add.s32 	%r834, %r831, %r833;
	shr.s32 	%r835, %r834, 28;
	setp.lt.s32 	%p302, %r831, 0;
	and.b32  	%r836, %r834, -268435456;
	setp.ne.s32 	%p303, %r836, %r831;
	and.pred  	%p304, %p302, %p303;
	selp.u32 	%r837, 1, 0, %p304;
	sub.s32 	%r838, %r837, %r835;
	shl.b32 	%r839, %r838, 28;
	add.s32 	%r840, %r839, %r831;
	mul.wide.s32 	%rd77, %r840, 4;
	add.s64 	%rd78, %rd2, %rd77;
	ld.global.v4.u32 	{%r841, %r842, %r843, %r844}, [%rd78];
	selp.b32 	%r845, %r798, %r796, %p292;
	shfl.sync.bfly.b32	%r846, %r845, 8, 31, -1;
	selp.b32 	%r719, %r796, %r846, %p292;
	selp.b32 	%r720, %r846, %r798, %p292;
	selp.b32 	%r847, %r799, %r797, %p292;
	shfl.sync.bfly.b32	%r848, %r847, 8, 31, -1;
	selp.b32 	%r727, %r797, %r848, %p292;
	selp.b32 	%r728, %r848, %r799, %p292;
	selp.b32 	%r849, %r813, %r811, %p292;
	shfl.sync.bfly.b32	%r850, %r849, 8, 31, -1;
	selp.b32 	%r735, %r811, %r850, %p292;
	selp.b32 	%r736, %r850, %r813, %p292;
	selp.b32 	%r851, %r814, %r812, %p292;
	shfl.sync.bfly.b32	%r852, %r851, 8, 31, -1;
	selp.b32 	%r743, %r812, %r852, %p292;
	selp.b32 	%r744, %r852, %r814, %p292;
	selp.b32 	%r853, %r828, %r826, %p292;
	shfl.sync.bfly.b32	%r854, %r853, 8, 31, -1;
	selp.b32 	%r751, %r826, %r854, %p292;
	selp.b32 	%r752, %r854, %r828, %p292;
	selp.b32 	%r855, %r829, %r827, %p292;
	shfl.sync.bfly.b32	%r856, %r855, 8, 31, -1;
	selp.b32 	%r759, %r827, %r856, %p292;
	selp.b32 	%r760, %r856, %r829, %p292;
	selp.b32 	%r857, %r843, %r841, %p292;
	shfl.sync.bfly.b32	%r858, %r857, 8, 31, -1;
	selp.b32 	%r767, %r841, %r858, %p292;
	selp.b32 	%r768, %r858, %r843, %p292;
	selp.b32 	%r859, %r844, %r842, %p292;
	shfl.sync.bfly.b32	%r860, %r859, 8, 31, -1;
	selp.b32 	%r775, %r842, %r860, %p292;
	selp.b32 	%r776, %r860, %r844, %p292;
	mov.u32 	%r777, 21520;
	// begin inline asm
	prmt.b32 %r718, %r719, %r720, %r777;
	// end inline asm
	mov.u32 	%r781, 30258;
	// begin inline asm
	prmt.b32 %r722, %r719, %r720, %r781;
	// end inline asm
	// begin inline asm
	prmt.b32 %r726, %r727, %r728, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r730, %r727, %r728, %r781;
	// end inline asm
	// begin inline asm
	prmt.b32 %r734, %r735, %r736, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r738, %r735, %r736, %r781;
	// end inline asm
	// begin inline asm
	prmt.b32 %r742, %r743, %r744, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r746, %r743, %r744, %r781;
	// end inline asm
	// begin inline asm
	prmt.b32 %r750, %r751, %r752, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r754, %r751, %r752, %r781;
	// end inline asm
	// begin inline asm
	prmt.b32 %r758, %r759, %r760, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r762, %r759, %r760, %r781;
	// end inline asm
	// begin inline asm
	prmt.b32 %r766, %r767, %r768, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r770, %r767, %r768, %r781;
	// end inline asm
	// begin inline asm
	prmt.b32 %r774, %r775, %r776, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r778, %r775, %r776, %r781;
	// end inline asm
	st.shared.u32 	[%rd10], %r718;
	st.shared.u32 	[%rd16+128], %r722;
	st.shared.u32 	[%rd16+4], %r726;
	st.shared.u32 	[%rd16+132], %r730;
	st.shared.u32 	[%rd12+520], %r734;
	st.shared.u32 	[%rd13], %r738;
	st.shared.u32 	[%rd14], %r742;
	st.shared.u32 	[%rd15], %r746;
	st.shared.u32 	[%rd16+16644], %r750;
	st.shared.u32 	[%rd17], %r754;
	st.shared.u32 	[%rd18], %r758;
	st.shared.u32 	[%rd19], %r762;
	st.shared.u32 	[%rd20], %r766;
	st.shared.u32 	[%rd21], %r770;
	st.shared.u32 	[%rd22], %r774;
	st.shared.u32 	[%rd23], %r778;
	bar.sync 	0;
	or.b32  	%r227, %r76, %r16376;
	mov.u32 	%r782, 0;
	mov.u32 	%r16401, %r782;
$L__BB0_118:                            // %L13713
                                        //   Parent Loop BB0_116 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r16125, %r227, %r16401;
	bfe.s32 	%r16126, %r16125, 7, 1;
	and.b32  	%r16127, %r16126, 4161;
	bfe.s32 	%r16128, %r16125, 2, 1;
	and.b32  	%r16129, %r16128, 520;
	bfe.s32 	%r16130, %r16125, 4, 1;
	and.b32  	%r16131, %r16130, 130;
	bfe.s32 	%r16132, %r16125, 1, 1;
	and.b32  	%r16133, %r16132, 1040;
	add.s32 	%r16134, %r77, %r16127;
	add.s32 	%r16135, %r16134, %r91;
	add.s32 	%r16136, %r16135, %r16129;
	add.s32 	%r16137, %r16136, %r16131;
	add.s32 	%r16138, %r16137, %r16133;
	add.s32 	%r16139, %r16138, %r92;
	mul.wide.u32 	%rd79, %r16139, 4;
	add.s64 	%rd81, %rd37, %rd79;
	ld.shared.u32 	%r16140, [%rd81];
	add.s32 	%r16141, %r78, %r16127;
	add.s32 	%r16142, %r16141, %r91;
	add.s32 	%r16143, %r16142, %r16129;
	add.s32 	%r16144, %r16143, %r16131;
	add.s32 	%r16145, %r16144, %r16133;
	add.s32 	%r16146, %r16145, %r92;
	mul.wide.u32 	%rd82, %r16146, 4;
	add.s64 	%rd83, %rd37, %rd82;
	ld.shared.u32 	%r16147, [%rd83];
	add.s32 	%r16148, %r79, %r16127;
	add.s32 	%r16149, %r16148, %r91;
	add.s32 	%r16150, %r16149, %r16129;
	add.s32 	%r16151, %r16150, %r16131;
	add.s32 	%r16152, %r16151, %r16133;
	add.s32 	%r16153, %r16152, %r92;
	mul.wide.u32 	%rd84, %r16153, 4;
	add.s64 	%rd85, %rd37, %rd84;
	ld.shared.u32 	%r16154, [%rd85];
	add.s32 	%r16155, %r80, %r16127;
	add.s32 	%r16156, %r16155, %r91;
	add.s32 	%r16157, %r16156, %r16129;
	add.s32 	%r16158, %r16157, %r16131;
	add.s32 	%r16159, %r16158, %r16133;
	add.s32 	%r16160, %r16159, %r92;
	mul.wide.u32 	%rd86, %r16160, 4;
	add.s64 	%rd87, %rd37, %rd86;
	ld.shared.u32 	%r16161, [%rd87];
	or.b32  	%r16162, %r81, %r16401;
	or.b32  	%r16163, %r16162, 1;
	add.s32 	%r16164, %r16163, %r16376;
	or.b32  	%r16165, %r16164, %r173;
	bfe.s32 	%r16166, %r16164, 7, 1;
	and.b32  	%r16167, %r16166, 4161;
	bfe.s32 	%r16168, %r16164, 5, 1;
	and.b32  	%r16169, %r16168, 65;
	bfe.s32 	%r16170, %r16164, 2, 1;
	and.b32  	%r16171, %r16170, 520;
	bfe.s32 	%r16172, %r16164, 4, 1;
	and.b32  	%r16173, %r16172, 130;
	bfe.s32 	%r16174, %r16164, 1, 1;
	and.b32  	%r16175, %r16174, 1040;
	bfe.s32 	%r16176, %r16165, 3, 1;
	and.b32  	%r16177, %r16176, 260;
	add.s32 	%r16178, %r93, %r16167;
	add.s32 	%r16179, %r16178, %r16169;
	add.s32 	%r16180, %r16179, %r16171;
	add.s32 	%r16181, %r16180, %r16173;
	add.s32 	%r16182, %r16181, %r16175;
	add.s32 	%r16183, %r16182, %r16177;
	mul.wide.u32 	%rd88, %r16183, 4;
	add.s64 	%rd89, %rd37, %rd88;
	ld.shared.u32 	%r16184, [%rd89];
	add.s32 	%r16185, %r94, %r16167;
	add.s32 	%r16186, %r16185, %r16169;
	add.s32 	%r16187, %r16186, %r16171;
	add.s32 	%r16188, %r16187, %r16173;
	add.s32 	%r16189, %r16188, %r16175;
	add.s32 	%r16190, %r16189, %r16177;
	mul.wide.u32 	%rd90, %r16190, 4;
	add.s64 	%rd91, %rd37, %rd90;
	ld.shared.u32 	%r16191, [%rd91];
	add.s32 	%r16192, %r95, %r16167;
	add.s32 	%r16193, %r16192, %r16169;
	add.s32 	%r16194, %r16193, %r16171;
	add.s32 	%r16195, %r16194, %r16173;
	add.s32 	%r16196, %r16195, %r16175;
	add.s32 	%r16197, %r16196, %r16177;
	mul.wide.u32 	%rd92, %r16197, 4;
	add.s64 	%rd93, %rd37, %rd92;
	ld.shared.u32 	%r16198, [%rd93];
	add.s32 	%r16199, %r96, %r16167;
	add.s32 	%r16200, %r16199, %r16169;
	add.s32 	%r16201, %r16200, %r16171;
	add.s32 	%r16202, %r16201, %r16173;
	add.s32 	%r16203, %r16202, %r16175;
	add.s32 	%r16204, %r16203, %r16177;
	mul.wide.u32 	%rd94, %r16204, 4;
	add.s64 	%rd95, %rd37, %rd94;
	ld.shared.u32 	%r16205, [%rd95];
	// begin inline asm
	mov.b32 %r866, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r877, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r865, %r16140, -2004318072;
	mov.u32 	%r864, 983055;
	// begin inline asm
	lop3.b32 %r863, %r864, %r865, %r866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r867, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r868, %r866, %r867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r871, %r863, %r868;
	// end inline asm
	mov.u32 	%r875, 15728880;
	// begin inline asm
	lop3.b32 %r874, %r875, %r865, %r877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r878, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r879, %r877, %r878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r882, %r874, %r879;
	// end inline asm
	shr.u32 	%r887, %r865, 8;
	// begin inline asm
	lop3.b32 %r885, %r864, %r887, %r866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r889, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r890, %r866, %r889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r893, %r885, %r890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r896, %r875, %r887, %r877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r900, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r901, %r877, %r900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r904, %r896, %r901;
	// end inline asm
	// begin inline asm
	mov.b32 %r912, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r923, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r911, %r16147, -2004318072;
	// begin inline asm
	lop3.b32 %r909, %r864, %r911, %r912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r913, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r914, %r912, %r913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r917, %r909, %r914;
	// end inline asm
	// begin inline asm
	lop3.b32 %r920, %r875, %r911, %r923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r925, %r923, %r924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r928, %r920, %r925;
	// end inline asm
	shr.u32 	%r933, %r911, 8;
	// begin inline asm
	lop3.b32 %r931, %r864, %r933, %r912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r936, %r912, %r935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r939, %r931, %r936;
	// end inline asm
	// begin inline asm
	lop3.b32 %r942, %r875, %r933, %r923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r947, %r923, %r946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r950, %r942, %r947;
	// end inline asm
	// begin inline asm
	mov.b32 %r958, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r969, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r957, %r16154, -2004318072;
	// begin inline asm
	lop3.b32 %r955, %r864, %r957, %r958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r959, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r960, %r958, %r959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r963, %r955, %r960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r966, %r875, %r957, %r969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r970, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r971, %r969, %r970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r974, %r966, %r971;
	// end inline asm
	shr.u32 	%r979, %r957, 8;
	// begin inline asm
	lop3.b32 %r977, %r864, %r979, %r958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r982, %r958, %r981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r985, %r977, %r982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r988, %r875, %r979, %r969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r993, %r969, %r992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r996, %r988, %r993;
	// end inline asm
	// begin inline asm
	mov.b32 %r1004, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1015, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1003, %r16161, -2004318072;
	// begin inline asm
	lop3.b32 %r1001, %r864, %r1003, %r1004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1006, %r1004, %r1005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1009, %r1001, %r1006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1012, %r875, %r1003, %r1015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1016, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1017, %r1015, %r1016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1020, %r1012, %r1017;
	// end inline asm
	shr.u32 	%r1025, %r1003, 8;
	// begin inline asm
	lop3.b32 %r1023, %r864, %r1025, %r1004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1027, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1028, %r1004, %r1027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1031, %r1023, %r1028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1034, %r875, %r1025, %r1015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1039, %r1015, %r1038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1042, %r1034, %r1039;
	// end inline asm
	// begin inline asm
	mov.b32 %r1050, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1061, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1049, %r16184, -2004318072;
	// begin inline asm
	lop3.b32 %r1047, %r864, %r1049, %r1050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1052, %r1050, %r1051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1055, %r1047, %r1052;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1058, %r875, %r1049, %r1061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1063, %r1061, %r1062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1066, %r1058, %r1063;
	// end inline asm
	shr.u32 	%r1071, %r1049, 8;
	// begin inline asm
	lop3.b32 %r1069, %r864, %r1071, %r1050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1073, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1074, %r1050, %r1073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1077, %r1069, %r1074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1080, %r875, %r1071, %r1061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1084, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1085, %r1061, %r1084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1088, %r1080, %r1085;
	// end inline asm
	// begin inline asm
	mov.b32 %r1096, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1107, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1095, %r16191, -2004318072;
	// begin inline asm
	lop3.b32 %r1093, %r864, %r1095, %r1096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1098, %r1096, %r1097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1101, %r1093, %r1098;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1104, %r875, %r1095, %r1107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1109, %r1107, %r1108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1112, %r1104, %r1109;
	// end inline asm
	shr.u32 	%r1117, %r1095, 8;
	// begin inline asm
	lop3.b32 %r1115, %r864, %r1117, %r1096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1119, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1120, %r1096, %r1119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1123, %r1115, %r1120;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1126, %r875, %r1117, %r1107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1131, %r1107, %r1130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1134, %r1126, %r1131;
	// end inline asm
	// begin inline asm
	mov.b32 %r1142, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1153, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1141, %r16198, -2004318072;
	// begin inline asm
	lop3.b32 %r1139, %r864, %r1141, %r1142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1144, %r1142, %r1143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1147, %r1139, %r1144;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1150, %r875, %r1141, %r1153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1154, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1155, %r1153, %r1154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1158, %r1150, %r1155;
	// end inline asm
	shr.u32 	%r1163, %r1141, 8;
	// begin inline asm
	lop3.b32 %r1161, %r864, %r1163, %r1142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1165, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1166, %r1142, %r1165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1169, %r1161, %r1166;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1172, %r875, %r1163, %r1153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1177, %r1153, %r1176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1180, %r1172, %r1177;
	// end inline asm
	// begin inline asm
	mov.b32 %r1188, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1199, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1187, %r16205, -2004318072;
	// begin inline asm
	lop3.b32 %r1185, %r864, %r1187, %r1188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1190, %r1188, %r1189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1193, %r1185, %r1190;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1196, %r875, %r1187, %r1199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1200, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1201, %r1199, %r1200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1204, %r1196, %r1201;
	// end inline asm
	shr.u32 	%r1209, %r1187, 8;
	// begin inline asm
	lop3.b32 %r1207, %r864, %r1209, %r1188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1211, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1212, %r1188, %r1211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1215, %r1207, %r1212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1218, %r875, %r1209, %r1199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1222, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1223, %r1199, %r1222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1226, %r1218, %r1223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1229, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1231, %r1229, %r871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1234, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1236, %r1234, %r882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1239, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1241, %r1239, %r893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1244, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1246, %r1244, %r904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1249, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1251, %r1249, %r917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1254, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1256, %r1254, %r928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1259, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1261, %r1259, %r939;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1264, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1266, %r1264, %r950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1269, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1271, %r1269, %r963;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1274, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1276, %r1274, %r974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1279, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1281, %r1279, %r985;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1284, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1286, %r1284, %r996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1289, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1291, %r1289, %r1009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1294, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1296, %r1294, %r1020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1299, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1301, %r1299, %r1031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1304, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1306, %r1304, %r1042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1309, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1311, %r1309, %r1055;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1314, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1316, %r1314, %r1066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1319, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1321, %r1319, %r1077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1324, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1326, %r1324, %r1088;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1329, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1331, %r1329, %r1101;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1334, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1336, %r1334, %r1112;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1339, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1341, %r1339, %r1123;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1344, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1346, %r1344, %r1134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1349, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1351, %r1349, %r1147;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1354, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1356, %r1354, %r1158;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1359, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1361, %r1359, %r1169;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1364, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1366, %r1364, %r1180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1369, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1371, %r1369, %r1193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1374, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1376, %r1374, %r1204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1379, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1381, %r1379, %r1215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1384, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1386, %r1384, %r1226;
	// end inline asm
	// begin inline asm
	mov.b32 %r1394, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1405, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1393, %r16352, -2004318072;
	// begin inline asm
	lop3.b32 %r1391, %r864, %r1393, %r1394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1395, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1396, %r1394, %r1395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1399, %r1391, %r1396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1402, %r875, %r1393, %r1405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1406, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1407, %r1405, %r1406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1410, %r1402, %r1407;
	// end inline asm
	shr.u32 	%r1415, %r1393, 8;
	// begin inline asm
	lop3.b32 %r1413, %r864, %r1415, %r1394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1417, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1418, %r1394, %r1417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1421, %r1413, %r1418;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1424, %r875, %r1415, %r1405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1429, %r1405, %r1428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1432, %r1424, %r1429;
	// end inline asm
	// begin inline asm
	mov.b32 %r1440, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1451, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1439, %r16353, -2004318072;
	// begin inline asm
	lop3.b32 %r1437, %r864, %r1439, %r1440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1441, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1442, %r1440, %r1441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1445, %r1437, %r1442;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1448, %r875, %r1439, %r1451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1452, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1453, %r1451, %r1452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1456, %r1448, %r1453;
	// end inline asm
	shr.u32 	%r1461, %r1439, 8;
	// begin inline asm
	lop3.b32 %r1459, %r864, %r1461, %r1440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1463, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1464, %r1440, %r1463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1467, %r1459, %r1464;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1470, %r875, %r1461, %r1451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1475, %r1451, %r1474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1478, %r1470, %r1475;
	// end inline asm
	// begin inline asm
	mov.b32 %r1486, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1497, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1485, %r16354, -2004318072;
	// begin inline asm
	lop3.b32 %r1483, %r864, %r1485, %r1486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1487, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1488, %r1486, %r1487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1491, %r1483, %r1488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1494, %r875, %r1485, %r1497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1498, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1499, %r1497, %r1498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1502, %r1494, %r1499;
	// end inline asm
	shr.u32 	%r1507, %r1485, 8;
	// begin inline asm
	lop3.b32 %r1505, %r864, %r1507, %r1486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1509, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1510, %r1486, %r1509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1513, %r1505, %r1510;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1516, %r875, %r1507, %r1497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1521, %r1497, %r1520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1524, %r1516, %r1521;
	// end inline asm
	// begin inline asm
	mov.b32 %r1532, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1543, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1531, %r16355, -2004318072;
	// begin inline asm
	lop3.b32 %r1529, %r864, %r1531, %r1532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1533, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1534, %r1532, %r1533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1537, %r1529, %r1534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1540, %r875, %r1531, %r1543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1544, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1545, %r1543, %r1544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1548, %r1540, %r1545;
	// end inline asm
	shr.u32 	%r1553, %r1531, 8;
	// begin inline asm
	lop3.b32 %r1551, %r864, %r1553, %r1532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1555, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1556, %r1532, %r1555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1559, %r1551, %r1556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1562, %r875, %r1553, %r1543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1566, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1567, %r1543, %r1566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1570, %r1562, %r1567;
	// end inline asm
	// begin inline asm
	mov.b32 %r1578, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1589, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1577, %r16364, -2004318072;
	// begin inline asm
	lop3.b32 %r1575, %r864, %r1577, %r1578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1579, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1580, %r1578, %r1579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1583, %r1575, %r1580;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1586, %r875, %r1577, %r1589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1590, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1591, %r1589, %r1590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1594, %r1586, %r1591;
	// end inline asm
	shr.u32 	%r1599, %r1577, 8;
	// begin inline asm
	lop3.b32 %r1597, %r864, %r1599, %r1578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1601, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1602, %r1578, %r1601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1605, %r1597, %r1602;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1608, %r875, %r1599, %r1589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1612, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1613, %r1589, %r1612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1616, %r1608, %r1613;
	// end inline asm
	// begin inline asm
	mov.b32 %r1624, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1635, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1623, %r16365, -2004318072;
	// begin inline asm
	lop3.b32 %r1621, %r864, %r1623, %r1624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1625, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1626, %r1624, %r1625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1629, %r1621, %r1626;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1632, %r875, %r1623, %r1635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1636, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1637, %r1635, %r1636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1640, %r1632, %r1637;
	// end inline asm
	shr.u32 	%r1645, %r1623, 8;
	// begin inline asm
	lop3.b32 %r1643, %r864, %r1645, %r1624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1647, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1648, %r1624, %r1647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1651, %r1643, %r1648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1654, %r875, %r1645, %r1635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1658, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1659, %r1635, %r1658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1662, %r1654, %r1659;
	// end inline asm
	// begin inline asm
	mov.b32 %r1670, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1681, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1669, %r16366, -2004318072;
	// begin inline asm
	lop3.b32 %r1667, %r864, %r1669, %r1670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1671, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1672, %r1670, %r1671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1675, %r1667, %r1672;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1678, %r875, %r1669, %r1681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1682, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1683, %r1681, %r1682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1686, %r1678, %r1683;
	// end inline asm
	shr.u32 	%r1691, %r1669, 8;
	// begin inline asm
	lop3.b32 %r1689, %r864, %r1691, %r1670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1693, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1694, %r1670, %r1693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1697, %r1689, %r1694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1700, %r875, %r1691, %r1681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1704, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1705, %r1681, %r1704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1708, %r1700, %r1705;
	// end inline asm
	// begin inline asm
	mov.b32 %r1716, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1727, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1715, %r16367, -2004318072;
	// begin inline asm
	lop3.b32 %r1713, %r864, %r1715, %r1716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1717, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1718, %r1716, %r1717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1721, %r1713, %r1718;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1724, %r875, %r1715, %r1727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1728, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1729, %r1727, %r1728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1732, %r1724, %r1729;
	// end inline asm
	shr.u32 	%r1737, %r1715, 8;
	// begin inline asm
	lop3.b32 %r1735, %r864, %r1737, %r1716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1739, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1740, %r1716, %r1739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1743, %r1735, %r1740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1746, %r875, %r1737, %r1727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1750, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1751, %r1727, %r1750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1754, %r1746, %r1751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1757, %r297, %r1399, %r1231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1761, %r297, %r1410, %r1236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1765, %r297, %r1421, %r1241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1769, %r297, %r1432, %r1246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1773, %r297, %r1445, %r1251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1777, %r297, %r1456, %r1256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1781, %r297, %r1467, %r1261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1785, %r297, %r1478, %r1266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1789, %r297, %r1491, %r1271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1793, %r297, %r1502, %r1276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1797, %r297, %r1513, %r1281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1801, %r297, %r1524, %r1286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1805, %r297, %r1537, %r1291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1809, %r297, %r1548, %r1296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1813, %r297, %r1559, %r1301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1817, %r297, %r1570, %r1306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1821, %r315, %r1583, %r1311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1825, %r315, %r1594, %r1316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1829, %r315, %r1605, %r1321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1833, %r315, %r1616, %r1326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1837, %r315, %r1629, %r1331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1841, %r315, %r1640, %r1336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1845, %r315, %r1651, %r1341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1849, %r315, %r1662, %r1346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1853, %r315, %r1675, %r1351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1857, %r315, %r1686, %r1356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1861, %r315, %r1697, %r1361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1865, %r315, %r1708, %r1366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1869, %r315, %r1721, %r1371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1873, %r315, %r1732, %r1376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1877, %r315, %r1743, %r1381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1881, %r315, %r1754, %r1386;
	// end inline asm
	// begin inline asm
	mov.b32 %r1890, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1901, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1889, %r16356, -2004318072;
	// begin inline asm
	lop3.b32 %r1887, %r864, %r1889, %r1890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1891, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1892, %r1890, %r1891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1895, %r1887, %r1892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1898, %r875, %r1889, %r1901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1902, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1903, %r1901, %r1902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1906, %r1898, %r1903;
	// end inline asm
	shr.u32 	%r1911, %r1889, 8;
	// begin inline asm
	lop3.b32 %r1909, %r864, %r1911, %r1890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1913, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1914, %r1890, %r1913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1917, %r1909, %r1914;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1920, %r875, %r1911, %r1901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1925, %r1901, %r1924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1928, %r1920, %r1925;
	// end inline asm
	// begin inline asm
	mov.b32 %r1936, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1947, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1935, %r16357, -2004318072;
	// begin inline asm
	lop3.b32 %r1933, %r864, %r1935, %r1936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1938, %r1936, %r1937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1941, %r1933, %r1938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1944, %r875, %r1935, %r1947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1948, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1949, %r1947, %r1948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1952, %r1944, %r1949;
	// end inline asm
	shr.u32 	%r1957, %r1935, 8;
	// begin inline asm
	lop3.b32 %r1955, %r864, %r1957, %r1936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1959, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1960, %r1936, %r1959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1963, %r1955, %r1960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1966, %r875, %r1957, %r1947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1970, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1971, %r1947, %r1970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1974, %r1966, %r1971;
	// end inline asm
	// begin inline asm
	mov.b32 %r1982, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1993, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1981, %r16358, -2004318072;
	// begin inline asm
	lop3.b32 %r1979, %r864, %r1981, %r1982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1984, %r1982, %r1983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1987, %r1979, %r1984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1990, %r875, %r1981, %r1993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1994, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1995, %r1993, %r1994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1998, %r1990, %r1995;
	// end inline asm
	shr.u32 	%r2003, %r1981, 8;
	// begin inline asm
	lop3.b32 %r2001, %r864, %r2003, %r1982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2006, %r1982, %r2005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2009, %r2001, %r2006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2012, %r875, %r2003, %r1993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2016, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2017, %r1993, %r2016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2020, %r2012, %r2017;
	// end inline asm
	// begin inline asm
	mov.b32 %r2028, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2039, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2027, %r16359, -2004318072;
	// begin inline asm
	lop3.b32 %r2025, %r864, %r2027, %r2028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2030, %r2028, %r2029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2033, %r2025, %r2030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2036, %r875, %r2027, %r2039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2041, %r2039, %r2040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2044, %r2036, %r2041;
	// end inline asm
	shr.u32 	%r2049, %r2027, 8;
	// begin inline asm
	lop3.b32 %r2047, %r864, %r2049, %r2028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2052, %r2028, %r2051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2055, %r2047, %r2052;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2058, %r875, %r2049, %r2039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2063, %r2039, %r2062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2066, %r2058, %r2063;
	// end inline asm
	// begin inline asm
	mov.b32 %r2074, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2085, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2073, %r16368, -2004318072;
	// begin inline asm
	lop3.b32 %r2071, %r864, %r2073, %r2074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2075, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2076, %r2074, %r2075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2079, %r2071, %r2076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2082, %r875, %r2073, %r2085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2086, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2087, %r2085, %r2086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2090, %r2082, %r2087;
	// end inline asm
	shr.u32 	%r2095, %r2073, 8;
	// begin inline asm
	lop3.b32 %r2093, %r864, %r2095, %r2074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2098, %r2074, %r2097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2101, %r2093, %r2098;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2104, %r875, %r2095, %r2085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2109, %r2085, %r2108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2112, %r2104, %r2109;
	// end inline asm
	// begin inline asm
	mov.b32 %r2120, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2131, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2119, %r16369, -2004318072;
	// begin inline asm
	lop3.b32 %r2117, %r864, %r2119, %r2120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2122, %r2120, %r2121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2125, %r2117, %r2122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2128, %r875, %r2119, %r2131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2132, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2133, %r2131, %r2132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2136, %r2128, %r2133;
	// end inline asm
	shr.u32 	%r2141, %r2119, 8;
	// begin inline asm
	lop3.b32 %r2139, %r864, %r2141, %r2120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2144, %r2120, %r2143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2147, %r2139, %r2144;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2150, %r875, %r2141, %r2131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2154, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2155, %r2131, %r2154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2158, %r2150, %r2155;
	// end inline asm
	// begin inline asm
	mov.b32 %r2166, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2177, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2165, %r16370, -2004318072;
	// begin inline asm
	lop3.b32 %r2163, %r864, %r2165, %r2166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2168, %r2166, %r2167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2171, %r2163, %r2168;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2174, %r875, %r2165, %r2177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2178, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2179, %r2177, %r2178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2182, %r2174, %r2179;
	// end inline asm
	shr.u32 	%r2187, %r2165, 8;
	// begin inline asm
	lop3.b32 %r2185, %r864, %r2187, %r2166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2190, %r2166, %r2189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2193, %r2185, %r2190;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2196, %r875, %r2187, %r2177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2200, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2201, %r2177, %r2200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2204, %r2196, %r2201;
	// end inline asm
	// begin inline asm
	mov.b32 %r2212, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2223, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2211, %r16371, -2004318072;
	// begin inline asm
	lop3.b32 %r2209, %r864, %r2211, %r2212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2214, %r2212, %r2213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2217, %r2209, %r2214;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2220, %r875, %r2211, %r2223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2225, %r2223, %r2224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2228, %r2220, %r2225;
	// end inline asm
	shr.u32 	%r2233, %r2211, 8;
	// begin inline asm
	lop3.b32 %r2231, %r864, %r2233, %r2212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2236, %r2212, %r2235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2239, %r2231, %r2236;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2242, %r875, %r2233, %r2223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2246, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2247, %r2223, %r2246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2250, %r2242, %r2247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2253, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2255, %r2253, %r1895, %r1757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2259, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2261, %r2259, %r1906, %r1761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2265, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2267, %r2265, %r1917, %r1765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2271, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2273, %r2271, %r1928, %r1769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2277, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2279, %r2277, %r1941, %r1773;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2283, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2285, %r2283, %r1952, %r1777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2289, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2291, %r2289, %r1963, %r1781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2295, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2297, %r2295, %r1974, %r1785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2301, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2303, %r2301, %r1987, %r1789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2307, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2309, %r2307, %r1998, %r1793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2313, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2315, %r2313, %r2009, %r1797;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2319, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2321, %r2319, %r2020, %r1801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2325, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2327, %r2325, %r2033, %r1805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2331, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2333, %r2331, %r2044, %r1809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2337, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2339, %r2337, %r2055, %r1813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2343, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2345, %r2343, %r2066, %r1817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2349, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2351, %r2349, %r2079, %r1821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2355, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2357, %r2355, %r2090, %r1825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2361, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2363, %r2361, %r2101, %r1829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2367, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2369, %r2367, %r2112, %r1833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2373, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2375, %r2373, %r2125, %r1837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2379, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2381, %r2379, %r2136, %r1841;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2385, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2387, %r2385, %r2147, %r1845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2391, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2393, %r2391, %r2158, %r1849;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2397, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2399, %r2397, %r2171, %r1853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2403, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2405, %r2403, %r2182, %r1857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2409, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2411, %r2409, %r2193, %r1861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2415, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2417, %r2415, %r2204, %r1865;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2421, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2423, %r2421, %r2217, %r1869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2427, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2429, %r2427, %r2228, %r1873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2433, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2435, %r2433, %r2239, %r1877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2439, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2441, %r2439, %r2250, %r1881;
	// end inline asm
	// begin inline asm
	mov.b32 %r2450, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2461, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2449, %r16360, -2004318072;
	// begin inline asm
	lop3.b32 %r2447, %r864, %r2449, %r2450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2451, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2452, %r2450, %r2451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2455, %r2447, %r2452;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2458, %r875, %r2449, %r2461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2462, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2463, %r2461, %r2462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2466, %r2458, %r2463;
	// end inline asm
	shr.u32 	%r2471, %r2449, 8;
	// begin inline asm
	lop3.b32 %r2469, %r864, %r2471, %r2450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2473, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2474, %r2450, %r2473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2477, %r2469, %r2474;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2480, %r875, %r2471, %r2461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2484, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2485, %r2461, %r2484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2488, %r2480, %r2485;
	// end inline asm
	// begin inline asm
	mov.b32 %r2496, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2507, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2495, %r16361, -2004318072;
	// begin inline asm
	lop3.b32 %r2493, %r864, %r2495, %r2496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2497, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2498, %r2496, %r2497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2501, %r2493, %r2498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2504, %r875, %r2495, %r2507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2508, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2509, %r2507, %r2508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2512, %r2504, %r2509;
	// end inline asm
	shr.u32 	%r2517, %r2495, 8;
	// begin inline asm
	lop3.b32 %r2515, %r864, %r2517, %r2496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2519, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2520, %r2496, %r2519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2523, %r2515, %r2520;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2526, %r875, %r2517, %r2507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2530, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2531, %r2507, %r2530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2534, %r2526, %r2531;
	// end inline asm
	// begin inline asm
	mov.b32 %r2542, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2553, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2541, %r16362, -2004318072;
	// begin inline asm
	lop3.b32 %r2539, %r864, %r2541, %r2542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2543, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2544, %r2542, %r2543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2547, %r2539, %r2544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2550, %r875, %r2541, %r2553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2554, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2555, %r2553, %r2554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2558, %r2550, %r2555;
	// end inline asm
	shr.u32 	%r2563, %r2541, 8;
	// begin inline asm
	lop3.b32 %r2561, %r864, %r2563, %r2542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2565, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2566, %r2542, %r2565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2569, %r2561, %r2566;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2572, %r875, %r2563, %r2553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2576, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2577, %r2553, %r2576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2580, %r2572, %r2577;
	// end inline asm
	// begin inline asm
	mov.b32 %r2588, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2599, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2587, %r16363, -2004318072;
	// begin inline asm
	lop3.b32 %r2585, %r864, %r2587, %r2588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2589, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2590, %r2588, %r2589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2593, %r2585, %r2590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2596, %r875, %r2587, %r2599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2600, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2601, %r2599, %r2600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2604, %r2596, %r2601;
	// end inline asm
	shr.u32 	%r2609, %r2587, 8;
	// begin inline asm
	lop3.b32 %r2607, %r864, %r2609, %r2588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2611, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2612, %r2588, %r2611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2615, %r2607, %r2612;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2618, %r875, %r2609, %r2599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2622, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2623, %r2599, %r2622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2626, %r2618, %r2623;
	// end inline asm
	// begin inline asm
	mov.b32 %r2634, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2645, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2633, %r16372, -2004318072;
	// begin inline asm
	lop3.b32 %r2631, %r864, %r2633, %r2634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2635, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2636, %r2634, %r2635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2639, %r2631, %r2636;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2642, %r875, %r2633, %r2645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2646, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2647, %r2645, %r2646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2650, %r2642, %r2647;
	// end inline asm
	shr.u32 	%r2655, %r2633, 8;
	// begin inline asm
	lop3.b32 %r2653, %r864, %r2655, %r2634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2657, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2658, %r2634, %r2657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2661, %r2653, %r2658;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2664, %r875, %r2655, %r2645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2668, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2669, %r2645, %r2668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2672, %r2664, %r2669;
	// end inline asm
	// begin inline asm
	mov.b32 %r2680, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2691, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2679, %r16373, -2004318072;
	// begin inline asm
	lop3.b32 %r2677, %r864, %r2679, %r2680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2681, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2682, %r2680, %r2681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2685, %r2677, %r2682;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2688, %r875, %r2679, %r2691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2692, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2693, %r2691, %r2692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2696, %r2688, %r2693;
	// end inline asm
	shr.u32 	%r2701, %r2679, 8;
	// begin inline asm
	lop3.b32 %r2699, %r864, %r2701, %r2680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2703, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2704, %r2680, %r2703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2707, %r2699, %r2704;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2710, %r875, %r2701, %r2691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2714, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2715, %r2691, %r2714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2718, %r2710, %r2715;
	// end inline asm
	// begin inline asm
	mov.b32 %r2726, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2737, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2725, %r16374, -2004318072;
	// begin inline asm
	lop3.b32 %r2723, %r864, %r2725, %r2726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2727, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2728, %r2726, %r2727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2731, %r2723, %r2728;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2734, %r875, %r2725, %r2737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2738, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2739, %r2737, %r2738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2742, %r2734, %r2739;
	// end inline asm
	shr.u32 	%r2747, %r2725, 8;
	// begin inline asm
	lop3.b32 %r2745, %r864, %r2747, %r2726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2749, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2750, %r2726, %r2749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2753, %r2745, %r2750;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2756, %r875, %r2747, %r2737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2760, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2761, %r2737, %r2760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2764, %r2756, %r2761;
	// end inline asm
	// begin inline asm
	mov.b32 %r2772, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2783, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2771, %r16375, -2004318072;
	// begin inline asm
	lop3.b32 %r2769, %r864, %r2771, %r2772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2773, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2774, %r2772, %r2773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2777, %r2769, %r2774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2780, %r875, %r2771, %r2783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2784, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2785, %r2783, %r2784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2788, %r2780, %r2785;
	// end inline asm
	shr.u32 	%r2793, %r2771, 8;
	// begin inline asm
	lop3.b32 %r2791, %r864, %r2793, %r2772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2795, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2796, %r2772, %r2795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2799, %r2791, %r2796;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2802, %r875, %r2793, %r2783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2806, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2807, %r2783, %r2806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2810, %r2802, %r2807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2948, %r369, %r2455, %r2255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2945, %r369, %r2466, %r2261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2957, %r369, %r2477, %r2267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2954, %r369, %r2488, %r2273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2966, %r369, %r2501, %r2279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2963, %r369, %r2512, %r2285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2975, %r369, %r2523, %r2291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2972, %r369, %r2534, %r2297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2984, %r369, %r2547, %r2303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2981, %r369, %r2558, %r2309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2993, %r369, %r2569, %r2315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2990, %r369, %r2580, %r2321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3002, %r369, %r2593, %r2327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2999, %r369, %r2604, %r2333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3011, %r369, %r2615, %r2339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3008, %r369, %r2626, %r2345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3020, %r387, %r2639, %r2351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3017, %r387, %r2650, %r2357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r387, %r2661, %r2363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3026, %r387, %r2672, %r2369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r387, %r2685, %r2375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3035, %r387, %r2696, %r2381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3047, %r387, %r2707, %r2387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3044, %r387, %r2718, %r2393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3056, %r387, %r2731, %r2399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3053, %r387, %r2742, %r2405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3065, %r387, %r2753, %r2411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3062, %r387, %r2764, %r2417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r387, %r2777, %r2423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3071, %r387, %r2788, %r2429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3083, %r387, %r2799, %r2435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3080, %r387, %r2810, %r2441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2941, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2943, %r2941, %r2945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2946, %r426, %r2948, %r2943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2950, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2952, %r2950, %r2954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2955, %r426, %r2957, %r2952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2959, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2961, %r2959, %r2963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2964, %r426, %r2966, %r2961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2968, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2970, %r2968, %r2972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2973, %r426, %r2975, %r2970;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2977, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2979, %r2977, %r2981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2982, %r426, %r2984, %r2979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2986, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2988, %r2986, %r2990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2991, %r426, %r2993, %r2988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2995, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2997, %r2995, %r2999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3000, %r426, %r3002, %r2997;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3004, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3006, %r3004, %r3008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3009, %r426, %r3011, %r3006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3013, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3015, %r3013, %r3017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3018, %r429, %r3020, %r3015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3022, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3024, %r3022, %r3026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3027, %r429, %r3029, %r3024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3031, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3033, %r3031, %r3035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3036, %r429, %r3038, %r3033;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3040, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3042, %r3040, %r3044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3045, %r429, %r3047, %r3042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3049, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3051, %r3049, %r3053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3054, %r429, %r3056, %r3051;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3058, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3060, %r3058, %r3062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3063, %r429, %r3065, %r3060;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3067, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3069, %r3067, %r3071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3072, %r429, %r3074, %r3069;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3076, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3078, %r3076, %r3080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3081, %r429, %r3083, %r3078;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3085, %r432, %r2948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3088, %r426, %r2945, %r3085;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3092, %r432, %r2957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3095, %r426, %r2954, %r3092;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3099, %r432, %r2966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3102, %r426, %r2963, %r3099;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3106, %r432, %r2975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3109, %r426, %r2972, %r3106;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3113, %r432, %r2984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3116, %r426, %r2981, %r3113;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3120, %r432, %r2993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3123, %r426, %r2990, %r3120;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3127, %r432, %r3002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3130, %r426, %r2999, %r3127;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3134, %r432, %r3011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3137, %r426, %r3008, %r3134;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3141, %r435, %r3020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3144, %r429, %r3017, %r3141;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3148, %r435, %r3029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3151, %r429, %r3026, %r3148;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3155, %r435, %r3038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3158, %r429, %r3035, %r3155;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3162, %r435, %r3047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3165, %r429, %r3044, %r3162;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3169, %r435, %r3056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3172, %r429, %r3053, %r3169;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3176, %r435, %r3065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3179, %r429, %r3062, %r3176;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3183, %r435, %r3074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3186, %r429, %r3071, %r3183;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3190, %r435, %r3083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3193, %r429, %r3080, %r3190;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3364, %r3361}, {%r493, %r499, %r496, %r502}, {%r2946, %r3088}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3373, %r3370}, {%r493, %r499, %r496, %r502}, {%r2955, %r3095}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3382, %r3379}, {%r493, %r499, %r496, %r502}, {%r2964, %r3102}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3391, %r3388}, {%r493, %r499, %r496, %r502}, {%r2973, %r3109}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3400, %r3397}, {%r493, %r499, %r496, %r502}, {%r2982, %r3116}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3409, %r3406}, {%r493, %r499, %r496, %r502}, {%r2991, %r3123}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3418, %r3415}, {%r493, %r499, %r496, %r502}, {%r3000, %r3130}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3427, %r3424}, {%r493, %r499, %r496, %r502}, {%r3009, %r3137}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3436, %r3433}, {%r493, %r499, %r496, %r502}, {%r3018, %r3144}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3445, %r3442}, {%r493, %r499, %r496, %r502}, {%r3027, %r3151}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3454, %r3451}, {%r493, %r499, %r496, %r502}, {%r3036, %r3158}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3463, %r3460}, {%r493, %r499, %r496, %r502}, {%r3045, %r3165}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3472, %r3469}, {%r493, %r499, %r496, %r502}, {%r3054, %r3172}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3481, %r3478}, {%r493, %r499, %r496, %r502}, {%r3063, %r3179}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3490, %r3487}, {%r493, %r499, %r496, %r502}, {%r3072, %r3186}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3499, %r3496}, {%r493, %r499, %r496, %r502}, {%r3081, %r3193}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3357, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3359, %r3357, %r3361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3362, %r543, %r3364, %r3359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3366, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3368, %r3366, %r3370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3371, %r543, %r3373, %r3368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3375, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3377, %r3375, %r3379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3380, %r543, %r3382, %r3377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3384, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3386, %r3384, %r3388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3389, %r543, %r3391, %r3386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3393, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3395, %r3393, %r3397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3398, %r543, %r3400, %r3395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3402, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3404, %r3402, %r3406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3407, %r543, %r3409, %r3404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3411, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3413, %r3411, %r3415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3416, %r543, %r3418, %r3413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3420, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3422, %r3420, %r3424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3425, %r543, %r3427, %r3422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3429, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3431, %r3429, %r3433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3434, %r543, %r3436, %r3431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3438, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3440, %r3438, %r3442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3443, %r543, %r3445, %r3440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3447, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3449, %r3447, %r3451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3452, %r543, %r3454, %r3449;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3456, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3458, %r3456, %r3460;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3461, %r543, %r3463, %r3458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3465, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3467, %r3465, %r3469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3470, %r543, %r3472, %r3467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3474, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3476, %r3474, %r3478;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3479, %r543, %r3481, %r3476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3483, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3485, %r3483, %r3487;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3488, %r543, %r3490, %r3485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3492, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3494, %r3492, %r3496;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3497, %r543, %r3499, %r3494;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3501, %r546, %r3364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3504, %r543, %r3361, %r3501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3508, %r546, %r3373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3511, %r543, %r3370, %r3508;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3515, %r546, %r3382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3518, %r543, %r3379, %r3515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3522, %r546, %r3391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3525, %r543, %r3388, %r3522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3529, %r546, %r3400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3532, %r543, %r3397, %r3529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3536, %r546, %r3409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3539, %r543, %r3406, %r3536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3543, %r546, %r3418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3546, %r543, %r3415, %r3543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3550, %r546, %r3427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3553, %r543, %r3424, %r3550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3557, %r546, %r3436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3560, %r543, %r3433, %r3557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3564, %r546, %r3445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3567, %r543, %r3442, %r3564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3571, %r546, %r3454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3574, %r543, %r3451, %r3571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3578, %r546, %r3463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3581, %r543, %r3460, %r3578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3585, %r546, %r3472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3588, %r543, %r3469, %r3585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3592, %r546, %r3481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3595, %r543, %r3478, %r3592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3599, %r546, %r3490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3602, %r543, %r3487, %r3599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3606, %r546, %r3499;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3609, %r543, %r3496, %r3606;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3902, %r3905}, {%r581, %r587, %r584, %r590}, {%r3362, %r3504}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3908, %r3911}, {%r581, %r587, %r584, %r590}, {%r3371, %r3511}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3914, %r3917}, {%r581, %r587, %r584, %r590}, {%r3380, %r3518}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3920, %r3923}, {%r581, %r587, %r584, %r590}, {%r3389, %r3525}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3926, %r3929}, {%r581, %r587, %r584, %r590}, {%r3398, %r3532}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3932, %r3935}, {%r581, %r587, %r584, %r590}, {%r3407, %r3539}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3938, %r3941}, {%r581, %r587, %r584, %r590}, {%r3416, %r3546}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3944, %r3947}, {%r581, %r587, %r584, %r590}, {%r3425, %r3553}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3903, %r3906}, {%r581, %r587, %r584, %r590}, {%r3434, %r3560}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3909, %r3912}, {%r581, %r587, %r584, %r590}, {%r3443, %r3567}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3915, %r3918}, {%r581, %r587, %r584, %r590}, {%r3452, %r3574}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3921, %r3924}, {%r581, %r587, %r584, %r590}, {%r3461, %r3581}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3927, %r3930}, {%r581, %r587, %r584, %r590}, {%r3470, %r3588}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3933, %r3936}, {%r581, %r587, %r584, %r590}, {%r3479, %r3595}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3939, %r3942}, {%r581, %r587, %r584, %r590}, {%r3488, %r3602}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3945, %r3948}, {%r581, %r587, %r584, %r590}, {%r3497, %r3609}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3901, %r3902, %r3903;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3904, %r3905, %r3906;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3907, %r3908, %r3909;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3910, %r3911, %r3912;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3913, %r3914, %r3915;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3916, %r3917, %r3918;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3919, %r3920, %r3921;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3922, %r3923, %r3924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3925, %r3926, %r3927;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3928, %r3929, %r3930;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3931, %r3932, %r3933;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3934, %r3935, %r3936;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3937, %r3938, %r3939;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3940, %r3941, %r3942;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3943, %r3944, %r3945;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3946, %r3947, %r3948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3949, %r3902, %r3903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3952, %r3905, %r3906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3955, %r3908, %r3909;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3958, %r3911, %r3912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3961, %r3914, %r3915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3964, %r3917, %r3918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3967, %r3920, %r3921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3970, %r3923, %r3924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3973, %r3926, %r3927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3976, %r3929, %r3930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3979, %r3932, %r3933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3982, %r3935, %r3936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3985, %r3938, %r3939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3988, %r3941, %r3942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3991, %r3944, %r3945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3994, %r3947, %r3948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3997, %r182, %r3901;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4000, %r182, %r3904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4003, %r182, %r3907;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4006, %r182, %r3910;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4009, %r182, %r3913;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4012, %r182, %r3916;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4015, %r182, %r3919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4018, %r182, %r3922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4021, %r182, %r3925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4024, %r182, %r3928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4027, %r182, %r3931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4030, %r182, %r3934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4033, %r182, %r3937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4036, %r182, %r3940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4039, %r182, %r3943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4042, %r182, %r3946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4045, %r184, %r3949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4048, %r184, %r3952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4051, %r184, %r3955;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4054, %r184, %r3958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4057, %r184, %r3961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4060, %r184, %r3964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4063, %r184, %r3967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4066, %r184, %r3970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4069, %r184, %r3973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4072, %r184, %r3976;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4075, %r184, %r3979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4078, %r184, %r3982;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4081, %r184, %r3985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4084, %r184, %r3988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4087, %r184, %r3991;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4090, %r184, %r3994;
	// end inline asm
	// begin inline asm
	mov.b32 %r4093, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4094, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4095, %r3997, %r4093;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4098, %r4095, %r4094;
	// end inline asm
	// begin inline asm
	mov.b32 %r4101, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4102, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4103, %r4000, %r4101;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4106, %r4103, %r4102;
	// end inline asm
	// begin inline asm
	mov.b32 %r4109, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4110, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4111, %r4003, %r4109;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4114, %r4111, %r4110;
	// end inline asm
	// begin inline asm
	mov.b32 %r4117, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4118, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4119, %r4006, %r4117;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4122, %r4119, %r4118;
	// end inline asm
	// begin inline asm
	mov.b32 %r4125, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4126, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4127, %r4009, %r4125;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4130, %r4127, %r4126;
	// end inline asm
	// begin inline asm
	mov.b32 %r4133, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4134, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4135, %r4012, %r4133;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4138, %r4135, %r4134;
	// end inline asm
	// begin inline asm
	mov.b32 %r4141, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4142, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4143, %r4015, %r4141;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4146, %r4143, %r4142;
	// end inline asm
	// begin inline asm
	mov.b32 %r4149, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4150, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4151, %r4018, %r4149;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4154, %r4151, %r4150;
	// end inline asm
	// begin inline asm
	mov.b32 %r4157, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4158, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4159, %r4021, %r4157;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4162, %r4159, %r4158;
	// end inline asm
	// begin inline asm
	mov.b32 %r4165, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4166, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4167, %r4024, %r4165;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4170, %r4167, %r4166;
	// end inline asm
	// begin inline asm
	mov.b32 %r4173, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4174, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4175, %r4027, %r4173;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4178, %r4175, %r4174;
	// end inline asm
	// begin inline asm
	mov.b32 %r4181, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4182, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4183, %r4030, %r4181;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4186, %r4183, %r4182;
	// end inline asm
	// begin inline asm
	mov.b32 %r4189, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4190, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4191, %r4033, %r4189;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4194, %r4191, %r4190;
	// end inline asm
	// begin inline asm
	mov.b32 %r4197, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4198, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4199, %r4036, %r4197;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4202, %r4199, %r4198;
	// end inline asm
	// begin inline asm
	mov.b32 %r4205, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4206, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4207, %r4039, %r4205;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4210, %r4207, %r4206;
	// end inline asm
	// begin inline asm
	mov.b32 %r4213, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4214, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4215, %r4042, %r4213;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4218, %r4215, %r4214;
	// end inline asm
	// begin inline asm
	mov.b32 %r4221, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4222, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4223, %r4045, %r4221;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4226, %r4223, %r4222;
	// end inline asm
	// begin inline asm
	mov.b32 %r4229, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4230, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4231, %r4048, %r4229;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4234, %r4231, %r4230;
	// end inline asm
	// begin inline asm
	mov.b32 %r4237, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4238, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4239, %r4051, %r4237;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4242, %r4239, %r4238;
	// end inline asm
	// begin inline asm
	mov.b32 %r4245, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4246, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4247, %r4054, %r4245;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4250, %r4247, %r4246;
	// end inline asm
	// begin inline asm
	mov.b32 %r4253, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4254, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4255, %r4057, %r4253;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4258, %r4255, %r4254;
	// end inline asm
	// begin inline asm
	mov.b32 %r4261, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4262, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4263, %r4060, %r4261;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4266, %r4263, %r4262;
	// end inline asm
	// begin inline asm
	mov.b32 %r4269, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4270, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4271, %r4063, %r4269;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4274, %r4271, %r4270;
	// end inline asm
	// begin inline asm
	mov.b32 %r4277, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4278, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4279, %r4066, %r4277;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4282, %r4279, %r4278;
	// end inline asm
	// begin inline asm
	mov.b32 %r4285, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4286, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4287, %r4069, %r4285;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4290, %r4287, %r4286;
	// end inline asm
	// begin inline asm
	mov.b32 %r4293, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4294, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4295, %r4072, %r4293;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4298, %r4295, %r4294;
	// end inline asm
	// begin inline asm
	mov.b32 %r4301, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4302, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4303, %r4075, %r4301;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4306, %r4303, %r4302;
	// end inline asm
	// begin inline asm
	mov.b32 %r4309, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4310, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4311, %r4078, %r4309;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4314, %r4311, %r4310;
	// end inline asm
	// begin inline asm
	mov.b32 %r4317, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4318, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4319, %r4081, %r4317;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4322, %r4319, %r4318;
	// end inline asm
	// begin inline asm
	mov.b32 %r4325, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4326, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4327, %r4084, %r4325;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4330, %r4327, %r4326;
	// end inline asm
	// begin inline asm
	mov.b32 %r4333, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4334, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4335, %r4087, %r4333;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4338, %r4335, %r4334;
	// end inline asm
	// begin inline asm
	mov.b32 %r4341, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4342, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4343, %r4090, %r4341;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4346, %r4343, %r4342;
	// end inline asm
	// begin inline asm
	mov.b32 %r4352, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4350, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4351, %r4352, %r4350;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4354, %r4098, %r4351;
	// end inline asm
	// begin inline asm
	mov.b32 %r4357, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4358, %r4352, %r4357;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4361, %r4106, %r4358;
	// end inline asm
	// begin inline asm
	mov.b32 %r4364, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4365, %r4352, %r4364;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4368, %r4114, %r4365;
	// end inline asm
	// begin inline asm
	mov.b32 %r4371, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4372, %r4352, %r4371;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4375, %r4122, %r4372;
	// end inline asm
	mov.u32 	%r4381, 25152;
	// begin inline asm
	prmt.b32 %r4378, %r4354, %r4368, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4382, %r4361, %r4375, %r4381;
	// end inline asm
	shl.b32 	%r4389, %r4382, 4;
	mov.u32 	%r4387, 252645135;
	// begin inline asm
	lop3.b32 %r4386, %r4387, %r4378, %r4389, 202;
	// end inline asm
	xor.b32  	%r16206, %r4386, -2004318072;
	// begin inline asm
	mov.b32 %r4393, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4391, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4392, %r4393, %r4391;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4395, %r4130, %r4392;
	// end inline asm
	// begin inline asm
	mov.b32 %r4398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4399, %r4393, %r4398;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4402, %r4138, %r4399;
	// end inline asm
	// begin inline asm
	mov.b32 %r4405, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4406, %r4393, %r4405;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4409, %r4146, %r4406;
	// end inline asm
	// begin inline asm
	mov.b32 %r4412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4413, %r4393, %r4412;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4416, %r4154, %r4413;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4419, %r4395, %r4409, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4423, %r4402, %r4416, %r4381;
	// end inline asm
	shl.b32 	%r4430, %r4423, 4;
	// begin inline asm
	lop3.b32 %r4427, %r4387, %r4419, %r4430, 202;
	// end inline asm
	xor.b32  	%r16207, %r4427, -2004318072;
	// begin inline asm
	mov.b32 %r4434, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4432, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4433, %r4434, %r4432;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4436, %r4162, %r4433;
	// end inline asm
	// begin inline asm
	mov.b32 %r4439, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4440, %r4434, %r4439;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4443, %r4170, %r4440;
	// end inline asm
	// begin inline asm
	mov.b32 %r4446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4447, %r4434, %r4446;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4450, %r4178, %r4447;
	// end inline asm
	// begin inline asm
	mov.b32 %r4453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4454, %r4434, %r4453;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4457, %r4186, %r4454;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4460, %r4436, %r4450, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4464, %r4443, %r4457, %r4381;
	// end inline asm
	shl.b32 	%r4471, %r4464, 4;
	// begin inline asm
	lop3.b32 %r4468, %r4387, %r4460, %r4471, 202;
	// end inline asm
	xor.b32  	%r16208, %r4468, -2004318072;
	// begin inline asm
	mov.b32 %r4475, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4473, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4474, %r4475, %r4473;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4477, %r4194, %r4474;
	// end inline asm
	// begin inline asm
	mov.b32 %r4480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4481, %r4475, %r4480;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4484, %r4202, %r4481;
	// end inline asm
	// begin inline asm
	mov.b32 %r4487, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4488, %r4475, %r4487;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4491, %r4210, %r4488;
	// end inline asm
	// begin inline asm
	mov.b32 %r4494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4495, %r4475, %r4494;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4498, %r4218, %r4495;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4501, %r4477, %r4491, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4505, %r4484, %r4498, %r4381;
	// end inline asm
	shl.b32 	%r4512, %r4505, 4;
	// begin inline asm
	lop3.b32 %r4509, %r4387, %r4501, %r4512, 202;
	// end inline asm
	xor.b32  	%r16209, %r4509, -2004318072;
	// begin inline asm
	mov.b32 %r4516, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4515, %r4516, %r4514;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4518, %r4226, %r4515;
	// end inline asm
	// begin inline asm
	mov.b32 %r4521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4522, %r4516, %r4521;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4525, %r4234, %r4522;
	// end inline asm
	// begin inline asm
	mov.b32 %r4528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4529, %r4516, %r4528;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4532, %r4242, %r4529;
	// end inline asm
	// begin inline asm
	mov.b32 %r4535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4536, %r4516, %r4535;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4539, %r4250, %r4536;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4542, %r4518, %r4532, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4546, %r4525, %r4539, %r4381;
	// end inline asm
	shl.b32 	%r4553, %r4546, 4;
	// begin inline asm
	lop3.b32 %r4550, %r4387, %r4542, %r4553, 202;
	// end inline asm
	xor.b32  	%r16210, %r4550, -2004318072;
	// begin inline asm
	mov.b32 %r4557, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4555, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4556, %r4557, %r4555;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4559, %r4258, %r4556;
	// end inline asm
	// begin inline asm
	mov.b32 %r4562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4563, %r4557, %r4562;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4566, %r4266, %r4563;
	// end inline asm
	// begin inline asm
	mov.b32 %r4569, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4570, %r4557, %r4569;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4573, %r4274, %r4570;
	// end inline asm
	// begin inline asm
	mov.b32 %r4576, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4577, %r4557, %r4576;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4580, %r4282, %r4577;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4583, %r4559, %r4573, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4587, %r4566, %r4580, %r4381;
	// end inline asm
	shl.b32 	%r4594, %r4587, 4;
	// begin inline asm
	lop3.b32 %r4591, %r4387, %r4583, %r4594, 202;
	// end inline asm
	xor.b32  	%r16211, %r4591, -2004318072;
	// begin inline asm
	mov.b32 %r4598, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4596, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4597, %r4598, %r4596;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4600, %r4290, %r4597;
	// end inline asm
	// begin inline asm
	mov.b32 %r4603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4604, %r4598, %r4603;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4607, %r4298, %r4604;
	// end inline asm
	// begin inline asm
	mov.b32 %r4610, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4611, %r4598, %r4610;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4614, %r4306, %r4611;
	// end inline asm
	// begin inline asm
	mov.b32 %r4617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4618, %r4598, %r4617;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4621, %r4314, %r4618;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4624, %r4600, %r4614, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4628, %r4607, %r4621, %r4381;
	// end inline asm
	shl.b32 	%r4635, %r4628, 4;
	// begin inline asm
	lop3.b32 %r4632, %r4387, %r4624, %r4635, 202;
	// end inline asm
	xor.b32  	%r16212, %r4632, -2004318072;
	// begin inline asm
	mov.b32 %r4639, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4638, %r4639, %r4637;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4641, %r4322, %r4638;
	// end inline asm
	// begin inline asm
	mov.b32 %r4644, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4645, %r4639, %r4644;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4648, %r4330, %r4645;
	// end inline asm
	// begin inline asm
	mov.b32 %r4651, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4652, %r4639, %r4651;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4655, %r4338, %r4652;
	// end inline asm
	// begin inline asm
	mov.b32 %r4658, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4659, %r4639, %r4658;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4662, %r4346, %r4659;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4665, %r4641, %r4655, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4669, %r4648, %r4662, %r4381;
	// end inline asm
	shl.b32 	%r4676, %r4669, 4;
	// begin inline asm
	lop3.b32 %r4673, %r4387, %r4665, %r4676, 202;
	// end inline asm
	xor.b32  	%r16213, %r4673, -2004318072;
	setp.eq.s32 	%p305, %r16401, 0;
	selp.b32 	%r16214, 0, 4161, %p305;
	add.s32 	%r16215, %r82, %r16214;
	mul.wide.u32 	%rd96, %r16215, 4;
	add.s64 	%rd97, %rd37, %rd96;
	st.shared.u32 	[%rd97], %r16206;
	add.s32 	%r16216, %r83, %r16214;
	mul.wide.u32 	%rd98, %r16216, 4;
	add.s64 	%rd99, %rd37, %rd98;
	st.shared.u32 	[%rd99], %r16207;
	add.s32 	%r16217, %r84, %r16214;
	mul.wide.u32 	%rd100, %r16217, 4;
	add.s64 	%rd101, %rd37, %rd100;
	st.shared.u32 	[%rd101], %r16208;
	add.s32 	%r16218, %r85, %r16214;
	mul.wide.u32 	%rd102, %r16218, 4;
	add.s64 	%rd103, %rd37, %rd102;
	st.shared.u32 	[%rd103], %r16209;
	add.s32 	%r16219, %r86, %r16214;
	mul.wide.u32 	%rd104, %r16219, 4;
	add.s64 	%rd105, %rd37, %rd104;
	st.shared.u32 	[%rd105], %r16210;
	add.s32 	%r16220, %r87, %r16214;
	mul.wide.u32 	%rd106, %r16220, 4;
	add.s64 	%rd107, %rd37, %rd106;
	st.shared.u32 	[%rd107], %r16211;
	add.s32 	%r16221, %r88, %r16214;
	mul.wide.u32 	%rd108, %r16221, 4;
	add.s64 	%rd109, %rd37, %rd108;
	st.shared.u32 	[%rd109], %r16212;
	add.s32 	%r16222, %r89, %r16214;
	mul.wide.u32 	%rd110, %r16222, 4;
	add.s64 	%rd111, %rd37, %rd110;
	st.shared.u32 	[%rd111], %r16213;
	ld.shared.u32 	%r16352, [%rd81];
	ld.shared.u32 	%r16353, [%rd83];
	ld.shared.u32 	%r16354, [%rd85];
	ld.shared.u32 	%r16355, [%rd87];
	ld.shared.u32 	%r16364, [%rd89];
	ld.shared.u32 	%r16365, [%rd91];
	ld.shared.u32 	%r16366, [%rd93];
	ld.shared.u32 	%r16367, [%rd95];
	// begin inline asm
	mov.b32 %r4682, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4693, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4681, %r16352, -2004318072;
	// begin inline asm
	lop3.b32 %r4679, %r864, %r4681, %r4682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4683, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4684, %r4682, %r4683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4687, %r4679, %r4684;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4690, %r875, %r4681, %r4693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4694, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4695, %r4693, %r4694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4698, %r4690, %r4695;
	// end inline asm
	shr.u32 	%r4703, %r4681, 8;
	// begin inline asm
	lop3.b32 %r4701, %r864, %r4703, %r4682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4705, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4706, %r4682, %r4705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4709, %r4701, %r4706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4712, %r875, %r4703, %r4693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4716, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4717, %r4693, %r4716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4720, %r4712, %r4717;
	// end inline asm
	// begin inline asm
	mov.b32 %r4728, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4739, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4727, %r16353, -2004318072;
	// begin inline asm
	lop3.b32 %r4725, %r864, %r4727, %r4728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4729, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4730, %r4728, %r4729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4733, %r4725, %r4730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4736, %r875, %r4727, %r4739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4740, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4741, %r4739, %r4740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4744, %r4736, %r4741;
	// end inline asm
	shr.u32 	%r4749, %r4727, 8;
	// begin inline asm
	lop3.b32 %r4747, %r864, %r4749, %r4728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4751, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4752, %r4728, %r4751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4755, %r4747, %r4752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4758, %r875, %r4749, %r4739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4762, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4763, %r4739, %r4762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4766, %r4758, %r4763;
	// end inline asm
	// begin inline asm
	mov.b32 %r4774, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4785, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4773, %r16354, -2004318072;
	// begin inline asm
	lop3.b32 %r4771, %r864, %r4773, %r4774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4775, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4776, %r4774, %r4775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4779, %r4771, %r4776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4782, %r875, %r4773, %r4785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4786, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4787, %r4785, %r4786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4790, %r4782, %r4787;
	// end inline asm
	shr.u32 	%r4795, %r4773, 8;
	// begin inline asm
	lop3.b32 %r4793, %r864, %r4795, %r4774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4797, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4798, %r4774, %r4797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4801, %r4793, %r4798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4804, %r875, %r4795, %r4785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4808, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4809, %r4785, %r4808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4812, %r4804, %r4809;
	// end inline asm
	// begin inline asm
	mov.b32 %r4820, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4831, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4819, %r16355, -2004318072;
	// begin inline asm
	lop3.b32 %r4817, %r864, %r4819, %r4820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4821, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4822, %r4820, %r4821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4825, %r4817, %r4822;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4828, %r875, %r4819, %r4831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4832, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4833, %r4831, %r4832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4836, %r4828, %r4833;
	// end inline asm
	shr.u32 	%r4841, %r4819, 8;
	// begin inline asm
	lop3.b32 %r4839, %r864, %r4841, %r4820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4843, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4844, %r4820, %r4843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4847, %r4839, %r4844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4850, %r875, %r4841, %r4831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4854, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4855, %r4831, %r4854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4858, %r4850, %r4855;
	// end inline asm
	// begin inline asm
	mov.b32 %r4866, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4877, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4865, %r16364, -2004318072;
	// begin inline asm
	lop3.b32 %r4863, %r864, %r4865, %r4866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4867, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4868, %r4866, %r4867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4871, %r4863, %r4868;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4874, %r875, %r4865, %r4877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4878, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4879, %r4877, %r4878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4882, %r4874, %r4879;
	// end inline asm
	shr.u32 	%r4887, %r4865, 8;
	// begin inline asm
	lop3.b32 %r4885, %r864, %r4887, %r4866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4889, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4890, %r4866, %r4889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4893, %r4885, %r4890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4896, %r875, %r4887, %r4877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4900, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4901, %r4877, %r4900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4904, %r4896, %r4901;
	// end inline asm
	// begin inline asm
	mov.b32 %r4912, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4923, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4911, %r16365, -2004318072;
	// begin inline asm
	lop3.b32 %r4909, %r864, %r4911, %r4912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4913, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4914, %r4912, %r4913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4917, %r4909, %r4914;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4920, %r875, %r4911, %r4923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4925, %r4923, %r4924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4928, %r4920, %r4925;
	// end inline asm
	shr.u32 	%r4933, %r4911, 8;
	// begin inline asm
	lop3.b32 %r4931, %r864, %r4933, %r4912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4936, %r4912, %r4935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4939, %r4931, %r4936;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4942, %r875, %r4933, %r4923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4947, %r4923, %r4946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4950, %r4942, %r4947;
	// end inline asm
	// begin inline asm
	mov.b32 %r4958, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4969, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4957, %r16366, -2004318072;
	// begin inline asm
	lop3.b32 %r4955, %r864, %r4957, %r4958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4959, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4960, %r4958, %r4959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4963, %r4955, %r4960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4966, %r875, %r4957, %r4969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4970, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4971, %r4969, %r4970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4974, %r4966, %r4971;
	// end inline asm
	shr.u32 	%r4979, %r4957, 8;
	// begin inline asm
	lop3.b32 %r4977, %r864, %r4979, %r4958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4982, %r4958, %r4981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4985, %r4977, %r4982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4988, %r875, %r4979, %r4969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4993, %r4969, %r4992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4996, %r4988, %r4993;
	// end inline asm
	// begin inline asm
	mov.b32 %r5004, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5015, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r5003, %r16367, -2004318072;
	// begin inline asm
	lop3.b32 %r5001, %r864, %r5003, %r5004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5006, %r5004, %r5005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5009, %r5001, %r5006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5012, %r875, %r5003, %r5015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5016, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5017, %r5015, %r5016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5020, %r5012, %r5017;
	// end inline asm
	shr.u32 	%r5025, %r5003, 8;
	// begin inline asm
	lop3.b32 %r5023, %r864, %r5025, %r5004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5027, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5028, %r5004, %r5027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5031, %r5023, %r5028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5034, %r875, %r5025, %r5015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5039, %r5015, %r5038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5042, %r5034, %r5039;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5045, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5047, %r5045, %r4687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5050, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5052, %r5050, %r4698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5055, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5057, %r5055, %r4709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5060, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5062, %r5060, %r4720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5065, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5067, %r5065, %r4733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5070, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5072, %r5070, %r4744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5075, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5077, %r5075, %r4755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5080, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5082, %r5080, %r4766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5085, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5087, %r5085, %r4779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5090, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5092, %r5090, %r4790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5095, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5097, %r5095, %r4801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5100, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5102, %r5100, %r4812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5105, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5107, %r5105, %r4825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5110, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5112, %r5110, %r4836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5115, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5117, %r5115, %r4847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5120, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5122, %r5120, %r4858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5125, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5127, %r5125, %r4871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5130, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5132, %r5130, %r4882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5135, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5137, %r5135, %r4893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5140, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5142, %r5140, %r4904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5145, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5147, %r5145, %r4917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5150, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5152, %r5150, %r4928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5155, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5157, %r5155, %r4939;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5160, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5162, %r5160, %r4950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5165, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5167, %r5165, %r4963;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5170, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5172, %r5170, %r4974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5175, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5177, %r5175, %r4985;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5180, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5182, %r5180, %r4996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5185, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5187, %r5185, %r5009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5190, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5192, %r5190, %r5020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5195, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5197, %r5195, %r5031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5200, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5202, %r5200, %r5042;
	// end inline asm
	// begin inline asm
	mov.b32 %r5210, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5221, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5207, %r864, %r1889, %r5210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5211, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5212, %r5210, %r5211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5215, %r5207, %r5212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5218, %r875, %r1889, %r5221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5222, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5223, %r5221, %r5222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5226, %r5218, %r5223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5229, %r864, %r1911, %r5210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5233, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5234, %r5210, %r5233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5237, %r5229, %r5234;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5240, %r875, %r1911, %r5221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5245, %r5221, %r5244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5248, %r5240, %r5245;
	// end inline asm
	// begin inline asm
	mov.b32 %r5256, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5267, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5253, %r864, %r1935, %r5256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5257, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5258, %r5256, %r5257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5261, %r5253, %r5258;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5264, %r875, %r1935, %r5267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5268, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5269, %r5267, %r5268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5272, %r5264, %r5269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5275, %r864, %r1957, %r5256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5279, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5280, %r5256, %r5279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5283, %r5275, %r5280;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5286, %r875, %r1957, %r5267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5291, %r5267, %r5290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5294, %r5286, %r5291;
	// end inline asm
	// begin inline asm
	mov.b32 %r5302, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5313, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5299, %r864, %r1981, %r5302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5303, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5304, %r5302, %r5303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5307, %r5299, %r5304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5310, %r875, %r1981, %r5313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5314, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5315, %r5313, %r5314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5318, %r5310, %r5315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5321, %r864, %r2003, %r5302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5325, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5326, %r5302, %r5325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5329, %r5321, %r5326;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5332, %r875, %r2003, %r5313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5336, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5337, %r5313, %r5336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5340, %r5332, %r5337;
	// end inline asm
	// begin inline asm
	mov.b32 %r5348, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5359, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5345, %r864, %r2027, %r5348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5349, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5350, %r5348, %r5349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5353, %r5345, %r5350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5356, %r875, %r2027, %r5359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5360, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5361, %r5359, %r5360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5364, %r5356, %r5361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5367, %r864, %r2049, %r5348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5371, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5372, %r5348, %r5371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5375, %r5367, %r5372;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5378, %r875, %r2049, %r5359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5382, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5383, %r5359, %r5382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5386, %r5378, %r5383;
	// end inline asm
	// begin inline asm
	mov.b32 %r5394, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5405, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5391, %r864, %r2073, %r5394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5395, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5396, %r5394, %r5395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5399, %r5391, %r5396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5402, %r875, %r2073, %r5405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5406, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5407, %r5405, %r5406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5410, %r5402, %r5407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5413, %r864, %r2095, %r5394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5417, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5418, %r5394, %r5417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5421, %r5413, %r5418;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5424, %r875, %r2095, %r5405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5429, %r5405, %r5428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5432, %r5424, %r5429;
	// end inline asm
	// begin inline asm
	mov.b32 %r5440, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5451, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5437, %r864, %r2119, %r5440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5441, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5442, %r5440, %r5441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5445, %r5437, %r5442;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5448, %r875, %r2119, %r5451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5452, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5453, %r5451, %r5452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5456, %r5448, %r5453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5459, %r864, %r2141, %r5440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5463, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5464, %r5440, %r5463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5467, %r5459, %r5464;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5470, %r875, %r2141, %r5451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5475, %r5451, %r5474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5478, %r5470, %r5475;
	// end inline asm
	// begin inline asm
	mov.b32 %r5486, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5497, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5483, %r864, %r2165, %r5486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5487, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5488, %r5486, %r5487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5491, %r5483, %r5488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5494, %r875, %r2165, %r5497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5498, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5499, %r5497, %r5498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5502, %r5494, %r5499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5505, %r864, %r2187, %r5486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5509, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5510, %r5486, %r5509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5513, %r5505, %r5510;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5516, %r875, %r2187, %r5497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5521, %r5497, %r5520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5524, %r5516, %r5521;
	// end inline asm
	// begin inline asm
	mov.b32 %r5532, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5543, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5529, %r864, %r2211, %r5532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5533, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5534, %r5532, %r5533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5537, %r5529, %r5534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5540, %r875, %r2211, %r5543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5544, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5545, %r5543, %r5544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5548, %r5540, %r5545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5551, %r864, %r2233, %r5532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5555, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5556, %r5532, %r5555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5559, %r5551, %r5556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5562, %r875, %r2233, %r5543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5566, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5567, %r5543, %r5566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5570, %r5562, %r5567;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5573, %r297, %r5215, %r5047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5577, %r297, %r5226, %r5052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5581, %r297, %r5237, %r5057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5585, %r297, %r5248, %r5062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5589, %r297, %r5261, %r5067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5593, %r297, %r5272, %r5072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5597, %r297, %r5283, %r5077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5601, %r297, %r5294, %r5082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5605, %r297, %r5307, %r5087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5609, %r297, %r5318, %r5092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5613, %r297, %r5329, %r5097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5617, %r297, %r5340, %r5102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5621, %r297, %r5353, %r5107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5625, %r297, %r5364, %r5112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5629, %r297, %r5375, %r5117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5633, %r297, %r5386, %r5122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5637, %r315, %r5399, %r5127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5641, %r315, %r5410, %r5132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5645, %r315, %r5421, %r5137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5649, %r315, %r5432, %r5142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5653, %r315, %r5445, %r5147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5657, %r315, %r5456, %r5152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5661, %r315, %r5467, %r5157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5665, %r315, %r5478, %r5162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5669, %r315, %r5491, %r5167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5673, %r315, %r5502, %r5172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5677, %r315, %r5513, %r5177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5681, %r315, %r5524, %r5182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5685, %r315, %r5537, %r5187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5689, %r315, %r5548, %r5192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5693, %r315, %r5559, %r5197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5697, %r315, %r5570, %r5202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5706, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5717, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5703, %r864, %r2449, %r5706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5707, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5708, %r5706, %r5707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5711, %r5703, %r5708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5714, %r875, %r2449, %r5717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5718, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5719, %r5717, %r5718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5722, %r5714, %r5719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5725, %r864, %r2471, %r5706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5729, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5730, %r5706, %r5729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5733, %r5725, %r5730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5736, %r875, %r2471, %r5717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5740, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5741, %r5717, %r5740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5744, %r5736, %r5741;
	// end inline asm
	// begin inline asm
	mov.b32 %r5752, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5763, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5749, %r864, %r2495, %r5752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5753, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5754, %r5752, %r5753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5757, %r5749, %r5754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5760, %r875, %r2495, %r5763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5764, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5765, %r5763, %r5764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5768, %r5760, %r5765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5771, %r864, %r2517, %r5752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5775, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5776, %r5752, %r5775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5779, %r5771, %r5776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5782, %r875, %r2517, %r5763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5786, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5787, %r5763, %r5786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5790, %r5782, %r5787;
	// end inline asm
	// begin inline asm
	mov.b32 %r5798, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5809, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5795, %r864, %r2541, %r5798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5799, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5800, %r5798, %r5799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5803, %r5795, %r5800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5806, %r875, %r2541, %r5809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5810, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5811, %r5809, %r5810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5814, %r5806, %r5811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5817, %r864, %r2563, %r5798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5821, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5822, %r5798, %r5821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5825, %r5817, %r5822;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5828, %r875, %r2563, %r5809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5832, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5833, %r5809, %r5832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5836, %r5828, %r5833;
	// end inline asm
	// begin inline asm
	mov.b32 %r5844, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5855, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5841, %r864, %r2587, %r5844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5845, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5846, %r5844, %r5845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5849, %r5841, %r5846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5852, %r875, %r2587, %r5855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5856, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5857, %r5855, %r5856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5860, %r5852, %r5857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5863, %r864, %r2609, %r5844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5867, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5868, %r5844, %r5867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5871, %r5863, %r5868;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5874, %r875, %r2609, %r5855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5878, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5879, %r5855, %r5878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5882, %r5874, %r5879;
	// end inline asm
	// begin inline asm
	mov.b32 %r5890, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5901, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5887, %r864, %r2633, %r5890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5891, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5892, %r5890, %r5891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5895, %r5887, %r5892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5898, %r875, %r2633, %r5901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5902, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5903, %r5901, %r5902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5906, %r5898, %r5903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5909, %r864, %r2655, %r5890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5913, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5914, %r5890, %r5913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5917, %r5909, %r5914;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5920, %r875, %r2655, %r5901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5925, %r5901, %r5924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5928, %r5920, %r5925;
	// end inline asm
	// begin inline asm
	mov.b32 %r5936, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5947, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5933, %r864, %r2679, %r5936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5938, %r5936, %r5937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5941, %r5933, %r5938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5944, %r875, %r2679, %r5947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5948, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5949, %r5947, %r5948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5952, %r5944, %r5949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5955, %r864, %r2701, %r5936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5959, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5960, %r5936, %r5959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5963, %r5955, %r5960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5966, %r875, %r2701, %r5947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5970, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5971, %r5947, %r5970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5974, %r5966, %r5971;
	// end inline asm
	// begin inline asm
	mov.b32 %r5982, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5993, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5979, %r864, %r2725, %r5982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5984, %r5982, %r5983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5987, %r5979, %r5984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5990, %r875, %r2725, %r5993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5994, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5995, %r5993, %r5994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5998, %r5990, %r5995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6001, %r864, %r2747, %r5982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6006, %r5982, %r6005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6009, %r6001, %r6006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6012, %r875, %r2747, %r5993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6016, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6017, %r5993, %r6016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6020, %r6012, %r6017;
	// end inline asm
	// begin inline asm
	mov.b32 %r6028, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6039, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6025, %r864, %r2771, %r6028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6030, %r6028, %r6029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6033, %r6025, %r6030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6036, %r875, %r2771, %r6039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6041, %r6039, %r6040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6044, %r6036, %r6041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6047, %r864, %r2793, %r6028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6052, %r6028, %r6051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6055, %r6047, %r6052;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6058, %r875, %r2793, %r6039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6063, %r6039, %r6062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6066, %r6058, %r6063;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6069, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6071, %r6069, %r5711, %r5573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6075, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6077, %r6075, %r5722, %r5577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6081, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6083, %r6081, %r5733, %r5581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6087, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6089, %r6087, %r5744, %r5585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6093, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6095, %r6093, %r5757, %r5589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6099, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6101, %r6099, %r5768, %r5593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6105, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6107, %r6105, %r5779, %r5597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6111, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6113, %r6111, %r5790, %r5601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6117, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6119, %r6117, %r5803, %r5605;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6123, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6125, %r6123, %r5814, %r5609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6129, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6131, %r6129, %r5825, %r5613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6135, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6137, %r6135, %r5836, %r5617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6141, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6143, %r6141, %r5849, %r5621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6147, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6149, %r6147, %r5860, %r5625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6153, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6155, %r6153, %r5871, %r5629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6159, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6161, %r6159, %r5882, %r5633;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6165, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6167, %r6165, %r5895, %r5637;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6171, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6173, %r6171, %r5906, %r5641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6177, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6179, %r6177, %r5917, %r5645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6183, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6185, %r6183, %r5928, %r5649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6189, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6191, %r6189, %r5941, %r5653;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6195, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6197, %r6195, %r5952, %r5657;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6201, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6203, %r6201, %r5963, %r5661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6207, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6209, %r6207, %r5974, %r5665;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6213, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6215, %r6213, %r5987, %r5669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6219, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6221, %r6219, %r5998, %r5673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6225, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6227, %r6225, %r6009, %r5677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6231, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6233, %r6231, %r6020, %r5681;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6237, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6239, %r6237, %r6033, %r5685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6243, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6245, %r6243, %r6044, %r5689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6249, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6251, %r6249, %r6055, %r5693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6255, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6257, %r6255, %r6066, %r5697;
	// end inline asm
	// begin inline asm
	mov.b32 %r6266, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6277, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6263, %r864, %r865, %r6266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6267, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6268, %r6266, %r6267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6271, %r6263, %r6268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6274, %r875, %r865, %r6277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6278, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6279, %r6277, %r6278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6282, %r6274, %r6279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6285, %r864, %r887, %r6266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6289, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6290, %r6266, %r6289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6293, %r6285, %r6290;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6296, %r875, %r887, %r6277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6300, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6301, %r6277, %r6300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6304, %r6296, %r6301;
	// end inline asm
	// begin inline asm
	mov.b32 %r6312, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6323, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6309, %r864, %r911, %r6312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6313, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6314, %r6312, %r6313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6317, %r6309, %r6314;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6320, %r875, %r911, %r6323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6324, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6325, %r6323, %r6324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6328, %r6320, %r6325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6331, %r864, %r933, %r6312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6335, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6336, %r6312, %r6335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6339, %r6331, %r6336;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6342, %r875, %r933, %r6323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6347, %r6323, %r6346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6350, %r6342, %r6347;
	// end inline asm
	// begin inline asm
	mov.b32 %r6358, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6369, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6355, %r864, %r957, %r6358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6359, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6360, %r6358, %r6359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6363, %r6355, %r6360;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6366, %r875, %r957, %r6369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6370, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6371, %r6369, %r6370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6374, %r6366, %r6371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6377, %r864, %r979, %r6358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6381, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6382, %r6358, %r6381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6385, %r6377, %r6382;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6388, %r875, %r979, %r6369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6392, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6393, %r6369, %r6392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6396, %r6388, %r6393;
	// end inline asm
	// begin inline asm
	mov.b32 %r6404, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6415, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6401, %r864, %r1003, %r6404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6405, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6406, %r6404, %r6405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6409, %r6401, %r6406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6412, %r875, %r1003, %r6415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6416, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6417, %r6415, %r6416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6420, %r6412, %r6417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6423, %r864, %r1025, %r6404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6427, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6428, %r6404, %r6427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6431, %r6423, %r6428;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6434, %r875, %r1025, %r6415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6438, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6439, %r6415, %r6438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6442, %r6434, %r6439;
	// end inline asm
	// begin inline asm
	mov.b32 %r6450, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6461, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6447, %r864, %r1049, %r6450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6451, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6452, %r6450, %r6451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6455, %r6447, %r6452;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6458, %r875, %r1049, %r6461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6462, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6463, %r6461, %r6462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6466, %r6458, %r6463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6469, %r864, %r1071, %r6450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6473, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6474, %r6450, %r6473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6477, %r6469, %r6474;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6480, %r875, %r1071, %r6461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6484, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6485, %r6461, %r6484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6488, %r6480, %r6485;
	// end inline asm
	// begin inline asm
	mov.b32 %r6496, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6507, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6493, %r864, %r1095, %r6496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6497, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6498, %r6496, %r6497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6501, %r6493, %r6498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6504, %r875, %r1095, %r6507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6508, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6509, %r6507, %r6508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6512, %r6504, %r6509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6515, %r864, %r1117, %r6496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6519, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6520, %r6496, %r6519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6523, %r6515, %r6520;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6526, %r875, %r1117, %r6507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6530, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6531, %r6507, %r6530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6534, %r6526, %r6531;
	// end inline asm
	// begin inline asm
	mov.b32 %r6542, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6553, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6539, %r864, %r1141, %r6542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6543, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6544, %r6542, %r6543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6547, %r6539, %r6544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6550, %r875, %r1141, %r6553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6554, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6555, %r6553, %r6554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6558, %r6550, %r6555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6561, %r864, %r1163, %r6542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6565, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6566, %r6542, %r6565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6569, %r6561, %r6566;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6572, %r875, %r1163, %r6553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6576, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6577, %r6553, %r6576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6580, %r6572, %r6577;
	// end inline asm
	// begin inline asm
	mov.b32 %r6588, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6599, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6585, %r864, %r1187, %r6588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6589, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6590, %r6588, %r6589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6593, %r6585, %r6590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6596, %r875, %r1187, %r6599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6600, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6601, %r6599, %r6600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6604, %r6596, %r6601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6607, %r864, %r1209, %r6588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6611, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6612, %r6588, %r6611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6615, %r6607, %r6612;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6618, %r875, %r1209, %r6599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6622, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6623, %r6599, %r6622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6626, %r6618, %r6623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6764, %r369, %r6271, %r6071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6761, %r369, %r6282, %r6077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6773, %r369, %r6293, %r6083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6770, %r369, %r6304, %r6089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6782, %r369, %r6317, %r6095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6779, %r369, %r6328, %r6101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6791, %r369, %r6339, %r6107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6788, %r369, %r6350, %r6113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6800, %r369, %r6363, %r6119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6797, %r369, %r6374, %r6125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6809, %r369, %r6385, %r6131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6806, %r369, %r6396, %r6137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6818, %r369, %r6409, %r6143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6815, %r369, %r6420, %r6149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r369, %r6431, %r6155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6824, %r369, %r6442, %r6161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6836, %r387, %r6455, %r6167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6833, %r387, %r6466, %r6173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r387, %r6477, %r6179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6842, %r387, %r6488, %r6185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6854, %r387, %r6501, %r6191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6851, %r387, %r6512, %r6197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6863, %r387, %r6523, %r6203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6860, %r387, %r6534, %r6209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6872, %r387, %r6547, %r6215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6869, %r387, %r6558, %r6221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6881, %r387, %r6569, %r6227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6878, %r387, %r6580, %r6233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6890, %r387, %r6593, %r6239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6887, %r387, %r6604, %r6245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6899, %r387, %r6615, %r6251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6896, %r387, %r6626, %r6257;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6757, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6759, %r6757, %r6761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6762, %r426, %r6764, %r6759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6766, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6768, %r6766, %r6770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6771, %r426, %r6773, %r6768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6775, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6777, %r6775, %r6779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6780, %r426, %r6782, %r6777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6784, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6786, %r6784, %r6788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6789, %r426, %r6791, %r6786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6793, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6795, %r6793, %r6797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6798, %r426, %r6800, %r6795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6802, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6804, %r6802, %r6806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6807, %r426, %r6809, %r6804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6811, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6813, %r6811, %r6815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6816, %r426, %r6818, %r6813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6820, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6822, %r6820, %r6824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6825, %r426, %r6827, %r6822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6829, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6831, %r6829, %r6833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6834, %r429, %r6836, %r6831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6838, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6840, %r6838, %r6842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6843, %r429, %r6845, %r6840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6847, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6849, %r6847, %r6851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6852, %r429, %r6854, %r6849;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6856, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6858, %r6856, %r6860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6861, %r429, %r6863, %r6858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6865, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6867, %r6865, %r6869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6870, %r429, %r6872, %r6867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6874, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6876, %r6874, %r6878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6879, %r429, %r6881, %r6876;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6883, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6885, %r6883, %r6887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6888, %r429, %r6890, %r6885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6892, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6894, %r6892, %r6896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6897, %r429, %r6899, %r6894;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6901, %r432, %r6764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6904, %r426, %r6761, %r6901;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6908, %r432, %r6773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6911, %r426, %r6770, %r6908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6915, %r432, %r6782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6918, %r426, %r6779, %r6915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6922, %r432, %r6791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6925, %r426, %r6788, %r6922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6929, %r432, %r6800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6932, %r426, %r6797, %r6929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6936, %r432, %r6809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6939, %r426, %r6806, %r6936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6943, %r432, %r6818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6946, %r426, %r6815, %r6943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6950, %r432, %r6827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6953, %r426, %r6824, %r6950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6957, %r435, %r6836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6960, %r429, %r6833, %r6957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6964, %r435, %r6845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6967, %r429, %r6842, %r6964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6971, %r435, %r6854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6974, %r429, %r6851, %r6971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6978, %r435, %r6863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6981, %r429, %r6860, %r6978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6985, %r435, %r6872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6988, %r429, %r6869, %r6985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6992, %r435, %r6881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6995, %r429, %r6878, %r6992;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6999, %r435, %r6890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7002, %r429, %r6887, %r6999;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7006, %r435, %r6899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7009, %r429, %r6896, %r7006;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7180, %r7177}, {%r493, %r499, %r496, %r502}, {%r6762, %r6904}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7189, %r7186}, {%r493, %r499, %r496, %r502}, {%r6771, %r6911}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7198, %r7195}, {%r493, %r499, %r496, %r502}, {%r6780, %r6918}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7207, %r7204}, {%r493, %r499, %r496, %r502}, {%r6789, %r6925}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7216, %r7213}, {%r493, %r499, %r496, %r502}, {%r6798, %r6932}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7225, %r7222}, {%r493, %r499, %r496, %r502}, {%r6807, %r6939}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7234, %r7231}, {%r493, %r499, %r496, %r502}, {%r6816, %r6946}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7243, %r7240}, {%r493, %r499, %r496, %r502}, {%r6825, %r6953}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7252, %r7249}, {%r493, %r499, %r496, %r502}, {%r6834, %r6960}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7261, %r7258}, {%r493, %r499, %r496, %r502}, {%r6843, %r6967}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7270, %r7267}, {%r493, %r499, %r496, %r502}, {%r6852, %r6974}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7279, %r7276}, {%r493, %r499, %r496, %r502}, {%r6861, %r6981}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7288, %r7285}, {%r493, %r499, %r496, %r502}, {%r6870, %r6988}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7297, %r7294}, {%r493, %r499, %r496, %r502}, {%r6879, %r6995}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7306, %r7303}, {%r493, %r499, %r496, %r502}, {%r6888, %r7002}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7315, %r7312}, {%r493, %r499, %r496, %r502}, {%r6897, %r7009}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7173, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7175, %r7173, %r7177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7178, %r543, %r7180, %r7175;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7182, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7184, %r7182, %r7186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7187, %r543, %r7189, %r7184;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7191, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7193, %r7191, %r7195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7196, %r543, %r7198, %r7193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7200, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7202, %r7200, %r7204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7205, %r543, %r7207, %r7202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7209, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7211, %r7209, %r7213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7214, %r543, %r7216, %r7211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7218, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7220, %r7218, %r7222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7223, %r543, %r7225, %r7220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7227, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7229, %r7227, %r7231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7232, %r543, %r7234, %r7229;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7236, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7238, %r7236, %r7240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7241, %r543, %r7243, %r7238;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7245, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7247, %r7245, %r7249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7250, %r543, %r7252, %r7247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7254, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7256, %r7254, %r7258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7259, %r543, %r7261, %r7256;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7263, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7265, %r7263, %r7267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7268, %r543, %r7270, %r7265;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7272, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7274, %r7272, %r7276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7277, %r543, %r7279, %r7274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7281, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7283, %r7281, %r7285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7286, %r543, %r7288, %r7283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7290, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7292, %r7290, %r7294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7295, %r543, %r7297, %r7292;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7299, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7301, %r7299, %r7303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7304, %r543, %r7306, %r7301;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7308, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7310, %r7308, %r7312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7313, %r543, %r7315, %r7310;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7317, %r546, %r7180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7320, %r543, %r7177, %r7317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7324, %r546, %r7189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7327, %r543, %r7186, %r7324;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7331, %r546, %r7198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7334, %r543, %r7195, %r7331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7338, %r546, %r7207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7341, %r543, %r7204, %r7338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7345, %r546, %r7216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7348, %r543, %r7213, %r7345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7352, %r546, %r7225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7355, %r543, %r7222, %r7352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7359, %r546, %r7234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7362, %r543, %r7231, %r7359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7366, %r546, %r7243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7369, %r543, %r7240, %r7366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7373, %r546, %r7252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7376, %r543, %r7249, %r7373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7380, %r546, %r7261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7383, %r543, %r7258, %r7380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7387, %r546, %r7270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7390, %r543, %r7267, %r7387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7394, %r546, %r7279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7397, %r543, %r7276, %r7394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7401, %r546, %r7288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7404, %r543, %r7285, %r7401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7408, %r546, %r7297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7411, %r543, %r7294, %r7408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7415, %r546, %r7306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7418, %r543, %r7303, %r7415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7422, %r546, %r7315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7425, %r543, %r7312, %r7422;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7718, %r7721}, {%r581, %r587, %r584, %r590}, {%r7178, %r7320}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7724, %r7727}, {%r581, %r587, %r584, %r590}, {%r7187, %r7327}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7730, %r7733}, {%r581, %r587, %r584, %r590}, {%r7196, %r7334}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7736, %r7739}, {%r581, %r587, %r584, %r590}, {%r7205, %r7341}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7742, %r7745}, {%r581, %r587, %r584, %r590}, {%r7214, %r7348}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7748, %r7751}, {%r581, %r587, %r584, %r590}, {%r7223, %r7355}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7754, %r7757}, {%r581, %r587, %r584, %r590}, {%r7232, %r7362}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7760, %r7763}, {%r581, %r587, %r584, %r590}, {%r7241, %r7369}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7719, %r7722}, {%r581, %r587, %r584, %r590}, {%r7250, %r7376}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7725, %r7728}, {%r581, %r587, %r584, %r590}, {%r7259, %r7383}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7731, %r7734}, {%r581, %r587, %r584, %r590}, {%r7268, %r7390}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7737, %r7740}, {%r581, %r587, %r584, %r590}, {%r7277, %r7397}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7743, %r7746}, {%r581, %r587, %r584, %r590}, {%r7286, %r7404}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7749, %r7752}, {%r581, %r587, %r584, %r590}, {%r7295, %r7411}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7755, %r7758}, {%r581, %r587, %r584, %r590}, {%r7304, %r7418}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7761, %r7764}, {%r581, %r587, %r584, %r590}, {%r7313, %r7425}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7717, %r7718, %r7719;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7720, %r7721, %r7722;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7723, %r7724, %r7725;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7726, %r7727, %r7728;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7729, %r7730, %r7731;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7732, %r7733, %r7734;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7735, %r7736, %r7737;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7738, %r7739, %r7740;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7741, %r7742, %r7743;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7744, %r7745, %r7746;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7747, %r7748, %r7749;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7750, %r7751, %r7752;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7753, %r7754, %r7755;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7756, %r7757, %r7758;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7759, %r7760, %r7761;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7762, %r7763, %r7764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7765, %r7718, %r7719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7768, %r7721, %r7722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7771, %r7724, %r7725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7774, %r7727, %r7728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7777, %r7730, %r7731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7780, %r7733, %r7734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7783, %r7736, %r7737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7786, %r7739, %r7740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7789, %r7742, %r7743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7792, %r7745, %r7746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7795, %r7748, %r7749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7798, %r7751, %r7752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7801, %r7754, %r7755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7804, %r7757, %r7758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7807, %r7760, %r7761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7810, %r7763, %r7764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7813, %r182, %r7717;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7816, %r182, %r7720;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7819, %r182, %r7723;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7822, %r182, %r7726;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7825, %r182, %r7729;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7828, %r182, %r7732;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7831, %r182, %r7735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7834, %r182, %r7738;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7837, %r182, %r7741;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7840, %r182, %r7744;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7843, %r182, %r7747;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7846, %r182, %r7750;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7849, %r182, %r7753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7852, %r182, %r7756;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7855, %r182, %r7759;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7858, %r182, %r7762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7861, %r184, %r7765;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7864, %r184, %r7768;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7867, %r184, %r7771;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7870, %r184, %r7774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7873, %r184, %r7777;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7876, %r184, %r7780;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7879, %r184, %r7783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7882, %r184, %r7786;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7885, %r184, %r7789;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7888, %r184, %r7792;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7891, %r184, %r7795;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7894, %r184, %r7798;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7897, %r184, %r7801;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7900, %r184, %r7804;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7903, %r184, %r7807;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7906, %r184, %r7810;
	// end inline asm
	// begin inline asm
	mov.b32 %r7909, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7910, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7911, %r7813, %r7909;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7914, %r7911, %r7910;
	// end inline asm
	// begin inline asm
	mov.b32 %r7917, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7918, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7919, %r7816, %r7917;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7922, %r7919, %r7918;
	// end inline asm
	// begin inline asm
	mov.b32 %r7925, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7926, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7927, %r7819, %r7925;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7930, %r7927, %r7926;
	// end inline asm
	// begin inline asm
	mov.b32 %r7933, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7934, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7935, %r7822, %r7933;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7938, %r7935, %r7934;
	// end inline asm
	// begin inline asm
	mov.b32 %r7941, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7942, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7943, %r7825, %r7941;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7946, %r7943, %r7942;
	// end inline asm
	// begin inline asm
	mov.b32 %r7949, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7950, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7951, %r7828, %r7949;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7954, %r7951, %r7950;
	// end inline asm
	// begin inline asm
	mov.b32 %r7957, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7958, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7959, %r7831, %r7957;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7962, %r7959, %r7958;
	// end inline asm
	// begin inline asm
	mov.b32 %r7965, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7966, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7967, %r7834, %r7965;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7970, %r7967, %r7966;
	// end inline asm
	// begin inline asm
	mov.b32 %r7973, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7974, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7975, %r7837, %r7973;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7978, %r7975, %r7974;
	// end inline asm
	// begin inline asm
	mov.b32 %r7981, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7982, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7983, %r7840, %r7981;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7986, %r7983, %r7982;
	// end inline asm
	// begin inline asm
	mov.b32 %r7989, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7990, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7991, %r7843, %r7989;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7994, %r7991, %r7990;
	// end inline asm
	// begin inline asm
	mov.b32 %r7997, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7998, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7999, %r7846, %r7997;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8002, %r7999, %r7998;
	// end inline asm
	// begin inline asm
	mov.b32 %r8005, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8006, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8007, %r7849, %r8005;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8010, %r8007, %r8006;
	// end inline asm
	// begin inline asm
	mov.b32 %r8013, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8014, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8015, %r7852, %r8013;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8018, %r8015, %r8014;
	// end inline asm
	// begin inline asm
	mov.b32 %r8021, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8022, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8023, %r7855, %r8021;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8026, %r8023, %r8022;
	// end inline asm
	// begin inline asm
	mov.b32 %r8029, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8030, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8031, %r7858, %r8029;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8034, %r8031, %r8030;
	// end inline asm
	// begin inline asm
	mov.b32 %r8037, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8038, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8039, %r7861, %r8037;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8042, %r8039, %r8038;
	// end inline asm
	// begin inline asm
	mov.b32 %r8045, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8046, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8047, %r7864, %r8045;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8050, %r8047, %r8046;
	// end inline asm
	// begin inline asm
	mov.b32 %r8053, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8054, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8055, %r7867, %r8053;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8058, %r8055, %r8054;
	// end inline asm
	// begin inline asm
	mov.b32 %r8061, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8062, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8063, %r7870, %r8061;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8066, %r8063, %r8062;
	// end inline asm
	// begin inline asm
	mov.b32 %r8069, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8070, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8071, %r7873, %r8069;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8074, %r8071, %r8070;
	// end inline asm
	// begin inline asm
	mov.b32 %r8077, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8078, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8079, %r7876, %r8077;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8082, %r8079, %r8078;
	// end inline asm
	// begin inline asm
	mov.b32 %r8085, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8086, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8087, %r7879, %r8085;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8090, %r8087, %r8086;
	// end inline asm
	// begin inline asm
	mov.b32 %r8093, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8094, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8095, %r7882, %r8093;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8098, %r8095, %r8094;
	// end inline asm
	// begin inline asm
	mov.b32 %r8101, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8102, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8103, %r7885, %r8101;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8106, %r8103, %r8102;
	// end inline asm
	// begin inline asm
	mov.b32 %r8109, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8110, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8111, %r7888, %r8109;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8114, %r8111, %r8110;
	// end inline asm
	// begin inline asm
	mov.b32 %r8117, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8118, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8119, %r7891, %r8117;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8122, %r8119, %r8118;
	// end inline asm
	// begin inline asm
	mov.b32 %r8125, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8126, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8127, %r7894, %r8125;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8130, %r8127, %r8126;
	// end inline asm
	// begin inline asm
	mov.b32 %r8133, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8134, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8135, %r7897, %r8133;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8138, %r8135, %r8134;
	// end inline asm
	// begin inline asm
	mov.b32 %r8141, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8142, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8143, %r7900, %r8141;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8146, %r8143, %r8142;
	// end inline asm
	// begin inline asm
	mov.b32 %r8149, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8150, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8151, %r7903, %r8149;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8154, %r8151, %r8150;
	// end inline asm
	// begin inline asm
	mov.b32 %r8157, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8158, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8159, %r7906, %r8157;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8162, %r8159, %r8158;
	// end inline asm
	// begin inline asm
	mov.b32 %r8168, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8166, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8167, %r8168, %r8166;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8170, %r7914, %r8167;
	// end inline asm
	// begin inline asm
	mov.b32 %r8173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8174, %r8168, %r8173;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8177, %r7922, %r8174;
	// end inline asm
	// begin inline asm
	mov.b32 %r8180, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8181, %r8168, %r8180;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8184, %r7930, %r8181;
	// end inline asm
	// begin inline asm
	mov.b32 %r8187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8188, %r8168, %r8187;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8191, %r7938, %r8188;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8194, %r8170, %r8184, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8198, %r8177, %r8191, %r4381;
	// end inline asm
	shl.b32 	%r8205, %r8198, 4;
	// begin inline asm
	lop3.b32 %r8202, %r4387, %r8194, %r8205, 202;
	// end inline asm
	xor.b32  	%r16223, %r8202, -2004318072;
	// begin inline asm
	mov.b32 %r8209, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8207, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8208, %r8209, %r8207;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8211, %r7946, %r8208;
	// end inline asm
	// begin inline asm
	mov.b32 %r8214, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8215, %r8209, %r8214;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8218, %r7954, %r8215;
	// end inline asm
	// begin inline asm
	mov.b32 %r8221, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8222, %r8209, %r8221;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8225, %r7962, %r8222;
	// end inline asm
	// begin inline asm
	mov.b32 %r8228, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8229, %r8209, %r8228;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8232, %r7970, %r8229;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8235, %r8211, %r8225, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8239, %r8218, %r8232, %r4381;
	// end inline asm
	shl.b32 	%r8246, %r8239, 4;
	// begin inline asm
	lop3.b32 %r8243, %r4387, %r8235, %r8246, 202;
	// end inline asm
	xor.b32  	%r16224, %r8243, -2004318072;
	// begin inline asm
	mov.b32 %r8250, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8248, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8249, %r8250, %r8248;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8252, %r7978, %r8249;
	// end inline asm
	// begin inline asm
	mov.b32 %r8255, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8256, %r8250, %r8255;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8259, %r7986, %r8256;
	// end inline asm
	// begin inline asm
	mov.b32 %r8262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8263, %r8250, %r8262;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8266, %r7994, %r8263;
	// end inline asm
	// begin inline asm
	mov.b32 %r8269, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8270, %r8250, %r8269;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8273, %r8002, %r8270;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8276, %r8252, %r8266, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8280, %r8259, %r8273, %r4381;
	// end inline asm
	shl.b32 	%r8287, %r8280, 4;
	// begin inline asm
	lop3.b32 %r8284, %r4387, %r8276, %r8287, 202;
	// end inline asm
	xor.b32  	%r16225, %r8284, -2004318072;
	// begin inline asm
	mov.b32 %r8291, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8289, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8290, %r8291, %r8289;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8293, %r8010, %r8290;
	// end inline asm
	// begin inline asm
	mov.b32 %r8296, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8297, %r8291, %r8296;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8300, %r8018, %r8297;
	// end inline asm
	// begin inline asm
	mov.b32 %r8303, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8304, %r8291, %r8303;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8307, %r8026, %r8304;
	// end inline asm
	// begin inline asm
	mov.b32 %r8310, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8311, %r8291, %r8310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8314, %r8034, %r8311;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8317, %r8293, %r8307, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8321, %r8300, %r8314, %r4381;
	// end inline asm
	shl.b32 	%r8328, %r8321, 4;
	// begin inline asm
	lop3.b32 %r8325, %r4387, %r8317, %r8328, 202;
	// end inline asm
	xor.b32  	%r16226, %r8325, -2004318072;
	// begin inline asm
	mov.b32 %r8332, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8331, %r8332, %r8330;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8334, %r8042, %r8331;
	// end inline asm
	// begin inline asm
	mov.b32 %r8337, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8338, %r8332, %r8337;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8341, %r8050, %r8338;
	// end inline asm
	// begin inline asm
	mov.b32 %r8344, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8345, %r8332, %r8344;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8348, %r8058, %r8345;
	// end inline asm
	// begin inline asm
	mov.b32 %r8351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8352, %r8332, %r8351;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8355, %r8066, %r8352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8358, %r8334, %r8348, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8362, %r8341, %r8355, %r4381;
	// end inline asm
	shl.b32 	%r8369, %r8362, 4;
	// begin inline asm
	lop3.b32 %r8366, %r4387, %r8358, %r8369, 202;
	// end inline asm
	xor.b32  	%r16227, %r8366, -2004318072;
	// begin inline asm
	mov.b32 %r8373, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8371, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8372, %r8373, %r8371;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8375, %r8074, %r8372;
	// end inline asm
	// begin inline asm
	mov.b32 %r8378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8379, %r8373, %r8378;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8382, %r8082, %r8379;
	// end inline asm
	// begin inline asm
	mov.b32 %r8385, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8386, %r8373, %r8385;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8389, %r8090, %r8386;
	// end inline asm
	// begin inline asm
	mov.b32 %r8392, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8393, %r8373, %r8392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8396, %r8098, %r8393;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8399, %r8375, %r8389, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8403, %r8382, %r8396, %r4381;
	// end inline asm
	shl.b32 	%r8410, %r8403, 4;
	// begin inline asm
	lop3.b32 %r8407, %r4387, %r8399, %r8410, 202;
	// end inline asm
	xor.b32  	%r16228, %r8407, -2004318072;
	// begin inline asm
	mov.b32 %r8414, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8413, %r8414, %r8412;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8416, %r8106, %r8413;
	// end inline asm
	// begin inline asm
	mov.b32 %r8419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8420, %r8414, %r8419;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8423, %r8114, %r8420;
	// end inline asm
	// begin inline asm
	mov.b32 %r8426, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8427, %r8414, %r8426;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8430, %r8122, %r8427;
	// end inline asm
	// begin inline asm
	mov.b32 %r8433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8434, %r8414, %r8433;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8437, %r8130, %r8434;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8440, %r8416, %r8430, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8444, %r8423, %r8437, %r4381;
	// end inline asm
	shl.b32 	%r8451, %r8444, 4;
	// begin inline asm
	lop3.b32 %r8448, %r4387, %r8440, %r8451, 202;
	// end inline asm
	xor.b32  	%r16229, %r8448, -2004318072;
	// begin inline asm
	mov.b32 %r8455, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8454, %r8455, %r8453;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8457, %r8138, %r8454;
	// end inline asm
	// begin inline asm
	mov.b32 %r8460, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8461, %r8455, %r8460;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8464, %r8146, %r8461;
	// end inline asm
	// begin inline asm
	mov.b32 %r8467, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8468, %r8455, %r8467;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8471, %r8154, %r8468;
	// end inline asm
	// begin inline asm
	mov.b32 %r8474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8475, %r8455, %r8474;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8478, %r8162, %r8475;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8481, %r8457, %r8471, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8485, %r8464, %r8478, %r4381;
	// end inline asm
	shl.b32 	%r8492, %r8485, 4;
	// begin inline asm
	lop3.b32 %r8489, %r4387, %r8481, %r8492, 202;
	// end inline asm
	xor.b32  	%r16230, %r8489, -2004318072;
	st.shared.u32 	[%rd97], %r16223;
	st.shared.u32 	[%rd99], %r16224;
	st.shared.u32 	[%rd101], %r16225;
	st.shared.u32 	[%rd103], %r16226;
	st.shared.u32 	[%rd105], %r16227;
	st.shared.u32 	[%rd107], %r16228;
	st.shared.u32 	[%rd109], %r16229;
	st.shared.u32 	[%rd111], %r16230;
	ld.shared.u32 	%r16356, [%rd81];
	ld.shared.u32 	%r16357, [%rd83];
	ld.shared.u32 	%r16358, [%rd85];
	ld.shared.u32 	%r16359, [%rd87];
	ld.shared.u32 	%r16368, [%rd89];
	ld.shared.u32 	%r16369, [%rd91];
	ld.shared.u32 	%r16370, [%rd93];
	ld.shared.u32 	%r16371, [%rd95];
	// begin inline asm
	mov.b32 %r8498, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8509, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8497, %r16356, -2004318072;
	// begin inline asm
	lop3.b32 %r8495, %r864, %r8497, %r8498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8500, %r8498, %r8499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8503, %r8495, %r8500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8506, %r875, %r8497, %r8509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8511, %r8509, %r8510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8514, %r8506, %r8511;
	// end inline asm
	shr.u32 	%r8519, %r8497, 8;
	// begin inline asm
	lop3.b32 %r8517, %r864, %r8519, %r8498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8522, %r8498, %r8521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8525, %r8517, %r8522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8528, %r875, %r8519, %r8509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8533, %r8509, %r8532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8536, %r8528, %r8533;
	// end inline asm
	// begin inline asm
	mov.b32 %r8544, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8555, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8543, %r16357, -2004318072;
	// begin inline asm
	lop3.b32 %r8541, %r864, %r8543, %r8544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8546, %r8544, %r8545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8549, %r8541, %r8546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8552, %r875, %r8543, %r8555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8557, %r8555, %r8556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8560, %r8552, %r8557;
	// end inline asm
	shr.u32 	%r8565, %r8543, 8;
	// begin inline asm
	lop3.b32 %r8563, %r864, %r8565, %r8544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8568, %r8544, %r8567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8571, %r8563, %r8568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8574, %r875, %r8565, %r8555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8579, %r8555, %r8578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8582, %r8574, %r8579;
	// end inline asm
	// begin inline asm
	mov.b32 %r8590, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8601, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8589, %r16358, -2004318072;
	// begin inline asm
	lop3.b32 %r8587, %r864, %r8589, %r8590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8592, %r8590, %r8591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8595, %r8587, %r8592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8598, %r875, %r8589, %r8601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8603, %r8601, %r8602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8606, %r8598, %r8603;
	// end inline asm
	shr.u32 	%r8611, %r8589, 8;
	// begin inline asm
	lop3.b32 %r8609, %r864, %r8611, %r8590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8614, %r8590, %r8613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8617, %r8609, %r8614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8620, %r875, %r8611, %r8601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8625, %r8601, %r8624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8628, %r8620, %r8625;
	// end inline asm
	// begin inline asm
	mov.b32 %r8636, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8647, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8635, %r16359, -2004318072;
	// begin inline asm
	lop3.b32 %r8633, %r864, %r8635, %r8636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8638, %r8636, %r8637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8641, %r8633, %r8638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8644, %r875, %r8635, %r8647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8649, %r8647, %r8648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8652, %r8644, %r8649;
	// end inline asm
	shr.u32 	%r8657, %r8635, 8;
	// begin inline asm
	lop3.b32 %r8655, %r864, %r8657, %r8636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8659, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8660, %r8636, %r8659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8663, %r8655, %r8660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8666, %r875, %r8657, %r8647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8670, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8671, %r8647, %r8670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8674, %r8666, %r8671;
	// end inline asm
	// begin inline asm
	mov.b32 %r8682, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8693, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8681, %r16368, -2004318072;
	// begin inline asm
	lop3.b32 %r8679, %r864, %r8681, %r8682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8683, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8684, %r8682, %r8683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8687, %r8679, %r8684;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8690, %r875, %r8681, %r8693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8694, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8695, %r8693, %r8694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8698, %r8690, %r8695;
	// end inline asm
	shr.u32 	%r8703, %r8681, 8;
	// begin inline asm
	lop3.b32 %r8701, %r864, %r8703, %r8682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8705, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8706, %r8682, %r8705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8709, %r8701, %r8706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8712, %r875, %r8703, %r8693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8716, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8717, %r8693, %r8716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8720, %r8712, %r8717;
	// end inline asm
	// begin inline asm
	mov.b32 %r8728, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8739, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8727, %r16369, -2004318072;
	// begin inline asm
	lop3.b32 %r8725, %r864, %r8727, %r8728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8729, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8730, %r8728, %r8729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8733, %r8725, %r8730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8736, %r875, %r8727, %r8739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8740, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8741, %r8739, %r8740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8744, %r8736, %r8741;
	// end inline asm
	shr.u32 	%r8749, %r8727, 8;
	// begin inline asm
	lop3.b32 %r8747, %r864, %r8749, %r8728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8751, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8752, %r8728, %r8751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8755, %r8747, %r8752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8758, %r875, %r8749, %r8739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8762, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8763, %r8739, %r8762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8766, %r8758, %r8763;
	// end inline asm
	// begin inline asm
	mov.b32 %r8774, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8785, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8773, %r16370, -2004318072;
	// begin inline asm
	lop3.b32 %r8771, %r864, %r8773, %r8774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8775, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8776, %r8774, %r8775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8779, %r8771, %r8776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8782, %r875, %r8773, %r8785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8786, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8787, %r8785, %r8786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8790, %r8782, %r8787;
	// end inline asm
	shr.u32 	%r8795, %r8773, 8;
	// begin inline asm
	lop3.b32 %r8793, %r864, %r8795, %r8774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8797, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8798, %r8774, %r8797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8801, %r8793, %r8798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8804, %r875, %r8795, %r8785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8808, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8809, %r8785, %r8808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8812, %r8804, %r8809;
	// end inline asm
	// begin inline asm
	mov.b32 %r8820, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8831, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8819, %r16371, -2004318072;
	// begin inline asm
	lop3.b32 %r8817, %r864, %r8819, %r8820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8821, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8822, %r8820, %r8821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8825, %r8817, %r8822;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8828, %r875, %r8819, %r8831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8832, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8833, %r8831, %r8832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8836, %r8828, %r8833;
	// end inline asm
	shr.u32 	%r8841, %r8819, 8;
	// begin inline asm
	lop3.b32 %r8839, %r864, %r8841, %r8820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8843, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8844, %r8820, %r8843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8847, %r8839, %r8844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8850, %r875, %r8841, %r8831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8854, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8855, %r8831, %r8854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8858, %r8850, %r8855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8861, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8863, %r8861, %r8503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8866, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8868, %r8866, %r8514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8871, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8873, %r8871, %r8525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8876, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8878, %r8876, %r8536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8881, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8883, %r8881, %r8549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8886, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8888, %r8886, %r8560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8891, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8893, %r8891, %r8571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8896, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8898, %r8896, %r8582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8901, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8903, %r8901, %r8595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8906, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8908, %r8906, %r8606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8911, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8913, %r8911, %r8617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8916, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8918, %r8916, %r8628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8921, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8923, %r8921, %r8641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8926, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8928, %r8926, %r8652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8931, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8933, %r8931, %r8663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8936, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8938, %r8936, %r8674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8941, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8943, %r8941, %r8687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8946, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8948, %r8946, %r8698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8951, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8953, %r8951, %r8709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8956, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8958, %r8956, %r8720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8961, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8963, %r8961, %r8733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8966, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8968, %r8966, %r8744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8971, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8973, %r8971, %r8755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8976, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8978, %r8976, %r8766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8981, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8983, %r8981, %r8779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8986, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8988, %r8986, %r8790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8991, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8993, %r8991, %r8801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8996, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8998, %r8996, %r8812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9001, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9003, %r9001, %r8825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9006, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9008, %r9006, %r8836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9011, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9013, %r9011, %r8847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9016, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9018, %r9016, %r8858;
	// end inline asm
	// begin inline asm
	mov.b32 %r9026, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9037, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9023, %r864, %r2449, %r9026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9027, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9028, %r9026, %r9027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9031, %r9023, %r9028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9034, %r875, %r2449, %r9037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9039, %r9037, %r9038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9042, %r9034, %r9039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9045, %r864, %r2471, %r9026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9050, %r9026, %r9049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9053, %r9045, %r9050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9056, %r875, %r2471, %r9037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9061, %r9037, %r9060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9064, %r9056, %r9061;
	// end inline asm
	// begin inline asm
	mov.b32 %r9072, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9083, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9069, %r864, %r2495, %r9072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9073, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9074, %r9072, %r9073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9077, %r9069, %r9074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9080, %r875, %r2495, %r9083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9084, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9085, %r9083, %r9084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9088, %r9080, %r9085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9091, %r864, %r2517, %r9072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9096, %r9072, %r9095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9099, %r9091, %r9096;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9102, %r875, %r2517, %r9083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9107, %r9083, %r9106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9110, %r9102, %r9107;
	// end inline asm
	// begin inline asm
	mov.b32 %r9118, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9129, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9115, %r864, %r2541, %r9118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9119, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9120, %r9118, %r9119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9123, %r9115, %r9120;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9126, %r875, %r2541, %r9129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9131, %r9129, %r9130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9134, %r9126, %r9131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9137, %r864, %r2563, %r9118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9142, %r9118, %r9141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9145, %r9137, %r9142;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9148, %r875, %r2563, %r9129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9152, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9153, %r9129, %r9152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9156, %r9148, %r9153;
	// end inline asm
	// begin inline asm
	mov.b32 %r9164, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9175, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9161, %r864, %r2587, %r9164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9165, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9166, %r9164, %r9165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9169, %r9161, %r9166;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9172, %r875, %r2587, %r9175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9177, %r9175, %r9176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9180, %r9172, %r9177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9183, %r864, %r2609, %r9164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9188, %r9164, %r9187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9191, %r9183, %r9188;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9194, %r875, %r2609, %r9175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9198, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9199, %r9175, %r9198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9202, %r9194, %r9199;
	// end inline asm
	// begin inline asm
	mov.b32 %r9210, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9221, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9207, %r864, %r2633, %r9210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9211, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9212, %r9210, %r9211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9215, %r9207, %r9212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9218, %r875, %r2633, %r9221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9222, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9223, %r9221, %r9222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9226, %r9218, %r9223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9229, %r864, %r2655, %r9210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9233, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9234, %r9210, %r9233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9237, %r9229, %r9234;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9240, %r875, %r2655, %r9221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9245, %r9221, %r9244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9248, %r9240, %r9245;
	// end inline asm
	// begin inline asm
	mov.b32 %r9256, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9267, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9253, %r864, %r2679, %r9256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9257, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9258, %r9256, %r9257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9261, %r9253, %r9258;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9264, %r875, %r2679, %r9267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9268, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9269, %r9267, %r9268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9272, %r9264, %r9269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9275, %r864, %r2701, %r9256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9279, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9280, %r9256, %r9279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9283, %r9275, %r9280;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9286, %r875, %r2701, %r9267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9291, %r9267, %r9290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9294, %r9286, %r9291;
	// end inline asm
	// begin inline asm
	mov.b32 %r9302, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9313, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9299, %r864, %r2725, %r9302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9303, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9304, %r9302, %r9303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9307, %r9299, %r9304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9310, %r875, %r2725, %r9313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9314, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9315, %r9313, %r9314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9318, %r9310, %r9315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9321, %r864, %r2747, %r9302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9325, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9326, %r9302, %r9325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9329, %r9321, %r9326;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9332, %r875, %r2747, %r9313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9336, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9337, %r9313, %r9336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9340, %r9332, %r9337;
	// end inline asm
	// begin inline asm
	mov.b32 %r9348, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9359, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9345, %r864, %r2771, %r9348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9349, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9350, %r9348, %r9349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9353, %r9345, %r9350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9356, %r875, %r2771, %r9359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9360, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9361, %r9359, %r9360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9364, %r9356, %r9361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9367, %r864, %r2793, %r9348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9371, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9372, %r9348, %r9371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9375, %r9367, %r9372;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9378, %r875, %r2793, %r9359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9382, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9383, %r9359, %r9382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9386, %r9378, %r9383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9389, %r297, %r9031, %r8863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9393, %r297, %r9042, %r8868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9397, %r297, %r9053, %r8873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9401, %r297, %r9064, %r8878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9405, %r297, %r9077, %r8883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9409, %r297, %r9088, %r8888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9413, %r297, %r9099, %r8893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9417, %r297, %r9110, %r8898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9421, %r297, %r9123, %r8903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9425, %r297, %r9134, %r8908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9429, %r297, %r9145, %r8913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9433, %r297, %r9156, %r8918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9437, %r297, %r9169, %r8923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9441, %r297, %r9180, %r8928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9445, %r297, %r9191, %r8933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9449, %r297, %r9202, %r8938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9453, %r315, %r9215, %r8943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9457, %r315, %r9226, %r8948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9461, %r315, %r9237, %r8953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9465, %r315, %r9248, %r8958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9469, %r315, %r9261, %r8963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9473, %r315, %r9272, %r8968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9477, %r315, %r9283, %r8973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9481, %r315, %r9294, %r8978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9485, %r315, %r9307, %r8983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9489, %r315, %r9318, %r8988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9493, %r315, %r9329, %r8993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9497, %r315, %r9340, %r8998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9501, %r315, %r9353, %r9003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9505, %r315, %r9364, %r9008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9509, %r315, %r9375, %r9013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9513, %r315, %r9386, %r9018;
	// end inline asm
	// begin inline asm
	mov.b32 %r9522, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9533, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9519, %r864, %r865, %r9522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9523, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9524, %r9522, %r9523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9527, %r9519, %r9524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9530, %r875, %r865, %r9533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9534, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9535, %r9533, %r9534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9538, %r9530, %r9535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9541, %r864, %r887, %r9522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9546, %r9522, %r9545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9549, %r9541, %r9546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9552, %r875, %r887, %r9533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9557, %r9533, %r9556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9560, %r9552, %r9557;
	// end inline asm
	// begin inline asm
	mov.b32 %r9568, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9579, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9565, %r864, %r911, %r9568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9569, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9570, %r9568, %r9569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9573, %r9565, %r9570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9576, %r875, %r911, %r9579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9580, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9581, %r9579, %r9580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9584, %r9576, %r9581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9587, %r864, %r933, %r9568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9592, %r9568, %r9591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9595, %r9587, %r9592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9598, %r875, %r933, %r9579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9603, %r9579, %r9602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9606, %r9598, %r9603;
	// end inline asm
	// begin inline asm
	mov.b32 %r9614, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9625, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9611, %r864, %r957, %r9614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9615, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9616, %r9614, %r9615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9619, %r9611, %r9616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9622, %r875, %r957, %r9625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9626, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9627, %r9625, %r9626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9630, %r9622, %r9627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9633, %r864, %r979, %r9614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9638, %r9614, %r9637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9641, %r9633, %r9638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9644, %r875, %r979, %r9625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9649, %r9625, %r9648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9652, %r9644, %r9649;
	// end inline asm
	// begin inline asm
	mov.b32 %r9660, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9671, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9657, %r864, %r1003, %r9660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9661, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9662, %r9660, %r9661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9665, %r9657, %r9662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9668, %r875, %r1003, %r9671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9672, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9673, %r9671, %r9672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9676, %r9668, %r9673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9679, %r864, %r1025, %r9660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9683, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9684, %r9660, %r9683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9687, %r9679, %r9684;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9690, %r875, %r1025, %r9671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9694, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9695, %r9671, %r9694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9698, %r9690, %r9695;
	// end inline asm
	// begin inline asm
	mov.b32 %r9706, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9717, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9703, %r864, %r1049, %r9706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9707, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9708, %r9706, %r9707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9711, %r9703, %r9708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9714, %r875, %r1049, %r9717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9718, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9719, %r9717, %r9718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9722, %r9714, %r9719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9725, %r864, %r1071, %r9706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9729, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9730, %r9706, %r9729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9733, %r9725, %r9730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9736, %r875, %r1071, %r9717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9740, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9741, %r9717, %r9740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9744, %r9736, %r9741;
	// end inline asm
	// begin inline asm
	mov.b32 %r9752, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9763, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9749, %r864, %r1095, %r9752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9753, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9754, %r9752, %r9753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9757, %r9749, %r9754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9760, %r875, %r1095, %r9763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9764, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9765, %r9763, %r9764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9768, %r9760, %r9765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9771, %r864, %r1117, %r9752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9775, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9776, %r9752, %r9775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9779, %r9771, %r9776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9782, %r875, %r1117, %r9763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9786, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9787, %r9763, %r9786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9790, %r9782, %r9787;
	// end inline asm
	// begin inline asm
	mov.b32 %r9798, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9809, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9795, %r864, %r1141, %r9798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9799, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9800, %r9798, %r9799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9803, %r9795, %r9800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9806, %r875, %r1141, %r9809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9810, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9811, %r9809, %r9810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9814, %r9806, %r9811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9817, %r864, %r1163, %r9798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9821, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9822, %r9798, %r9821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9825, %r9817, %r9822;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9828, %r875, %r1163, %r9809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9832, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9833, %r9809, %r9832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9836, %r9828, %r9833;
	// end inline asm
	// begin inline asm
	mov.b32 %r9844, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9855, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9841, %r864, %r1187, %r9844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9845, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9846, %r9844, %r9845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9849, %r9841, %r9846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9852, %r875, %r1187, %r9855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9856, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9857, %r9855, %r9856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9860, %r9852, %r9857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9863, %r864, %r1209, %r9844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9867, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9868, %r9844, %r9867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9871, %r9863, %r9868;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9874, %r875, %r1209, %r9855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9878, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9879, %r9855, %r9878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9882, %r9874, %r9879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9885, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9887, %r9885, %r9527, %r9389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9891, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9893, %r9891, %r9538, %r9393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9897, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9899, %r9897, %r9549, %r9397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9903, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9905, %r9903, %r9560, %r9401;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9909, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9911, %r9909, %r9573, %r9405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9915, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9917, %r9915, %r9584, %r9409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9921, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9923, %r9921, %r9595, %r9413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9927, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9929, %r9927, %r9606, %r9417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9933, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9935, %r9933, %r9619, %r9421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9939, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9941, %r9939, %r9630, %r9425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9945, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9947, %r9945, %r9641, %r9429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9951, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9953, %r9951, %r9652, %r9433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9957, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9959, %r9957, %r9665, %r9437;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9963, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9965, %r9963, %r9676, %r9441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9969, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9971, %r9969, %r9687, %r9445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9975, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9977, %r9975, %r9698, %r9449;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9981, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9983, %r9981, %r9711, %r9453;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9987, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9989, %r9987, %r9722, %r9457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9993, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9995, %r9993, %r9733, %r9461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9999, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10001, %r9999, %r9744, %r9465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10005, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10007, %r10005, %r9757, %r9469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10011, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10013, %r10011, %r9768, %r9473;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10017, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10019, %r10017, %r9779, %r9477;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10023, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10025, %r10023, %r9790, %r9481;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10029, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10031, %r10029, %r9803, %r9485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10035, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10037, %r10035, %r9814, %r9489;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10041, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10043, %r10041, %r9825, %r9493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10047, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10049, %r10047, %r9836, %r9497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10053, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10055, %r10053, %r9849, %r9501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10059, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10061, %r10059, %r9860, %r9505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10065, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10067, %r10065, %r9871, %r9509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10071, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10073, %r10071, %r9882, %r9513;
	// end inline asm
	// begin inline asm
	mov.b32 %r10082, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10093, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10079, %r864, %r4681, %r10082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10083, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10084, %r10082, %r10083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10087, %r10079, %r10084;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10090, %r875, %r4681, %r10093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10094, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10095, %r10093, %r10094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10098, %r10090, %r10095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10101, %r864, %r4703, %r10082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10105, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10106, %r10082, %r10105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10109, %r10101, %r10106;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10112, %r875, %r4703, %r10093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10116, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10117, %r10093, %r10116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10120, %r10112, %r10117;
	// end inline asm
	// begin inline asm
	mov.b32 %r10128, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10139, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10125, %r864, %r4727, %r10128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10129, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10130, %r10128, %r10129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10133, %r10125, %r10130;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10136, %r875, %r4727, %r10139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10140, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10141, %r10139, %r10140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10144, %r10136, %r10141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10147, %r864, %r4749, %r10128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10151, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10152, %r10128, %r10151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10155, %r10147, %r10152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10158, %r875, %r4749, %r10139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10163, %r10139, %r10162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10166, %r10158, %r10163;
	// end inline asm
	// begin inline asm
	mov.b32 %r10174, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10185, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10171, %r864, %r4773, %r10174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10175, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10176, %r10174, %r10175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10179, %r10171, %r10176;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10182, %r875, %r4773, %r10185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10186, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10187, %r10185, %r10186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10190, %r10182, %r10187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10193, %r864, %r4795, %r10174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10197, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10198, %r10174, %r10197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10201, %r10193, %r10198;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10204, %r875, %r4795, %r10185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10209, %r10185, %r10208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10212, %r10204, %r10209;
	// end inline asm
	// begin inline asm
	mov.b32 %r10220, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10231, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10217, %r864, %r4819, %r10220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10221, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10222, %r10220, %r10221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10225, %r10217, %r10222;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10228, %r875, %r4819, %r10231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10232, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10233, %r10231, %r10232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10236, %r10228, %r10233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10239, %r864, %r4841, %r10220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10243, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10244, %r10220, %r10243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10247, %r10239, %r10244;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10250, %r875, %r4841, %r10231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10254, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10255, %r10231, %r10254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10258, %r10250, %r10255;
	// end inline asm
	// begin inline asm
	mov.b32 %r10266, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10277, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10263, %r864, %r4865, %r10266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10267, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10268, %r10266, %r10267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10271, %r10263, %r10268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10274, %r875, %r4865, %r10277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10278, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10279, %r10277, %r10278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10282, %r10274, %r10279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10285, %r864, %r4887, %r10266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10289, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10290, %r10266, %r10289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10293, %r10285, %r10290;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10296, %r875, %r4887, %r10277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10300, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10301, %r10277, %r10300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10304, %r10296, %r10301;
	// end inline asm
	// begin inline asm
	mov.b32 %r10312, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10323, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10309, %r864, %r4911, %r10312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10313, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10314, %r10312, %r10313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10317, %r10309, %r10314;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10320, %r875, %r4911, %r10323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10324, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10325, %r10323, %r10324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10328, %r10320, %r10325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10331, %r864, %r4933, %r10312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10335, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10336, %r10312, %r10335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10339, %r10331, %r10336;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10342, %r875, %r4933, %r10323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10347, %r10323, %r10346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10350, %r10342, %r10347;
	// end inline asm
	// begin inline asm
	mov.b32 %r10358, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10369, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10355, %r864, %r4957, %r10358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10359, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10360, %r10358, %r10359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10363, %r10355, %r10360;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10366, %r875, %r4957, %r10369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10370, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10371, %r10369, %r10370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10374, %r10366, %r10371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10377, %r864, %r4979, %r10358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10381, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10382, %r10358, %r10381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10385, %r10377, %r10382;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10388, %r875, %r4979, %r10369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10392, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10393, %r10369, %r10392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10396, %r10388, %r10393;
	// end inline asm
	// begin inline asm
	mov.b32 %r10404, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10415, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10401, %r864, %r5003, %r10404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10405, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10406, %r10404, %r10405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10409, %r10401, %r10406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10412, %r875, %r5003, %r10415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10416, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10417, %r10415, %r10416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10420, %r10412, %r10417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10423, %r864, %r5025, %r10404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10427, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10428, %r10404, %r10427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10431, %r10423, %r10428;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10434, %r875, %r5025, %r10415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10438, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10439, %r10415, %r10438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10442, %r10434, %r10439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10580, %r369, %r10087, %r9887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10577, %r369, %r10098, %r9893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10589, %r369, %r10109, %r9899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10586, %r369, %r10120, %r9905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10598, %r369, %r10133, %r9911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10595, %r369, %r10144, %r9917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10607, %r369, %r10155, %r9923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10604, %r369, %r10166, %r9929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10616, %r369, %r10179, %r9935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10613, %r369, %r10190, %r9941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10625, %r369, %r10201, %r9947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10622, %r369, %r10212, %r9953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10634, %r369, %r10225, %r9959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10631, %r369, %r10236, %r9965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10643, %r369, %r10247, %r9971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10640, %r369, %r10258, %r9977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10652, %r387, %r10271, %r9983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10649, %r387, %r10282, %r9989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10661, %r387, %r10293, %r9995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10658, %r387, %r10304, %r10001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10670, %r387, %r10317, %r10007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10667, %r387, %r10328, %r10013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10679, %r387, %r10339, %r10019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10676, %r387, %r10350, %r10025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10688, %r387, %r10363, %r10031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10685, %r387, %r10374, %r10037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10697, %r387, %r10385, %r10043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10694, %r387, %r10396, %r10049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10706, %r387, %r10409, %r10055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10703, %r387, %r10420, %r10061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10715, %r387, %r10431, %r10067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10712, %r387, %r10442, %r10073;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10573, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10575, %r10573, %r10577;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10578, %r426, %r10580, %r10575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10582, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10584, %r10582, %r10586;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10587, %r426, %r10589, %r10584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10591, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10593, %r10591, %r10595;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10596, %r426, %r10598, %r10593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10600, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10602, %r10600, %r10604;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10605, %r426, %r10607, %r10602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10609, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10611, %r10609, %r10613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10614, %r426, %r10616, %r10611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10618, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10620, %r10618, %r10622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10623, %r426, %r10625, %r10620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10627, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10629, %r10627, %r10631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10632, %r426, %r10634, %r10629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10636, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10638, %r10636, %r10640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10641, %r426, %r10643, %r10638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10645, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10647, %r10645, %r10649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10650, %r429, %r10652, %r10647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10654, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10656, %r10654, %r10658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10659, %r429, %r10661, %r10656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10663, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10665, %r10663, %r10667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10668, %r429, %r10670, %r10665;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10672, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10674, %r10672, %r10676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10677, %r429, %r10679, %r10674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10681, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10683, %r10681, %r10685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10686, %r429, %r10688, %r10683;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10690, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10692, %r10690, %r10694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10695, %r429, %r10697, %r10692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10699, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10701, %r10699, %r10703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10704, %r429, %r10706, %r10701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10708, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10710, %r10708, %r10712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10713, %r429, %r10715, %r10710;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10717, %r432, %r10580;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10720, %r426, %r10577, %r10717;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10724, %r432, %r10589;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10727, %r426, %r10586, %r10724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10731, %r432, %r10598;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10734, %r426, %r10595, %r10731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10738, %r432, %r10607;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10741, %r426, %r10604, %r10738;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10745, %r432, %r10616;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10748, %r426, %r10613, %r10745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10752, %r432, %r10625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10755, %r426, %r10622, %r10752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10759, %r432, %r10634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10762, %r426, %r10631, %r10759;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10766, %r432, %r10643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10769, %r426, %r10640, %r10766;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10773, %r435, %r10652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10776, %r429, %r10649, %r10773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10780, %r435, %r10661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10783, %r429, %r10658, %r10780;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10787, %r435, %r10670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10790, %r429, %r10667, %r10787;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10794, %r435, %r10679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10797, %r429, %r10676, %r10794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10801, %r435, %r10688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10804, %r429, %r10685, %r10801;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10808, %r435, %r10697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10811, %r429, %r10694, %r10808;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10815, %r435, %r10706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10818, %r429, %r10703, %r10815;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10822, %r435, %r10715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10825, %r429, %r10712, %r10822;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10996, %r10993}, {%r493, %r499, %r496, %r502}, {%r10578, %r10720}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11005, %r11002}, {%r493, %r499, %r496, %r502}, {%r10587, %r10727}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11014, %r11011}, {%r493, %r499, %r496, %r502}, {%r10596, %r10734}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11023, %r11020}, {%r493, %r499, %r496, %r502}, {%r10605, %r10741}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11032, %r11029}, {%r493, %r499, %r496, %r502}, {%r10614, %r10748}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11041, %r11038}, {%r493, %r499, %r496, %r502}, {%r10623, %r10755}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11050, %r11047}, {%r493, %r499, %r496, %r502}, {%r10632, %r10762}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11059, %r11056}, {%r493, %r499, %r496, %r502}, {%r10641, %r10769}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11068, %r11065}, {%r493, %r499, %r496, %r502}, {%r10650, %r10776}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11077, %r11074}, {%r493, %r499, %r496, %r502}, {%r10659, %r10783}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11086, %r11083}, {%r493, %r499, %r496, %r502}, {%r10668, %r10790}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11095, %r11092}, {%r493, %r499, %r496, %r502}, {%r10677, %r10797}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11104, %r11101}, {%r493, %r499, %r496, %r502}, {%r10686, %r10804}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11113, %r11110}, {%r493, %r499, %r496, %r502}, {%r10695, %r10811}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11122, %r11119}, {%r493, %r499, %r496, %r502}, {%r10704, %r10818}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11131, %r11128}, {%r493, %r499, %r496, %r502}, {%r10713, %r10825}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10989, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10991, %r10989, %r10993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10994, %r543, %r10996, %r10991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10998, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11000, %r10998, %r11002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11003, %r543, %r11005, %r11000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11007, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11009, %r11007, %r11011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11012, %r543, %r11014, %r11009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11016, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11018, %r11016, %r11020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11021, %r543, %r11023, %r11018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11025, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11027, %r11025, %r11029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11030, %r543, %r11032, %r11027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11034, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11036, %r11034, %r11038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11039, %r543, %r11041, %r11036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11043, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11045, %r11043, %r11047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11048, %r543, %r11050, %r11045;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11052, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11054, %r11052, %r11056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11057, %r543, %r11059, %r11054;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11061, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11063, %r11061, %r11065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11066, %r543, %r11068, %r11063;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11070, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11072, %r11070, %r11074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11075, %r543, %r11077, %r11072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11079, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11081, %r11079, %r11083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11084, %r543, %r11086, %r11081;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11088, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11090, %r11088, %r11092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11093, %r543, %r11095, %r11090;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11097, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11099, %r11097, %r11101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11102, %r543, %r11104, %r11099;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11106, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11108, %r11106, %r11110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11111, %r543, %r11113, %r11108;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11115, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11117, %r11115, %r11119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11120, %r543, %r11122, %r11117;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11124, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11126, %r11124, %r11128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11129, %r543, %r11131, %r11126;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11133, %r546, %r10996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11136, %r543, %r10993, %r11133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11140, %r546, %r11005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11143, %r543, %r11002, %r11140;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11147, %r546, %r11014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11150, %r543, %r11011, %r11147;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11154, %r546, %r11023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11157, %r543, %r11020, %r11154;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11161, %r546, %r11032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11164, %r543, %r11029, %r11161;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11168, %r546, %r11041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11171, %r543, %r11038, %r11168;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11175, %r546, %r11050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11178, %r543, %r11047, %r11175;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11182, %r546, %r11059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11185, %r543, %r11056, %r11182;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11189, %r546, %r11068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11192, %r543, %r11065, %r11189;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11196, %r546, %r11077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11199, %r543, %r11074, %r11196;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11203, %r546, %r11086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11206, %r543, %r11083, %r11203;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11210, %r546, %r11095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11213, %r543, %r11092, %r11210;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11217, %r546, %r11104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11220, %r543, %r11101, %r11217;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11224, %r546, %r11113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11227, %r543, %r11110, %r11224;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11231, %r546, %r11122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11234, %r543, %r11119, %r11231;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11238, %r546, %r11131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11241, %r543, %r11128, %r11238;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11534, %r11537}, {%r581, %r587, %r584, %r590}, {%r10994, %r11136}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11540, %r11543}, {%r581, %r587, %r584, %r590}, {%r11003, %r11143}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11546, %r11549}, {%r581, %r587, %r584, %r590}, {%r11012, %r11150}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11552, %r11555}, {%r581, %r587, %r584, %r590}, {%r11021, %r11157}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11558, %r11561}, {%r581, %r587, %r584, %r590}, {%r11030, %r11164}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11564, %r11567}, {%r581, %r587, %r584, %r590}, {%r11039, %r11171}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11570, %r11573}, {%r581, %r587, %r584, %r590}, {%r11048, %r11178}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11576, %r11579}, {%r581, %r587, %r584, %r590}, {%r11057, %r11185}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11535, %r11538}, {%r581, %r587, %r584, %r590}, {%r11066, %r11192}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11541, %r11544}, {%r581, %r587, %r584, %r590}, {%r11075, %r11199}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11547, %r11550}, {%r581, %r587, %r584, %r590}, {%r11084, %r11206}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11553, %r11556}, {%r581, %r587, %r584, %r590}, {%r11093, %r11213}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11559, %r11562}, {%r581, %r587, %r584, %r590}, {%r11102, %r11220}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11565, %r11568}, {%r581, %r587, %r584, %r590}, {%r11111, %r11227}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11571, %r11574}, {%r581, %r587, %r584, %r590}, {%r11120, %r11234}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11577, %r11580}, {%r581, %r587, %r584, %r590}, {%r11129, %r11241}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11533, %r11534, %r11535;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11536, %r11537, %r11538;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11539, %r11540, %r11541;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11542, %r11543, %r11544;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11545, %r11546, %r11547;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11548, %r11549, %r11550;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11551, %r11552, %r11553;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11554, %r11555, %r11556;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11557, %r11558, %r11559;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11560, %r11561, %r11562;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11563, %r11564, %r11565;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11566, %r11567, %r11568;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11569, %r11570, %r11571;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11572, %r11573, %r11574;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11575, %r11576, %r11577;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11578, %r11579, %r11580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11581, %r11534, %r11535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11584, %r11537, %r11538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11587, %r11540, %r11541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11590, %r11543, %r11544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11593, %r11546, %r11547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11596, %r11549, %r11550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11599, %r11552, %r11553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11602, %r11555, %r11556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11605, %r11558, %r11559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11608, %r11561, %r11562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11611, %r11564, %r11565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11614, %r11567, %r11568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11617, %r11570, %r11571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11620, %r11573, %r11574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11623, %r11576, %r11577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11626, %r11579, %r11580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11629, %r182, %r11533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11632, %r182, %r11536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11635, %r182, %r11539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11638, %r182, %r11542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11641, %r182, %r11545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11644, %r182, %r11548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11647, %r182, %r11551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11650, %r182, %r11554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11653, %r182, %r11557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11656, %r182, %r11560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11659, %r182, %r11563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11662, %r182, %r11566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11665, %r182, %r11569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11668, %r182, %r11572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11671, %r182, %r11575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11674, %r182, %r11578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11677, %r184, %r11581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11680, %r184, %r11584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11683, %r184, %r11587;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11686, %r184, %r11590;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11689, %r184, %r11593;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11692, %r184, %r11596;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11695, %r184, %r11599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11698, %r184, %r11602;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11701, %r184, %r11605;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11704, %r184, %r11608;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11707, %r184, %r11611;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11710, %r184, %r11614;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11713, %r184, %r11617;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11716, %r184, %r11620;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11719, %r184, %r11623;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11722, %r184, %r11626;
	// end inline asm
	// begin inline asm
	mov.b32 %r11725, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11726, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11727, %r11629, %r11725;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11730, %r11727, %r11726;
	// end inline asm
	// begin inline asm
	mov.b32 %r11733, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11734, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11735, %r11632, %r11733;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11738, %r11735, %r11734;
	// end inline asm
	// begin inline asm
	mov.b32 %r11741, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11742, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11743, %r11635, %r11741;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11746, %r11743, %r11742;
	// end inline asm
	// begin inline asm
	mov.b32 %r11749, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11750, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11751, %r11638, %r11749;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11754, %r11751, %r11750;
	// end inline asm
	// begin inline asm
	mov.b32 %r11757, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11758, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11759, %r11641, %r11757;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11762, %r11759, %r11758;
	// end inline asm
	// begin inline asm
	mov.b32 %r11765, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11766, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11767, %r11644, %r11765;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11770, %r11767, %r11766;
	// end inline asm
	// begin inline asm
	mov.b32 %r11773, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11774, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11775, %r11647, %r11773;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11778, %r11775, %r11774;
	// end inline asm
	// begin inline asm
	mov.b32 %r11781, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11782, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11783, %r11650, %r11781;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11786, %r11783, %r11782;
	// end inline asm
	// begin inline asm
	mov.b32 %r11789, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11790, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11791, %r11653, %r11789;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11794, %r11791, %r11790;
	// end inline asm
	// begin inline asm
	mov.b32 %r11797, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11798, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11799, %r11656, %r11797;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11802, %r11799, %r11798;
	// end inline asm
	// begin inline asm
	mov.b32 %r11805, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11806, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11807, %r11659, %r11805;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11810, %r11807, %r11806;
	// end inline asm
	// begin inline asm
	mov.b32 %r11813, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11814, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11815, %r11662, %r11813;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11818, %r11815, %r11814;
	// end inline asm
	// begin inline asm
	mov.b32 %r11821, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11822, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11823, %r11665, %r11821;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11826, %r11823, %r11822;
	// end inline asm
	// begin inline asm
	mov.b32 %r11829, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11830, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11831, %r11668, %r11829;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11834, %r11831, %r11830;
	// end inline asm
	// begin inline asm
	mov.b32 %r11837, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11838, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11839, %r11671, %r11837;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11842, %r11839, %r11838;
	// end inline asm
	// begin inline asm
	mov.b32 %r11845, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11846, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11847, %r11674, %r11845;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11850, %r11847, %r11846;
	// end inline asm
	// begin inline asm
	mov.b32 %r11853, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11854, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11855, %r11677, %r11853;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11858, %r11855, %r11854;
	// end inline asm
	// begin inline asm
	mov.b32 %r11861, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11862, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11863, %r11680, %r11861;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11866, %r11863, %r11862;
	// end inline asm
	// begin inline asm
	mov.b32 %r11869, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11870, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11871, %r11683, %r11869;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11874, %r11871, %r11870;
	// end inline asm
	// begin inline asm
	mov.b32 %r11877, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11878, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11879, %r11686, %r11877;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11882, %r11879, %r11878;
	// end inline asm
	// begin inline asm
	mov.b32 %r11885, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11886, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11887, %r11689, %r11885;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11890, %r11887, %r11886;
	// end inline asm
	// begin inline asm
	mov.b32 %r11893, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11894, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11895, %r11692, %r11893;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11898, %r11895, %r11894;
	// end inline asm
	// begin inline asm
	mov.b32 %r11901, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11902, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11903, %r11695, %r11901;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11906, %r11903, %r11902;
	// end inline asm
	// begin inline asm
	mov.b32 %r11909, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11910, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11911, %r11698, %r11909;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11914, %r11911, %r11910;
	// end inline asm
	// begin inline asm
	mov.b32 %r11917, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11918, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11919, %r11701, %r11917;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11922, %r11919, %r11918;
	// end inline asm
	// begin inline asm
	mov.b32 %r11925, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11926, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11927, %r11704, %r11925;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11930, %r11927, %r11926;
	// end inline asm
	// begin inline asm
	mov.b32 %r11933, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11934, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11935, %r11707, %r11933;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11938, %r11935, %r11934;
	// end inline asm
	// begin inline asm
	mov.b32 %r11941, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11942, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11943, %r11710, %r11941;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11946, %r11943, %r11942;
	// end inline asm
	// begin inline asm
	mov.b32 %r11949, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11950, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11951, %r11713, %r11949;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11954, %r11951, %r11950;
	// end inline asm
	// begin inline asm
	mov.b32 %r11957, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11958, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11959, %r11716, %r11957;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11962, %r11959, %r11958;
	// end inline asm
	// begin inline asm
	mov.b32 %r11965, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11966, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11967, %r11719, %r11965;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11970, %r11967, %r11966;
	// end inline asm
	// begin inline asm
	mov.b32 %r11973, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11974, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11975, %r11722, %r11973;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11978, %r11975, %r11974;
	// end inline asm
	// begin inline asm
	mov.b32 %r11984, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11982, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11983, %r11984, %r11982;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11986, %r11730, %r11983;
	// end inline asm
	// begin inline asm
	mov.b32 %r11989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11990, %r11984, %r11989;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11993, %r11738, %r11990;
	// end inline asm
	// begin inline asm
	mov.b32 %r11996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11997, %r11984, %r11996;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12000, %r11746, %r11997;
	// end inline asm
	// begin inline asm
	mov.b32 %r12003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12004, %r11984, %r12003;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12007, %r11754, %r12004;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12010, %r11986, %r12000, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12014, %r11993, %r12007, %r4381;
	// end inline asm
	shl.b32 	%r12021, %r12014, 4;
	// begin inline asm
	lop3.b32 %r12018, %r4387, %r12010, %r12021, 202;
	// end inline asm
	xor.b32  	%r16231, %r12018, -2004318072;
	// begin inline asm
	mov.b32 %r12025, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12023, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12024, %r12025, %r12023;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12027, %r11762, %r12024;
	// end inline asm
	// begin inline asm
	mov.b32 %r12030, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12031, %r12025, %r12030;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12034, %r11770, %r12031;
	// end inline asm
	// begin inline asm
	mov.b32 %r12037, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12038, %r12025, %r12037;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12041, %r11778, %r12038;
	// end inline asm
	// begin inline asm
	mov.b32 %r12044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12045, %r12025, %r12044;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12048, %r11786, %r12045;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12051, %r12027, %r12041, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12055, %r12034, %r12048, %r4381;
	// end inline asm
	shl.b32 	%r12062, %r12055, 4;
	// begin inline asm
	lop3.b32 %r12059, %r4387, %r12051, %r12062, 202;
	// end inline asm
	xor.b32  	%r16232, %r12059, -2004318072;
	// begin inline asm
	mov.b32 %r12066, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12065, %r12066, %r12064;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12068, %r11794, %r12065;
	// end inline asm
	// begin inline asm
	mov.b32 %r12071, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12072, %r12066, %r12071;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12075, %r11802, %r12072;
	// end inline asm
	// begin inline asm
	mov.b32 %r12078, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12079, %r12066, %r12078;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12082, %r11810, %r12079;
	// end inline asm
	// begin inline asm
	mov.b32 %r12085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12086, %r12066, %r12085;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12089, %r11818, %r12086;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12092, %r12068, %r12082, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12096, %r12075, %r12089, %r4381;
	// end inline asm
	shl.b32 	%r12103, %r12096, 4;
	// begin inline asm
	lop3.b32 %r12100, %r4387, %r12092, %r12103, 202;
	// end inline asm
	xor.b32  	%r16233, %r12100, -2004318072;
	// begin inline asm
	mov.b32 %r12107, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12105, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12106, %r12107, %r12105;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12109, %r11826, %r12106;
	// end inline asm
	// begin inline asm
	mov.b32 %r12112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12113, %r12107, %r12112;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12116, %r11834, %r12113;
	// end inline asm
	// begin inline asm
	mov.b32 %r12119, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12120, %r12107, %r12119;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12123, %r11842, %r12120;
	// end inline asm
	// begin inline asm
	mov.b32 %r12126, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12127, %r12107, %r12126;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12130, %r11850, %r12127;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12133, %r12109, %r12123, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12137, %r12116, %r12130, %r4381;
	// end inline asm
	shl.b32 	%r12144, %r12137, 4;
	// begin inline asm
	lop3.b32 %r12141, %r4387, %r12133, %r12144, 202;
	// end inline asm
	xor.b32  	%r16234, %r12141, -2004318072;
	// begin inline asm
	mov.b32 %r12148, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12147, %r12148, %r12146;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12150, %r11858, %r12147;
	// end inline asm
	// begin inline asm
	mov.b32 %r12153, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12154, %r12148, %r12153;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12157, %r11866, %r12154;
	// end inline asm
	// begin inline asm
	mov.b32 %r12160, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12161, %r12148, %r12160;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12164, %r11874, %r12161;
	// end inline asm
	// begin inline asm
	mov.b32 %r12167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12168, %r12148, %r12167;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12171, %r11882, %r12168;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12174, %r12150, %r12164, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12178, %r12157, %r12171, %r4381;
	// end inline asm
	shl.b32 	%r12185, %r12178, 4;
	// begin inline asm
	lop3.b32 %r12182, %r4387, %r12174, %r12185, 202;
	// end inline asm
	xor.b32  	%r16235, %r12182, -2004318072;
	// begin inline asm
	mov.b32 %r12189, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12188, %r12189, %r12187;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12191, %r11890, %r12188;
	// end inline asm
	// begin inline asm
	mov.b32 %r12194, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12195, %r12189, %r12194;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12198, %r11898, %r12195;
	// end inline asm
	// begin inline asm
	mov.b32 %r12201, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12202, %r12189, %r12201;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12205, %r11906, %r12202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12209, %r12189, %r12208;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12212, %r11914, %r12209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12215, %r12191, %r12205, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12219, %r12198, %r12212, %r4381;
	// end inline asm
	shl.b32 	%r12226, %r12219, 4;
	// begin inline asm
	lop3.b32 %r12223, %r4387, %r12215, %r12226, 202;
	// end inline asm
	xor.b32  	%r16236, %r12223, -2004318072;
	// begin inline asm
	mov.b32 %r12230, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12228, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12229, %r12230, %r12228;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12232, %r11922, %r12229;
	// end inline asm
	// begin inline asm
	mov.b32 %r12235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12236, %r12230, %r12235;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12239, %r11930, %r12236;
	// end inline asm
	// begin inline asm
	mov.b32 %r12242, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12243, %r12230, %r12242;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12246, %r11938, %r12243;
	// end inline asm
	// begin inline asm
	mov.b32 %r12249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12250, %r12230, %r12249;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12253, %r11946, %r12250;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12256, %r12232, %r12246, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12260, %r12239, %r12253, %r4381;
	// end inline asm
	shl.b32 	%r12267, %r12260, 4;
	// begin inline asm
	lop3.b32 %r12264, %r4387, %r12256, %r12267, 202;
	// end inline asm
	xor.b32  	%r16237, %r12264, -2004318072;
	// begin inline asm
	mov.b32 %r12271, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12269, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12270, %r12271, %r12269;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12273, %r11954, %r12270;
	// end inline asm
	// begin inline asm
	mov.b32 %r12276, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12277, %r12271, %r12276;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12280, %r11962, %r12277;
	// end inline asm
	// begin inline asm
	mov.b32 %r12283, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12284, %r12271, %r12283;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12287, %r11970, %r12284;
	// end inline asm
	// begin inline asm
	mov.b32 %r12290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12291, %r12271, %r12290;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12294, %r11978, %r12291;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12297, %r12273, %r12287, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12301, %r12280, %r12294, %r4381;
	// end inline asm
	shl.b32 	%r12308, %r12301, 4;
	// begin inline asm
	lop3.b32 %r12305, %r4387, %r12297, %r12308, 202;
	// end inline asm
	xor.b32  	%r16238, %r12305, -2004318072;
	st.shared.u32 	[%rd97], %r16231;
	st.shared.u32 	[%rd99], %r16232;
	st.shared.u32 	[%rd101], %r16233;
	st.shared.u32 	[%rd103], %r16234;
	st.shared.u32 	[%rd105], %r16235;
	st.shared.u32 	[%rd107], %r16236;
	st.shared.u32 	[%rd109], %r16237;
	st.shared.u32 	[%rd111], %r16238;
	ld.shared.u32 	%r16360, [%rd81];
	ld.shared.u32 	%r16361, [%rd83];
	ld.shared.u32 	%r16362, [%rd85];
	ld.shared.u32 	%r16363, [%rd87];
	ld.shared.u32 	%r16372, [%rd89];
	ld.shared.u32 	%r16373, [%rd91];
	ld.shared.u32 	%r16374, [%rd93];
	ld.shared.u32 	%r16375, [%rd95];
	// begin inline asm
	mov.b32 %r12314, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12325, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12313, %r16360, -2004318072;
	// begin inline asm
	lop3.b32 %r12311, %r864, %r12313, %r12314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12315, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12316, %r12314, %r12315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12319, %r12311, %r12316;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12322, %r875, %r12313, %r12325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12327, %r12325, %r12326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12330, %r12322, %r12327;
	// end inline asm
	shr.u32 	%r12335, %r12313, 8;
	// begin inline asm
	lop3.b32 %r12333, %r864, %r12335, %r12314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12337, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12338, %r12314, %r12337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12341, %r12333, %r12338;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12344, %r875, %r12335, %r12325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12348, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12349, %r12325, %r12348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12352, %r12344, %r12349;
	// end inline asm
	// begin inline asm
	mov.b32 %r12360, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12371, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12359, %r16361, -2004318072;
	// begin inline asm
	lop3.b32 %r12357, %r864, %r12359, %r12360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12361, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12362, %r12360, %r12361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12365, %r12357, %r12362;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12368, %r875, %r12359, %r12371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12373, %r12371, %r12372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12376, %r12368, %r12373;
	// end inline asm
	shr.u32 	%r12381, %r12359, 8;
	// begin inline asm
	lop3.b32 %r12379, %r864, %r12381, %r12360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12384, %r12360, %r12383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12387, %r12379, %r12384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12390, %r875, %r12381, %r12371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12395, %r12371, %r12394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12398, %r12390, %r12395;
	// end inline asm
	// begin inline asm
	mov.b32 %r12406, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12417, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12405, %r16362, -2004318072;
	// begin inline asm
	lop3.b32 %r12403, %r864, %r12405, %r12406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12408, %r12406, %r12407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12411, %r12403, %r12408;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12414, %r875, %r12405, %r12417, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12419, %r12417, %r12418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12422, %r12414, %r12419;
	// end inline asm
	shr.u32 	%r12427, %r12405, 8;
	// begin inline asm
	lop3.b32 %r12425, %r864, %r12427, %r12406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12429, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12430, %r12406, %r12429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12433, %r12425, %r12430;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12436, %r875, %r12427, %r12417, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12440, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12441, %r12417, %r12440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12444, %r12436, %r12441;
	// end inline asm
	// begin inline asm
	mov.b32 %r12452, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12463, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12451, %r16363, -2004318072;
	// begin inline asm
	lop3.b32 %r12449, %r864, %r12451, %r12452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12454, %r12452, %r12453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12457, %r12449, %r12454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12460, %r875, %r12451, %r12463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12465, %r12463, %r12464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12468, %r12460, %r12465;
	// end inline asm
	shr.u32 	%r12473, %r12451, 8;
	// begin inline asm
	lop3.b32 %r12471, %r864, %r12473, %r12452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12476, %r12452, %r12475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12479, %r12471, %r12476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12482, %r875, %r12473, %r12463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12486, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12487, %r12463, %r12486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12490, %r12482, %r12487;
	// end inline asm
	// begin inline asm
	mov.b32 %r12498, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12509, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12497, %r16372, -2004318072;
	// begin inline asm
	lop3.b32 %r12495, %r864, %r12497, %r12498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12500, %r12498, %r12499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12503, %r12495, %r12500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12506, %r875, %r12497, %r12509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12511, %r12509, %r12510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12514, %r12506, %r12511;
	// end inline asm
	shr.u32 	%r12519, %r12497, 8;
	// begin inline asm
	lop3.b32 %r12517, %r864, %r12519, %r12498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12522, %r12498, %r12521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12525, %r12517, %r12522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12528, %r875, %r12519, %r12509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12533, %r12509, %r12532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12536, %r12528, %r12533;
	// end inline asm
	// begin inline asm
	mov.b32 %r12544, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12555, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12543, %r16373, -2004318072;
	// begin inline asm
	lop3.b32 %r12541, %r864, %r12543, %r12544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12546, %r12544, %r12545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12549, %r12541, %r12546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12552, %r875, %r12543, %r12555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12557, %r12555, %r12556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12560, %r12552, %r12557;
	// end inline asm
	shr.u32 	%r12565, %r12543, 8;
	// begin inline asm
	lop3.b32 %r12563, %r864, %r12565, %r12544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12568, %r12544, %r12567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12571, %r12563, %r12568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12574, %r875, %r12565, %r12555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12579, %r12555, %r12578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12582, %r12574, %r12579;
	// end inline asm
	// begin inline asm
	mov.b32 %r12590, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12601, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12589, %r16374, -2004318072;
	// begin inline asm
	lop3.b32 %r12587, %r864, %r12589, %r12590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12592, %r12590, %r12591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12595, %r12587, %r12592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12598, %r875, %r12589, %r12601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12603, %r12601, %r12602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12606, %r12598, %r12603;
	// end inline asm
	shr.u32 	%r12611, %r12589, 8;
	// begin inline asm
	lop3.b32 %r12609, %r864, %r12611, %r12590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12614, %r12590, %r12613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12617, %r12609, %r12614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12620, %r875, %r12611, %r12601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12625, %r12601, %r12624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12628, %r12620, %r12625;
	// end inline asm
	// begin inline asm
	mov.b32 %r12636, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12647, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12635, %r16375, -2004318072;
	// begin inline asm
	lop3.b32 %r12633, %r864, %r12635, %r12636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12638, %r12636, %r12637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12641, %r12633, %r12638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12644, %r875, %r12635, %r12647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12649, %r12647, %r12648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12652, %r12644, %r12649;
	// end inline asm
	shr.u32 	%r12657, %r12635, 8;
	// begin inline asm
	lop3.b32 %r12655, %r864, %r12657, %r12636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12659, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12660, %r12636, %r12659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12663, %r12655, %r12660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12666, %r875, %r12657, %r12647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12670, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12671, %r12647, %r12670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12674, %r12666, %r12671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12677, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12679, %r12677, %r12319;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12682, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12684, %r12682, %r12330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12687, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12689, %r12687, %r12341;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12692, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12694, %r12692, %r12352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12697, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12699, %r12697, %r12365;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12702, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12704, %r12702, %r12376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12707, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12709, %r12707, %r12387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12712, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12714, %r12712, %r12398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12717, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12719, %r12717, %r12411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12722, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12724, %r12722, %r12422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12727, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12729, %r12727, %r12433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12732, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12734, %r12732, %r12444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12737, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12739, %r12737, %r12457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12742, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12744, %r12742, %r12468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12747, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12749, %r12747, %r12479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12752, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12754, %r12752, %r12490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12757, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12759, %r12757, %r12503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12762, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12764, %r12762, %r12514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12767, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12769, %r12767, %r12525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12772, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12774, %r12772, %r12536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12777, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12779, %r12777, %r12549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12782, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12784, %r12782, %r12560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12787, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12789, %r12787, %r12571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12792, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12794, %r12792, %r12582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12797, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12799, %r12797, %r12595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12802, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12804, %r12802, %r12606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12807, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12809, %r12807, %r12617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12812, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12814, %r12812, %r12628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12817, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12819, %r12817, %r12641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12822, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12824, %r12822, %r12652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12827, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12829, %r12827, %r12663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12832, %r423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12834, %r12832, %r12674;
	// end inline asm
	// begin inline asm
	mov.b32 %r12842, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12853, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12839, %r864, %r865, %r12842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12843, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12844, %r12842, %r12843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12847, %r12839, %r12844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12850, %r875, %r865, %r12853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12854, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12855, %r12853, %r12854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12858, %r12850, %r12855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12861, %r864, %r887, %r12842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12865, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12866, %r12842, %r12865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12869, %r12861, %r12866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12872, %r875, %r887, %r12853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12876, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12877, %r12853, %r12876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12880, %r12872, %r12877;
	// end inline asm
	// begin inline asm
	mov.b32 %r12888, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12899, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12885, %r864, %r911, %r12888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12889, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12890, %r12888, %r12889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12893, %r12885, %r12890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12896, %r875, %r911, %r12899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12900, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12901, %r12899, %r12900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12904, %r12896, %r12901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12907, %r864, %r933, %r12888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12911, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12912, %r12888, %r12911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12915, %r12907, %r12912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12918, %r875, %r933, %r12899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12922, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12923, %r12899, %r12922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12926, %r12918, %r12923;
	// end inline asm
	// begin inline asm
	mov.b32 %r12934, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12945, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12931, %r864, %r957, %r12934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12936, %r12934, %r12935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12939, %r12931, %r12936;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12942, %r875, %r957, %r12945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12947, %r12945, %r12946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12950, %r12942, %r12947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12953, %r864, %r979, %r12934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12958, %r12934, %r12957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12961, %r12953, %r12958;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12964, %r875, %r979, %r12945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12968, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12969, %r12945, %r12968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12972, %r12964, %r12969;
	// end inline asm
	// begin inline asm
	mov.b32 %r12980, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12991, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12977, %r864, %r1003, %r12980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12982, %r12980, %r12981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12985, %r12977, %r12982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12988, %r875, %r1003, %r12991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12993, %r12991, %r12992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12996, %r12988, %r12993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12999, %r864, %r1025, %r12980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13004, %r12980, %r13003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13007, %r12999, %r13004;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13010, %r875, %r1025, %r12991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13014, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13015, %r12991, %r13014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13018, %r13010, %r13015;
	// end inline asm
	// begin inline asm
	mov.b32 %r13026, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13037, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13023, %r864, %r1049, %r13026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13027, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13028, %r13026, %r13027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13031, %r13023, %r13028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13034, %r875, %r1049, %r13037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13039, %r13037, %r13038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13042, %r13034, %r13039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13045, %r864, %r1071, %r13026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13050, %r13026, %r13049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13053, %r13045, %r13050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13056, %r875, %r1071, %r13037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13061, %r13037, %r13060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13064, %r13056, %r13061;
	// end inline asm
	// begin inline asm
	mov.b32 %r13072, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13083, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13069, %r864, %r1095, %r13072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13073, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13074, %r13072, %r13073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13077, %r13069, %r13074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13080, %r875, %r1095, %r13083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13084, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13085, %r13083, %r13084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13088, %r13080, %r13085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13091, %r864, %r1117, %r13072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13096, %r13072, %r13095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13099, %r13091, %r13096;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13102, %r875, %r1117, %r13083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13107, %r13083, %r13106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13110, %r13102, %r13107;
	// end inline asm
	// begin inline asm
	mov.b32 %r13118, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13129, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13115, %r864, %r1141, %r13118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13119, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13120, %r13118, %r13119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13123, %r13115, %r13120;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13126, %r875, %r1141, %r13129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13131, %r13129, %r13130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13134, %r13126, %r13131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13137, %r864, %r1163, %r13118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13142, %r13118, %r13141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13145, %r13137, %r13142;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13148, %r875, %r1163, %r13129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13152, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13153, %r13129, %r13152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13156, %r13148, %r13153;
	// end inline asm
	// begin inline asm
	mov.b32 %r13164, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13175, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13161, %r864, %r1187, %r13164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13165, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13166, %r13164, %r13165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13169, %r13161, %r13166;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13172, %r875, %r1187, %r13175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13177, %r13175, %r13176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13180, %r13172, %r13177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13183, %r864, %r1209, %r13164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13188, %r13164, %r13187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13191, %r13183, %r13188;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13194, %r875, %r1209, %r13175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13198, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13199, %r13175, %r13198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13202, %r13194, %r13199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13205, %r297, %r12847, %r12679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13209, %r297, %r12858, %r12684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13213, %r297, %r12869, %r12689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13217, %r297, %r12880, %r12694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13221, %r297, %r12893, %r12699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13225, %r297, %r12904, %r12704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13229, %r297, %r12915, %r12709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13233, %r297, %r12926, %r12714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13237, %r297, %r12939, %r12719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13241, %r297, %r12950, %r12724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13245, %r297, %r12961, %r12729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13249, %r297, %r12972, %r12734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13253, %r297, %r12985, %r12739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13257, %r297, %r12996, %r12744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13261, %r297, %r13007, %r12749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13265, %r297, %r13018, %r12754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13269, %r315, %r13031, %r12759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13273, %r315, %r13042, %r12764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13277, %r315, %r13053, %r12769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13281, %r315, %r13064, %r12774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13285, %r315, %r13077, %r12779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13289, %r315, %r13088, %r12784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13293, %r315, %r13099, %r12789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13297, %r315, %r13110, %r12794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13301, %r315, %r13123, %r12799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13305, %r315, %r13134, %r12804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13309, %r315, %r13145, %r12809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13313, %r315, %r13156, %r12814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13317, %r315, %r13169, %r12819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13321, %r315, %r13180, %r12824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13325, %r315, %r13191, %r12829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13329, %r315, %r13202, %r12834;
	// end inline asm
	// begin inline asm
	mov.b32 %r13338, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13349, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13335, %r864, %r4681, %r13338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13339, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13340, %r13338, %r13339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13343, %r13335, %r13340;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13346, %r875, %r4681, %r13349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13350, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13351, %r13349, %r13350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13354, %r13346, %r13351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13357, %r864, %r4703, %r13338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13361, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13362, %r13338, %r13361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13365, %r13357, %r13362;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13368, %r875, %r4703, %r13349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13373, %r13349, %r13372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13376, %r13368, %r13373;
	// end inline asm
	// begin inline asm
	mov.b32 %r13384, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13395, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13381, %r864, %r4727, %r13384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13385, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13386, %r13384, %r13385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13389, %r13381, %r13386;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13392, %r875, %r4727, %r13395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13396, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13397, %r13395, %r13396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13400, %r13392, %r13397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13403, %r864, %r4749, %r13384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13408, %r13384, %r13407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13411, %r13403, %r13408;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13414, %r875, %r4749, %r13395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13419, %r13395, %r13418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13422, %r13414, %r13419;
	// end inline asm
	// begin inline asm
	mov.b32 %r13430, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13441, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13427, %r864, %r4773, %r13430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13431, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13432, %r13430, %r13431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13435, %r13427, %r13432;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13438, %r875, %r4773, %r13441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13443, %r13441, %r13442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13446, %r13438, %r13443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13449, %r864, %r4795, %r13430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13454, %r13430, %r13453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13457, %r13449, %r13454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13460, %r875, %r4795, %r13441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13465, %r13441, %r13464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13468, %r13460, %r13465;
	// end inline asm
	// begin inline asm
	mov.b32 %r13476, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13487, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13473, %r864, %r4819, %r13476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13477, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13478, %r13476, %r13477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13481, %r13473, %r13478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13484, %r875, %r4819, %r13487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13488, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13489, %r13487, %r13488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13492, %r13484, %r13489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13495, %r864, %r4841, %r13476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13500, %r13476, %r13499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13503, %r13495, %r13500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13506, %r875, %r4841, %r13487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13511, %r13487, %r13510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13514, %r13506, %r13511;
	// end inline asm
	// begin inline asm
	mov.b32 %r13522, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13533, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13519, %r864, %r4865, %r13522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13523, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13524, %r13522, %r13523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13527, %r13519, %r13524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13530, %r875, %r4865, %r13533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13534, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13535, %r13533, %r13534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13538, %r13530, %r13535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13541, %r864, %r4887, %r13522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13546, %r13522, %r13545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13549, %r13541, %r13546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13552, %r875, %r4887, %r13533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13557, %r13533, %r13556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13560, %r13552, %r13557;
	// end inline asm
	// begin inline asm
	mov.b32 %r13568, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13579, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13565, %r864, %r4911, %r13568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13569, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13570, %r13568, %r13569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13573, %r13565, %r13570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13576, %r875, %r4911, %r13579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13580, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13581, %r13579, %r13580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13584, %r13576, %r13581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13587, %r864, %r4933, %r13568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13592, %r13568, %r13591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13595, %r13587, %r13592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13598, %r875, %r4933, %r13579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13603, %r13579, %r13602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13606, %r13598, %r13603;
	// end inline asm
	// begin inline asm
	mov.b32 %r13614, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13625, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13611, %r864, %r4957, %r13614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13615, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13616, %r13614, %r13615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13619, %r13611, %r13616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13622, %r875, %r4957, %r13625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13626, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13627, %r13625, %r13626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13630, %r13622, %r13627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13633, %r864, %r4979, %r13614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13638, %r13614, %r13637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13641, %r13633, %r13638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13644, %r875, %r4979, %r13625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13649, %r13625, %r13648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13652, %r13644, %r13649;
	// end inline asm
	// begin inline asm
	mov.b32 %r13660, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13671, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13657, %r864, %r5003, %r13660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13661, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13662, %r13660, %r13661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13665, %r13657, %r13662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13668, %r875, %r5003, %r13671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13672, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13673, %r13671, %r13672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13676, %r13668, %r13673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13679, %r864, %r5025, %r13660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13683, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13684, %r13660, %r13683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13687, %r13679, %r13684;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13690, %r875, %r5025, %r13671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13694, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13695, %r13671, %r13694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13698, %r13690, %r13695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13701, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13703, %r13701, %r13343, %r13205;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13707, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13709, %r13707, %r13354, %r13209;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13713, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13715, %r13713, %r13365, %r13213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13719, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13721, %r13719, %r13376, %r13217;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13725, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13727, %r13725, %r13389, %r13221;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13731, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13733, %r13731, %r13400, %r13225;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13737, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13739, %r13737, %r13411, %r13229;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13743, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13745, %r13743, %r13422, %r13233;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13749, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13751, %r13749, %r13435, %r13237;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13755, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13757, %r13755, %r13446, %r13241;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13761, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13763, %r13761, %r13457, %r13245;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13767, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13769, %r13767, %r13468, %r13249;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13773, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13775, %r13773, %r13481, %r13253;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13779, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13781, %r13779, %r13492, %r13257;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13785, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13787, %r13785, %r13503, %r13261;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13791, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13793, %r13791, %r13514, %r13265;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13797, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13799, %r13797, %r13527, %r13269;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13803, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13805, %r13803, %r13538, %r13273;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13809, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13811, %r13809, %r13549, %r13277;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13815, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13817, %r13815, %r13560, %r13281;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13821, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13823, %r13821, %r13573, %r13285;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13827, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13829, %r13827, %r13584, %r13289;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13833, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13835, %r13833, %r13595, %r13293;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13839, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13841, %r13839, %r13606, %r13297;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13845, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13847, %r13845, %r13619, %r13301;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13851, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13853, %r13851, %r13630, %r13305;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13857, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13859, %r13857, %r13641, %r13309;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13863, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13865, %r13863, %r13652, %r13313;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13869, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13871, %r13869, %r13665, %r13317;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13875, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13877, %r13875, %r13676, %r13321;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13881, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13883, %r13881, %r13687, %r13325;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13887, %r351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13889, %r13887, %r13698, %r13329;
	// end inline asm
	// begin inline asm
	mov.b32 %r13898, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13909, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13895, %r864, %r8497, %r13898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13899, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13900, %r13898, %r13899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13903, %r13895, %r13900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13906, %r875, %r8497, %r13909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13910, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13911, %r13909, %r13910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13914, %r13906, %r13911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13917, %r864, %r8519, %r13898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13921, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13922, %r13898, %r13921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13925, %r13917, %r13922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13928, %r875, %r8519, %r13909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13932, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13933, %r13909, %r13932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13936, %r13928, %r13933;
	// end inline asm
	// begin inline asm
	mov.b32 %r13944, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13955, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13941, %r864, %r8543, %r13944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13945, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13946, %r13944, %r13945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13949, %r13941, %r13946;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13952, %r875, %r8543, %r13955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13956, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13957, %r13955, %r13956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13960, %r13952, %r13957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13963, %r864, %r8565, %r13944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13967, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13968, %r13944, %r13967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13971, %r13963, %r13968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13974, %r875, %r8565, %r13955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13979, %r13955, %r13978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13982, %r13974, %r13979;
	// end inline asm
	// begin inline asm
	mov.b32 %r13990, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14001, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13987, %r864, %r8589, %r13990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13991, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13992, %r13990, %r13991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13995, %r13987, %r13992;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13998, %r875, %r8589, %r14001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14002, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14003, %r14001, %r14002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14006, %r13998, %r14003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14009, %r864, %r8611, %r13990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14013, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14014, %r13990, %r14013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14017, %r14009, %r14014;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14020, %r875, %r8611, %r14001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14025, %r14001, %r14024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14028, %r14020, %r14025;
	// end inline asm
	// begin inline asm
	mov.b32 %r14036, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14047, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14033, %r864, %r8635, %r14036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14037, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14038, %r14036, %r14037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14041, %r14033, %r14038;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14044, %r875, %r8635, %r14047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14048, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14049, %r14047, %r14048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14052, %r14044, %r14049;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14055, %r864, %r8657, %r14036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14059, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14060, %r14036, %r14059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14063, %r14055, %r14060;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14066, %r875, %r8657, %r14047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14070, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14071, %r14047, %r14070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14074, %r14066, %r14071;
	// end inline asm
	// begin inline asm
	mov.b32 %r14082, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14093, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14079, %r864, %r8681, %r14082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14083, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14084, %r14082, %r14083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14087, %r14079, %r14084;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14090, %r875, %r8681, %r14093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14094, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14095, %r14093, %r14094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14098, %r14090, %r14095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14101, %r864, %r8703, %r14082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14105, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14106, %r14082, %r14105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14109, %r14101, %r14106;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14112, %r875, %r8703, %r14093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14116, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14117, %r14093, %r14116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14120, %r14112, %r14117;
	// end inline asm
	// begin inline asm
	mov.b32 %r14128, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14139, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14125, %r864, %r8727, %r14128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14129, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14130, %r14128, %r14129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14133, %r14125, %r14130;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14136, %r875, %r8727, %r14139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14140, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14141, %r14139, %r14140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14144, %r14136, %r14141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14147, %r864, %r8749, %r14128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14151, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14152, %r14128, %r14151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14155, %r14147, %r14152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14158, %r875, %r8749, %r14139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14163, %r14139, %r14162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14166, %r14158, %r14163;
	// end inline asm
	// begin inline asm
	mov.b32 %r14174, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14185, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14171, %r864, %r8773, %r14174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14175, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14176, %r14174, %r14175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14179, %r14171, %r14176;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14182, %r875, %r8773, %r14185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14186, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14187, %r14185, %r14186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14190, %r14182, %r14187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14193, %r864, %r8795, %r14174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14197, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14198, %r14174, %r14197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14201, %r14193, %r14198;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14204, %r875, %r8795, %r14185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14209, %r14185, %r14208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14212, %r14204, %r14209;
	// end inline asm
	// begin inline asm
	mov.b32 %r14220, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14231, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14217, %r864, %r8819, %r14220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14221, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14222, %r14220, %r14221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14225, %r14217, %r14222;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14228, %r875, %r8819, %r14231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14232, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14233, %r14231, %r14232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14236, %r14228, %r14233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14239, %r864, %r8841, %r14220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14243, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14244, %r14220, %r14243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14247, %r14239, %r14244;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14250, %r875, %r8841, %r14231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14254, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14255, %r14231, %r14254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14258, %r14250, %r14255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14396, %r369, %r13903, %r13703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14393, %r369, %r13914, %r13709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14405, %r369, %r13925, %r13715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14402, %r369, %r13936, %r13721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14414, %r369, %r13949, %r13727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14411, %r369, %r13960, %r13733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14423, %r369, %r13971, %r13739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14420, %r369, %r13982, %r13745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14432, %r369, %r13995, %r13751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14429, %r369, %r14006, %r13757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14441, %r369, %r14017, %r13763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14438, %r369, %r14028, %r13769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14450, %r369, %r14041, %r13775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14447, %r369, %r14052, %r13781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14459, %r369, %r14063, %r13787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14456, %r369, %r14074, %r13793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14468, %r387, %r14087, %r13799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14465, %r387, %r14098, %r13805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14477, %r387, %r14109, %r13811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14474, %r387, %r14120, %r13817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14486, %r387, %r14133, %r13823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14483, %r387, %r14144, %r13829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14495, %r387, %r14155, %r13835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14492, %r387, %r14166, %r13841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14504, %r387, %r14179, %r13847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14501, %r387, %r14190, %r13853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14513, %r387, %r14201, %r13859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14510, %r387, %r14212, %r13865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14522, %r387, %r14225, %r13871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14519, %r387, %r14236, %r13877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14531, %r387, %r14247, %r13883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14528, %r387, %r14258, %r13889;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14389, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14391, %r14389, %r14393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14394, %r426, %r14396, %r14391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14398, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14400, %r14398, %r14402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14403, %r426, %r14405, %r14400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14407, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14409, %r14407, %r14411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14412, %r426, %r14414, %r14409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14416, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14418, %r14416, %r14420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14421, %r426, %r14423, %r14418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14425, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14427, %r14425, %r14429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14430, %r426, %r14432, %r14427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14434, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14436, %r14434, %r14438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14439, %r426, %r14441, %r14436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14443, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14445, %r14443, %r14447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14448, %r426, %r14450, %r14445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14452, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14454, %r14452, %r14456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14457, %r426, %r14459, %r14454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14461, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14463, %r14461, %r14465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14466, %r429, %r14468, %r14463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14470, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14472, %r14470, %r14474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14475, %r429, %r14477, %r14472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14479, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14481, %r14479, %r14483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14484, %r429, %r14486, %r14481;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14488, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14490, %r14488, %r14492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14493, %r429, %r14495, %r14490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14497, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14499, %r14497, %r14501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14502, %r429, %r14504, %r14499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14506, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14508, %r14506, %r14510;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14511, %r429, %r14513, %r14508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14515, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14517, %r14515, %r14519;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14520, %r429, %r14522, %r14517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14524, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14526, %r14524, %r14528;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14529, %r429, %r14531, %r14526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14533, %r432, %r14396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14536, %r426, %r14393, %r14533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14540, %r432, %r14405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14543, %r426, %r14402, %r14540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14547, %r432, %r14414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14550, %r426, %r14411, %r14547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14554, %r432, %r14423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14557, %r426, %r14420, %r14554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14561, %r432, %r14432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14564, %r426, %r14429, %r14561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14568, %r432, %r14441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14571, %r426, %r14438, %r14568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14575, %r432, %r14450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14578, %r426, %r14447, %r14575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14582, %r432, %r14459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14585, %r426, %r14456, %r14582;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14589, %r435, %r14468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14592, %r429, %r14465, %r14589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14596, %r435, %r14477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14599, %r429, %r14474, %r14596;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14603, %r435, %r14486;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14606, %r429, %r14483, %r14603;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14610, %r435, %r14495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14613, %r429, %r14492, %r14610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14617, %r435, %r14504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14620, %r429, %r14501, %r14617;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14624, %r435, %r14513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14627, %r429, %r14510, %r14624;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14631, %r435, %r14522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14634, %r429, %r14519, %r14631;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14638, %r435, %r14531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14641, %r429, %r14528, %r14638;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14812, %r14809}, {%r493, %r499, %r496, %r502}, {%r14394, %r14536}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14821, %r14818}, {%r493, %r499, %r496, %r502}, {%r14403, %r14543}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14830, %r14827}, {%r493, %r499, %r496, %r502}, {%r14412, %r14550}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14839, %r14836}, {%r493, %r499, %r496, %r502}, {%r14421, %r14557}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14848, %r14845}, {%r493, %r499, %r496, %r502}, {%r14430, %r14564}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14857, %r14854}, {%r493, %r499, %r496, %r502}, {%r14439, %r14571}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14866, %r14863}, {%r493, %r499, %r496, %r502}, {%r14448, %r14578}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14875, %r14872}, {%r493, %r499, %r496, %r502}, {%r14457, %r14585}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14884, %r14881}, {%r493, %r499, %r496, %r502}, {%r14466, %r14592}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14893, %r14890}, {%r493, %r499, %r496, %r502}, {%r14475, %r14599}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14902, %r14899}, {%r493, %r499, %r496, %r502}, {%r14484, %r14606}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14911, %r14908}, {%r493, %r499, %r496, %r502}, {%r14493, %r14613}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14920, %r14917}, {%r493, %r499, %r496, %r502}, {%r14502, %r14620}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14929, %r14926}, {%r493, %r499, %r496, %r502}, {%r14511, %r14627}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14938, %r14935}, {%r493, %r499, %r496, %r502}, {%r14520, %r14634}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14947, %r14944}, {%r493, %r499, %r496, %r502}, {%r14529, %r14641}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14805, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14807, %r14805, %r14809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14810, %r543, %r14812, %r14807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14814, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14816, %r14814, %r14818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14819, %r543, %r14821, %r14816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14823, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14825, %r14823, %r14827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14828, %r543, %r14830, %r14825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14832, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14834, %r14832, %r14836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14837, %r543, %r14839, %r14834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14841, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14843, %r14841, %r14845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14846, %r543, %r14848, %r14843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14850, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14852, %r14850, %r14854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14855, %r543, %r14857, %r14852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14859, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14861, %r14859, %r14863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14864, %r543, %r14866, %r14861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14868, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14870, %r14868, %r14872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14873, %r543, %r14875, %r14870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14877, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14879, %r14877, %r14881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14882, %r543, %r14884, %r14879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14886, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14888, %r14886, %r14890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14891, %r543, %r14893, %r14888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14895, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14897, %r14895, %r14899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14900, %r543, %r14902, %r14897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14904, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14906, %r14904, %r14908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14909, %r543, %r14911, %r14906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14913, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14915, %r14913, %r14917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14918, %r543, %r14920, %r14915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14922, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14924, %r14922, %r14926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14927, %r543, %r14929, %r14924;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14931, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14933, %r14931, %r14935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14936, %r543, %r14938, %r14933;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14940, %r546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14942, %r14940, %r14944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14945, %r543, %r14947, %r14942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14949, %r546, %r14812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14952, %r543, %r14809, %r14949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14956, %r546, %r14821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14959, %r543, %r14818, %r14956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14963, %r546, %r14830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14966, %r543, %r14827, %r14963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14970, %r546, %r14839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14973, %r543, %r14836, %r14970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14977, %r546, %r14848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14980, %r543, %r14845, %r14977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14984, %r546, %r14857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14987, %r543, %r14854, %r14984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14991, %r546, %r14866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14994, %r543, %r14863, %r14991;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14998, %r546, %r14875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15001, %r543, %r14872, %r14998;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15005, %r546, %r14884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15008, %r543, %r14881, %r15005;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15012, %r546, %r14893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15015, %r543, %r14890, %r15012;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15019, %r546, %r14902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15022, %r543, %r14899, %r15019;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15026, %r546, %r14911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15029, %r543, %r14908, %r15026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15033, %r546, %r14920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15036, %r543, %r14917, %r15033;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15040, %r546, %r14929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15043, %r543, %r14926, %r15040;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15047, %r546, %r14938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15050, %r543, %r14935, %r15047;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15054, %r546, %r14947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15057, %r543, %r14944, %r15054;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15350, %r15353}, {%r581, %r587, %r584, %r590}, {%r14810, %r14952}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15356, %r15359}, {%r581, %r587, %r584, %r590}, {%r14819, %r14959}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15362, %r15365}, {%r581, %r587, %r584, %r590}, {%r14828, %r14966}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15368, %r15371}, {%r581, %r587, %r584, %r590}, {%r14837, %r14973}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15374, %r15377}, {%r581, %r587, %r584, %r590}, {%r14846, %r14980}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15380, %r15383}, {%r581, %r587, %r584, %r590}, {%r14855, %r14987}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15386, %r15389}, {%r581, %r587, %r584, %r590}, {%r14864, %r14994}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15392, %r15395}, {%r581, %r587, %r584, %r590}, {%r14873, %r15001}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15351, %r15354}, {%r581, %r587, %r584, %r590}, {%r14882, %r15008}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15357, %r15360}, {%r581, %r587, %r584, %r590}, {%r14891, %r15015}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15363, %r15366}, {%r581, %r587, %r584, %r590}, {%r14900, %r15022}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15369, %r15372}, {%r581, %r587, %r584, %r590}, {%r14909, %r15029}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15375, %r15378}, {%r581, %r587, %r584, %r590}, {%r14918, %r15036}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15381, %r15384}, {%r581, %r587, %r584, %r590}, {%r14927, %r15043}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15387, %r15390}, {%r581, %r587, %r584, %r590}, {%r14936, %r15050}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15393, %r15396}, {%r581, %r587, %r584, %r590}, {%r14945, %r15057}, {%r782, %r782};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15349, %r15350, %r15351;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15352, %r15353, %r15354;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15355, %r15356, %r15357;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15358, %r15359, %r15360;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15361, %r15362, %r15363;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15364, %r15365, %r15366;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15367, %r15368, %r15369;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15370, %r15371, %r15372;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15373, %r15374, %r15375;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15376, %r15377, %r15378;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15379, %r15380, %r15381;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15382, %r15383, %r15384;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15385, %r15386, %r15387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15388, %r15389, %r15390;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15391, %r15392, %r15393;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15394, %r15395, %r15396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15397, %r15350, %r15351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15400, %r15353, %r15354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15403, %r15356, %r15357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15406, %r15359, %r15360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15409, %r15362, %r15363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15412, %r15365, %r15366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15415, %r15368, %r15369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15418, %r15371, %r15372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15421, %r15374, %r15375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15424, %r15377, %r15378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15427, %r15380, %r15381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15430, %r15383, %r15384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15433, %r15386, %r15387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15436, %r15389, %r15390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15439, %r15392, %r15393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15442, %r15395, %r15396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15445, %r182, %r15349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15448, %r182, %r15352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15451, %r182, %r15355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15454, %r182, %r15358;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15457, %r182, %r15361;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15460, %r182, %r15364;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15463, %r182, %r15367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15466, %r182, %r15370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15469, %r182, %r15373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15472, %r182, %r15376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15475, %r182, %r15379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15478, %r182, %r15382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15481, %r182, %r15385;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15484, %r182, %r15388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15487, %r182, %r15391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15490, %r182, %r15394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15493, %r184, %r15397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15496, %r184, %r15400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15499, %r184, %r15403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15502, %r184, %r15406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15505, %r184, %r15409;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15508, %r184, %r15412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15511, %r184, %r15415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15514, %r184, %r15418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15517, %r184, %r15421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15520, %r184, %r15424;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15523, %r184, %r15427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15526, %r184, %r15430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15529, %r184, %r15433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15532, %r184, %r15436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15535, %r184, %r15439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15538, %r184, %r15442;
	// end inline asm
	// begin inline asm
	mov.b32 %r15541, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15542, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15543, %r15445, %r15541;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15546, %r15543, %r15542;
	// end inline asm
	// begin inline asm
	mov.b32 %r15549, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15550, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15551, %r15448, %r15549;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15554, %r15551, %r15550;
	// end inline asm
	// begin inline asm
	mov.b32 %r15557, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15558, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15559, %r15451, %r15557;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15562, %r15559, %r15558;
	// end inline asm
	// begin inline asm
	mov.b32 %r15565, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15566, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15567, %r15454, %r15565;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15570, %r15567, %r15566;
	// end inline asm
	// begin inline asm
	mov.b32 %r15573, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15574, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15575, %r15457, %r15573;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15578, %r15575, %r15574;
	// end inline asm
	// begin inline asm
	mov.b32 %r15581, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15582, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15583, %r15460, %r15581;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15586, %r15583, %r15582;
	// end inline asm
	// begin inline asm
	mov.b32 %r15589, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15590, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15591, %r15463, %r15589;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15594, %r15591, %r15590;
	// end inline asm
	// begin inline asm
	mov.b32 %r15597, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15598, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15599, %r15466, %r15597;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15602, %r15599, %r15598;
	// end inline asm
	// begin inline asm
	mov.b32 %r15605, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15606, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15607, %r15469, %r15605;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15610, %r15607, %r15606;
	// end inline asm
	// begin inline asm
	mov.b32 %r15613, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15614, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15615, %r15472, %r15613;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15618, %r15615, %r15614;
	// end inline asm
	// begin inline asm
	mov.b32 %r15621, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15622, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15623, %r15475, %r15621;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15626, %r15623, %r15622;
	// end inline asm
	// begin inline asm
	mov.b32 %r15629, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15630, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15631, %r15478, %r15629;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15634, %r15631, %r15630;
	// end inline asm
	// begin inline asm
	mov.b32 %r15637, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15638, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15639, %r15481, %r15637;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15642, %r15639, %r15638;
	// end inline asm
	// begin inline asm
	mov.b32 %r15645, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15646, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15647, %r15484, %r15645;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15650, %r15647, %r15646;
	// end inline asm
	// begin inline asm
	mov.b32 %r15653, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15654, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15655, %r15487, %r15653;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15658, %r15655, %r15654;
	// end inline asm
	// begin inline asm
	mov.b32 %r15661, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15662, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15663, %r15490, %r15661;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15666, %r15663, %r15662;
	// end inline asm
	// begin inline asm
	mov.b32 %r15669, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15670, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15671, %r15493, %r15669;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15674, %r15671, %r15670;
	// end inline asm
	// begin inline asm
	mov.b32 %r15677, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15678, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15679, %r15496, %r15677;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15682, %r15679, %r15678;
	// end inline asm
	// begin inline asm
	mov.b32 %r15685, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15686, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15687, %r15499, %r15685;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15690, %r15687, %r15686;
	// end inline asm
	// begin inline asm
	mov.b32 %r15693, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15694, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15695, %r15502, %r15693;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15698, %r15695, %r15694;
	// end inline asm
	// begin inline asm
	mov.b32 %r15701, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15702, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15703, %r15505, %r15701;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15706, %r15703, %r15702;
	// end inline asm
	// begin inline asm
	mov.b32 %r15709, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15710, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15711, %r15508, %r15709;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15714, %r15711, %r15710;
	// end inline asm
	// begin inline asm
	mov.b32 %r15717, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15718, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15719, %r15511, %r15717;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15722, %r15719, %r15718;
	// end inline asm
	// begin inline asm
	mov.b32 %r15725, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15726, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15727, %r15514, %r15725;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15730, %r15727, %r15726;
	// end inline asm
	// begin inline asm
	mov.b32 %r15733, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15734, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15735, %r15517, %r15733;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15738, %r15735, %r15734;
	// end inline asm
	// begin inline asm
	mov.b32 %r15741, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15742, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15743, %r15520, %r15741;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15746, %r15743, %r15742;
	// end inline asm
	// begin inline asm
	mov.b32 %r15749, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15750, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15751, %r15523, %r15749;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15754, %r15751, %r15750;
	// end inline asm
	// begin inline asm
	mov.b32 %r15757, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15758, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15759, %r15526, %r15757;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15762, %r15759, %r15758;
	// end inline asm
	// begin inline asm
	mov.b32 %r15765, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15766, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15767, %r15529, %r15765;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15770, %r15767, %r15766;
	// end inline asm
	// begin inline asm
	mov.b32 %r15773, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15774, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15775, %r15532, %r15773;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15778, %r15775, %r15774;
	// end inline asm
	// begin inline asm
	mov.b32 %r15781, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15782, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15783, %r15535, %r15781;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15786, %r15783, %r15782;
	// end inline asm
	// begin inline asm
	mov.b32 %r15789, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15790, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15791, %r15538, %r15789;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15794, %r15791, %r15790;
	// end inline asm
	// begin inline asm
	mov.b32 %r15800, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15798, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15799, %r15800, %r15798;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15802, %r15546, %r15799;
	// end inline asm
	// begin inline asm
	mov.b32 %r15805, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15806, %r15800, %r15805;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15809, %r15554, %r15806;
	// end inline asm
	// begin inline asm
	mov.b32 %r15812, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15813, %r15800, %r15812;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15816, %r15562, %r15813;
	// end inline asm
	// begin inline asm
	mov.b32 %r15819, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15820, %r15800, %r15819;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15823, %r15570, %r15820;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15826, %r15802, %r15816, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15830, %r15809, %r15823, %r4381;
	// end inline asm
	shl.b32 	%r15837, %r15830, 4;
	// begin inline asm
	lop3.b32 %r15834, %r4387, %r15826, %r15837, 202;
	// end inline asm
	xor.b32  	%r16239, %r15834, -2004318072;
	// begin inline asm
	mov.b32 %r15841, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15839, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15840, %r15841, %r15839;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15843, %r15578, %r15840;
	// end inline asm
	// begin inline asm
	mov.b32 %r15846, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15847, %r15841, %r15846;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15850, %r15586, %r15847;
	// end inline asm
	// begin inline asm
	mov.b32 %r15853, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15854, %r15841, %r15853;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15857, %r15594, %r15854;
	// end inline asm
	// begin inline asm
	mov.b32 %r15860, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15861, %r15841, %r15860;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15864, %r15602, %r15861;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15867, %r15843, %r15857, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15871, %r15850, %r15864, %r4381;
	// end inline asm
	shl.b32 	%r15878, %r15871, 4;
	// begin inline asm
	lop3.b32 %r15875, %r4387, %r15867, %r15878, 202;
	// end inline asm
	xor.b32  	%r16240, %r15875, -2004318072;
	// begin inline asm
	mov.b32 %r15882, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15880, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15881, %r15882, %r15880;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15884, %r15610, %r15881;
	// end inline asm
	// begin inline asm
	mov.b32 %r15887, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15888, %r15882, %r15887;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15891, %r15618, %r15888;
	// end inline asm
	// begin inline asm
	mov.b32 %r15894, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15895, %r15882, %r15894;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15898, %r15626, %r15895;
	// end inline asm
	// begin inline asm
	mov.b32 %r15901, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15902, %r15882, %r15901;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15905, %r15634, %r15902;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15908, %r15884, %r15898, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15912, %r15891, %r15905, %r4381;
	// end inline asm
	shl.b32 	%r15919, %r15912, 4;
	// begin inline asm
	lop3.b32 %r15916, %r4387, %r15908, %r15919, 202;
	// end inline asm
	xor.b32  	%r16241, %r15916, -2004318072;
	// begin inline asm
	mov.b32 %r15923, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15921, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15922, %r15923, %r15921;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15925, %r15642, %r15922;
	// end inline asm
	// begin inline asm
	mov.b32 %r15928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15929, %r15923, %r15928;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15932, %r15650, %r15929;
	// end inline asm
	// begin inline asm
	mov.b32 %r15935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15936, %r15923, %r15935;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15939, %r15658, %r15936;
	// end inline asm
	// begin inline asm
	mov.b32 %r15942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15943, %r15923, %r15942;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15946, %r15666, %r15943;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15949, %r15925, %r15939, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15953, %r15932, %r15946, %r4381;
	// end inline asm
	shl.b32 	%r15960, %r15953, 4;
	// begin inline asm
	lop3.b32 %r15957, %r4387, %r15949, %r15960, 202;
	// end inline asm
	xor.b32  	%r16242, %r15957, -2004318072;
	// begin inline asm
	mov.b32 %r15964, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15963, %r15964, %r15962;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15966, %r15674, %r15963;
	// end inline asm
	// begin inline asm
	mov.b32 %r15969, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15970, %r15964, %r15969;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15973, %r15682, %r15970;
	// end inline asm
	// begin inline asm
	mov.b32 %r15976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15977, %r15964, %r15976;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15980, %r15690, %r15977;
	// end inline asm
	// begin inline asm
	mov.b32 %r15983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15984, %r15964, %r15983;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15987, %r15698, %r15984;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15990, %r15966, %r15980, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15994, %r15973, %r15987, %r4381;
	// end inline asm
	shl.b32 	%r16001, %r15994, 4;
	// begin inline asm
	lop3.b32 %r15998, %r4387, %r15990, %r16001, 202;
	// end inline asm
	xor.b32  	%r16243, %r15998, -2004318072;
	// begin inline asm
	mov.b32 %r16005, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16004, %r16005, %r16003;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16007, %r15706, %r16004;
	// end inline asm
	// begin inline asm
	mov.b32 %r16010, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16011, %r16005, %r16010;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16014, %r15714, %r16011;
	// end inline asm
	// begin inline asm
	mov.b32 %r16017, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16018, %r16005, %r16017;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16021, %r15722, %r16018;
	// end inline asm
	// begin inline asm
	mov.b32 %r16024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16025, %r16005, %r16024;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16028, %r15730, %r16025;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16031, %r16007, %r16021, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16035, %r16014, %r16028, %r4381;
	// end inline asm
	shl.b32 	%r16042, %r16035, 4;
	// begin inline asm
	lop3.b32 %r16039, %r4387, %r16031, %r16042, 202;
	// end inline asm
	xor.b32  	%r16244, %r16039, -2004318072;
	// begin inline asm
	mov.b32 %r16046, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16045, %r16046, %r16044;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16048, %r15738, %r16045;
	// end inline asm
	// begin inline asm
	mov.b32 %r16051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16052, %r16046, %r16051;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16055, %r15746, %r16052;
	// end inline asm
	// begin inline asm
	mov.b32 %r16058, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16059, %r16046, %r16058;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16062, %r15754, %r16059;
	// end inline asm
	// begin inline asm
	mov.b32 %r16065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16066, %r16046, %r16065;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16069, %r15762, %r16066;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16072, %r16048, %r16062, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16076, %r16055, %r16069, %r4381;
	// end inline asm
	shl.b32 	%r16083, %r16076, 4;
	// begin inline asm
	lop3.b32 %r16080, %r4387, %r16072, %r16083, 202;
	// end inline asm
	xor.b32  	%r16245, %r16080, -2004318072;
	// begin inline asm
	mov.b32 %r16087, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16086, %r16087, %r16085;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16089, %r15770, %r16086;
	// end inline asm
	// begin inline asm
	mov.b32 %r16092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16093, %r16087, %r16092;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16096, %r15778, %r16093;
	// end inline asm
	// begin inline asm
	mov.b32 %r16099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16100, %r16087, %r16099;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16103, %r15786, %r16100;
	// end inline asm
	// begin inline asm
	mov.b32 %r16106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16107, %r16087, %r16106;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16110, %r15794, %r16107;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16113, %r16089, %r16103, %r4381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16117, %r16096, %r16110, %r4381;
	// end inline asm
	shl.b32 	%r16124, %r16117, 4;
	// begin inline asm
	lop3.b32 %r16121, %r4387, %r16113, %r16124, 202;
	// end inline asm
	xor.b32  	%r16246, %r16121, -2004318072;
	st.shared.u32 	[%rd97], %r16239;
	st.shared.u32 	[%rd99], %r16240;
	st.shared.u32 	[%rd101], %r16241;
	st.shared.u32 	[%rd103], %r16242;
	st.shared.u32 	[%rd105], %r16243;
	st.shared.u32 	[%rd107], %r16244;
	st.shared.u32 	[%rd109], %r16245;
	st.shared.u32 	[%rd111], %r16246;
	add.s32 	%r16401, %r16401, 128;
	setp.eq.s32 	%p306, %r16401, 256;
	@%p306 bra 	$L__BB0_119;
	bra.uni 	$L__BB0_118;
$L__BB0_119:                            // %guard_exit29633
                                        //   in Loop: Header=BB0_116 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16252, [%rd5];
	ld.shared.u32 	%r16253, [%rd6+128];
	ld.shared.u32 	%r16260, [%rd6+4];
	ld.shared.u32 	%r16261, [%rd6+132];
	ld.shared.u32 	%r16268, [%rd7];
	ld.shared.u32 	%r16269, [%rd8+128];
	ld.shared.u32 	%r16276, [%rd8+4];
	ld.shared.u32 	%r16277, [%rd8+132];
	ld.shared.u32 	%r16284, [%rd5+16644];
	ld.shared.u32 	%r16285, [%rd6+16772];
	ld.shared.u32 	%r16292, [%rd6+16648];
	ld.shared.u32 	%r16293, [%rd6+16776];
	ld.shared.u32 	%r16300, [%rd7+16644];
	ld.shared.u32 	%r16301, [%rd8+16772];
	ld.shared.u32 	%r16308, [%rd8+16648];
	ld.shared.u32 	%r16309, [%rd8+16776];
	// begin inline asm
	prmt.b32 %r16247, %r16252, %r16253, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16251, %r16252, %r16253, %r781;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16255, %r16260, %r16261, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16259, %r16260, %r16261, %r781;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16263, %r16268, %r16269, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16267, %r16268, %r16269, %r781;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16271, %r16276, %r16277, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16275, %r16276, %r16277, %r781;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16279, %r16284, %r16285, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16283, %r16284, %r16285, %r781;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16287, %r16292, %r16293, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16291, %r16292, %r16293, %r781;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16295, %r16300, %r16301, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16299, %r16300, %r16301, %r781;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16303, %r16308, %r16309, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16307, %r16308, %r16309, %r781;
	// end inline asm
	selp.b32 	%r16311, %r16251, %r16247, %p292;
	shfl.sync.bfly.b32	%r237, %r16311, 8, 31, -1;
	selp.b32 	%r16312, %r16259, %r16255, %p292;
	shfl.sync.bfly.b32	%r238, %r16312, 8, 31, -1;
	selp.b32 	%r16313, %r16267, %r16263, %p292;
	shfl.sync.bfly.b32	%r239, %r16313, 8, 31, -1;
	selp.b32 	%r16314, %r16275, %r16271, %p292;
	shfl.sync.bfly.b32	%r240, %r16314, 8, 31, -1;
	selp.b32 	%r16315, %r16283, %r16279, %p292;
	shfl.sync.bfly.b32	%r16316, %r16315, 8, 31, -1;
	selp.b32 	%r16317, %r16291, %r16287, %p292;
	shfl.sync.bfly.b32	%r16318, %r16317, 8, 31, -1;
	selp.b32 	%r16319, %r16299, %r16295, %p292;
	shfl.sync.bfly.b32	%r16320, %r16319, 8, 31, -1;
	selp.b32 	%r16321, %r16307, %r16303, %p292;
	shfl.sync.bfly.b32	%r16322, %r16321, 8, 31, -1;
	setp.lt.u32 	%p308, %r16376, 512;
	@%p308 bra 	$L__BB0_121;
// %bb.120:                             // %pass28313
                                        //   in Loop: Header=BB0_116 Depth=1
	selp.b32 	%r16323, %r240, %r16275, %p292;
	selp.b32 	%r16324, %r16271, %r240, %p292;
	selp.b32 	%r16325, %r239, %r16267, %p292;
	selp.b32 	%r16326, %r16263, %r239, %p292;
	selp.b32 	%r16327, %r238, %r16259, %p292;
	selp.b32 	%r16328, %r16255, %r238, %p292;
	selp.b32 	%r16329, %r237, %r16251, %p292;
	selp.b32 	%r16330, %r16247, %r237, %p292;
	shl.b32 	%r16331, %r16376, 13;
	or.b32  	%r16332, %r16331, %r90;
	or.b32  	%r16333, %r16332, %r72;
	or.b32  	%r16334, %r16333, %r73;
	cvt.s64.s32 	%rd112, %r16334;
	add.s64 	%rd113, %rd112, %rd9;
	shr.u64 	%rd114, %rd113, 36;
	add.s64 	%rd115, %rd113, %rd114;
	shr.s64 	%rd116, %rd115, 28;
	setp.lt.s64 	%p310, %rd113, 0;
	and.b64  	%rd117, %rd115, -268435456;
	setp.ne.s64 	%p311, %rd117, %rd113;
	and.pred  	%p312, %p310, %p311;
	selp.u64 	%rd118, 1, 0, %p312;
	sub.s64 	%rd119, %rd118, %rd116;
	shl.b64 	%rd120, %rd119, 28;
	add.s64 	%rd121, %rd120, %rd113;
	shl.b64 	%rd122, %rd121, 2;
	add.s64 	%rd123, %rd3, %rd122;
	st.global.v4.u32 	[%rd123], {%r16330, %r16328, %r16329, %r16327};
	or.b32  	%r16335, %r16334, 8192;
	cvt.s64.s32 	%rd124, %r16335;
	add.s64 	%rd125, %rd124, %rd9;
	shr.u64 	%rd126, %rd125, 36;
	add.s64 	%rd127, %rd125, %rd126;
	shr.u64 	%rd128, %rd127, 28;
	shr.u64 	%rd129, %rd125, 63;
	sub.s64 	%rd130, %rd129, %rd128;
	shl.b64 	%rd131, %rd130, 28;
	add.s64 	%rd132, %rd131, %rd125;
	shl.b64 	%rd133, %rd132, 2;
	add.s64 	%rd134, %rd3, %rd133;
	st.global.v4.u32 	[%rd134], {%r16326, %r16324, %r16325, %r16323};
$L__BB0_121:                            // %pass28475
                                        //   in Loop: Header=BB0_116 Depth=1
	or.b32  	%r228, %r16376, 128;
	setp.lt.u32 	%p313, %r228, 384;
	@%p313 bra 	$L__BB0_122;
// %bb.164:                             // %pass28527
                                        //   in Loop: Header=BB0_116 Depth=1
	selp.b32 	%r241, %r16279, %r16316, %p292;
	selp.b32 	%r242, %r16316, %r16283, %p292;
	selp.b32 	%r243, %r16287, %r16318, %p292;
	selp.b32 	%r244, %r16318, %r16291, %p292;
	selp.b32 	%r245, %r16295, %r16320, %p292;
	selp.b32 	%r246, %r16320, %r16299, %p292;
	selp.b32 	%r247, %r16303, %r16322, %p292;
	selp.b32 	%r248, %r16322, %r16307, %p292;
	shl.b32 	%r16336, %r228, 13;
	or.b32  	%r16337, %r16336, %r90;
	or.b32  	%r16338, %r16337, %r72;
	or.b32  	%r16339, %r16338, %r73;
	cvt.s64.s32 	%rd135, %r16339;
	add.s64 	%rd136, %rd135, %rd9;
	shr.u64 	%rd137, %rd136, 36;
	add.s64 	%rd138, %rd136, %rd137;
	shr.s64 	%rd139, %rd138, 28;
	setp.lt.s64 	%p314, %rd136, 0;
	and.b64  	%rd140, %rd138, -268435456;
	setp.ne.s64 	%p315, %rd140, %rd136;
	and.pred  	%p316, %p314, %p315;
	selp.u64 	%rd141, 1, 0, %p316;
	sub.s64 	%rd142, %rd141, %rd139;
	shl.b64 	%rd143, %rd142, 28;
	add.s64 	%rd144, %rd143, %rd136;
	shl.b64 	%rd145, %rd144, 2;
	add.s64 	%rd146, %rd3, %rd145;
	st.global.v4.u32 	[%rd146], {%r241, %r243, %r242, %r244};
	or.b32  	%r16340, %r16339, 8192;
	cvt.s64.s32 	%rd147, %r16340;
	add.s64 	%rd148, %rd147, %rd9;
	shr.u64 	%rd149, %rd148, 36;
	add.s64 	%rd150, %rd148, %rd149;
	shr.u64 	%rd151, %rd150, 28;
	shr.u64 	%rd152, %rd148, 63;
	sub.s64 	%rd153, %rd152, %rd151;
	shl.b64 	%rd154, %rd153, 28;
	add.s64 	%rd155, %rd154, %rd148;
	shl.b64 	%rd156, %rd155, 2;
	add.s64 	%rd157, %rd3, %rd156;
	st.global.v4.u32 	[%rd157], {%r245, %r247, %r246, %r248};
	bra.uni 	$L__BB0_122;
$L__BB0_123:                            // %L70929
	mov.u32 	%r16341, 0;
	st.global.u32 	[%rd4], %r16341;
	ret;
$L__BB0_7:                              // %L166
	mov.u32 	%r16343, 2;
	st.global.u32 	[%rd4], %r16343;
	mov.u64 	%rd160, exception5805;
	cvta.global.u64 	%rd161, %rd160;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd161;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd24;
	st.param.b32 	[param0+8], %r249;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r16342, 3;
	st.global.u32 	[%rd4], %r16342;
	mov.u64 	%rd158, exception5805;
	cvta.global.u64 	%rd159, %rd158;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd159;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd24;
	st.param.b32 	[param0+8], %r249;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd29, exception15829;
	cvta.global.u64 	%rd30, %rd29;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd24;
	st.param.b32 	[param0+8], %r249;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
