// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5808[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<341>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16434>;
	.reg .f32 	%f<1392>;
	.reg .b64 	%rd<179>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r270, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd24, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r271, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r271, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	ld.param.u64 	%rd41, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd25, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r272, %r1, 9;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r273, %r272, %r2;
	or.b32  	%r274, %r273, %r4;
	mul.wide.u32 	%rd47, %r274, 4;
	add.s64 	%rd4, %rd41, %rd47;
	mov.u32 	%r275, 1;
	st.global.u32 	[%rd4], %r275;
	ld.global.u32 	%r5, [%rd25];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L204
	ld.param.u64 	%rd29, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd29];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 16384;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L214
	ld.param.u64 	%rd33, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd33];
	sub.s32 	%r276, %r6, %r5;
	and.b32  	%r277, %r276, 255;
	setp.ne.s32 	%p6, %r277, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L220
	ld.param.u64 	%rd37, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd37];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 128;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L230
	sub.s32 	%r278, %r8, %r7;
	and.b32  	%r279, %r278, 1;
	setp.eq.b32 	%p12, %r279, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass170
	bfe.u32 	%r189, %r2, 1, 1;
	and.b32  	%r190, %r2, 1;
	bfe.u32 	%r192, %r2, 2, 1;
	shr.u32 	%r193, %r2, 4;
	shl.b32 	%r285, %r193, 2;
	shl.b32 	%r286, %r192, 3;
	shl.b32 	%r287, %r190, 4;
	shl.b32 	%r288, %r189, 5;
	or.b32  	%r289, %r287, %r288;
	or.b32  	%r290, %r286, %r289;
	or.b32  	%r291, %r285, %r290;
	bfe.u32 	%r195, %r2, 3, 1;
	shl.b32 	%r292, %r195, 1;
	or.b32  	%r196, %r292, %r291;
	or.b32  	%r197, %r196, 64;
	mov.f32 	%f257, 0f40000000;
	mov.f32 	%f258, 0f43FF8000;
	div.approx.f32 	%f253, %f258, %f257;
	cvt.rn.f32.s32 	%f259, %r196;
	sub.f32 	%f260, %f259, %f253;
	mov.f32 	%f289, 0f43000000;
	div.approx.f32 	%f255, %f260, %f289;
	setp.ne.f32 	%p20, %f255, 0f00000000;
	mov.f32 	%f1351, 0f3F800000;
	mov.f32 	%f1336, %f1351;
	@%p20 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L735
	sin.approx.f32 	%f290, %f255;
	div.approx.f32 	%f1336, %f290, %f255;
$L__BB0_10:                             // %L738
	cvt.rn.f32.s32 	%f293, %r197;
	sub.f32 	%f294, %f293, %f253;
	div.approx.f32 	%f5, %f294, %f289;
	setp.eq.f32 	%p26, %f5, 0f00000000;
	mov.f32 	%f1337, %f1351;
	@%p26 bra 	$L__BB0_12;
// %bb.11:                              // %L755
	sin.approx.f32 	%f324, %f5;
	div.approx.f32 	%f1337, %f324, %f5;
$L__BB0_12:                             // %L758
	or.b32  	%r310, %r196, 1;
	or.b32  	%r10, %r196, 65;
	cvt.rn.f32.s32 	%f328, %r310;
	sub.f32 	%f329, %f328, %f253;
	div.approx.f32 	%f9, %f329, %f289;
	setp.eq.f32 	%p32, %f9, 0f00000000;
	mov.f32 	%f1338, %f1351;
	@%p32 bra 	$L__BB0_14;
// %bb.13:                              // %L837
	sin.approx.f32 	%f359, %f9;
	div.approx.f32 	%f1338, %f359, %f9;
$L__BB0_14:                             // %L840
	cvt.rn.f32.s32 	%f362, %r10;
	sub.f32 	%f363, %f362, %f253;
	div.approx.f32 	%f14, %f363, %f289;
	setp.eq.f32 	%p38, %f14, 0f00000000;
	mov.f32 	%f1339, %f1351;
	@%p38 bra 	$L__BB0_16;
// %bb.15:                              // %L857
	sin.approx.f32 	%f393, %f14;
	div.approx.f32 	%f1339, %f393, %f14;
$L__BB0_16:                             // %L860
	or.b32  	%r328, %r196, 128;
	or.b32  	%r12, %r196, 192;
	cvt.rn.f32.s32 	%f397, %r328;
	sub.f32 	%f398, %f397, %f253;
	div.approx.f32 	%f18, %f398, %f289;
	setp.eq.f32 	%p44, %f18, 0f00000000;
	mov.f32 	%f1340, %f1351;
	@%p44 bra 	$L__BB0_18;
// %bb.17:                              // %L939
	sin.approx.f32 	%f428, %f18;
	div.approx.f32 	%f1340, %f428, %f18;
$L__BB0_18:                             // %L942
	cvt.rn.f32.s32 	%f431, %r12;
	sub.f32 	%f432, %f431, %f253;
	div.approx.f32 	%f23, %f432, %f289;
	setp.eq.f32 	%p50, %f23, 0f00000000;
	mov.f32 	%f1341, %f1351;
	@%p50 bra 	$L__BB0_20;
// %bb.19:                              // %L959
	sin.approx.f32 	%f462, %f23;
	div.approx.f32 	%f1341, %f462, %f23;
$L__BB0_20:                             // %L962
	or.b32  	%r346, %r196, 129;
	or.b32  	%r14, %r196, 193;
	cvt.rn.f32.s32 	%f466, %r346;
	sub.f32 	%f467, %f466, %f253;
	div.approx.f32 	%f27, %f467, %f289;
	setp.eq.f32 	%p56, %f27, 0f00000000;
	mov.f32 	%f1342, %f1351;
	@%p56 bra 	$L__BB0_22;
// %bb.21:                              // %L1041
	sin.approx.f32 	%f497, %f27;
	div.approx.f32 	%f1342, %f497, %f27;
$L__BB0_22:                             // %L1044
	cvt.rn.f32.s32 	%f500, %r14;
	sub.f32 	%f501, %f500, %f253;
	div.approx.f32 	%f32, %f501, %f289;
	setp.eq.f32 	%p62, %f32, 0f00000000;
	mov.f32 	%f1343, %f1351;
	@%p62 bra 	$L__BB0_24;
// %bb.23:                              // %L1061
	sin.approx.f32 	%f531, %f32;
	div.approx.f32 	%f1343, %f531, %f32;
$L__BB0_24:                             // %L1064
	or.b32  	%r364, %r196, 256;
	or.b32  	%r16, %r196, 320;
	cvt.rn.f32.s32 	%f535, %r364;
	sub.f32 	%f536, %f535, %f253;
	div.approx.f32 	%f36, %f536, %f289;
	setp.eq.f32 	%p68, %f36, 0f00000000;
	mov.f32 	%f1344, %f1351;
	@%p68 bra 	$L__BB0_26;
// %bb.25:                              // %L1143
	sin.approx.f32 	%f566, %f36;
	div.approx.f32 	%f1344, %f566, %f36;
$L__BB0_26:                             // %L1146
	mov.f32 	%f261, 0f44004000;
	cvt.rn.f32.s32 	%f569, %r16;
	sub.f32 	%f570, %f569, %f253;
	div.approx.f32 	%f41, %f570, %f289;
	setp.eq.f32 	%p74, %f41, 0f00000000;
	mov.f32 	%f1345, %f1351;
	@%p74 bra 	$L__BB0_28;
// %bb.27:                              // %L1163
	sin.approx.f32 	%f600, %f41;
	div.approx.f32 	%f1345, %f600, %f41;
$L__BB0_28:                             // %L1166
	div.approx.f32 	%f262, %f260, %f261;
	div.approx.f32 	%f296, %f294, %f261;
	div.approx.f32 	%f331, %f329, %f261;
	div.approx.f32 	%f365, %f363, %f261;
	div.approx.f32 	%f400, %f398, %f261;
	div.approx.f32 	%f434, %f432, %f261;
	div.approx.f32 	%f469, %f467, %f261;
	div.approx.f32 	%f503, %f501, %f261;
	div.approx.f32 	%f538, %f536, %f261;
	div.approx.f32 	%f572, %f570, %f261;
	or.b32  	%r382, %r196, 257;
	or.b32  	%r18, %r196, 321;
	cvt.rn.f32.s32 	%f604, %r382;
	sub.f32 	%f605, %f604, %f253;
	div.approx.f32 	%f607, %f605, %f261;
	div.approx.f32 	%f45, %f605, %f289;
	setp.eq.f32 	%p80, %f45, 0f00000000;
	mov.f32 	%f1346, %f1351;
	@%p80 bra 	$L__BB0_30;
// %bb.29:                              // %L1245
	sin.approx.f32 	%f635, %f45;
	div.approx.f32 	%f1346, %f635, %f45;
$L__BB0_30:                             // %L1248
	abs.f32 	%f263, %f262;
	abs.f32 	%f297, %f296;
	abs.f32 	%f332, %f331;
	abs.f32 	%f366, %f365;
	abs.f32 	%f401, %f400;
	abs.f32 	%f435, %f434;
	abs.f32 	%f470, %f469;
	abs.f32 	%f504, %f503;
	abs.f32 	%f539, %f538;
	abs.f32 	%f573, %f572;
	abs.f32 	%f608, %f607;
	cvt.rn.f32.s32 	%f638, %r18;
	sub.f32 	%f639, %f638, %f253;
	div.approx.f32 	%f641, %f639, %f261;
	abs.f32 	%f642, %f641;
	div.approx.f32 	%f50, %f639, %f289;
	setp.eq.f32 	%p86, %f50, 0f00000000;
	mov.f32 	%f1347, %f1351;
	@%p86 bra 	$L__BB0_32;
// %bb.31:                              // %L1265
	sin.approx.f32 	%f669, %f50;
	div.approx.f32 	%f1347, %f669, %f50;
$L__BB0_32:                             // %L1268
	setp.gt.f32 	%p15, %f263, 0f4B800000;
	mul.f32 	%f264, %f262, 0f00000000;
	setp.gt.f32 	%p21, %f297, 0f4B800000;
	mul.f32 	%f298, %f296, 0f00000000;
	setp.gt.f32 	%p27, %f332, 0f4B800000;
	mul.f32 	%f333, %f331, 0f00000000;
	setp.gt.f32 	%p33, %f366, 0f4B800000;
	mul.f32 	%f367, %f365, 0f00000000;
	setp.gt.f32 	%p39, %f401, 0f4B800000;
	mul.f32 	%f402, %f400, 0f00000000;
	setp.gt.f32 	%p45, %f435, 0f4B800000;
	mul.f32 	%f436, %f434, 0f00000000;
	setp.gt.f32 	%p51, %f470, 0f4B800000;
	mul.f32 	%f471, %f469, 0f00000000;
	setp.gt.f32 	%p57, %f504, 0f4B800000;
	mul.f32 	%f505, %f503, 0f00000000;
	setp.gt.f32 	%p63, %f539, 0f4B800000;
	mul.f32 	%f540, %f538, 0f00000000;
	setp.gt.f32 	%p69, %f573, 0f4B800000;
	mul.f32 	%f574, %f572, 0f00000000;
	setp.gt.f32 	%p75, %f608, 0f4B800000;
	mul.f32 	%f609, %f607, 0f00000000;
	setp.gt.f32 	%p81, %f642, 0f4B800000;
	mul.f32 	%f643, %f641, 0f00000000;
	or.b32  	%r400, %r196, 384;
	or.b32  	%r20, %r196, 448;
	cvt.rn.f32.s32 	%f673, %r400;
	sub.f32 	%f674, %f673, %f253;
	div.approx.f32 	%f676, %f674, %f261;
	abs.f32 	%f677, %f676;
	setp.gt.f32 	%p87, %f677, 0f4B800000;
	mul.f32 	%f678, %f676, 0f00000000;
	div.approx.f32 	%f54, %f674, %f289;
	setp.eq.f32 	%p92, %f54, 0f00000000;
	mov.f32 	%f1348, %f1351;
	@%p92 bra 	$L__BB0_34;
// %bb.33:                              // %L1347
	sin.approx.f32 	%f704, %f54;
	div.approx.f32 	%f1348, %f704, %f54;
$L__BB0_34:                             // %L1350
	selp.f32 	%f265, %f264, %f262, %p15;
	selp.f32 	%f299, %f298, %f296, %p21;
	selp.f32 	%f334, %f333, %f331, %p27;
	selp.f32 	%f368, %f367, %f365, %p33;
	selp.f32 	%f403, %f402, %f400, %p39;
	selp.f32 	%f437, %f436, %f434, %p45;
	selp.f32 	%f472, %f471, %f469, %p51;
	selp.f32 	%f506, %f505, %f503, %p57;
	selp.f32 	%f541, %f540, %f538, %p63;
	selp.f32 	%f575, %f574, %f572, %p69;
	selp.f32 	%f610, %f609, %f607, %p75;
	selp.f32 	%f644, %f643, %f641, %p81;
	selp.f32 	%f679, %f678, %f676, %p87;
	cvt.rn.f32.s32 	%f707, %r20;
	sub.f32 	%f708, %f707, %f253;
	div.approx.f32 	%f710, %f708, %f261;
	abs.f32 	%f711, %f710;
	setp.gt.f32 	%p93, %f711, 0f4B800000;
	mul.f32 	%f712, %f710, 0f00000000;
	selp.f32 	%f713, %f712, %f710, %p93;
	div.approx.f32 	%f59, %f708, %f289;
	setp.eq.f32 	%p98, %f59, 0f00000000;
	mov.f32 	%f1349, %f1351;
	@%p98 bra 	$L__BB0_36;
// %bb.35:                              // %L1367
	sin.approx.f32 	%f738, %f59;
	div.approx.f32 	%f1349, %f738, %f59;
$L__BB0_36:                             // %L1370
	add.f32 	%f266, %f265, %f265;
	add.f32 	%f300, %f299, %f299;
	add.f32 	%f335, %f334, %f334;
	add.f32 	%f369, %f368, %f368;
	add.f32 	%f404, %f403, %f403;
	add.f32 	%f438, %f437, %f437;
	add.f32 	%f473, %f472, %f472;
	add.f32 	%f507, %f506, %f506;
	add.f32 	%f542, %f541, %f541;
	add.f32 	%f576, %f575, %f575;
	add.f32 	%f611, %f610, %f610;
	add.f32 	%f645, %f644, %f644;
	add.f32 	%f680, %f679, %f679;
	add.f32 	%f714, %f713, %f713;
	or.b32  	%r418, %r196, 385;
	or.b32  	%r22, %r196, 449;
	cvt.rn.f32.s32 	%f742, %r418;
	sub.f32 	%f743, %f742, %f253;
	div.approx.f32 	%f745, %f743, %f261;
	abs.f32 	%f746, %f745;
	setp.gt.f32 	%p99, %f746, 0f4B800000;
	mul.f32 	%f747, %f745, 0f00000000;
	selp.f32 	%f748, %f747, %f745, %p99;
	add.f32 	%f749, %f748, %f748;
	div.approx.f32 	%f63, %f743, %f289;
	setp.eq.f32 	%p104, %f63, 0f00000000;
	mov.f32 	%f1350, %f1351;
	@%p104 bra 	$L__BB0_38;
// %bb.37:                              // %L1449
	sin.approx.f32 	%f773, %f63;
	div.approx.f32 	%f1350, %f773, %f63;
$L__BB0_38:                             // %L1452
	mov.b32 	%r293, %f266;
	mov.b32 	%r300, %f300;
	mov.b32 	%r311, %f335;
	mov.b32 	%r318, %f369;
	mov.b32 	%r329, %f404;
	mov.b32 	%r336, %f438;
	mov.b32 	%r347, %f473;
	mov.b32 	%r354, %f507;
	mov.b32 	%r365, %f542;
	mov.b32 	%r372, %f576;
	mov.b32 	%r383, %f611;
	mov.b32 	%r390, %f645;
	mov.b32 	%r401, %f680;
	mov.b32 	%r408, %f714;
	mov.b32 	%r419, %f749;
	cvt.rn.f32.s32 	%f776, %r22;
	sub.f32 	%f777, %f776, %f253;
	div.approx.f32 	%f779, %f777, %f261;
	abs.f32 	%f780, %f779;
	setp.gt.f32 	%p105, %f780, 0f4B800000;
	mul.f32 	%f781, %f779, 0f00000000;
	selp.f32 	%f782, %f781, %f779, %p105;
	add.f32 	%f783, %f782, %f782;
	mov.b32 	%r426, %f783;
	div.approx.f32 	%f68, %f777, %f289;
	setp.eq.f32 	%p110, %f68, 0f00000000;
	@%p110 bra 	$L__BB0_40;
// %bb.39:                              // %L1469
	sin.approx.f32 	%f807, %f68;
	div.approx.f32 	%f1351, %f807, %f68;
$L__BB0_40:                             // %L1472
	and.b32  	%r294, %r293, -2147483648;
	and.b32  	%r301, %r300, -2147483648;
	and.b32  	%r312, %r311, -2147483648;
	and.b32  	%r319, %r318, -2147483648;
	and.b32  	%r330, %r329, -2147483648;
	and.b32  	%r337, %r336, -2147483648;
	and.b32  	%r348, %r347, -2147483648;
	and.b32  	%r355, %r354, -2147483648;
	and.b32  	%r366, %r365, -2147483648;
	and.b32  	%r373, %r372, -2147483648;
	and.b32  	%r384, %r383, -2147483648;
	and.b32  	%r391, %r390, -2147483648;
	and.b32  	%r402, %r401, -2147483648;
	and.b32  	%r409, %r408, -2147483648;
	and.b32  	%r420, %r419, -2147483648;
	and.b32  	%r427, %r426, -2147483648;
	mul.lo.s32 	%r24, %r196, 127;
	cvt.rn.f32.s32 	%f810, %r24;
	div.approx.f32 	%f71, %f810, %f289;
	abs.f32 	%f1354, %f71;
	setp.lt.f32 	%p111, %f1354, 0f40000000;
	@%p111 bra 	$L__BB0_52;
// %bb.41:
	setp.gtu.f32 	%p112, %f1354, 0f4B800000;
	@%p112 bra 	$L__BB0_48;
	bra.uni 	$L__BB0_42;
$L__BB0_48:
	mov.b32 	%r26, %f1354;
	and.b32  	%r436, %r26, 8388607;
	or.b32  	%r16364, %r436, 1065353216;
	mov.b32 	%f1353, %r16364;
	add.s32 	%r437, %r26, -1073741824;
	and.b32  	%r16365, %r437, -8388608;
	setp.eq.s32 	%p118, %r16365, 0;
	@%p118 bra 	$L__BB0_51;
// %bb.49:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f821, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f820,%f821;
	// end inline asm
$L__BB0_50:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r438, %r16365, 192937984;
	add.s32 	%r439, %r16364, %r438;
	mov.b32 	%f822, %r439;
	mul.f32 	%f823, %f820, %f822;
	sub.f32 	%f824, %f822, %f823;
	fma.rn.f32 	%f825, %f824, %f820, %f823;
	sub.f32 	%f826, %f822, %f825;
	fma.rz.f32 	%f827, %f826, %f820, %f825;
	cvt.rzi.f32.f32 	%f828, %f827;
	sub.f32 	%f1353, %f822, %f828;
	sub.s32 	%r16365, %r16365, %r438;
	mov.b32 	%r16364, %f1353;
	setp.ne.s32 	%p119, %r16365, 0;
	setp.ne.s32 	%p120, %r16364, 0;
	and.pred  	%p121, %p119, %p120;
	@%p121 bra 	$L__BB0_50;
$L__BB0_51:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p122, %r26, 2139095039;
	selp.f32 	%f829, 0f7FFFFFFF, 0f4B800000, %p122;
	mul.f32 	%f830, %f1353, 0f34000000;
	mul.f32 	%f1354, %f829, %f830;
	bra.uni 	$L__BB0_52;
$L__BB0_42:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f813, %f1354, %f257;
	cvt.rzi.f32.f32 	%f1352, %f813;
	fma.rn.f32 	%f74, %f1352, 0fC0000000, %f1354;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p113, %r25, 1073741824;
	@%p113 bra 	$L__BB0_47;
// %bb.43:
	setp.lt.u32 	%p114, %r25, -2147483647;
	@%p114 bra 	$L__BB0_45;
// %bb.44:
	add.f32 	%f818, %f1352, 0fBF800000;
	setp.lt.f32 	%p117, %f74, 0fC0000000;
	add.f32 	%f819, %f818, 0fBF800000;
	selp.f32 	%f1352, %f819, %f818, %p117;
	bra.uni 	$L__BB0_47;
$L__BB0_45:
	add.f32 	%f1352, %f1352, 0f3F800000;
	setp.ltu.f32 	%p115, %f74, 0f40800000;
	@%p115 bra 	$L__BB0_47;
// %bb.46:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f814, %f1352, 0f3F800000;
	fma.rn.f32 	%f816, %f257, 0fC0400000, %f74;
	setp.ge.f32 	%p116, %f816, 0f00000000;
	add.f32 	%f817, %f814, 0f3F800000;
	selp.f32 	%f1352, %f817, %f814, %p116;
$L__BB0_47:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1354, %f1352, 0fC0000000, %f1354;
$L__BB0_52:                             // %__internal_fmodf_kernel.exit.i
	or.b32  	%r295, %r294, 1056964608;
	or.b32  	%r302, %r301, 1056964608;
	or.b32  	%r313, %r312, 1056964608;
	or.b32  	%r320, %r319, 1056964608;
	or.b32  	%r331, %r330, 1056964608;
	or.b32  	%r338, %r337, 1056964608;
	or.b32  	%r349, %r348, 1056964608;
	or.b32  	%r356, %r355, 1056964608;
	or.b32  	%r367, %r366, 1056964608;
	or.b32  	%r374, %r373, 1056964608;
	or.b32  	%r385, %r384, 1056964608;
	or.b32  	%r392, %r391, 1056964608;
	or.b32  	%r403, %r402, 1056964608;
	or.b32  	%r410, %r409, 1056964608;
	or.b32  	%r421, %r420, 1056964608;
	or.b32  	%r428, %r427, 1056964608;
	abs.f32 	%f831, %f1354;
	setp.gtu.f32 	%p123, %f831, 0f7F800000;
	@%p123 bra 	$L__BB0_54;
// %bb.53:
	mov.b32 	%r440, %f71;
	and.b32  	%r441, %r440, -2147483648;
	mov.b32 	%r442, %f1354;
	or.b32  	%r443, %r441, %r442;
	mov.b32 	%f1354, %r443;
$L__BB0_54:                             // %__nv_fmodf.exit
	mov.b32 	%f267, %r295;
	mov.b32 	%f301, %r302;
	mov.b32 	%f336, %r313;
	mov.b32 	%f370, %r320;
	mov.b32 	%f405, %r331;
	mov.b32 	%f439, %r338;
	mov.b32 	%f474, %r349;
	mov.b32 	%f508, %r356;
	mov.b32 	%f543, %r367;
	mov.b32 	%f577, %r374;
	mov.b32 	%f612, %r385;
	mov.b32 	%f646, %r392;
	mov.b32 	%f681, %r403;
	mov.b32 	%f715, %r410;
	mov.b32 	%f750, %r421;
	mov.b32 	%f784, %r428;
	add.f32 	%f832, %f1354, %f1354;
	mov.b32 	%r444, %f832;
	and.b32  	%r445, %r444, -2147483648;
	or.b32  	%r446, %r445, 1056964608;
	mov.b32 	%f833, %r446;
	add.f32 	%f834, %f832, %f833;
	abs.f32 	%f836, %f832;
	add.s32 	%r452, %r24, 8128;
	cvt.rn.f32.s32 	%f862, %r452;
	div.approx.f32 	%f90, %f862, %f289;
	abs.f32 	%f1358, %f90;
	setp.lt.f32 	%p131, %f1358, 0f40000000;
	@%p131 bra 	$L__BB0_66;
// %bb.55:
	setp.gtu.f32 	%p132, %f1358, 0f4B800000;
	@%p132 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_56;
$L__BB0_62:
	mov.b32 	%r34, %f1358;
	and.b32  	%r453, %r34, 8388607;
	or.b32  	%r16366, %r453, 1065353216;
	mov.b32 	%f1357, %r16366;
	add.s32 	%r454, %r34, -1073741824;
	and.b32  	%r16367, %r454, -8388608;
	setp.eq.s32 	%p138, %r16367, 0;
	@%p138 bra 	$L__BB0_65;
// %bb.63:                              // %__nv_fmaf_rn.exit4.i.i.i1655.preheader
	mov.f32 	%f873, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f872,%f873;
	// end inline asm
$L__BB0_64:                             // %__nv_fmaf_rn.exit4.i.i.i1655
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r455, %r16367, 192937984;
	add.s32 	%r456, %r16366, %r455;
	mov.b32 	%f874, %r456;
	mul.f32 	%f875, %f872, %f874;
	sub.f32 	%f876, %f874, %f875;
	fma.rn.f32 	%f877, %f876, %f872, %f875;
	sub.f32 	%f878, %f874, %f877;
	fma.rz.f32 	%f879, %f878, %f872, %f877;
	cvt.rzi.f32.f32 	%f880, %f879;
	sub.f32 	%f1357, %f874, %f880;
	sub.s32 	%r16367, %r16367, %r455;
	mov.b32 	%r16366, %f1357;
	setp.ne.s32 	%p139, %r16367, 0;
	setp.ne.s32 	%p140, %r16366, 0;
	and.pred  	%p141, %p139, %p140;
	@%p141 bra 	$L__BB0_64;
$L__BB0_65:                             // %__internal_fmodf_slowpath_mod.exit.i.i1657
	setp.gt.u32 	%p142, %r34, 2139095039;
	selp.f32 	%f881, 0f7FFFFFFF, 0f4B800000, %p142;
	mul.f32 	%f882, %f1357, 0f34000000;
	mul.f32 	%f1358, %f881, %f882;
	bra.uni 	$L__BB0_66;
$L__BB0_56:                             // %__nv_fast_fdividef.exit.i.i.i1634
	div.approx.f32 	%f865, %f1358, %f257;
	cvt.rzi.f32.f32 	%f1356, %f865;
	fma.rn.f32 	%f93, %f1356, 0fC0000000, %f1358;
	mov.b32 	%r33, %f93;
	setp.lt.u32 	%p133, %r33, 1073741824;
	@%p133 bra 	$L__BB0_61;
// %bb.57:
	setp.lt.u32 	%p134, %r33, -2147483647;
	@%p134 bra 	$L__BB0_59;
// %bb.58:
	add.f32 	%f870, %f1356, 0fBF800000;
	setp.lt.f32 	%p137, %f93, 0fC0000000;
	add.f32 	%f871, %f870, 0fBF800000;
	selp.f32 	%f1356, %f871, %f870, %p137;
	bra.uni 	$L__BB0_61;
$L__BB0_59:
	add.f32 	%f1356, %f1356, 0f3F800000;
	setp.ltu.f32 	%p135, %f93, 0f40800000;
	@%p135 bra 	$L__BB0_61;
// %bb.60:                              // %__nv_fmaf_rn.exit.i.i.i1638
	add.f32 	%f866, %f1356, 0f3F800000;
	fma.rn.f32 	%f868, %f257, 0fC0400000, %f93;
	setp.ge.f32 	%p136, %f868, 0f00000000;
	add.f32 	%f869, %f866, 0f3F800000;
	selp.f32 	%f1356, %f869, %f866, %p136;
$L__BB0_61:                             // %__internal_fmodf_fastpath_quot.exit.i.i1641
	fma.rn.f32 	%f1358, %f1356, 0fC0000000, %f1358;
$L__BB0_66:                             // %__internal_fmodf_kernel.exit.i1660
	add.f32 	%f268, %f266, %f267;
	abs.f32 	%f270, %f266;
	add.f32 	%f302, %f300, %f301;
	abs.f32 	%f304, %f300;
	add.f32 	%f337, %f335, %f336;
	abs.f32 	%f339, %f335;
	add.f32 	%f371, %f369, %f370;
	abs.f32 	%f373, %f369;
	add.f32 	%f406, %f404, %f405;
	abs.f32 	%f408, %f404;
	add.f32 	%f440, %f438, %f439;
	abs.f32 	%f442, %f438;
	add.f32 	%f475, %f473, %f474;
	abs.f32 	%f477, %f473;
	add.f32 	%f509, %f507, %f508;
	abs.f32 	%f511, %f507;
	add.f32 	%f544, %f542, %f543;
	abs.f32 	%f546, %f542;
	add.f32 	%f578, %f576, %f577;
	abs.f32 	%f580, %f576;
	add.f32 	%f613, %f611, %f612;
	abs.f32 	%f615, %f611;
	add.f32 	%f647, %f645, %f646;
	abs.f32 	%f649, %f645;
	add.f32 	%f682, %f680, %f681;
	abs.f32 	%f684, %f680;
	add.f32 	%f716, %f714, %f715;
	abs.f32 	%f718, %f714;
	add.f32 	%f751, %f749, %f750;
	abs.f32 	%f753, %f749;
	add.f32 	%f785, %f783, %f784;
	abs.f32 	%f787, %f783;
	cvt.rzi.f32.f32 	%f835, %f834;
	setp.gt.f32 	%p124, %f836, 0f4B000000;
	shr.u32 	%r188, %r2, 1;
	shr.u32 	%r194, %r2, 3;
	abs.f32 	%f883, %f1358;
	setp.gtu.f32 	%p143, %f883, 0f7F800000;
	@%p143 bra 	$L__BB0_68;
// %bb.67:
	mov.b32 	%r457, %f90;
	and.b32  	%r458, %r457, -2147483648;
	mov.b32 	%r459, %f1358;
	or.b32  	%r460, %r458, %r459;
	mov.b32 	%f1358, %r460;
$L__BB0_68:                             // %__nv_fmodf.exit1661
	cvt.rzi.f32.f32 	%f269, %f268;
	setp.gt.f32 	%p16, %f270, 0f4B000000;
	cvt.rzi.f32.f32 	%f303, %f302;
	setp.gt.f32 	%p22, %f304, 0f4B000000;
	cvt.rzi.f32.f32 	%f338, %f337;
	setp.gt.f32 	%p28, %f339, 0f4B000000;
	cvt.rzi.f32.f32 	%f372, %f371;
	setp.gt.f32 	%p34, %f373, 0f4B000000;
	cvt.rzi.f32.f32 	%f407, %f406;
	setp.gt.f32 	%p40, %f408, 0f4B000000;
	cvt.rzi.f32.f32 	%f441, %f440;
	setp.gt.f32 	%p46, %f442, 0f4B000000;
	cvt.rzi.f32.f32 	%f476, %f475;
	setp.gt.f32 	%p52, %f477, 0f4B000000;
	cvt.rzi.f32.f32 	%f510, %f509;
	setp.gt.f32 	%p58, %f511, 0f4B000000;
	cvt.rzi.f32.f32 	%f545, %f544;
	setp.gt.f32 	%p64, %f546, 0f4B000000;
	cvt.rzi.f32.f32 	%f579, %f578;
	setp.gt.f32 	%p70, %f580, 0f4B000000;
	cvt.rzi.f32.f32 	%f614, %f613;
	setp.gt.f32 	%p76, %f615, 0f4B000000;
	cvt.rzi.f32.f32 	%f648, %f647;
	setp.gt.f32 	%p82, %f649, 0f4B000000;
	cvt.rzi.f32.f32 	%f683, %f682;
	setp.gt.f32 	%p88, %f684, 0f4B000000;
	cvt.rzi.f32.f32 	%f717, %f716;
	setp.gt.f32 	%p94, %f718, 0f4B000000;
	cvt.rzi.f32.f32 	%f752, %f751;
	setp.gt.f32 	%p100, %f753, 0f4B000000;
	cvt.rzi.f32.f32 	%f786, %f785;
	setp.gt.f32 	%p106, %f787, 0f4B000000;
	selp.f32 	%f837, %f832, %f835, %p124;
	cvt.rzi.f32.f32 	%f838, %f832;
	setp.lt.f32 	%p125, %f836, 0f3F000000;
	add.f32 	%f884, %f1358, %f1358;
	mov.b32 	%r473, %f884;
	and.b32  	%r474, %r473, -2147483648;
	or.b32  	%r475, %r474, 1056964608;
	mov.b32 	%f885, %r475;
	add.f32 	%f886, %f884, %f885;
	cvt.rzi.f32.f32 	%f887, %f886;
	abs.f32 	%f888, %f884;
	setp.gt.f32 	%p144, %f888, 0f4B000000;
	selp.f32 	%f889, %f884, %f887, %p144;
	cvt.rzi.f32.f32 	%f890, %f884;
	setp.lt.f32 	%p145, %f888, 0f3F000000;
	and.b32  	%r481, %r194, 2;
	or.b32  	%r482, %r192, %r481;
	and.b32  	%r483, %r188, 4;
	or.b32  	%r45, %r482, %r483;
	and.b32  	%r484, %r2, 3;
	mul.lo.s32 	%r485, %r484, %r45;
	shl.b32 	%r486, %r485, 1;
	neg.s32 	%r487, %r486;
	cvt.rn.f32.s32 	%f916, %r487;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f107, %f916, %f917;
	abs.f32 	%f1362, %f107;
	setp.lt.f32 	%p151, %f1362, 0f40000000;
	@%p151 bra 	$L__BB0_80;
// %bb.69:
	setp.gtu.f32 	%p152, %f1362, 0f4B800000;
	@%p152 bra 	$L__BB0_76;
	bra.uni 	$L__BB0_70;
$L__BB0_76:
	mov.b32 	%r47, %f1362;
	and.b32  	%r488, %r47, 8388607;
	or.b32  	%r16368, %r488, 1065353216;
	mov.b32 	%f1361, %r16368;
	add.s32 	%r489, %r47, -1073741824;
	and.b32  	%r16369, %r489, -8388608;
	setp.eq.s32 	%p158, %r16369, 0;
	@%p158 bra 	$L__BB0_79;
// %bb.77:                              // %__nv_fmaf_rn.exit4.i.i.i1686.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
$L__BB0_78:                             // %__nv_fmaf_rn.exit4.i.i.i1686
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r490, %r16369, 192937984;
	add.s32 	%r491, %r16368, %r490;
	mov.b32 	%f928, %r491;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1361, %f928, %f934;
	sub.s32 	%r16369, %r16369, %r490;
	mov.b32 	%r16368, %f1361;
	setp.ne.s32 	%p159, %r16369, 0;
	setp.ne.s32 	%p160, %r16368, 0;
	and.pred  	%p161, %p159, %p160;
	@%p161 bra 	$L__BB0_78;
$L__BB0_79:                             // %__internal_fmodf_slowpath_mod.exit.i.i1688
	setp.gt.u32 	%p162, %r47, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p162;
	mul.f32 	%f936, %f1361, 0f34000000;
	mul.f32 	%f1362, %f935, %f936;
	bra.uni 	$L__BB0_80;
$L__BB0_70:                             // %__nv_fast_fdividef.exit.i.i.i1665
	div.approx.f32 	%f919, %f1362, %f257;
	cvt.rzi.f32.f32 	%f1360, %f919;
	fma.rn.f32 	%f110, %f1360, 0fC0000000, %f1362;
	mov.b32 	%r46, %f110;
	setp.lt.u32 	%p153, %r46, 1073741824;
	@%p153 bra 	$L__BB0_75;
// %bb.71:
	setp.lt.u32 	%p154, %r46, -2147483647;
	@%p154 bra 	$L__BB0_73;
// %bb.72:
	add.f32 	%f924, %f1360, 0fBF800000;
	setp.lt.f32 	%p157, %f110, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1360, %f925, %f924, %p157;
	bra.uni 	$L__BB0_75;
$L__BB0_73:
	add.f32 	%f1360, %f1360, 0f3F800000;
	setp.ltu.f32 	%p155, %f110, 0f40800000;
	@%p155 bra 	$L__BB0_75;
// %bb.74:                              // %__nv_fmaf_rn.exit.i.i.i1669
	add.f32 	%f920, %f1360, 0f3F800000;
	fma.rn.f32 	%f922, %f257, 0fC0400000, %f110;
	setp.ge.f32 	%p156, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1360, %f923, %f920, %p156;
$L__BB0_75:                             // %__internal_fmodf_fastpath_quot.exit.i.i1672
	fma.rn.f32 	%f1362, %f1360, 0fC0000000, %f1362;
$L__BB0_80:                             // %__internal_fmodf_kernel.exit.i1691
	selp.f32 	%f271, %f266, %f269, %p16;
	cvt.rzi.f32.f32 	%f272, %f266;
	setp.lt.f32 	%p17, %f270, 0f3F000000;
	selp.f32 	%f305, %f300, %f303, %p22;
	cvt.rzi.f32.f32 	%f306, %f300;
	setp.lt.f32 	%p23, %f304, 0f3F000000;
	selp.f32 	%f340, %f335, %f338, %p28;
	cvt.rzi.f32.f32 	%f341, %f335;
	setp.lt.f32 	%p29, %f339, 0f3F000000;
	selp.f32 	%f374, %f369, %f372, %p34;
	cvt.rzi.f32.f32 	%f375, %f369;
	setp.lt.f32 	%p35, %f373, 0f3F000000;
	selp.f32 	%f409, %f404, %f407, %p40;
	cvt.rzi.f32.f32 	%f410, %f404;
	setp.lt.f32 	%p41, %f408, 0f3F000000;
	selp.f32 	%f443, %f438, %f441, %p46;
	cvt.rzi.f32.f32 	%f444, %f438;
	setp.lt.f32 	%p47, %f442, 0f3F000000;
	selp.f32 	%f478, %f473, %f476, %p52;
	cvt.rzi.f32.f32 	%f479, %f473;
	setp.lt.f32 	%p53, %f477, 0f3F000000;
	selp.f32 	%f512, %f507, %f510, %p58;
	cvt.rzi.f32.f32 	%f513, %f507;
	setp.lt.f32 	%p59, %f511, 0f3F000000;
	selp.f32 	%f547, %f542, %f545, %p64;
	cvt.rzi.f32.f32 	%f548, %f542;
	setp.lt.f32 	%p65, %f546, 0f3F000000;
	selp.f32 	%f581, %f576, %f579, %p70;
	cvt.rzi.f32.f32 	%f582, %f576;
	setp.lt.f32 	%p71, %f580, 0f3F000000;
	selp.f32 	%f616, %f611, %f614, %p76;
	cvt.rzi.f32.f32 	%f617, %f611;
	setp.lt.f32 	%p77, %f615, 0f3F000000;
	selp.f32 	%f650, %f645, %f648, %p82;
	cvt.rzi.f32.f32 	%f651, %f645;
	setp.lt.f32 	%p83, %f649, 0f3F000000;
	selp.f32 	%f685, %f680, %f683, %p88;
	cvt.rzi.f32.f32 	%f686, %f680;
	setp.lt.f32 	%p89, %f684, 0f3F000000;
	selp.f32 	%f719, %f714, %f717, %p94;
	cvt.rzi.f32.f32 	%f720, %f714;
	setp.lt.f32 	%p95, %f718, 0f3F000000;
	selp.f32 	%f754, %f749, %f752, %p100;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p101, %f753, 0f3F000000;
	selp.f32 	%f788, %f783, %f786, %p106;
	cvt.rzi.f32.f32 	%f789, %f783;
	setp.lt.f32 	%p107, %f787, 0f3F000000;
	selp.f32 	%f839, %f838, %f837, %p125;
	selp.f32 	%f891, %f890, %f889, %p145;
	shl.b32 	%r178, %r2, 1;
	abs.f32 	%f937, %f1362;
	setp.gtu.f32 	%p163, %f937, 0f7F800000;
	@%p163 bra 	$L__BB0_82;
// %bb.81:
	mov.b32 	%r492, %f107;
	and.b32  	%r493, %r492, -2147483648;
	mov.b32 	%r494, %f1362;
	or.b32  	%r495, %r493, %r494;
	mov.b32 	%f1362, %r495;
$L__BB0_82:                             // %__nv_fmodf.exit1692
	selp.f32 	%f273, %f272, %f271, %p17;
	selp.f32 	%f307, %f306, %f305, %p23;
	selp.f32 	%f342, %f341, %f340, %p29;
	selp.f32 	%f376, %f375, %f374, %p35;
	selp.f32 	%f411, %f410, %f409, %p41;
	selp.f32 	%f445, %f444, %f443, %p47;
	selp.f32 	%f480, %f479, %f478, %p53;
	selp.f32 	%f514, %f513, %f512, %p59;
	selp.f32 	%f549, %f548, %f547, %p65;
	selp.f32 	%f583, %f582, %f581, %p71;
	selp.f32 	%f618, %f617, %f616, %p77;
	selp.f32 	%f652, %f651, %f650, %p83;
	selp.f32 	%f687, %f686, %f685, %p89;
	selp.f32 	%f721, %f720, %f719, %p95;
	selp.f32 	%f756, %f755, %f754, %p101;
	selp.f32 	%f790, %f789, %f788, %p107;
	fma.rn.f32 	%f840, %f839, 0fBF000000, %f1354;
	fma.rn.f32 	%f892, %f891, 0fBF000000, %f1358;
	add.f32 	%f938, %f1362, %f1362;
	mov.b32 	%r496, %f938;
	and.b32  	%r497, %r496, -2147483648;
	or.b32  	%r498, %r497, 1056964608;
	mov.b32 	%f939, %r498;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p164, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p164;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p165, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p165;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1362;
	and.b32  	%r504, %r178, 6;
	mov.u32 	%r505, -8;
	sub.s32 	%r506, %r505, %r504;
	mul.lo.s32 	%r507, %r45, %r506;
	cvt.rn.f32.s32 	%f968, %r507;
	div.approx.f32 	%f126, %f968, %f917;
	abs.f32 	%f1366, %f126;
	setp.lt.f32 	%p171, %f1366, 0f40000000;
	@%p171 bra 	$L__BB0_94;
// %bb.83:
	setp.gtu.f32 	%p172, %f1366, 0f4B800000;
	@%p172 bra 	$L__BB0_90;
	bra.uni 	$L__BB0_84;
$L__BB0_90:
	mov.b32 	%r55, %f1366;
	and.b32  	%r508, %r55, 8388607;
	or.b32  	%r16370, %r508, 1065353216;
	mov.b32 	%f1365, %r16370;
	add.s32 	%r509, %r55, -1073741824;
	and.b32  	%r16371, %r509, -8388608;
	setp.eq.s32 	%p178, %r16371, 0;
	@%p178 bra 	$L__BB0_93;
// %bb.91:                              // %__nv_fmaf_rn.exit4.i.i.i1717.preheader
	mov.f32 	%f979, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f978,%f979;
	// end inline asm
$L__BB0_92:                             // %__nv_fmaf_rn.exit4.i.i.i1717
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r510, %r16371, 192937984;
	add.s32 	%r511, %r16370, %r510;
	mov.b32 	%f980, %r511;
	mul.f32 	%f981, %f978, %f980;
	sub.f32 	%f982, %f980, %f981;
	fma.rn.f32 	%f983, %f982, %f978, %f981;
	sub.f32 	%f984, %f980, %f983;
	fma.rz.f32 	%f985, %f984, %f978, %f983;
	cvt.rzi.f32.f32 	%f986, %f985;
	sub.f32 	%f1365, %f980, %f986;
	sub.s32 	%r16371, %r16371, %r510;
	mov.b32 	%r16370, %f1365;
	setp.ne.s32 	%p179, %r16371, 0;
	setp.ne.s32 	%p180, %r16370, 0;
	and.pred  	%p181, %p179, %p180;
	@%p181 bra 	$L__BB0_92;
$L__BB0_93:                             // %__internal_fmodf_slowpath_mod.exit.i.i1719
	setp.gt.u32 	%p182, %r55, 2139095039;
	selp.f32 	%f987, 0f7FFFFFFF, 0f4B800000, %p182;
	mul.f32 	%f988, %f1365, 0f34000000;
	mul.f32 	%f1366, %f987, %f988;
	bra.uni 	$L__BB0_94;
$L__BB0_84:                             // %__nv_fast_fdividef.exit.i.i.i1696
	div.approx.f32 	%f971, %f1366, %f257;
	cvt.rzi.f32.f32 	%f1364, %f971;
	fma.rn.f32 	%f129, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r54, %f129;
	setp.lt.u32 	%p173, %r54, 1073741824;
	@%p173 bra 	$L__BB0_89;
// %bb.85:
	setp.lt.u32 	%p174, %r54, -2147483647;
	@%p174 bra 	$L__BB0_87;
// %bb.86:
	add.f32 	%f976, %f1364, 0fBF800000;
	setp.lt.f32 	%p177, %f129, 0fC0000000;
	add.f32 	%f977, %f976, 0fBF800000;
	selp.f32 	%f1364, %f977, %f976, %p177;
	bra.uni 	$L__BB0_89;
$L__BB0_87:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p175, %f129, 0f40800000;
	@%p175 bra 	$L__BB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i1700
	add.f32 	%f972, %f1364, 0f3F800000;
	fma.rn.f32 	%f974, %f257, 0fC0400000, %f129;
	setp.ge.f32 	%p176, %f974, 0f00000000;
	add.f32 	%f975, %f972, 0f3F800000;
	selp.f32 	%f1364, %f975, %f972, %p176;
$L__BB0_89:                             // %__internal_fmodf_fastpath_quot.exit.i.i1703
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
$L__BB0_94:                             // %__internal_fmodf_kernel.exit.i1722
	fma.rn.f32 	%f274, %f273, 0fBF000000, %f265;
	fma.rn.f32 	%f308, %f307, 0fBF000000, %f299;
	fma.rn.f32 	%f343, %f342, 0fBF000000, %f334;
	fma.rn.f32 	%f377, %f376, 0fBF000000, %f368;
	fma.rn.f32 	%f412, %f411, 0fBF000000, %f403;
	fma.rn.f32 	%f446, %f445, 0fBF000000, %f437;
	fma.rn.f32 	%f481, %f480, 0fBF000000, %f472;
	fma.rn.f32 	%f515, %f514, 0fBF000000, %f506;
	fma.rn.f32 	%f550, %f549, 0fBF000000, %f541;
	fma.rn.f32 	%f584, %f583, 0fBF000000, %f575;
	fma.rn.f32 	%f619, %f618, 0fBF000000, %f610;
	fma.rn.f32 	%f653, %f652, 0fBF000000, %f644;
	fma.rn.f32 	%f688, %f687, 0fBF000000, %f679;
	fma.rn.f32 	%f722, %f721, 0fBF000000, %f713;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f748;
	fma.rn.f32 	%f791, %f790, 0fBF000000, %f782;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f893, %f892, %f892;
	mul.f32 	%f947, %f946, %f946;
	abs.f32 	%f989, %f1366;
	setp.gtu.f32 	%p183, %f989, 0f7F800000;
	@%p183 bra 	$L__BB0_96;
// %bb.95:
	mov.b32 	%r512, %f126;
	and.b32  	%r513, %r512, -2147483648;
	mov.b32 	%r514, %f1366;
	or.b32  	%r515, %r513, %r514;
	mov.b32 	%f1366, %r515;
$L__BB0_96:                             // %__nv_fmodf.exit1723
	mul.f32 	%f275, %f274, %f274;
	mul.f32 	%f309, %f308, %f308;
	mul.f32 	%f344, %f343, %f343;
	mul.f32 	%f378, %f377, %f377;
	mul.f32 	%f413, %f412, %f412;
	mul.f32 	%f447, %f446, %f446;
	mul.f32 	%f482, %f481, %f481;
	mul.f32 	%f516, %f515, %f515;
	mul.f32 	%f551, %f550, %f550;
	mul.f32 	%f585, %f584, %f584;
	mul.f32 	%f620, %f619, %f619;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f689, %f688, %f688;
	mul.f32 	%f723, %f722, %f722;
	mul.f32 	%f758, %f757, %f757;
	mul.f32 	%f792, %f791, %f791;
	fma.rn.f32 	%f842, %f841, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f843, %f841, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f894, %f893, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f895, %f893, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f948, %f947, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f949, %f947, 0f3E684E12, 0fBFAAD2E0;
	add.f32 	%f990, %f1366, %f1366;
	mov.b32 	%r528, %f990;
	and.b32  	%r529, %r528, -2147483648;
	or.b32  	%r530, %r529, 1056964608;
	mov.b32 	%f991, %r530;
	add.f32 	%f992, %f990, %f991;
	cvt.rzi.f32.f32 	%f993, %f992;
	abs.f32 	%f994, %f990;
	setp.gt.f32 	%p184, %f994, 0f4B000000;
	selp.f32 	%f995, %f990, %f993, %p184;
	cvt.rzi.f32.f32 	%f996, %f990;
	setp.lt.f32 	%p185, %f994, 0f3F000000;
	selp.f32 	%f997, %f996, %f995, %p185;
	fma.rn.f32 	%f998, %f997, 0fBF000000, %f1366;
	mul.f32 	%f999, %f998, %f998;
	fma.rn.f32 	%f1000, %f999, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1001, %f999, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r536, %r190, 2147483646;
	shl.b32 	%r537, %r189, 2;
	sub.s32 	%r538, %r536, %r537;
	mul.lo.s32 	%r539, %r538, %r45;
	shl.b32 	%r66, %r539, 1;
	cvt.rn.f32.s32 	%f143, %r66;
	div.approx.f32 	%f144, %f143, %f289;
	abs.f32 	%f1370, %f144;
	setp.lt.f32 	%p191, %f1370, 0f40000000;
	@%p191 bra 	$L__BB0_108;
// %bb.97:
	setp.gtu.f32 	%p192, %f1370, 0f4B800000;
	@%p192 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_98;
$L__BB0_104:
	mov.b32 	%r68, %f1370;
	and.b32  	%r540, %r68, 8388607;
	or.b32  	%r16372, %r540, 1065353216;
	mov.b32 	%f1369, %r16372;
	add.s32 	%r541, %r68, -1073741824;
	and.b32  	%r16373, %r541, -8388608;
	setp.eq.s32 	%p198, %r16373, 0;
	@%p198 bra 	$L__BB0_107;
// %bb.105:                             // %__nv_fmaf_rn.exit4.i.i.i1748.preheader
	mov.f32 	%f1032, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1031,%f1032;
	// end inline asm
$L__BB0_106:                            // %__nv_fmaf_rn.exit4.i.i.i1748
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r542, %r16373, 192937984;
	add.s32 	%r543, %r16372, %r542;
	mov.b32 	%f1033, %r543;
	mul.f32 	%f1034, %f1031, %f1033;
	sub.f32 	%f1035, %f1033, %f1034;
	fma.rn.f32 	%f1036, %f1035, %f1031, %f1034;
	sub.f32 	%f1037, %f1033, %f1036;
	fma.rz.f32 	%f1038, %f1037, %f1031, %f1036;
	cvt.rzi.f32.f32 	%f1039, %f1038;
	sub.f32 	%f1369, %f1033, %f1039;
	sub.s32 	%r16373, %r16373, %r542;
	mov.b32 	%r16372, %f1369;
	setp.ne.s32 	%p199, %r16373, 0;
	setp.ne.s32 	%p200, %r16372, 0;
	and.pred  	%p201, %p199, %p200;
	@%p201 bra 	$L__BB0_106;
$L__BB0_107:                            // %__internal_fmodf_slowpath_mod.exit.i.i1750
	setp.gt.u32 	%p202, %r68, 2139095039;
	selp.f32 	%f1040, 0f7FFFFFFF, 0f4B800000, %p202;
	mul.f32 	%f1041, %f1369, 0f34000000;
	mul.f32 	%f1370, %f1040, %f1041;
	bra.uni 	$L__BB0_108;
$L__BB0_98:                             // %__nv_fast_fdividef.exit.i.i.i1727
	div.approx.f32 	%f1024, %f1370, %f257;
	cvt.rzi.f32.f32 	%f1368, %f1024;
	fma.rn.f32 	%f147, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r67, %f147;
	setp.lt.u32 	%p193, %r67, 1073741824;
	@%p193 bra 	$L__BB0_103;
// %bb.99:
	setp.lt.u32 	%p194, %r67, -2147483647;
	@%p194 bra 	$L__BB0_101;
// %bb.100:
	add.f32 	%f1029, %f1368, 0fBF800000;
	setp.lt.f32 	%p197, %f147, 0fC0000000;
	add.f32 	%f1030, %f1029, 0fBF800000;
	selp.f32 	%f1368, %f1030, %f1029, %p197;
	bra.uni 	$L__BB0_103;
$L__BB0_101:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p195, %f147, 0f40800000;
	@%p195 bra 	$L__BB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i1731
	add.f32 	%f1025, %f1368, 0f3F800000;
	fma.rn.f32 	%f1027, %f257, 0fC0400000, %f147;
	setp.ge.f32 	%p196, %f1027, 0f00000000;
	add.f32 	%f1028, %f1025, 0f3F800000;
	selp.f32 	%f1368, %f1028, %f1025, %p196;
$L__BB0_103:                            // %__internal_fmodf_fastpath_quot.exit.i.i1734
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
$L__BB0_108:                            // %__internal_fmodf_kernel.exit.i1753
	cvt.rzi.s32.f32 	%r296, %f273;
	fma.rn.f32 	%f276, %f275, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f277, %f275, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r303, %f307;
	fma.rn.f32 	%f310, %f309, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f311, %f309, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r314, %f342;
	fma.rn.f32 	%f345, %f344, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f346, %f344, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r321, %f376;
	fma.rn.f32 	%f379, %f378, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f380, %f378, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r332, %f411;
	fma.rn.f32 	%f414, %f413, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f415, %f413, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r339, %f445;
	fma.rn.f32 	%f448, %f447, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f449, %f447, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r350, %f480;
	fma.rn.f32 	%f483, %f482, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f484, %f482, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r357, %f514;
	fma.rn.f32 	%f517, %f516, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f518, %f516, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r368, %f549;
	fma.rn.f32 	%f552, %f551, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f553, %f551, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r375, %f583;
	fma.rn.f32 	%f586, %f585, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f587, %f585, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r386, %f618;
	fma.rn.f32 	%f621, %f620, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f622, %f620, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r393, %f652;
	fma.rn.f32 	%f655, %f654, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f656, %f654, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r404, %f687;
	fma.rn.f32 	%f690, %f689, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f691, %f689, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r411, %f721;
	fma.rn.f32 	%f724, %f723, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f725, %f723, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r422, %f756;
	fma.rn.f32 	%f759, %f758, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f760, %f758, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r429, %f790;
	fma.rn.f32 	%f793, %f792, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f794, %f792, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r447, %f839;
	fma.rn.f32 	%f844, %f842, %f841, 0fC0A55DF6;
	fma.rn.f32 	%f845, %f843, %f841, 0f4081E0CF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	cvt.rzi.s32.f32 	%r476, %f891;
	fma.rn.f32 	%f896, %f894, %f893, 0fC0A55DF6;
	fma.rn.f32 	%f897, %f895, %f893, 0f4081E0CF;
	fma.rn.f32 	%f898, %f893, %f892, 0f00000000;
	cvt.rzi.s32.f32 	%r499, %f945;
	fma.rn.f32 	%f950, %f948, %f947, 0fC0A55DF6;
	fma.rn.f32 	%f951, %f949, %f947, 0f4081E0CF;
	fma.rn.f32 	%f952, %f947, %f946, 0f00000000;
	cvt.rzi.s32.f32 	%r531, %f997;
	fma.rn.f32 	%f1002, %f1000, %f999, 0fC0A55DF6;
	fma.rn.f32 	%f1003, %f1001, %f999, 0f4081E0CF;
	fma.rn.f32 	%f1004, %f999, %f998, 0f00000000;
	abs.f32 	%f1042, %f1370;
	setp.gtu.f32 	%p203, %f1042, 0f7F800000;
	@%p203 bra 	$L__BB0_110;
// %bb.109:
	mov.b32 	%r544, %f144;
	and.b32  	%r545, %r544, -2147483648;
	mov.b32 	%r546, %f1370;
	or.b32  	%r547, %r545, %r546;
	mov.b32 	%f1370, %r547;
$L__BB0_110:                            // %__nv_fmodf.exit1754
	add.s32 	%r297, %r296, 1;
	fma.rn.f32 	%f278, %f276, %f275, 0fC0A55DF6;
	fma.rn.f32 	%f279, %f277, %f275, 0f4081E0CF;
	fma.rn.f32 	%f280, %f275, %f274, 0f00000000;
	add.s32 	%r304, %r303, 1;
	fma.rn.f32 	%f312, %f310, %f309, 0fC0A55DF6;
	fma.rn.f32 	%f313, %f311, %f309, 0f4081E0CF;
	fma.rn.f32 	%f314, %f309, %f308, 0f00000000;
	add.s32 	%r315, %r314, 1;
	fma.rn.f32 	%f347, %f345, %f344, 0fC0A55DF6;
	fma.rn.f32 	%f348, %f346, %f344, 0f4081E0CF;
	fma.rn.f32 	%f349, %f344, %f343, 0f00000000;
	add.s32 	%r322, %r321, 1;
	fma.rn.f32 	%f381, %f379, %f378, 0fC0A55DF6;
	fma.rn.f32 	%f382, %f380, %f378, 0f4081E0CF;
	fma.rn.f32 	%f383, %f378, %f377, 0f00000000;
	add.s32 	%r333, %r332, 1;
	fma.rn.f32 	%f416, %f414, %f413, 0fC0A55DF6;
	fma.rn.f32 	%f417, %f415, %f413, 0f4081E0CF;
	fma.rn.f32 	%f418, %f413, %f412, 0f00000000;
	add.s32 	%r340, %r339, 1;
	fma.rn.f32 	%f450, %f448, %f447, 0fC0A55DF6;
	fma.rn.f32 	%f451, %f449, %f447, 0f4081E0CF;
	fma.rn.f32 	%f452, %f447, %f446, 0f00000000;
	add.s32 	%r351, %r350, 1;
	fma.rn.f32 	%f485, %f483, %f482, 0fC0A55DF6;
	fma.rn.f32 	%f486, %f484, %f482, 0f4081E0CF;
	fma.rn.f32 	%f487, %f482, %f481, 0f00000000;
	add.s32 	%r358, %r357, 1;
	fma.rn.f32 	%f519, %f517, %f516, 0fC0A55DF6;
	fma.rn.f32 	%f520, %f518, %f516, 0f4081E0CF;
	fma.rn.f32 	%f521, %f516, %f515, 0f00000000;
	add.s32 	%r369, %r368, 1;
	fma.rn.f32 	%f554, %f552, %f551, 0fC0A55DF6;
	fma.rn.f32 	%f555, %f553, %f551, 0f4081E0CF;
	fma.rn.f32 	%f556, %f551, %f550, 0f00000000;
	add.s32 	%r376, %r375, 1;
	fma.rn.f32 	%f588, %f586, %f585, 0fC0A55DF6;
	fma.rn.f32 	%f589, %f587, %f585, 0f4081E0CF;
	fma.rn.f32 	%f590, %f585, %f584, 0f00000000;
	add.s32 	%r387, %r386, 1;
	fma.rn.f32 	%f623, %f621, %f620, 0fC0A55DF6;
	fma.rn.f32 	%f624, %f622, %f620, 0f4081E0CF;
	fma.rn.f32 	%f625, %f620, %f619, 0f00000000;
	add.s32 	%r394, %r393, 1;
	fma.rn.f32 	%f657, %f655, %f654, 0fC0A55DF6;
	fma.rn.f32 	%f658, %f656, %f654, 0f4081E0CF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	add.s32 	%r405, %r404, 1;
	fma.rn.f32 	%f692, %f690, %f689, 0fC0A55DF6;
	fma.rn.f32 	%f693, %f691, %f689, 0f4081E0CF;
	fma.rn.f32 	%f694, %f689, %f688, 0f00000000;
	add.s32 	%r412, %r411, 1;
	fma.rn.f32 	%f726, %f724, %f723, 0fC0A55DF6;
	fma.rn.f32 	%f727, %f725, %f723, 0f4081E0CF;
	fma.rn.f32 	%f728, %f723, %f722, 0f00000000;
	add.s32 	%r423, %r422, 1;
	fma.rn.f32 	%f761, %f759, %f758, 0fC0A55DF6;
	fma.rn.f32 	%f762, %f760, %f758, 0f4081E0CF;
	fma.rn.f32 	%f763, %f758, %f757, 0f00000000;
	add.s32 	%r430, %r429, 1;
	fma.rn.f32 	%f795, %f793, %f792, 0fC0A55DF6;
	fma.rn.f32 	%f796, %f794, %f792, 0f4081E0CF;
	fma.rn.f32 	%f797, %f792, %f791, 0f00000000;
	fma.rn.f32 	%f847, %f845, %f841, 0fC09DE9E6;
	fma.rn.f32 	%f848, %f844, %f846, 0f00000000;
	and.b32  	%r448, %r447, 1;
	fma.rn.f32 	%f899, %f897, %f893, 0fC09DE9E6;
	fma.rn.f32 	%f900, %f896, %f898, 0f00000000;
	and.b32  	%r477, %r476, 1;
	fma.rn.f32 	%f953, %f951, %f947, 0fC09DE9E6;
	fma.rn.f32 	%f954, %f950, %f952, 0f00000000;
	and.b32  	%r500, %r499, 1;
	fma.rn.f32 	%f1005, %f1003, %f999, 0fC09DE9E6;
	fma.rn.f32 	%f1006, %f1002, %f1004, 0f00000000;
	and.b32  	%r532, %r531, 1;
	add.f32 	%f1043, %f1370, %f1370;
	mov.b32 	%r548, %f1043;
	and.b32  	%r549, %r548, -2147483648;
	or.b32  	%r550, %r549, 1056964608;
	mov.b32 	%f1044, %r550;
	add.f32 	%f1045, %f1043, %f1044;
	cvt.rzi.f32.f32 	%f1046, %f1045;
	abs.f32 	%f1047, %f1043;
	setp.gt.f32 	%p204, %f1047, 0f4B000000;
	selp.f32 	%f1048, %f1043, %f1046, %p204;
	cvt.rzi.f32.f32 	%f1049, %f1043;
	setp.lt.f32 	%p205, %f1047, 0f3F000000;
	selp.f32 	%f1050, %f1049, %f1048, %p205;
	cvt.rzi.s32.f32 	%r551, %f1050;
	fma.rn.f32 	%f1051, %f1050, 0fBF000000, %f1370;
	mul.f32 	%f1052, %f1051, %f1051;
	fma.rn.f32 	%f1053, %f1052, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1054, %f1052, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1055, %f1053, %f1052, 0fC0A55DF6;
	fma.rn.f32 	%f1056, %f1054, %f1052, 0f4081E0CF;
	fma.rn.f32 	%f1057, %f1052, %f1051, 0f00000000;
	shl.b32 	%r556, %r45, 4;
	sub.s32 	%r557, %r66, %r556;
	cvt.rn.f32.s32 	%f163, %r557;
	div.approx.f32 	%f164, %f163, %f289;
	abs.f32 	%f1374, %f164;
	setp.lt.f32 	%p211, %f1374, 0f40000000;
	@%p211 bra 	$L__BB0_122;
// %bb.111:
	setp.gtu.f32 	%p212, %f1374, 0f4B800000;
	@%p212 bra 	$L__BB0_118;
	bra.uni 	$L__BB0_112;
$L__BB0_118:
	mov.b32 	%r76, %f1374;
	and.b32  	%r558, %r76, 8388607;
	or.b32  	%r16374, %r558, 1065353216;
	mov.b32 	%f1373, %r16374;
	add.s32 	%r559, %r76, -1073741824;
	and.b32  	%r16375, %r559, -8388608;
	setp.eq.s32 	%p218, %r16375, 0;
	@%p218 bra 	$L__BB0_121;
// %bb.119:                             // %__nv_fmaf_rn.exit4.i.i.i1779.preheader
	mov.f32 	%f1083, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1082,%f1083;
	// end inline asm
$L__BB0_120:                            // %__nv_fmaf_rn.exit4.i.i.i1779
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r560, %r16375, 192937984;
	add.s32 	%r561, %r16374, %r560;
	mov.b32 	%f1084, %r561;
	mul.f32 	%f1085, %f1082, %f1084;
	sub.f32 	%f1086, %f1084, %f1085;
	fma.rn.f32 	%f1087, %f1086, %f1082, %f1085;
	sub.f32 	%f1088, %f1084, %f1087;
	fma.rz.f32 	%f1089, %f1088, %f1082, %f1087;
	cvt.rzi.f32.f32 	%f1090, %f1089;
	sub.f32 	%f1373, %f1084, %f1090;
	sub.s32 	%r16375, %r16375, %r560;
	mov.b32 	%r16374, %f1373;
	setp.ne.s32 	%p219, %r16375, 0;
	setp.ne.s32 	%p220, %r16374, 0;
	and.pred  	%p221, %p219, %p220;
	@%p221 bra 	$L__BB0_120;
$L__BB0_121:                            // %__internal_fmodf_slowpath_mod.exit.i.i1781
	setp.gt.u32 	%p222, %r76, 2139095039;
	selp.f32 	%f1091, 0f7FFFFFFF, 0f4B800000, %p222;
	mul.f32 	%f1092, %f1373, 0f34000000;
	mul.f32 	%f1374, %f1091, %f1092;
	bra.uni 	$L__BB0_122;
$L__BB0_112:                            // %__nv_fast_fdividef.exit.i.i.i1758
	div.approx.f32 	%f1075, %f1374, %f257;
	cvt.rzi.f32.f32 	%f1372, %f1075;
	fma.rn.f32 	%f167, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r75, %f167;
	setp.lt.u32 	%p213, %r75, 1073741824;
	@%p213 bra 	$L__BB0_117;
// %bb.113:
	setp.lt.u32 	%p214, %r75, -2147483647;
	@%p214 bra 	$L__BB0_115;
// %bb.114:
	add.f32 	%f1080, %f1372, 0fBF800000;
	setp.lt.f32 	%p217, %f167, 0fC0000000;
	add.f32 	%f1081, %f1080, 0fBF800000;
	selp.f32 	%f1372, %f1081, %f1080, %p217;
	bra.uni 	$L__BB0_117;
$L__BB0_115:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p215, %f167, 0f40800000;
	@%p215 bra 	$L__BB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i1762
	add.f32 	%f1076, %f1372, 0f3F800000;
	fma.rn.f32 	%f1078, %f257, 0fC0400000, %f167;
	setp.ge.f32 	%p216, %f1078, 0f00000000;
	add.f32 	%f1079, %f1076, 0f3F800000;
	selp.f32 	%f1372, %f1079, %f1076, %p216;
$L__BB0_117:                            // %__internal_fmodf_fastpath_quot.exit.i.i1765
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
$L__BB0_122:                            // %__internal_fmodf_kernel.exit.i1784
	fma.rn.f32 	%f281, %f279, %f275, 0fC09DE9E6;
	fma.rn.f32 	%f282, %f278, %f280, 0f00000000;
	and.b32  	%r298, %r297, 1;
	fma.rn.f32 	%f315, %f313, %f309, 0fC09DE9E6;
	fma.rn.f32 	%f316, %f312, %f314, 0f00000000;
	and.b32  	%r305, %r304, 1;
	fma.rn.f32 	%f350, %f348, %f344, 0fC09DE9E6;
	fma.rn.f32 	%f351, %f347, %f349, 0f00000000;
	and.b32  	%r316, %r315, 1;
	fma.rn.f32 	%f384, %f382, %f378, 0fC09DE9E6;
	fma.rn.f32 	%f385, %f381, %f383, 0f00000000;
	and.b32  	%r323, %r322, 1;
	fma.rn.f32 	%f419, %f417, %f413, 0fC09DE9E6;
	fma.rn.f32 	%f420, %f416, %f418, 0f00000000;
	and.b32  	%r334, %r333, 1;
	fma.rn.f32 	%f453, %f451, %f447, 0fC09DE9E6;
	fma.rn.f32 	%f454, %f450, %f452, 0f00000000;
	and.b32  	%r341, %r340, 1;
	fma.rn.f32 	%f488, %f486, %f482, 0fC09DE9E6;
	fma.rn.f32 	%f489, %f485, %f487, 0f00000000;
	and.b32  	%r352, %r351, 1;
	fma.rn.f32 	%f522, %f520, %f516, 0fC09DE9E6;
	fma.rn.f32 	%f523, %f519, %f521, 0f00000000;
	and.b32  	%r359, %r358, 1;
	fma.rn.f32 	%f557, %f555, %f551, 0fC09DE9E6;
	fma.rn.f32 	%f558, %f554, %f556, 0f00000000;
	and.b32  	%r370, %r369, 1;
	fma.rn.f32 	%f591, %f589, %f585, 0fC09DE9E6;
	fma.rn.f32 	%f592, %f588, %f590, 0f00000000;
	and.b32  	%r377, %r376, 1;
	fma.rn.f32 	%f626, %f624, %f620, 0fC09DE9E6;
	fma.rn.f32 	%f627, %f623, %f625, 0f00000000;
	and.b32  	%r388, %r387, 1;
	fma.rn.f32 	%f660, %f658, %f654, 0fC09DE9E6;
	fma.rn.f32 	%f661, %f657, %f659, 0f00000000;
	and.b32  	%r395, %r394, 1;
	fma.rn.f32 	%f695, %f693, %f689, 0fC09DE9E6;
	fma.rn.f32 	%f696, %f692, %f694, 0f00000000;
	and.b32  	%r406, %r405, 1;
	fma.rn.f32 	%f729, %f727, %f723, 0fC09DE9E6;
	fma.rn.f32 	%f730, %f726, %f728, 0f00000000;
	and.b32  	%r413, %r412, 1;
	fma.rn.f32 	%f764, %f762, %f758, 0fC09DE9E6;
	fma.rn.f32 	%f765, %f761, %f763, 0f00000000;
	and.b32  	%r424, %r423, 1;
	fma.rn.f32 	%f798, %f796, %f792, 0fC09DE9E6;
	fma.rn.f32 	%f799, %f795, %f797, 0f00000000;
	and.b32  	%r431, %r430, 1;
	fma.rn.f32 	%f849, %f847, %f841, 0f3F800000;
	fma.rn.f32 	%f850, %f840, 0f40490FDB, %f848;
	setp.eq.b32 	%p126, %r448, 1;
	fma.rn.f32 	%f901, %f899, %f893, 0f3F800000;
	fma.rn.f32 	%f902, %f892, 0f40490FDB, %f900;
	setp.eq.b32 	%p146, %r477, 1;
	fma.rn.f32 	%f955, %f953, %f947, 0f3F800000;
	fma.rn.f32 	%f956, %f946, 0f40490FDB, %f954;
	setp.eq.b32 	%p166, %r500, 1;
	fma.rn.f32 	%f1007, %f1005, %f999, 0f3F800000;
	fma.rn.f32 	%f1008, %f998, 0f40490FDB, %f1006;
	setp.eq.b32 	%p186, %r532, 1;
	fma.rn.f32 	%f1058, %f1056, %f1052, 0fC09DE9E6;
	fma.rn.f32 	%f1059, %f1055, %f1057, 0f00000000;
	and.b32  	%r552, %r551, 1;
	abs.f32 	%f1093, %f1374;
	setp.gtu.f32 	%p223, %f1093, 0f7F800000;
	@%p223 bra 	$L__BB0_124;
// %bb.123:
	mov.b32 	%r562, %f164;
	and.b32  	%r563, %r562, -2147483648;
	mov.b32 	%r564, %f1374;
	or.b32  	%r565, %r563, %r564;
	mov.b32 	%f1374, %r565;
$L__BB0_124:                            // %__nv_fmodf.exit1785
	and.b32  	%r179, %r178, 8;
	shl.b32 	%r180, %r2, 2;
	and.b32  	%r185, %r2, 18;
	fma.rn.f32 	%f283, %f281, %f275, 0f3F800000;
	fma.rn.f32 	%f284, %f274, 0f40490FDB, %f282;
	setp.eq.b32 	%p18, %r298, 1;
	fma.rn.f32 	%f317, %f315, %f309, 0f3F800000;
	fma.rn.f32 	%f318, %f308, 0f40490FDB, %f316;
	setp.eq.b32 	%p24, %r305, 1;
	fma.rn.f32 	%f352, %f350, %f344, 0f3F800000;
	fma.rn.f32 	%f353, %f343, 0f40490FDB, %f351;
	setp.eq.b32 	%p30, %r316, 1;
	fma.rn.f32 	%f386, %f384, %f378, 0f3F800000;
	fma.rn.f32 	%f387, %f377, 0f40490FDB, %f385;
	setp.eq.b32 	%p36, %r323, 1;
	fma.rn.f32 	%f421, %f419, %f413, 0f3F800000;
	fma.rn.f32 	%f422, %f412, 0f40490FDB, %f420;
	setp.eq.b32 	%p42, %r334, 1;
	fma.rn.f32 	%f455, %f453, %f447, 0f3F800000;
	fma.rn.f32 	%f456, %f446, 0f40490FDB, %f454;
	setp.eq.b32 	%p48, %r341, 1;
	fma.rn.f32 	%f490, %f488, %f482, 0f3F800000;
	fma.rn.f32 	%f491, %f481, 0f40490FDB, %f489;
	setp.eq.b32 	%p54, %r352, 1;
	fma.rn.f32 	%f524, %f522, %f516, 0f3F800000;
	fma.rn.f32 	%f525, %f515, 0f40490FDB, %f523;
	setp.eq.b32 	%p60, %r359, 1;
	fma.rn.f32 	%f559, %f557, %f551, 0f3F800000;
	fma.rn.f32 	%f560, %f550, 0f40490FDB, %f558;
	setp.eq.b32 	%p66, %r370, 1;
	fma.rn.f32 	%f593, %f591, %f585, 0f3F800000;
	fma.rn.f32 	%f594, %f584, 0f40490FDB, %f592;
	setp.eq.b32 	%p72, %r377, 1;
	fma.rn.f32 	%f628, %f626, %f620, 0f3F800000;
	fma.rn.f32 	%f629, %f619, 0f40490FDB, %f627;
	setp.eq.b32 	%p78, %r388, 1;
	fma.rn.f32 	%f662, %f660, %f654, 0f3F800000;
	fma.rn.f32 	%f663, %f653, 0f40490FDB, %f661;
	setp.eq.b32 	%p84, %r395, 1;
	fma.rn.f32 	%f697, %f695, %f689, 0f3F800000;
	fma.rn.f32 	%f698, %f688, 0f40490FDB, %f696;
	setp.eq.b32 	%p90, %r406, 1;
	fma.rn.f32 	%f731, %f729, %f723, 0f3F800000;
	fma.rn.f32 	%f732, %f722, 0f40490FDB, %f730;
	setp.eq.b32 	%p96, %r413, 1;
	fma.rn.f32 	%f766, %f764, %f758, 0f3F800000;
	fma.rn.f32 	%f767, %f757, 0f40490FDB, %f765;
	setp.eq.b32 	%p102, %r424, 1;
	fma.rn.f32 	%f800, %f798, %f792, 0f3F800000;
	fma.rn.f32 	%f801, %f791, 0f40490FDB, %f799;
	setp.eq.b32 	%p108, %r431, 1;
	selp.f32 	%f851, %f849, %f850, %p126;
	and.b32  	%r449, %r447, 2;
	selp.f32 	%f903, %f901, %f902, %p146;
	and.b32  	%r478, %r476, 2;
	selp.f32 	%f957, %f955, %f956, %p166;
	and.b32  	%r501, %r499, 2;
	selp.f32 	%f1009, %f1007, %f1008, %p186;
	and.b32  	%r533, %r531, 2;
	fma.rn.f32 	%f1060, %f1058, %f1052, 0f3F800000;
	fma.rn.f32 	%f1061, %f1051, 0f40490FDB, %f1059;
	setp.eq.b32 	%p206, %r552, 1;
	add.f32 	%f1094, %f1374, %f1374;
	mov.b32 	%r572, %f1094;
	and.b32  	%r573, %r572, -2147483648;
	or.b32  	%r574, %r573, 1056964608;
	mov.b32 	%f1095, %r574;
	add.f32 	%f1096, %f1094, %f1095;
	cvt.rzi.f32.f32 	%f1097, %f1096;
	abs.f32 	%f1098, %f1094;
	setp.gt.f32 	%p224, %f1098, 0f4B000000;
	selp.f32 	%f1099, %f1094, %f1097, %p224;
	cvt.rzi.f32.f32 	%f1100, %f1094;
	setp.lt.f32 	%p225, %f1098, 0f3F000000;
	selp.f32 	%f1101, %f1100, %f1099, %p225;
	cvt.rzi.s32.f32 	%r575, %f1101;
	fma.rn.f32 	%f1102, %f1101, 0fBF000000, %f1374;
	mul.f32 	%f1103, %f1102, %f1102;
	fma.rn.f32 	%f1104, %f1103, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1105, %f1103, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1106, %f1104, %f1103, 0fC0A55DF6;
	fma.rn.f32 	%f1107, %f1105, %f1103, 0f4081E0CF;
	fma.rn.f32 	%f1108, %f1103, %f1102, 0f00000000;
	fma.rn.f32 	%f1109, %f1107, %f1103, 0fC09DE9E6;
	fma.rn.f32 	%f1110, %f1106, %f1108, 0f00000000;
	fma.rn.f32 	%f1111, %f1109, %f1103, 0f3F800000;
	fma.rn.f32 	%f1112, %f1102, 0f40490FDB, %f1110;
	and.b32  	%r576, %r575, 1;
	setp.eq.b32 	%p226, %r576, 1;
	mov.f32 	%f1126, 0f41800000;
	div.approx.f32 	%f181, %f143, %f1126;
	abs.f32 	%f1378, %f181;
	setp.lt.f32 	%p231, %f1378, 0f40000000;
	@%p231 bra 	$L__BB0_136;
// %bb.125:
	setp.gtu.f32 	%p232, %f1378, 0f4B800000;
	@%p232 bra 	$L__BB0_132;
	bra.uni 	$L__BB0_126;
$L__BB0_132:
	mov.b32 	%r86, %f1378;
	and.b32  	%r580, %r86, 8388607;
	or.b32  	%r16376, %r580, 1065353216;
	mov.b32 	%f1377, %r16376;
	add.s32 	%r581, %r86, -1073741824;
	and.b32  	%r16377, %r581, -8388608;
	setp.eq.s32 	%p238, %r16377, 0;
	@%p238 bra 	$L__BB0_135;
// %bb.133:                             // %__nv_fmaf_rn.exit4.i.i.i1810.preheader
	mov.f32 	%f1136, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1135,%f1136;
	// end inline asm
$L__BB0_134:                            // %__nv_fmaf_rn.exit4.i.i.i1810
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r582, %r16377, 192937984;
	add.s32 	%r583, %r16376, %r582;
	mov.b32 	%f1137, %r583;
	mul.f32 	%f1138, %f1135, %f1137;
	sub.f32 	%f1139, %f1137, %f1138;
	fma.rn.f32 	%f1140, %f1139, %f1135, %f1138;
	sub.f32 	%f1141, %f1137, %f1140;
	fma.rz.f32 	%f1142, %f1141, %f1135, %f1140;
	cvt.rzi.f32.f32 	%f1143, %f1142;
	sub.f32 	%f1377, %f1137, %f1143;
	sub.s32 	%r16377, %r16377, %r582;
	mov.b32 	%r16376, %f1377;
	setp.ne.s32 	%p239, %r16377, 0;
	setp.ne.s32 	%p240, %r16376, 0;
	and.pred  	%p241, %p239, %p240;
	@%p241 bra 	$L__BB0_134;
$L__BB0_135:                            // %__internal_fmodf_slowpath_mod.exit.i.i1812
	setp.gt.u32 	%p242, %r86, 2139095039;
	selp.f32 	%f1144, 0f7FFFFFFF, 0f4B800000, %p242;
	mul.f32 	%f1145, %f1377, 0f34000000;
	mul.f32 	%f1378, %f1144, %f1145;
	bra.uni 	$L__BB0_136;
$L__BB0_126:                            // %__nv_fast_fdividef.exit.i.i.i1789
	div.approx.f32 	%f1128, %f1378, %f257;
	cvt.rzi.f32.f32 	%f1376, %f1128;
	fma.rn.f32 	%f184, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r85, %f184;
	setp.lt.u32 	%p233, %r85, 1073741824;
	@%p233 bra 	$L__BB0_131;
// %bb.127:
	setp.lt.u32 	%p234, %r85, -2147483647;
	@%p234 bra 	$L__BB0_129;
// %bb.128:
	add.f32 	%f1133, %f1376, 0fBF800000;
	setp.lt.f32 	%p237, %f184, 0fC0000000;
	add.f32 	%f1134, %f1133, 0fBF800000;
	selp.f32 	%f1376, %f1134, %f1133, %p237;
	bra.uni 	$L__BB0_131;
$L__BB0_129:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p235, %f184, 0f40800000;
	@%p235 bra 	$L__BB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i1793
	add.f32 	%f1129, %f1376, 0f3F800000;
	fma.rn.f32 	%f1131, %f257, 0fC0400000, %f184;
	setp.ge.f32 	%p236, %f1131, 0f00000000;
	add.f32 	%f1132, %f1129, 0f3F800000;
	selp.f32 	%f1376, %f1132, %f1129, %p236;
$L__BB0_131:                            // %__internal_fmodf_fastpath_quot.exit.i.i1796
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
$L__BB0_136:                            // %__internal_fmodf_kernel.exit.i1815
	and.b32  	%r181, %r180, 32;
	or.b32  	%r280, %r185, %r179;
	selp.f32 	%f285, %f283, %f284, %p18;
	and.b32  	%r299, %r297, 2;
	mov.f32 	%f286, 0f00000000;
	selp.f32 	%f319, %f317, %f318, %p24;
	and.b32  	%r306, %r304, 2;
	selp.f32 	%f354, %f352, %f353, %p30;
	and.b32  	%r317, %r315, 2;
	selp.f32 	%f388, %f386, %f387, %p36;
	and.b32  	%r324, %r322, 2;
	selp.f32 	%f423, %f421, %f422, %p42;
	and.b32  	%r335, %r333, 2;
	selp.f32 	%f457, %f455, %f456, %p48;
	and.b32  	%r342, %r340, 2;
	selp.f32 	%f492, %f490, %f491, %p54;
	and.b32  	%r353, %r351, 2;
	selp.f32 	%f526, %f524, %f525, %p60;
	and.b32  	%r360, %r358, 2;
	selp.f32 	%f561, %f559, %f560, %p66;
	and.b32  	%r371, %r369, 2;
	selp.f32 	%f595, %f593, %f594, %p72;
	and.b32  	%r378, %r376, 2;
	selp.f32 	%f630, %f628, %f629, %p78;
	and.b32  	%r389, %r387, 2;
	selp.f32 	%f664, %f662, %f663, %p84;
	and.b32  	%r396, %r394, 2;
	selp.f32 	%f699, %f697, %f698, %p90;
	and.b32  	%r407, %r405, 2;
	selp.f32 	%f733, %f731, %f732, %p96;
	and.b32  	%r414, %r412, 2;
	selp.f32 	%f768, %f766, %f767, %p102;
	and.b32  	%r425, %r423, 2;
	selp.f32 	%f802, %f800, %f801, %p108;
	and.b32  	%r432, %r430, 2;
	setp.eq.s32 	%p127, %r449, 0;
	neg.f32 	%f853, %f851;
	add.s32 	%r450, %r447, 1;
	cvt.rzi.f32.f32 	%f858, %f1354;
	setp.eq.s32 	%p147, %r478, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r479, %r476, 1;
	cvt.rzi.f32.f32 	%f910, %f1358;
	setp.eq.s32 	%p167, %r501, 0;
	neg.f32 	%f959, %f957;
	add.s32 	%r502, %r499, 1;
	cvt.rzi.f32.f32 	%f964, %f1362;
	setp.eq.s32 	%p187, %r533, 0;
	neg.f32 	%f1011, %f1009;
	add.s32 	%r534, %r531, 1;
	cvt.rzi.f32.f32 	%f1016, %f1366;
	selp.f32 	%f1062, %f1060, %f1061, %p206;
	and.b32  	%r553, %r551, 2;
	selp.f32 	%f1113, %f1111, %f1112, %p226;
	and.b32  	%r577, %r575, 2;
	abs.f32 	%f1146, %f1378;
	setp.gtu.f32 	%p243, %f1146, 0f7F800000;
	@%p243 bra 	$L__BB0_138;
// %bb.137:
	mov.b32 	%r584, %f181;
	and.b32  	%r585, %r584, -2147483648;
	mov.b32 	%r586, %f1378;
	or.b32  	%r587, %r585, %r586;
	mov.b32 	%f1378, %r587;
$L__BB0_138:                            // %__nv_fmodf.exit1816
	and.b32  	%r182, %r180, 4;
	shl.b32 	%r183, %r1, 5;
	or.b32  	%r281, %r280, %r181;
	setp.eq.s32 	%p19, %r299, 0;
	sub.f32 	%f287, %f286, %f285;
	setp.eq.s32 	%p25, %r306, 0;
	sub.f32 	%f321, %f286, %f319;
	setp.eq.s32 	%p31, %r317, 0;
	sub.f32 	%f356, %f286, %f354;
	setp.eq.s32 	%p37, %r324, 0;
	sub.f32 	%f390, %f286, %f388;
	setp.eq.s32 	%p43, %r335, 0;
	sub.f32 	%f425, %f286, %f423;
	setp.eq.s32 	%p49, %r342, 0;
	sub.f32 	%f459, %f286, %f457;
	setp.eq.s32 	%p55, %r353, 0;
	sub.f32 	%f494, %f286, %f492;
	setp.eq.s32 	%p61, %r360, 0;
	sub.f32 	%f528, %f286, %f526;
	setp.eq.s32 	%p67, %r371, 0;
	sub.f32 	%f563, %f286, %f561;
	setp.eq.s32 	%p73, %r378, 0;
	sub.f32 	%f597, %f286, %f595;
	setp.eq.s32 	%p79, %r389, 0;
	sub.f32 	%f632, %f286, %f630;
	setp.eq.s32 	%p85, %r396, 0;
	sub.f32 	%f666, %f286, %f664;
	setp.eq.s32 	%p91, %r407, 0;
	sub.f32 	%f701, %f286, %f699;
	setp.eq.s32 	%p97, %r414, 0;
	sub.f32 	%f735, %f286, %f733;
	setp.eq.s32 	%p103, %r425, 0;
	sub.f32 	%f770, %f286, %f768;
	setp.eq.s32 	%p109, %r432, 0;
	sub.f32 	%f804, %f286, %f802;
	selp.f32 	%f852, %f850, %f849, %p126;
	selp.f32 	%f854, %f851, %f853, %p127;
	and.b32  	%r451, %r450, 2;
	setp.eq.f32 	%p129, %f858, %f1354;
	mul.f32 	%f859, %f1354, 0f00000000;
	selp.f32 	%f904, %f902, %f901, %p146;
	selp.f32 	%f906, %f903, %f905, %p147;
	and.b32  	%r480, %r479, 2;
	setp.eq.f32 	%p149, %f910, %f1358;
	mul.f32 	%f911, %f1358, 0f00000000;
	selp.f32 	%f958, %f956, %f955, %p166;
	selp.f32 	%f960, %f957, %f959, %p167;
	and.b32  	%r503, %r502, 2;
	setp.eq.f32 	%p169, %f964, %f1362;
	mul.f32 	%f965, %f1362, 0f00000000;
	selp.f32 	%f1010, %f1008, %f1007, %p186;
	selp.f32 	%f1012, %f1009, %f1011, %p187;
	and.b32  	%r535, %r534, 2;
	setp.eq.f32 	%p189, %f1016, %f1366;
	mul.f32 	%f1017, %f1366, 0f00000000;
	setp.eq.s32 	%p207, %r553, 0;
	neg.f32 	%f1064, %f1062;
	add.s32 	%r554, %r551, 1;
	cvt.rzi.f32.f32 	%f1069, %f1370;
	setp.eq.s32 	%p227, %r577, 0;
	neg.f32 	%f1115, %f1113;
	add.s32 	%r578, %r575, 1;
	cvt.rzi.f32.f32 	%f1120, %f1374;
	add.f32 	%f1147, %f1378, %f1378;
	mov.b32 	%r588, %f1147;
	and.b32  	%r589, %r588, -2147483648;
	or.b32  	%r590, %r589, 1056964608;
	mov.b32 	%f1148, %r590;
	add.f32 	%f1149, %f1147, %f1148;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	abs.f32 	%f1151, %f1147;
	setp.gt.f32 	%p244, %f1151, 0f4B000000;
	selp.f32 	%f1152, %f1147, %f1150, %p244;
	cvt.rzi.f32.f32 	%f1153, %f1147;
	setp.lt.f32 	%p245, %f1151, 0f3F000000;
	selp.f32 	%f1154, %f1153, %f1152, %p245;
	cvt.rzi.s32.f32 	%r591, %f1154;
	fma.rn.f32 	%f1155, %f1154, 0fBF000000, %f1378;
	mul.f32 	%f1156, %f1155, %f1155;
	fma.rn.f32 	%f1157, %f1156, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1158, %f1156, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1159, %f1157, %f1156, 0fC0A55DF6;
	fma.rn.f32 	%f1160, %f1158, %f1156, 0f4081E0CF;
	fma.rn.f32 	%f1161, %f1156, %f1155, 0f00000000;
	fma.rn.f32 	%f1162, %f1160, %f1156, 0fC09DE9E6;
	fma.rn.f32 	%f1163, %f1159, %f1161, 0f00000000;
	fma.rn.f32 	%f1164, %f1162, %f1156, 0f3F800000;
	fma.rn.f32 	%f1165, %f1155, 0f40490FDB, %f1163;
	and.b32  	%r592, %r591, 1;
	setp.eq.b32 	%p246, %r592, 1;
	selp.f32 	%f1166, %f1164, %f1165, %p246;
	selp.f32 	%f1167, %f1165, %f1164, %p246;
	and.b32  	%r593, %r591, 2;
	setp.eq.s32 	%p247, %r593, 0;
	neg.f32 	%f1168, %f1166;
	selp.f32 	%f1169, %f1166, %f1168, %p247;
	add.s32 	%r594, %r591, 1;
	and.b32  	%r595, %r594, 2;
	cvt.rzi.f32.f32 	%f1173, %f1378;
	setp.eq.f32 	%p249, %f1173, %f1378;
	mul.f32 	%f1174, %f1378, 0f00000000;
	div.approx.f32 	%f200, %f163, %f1126;
	abs.f32 	%f1382, %f200;
	setp.lt.f32 	%p251, %f1382, 0f40000000;
	@%p251 bra 	$L__BB0_150;
// %bb.139:
	setp.gtu.f32 	%p252, %f1382, 0f4B800000;
	@%p252 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_140;
$L__BB0_146:
	mov.b32 	%r94, %f1382;
	and.b32  	%r596, %r94, 8388607;
	or.b32  	%r16378, %r596, 1065353216;
	mov.b32 	%f1381, %r16378;
	add.s32 	%r597, %r94, -1073741824;
	and.b32  	%r16379, %r597, -8388608;
	setp.eq.s32 	%p258, %r16379, 0;
	@%p258 bra 	$L__BB0_149;
// %bb.147:                             // %__nv_fmaf_rn.exit4.i.i.i1841.preheader
	mov.f32 	%f1187, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1186,%f1187;
	// end inline asm
$L__BB0_148:                            // %__nv_fmaf_rn.exit4.i.i.i1841
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r598, %r16379, 192937984;
	add.s32 	%r599, %r16378, %r598;
	mov.b32 	%f1188, %r599;
	mul.f32 	%f1189, %f1186, %f1188;
	sub.f32 	%f1190, %f1188, %f1189;
	fma.rn.f32 	%f1191, %f1190, %f1186, %f1189;
	sub.f32 	%f1192, %f1188, %f1191;
	fma.rz.f32 	%f1193, %f1192, %f1186, %f1191;
	cvt.rzi.f32.f32 	%f1194, %f1193;
	sub.f32 	%f1381, %f1188, %f1194;
	sub.s32 	%r16379, %r16379, %r598;
	mov.b32 	%r16378, %f1381;
	setp.ne.s32 	%p259, %r16379, 0;
	setp.ne.s32 	%p260, %r16378, 0;
	and.pred  	%p261, %p259, %p260;
	@%p261 bra 	$L__BB0_148;
$L__BB0_149:                            // %__internal_fmodf_slowpath_mod.exit.i.i1843
	setp.gt.u32 	%p262, %r94, 2139095039;
	selp.f32 	%f1195, 0f7FFFFFFF, 0f4B800000, %p262;
	mul.f32 	%f1196, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1195, %f1196;
	bra.uni 	$L__BB0_150;
$L__BB0_140:                            // %__nv_fast_fdividef.exit.i.i.i1820
	div.approx.f32 	%f1179, %f1382, %f257;
	cvt.rzi.f32.f32 	%f1380, %f1179;
	fma.rn.f32 	%f203, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r93, %f203;
	setp.lt.u32 	%p253, %r93, 1073741824;
	@%p253 bra 	$L__BB0_145;
// %bb.141:
	setp.lt.u32 	%p254, %r93, -2147483647;
	@%p254 bra 	$L__BB0_143;
// %bb.142:
	add.f32 	%f1184, %f1380, 0fBF800000;
	setp.lt.f32 	%p257, %f203, 0fC0000000;
	add.f32 	%f1185, %f1184, 0fBF800000;
	selp.f32 	%f1380, %f1185, %f1184, %p257;
	bra.uni 	$L__BB0_145;
$L__BB0_143:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p255, %f203, 0f40800000;
	@%p255 bra 	$L__BB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i1824
	add.f32 	%f1180, %f1380, 0f3F800000;
	fma.rn.f32 	%f1182, %f257, 0fC0400000, %f203;
	setp.ge.f32 	%p256, %f1182, 0f00000000;
	add.f32 	%f1183, %f1180, 0f3F800000;
	selp.f32 	%f1380, %f1183, %f1180, %p256;
$L__BB0_145:                            // %__internal_fmodf_fastpath_quot.exit.i.i1827
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
$L__BB0_150:                            // %__internal_fmodf_kernel.exit.i1846
	and.b32  	%r184, %r183, 8064;
	or.b32  	%r282, %r281, %r182;
	selp.f32 	%f288, %f285, %f287, %p19;
	selp.f32 	%f322, %f319, %f321, %p25;
	selp.f32 	%f357, %f354, %f356, %p31;
	selp.f32 	%f391, %f388, %f390, %p37;
	selp.f32 	%f426, %f423, %f425, %p43;
	selp.f32 	%f460, %f457, %f459, %p49;
	selp.f32 	%f495, %f492, %f494, %p55;
	selp.f32 	%f529, %f526, %f528, %p61;
	selp.f32 	%f564, %f561, %f563, %p67;
	selp.f32 	%f598, %f595, %f597, %p73;
	selp.f32 	%f633, %f630, %f632, %p79;
	selp.f32 	%f667, %f664, %f666, %p85;
	selp.f32 	%f702, %f699, %f701, %p91;
	selp.f32 	%f736, %f733, %f735, %p97;
	selp.f32 	%f771, %f768, %f770, %p103;
	selp.f32 	%f805, %f802, %f804, %p109;
	setp.eq.s32 	%p128, %r451, 0;
	sub.f32 	%f856, %f286, %f852;
	selp.f32 	%f88, %f859, %f854, %p129;
	abs.f32 	%f860, %f1354;
	setp.eq.s32 	%p148, %r480, 0;
	sub.f32 	%f908, %f286, %f904;
	selp.f32 	%f912, %f911, %f906, %p149;
	abs.f32 	%f913, %f1358;
	setp.eq.s32 	%p168, %r503, 0;
	sub.f32 	%f962, %f286, %f958;
	selp.f32 	%f124, %f965, %f960, %p169;
	abs.f32 	%f966, %f1362;
	setp.eq.s32 	%p188, %r535, 0;
	sub.f32 	%f1014, %f286, %f1010;
	selp.f32 	%f1018, %f1017, %f1012, %p189;
	abs.f32 	%f1019, %f1366;
	selp.f32 	%f1063, %f1061, %f1060, %p206;
	selp.f32 	%f1065, %f1062, %f1064, %p207;
	and.b32  	%r555, %r554, 2;
	setp.eq.f32 	%p209, %f1069, %f1370;
	mul.f32 	%f1070, %f1370, 0f00000000;
	selp.f32 	%f1114, %f1112, %f1111, %p226;
	selp.f32 	%f1116, %f1113, %f1115, %p227;
	and.b32  	%r579, %r578, 2;
	setp.eq.f32 	%p229, %f1120, %f1374;
	mul.f32 	%f1121, %f1374, 0f00000000;
	setp.eq.s32 	%p248, %r595, 0;
	sub.f32 	%f1171, %f286, %f1167;
	selp.f32 	%f198, %f1174, %f1169, %p249;
	abs.f32 	%f1175, %f1378;
	and.b32  	%r177, %r2, 16;
	abs.f32 	%f1197, %f1382;
	setp.gtu.f32 	%p263, %f1197, 0f7F800000;
	@%p263 bra 	$L__BB0_152;
// %bb.151:
	mov.b32 	%r600, %f200;
	and.b32  	%r601, %r600, -2147483648;
	mov.b32 	%r602, %f1382;
	or.b32  	%r603, %r601, %r602;
	mov.b32 	%f1382, %r603;
$L__BB0_152:                            // %__nv_fmodf.exit1847
	or.b32  	%r283, %r282, %r184;
	mul.f32 	%f254, %f288, %f288;
	mul.f32 	%f4, %f322, %f322;
	mul.f32 	%f8, %f357, %f357;
	mul.f32 	%f13, %f391, %f391;
	mul.f32 	%f17, %f426, %f426;
	mul.f32 	%f22, %f460, %f460;
	mul.f32 	%f26, %f495, %f495;
	mul.f32 	%f31, %f529, %f529;
	mul.f32 	%f35, %f564, %f564;
	mul.f32 	%f40, %f598, %f598;
	mul.f32 	%f44, %f633, %f633;
	mul.f32 	%f49, %f667, %f667;
	mul.f32 	%f53, %f702, %f702;
	mul.f32 	%f58, %f736, %f736;
	mul.f32 	%f62, %f771, %f771;
	mul.f32 	%f67, %f805, %f805;
	selp.f32 	%f857, %f852, %f856, %p128;
	setp.gt.f32 	%p130, %f860, 0f4B800000;
	add.f32 	%f861, %f88, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p148;
	setp.gt.f32 	%p150, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f963, %f958, %f962, %p168;
	setp.gt.f32 	%p170, %f966, 0f4B800000;
	add.f32 	%f967, %f124, 0f3F800000;
	selp.f32 	%f1015, %f1010, %f1014, %p188;
	setp.gt.f32 	%p190, %f1019, 0f4B800000;
	add.f32 	%f1020, %f1018, 0f3F800000;
	setp.eq.s32 	%p208, %r555, 0;
	sub.f32 	%f1067, %f286, %f1063;
	selp.f32 	%f161, %f1070, %f1065, %p209;
	abs.f32 	%f1071, %f1370;
	setp.eq.s32 	%p228, %r579, 0;
	sub.f32 	%f1118, %f286, %f1114;
	selp.f32 	%f1122, %f1121, %f1116, %p229;
	abs.f32 	%f1123, %f1374;
	selp.f32 	%f1172, %f1167, %f1171, %p248;
	setp.gt.f32 	%p250, %f1175, 0f4B800000;
	add.f32 	%f1176, %f198, 0f3F800000;
	add.f32 	%f1198, %f1382, %f1382;
	mov.b32 	%r616, %f1198;
	and.b32  	%r617, %r616, -2147483648;
	or.b32  	%r618, %r617, 1056964608;
	mov.b32 	%f1199, %r618;
	add.f32 	%f1200, %f1198, %f1199;
	cvt.rzi.f32.f32 	%f1201, %f1200;
	abs.f32 	%f1202, %f1198;
	setp.gt.f32 	%p264, %f1202, 0f4B000000;
	selp.f32 	%f1203, %f1198, %f1201, %p264;
	cvt.rzi.f32.f32 	%f1204, %f1198;
	setp.lt.f32 	%p265, %f1202, 0f3F000000;
	selp.f32 	%f1205, %f1204, %f1203, %p265;
	cvt.rzi.s32.f32 	%r619, %f1205;
	fma.rn.f32 	%f1206, %f1205, 0fBF000000, %f1382;
	mul.f32 	%f1207, %f1206, %f1206;
	fma.rn.f32 	%f1208, %f1207, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1209, %f1207, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1210, %f1208, %f1207, 0fC0A55DF6;
	fma.rn.f32 	%f1211, %f1209, %f1207, 0f4081E0CF;
	fma.rn.f32 	%f1212, %f1207, %f1206, 0f00000000;
	fma.rn.f32 	%f1213, %f1211, %f1207, 0fC09DE9E6;
	fma.rn.f32 	%f1214, %f1210, %f1212, 0f00000000;
	fma.rn.f32 	%f1215, %f1213, %f1207, 0f3F800000;
	fma.rn.f32 	%f1216, %f1206, 0f40490FDB, %f1214;
	and.b32  	%r620, %r619, 1;
	setp.eq.b32 	%p266, %r620, 1;
	selp.f32 	%f1217, %f1215, %f1216, %p266;
	selp.f32 	%f1218, %f1216, %f1215, %p266;
	and.b32  	%r621, %r619, 2;
	setp.eq.s32 	%p267, %r621, 0;
	neg.f32 	%f1219, %f1217;
	selp.f32 	%f1220, %f1217, %f1219, %p267;
	add.s32 	%r622, %r619, 1;
	and.b32  	%r623, %r622, 2;
	setp.eq.s32 	%p268, %r623, 0;
	sub.f32 	%f1222, %f286, %f1218;
	selp.f32 	%f1223, %f1218, %f1222, %p268;
	cvt.rzi.f32.f32 	%f1224, %f1382;
	setp.eq.f32 	%p269, %f1224, %f1382;
	mul.f32 	%f1225, %f1382, 0f00000000;
	selp.f32 	%f1226, %f1225, %f1220, %p269;
	abs.f32 	%f1227, %f1382;
	setp.gt.f32 	%p270, %f1227, 0f4B800000;
	add.f32 	%f1228, %f1226, 0f3F800000;
	mul.lo.s32 	%r624, %r192, 2147483640;
	cvt.u16.u32 	%rs1, %r2;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	sub.s32 	%r625, %r624, %r177;
	mad.lo.s32 	%r626, %r195, 2147483616, %r625;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r627, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r628, %rs21;
	sub.s32 	%r629, %r626, %r628;
	shl.b32 	%r630, %r629, 1;
	cvt.rn.f32.s32 	%f1230, %r630;
	div.approx.f32 	%f217, %f1230, %f289;
	abs.f32 	%f1386, %f217;
	setp.lt.f32 	%p271, %f1386, 0f40000000;
	@%p271 bra 	$L__BB0_164;
// %bb.153:
	setp.gtu.f32 	%p272, %f1386, 0f4B800000;
	@%p272 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_154;
$L__BB0_160:
	mov.b32 	%r107, %f1386;
	and.b32  	%r631, %r107, 8388607;
	or.b32  	%r16380, %r631, 1065353216;
	mov.b32 	%f1385, %r16380;
	add.s32 	%r632, %r107, -1073741824;
	and.b32  	%r16381, %r632, -8388608;
	setp.eq.s32 	%p278, %r16381, 0;
	@%p278 bra 	$L__BB0_163;
// %bb.161:                             // %__nv_fmaf_rn.exit4.i.i.i1872.preheader
	mov.f32 	%f1241, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1240,%f1241;
	// end inline asm
$L__BB0_162:                            // %__nv_fmaf_rn.exit4.i.i.i1872
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r633, %r16381, 192937984;
	add.s32 	%r634, %r16380, %r633;
	mov.b32 	%f1242, %r634;
	mul.f32 	%f1243, %f1240, %f1242;
	sub.f32 	%f1244, %f1242, %f1243;
	fma.rn.f32 	%f1245, %f1244, %f1240, %f1243;
	sub.f32 	%f1246, %f1242, %f1245;
	fma.rz.f32 	%f1247, %f1246, %f1240, %f1245;
	cvt.rzi.f32.f32 	%f1248, %f1247;
	sub.f32 	%f1385, %f1242, %f1248;
	sub.s32 	%r16381, %r16381, %r633;
	mov.b32 	%r16380, %f1385;
	setp.ne.s32 	%p279, %r16381, 0;
	setp.ne.s32 	%p280, %r16380, 0;
	and.pred  	%p281, %p279, %p280;
	@%p281 bra 	$L__BB0_162;
$L__BB0_163:                            // %__internal_fmodf_slowpath_mod.exit.i.i1874
	setp.gt.u32 	%p282, %r107, 2139095039;
	selp.f32 	%f1249, 0f7FFFFFFF, 0f4B800000, %p282;
	mul.f32 	%f1250, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1249, %f1250;
	bra.uni 	$L__BB0_164;
$L__BB0_154:                            // %__nv_fast_fdividef.exit.i.i.i1851
	div.approx.f32 	%f1233, %f1386, %f257;
	cvt.rzi.f32.f32 	%f1384, %f1233;
	fma.rn.f32 	%f220, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r106, %f220;
	setp.lt.u32 	%p273, %r106, 1073741824;
	@%p273 bra 	$L__BB0_159;
// %bb.155:
	setp.lt.u32 	%p274, %r106, -2147483647;
	@%p274 bra 	$L__BB0_157;
// %bb.156:
	add.f32 	%f1238, %f1384, 0fBF800000;
	setp.lt.f32 	%p277, %f220, 0fC0000000;
	add.f32 	%f1239, %f1238, 0fBF800000;
	selp.f32 	%f1384, %f1239, %f1238, %p277;
	bra.uni 	$L__BB0_159;
$L__BB0_157:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p275, %f220, 0f40800000;
	@%p275 bra 	$L__BB0_159;
// %bb.158:                             // %__nv_fmaf_rn.exit.i.i.i1855
	add.f32 	%f1234, %f1384, 0f3F800000;
	fma.rn.f32 	%f1236, %f257, 0fC0400000, %f220;
	setp.ge.f32 	%p276, %f1236, 0f00000000;
	add.f32 	%f1237, %f1234, 0f3F800000;
	selp.f32 	%f1384, %f1237, %f1234, %p276;
$L__BB0_159:                            // %__internal_fmodf_fastpath_quot.exit.i.i1858
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
$L__BB0_164:                            // %__internal_fmodf_kernel.exit.i1877
	shr.u32 	%r284, %r283, 1;
	mul.f32 	%f292, %f254, 0f3B8B2FF9;
	mul.f32 	%f326, %f4, 0f3B8B2FF9;
	mul.f32 	%f361, %f8, 0f3B8B2FF9;
	mul.f32 	%f395, %f13, 0f3B8B2FF9;
	mul.f32 	%f430, %f17, 0f3B8B2FF9;
	mul.f32 	%f464, %f22, 0f3B8B2FF9;
	mul.f32 	%f499, %f26, 0f3B8B2FF9;
	mul.f32 	%f533, %f31, 0f3B8B2FF9;
	mul.f32 	%f568, %f35, 0f3B8B2FF9;
	mul.f32 	%f602, %f40, 0f3B8B2FF9;
	mul.f32 	%f637, %f44, 0f3B8B2FF9;
	mul.f32 	%f671, %f49, 0f3B8B2FF9;
	mul.f32 	%f706, %f53, 0f3B8B2FF9;
	mul.f32 	%f740, %f58, 0f3B8B2FF9;
	mul.f32 	%f775, %f62, 0f3B8B2FF9;
	mul.f32 	%f808, %f67, 0f3B8B2FF9;
	selp.f32 	%f89, %f861, %f857, %p130;
	selp.f32 	%f915, %f914, %f909, %p150;
	selp.f32 	%f125, %f967, %f963, %p170;
	selp.f32 	%f1021, %f1020, %f1015, %p190;
	selp.f32 	%f1068, %f1063, %f1067, %p208;
	setp.gt.f32 	%p210, %f1071, 0f4B800000;
	add.f32 	%f1072, %f161, 0f3F800000;
	selp.f32 	%f1119, %f1114, %f1118, %p228;
	setp.gt.f32 	%p230, %f1123, 0f4B800000;
	add.f32 	%f1124, %f1122, 0f3F800000;
	selp.f32 	%f199, %f1176, %f1172, %p250;
	selp.f32 	%f1229, %f1228, %f1223, %p270;
	sub.s32 	%r105, %r626, %r627;
	abs.f32 	%f1251, %f1386;
	setp.gtu.f32 	%p283, %f1251, 0f7F800000;
	@%p283 bra 	$L__BB0_166;
// %bb.165:
	mov.b32 	%r635, %f217;
	and.b32  	%r636, %r635, -2147483648;
	mov.b32 	%r637, %f1386;
	or.b32  	%r638, %r636, %r637;
	mov.b32 	%f1386, %r638;
$L__BB0_166:                            // %__nv_fmodf.exit1878
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd48, %r284, 4;
	mul.f32 	%f3, %f292, %f1336;
	mul.f32 	%f327, %f326, %f1337;
	mul.f32 	%f12, %f361, %f1338;
	mul.f32 	%f396, %f395, %f1339;
	mul.f32 	%f21, %f430, %f1340;
	mul.f32 	%f465, %f464, %f1341;
	mul.f32 	%f30, %f499, %f1342;
	mul.f32 	%f534, %f533, %f1343;
	mul.f32 	%f39, %f568, %f1344;
	mul.f32 	%f603, %f602, %f1345;
	mul.f32 	%f48, %f637, %f1346;
	mul.f32 	%f672, %f671, %f1347;
	mul.f32 	%f57, %f706, %f1348;
	mul.f32 	%f741, %f740, %f1349;
	mul.f32 	%f66, %f775, %f1350;
	mul.f32 	%f809, %f808, %f1351;
	mov.b32 	%r463, %f915;
	mov.b32 	%r462, %f89;
	mov.b32 	%r469, %f912;
	mov.b32 	%r468, %f88;
	mov.b32 	%r518, %f1021;
	mov.b32 	%r517, %f125;
	mov.b32 	%r524, %f1018;
	mov.b32 	%r523, %f124;
	selp.f32 	%f162, %f1072, %f1068, %p210;
	selp.f32 	%f1125, %f1124, %f1119, %p230;
	mov.b32 	%r606, %f1229;
	mov.b32 	%r605, %f199;
	mov.b32 	%r612, %f1226;
	mov.b32 	%r611, %f198;
	add.f32 	%f1252, %f1386, %f1386;
	mov.b32 	%r639, %f1252;
	and.b32  	%r640, %r639, -2147483648;
	or.b32  	%r641, %r640, 1056964608;
	mov.b32 	%f1253, %r641;
	add.f32 	%f1254, %f1252, %f1253;
	cvt.rzi.f32.f32 	%f1255, %f1254;
	abs.f32 	%f1256, %f1252;
	setp.gt.f32 	%p284, %f1256, 0f4B000000;
	selp.f32 	%f1257, %f1252, %f1255, %p284;
	cvt.rzi.f32.f32 	%f1258, %f1252;
	setp.lt.f32 	%p285, %f1256, 0f3F000000;
	selp.f32 	%f1259, %f1258, %f1257, %p285;
	cvt.rzi.s32.f32 	%r642, %f1259;
	fma.rn.f32 	%f1260, %f1259, 0fBF000000, %f1386;
	mul.f32 	%f1261, %f1260, %f1260;
	fma.rn.f32 	%f1262, %f1261, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1263, %f1261, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1264, %f1262, %f1261, 0fC0A55DF6;
	fma.rn.f32 	%f1265, %f1263, %f1261, 0f4081E0CF;
	fma.rn.f32 	%f1266, %f1261, %f1260, 0f00000000;
	fma.rn.f32 	%f1267, %f1265, %f1261, 0fC09DE9E6;
	fma.rn.f32 	%f1268, %f1264, %f1266, 0f00000000;
	fma.rn.f32 	%f1269, %f1267, %f1261, 0f3F800000;
	fma.rn.f32 	%f1270, %f1260, 0f40490FDB, %f1268;
	and.b32  	%r643, %r642, 1;
	setp.eq.b32 	%p286, %r643, 1;
	selp.f32 	%f1271, %f1269, %f1270, %p286;
	selp.f32 	%f1272, %f1270, %f1269, %p286;
	and.b32  	%r644, %r642, 2;
	setp.eq.s32 	%p287, %r644, 0;
	neg.f32 	%f1273, %f1271;
	selp.f32 	%f1274, %f1271, %f1273, %p287;
	add.s32 	%r645, %r642, 1;
	and.b32  	%r646, %r645, 2;
	setp.eq.s32 	%p288, %r646, 0;
	sub.f32 	%f1276, %f286, %f1272;
	selp.f32 	%f1277, %f1272, %f1276, %p288;
	cvt.rzi.f32.f32 	%f1278, %f1386;
	setp.eq.f32 	%p289, %f1278, %f1386;
	mul.f32 	%f1279, %f1386, 0f00000000;
	selp.f32 	%f234, %f1279, %f1274, %p289;
	abs.f32 	%f1280, %f1386;
	setp.gt.f32 	%p290, %f1280, 0f4B800000;
	add.f32 	%f1281, %f234, 0f3F800000;
	shl.b32 	%r647, %r105, 1;
	cvt.rn.f32.s32 	%f1282, %r647;
	div.approx.f32 	%f236, %f1282, %f289;
	abs.f32 	%f1390, %f236;
	setp.lt.f32 	%p291, %f1390, 0f40000000;
	@%p291 bra 	$L__BB0_178;
// %bb.167:
	setp.gtu.f32 	%p292, %f1390, 0f4B800000;
	@%p292 bra 	$L__BB0_174;
	bra.uni 	$L__BB0_168;
$L__BB0_174:
	mov.b32 	%r115, %f1390;
	and.b32  	%r648, %r115, 8388607;
	or.b32  	%r16382, %r648, 1065353216;
	mov.b32 	%f1389, %r16382;
	add.s32 	%r649, %r115, -1073741824;
	and.b32  	%r16383, %r649, -8388608;
	setp.eq.s32 	%p298, %r16383, 0;
	@%p298 bra 	$L__BB0_177;
// %bb.175:                             // %__nv_fmaf_rn.exit4.i.i.i1903.preheader
	mov.f32 	%f1293, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1292,%f1293;
	// end inline asm
$L__BB0_176:                            // %__nv_fmaf_rn.exit4.i.i.i1903
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r650, %r16383, 192937984;
	add.s32 	%r651, %r16382, %r650;
	mov.b32 	%f1294, %r651;
	mul.f32 	%f1295, %f1292, %f1294;
	sub.f32 	%f1296, %f1294, %f1295;
	fma.rn.f32 	%f1297, %f1296, %f1292, %f1295;
	sub.f32 	%f1298, %f1294, %f1297;
	fma.rz.f32 	%f1299, %f1298, %f1292, %f1297;
	cvt.rzi.f32.f32 	%f1300, %f1299;
	sub.f32 	%f1389, %f1294, %f1300;
	sub.s32 	%r16383, %r16383, %r650;
	mov.b32 	%r16382, %f1389;
	setp.ne.s32 	%p299, %r16383, 0;
	setp.ne.s32 	%p300, %r16382, 0;
	and.pred  	%p301, %p299, %p300;
	@%p301 bra 	$L__BB0_176;
$L__BB0_177:                            // %__internal_fmodf_slowpath_mod.exit.i.i1905
	setp.gt.u32 	%p302, %r115, 2139095039;
	selp.f32 	%f1301, 0f7FFFFFFF, 0f4B800000, %p302;
	mul.f32 	%f1302, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1301, %f1302;
	bra.uni 	$L__BB0_178;
$L__BB0_168:                            // %__nv_fast_fdividef.exit.i.i.i1882
	div.approx.f32 	%f1285, %f1390, %f257;
	cvt.rzi.f32.f32 	%f1388, %f1285;
	fma.rn.f32 	%f239, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r114, %f239;
	setp.lt.u32 	%p293, %r114, 1073741824;
	@%p293 bra 	$L__BB0_173;
// %bb.169:
	setp.lt.u32 	%p294, %r114, -2147483647;
	@%p294 bra 	$L__BB0_171;
// %bb.170:
	add.f32 	%f1290, %f1388, 0fBF800000;
	setp.lt.f32 	%p297, %f239, 0fC0000000;
	add.f32 	%f1291, %f1290, 0fBF800000;
	selp.f32 	%f1388, %f1291, %f1290, %p297;
	bra.uni 	$L__BB0_173;
$L__BB0_171:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p295, %f239, 0f40800000;
	@%p295 bra 	$L__BB0_173;
// %bb.172:                             // %__nv_fmaf_rn.exit.i.i.i1886
	add.f32 	%f1286, %f1388, 0f3F800000;
	fma.rn.f32 	%f1288, %f257, 0fC0400000, %f239;
	setp.ge.f32 	%p296, %f1288, 0f00000000;
	add.f32 	%f1289, %f1286, 0f3F800000;
	selp.f32 	%f1388, %f1289, %f1286, %p296;
$L__BB0_173:                            // %__internal_fmodf_fastpath_quot.exit.i.i1889
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
$L__BB0_178:                            // %__internal_fmodf_kernel.exit.i1908
	add.s64 	%rd49, %rd1, %rd48;
	shr.u32 	%r191, %r2, 2;
	mov.b32 	%r309, %f327;
	mov.b32 	%r308, %f3;
	mov.b32 	%r327, %f396;
	mov.b32 	%r326, %f12;
	mov.b32 	%r345, %f465;
	mov.b32 	%r344, %f21;
	mov.b32 	%r363, %f534;
	mov.b32 	%r362, %f30;
	mov.b32 	%r381, %f603;
	mov.b32 	%r380, %f39;
	mov.b32 	%r399, %f672;
	mov.b32 	%r398, %f48;
	mov.b32 	%r417, %f741;
	mov.b32 	%r416, %f57;
	mov.b32 	%r435, %f809;
	mov.b32 	%r434, %f66;
	xor.b32  	%r521, %r524, -2147483648;
	xor.b32  	%r520, %r523, -2147483648;
	mov.b32 	%r568, %f1125;
	mov.b32 	%r567, %f162;
	mov.b32 	%r571, %f1122;
	mov.b32 	%r570, %f161;
	xor.b32  	%r609, %r612, -2147483648;
	xor.b32  	%r608, %r611, -2147483648;
	selp.f32 	%f235, %f1281, %f1277, %p290;
	abs.f32 	%f1303, %f1390;
	setp.gtu.f32 	%p303, %f1303, 0f7F800000;
	@%p303 bra 	$L__BB0_180;
// %bb.179:
	mov.b32 	%r652, %f236;
	and.b32  	%r653, %r652, -2147483648;
	mov.b32 	%r654, %f1390;
	or.b32  	%r655, %r653, %r654;
	mov.b32 	%f1390, %r655;
$L__BB0_180:                            // %__nv_fmodf.exit1909
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	ld.global.u32 	%r186, [%rd49];
	ld.global.u32 	%r187, [%rd49+128];
	// begin inline asm
	cvt.rn.f16x2.f32 %r307, %r309, %r308;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r325, %r327, %r326;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r343, %r345, %r344;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r361, %r363, %r362;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r379, %r381, %r380;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r397, %r399, %r398;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r415, %r417, %r416;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r433, %r435, %r434;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r461, %r463, %r462;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r464, %r463, %r462;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r467, %r469, %r468;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r470, %r469, %r468;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r516, %r518, %r517;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r519, %r521, %r520;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r522, %r524, %r523;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r525, %r518, %r517;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r566, %r568, %r567;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r569, %r571, %r570;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r604, %r606, %r605;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r607, %r609, %r608;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r610, %r612, %r611;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r613, %r606, %r605;
	// end inline asm
	add.f32 	%f1304, %f1390, %f1390;
	mov.b32 	%r663, %f1304;
	and.b32  	%r664, %r663, -2147483648;
	or.b32  	%r665, %r664, 1056964608;
	mov.b32 	%f1305, %r665;
	add.f32 	%f1306, %f1304, %f1305;
	cvt.rzi.f32.f32 	%f1307, %f1306;
	abs.f32 	%f1308, %f1304;
	setp.gt.f32 	%p304, %f1308, 0f4B000000;
	selp.f32 	%f1309, %f1304, %f1307, %p304;
	cvt.rzi.f32.f32 	%f1310, %f1304;
	setp.lt.f32 	%p305, %f1308, 0f3F000000;
	selp.f32 	%f1311, %f1310, %f1309, %p305;
	cvt.rzi.s32.f32 	%r666, %f1311;
	fma.rn.f32 	%f1312, %f1311, 0fBF000000, %f1390;
	mul.f32 	%f1313, %f1312, %f1312;
	fma.rn.f32 	%f1314, %f1313, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1315, %f1313, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1316, %f1314, %f1313, 0fC0A55DF6;
	fma.rn.f32 	%f1317, %f1315, %f1313, 0f4081E0CF;
	fma.rn.f32 	%f1318, %f1313, %f1312, 0f00000000;
	fma.rn.f32 	%f1319, %f1317, %f1313, 0fC09DE9E6;
	fma.rn.f32 	%f1320, %f1316, %f1318, 0f00000000;
	fma.rn.f32 	%f1321, %f1319, %f1313, 0f3F800000;
	fma.rn.f32 	%f1322, %f1312, 0f40490FDB, %f1320;
	and.b32  	%r667, %r666, 1;
	setp.eq.b32 	%p306, %r667, 1;
	selp.f32 	%f1323, %f1321, %f1322, %p306;
	selp.f32 	%f1324, %f1322, %f1321, %p306;
	and.b32  	%r668, %r666, 2;
	setp.eq.s32 	%p307, %r668, 0;
	neg.f32 	%f1325, %f1323;
	selp.f32 	%f1326, %f1323, %f1325, %p307;
	add.s32 	%r669, %r666, 1;
	and.b32  	%r670, %r669, 2;
	setp.eq.s32 	%p308, %r670, 0;
	sub.f32 	%f1328, %f286, %f1324;
	selp.f32 	%f1329, %f1324, %f1328, %p308;
	cvt.rzi.f32.f32 	%f1330, %f1390;
	setp.eq.f32 	%p309, %f1330, %f1390;
	mul.f32 	%f1331, %f1390, 0f00000000;
	selp.f32 	%f1332, %f1331, %f1326, %p309;
	abs.f32 	%f1333, %f1390;
	setp.gt.f32 	%p310, %f1333, 0f4B800000;
	add.f32 	%f1334, %f1332, 0f3F800000;
	selp.f32 	%f1335, %f1334, %f1329, %p310;
	mov.b32 	%r658, %f1335;
	mov.b32 	%r657, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r656, %r658, %r657;
	// end inline asm
	mov.b32 	%r661, %f1332;
	mov.b32 	%r660, %f234;
	// begin inline asm
	cvt.rn.f16x2.f32 %r659, %r661, %r660;
	// end inline asm
	shl.b32 	%r671, %r5, 13;
	and.b32  	%r672, %r180, 28;
	and.b32  	%r673, %r183, 32;
	or.b32  	%r674, %r672, %r673;
	and.b32  	%r675, %r178, 32;
	shl.b32 	%r676, %r2, 3;
	and.b32  	%r677, %r676, 64;
	or.b32  	%r678, %r675, %r3;
	or.b32  	%r124, %r678, %r677;
	and.b32  	%r125, %r183, 64;
	or.b32  	%r679, %r674, %r125;
	or.b32  	%r126, %r679, %r671;
	and.b32  	%r127, %r2, 8;
	shl.b32 	%r680, %r2, 4;
	or.b32  	%r681, %r127, %r680;
	shr.u32 	%r682, %r681, 2;
	and.b32  	%r683, %r682, 30;
	and.b32  	%r684, %r4, 32;
	shr.u32 	%r685, %r3, 1;
	and.b32  	%r128, %r191, 6;
	and.b32  	%r686, %r680, 48;
	or.b32  	%r129, %r684, %r685;
	or.b32  	%r130, %r129, 8;
	or.b32  	%r131, %r129, 16;
	or.b32  	%r132, %r129, 24;
	or.b32  	%r133, %r179, %r686;
	or.b32  	%r687, %r185, %r184;
	or.b32  	%r688, %r687, %r182;
	or.b32  	%r689, %r688, %r179;
	or.b32  	%r690, %r689, %r181;
	bfe.u32 	%r691, %r690, 1, 6;
	mul.lo.s32 	%r692, %r691, 65;
	add.s32 	%r134, %r692, %r129;
	add.s32 	%r135, %r692, %r130;
	add.s32 	%r136, %r692, %r131;
	add.s32 	%r137, %r692, %r132;
	bfe.u32 	%r693, %r690, 1, 5;
	or.b32  	%r694, %r693, 32;
	mul.lo.s32 	%r695, %r694, 65;
	add.s32 	%r138, %r695, %r129;
	add.s32 	%r139, %r695, %r130;
	add.s32 	%r140, %r695, %r131;
	add.s32 	%r141, %r695, %r132;
	shl.b32 	%r696, %r3, 1;
	or.b32  	%r697, %r696, %r193;
	mul.lo.s32 	%r698, %r697, 65;
	add.s32 	%r699, %r683, %r698;
	mul.wide.u32 	%rd50, %r699, 4;
	mov.u64 	%rd51, shmem;
	add.s64 	%rd5, %rd51, %rd50;
	cvt.u64.u32 	%rd52, %r683;
	cvt.u64.u32 	%rd53, %r698;
	add.s64 	%rd54, %rd53, %rd52;
	shl.b64 	%rd55, %rd54, 2;
	add.s64 	%rd6, %rd51, %rd55;
	or.b32  	%r700, %r697, 32;
	mul.lo.s32 	%r701, %r700, 65;
	add.s32 	%r702, %r683, %r701;
	mul.wide.u32 	%rd56, %r702, 4;
	add.s64 	%rd7, %rd51, %rd56;
	cvt.u64.u32 	%rd57, %r701;
	add.s64 	%rd58, %rd52, %rd57;
	shl.b64 	%rd59, %rd58, 2;
	add.s64 	%rd8, %rd51, %rd59;
	shl.b32 	%r703, %r7, 20;
	add.s32 	%r704, %r703, -3145728;
	shl.b32 	%r705, %r3, 2;
	or.b32  	%r706, %r194, %r705;
	or.b32  	%r707, %r706, %r184;
	shl.b32 	%r708, %r707, 7;
	or.b32  	%r142, %r708, %r674;
	cvt.s64.s32 	%rd9, %r704;
	or.b32  	%r709, %r708, %r679;
	or.b32  	%r143, %r709, 8192;
	bfe.u32 	%r710, %r680, 5, 1;
	bfe.s32 	%r711, %r3, 1, 1;
	and.b32  	%r712, %r3, 2;
	setp.eq.s32 	%p311, %r712, 0;
	and.b32  	%r713, %r711, 1040;
	bfe.s32 	%r714, %r3, 2, 1;
	and.b32  	%r715, %r3, 4;
	setp.eq.s32 	%p312, %r715, 0;
	and.b32  	%r716, %r714, 520;
	and.b32  	%r717, %r3, 1;
	neg.s32 	%r718, %r717;
	and.b32  	%r719, %r718, 2080;
	mul.lo.s32 	%r720, %r193, 65;
	shr.u32 	%r721, %r3, 3;
	mul.lo.s32 	%r722, %r721, 260;
	or.b32  	%r723, %r719, %r683;
	add.s32 	%r724, %r723, %r713;
	add.s32 	%r725, %r724, %r716;
	add.s32 	%r726, %r725, %r720;
	add.s32 	%r727, %r726, %r722;
	mul.wide.u32 	%rd60, %r727, 4;
	add.s64 	%rd10, %rd51, %rd60;
	cvt.u64.u32 	%rd61, %r722;
	cvt.u64.u32 	%rd62, %r720;
	selp.b64 	%rd63, 0, 520, %p312;
	selp.b64 	%rd64, 0, 1040, %p311;
	cvt.u64.u32 	%rd65, %r723;
	add.s64 	%rd66, %rd65, %rd64;
	add.s64 	%rd67, %rd66, %rd63;
	add.s64 	%rd68, %rd67, %rd62;
	add.s64 	%rd69, %rd68, %rd61;
	shl.b64 	%rd70, %rd69, 2;
	add.s64 	%rd11, %rd51, %rd70;
	cvt.u64.u32 	%rd71, %r724;
	add.s64 	%rd72, %rd71, %rd63;
	add.s64 	%rd73, %rd72, %rd62;
	add.s64 	%rd74, %rd73, %rd61;
	shl.b64 	%rd75, %rd74, 2;
	add.s64 	%rd12, %rd51, %rd75;
	add.s32 	%r728, %r727, 162;
	mul.wide.u32 	%rd76, %r728, 4;
	add.s64 	%rd13, %rd51, %rd76;
	add.s32 	%r729, %r727, 131;
	mul.wide.u32 	%rd77, %r729, 4;
	add.s64 	%rd14, %rd51, %rd77;
	add.s32 	%r730, %r727, 163;
	mul.wide.u32 	%rd78, %r730, 4;
	add.s64 	%rd15, %rd51, %rd78;
	cvt.u64.u32 	%rd79, %r725;
	add.s64 	%rd80, %rd79, %rd62;
	add.s64 	%rd81, %rd80, %rd61;
	shl.b64 	%rd82, %rd81, 2;
	add.s64 	%rd16, %rd51, %rd82;
	add.s32 	%r731, %r727, 4193;
	mul.wide.u32 	%rd83, %r731, 4;
	add.s64 	%rd17, %rd51, %rd83;
	add.s32 	%r732, %r727, 4162;
	mul.wide.u32 	%rd84, %r732, 4;
	add.s64 	%rd18, %rd51, %rd84;
	add.s32 	%r733, %r727, 4194;
	mul.wide.u32 	%rd85, %r733, 4;
	add.s64 	%rd19, %rd51, %rd85;
	add.s32 	%r734, %r727, 4291;
	mul.wide.u32 	%rd86, %r734, 4;
	add.s64 	%rd20, %rd51, %rd86;
	add.s32 	%r735, %r727, 4323;
	mul.wide.u32 	%rd87, %r735, 4;
	add.s64 	%rd21, %rd51, %rd87;
	add.s32 	%r736, %r727, 4292;
	mul.wide.u32 	%rd88, %r736, 4;
	add.s64 	%rd22, %rd51, %rd88;
	add.s32 	%r737, %r727, 4324;
	mul.wide.u32 	%rd89, %r737, 4;
	add.s64 	%rd23, %rd51, %rd89;
	setp.eq.s32 	%p313, %r190, 0;
	selp.b32 	%r144, 0, 130, %p313;
	mul.lo.s32 	%r145, %r710, 65;
	bfe.s32 	%r738, %r2, 2, 1;
	and.b32  	%r146, %r738, 260;
	add.s32 	%r147, %r129, 2080;
	add.s32 	%r148, %r129, 2088;
	add.s32 	%r149, %r129, 2096;
	add.s32 	%r150, %r129, 2104;
	mov.u32 	%r16384, 0;
	setp.eq.s32 	%p315, %r127, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16385, %r16384;
	mov.u32 	%r16386, %r16384;
	mov.u32 	%r16387, %r16384;
	mov.u32 	%r16388, %r16384;
	mov.u32 	%r16389, %r16384;
	mov.u32 	%r16390, %r16384;
	mov.u32 	%r16391, %r16384;
	mov.u32 	%r16392, %r16384;
	mov.u32 	%r16393, %r16384;
	mov.u32 	%r16394, %r16384;
	mov.u32 	%r16395, %r16384;
	mov.u32 	%r16396, %r16384;
	mov.u32 	%r16397, %r16384;
	mov.u32 	%r16398, %r16384;
	mov.u32 	%r16399, %r16384;
	mov.u32 	%r16400, %r16384;
	mov.u32 	%r16401, %r16384;
	mov.u32 	%r16402, %r16384;
	mov.u32 	%r16403, %r16384;
	mov.u32 	%r16404, %r16384;
	mov.u32 	%r16405, %r16384;
	mov.u32 	%r16406, %r16384;
	mov.u32 	%r16407, %r16384;
	mov.u32 	%r16408, %r16384;
	bra.uni 	$L__BB0_181;
$L__BB0_187:                            // %L70753
                                        //   in Loop: Header=BB0_181 Depth=1
	add.s32 	%r176, %r16408, 256;
	setp.ne.s32 	%p340, %r16408, 7936;
	mov.u32 	%r16408, %r176;
	@%p340 bra 	$L__BB0_181;
	bra.uni 	$L__BB0_188;
$L__BB0_181:                            // %L2417
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_183 Depth 2
	add.s32 	%r739, %r16408, %r5;
	setp.gt.s32 	%p314, %r6, %r739;
	@%p314 bra 	$L__BB0_182;
	bra.uni 	$L__BB0_188;
$L__BB0_182:                            // %pass845
                                        //   in Loop: Header=BB0_181 Depth=1
	and.b32  	%r805, %r16408, 7936;
	or.b32  	%r806, %r124, %r805;
	shl.b32 	%r807, %r806, 13;
	add.s32 	%r808, %r126, %r807;
	shr.s32 	%r809, %r808, 31;
	shr.u32 	%r810, %r809, 6;
	add.s32 	%r811, %r808, %r810;
	shr.s32 	%r812, %r811, 26;
	setp.lt.s32 	%p316, %r808, 0;
	and.b32  	%r813, %r811, -67108864;
	setp.ne.s32 	%p317, %r813, %r808;
	and.pred  	%p318, %p316, %p317;
	selp.u32 	%r814, 1, 0, %p318;
	sub.s32 	%r815, %r814, %r812;
	shl.b32 	%r816, %r815, 26;
	add.s32 	%r817, %r816, %r808;
	mul.wide.s32 	%rd90, %r817, 4;
	add.s64 	%rd91, %rd2, %rd90;
	ld.global.v4.u32 	{%r818, %r819, %r820, %r821}, [%rd91];
	or.b32  	%r822, %r807, 131072;
	add.s32 	%r823, %r126, %r822;
	shr.s32 	%r824, %r823, 31;
	shr.u32 	%r825, %r824, 6;
	add.s32 	%r826, %r823, %r825;
	shr.s32 	%r827, %r826, 26;
	setp.lt.s32 	%p319, %r823, 0;
	and.b32  	%r828, %r826, -67108864;
	setp.ne.s32 	%p320, %r828, %r823;
	and.pred  	%p321, %p319, %p320;
	selp.u32 	%r829, 1, 0, %p321;
	sub.s32 	%r830, %r829, %r827;
	shl.b32 	%r831, %r830, 26;
	add.s32 	%r832, %r831, %r823;
	mul.wide.s32 	%rd92, %r832, 4;
	add.s64 	%rd93, %rd2, %rd92;
	ld.global.v4.u32 	{%r833, %r834, %r835, %r836}, [%rd93];
	or.b32  	%r837, %r807, 1048576;
	add.s32 	%r838, %r126, %r837;
	shr.s32 	%r839, %r838, 31;
	shr.u32 	%r840, %r839, 6;
	add.s32 	%r841, %r838, %r840;
	shr.s32 	%r842, %r841, 26;
	setp.lt.s32 	%p322, %r838, 0;
	and.b32  	%r843, %r841, -67108864;
	setp.ne.s32 	%p323, %r843, %r838;
	and.pred  	%p324, %p322, %p323;
	selp.u32 	%r844, 1, 0, %p324;
	sub.s32 	%r845, %r844, %r842;
	shl.b32 	%r846, %r845, 26;
	add.s32 	%r847, %r846, %r838;
	mul.wide.s32 	%rd94, %r847, 4;
	add.s64 	%rd95, %rd2, %rd94;
	ld.global.v4.u32 	{%r848, %r849, %r850, %r851}, [%rd95];
	or.b32  	%r852, %r807, 1179648;
	add.s32 	%r853, %r126, %r852;
	shr.s32 	%r854, %r853, 31;
	shr.u32 	%r855, %r854, 6;
	add.s32 	%r856, %r853, %r855;
	shr.s32 	%r857, %r856, 26;
	setp.lt.s32 	%p325, %r853, 0;
	and.b32  	%r858, %r856, -67108864;
	setp.ne.s32 	%p326, %r858, %r853;
	and.pred  	%p327, %p325, %p326;
	selp.u32 	%r859, 1, 0, %p327;
	sub.s32 	%r860, %r859, %r857;
	shl.b32 	%r861, %r860, 26;
	add.s32 	%r862, %r861, %r853;
	mul.wide.s32 	%rd96, %r862, 4;
	add.s64 	%rd97, %rd2, %rd96;
	ld.global.v4.u32 	{%r863, %r864, %r865, %r866}, [%rd97];
	selp.b32 	%r867, %r820, %r818, %p315;
	shfl.sync.bfly.b32	%r868, %r867, 8, 31, -1;
	selp.b32 	%r741, %r818, %r868, %p315;
	selp.b32 	%r742, %r868, %r820, %p315;
	selp.b32 	%r869, %r821, %r819, %p315;
	shfl.sync.bfly.b32	%r870, %r869, 8, 31, -1;
	selp.b32 	%r749, %r819, %r870, %p315;
	selp.b32 	%r750, %r870, %r821, %p315;
	selp.b32 	%r871, %r835, %r833, %p315;
	shfl.sync.bfly.b32	%r872, %r871, 8, 31, -1;
	selp.b32 	%r757, %r833, %r872, %p315;
	selp.b32 	%r758, %r872, %r835, %p315;
	selp.b32 	%r873, %r836, %r834, %p315;
	shfl.sync.bfly.b32	%r874, %r873, 8, 31, -1;
	selp.b32 	%r765, %r834, %r874, %p315;
	selp.b32 	%r766, %r874, %r836, %p315;
	selp.b32 	%r875, %r850, %r848, %p315;
	shfl.sync.bfly.b32	%r876, %r875, 8, 31, -1;
	selp.b32 	%r773, %r848, %r876, %p315;
	selp.b32 	%r774, %r876, %r850, %p315;
	selp.b32 	%r877, %r851, %r849, %p315;
	shfl.sync.bfly.b32	%r878, %r877, 8, 31, -1;
	selp.b32 	%r781, %r849, %r878, %p315;
	selp.b32 	%r782, %r878, %r851, %p315;
	selp.b32 	%r879, %r865, %r863, %p315;
	shfl.sync.bfly.b32	%r880, %r879, 8, 31, -1;
	selp.b32 	%r789, %r863, %r880, %p315;
	selp.b32 	%r790, %r880, %r865, %p315;
	selp.b32 	%r881, %r866, %r864, %p315;
	shfl.sync.bfly.b32	%r882, %r881, 8, 31, -1;
	selp.b32 	%r797, %r864, %r882, %p315;
	selp.b32 	%r798, %r882, %r866, %p315;
	mov.u32 	%r799, 21520;
	// begin inline asm
	prmt.b32 %r740, %r741, %r742, %r799;
	// end inline asm
	mov.u32 	%r803, 30258;
	// begin inline asm
	prmt.b32 %r744, %r741, %r742, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r748, %r749, %r750, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r752, %r749, %r750, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r756, %r757, %r758, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r760, %r757, %r758, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r764, %r765, %r766, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r768, %r765, %r766, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r772, %r773, %r774, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r776, %r773, %r774, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r780, %r781, %r782, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r784, %r781, %r782, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r788, %r789, %r790, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r792, %r789, %r790, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r796, %r797, %r798, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r800, %r797, %r798, %r803;
	// end inline asm
	st.shared.u32 	[%rd10], %r740;
	st.shared.u32 	[%rd11+128], %r744;
	st.shared.u32 	[%rd11+4], %r748;
	st.shared.u32 	[%rd11+132], %r752;
	st.shared.u32 	[%rd12+520], %r756;
	st.shared.u32 	[%rd13], %r760;
	st.shared.u32 	[%rd14], %r764;
	st.shared.u32 	[%rd15], %r768;
	st.shared.u32 	[%rd16+16644], %r772;
	st.shared.u32 	[%rd17], %r776;
	st.shared.u32 	[%rd18], %r780;
	st.shared.u32 	[%rd19], %r784;
	st.shared.u32 	[%rd20], %r788;
	st.shared.u32 	[%rd21], %r792;
	st.shared.u32 	[%rd22], %r796;
	st.shared.u32 	[%rd23], %r800;
	bar.sync 	0;
	or.b32  	%r198, %r16408, %r128;
	mov.u32 	%r3227, 0;
	mov.u32 	%r16409, %r3227;
$L__BB0_183:                            // %pass6440
                                        //   Parent Loop BB0_181 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r16147, %r198, %r16409;
	bfe.s32 	%r16148, %r16147, 1, 1;
	and.b32  	%r16149, %r16148, 1040;
	bfe.s32 	%r16150, %r16147, 2, 1;
	and.b32  	%r16151, %r16150, 520;
	bfe.s32 	%r16152, %r16147, 7, 1;
	and.b32  	%r16153, %r16152, 4161;
	or.b32  	%r16154, %r16149, %r129;
	add.s32 	%r16155, %r16154, %r144;
	add.s32 	%r16156, %r16155, %r16151;
	add.s32 	%r16157, %r16156, %r16153;
	add.s32 	%r16158, %r16157, %r145;
	add.s32 	%r16159, %r16158, %r146;
	mul.wide.u32 	%rd98, %r16159, 4;
	add.s64 	%rd100, %rd51, %rd98;
	ld.shared.u32 	%r16160, [%rd100];
	or.b32  	%r16161, %r16149, %r130;
	add.s32 	%r16162, %r16161, %r144;
	add.s32 	%r16163, %r16162, %r16151;
	add.s32 	%r16164, %r16163, %r16153;
	add.s32 	%r16165, %r16164, %r145;
	add.s32 	%r16166, %r16165, %r146;
	mul.wide.u32 	%rd101, %r16166, 4;
	add.s64 	%rd102, %rd51, %rd101;
	ld.shared.u32 	%r16167, [%rd102];
	add.s32 	%r16168, %r16149, %r131;
	add.s32 	%r16169, %r16168, %r144;
	add.s32 	%r16170, %r16169, %r16151;
	add.s32 	%r16171, %r16170, %r16153;
	add.s32 	%r16172, %r16171, %r145;
	add.s32 	%r16173, %r16172, %r146;
	mul.wide.u32 	%rd103, %r16173, 4;
	add.s64 	%rd104, %rd51, %rd103;
	ld.shared.u32 	%r16174, [%rd104];
	add.s32 	%r16175, %r16149, %r132;
	add.s32 	%r16176, %r16175, %r144;
	add.s32 	%r16177, %r16176, %r16151;
	add.s32 	%r16178, %r16177, %r16153;
	add.s32 	%r16179, %r16178, %r145;
	add.s32 	%r16180, %r16179, %r146;
	mul.wide.u32 	%rd105, %r16180, 4;
	add.s64 	%rd106, %rd51, %rd105;
	ld.shared.u32 	%r16181, [%rd106];
	or.b32  	%r16182, %r191, %r16409;
	or.b32  	%r16183, %r16182, 1;
	add.s32 	%r16184, %r16183, %r16408;
	or.b32  	%r16185, %r133, %r16184;
	bfe.s32 	%r16186, %r16184, 1, 1;
	and.b32  	%r16187, %r16186, 1040;
	bfe.s32 	%r16188, %r16185, 4, 1;
	and.b32  	%r16189, %r16188, 130;
	bfe.s32 	%r16190, %r16184, 2, 1;
	and.b32  	%r16191, %r16190, 520;
	bfe.s32 	%r16192, %r16184, 7, 1;
	and.b32  	%r16193, %r16192, 4161;
	bfe.s32 	%r16194, %r16185, 5, 1;
	and.b32  	%r16195, %r16194, 65;
	bfe.s32 	%r16196, %r16185, 3, 1;
	and.b32  	%r16197, %r16196, 260;
	or.b32  	%r16198, %r147, %r16187;
	add.s32 	%r16199, %r16198, %r16189;
	add.s32 	%r16200, %r16199, %r16191;
	add.s32 	%r16201, %r16200, %r16193;
	add.s32 	%r16202, %r16201, %r16195;
	add.s32 	%r16203, %r16202, %r16197;
	mul.wide.u32 	%rd107, %r16203, 4;
	add.s64 	%rd108, %rd51, %rd107;
	ld.shared.u32 	%r16204, [%rd108];
	or.b32  	%r16205, %r148, %r16187;
	add.s32 	%r16206, %r16205, %r16189;
	add.s32 	%r16207, %r16206, %r16191;
	add.s32 	%r16208, %r16207, %r16193;
	add.s32 	%r16209, %r16208, %r16195;
	add.s32 	%r16210, %r16209, %r16197;
	mul.wide.u32 	%rd109, %r16210, 4;
	add.s64 	%rd110, %rd51, %rd109;
	ld.shared.u32 	%r16211, [%rd110];
	add.s32 	%r16212, %r149, %r16187;
	add.s32 	%r16213, %r16212, %r16189;
	add.s32 	%r16214, %r16213, %r16191;
	add.s32 	%r16215, %r16214, %r16193;
	add.s32 	%r16216, %r16215, %r16195;
	add.s32 	%r16217, %r16216, %r16197;
	mul.wide.u32 	%rd111, %r16217, 4;
	add.s64 	%rd112, %rd51, %rd111;
	ld.shared.u32 	%r16218, [%rd112];
	add.s32 	%r16219, %r150, %r16187;
	add.s32 	%r16220, %r16219, %r16189;
	add.s32 	%r16221, %r16220, %r16191;
	add.s32 	%r16222, %r16221, %r16193;
	add.s32 	%r16223, %r16222, %r16195;
	add.s32 	%r16224, %r16223, %r16197;
	mul.wide.u32 	%rd113, %r16224, 4;
	add.s64 	%rd114, %rd51, %rd113;
	ld.shared.u32 	%r16225, [%rd114];
	// begin inline asm
	mov.b32 %r888, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r899, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r887, %r16160, -2004318072;
	mov.u32 	%r886, 983055;
	// begin inline asm
	lop3.b32 %r885, %r886, %r887, %r888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r889, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r890, %r888, %r889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r893, %r885, %r890;
	// end inline asm
	mov.u32 	%r897, 15728880;
	// begin inline asm
	lop3.b32 %r896, %r897, %r887, %r899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r900, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r901, %r899, %r900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r904, %r896, %r901;
	// end inline asm
	shr.u32 	%r909, %r887, 8;
	// begin inline asm
	lop3.b32 %r907, %r886, %r909, %r888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r911, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r912, %r888, %r911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r915, %r907, %r912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r918, %r897, %r909, %r899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r922, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r923, %r899, %r922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r926, %r918, %r923;
	// end inline asm
	// begin inline asm
	mov.b32 %r934, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r945, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r933, %r16167, -2004318072;
	// begin inline asm
	lop3.b32 %r931, %r886, %r933, %r934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r936, %r934, %r935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r939, %r931, %r936;
	// end inline asm
	// begin inline asm
	lop3.b32 %r942, %r897, %r933, %r945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r947, %r945, %r946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r950, %r942, %r947;
	// end inline asm
	shr.u32 	%r955, %r933, 8;
	// begin inline asm
	lop3.b32 %r953, %r886, %r955, %r934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r958, %r934, %r957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r961, %r953, %r958;
	// end inline asm
	// begin inline asm
	lop3.b32 %r964, %r897, %r955, %r945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r968, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r969, %r945, %r968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r972, %r964, %r969;
	// end inline asm
	// begin inline asm
	mov.b32 %r980, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r991, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r979, %r16174, -2004318072;
	// begin inline asm
	lop3.b32 %r977, %r886, %r979, %r980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r982, %r980, %r981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r985, %r977, %r982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r988, %r897, %r979, %r991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r993, %r991, %r992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r996, %r988, %r993;
	// end inline asm
	shr.u32 	%r1001, %r979, 8;
	// begin inline asm
	lop3.b32 %r999, %r886, %r1001, %r980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1004, %r980, %r1003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1007, %r999, %r1004;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1010, %r897, %r1001, %r991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1014, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1015, %r991, %r1014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1018, %r1010, %r1015;
	// end inline asm
	// begin inline asm
	mov.b32 %r1026, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1037, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1025, %r16181, -2004318072;
	// begin inline asm
	lop3.b32 %r1023, %r886, %r1025, %r1026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1027, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1028, %r1026, %r1027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1031, %r1023, %r1028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1034, %r897, %r1025, %r1037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1039, %r1037, %r1038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1042, %r1034, %r1039;
	// end inline asm
	shr.u32 	%r1047, %r1025, 8;
	// begin inline asm
	lop3.b32 %r1045, %r886, %r1047, %r1026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1050, %r1026, %r1049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1053, %r1045, %r1050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1056, %r897, %r1047, %r1037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1061, %r1037, %r1060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1064, %r1056, %r1061;
	// end inline asm
	// begin inline asm
	mov.b32 %r1072, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1083, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1071, %r16204, -2004318072;
	// begin inline asm
	lop3.b32 %r1069, %r886, %r1071, %r1072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1073, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1074, %r1072, %r1073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1077, %r1069, %r1074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1080, %r897, %r1071, %r1083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1084, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1085, %r1083, %r1084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1088, %r1080, %r1085;
	// end inline asm
	shr.u32 	%r1093, %r1071, 8;
	// begin inline asm
	lop3.b32 %r1091, %r886, %r1093, %r1072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1096, %r1072, %r1095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1099, %r1091, %r1096;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1102, %r897, %r1093, %r1083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1107, %r1083, %r1106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1110, %r1102, %r1107;
	// end inline asm
	// begin inline asm
	mov.b32 %r1118, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1129, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1117, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r1115, %r886, %r1117, %r1118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1119, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1120, %r1118, %r1119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1123, %r1115, %r1120;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1126, %r897, %r1117, %r1129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1131, %r1129, %r1130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1134, %r1126, %r1131;
	// end inline asm
	shr.u32 	%r1139, %r1117, 8;
	// begin inline asm
	lop3.b32 %r1137, %r886, %r1139, %r1118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1142, %r1118, %r1141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1145, %r1137, %r1142;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1148, %r897, %r1139, %r1129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1152, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1153, %r1129, %r1152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1156, %r1148, %r1153;
	// end inline asm
	// begin inline asm
	mov.b32 %r1164, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1175, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1163, %r16218, -2004318072;
	// begin inline asm
	lop3.b32 %r1161, %r886, %r1163, %r1164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1165, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1166, %r1164, %r1165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1169, %r1161, %r1166;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1172, %r897, %r1163, %r1175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1177, %r1175, %r1176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1180, %r1172, %r1177;
	// end inline asm
	shr.u32 	%r1185, %r1163, 8;
	// begin inline asm
	lop3.b32 %r1183, %r886, %r1185, %r1164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1188, %r1164, %r1187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1191, %r1183, %r1188;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1194, %r897, %r1185, %r1175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1198, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1199, %r1175, %r1198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1202, %r1194, %r1199;
	// end inline asm
	// begin inline asm
	mov.b32 %r1210, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1221, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1209, %r16225, -2004318072;
	// begin inline asm
	lop3.b32 %r1207, %r886, %r1209, %r1210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1211, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1212, %r1210, %r1211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1215, %r1207, %r1212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1218, %r897, %r1209, %r1221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1222, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1223, %r1221, %r1222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1226, %r1218, %r1223;
	// end inline asm
	shr.u32 	%r1231, %r1209, 8;
	// begin inline asm
	lop3.b32 %r1229, %r886, %r1231, %r1210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1233, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1234, %r1210, %r1233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1237, %r1229, %r1234;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1240, %r897, %r1231, %r1221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1245, %r1221, %r1244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1248, %r1240, %r1245;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1251, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1253, %r1251, %r893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1256, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1258, %r1256, %r904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1261, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1263, %r1261, %r915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1266, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1268, %r1266, %r926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1271, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1273, %r1271, %r939;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1276, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1278, %r1276, %r950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1281, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1283, %r1281, %r961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1286, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1288, %r1286, %r972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1291, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1293, %r1291, %r985;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1296, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1298, %r1296, %r996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1301, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1303, %r1301, %r1007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1306, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1308, %r1306, %r1018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1311, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1313, %r1311, %r1031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1316, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1318, %r1316, %r1042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1321, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1323, %r1321, %r1053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1326, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1328, %r1326, %r1064;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1331, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1333, %r1331, %r1077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1336, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1338, %r1336, %r1088;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1341, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1343, %r1341, %r1099;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1346, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1348, %r1346, %r1110;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1351, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1353, %r1351, %r1123;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1356, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1358, %r1356, %r1134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1361, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1363, %r1361, %r1145;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1366, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1368, %r1366, %r1156;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1371, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1373, %r1371, %r1169;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1376, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1378, %r1376, %r1180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1381, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1383, %r1381, %r1191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1386, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1388, %r1386, %r1202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1391, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1393, %r1391, %r1215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1396, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1398, %r1396, %r1226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1401, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1403, %r1401, %r1237;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1406, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1408, %r1406, %r1248;
	// end inline asm
	// begin inline asm
	mov.b32 %r1416, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1427, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1415, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r1413, %r886, %r1415, %r1416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1417, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1418, %r1416, %r1417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1421, %r1413, %r1418;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1424, %r897, %r1415, %r1427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1429, %r1427, %r1428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1432, %r1424, %r1429;
	// end inline asm
	shr.u32 	%r1437, %r1415, 8;
	// begin inline asm
	lop3.b32 %r1435, %r886, %r1437, %r1416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1439, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1440, %r1416, %r1439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1443, %r1435, %r1440;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1446, %r897, %r1437, %r1427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1450, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1451, %r1427, %r1450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1454, %r1446, %r1451;
	// end inline asm
	// begin inline asm
	mov.b32 %r1462, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1473, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1461, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r1459, %r886, %r1461, %r1462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1463, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1464, %r1462, %r1463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1467, %r1459, %r1464;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1470, %r897, %r1461, %r1473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1475, %r1473, %r1474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1478, %r1470, %r1475;
	// end inline asm
	shr.u32 	%r1483, %r1461, 8;
	// begin inline asm
	lop3.b32 %r1481, %r886, %r1483, %r1462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1485, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1486, %r1462, %r1485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1489, %r1481, %r1486;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1492, %r897, %r1483, %r1473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1497, %r1473, %r1496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1500, %r1492, %r1497;
	// end inline asm
	// begin inline asm
	mov.b32 %r1508, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1519, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1507, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r1505, %r886, %r1507, %r1508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1509, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1510, %r1508, %r1509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1513, %r1505, %r1510;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1516, %r897, %r1507, %r1519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1521, %r1519, %r1520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1524, %r1516, %r1521;
	// end inline asm
	shr.u32 	%r1529, %r1507, 8;
	// begin inline asm
	lop3.b32 %r1527, %r886, %r1529, %r1508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1531, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1532, %r1508, %r1531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1535, %r1527, %r1532;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1538, %r897, %r1529, %r1519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1542, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1543, %r1519, %r1542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1546, %r1538, %r1543;
	// end inline asm
	// begin inline asm
	mov.b32 %r1554, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1565, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1553, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r1551, %r886, %r1553, %r1554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1555, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1556, %r1554, %r1555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1559, %r1551, %r1556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1562, %r897, %r1553, %r1565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1566, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1567, %r1565, %r1566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1570, %r1562, %r1567;
	// end inline asm
	shr.u32 	%r1575, %r1553, 8;
	// begin inline asm
	lop3.b32 %r1573, %r886, %r1575, %r1554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1577, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1578, %r1554, %r1577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1581, %r1573, %r1578;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1584, %r897, %r1575, %r1565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1588, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1589, %r1565, %r1588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1592, %r1584, %r1589;
	// end inline asm
	// begin inline asm
	mov.b32 %r1600, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1611, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1599, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r1597, %r886, %r1599, %r1600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1601, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1602, %r1600, %r1601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1605, %r1597, %r1602;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1608, %r897, %r1599, %r1611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1612, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1613, %r1611, %r1612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1616, %r1608, %r1613;
	// end inline asm
	shr.u32 	%r1621, %r1599, 8;
	// begin inline asm
	lop3.b32 %r1619, %r886, %r1621, %r1600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1623, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1624, %r1600, %r1623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1627, %r1619, %r1624;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1630, %r897, %r1621, %r1611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1634, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1635, %r1611, %r1634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1638, %r1630, %r1635;
	// end inline asm
	// begin inline asm
	mov.b32 %r1646, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1657, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1645, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r1643, %r886, %r1645, %r1646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1647, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1648, %r1646, %r1647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1651, %r1643, %r1648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1654, %r897, %r1645, %r1657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1658, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1659, %r1657, %r1658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1662, %r1654, %r1659;
	// end inline asm
	shr.u32 	%r1667, %r1645, 8;
	// begin inline asm
	lop3.b32 %r1665, %r886, %r1667, %r1646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1669, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1670, %r1646, %r1669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1673, %r1665, %r1670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1676, %r897, %r1667, %r1657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1680, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1681, %r1657, %r1680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1684, %r1676, %r1681;
	// end inline asm
	// begin inline asm
	mov.b32 %r1692, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1703, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1691, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r1689, %r886, %r1691, %r1692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1693, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1694, %r1692, %r1693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1697, %r1689, %r1694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1700, %r897, %r1691, %r1703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1704, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1705, %r1703, %r1704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1708, %r1700, %r1705;
	// end inline asm
	shr.u32 	%r1713, %r1691, 8;
	// begin inline asm
	lop3.b32 %r1711, %r886, %r1713, %r1692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1715, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1716, %r1692, %r1715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1719, %r1711, %r1716;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1722, %r897, %r1713, %r1703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1726, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1727, %r1703, %r1726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1730, %r1722, %r1727;
	// end inline asm
	// begin inline asm
	mov.b32 %r1738, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1749, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1737, %r16399, -2004318072;
	// begin inline asm
	lop3.b32 %r1735, %r886, %r1737, %r1738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1739, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1740, %r1738, %r1739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1743, %r1735, %r1740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1746, %r897, %r1737, %r1749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1750, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1751, %r1749, %r1750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1754, %r1746, %r1751;
	// end inline asm
	shr.u32 	%r1759, %r1737, 8;
	// begin inline asm
	lop3.b32 %r1757, %r886, %r1759, %r1738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1761, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1762, %r1738, %r1761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1765, %r1757, %r1762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1768, %r897, %r1759, %r1749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1772, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1773, %r1749, %r1772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1776, %r1768, %r1773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r307, %r1421, %r1253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1783, %r307, %r1432, %r1258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r307, %r1443, %r1263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r307, %r1454, %r1268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r307, %r1467, %r1273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1799, %r307, %r1478, %r1278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r307, %r1489, %r1283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1807, %r307, %r1500, %r1288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1811, %r307, %r1513, %r1293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1815, %r307, %r1524, %r1298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1819, %r307, %r1535, %r1303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1823, %r307, %r1546, %r1308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1827, %r307, %r1559, %r1313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1831, %r307, %r1570, %r1318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1835, %r307, %r1581, %r1323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1839, %r307, %r1592, %r1328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1843, %r325, %r1605, %r1333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1847, %r325, %r1616, %r1338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1851, %r325, %r1627, %r1343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1855, %r325, %r1638, %r1348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1859, %r325, %r1651, %r1353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1863, %r325, %r1662, %r1358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1867, %r325, %r1673, %r1363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1871, %r325, %r1684, %r1368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1875, %r325, %r1697, %r1373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1879, %r325, %r1708, %r1378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1883, %r325, %r1719, %r1383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1887, %r325, %r1730, %r1388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1891, %r325, %r1743, %r1393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1895, %r325, %r1754, %r1398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1899, %r325, %r1765, %r1403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1903, %r325, %r1776, %r1408;
	// end inline asm
	// begin inline asm
	mov.b32 %r1912, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1923, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1911, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r1909, %r886, %r1911, %r1912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1913, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1914, %r1912, %r1913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1917, %r1909, %r1914;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1920, %r897, %r1911, %r1923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1925, %r1923, %r1924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1928, %r1920, %r1925;
	// end inline asm
	shr.u32 	%r1933, %r1911, 8;
	// begin inline asm
	lop3.b32 %r1931, %r886, %r1933, %r1912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1936, %r1912, %r1935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1939, %r1931, %r1936;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1942, %r897, %r1933, %r1923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1947, %r1923, %r1946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1950, %r1942, %r1947;
	// end inline asm
	// begin inline asm
	mov.b32 %r1958, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1969, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1957, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r1955, %r886, %r1957, %r1958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1959, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1960, %r1958, %r1959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1963, %r1955, %r1960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1966, %r897, %r1957, %r1969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1970, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1971, %r1969, %r1970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1974, %r1966, %r1971;
	// end inline asm
	shr.u32 	%r1979, %r1957, 8;
	// begin inline asm
	lop3.b32 %r1977, %r886, %r1979, %r1958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1982, %r1958, %r1981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1985, %r1977, %r1982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1988, %r897, %r1979, %r1969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1993, %r1969, %r1992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1996, %r1988, %r1993;
	// end inline asm
	// begin inline asm
	mov.b32 %r2004, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2015, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2003, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r2001, %r886, %r2003, %r2004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2006, %r2004, %r2005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2009, %r2001, %r2006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2012, %r897, %r2003, %r2015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2016, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2017, %r2015, %r2016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2020, %r2012, %r2017;
	// end inline asm
	shr.u32 	%r2025, %r2003, 8;
	// begin inline asm
	lop3.b32 %r2023, %r886, %r2025, %r2004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2027, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2028, %r2004, %r2027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2031, %r2023, %r2028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2034, %r897, %r2025, %r2015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2039, %r2015, %r2038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2042, %r2034, %r2039;
	// end inline asm
	// begin inline asm
	mov.b32 %r2050, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2061, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2049, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r2047, %r886, %r2049, %r2050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2052, %r2050, %r2051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2055, %r2047, %r2052;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2058, %r897, %r2049, %r2061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2063, %r2061, %r2062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2066, %r2058, %r2063;
	// end inline asm
	shr.u32 	%r2071, %r2049, 8;
	// begin inline asm
	lop3.b32 %r2069, %r886, %r2071, %r2050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2073, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2074, %r2050, %r2073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2077, %r2069, %r2074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2080, %r897, %r2071, %r2061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2084, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2085, %r2061, %r2084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2088, %r2080, %r2085;
	// end inline asm
	// begin inline asm
	mov.b32 %r2096, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2107, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2095, %r16400, -2004318072;
	// begin inline asm
	lop3.b32 %r2093, %r886, %r2095, %r2096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2098, %r2096, %r2097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2101, %r2093, %r2098;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2104, %r897, %r2095, %r2107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2109, %r2107, %r2108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2112, %r2104, %r2109;
	// end inline asm
	shr.u32 	%r2117, %r2095, 8;
	// begin inline asm
	lop3.b32 %r2115, %r886, %r2117, %r2096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2119, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2120, %r2096, %r2119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2123, %r2115, %r2120;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2126, %r897, %r2117, %r2107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2131, %r2107, %r2130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2134, %r2126, %r2131;
	// end inline asm
	// begin inline asm
	mov.b32 %r2142, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2153, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2141, %r16401, -2004318072;
	// begin inline asm
	lop3.b32 %r2139, %r886, %r2141, %r2142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2144, %r2142, %r2143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2147, %r2139, %r2144;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2150, %r897, %r2141, %r2153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2154, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2155, %r2153, %r2154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2158, %r2150, %r2155;
	// end inline asm
	shr.u32 	%r2163, %r2141, 8;
	// begin inline asm
	lop3.b32 %r2161, %r886, %r2163, %r2142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2165, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2166, %r2142, %r2165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2169, %r2161, %r2166;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2172, %r897, %r2163, %r2153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2177, %r2153, %r2176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2180, %r2172, %r2177;
	// end inline asm
	// begin inline asm
	mov.b32 %r2188, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2199, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2187, %r16402, -2004318072;
	// begin inline asm
	lop3.b32 %r2185, %r886, %r2187, %r2188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2190, %r2188, %r2189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2193, %r2185, %r2190;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2196, %r897, %r2187, %r2199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2200, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2201, %r2199, %r2200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2204, %r2196, %r2201;
	// end inline asm
	shr.u32 	%r2209, %r2187, 8;
	// begin inline asm
	lop3.b32 %r2207, %r886, %r2209, %r2188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2211, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2212, %r2188, %r2211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2215, %r2207, %r2212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2218, %r897, %r2209, %r2199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2222, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2223, %r2199, %r2222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2226, %r2218, %r2223;
	// end inline asm
	// begin inline asm
	mov.b32 %r2234, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2245, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2233, %r16403, -2004318072;
	// begin inline asm
	lop3.b32 %r2231, %r886, %r2233, %r2234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2236, %r2234, %r2235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2239, %r2231, %r2236;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2242, %r897, %r2233, %r2245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2246, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2247, %r2245, %r2246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2250, %r2242, %r2247;
	// end inline asm
	shr.u32 	%r2255, %r2233, 8;
	// begin inline asm
	lop3.b32 %r2253, %r886, %r2255, %r2234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2257, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2258, %r2234, %r2257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2261, %r2253, %r2258;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2264, %r897, %r2255, %r2245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2268, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2269, %r2245, %r2268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2272, %r2264, %r2269;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2275, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2277, %r2275, %r1917, %r1779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2281, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2283, %r2281, %r1928, %r1783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2287, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2289, %r2287, %r1939, %r1787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2293, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2295, %r2293, %r1950, %r1791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2299, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2301, %r2299, %r1963, %r1795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2305, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2307, %r2305, %r1974, %r1799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2311, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2313, %r2311, %r1985, %r1803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2317, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2319, %r2317, %r1996, %r1807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2323, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2325, %r2323, %r2009, %r1811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2329, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2331, %r2329, %r2020, %r1815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2335, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2337, %r2335, %r2031, %r1819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2341, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2343, %r2341, %r2042, %r1823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2347, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2349, %r2347, %r2055, %r1827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2353, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2355, %r2353, %r2066, %r1831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2359, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2361, %r2359, %r2077, %r1835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2365, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2367, %r2365, %r2088, %r1839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2371, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2373, %r2371, %r2101, %r1843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2377, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2379, %r2377, %r2112, %r1847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2383, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2385, %r2383, %r2123, %r1851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2389, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2391, %r2389, %r2134, %r1855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2395, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2397, %r2395, %r2147, %r1859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2401, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2403, %r2401, %r2158, %r1863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2407, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2409, %r2407, %r2169, %r1867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2413, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2415, %r2413, %r2180, %r1871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2419, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2421, %r2419, %r2193, %r1875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2425, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2427, %r2425, %r2204, %r1879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2431, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2433, %r2431, %r2215, %r1883;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2437, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2439, %r2437, %r2226, %r1887;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2443, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2445, %r2443, %r2239, %r1891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2449, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2451, %r2449, %r2250, %r1895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2455, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2457, %r2455, %r2261, %r1899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2461, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2463, %r2461, %r2272, %r1903;
	// end inline asm
	// begin inline asm
	mov.b32 %r2472, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2483, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2471, %r16392, -2004318072;
	// begin inline asm
	lop3.b32 %r2469, %r886, %r2471, %r2472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2473, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2474, %r2472, %r2473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2477, %r2469, %r2474;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2480, %r897, %r2471, %r2483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2484, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2485, %r2483, %r2484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2488, %r2480, %r2485;
	// end inline asm
	shr.u32 	%r2493, %r2471, 8;
	// begin inline asm
	lop3.b32 %r2491, %r886, %r2493, %r2472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2495, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2496, %r2472, %r2495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2499, %r2491, %r2496;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2502, %r897, %r2493, %r2483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2506, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2507, %r2483, %r2506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2510, %r2502, %r2507;
	// end inline asm
	// begin inline asm
	mov.b32 %r2518, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2529, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2517, %r16393, -2004318072;
	// begin inline asm
	lop3.b32 %r2515, %r886, %r2517, %r2518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2519, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2520, %r2518, %r2519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2523, %r2515, %r2520;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2526, %r897, %r2517, %r2529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2530, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2531, %r2529, %r2530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2534, %r2526, %r2531;
	// end inline asm
	shr.u32 	%r2539, %r2517, 8;
	// begin inline asm
	lop3.b32 %r2537, %r886, %r2539, %r2518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2541, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2542, %r2518, %r2541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2545, %r2537, %r2542;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2548, %r897, %r2539, %r2529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2552, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2553, %r2529, %r2552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2556, %r2548, %r2553;
	// end inline asm
	// begin inline asm
	mov.b32 %r2564, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2575, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2563, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r2561, %r886, %r2563, %r2564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2565, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2566, %r2564, %r2565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2569, %r2561, %r2566;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2572, %r897, %r2563, %r2575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2576, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2577, %r2575, %r2576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2580, %r2572, %r2577;
	// end inline asm
	shr.u32 	%r2585, %r2563, 8;
	// begin inline asm
	lop3.b32 %r2583, %r886, %r2585, %r2564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2587, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2588, %r2564, %r2587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2591, %r2583, %r2588;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2594, %r897, %r2585, %r2575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2598, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2599, %r2575, %r2598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2602, %r2594, %r2599;
	// end inline asm
	// begin inline asm
	mov.b32 %r2610, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2621, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2609, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r2607, %r886, %r2609, %r2610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2611, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2612, %r2610, %r2611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2615, %r2607, %r2612;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2618, %r897, %r2609, %r2621, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2622, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2623, %r2621, %r2622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2626, %r2618, %r2623;
	// end inline asm
	shr.u32 	%r2631, %r2609, 8;
	// begin inline asm
	lop3.b32 %r2629, %r886, %r2631, %r2610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2633, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2634, %r2610, %r2633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2637, %r2629, %r2634;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2640, %r897, %r2631, %r2621, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2644, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2645, %r2621, %r2644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2648, %r2640, %r2645;
	// end inline asm
	// begin inline asm
	mov.b32 %r2656, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2667, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2655, %r16404, -2004318072;
	// begin inline asm
	lop3.b32 %r2653, %r886, %r2655, %r2656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2657, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2658, %r2656, %r2657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2661, %r2653, %r2658;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2664, %r897, %r2655, %r2667, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2668, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2669, %r2667, %r2668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2672, %r2664, %r2669;
	// end inline asm
	shr.u32 	%r2677, %r2655, 8;
	// begin inline asm
	lop3.b32 %r2675, %r886, %r2677, %r2656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2679, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2680, %r2656, %r2679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2683, %r2675, %r2680;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2686, %r897, %r2677, %r2667, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2690, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2691, %r2667, %r2690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2694, %r2686, %r2691;
	// end inline asm
	// begin inline asm
	mov.b32 %r2702, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2713, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2701, %r16405, -2004318072;
	// begin inline asm
	lop3.b32 %r2699, %r886, %r2701, %r2702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2703, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2704, %r2702, %r2703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2707, %r2699, %r2704;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2710, %r897, %r2701, %r2713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2714, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2715, %r2713, %r2714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2718, %r2710, %r2715;
	// end inline asm
	shr.u32 	%r2723, %r2701, 8;
	// begin inline asm
	lop3.b32 %r2721, %r886, %r2723, %r2702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2725, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2726, %r2702, %r2725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2729, %r2721, %r2726;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2732, %r897, %r2723, %r2713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2736, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2737, %r2713, %r2736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2740, %r2732, %r2737;
	// end inline asm
	// begin inline asm
	mov.b32 %r2748, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2759, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2747, %r16406, -2004318072;
	// begin inline asm
	lop3.b32 %r2745, %r886, %r2747, %r2748, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2749, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2750, %r2748, %r2749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2753, %r2745, %r2750;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2756, %r897, %r2747, %r2759, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2760, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2761, %r2759, %r2760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2764, %r2756, %r2761;
	// end inline asm
	shr.u32 	%r2769, %r2747, 8;
	// begin inline asm
	lop3.b32 %r2767, %r886, %r2769, %r2748, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2771, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2772, %r2748, %r2771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2775, %r2767, %r2772;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2778, %r897, %r2769, %r2759, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2782, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2783, %r2759, %r2782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2786, %r2778, %r2783;
	// end inline asm
	// begin inline asm
	mov.b32 %r2794, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2805, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2793, %r16407, -2004318072;
	// begin inline asm
	lop3.b32 %r2791, %r886, %r2793, %r2794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2795, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2796, %r2794, %r2795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2799, %r2791, %r2796;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2802, %r897, %r2793, %r2805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2806, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2807, %r2805, %r2806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2810, %r2802, %r2807;
	// end inline asm
	shr.u32 	%r2815, %r2793, 8;
	// begin inline asm
	lop3.b32 %r2813, %r886, %r2815, %r2794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2817, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2818, %r2794, %r2817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2821, %r2813, %r2818;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2824, %r897, %r2815, %r2805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2828, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2829, %r2805, %r2828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2832, %r2824, %r2829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2970, %r379, %r2477, %r2277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2967, %r379, %r2488, %r2283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2979, %r379, %r2499, %r2289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2976, %r379, %r2510, %r2295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2988, %r379, %r2523, %r2301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2985, %r379, %r2534, %r2307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2997, %r379, %r2545, %r2313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2994, %r379, %r2556, %r2319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3006, %r379, %r2569, %r2325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3003, %r379, %r2580, %r2331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3015, %r379, %r2591, %r2337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3012, %r379, %r2602, %r2343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3024, %r379, %r2615, %r2349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3021, %r379, %r2626, %r2355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3033, %r379, %r2637, %r2361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3030, %r379, %r2648, %r2367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3042, %r397, %r2661, %r2373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3039, %r397, %r2672, %r2379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3051, %r397, %r2683, %r2385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3048, %r397, %r2694, %r2391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3060, %r397, %r2707, %r2397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3057, %r397, %r2718, %r2403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3069, %r397, %r2729, %r2409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3066, %r397, %r2740, %r2415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3078, %r397, %r2753, %r2421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3075, %r397, %r2764, %r2427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3087, %r397, %r2775, %r2433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3084, %r397, %r2786, %r2439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3096, %r397, %r2799, %r2445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3093, %r397, %r2810, %r2451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3105, %r397, %r2821, %r2457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3102, %r397, %r2832, %r2463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2963, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2965, %r2963, %r2967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2968, %r461, %r2970, %r2965;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2972, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2974, %r2972, %r2976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2977, %r461, %r2979, %r2974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2981, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2983, %r2981, %r2985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2986, %r461, %r2988, %r2983;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2990, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2992, %r2990, %r2994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2995, %r461, %r2997, %r2992;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2999, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3001, %r2999, %r3003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3004, %r461, %r3006, %r3001;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3008, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3010, %r3008, %r3012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3013, %r461, %r3015, %r3010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3017, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3019, %r3017, %r3021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3022, %r461, %r3024, %r3019;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3026, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3028, %r3026, %r3030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3031, %r461, %r3033, %r3028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3035, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3037, %r3035, %r3039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3040, %r464, %r3042, %r3037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3044, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3046, %r3044, %r3048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3049, %r464, %r3051, %r3046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3053, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3055, %r3053, %r3057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3058, %r464, %r3060, %r3055;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3062, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3064, %r3062, %r3066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3067, %r464, %r3069, %r3064;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3071, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3073, %r3071, %r3075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3076, %r464, %r3078, %r3073;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3080, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3082, %r3080, %r3084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3085, %r464, %r3087, %r3082;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3089, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3091, %r3089, %r3093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3094, %r464, %r3096, %r3091;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3098, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3100, %r3098, %r3102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3103, %r464, %r3105, %r3100;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3107, %r467, %r2970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3110, %r461, %r2967, %r3107;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3114, %r467, %r2979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3117, %r461, %r2976, %r3114;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3121, %r467, %r2988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3124, %r461, %r2985, %r3121;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3128, %r467, %r2997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3131, %r461, %r2994, %r3128;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3135, %r467, %r3006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3138, %r461, %r3003, %r3135;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3142, %r467, %r3015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3145, %r461, %r3012, %r3142;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3149, %r467, %r3024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3152, %r461, %r3021, %r3149;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3156, %r467, %r3033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3159, %r461, %r3030, %r3156;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3163, %r470, %r3042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3166, %r464, %r3039, %r3163;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3170, %r470, %r3051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3173, %r464, %r3048, %r3170;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3177, %r470, %r3060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3180, %r464, %r3057, %r3177;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3184, %r470, %r3069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3187, %r464, %r3066, %r3184;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3191, %r470, %r3078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3194, %r464, %r3075, %r3191;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3198, %r470, %r3087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3201, %r464, %r3084, %r3198;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3205, %r470, %r3096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3208, %r464, %r3093, %r3205;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3212, %r470, %r3105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3215, %r464, %r3102, %r3212;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3386, %r3383}, {%r516, %r522, %r519, %r525}, {%r2968, %r3110}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3395, %r3392}, {%r516, %r522, %r519, %r525}, {%r2977, %r3117}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3404, %r3401}, {%r516, %r522, %r519, %r525}, {%r2986, %r3124}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3413, %r3410}, {%r516, %r522, %r519, %r525}, {%r2995, %r3131}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3422, %r3419}, {%r516, %r522, %r519, %r525}, {%r3004, %r3138}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3431, %r3428}, {%r516, %r522, %r519, %r525}, {%r3013, %r3145}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3440, %r3437}, {%r516, %r522, %r519, %r525}, {%r3022, %r3152}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3449, %r3446}, {%r516, %r522, %r519, %r525}, {%r3031, %r3159}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3458, %r3455}, {%r516, %r522, %r519, %r525}, {%r3040, %r3166}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3467, %r3464}, {%r516, %r522, %r519, %r525}, {%r3049, %r3173}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3476, %r3473}, {%r516, %r522, %r519, %r525}, {%r3058, %r3180}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3485, %r3482}, {%r516, %r522, %r519, %r525}, {%r3067, %r3187}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3494, %r3491}, {%r516, %r522, %r519, %r525}, {%r3076, %r3194}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3503, %r3500}, {%r516, %r522, %r519, %r525}, {%r3085, %r3201}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3512, %r3509}, {%r516, %r522, %r519, %r525}, {%r3094, %r3208}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3521, %r3518}, {%r516, %r522, %r519, %r525}, {%r3103, %r3215}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3379, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3381, %r3379, %r3383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3384, %r566, %r3386, %r3381;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3388, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3390, %r3388, %r3392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3393, %r566, %r3395, %r3390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3397, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3399, %r3397, %r3401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3402, %r566, %r3404, %r3399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3406, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3408, %r3406, %r3410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3411, %r566, %r3413, %r3408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3415, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3417, %r3415, %r3419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3420, %r566, %r3422, %r3417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3424, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3426, %r3424, %r3428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3429, %r566, %r3431, %r3426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3433, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3435, %r3433, %r3437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3438, %r566, %r3440, %r3435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3442, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3444, %r3442, %r3446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3447, %r566, %r3449, %r3444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3451, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3453, %r3451, %r3455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3456, %r566, %r3458, %r3453;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3460, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3462, %r3460, %r3464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3465, %r566, %r3467, %r3462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3469, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3471, %r3469, %r3473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3474, %r566, %r3476, %r3471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3478, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3480, %r3478, %r3482;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3483, %r566, %r3485, %r3480;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3487, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3489, %r3487, %r3491;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3492, %r566, %r3494, %r3489;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3496, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3498, %r3496, %r3500;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3501, %r566, %r3503, %r3498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3505, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3507, %r3505, %r3509;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3510, %r566, %r3512, %r3507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3514, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3516, %r3514, %r3518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3519, %r566, %r3521, %r3516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3523, %r569, %r3386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3526, %r566, %r3383, %r3523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3530, %r569, %r3395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3533, %r566, %r3392, %r3530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3537, %r569, %r3404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3540, %r566, %r3401, %r3537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3544, %r569, %r3413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3547, %r566, %r3410, %r3544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3551, %r569, %r3422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3554, %r566, %r3419, %r3551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3558, %r569, %r3431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3561, %r566, %r3428, %r3558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3565, %r569, %r3440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3568, %r566, %r3437, %r3565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3572, %r569, %r3449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3575, %r566, %r3446, %r3572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3579, %r569, %r3458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3582, %r566, %r3455, %r3579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3586, %r569, %r3467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3589, %r566, %r3464, %r3586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3593, %r569, %r3476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3596, %r566, %r3473, %r3593;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3600, %r569, %r3485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3603, %r566, %r3482, %r3600;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3607, %r569, %r3494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3610, %r566, %r3491, %r3607;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3614, %r569, %r3503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3617, %r566, %r3500, %r3614;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3621, %r569, %r3512;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3624, %r566, %r3509, %r3621;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3628, %r569, %r3521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3631, %r566, %r3518, %r3628;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3924, %r3927}, {%r604, %r610, %r607, %r613}, {%r3384, %r3526}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3930, %r3933}, {%r604, %r610, %r607, %r613}, {%r3393, %r3533}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3936, %r3939}, {%r604, %r610, %r607, %r613}, {%r3402, %r3540}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3942, %r3945}, {%r604, %r610, %r607, %r613}, {%r3411, %r3547}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3948, %r3951}, {%r604, %r610, %r607, %r613}, {%r3420, %r3554}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3954, %r3957}, {%r604, %r610, %r607, %r613}, {%r3429, %r3561}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3960, %r3963}, {%r604, %r610, %r607, %r613}, {%r3438, %r3568}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3966, %r3969}, {%r604, %r610, %r607, %r613}, {%r3447, %r3575}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3925, %r3928}, {%r604, %r610, %r607, %r613}, {%r3456, %r3582}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3931, %r3934}, {%r604, %r610, %r607, %r613}, {%r3465, %r3589}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3937, %r3940}, {%r604, %r610, %r607, %r613}, {%r3474, %r3596}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3943, %r3946}, {%r604, %r610, %r607, %r613}, {%r3483, %r3603}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3949, %r3952}, {%r604, %r610, %r607, %r613}, {%r3492, %r3610}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3955, %r3958}, {%r604, %r610, %r607, %r613}, {%r3501, %r3617}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3961, %r3964}, {%r604, %r610, %r607, %r613}, {%r3510, %r3624}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3967, %r3970}, {%r604, %r610, %r607, %r613}, {%r3519, %r3631}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3923, %r3924, %r3925;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3926, %r3927, %r3928;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3929, %r3930, %r3931;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3932, %r3933, %r3934;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3935, %r3936, %r3937;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3938, %r3939, %r3940;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3941, %r3942, %r3943;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3944, %r3945, %r3946;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3947, %r3948, %r3949;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3950, %r3951, %r3952;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3953, %r3954, %r3955;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3956, %r3957, %r3958;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3959, %r3960, %r3961;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3962, %r3963, %r3964;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3965, %r3966, %r3967;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3968, %r3969, %r3970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3971, %r3924, %r3925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3974, %r3927, %r3928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3977, %r3930, %r3931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3980, %r3933, %r3934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3983, %r3936, %r3937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3986, %r3939, %r3940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3989, %r3942, %r3943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3992, %r3945, %r3946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3995, %r3948, %r3949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3998, %r3951, %r3952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4001, %r3954, %r3955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4004, %r3957, %r3958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4007, %r3960, %r3961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4010, %r3963, %r3964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4013, %r3966, %r3967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4016, %r3969, %r3970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4019, %r186, %r3923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4022, %r186, %r3926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4025, %r186, %r3929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4028, %r186, %r3932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4031, %r186, %r3935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4034, %r186, %r3938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4037, %r186, %r3941;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4040, %r186, %r3944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4043, %r186, %r3947;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4046, %r186, %r3950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4049, %r186, %r3953;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4052, %r186, %r3956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4055, %r186, %r3959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4058, %r186, %r3962;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4061, %r186, %r3965;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4064, %r186, %r3968;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4067, %r187, %r3971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4070, %r187, %r3974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4073, %r187, %r3977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4076, %r187, %r3980;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4079, %r187, %r3983;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4082, %r187, %r3986;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4085, %r187, %r3989;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4088, %r187, %r3992;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4091, %r187, %r3995;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4094, %r187, %r3998;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4097, %r187, %r4001;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4100, %r187, %r4004;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4103, %r187, %r4007;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4106, %r187, %r4010;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4109, %r187, %r4013;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4112, %r187, %r4016;
	// end inline asm
	// begin inline asm
	mov.b32 %r4115, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4116, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4117, %r4019, %r4115;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4120, %r4117, %r4116;
	// end inline asm
	// begin inline asm
	mov.b32 %r4123, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4124, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4125, %r4022, %r4123;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4128, %r4125, %r4124;
	// end inline asm
	// begin inline asm
	mov.b32 %r4131, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4132, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4133, %r4025, %r4131;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4136, %r4133, %r4132;
	// end inline asm
	// begin inline asm
	mov.b32 %r4139, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4140, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4141, %r4028, %r4139;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4144, %r4141, %r4140;
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4148, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4149, %r4031, %r4147;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4152, %r4149, %r4148;
	// end inline asm
	// begin inline asm
	mov.b32 %r4155, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4156, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4157, %r4034, %r4155;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4160, %r4157, %r4156;
	// end inline asm
	// begin inline asm
	mov.b32 %r4163, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4164, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4165, %r4037, %r4163;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4168, %r4165, %r4164;
	// end inline asm
	// begin inline asm
	mov.b32 %r4171, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4172, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4173, %r4040, %r4171;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4176, %r4173, %r4172;
	// end inline asm
	// begin inline asm
	mov.b32 %r4179, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4180, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4181, %r4043, %r4179;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4184, %r4181, %r4180;
	// end inline asm
	// begin inline asm
	mov.b32 %r4187, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4188, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4189, %r4046, %r4187;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4192, %r4189, %r4188;
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4196, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4197, %r4049, %r4195;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4200, %r4197, %r4196;
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4204, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4205, %r4052, %r4203;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4208, %r4205, %r4204;
	// end inline asm
	// begin inline asm
	mov.b32 %r4211, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4212, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4213, %r4055, %r4211;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4216, %r4213, %r4212;
	// end inline asm
	// begin inline asm
	mov.b32 %r4219, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4220, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4221, %r4058, %r4219;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4224, %r4221, %r4220;
	// end inline asm
	// begin inline asm
	mov.b32 %r4227, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4228, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4229, %r4061, %r4227;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4232, %r4229, %r4228;
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4236, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4237, %r4064, %r4235;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4240, %r4237, %r4236;
	// end inline asm
	// begin inline asm
	mov.b32 %r4243, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4244, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4245, %r4067, %r4243;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4248, %r4245, %r4244;
	// end inline asm
	// begin inline asm
	mov.b32 %r4251, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4252, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4253, %r4070, %r4251;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4256, %r4253, %r4252;
	// end inline asm
	// begin inline asm
	mov.b32 %r4259, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4260, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4261, %r4073, %r4259;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4264, %r4261, %r4260;
	// end inline asm
	// begin inline asm
	mov.b32 %r4267, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4268, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4269, %r4076, %r4267;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4272, %r4269, %r4268;
	// end inline asm
	// begin inline asm
	mov.b32 %r4275, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4276, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4277, %r4079, %r4275;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4280, %r4277, %r4276;
	// end inline asm
	// begin inline asm
	mov.b32 %r4283, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4284, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4285, %r4082, %r4283;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4288, %r4285, %r4284;
	// end inline asm
	// begin inline asm
	mov.b32 %r4291, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4292, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4293, %r4085, %r4291;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4296, %r4293, %r4292;
	// end inline asm
	// begin inline asm
	mov.b32 %r4299, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4300, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4301, %r4088, %r4299;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4304, %r4301, %r4300;
	// end inline asm
	// begin inline asm
	mov.b32 %r4307, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4308, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4309, %r4091, %r4307;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4312, %r4309, %r4308;
	// end inline asm
	// begin inline asm
	mov.b32 %r4315, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4316, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4317, %r4094, %r4315;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4320, %r4317, %r4316;
	// end inline asm
	// begin inline asm
	mov.b32 %r4323, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4324, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4325, %r4097, %r4323;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4328, %r4325, %r4324;
	// end inline asm
	// begin inline asm
	mov.b32 %r4331, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4332, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4333, %r4100, %r4331;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4336, %r4333, %r4332;
	// end inline asm
	// begin inline asm
	mov.b32 %r4339, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4340, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4341, %r4103, %r4339;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4344, %r4341, %r4340;
	// end inline asm
	// begin inline asm
	mov.b32 %r4347, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4348, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4349, %r4106, %r4347;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4352, %r4349, %r4348;
	// end inline asm
	// begin inline asm
	mov.b32 %r4355, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4356, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4357, %r4109, %r4355;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4360, %r4357, %r4356;
	// end inline asm
	// begin inline asm
	mov.b32 %r4363, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4364, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4365, %r4112, %r4363;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4368, %r4365, %r4364;
	// end inline asm
	// begin inline asm
	mov.b32 %r4374, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4373, %r4374, %r4372;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4376, %r4120, %r4373;
	// end inline asm
	// begin inline asm
	mov.b32 %r4379, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4380, %r4374, %r4379;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4383, %r4128, %r4380;
	// end inline asm
	// begin inline asm
	mov.b32 %r4386, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4387, %r4374, %r4386;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4390, %r4136, %r4387;
	// end inline asm
	// begin inline asm
	mov.b32 %r4393, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4394, %r4374, %r4393;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4397, %r4144, %r4394;
	// end inline asm
	mov.u32 	%r4403, 25152;
	// begin inline asm
	prmt.b32 %r4400, %r4376, %r4390, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4404, %r4383, %r4397, %r4403;
	// end inline asm
	shl.b32 	%r4411, %r4404, 4;
	mov.u32 	%r4409, 252645135;
	// begin inline asm
	lop3.b32 %r4408, %r4409, %r4400, %r4411, 202;
	// end inline asm
	xor.b32  	%r16226, %r4408, -2004318072;
	// begin inline asm
	mov.b32 %r4415, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4413, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4414, %r4415, %r4413;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4417, %r4152, %r4414;
	// end inline asm
	// begin inline asm
	mov.b32 %r4420, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4421, %r4415, %r4420;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4424, %r4160, %r4421;
	// end inline asm
	// begin inline asm
	mov.b32 %r4427, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4428, %r4415, %r4427;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4431, %r4168, %r4428;
	// end inline asm
	// begin inline asm
	mov.b32 %r4434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4435, %r4415, %r4434;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4438, %r4176, %r4435;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4441, %r4417, %r4431, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4445, %r4424, %r4438, %r4403;
	// end inline asm
	shl.b32 	%r4452, %r4445, 4;
	// begin inline asm
	lop3.b32 %r4449, %r4409, %r4441, %r4452, 202;
	// end inline asm
	xor.b32  	%r16227, %r4449, -2004318072;
	// begin inline asm
	mov.b32 %r4456, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4454, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4455, %r4456, %r4454;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4458, %r4184, %r4455;
	// end inline asm
	// begin inline asm
	mov.b32 %r4461, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4462, %r4456, %r4461;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4465, %r4192, %r4462;
	// end inline asm
	// begin inline asm
	mov.b32 %r4468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4469, %r4456, %r4468;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4472, %r4200, %r4469;
	// end inline asm
	// begin inline asm
	mov.b32 %r4475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4476, %r4456, %r4475;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4479, %r4208, %r4476;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4482, %r4458, %r4472, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4486, %r4465, %r4479, %r4403;
	// end inline asm
	shl.b32 	%r4493, %r4486, 4;
	// begin inline asm
	lop3.b32 %r4490, %r4409, %r4482, %r4493, 202;
	// end inline asm
	xor.b32  	%r16228, %r4490, -2004318072;
	// begin inline asm
	mov.b32 %r4497, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4495, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4496, %r4497, %r4495;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4499, %r4216, %r4496;
	// end inline asm
	// begin inline asm
	mov.b32 %r4502, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4503, %r4497, %r4502;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4506, %r4224, %r4503;
	// end inline asm
	// begin inline asm
	mov.b32 %r4509, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4510, %r4497, %r4509;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4513, %r4232, %r4510;
	// end inline asm
	// begin inline asm
	mov.b32 %r4516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4517, %r4497, %r4516;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4520, %r4240, %r4517;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4523, %r4499, %r4513, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4527, %r4506, %r4520, %r4403;
	// end inline asm
	shl.b32 	%r4534, %r4527, 4;
	// begin inline asm
	lop3.b32 %r4531, %r4409, %r4523, %r4534, 202;
	// end inline asm
	xor.b32  	%r16229, %r4531, -2004318072;
	// begin inline asm
	mov.b32 %r4538, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4537, %r4538, %r4536;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4540, %r4248, %r4537;
	// end inline asm
	// begin inline asm
	mov.b32 %r4543, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4544, %r4538, %r4543;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4547, %r4256, %r4544;
	// end inline asm
	// begin inline asm
	mov.b32 %r4550, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4551, %r4538, %r4550;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4554, %r4264, %r4551;
	// end inline asm
	// begin inline asm
	mov.b32 %r4557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4558, %r4538, %r4557;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4561, %r4272, %r4558;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4564, %r4540, %r4554, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4568, %r4547, %r4561, %r4403;
	// end inline asm
	shl.b32 	%r4575, %r4568, 4;
	// begin inline asm
	lop3.b32 %r4572, %r4409, %r4564, %r4575, 202;
	// end inline asm
	xor.b32  	%r16230, %r4572, -2004318072;
	// begin inline asm
	mov.b32 %r4579, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4577, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4578, %r4579, %r4577;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4581, %r4280, %r4578;
	// end inline asm
	// begin inline asm
	mov.b32 %r4584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4585, %r4579, %r4584;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4588, %r4288, %r4585;
	// end inline asm
	// begin inline asm
	mov.b32 %r4591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4592, %r4579, %r4591;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4595, %r4296, %r4592;
	// end inline asm
	// begin inline asm
	mov.b32 %r4598, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4599, %r4579, %r4598;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4602, %r4304, %r4599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4605, %r4581, %r4595, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4609, %r4588, %r4602, %r4403;
	// end inline asm
	shl.b32 	%r4616, %r4609, 4;
	// begin inline asm
	lop3.b32 %r4613, %r4409, %r4605, %r4616, 202;
	// end inline asm
	xor.b32  	%r16231, %r4613, -2004318072;
	// begin inline asm
	mov.b32 %r4620, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4618, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4619, %r4620, %r4618;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4622, %r4312, %r4619;
	// end inline asm
	// begin inline asm
	mov.b32 %r4625, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4626, %r4620, %r4625;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4629, %r4320, %r4626;
	// end inline asm
	// begin inline asm
	mov.b32 %r4632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4633, %r4620, %r4632;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4636, %r4328, %r4633;
	// end inline asm
	// begin inline asm
	mov.b32 %r4639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4640, %r4620, %r4639;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4643, %r4336, %r4640;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4646, %r4622, %r4636, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4650, %r4629, %r4643, %r4403;
	// end inline asm
	shl.b32 	%r4657, %r4650, 4;
	// begin inline asm
	lop3.b32 %r4654, %r4409, %r4646, %r4657, 202;
	// end inline asm
	xor.b32  	%r16232, %r4654, -2004318072;
	// begin inline asm
	mov.b32 %r4661, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4659, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4660, %r4661, %r4659;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4663, %r4344, %r4660;
	// end inline asm
	// begin inline asm
	mov.b32 %r4666, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4667, %r4661, %r4666;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4670, %r4352, %r4667;
	// end inline asm
	// begin inline asm
	mov.b32 %r4673, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4674, %r4661, %r4673;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4677, %r4360, %r4674;
	// end inline asm
	// begin inline asm
	mov.b32 %r4680, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4681, %r4661, %r4680;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4684, %r4368, %r4681;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4687, %r4663, %r4677, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4691, %r4670, %r4684, %r4403;
	// end inline asm
	shl.b32 	%r4698, %r4691, 4;
	// begin inline asm
	lop3.b32 %r4695, %r4409, %r4687, %r4698, 202;
	// end inline asm
	xor.b32  	%r16233, %r4695, -2004318072;
	setp.eq.s32 	%p328, %r16409, 0;
	selp.b32 	%r16234, 0, 4161, %p328;
	add.s32 	%r16235, %r134, %r16234;
	mul.wide.u32 	%rd115, %r16235, 4;
	add.s64 	%rd116, %rd51, %rd115;
	st.shared.u32 	[%rd116], %r16226;
	add.s32 	%r16236, %r135, %r16234;
	mul.wide.u32 	%rd117, %r16236, 4;
	add.s64 	%rd118, %rd51, %rd117;
	st.shared.u32 	[%rd118], %r16227;
	add.s32 	%r16237, %r136, %r16234;
	mul.wide.u32 	%rd119, %r16237, 4;
	add.s64 	%rd120, %rd51, %rd119;
	st.shared.u32 	[%rd120], %r16228;
	add.s32 	%r16238, %r137, %r16234;
	mul.wide.u32 	%rd121, %r16238, 4;
	add.s64 	%rd122, %rd51, %rd121;
	st.shared.u32 	[%rd122], %r16229;
	add.s32 	%r16239, %r138, %r16234;
	mul.wide.u32 	%rd123, %r16239, 4;
	add.s64 	%rd124, %rd51, %rd123;
	st.shared.u32 	[%rd124], %r16230;
	add.s32 	%r16240, %r139, %r16234;
	mul.wide.u32 	%rd125, %r16240, 4;
	add.s64 	%rd126, %rd51, %rd125;
	st.shared.u32 	[%rd126], %r16231;
	add.s32 	%r16241, %r140, %r16234;
	mul.wide.u32 	%rd127, %r16241, 4;
	add.s64 	%rd128, %rd51, %rd127;
	st.shared.u32 	[%rd128], %r16232;
	add.s32 	%r16242, %r141, %r16234;
	mul.wide.u32 	%rd129, %r16242, 4;
	add.s64 	%rd130, %rd51, %rd129;
	st.shared.u32 	[%rd130], %r16233;
	ld.shared.u32 	%r16384, [%rd100];
	ld.shared.u32 	%r16385, [%rd102];
	ld.shared.u32 	%r16386, [%rd104];
	ld.shared.u32 	%r16387, [%rd106];
	ld.shared.u32 	%r16396, [%rd108];
	ld.shared.u32 	%r16397, [%rd110];
	ld.shared.u32 	%r16398, [%rd112];
	ld.shared.u32 	%r16399, [%rd114];
	// begin inline asm
	mov.b32 %r4704, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4715, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4703, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r4701, %r886, %r4703, %r4704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4705, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4706, %r4704, %r4705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4709, %r4701, %r4706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4712, %r897, %r4703, %r4715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4716, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4717, %r4715, %r4716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4720, %r4712, %r4717;
	// end inline asm
	shr.u32 	%r4725, %r4703, 8;
	// begin inline asm
	lop3.b32 %r4723, %r886, %r4725, %r4704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4727, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4728, %r4704, %r4727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4731, %r4723, %r4728;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4734, %r897, %r4725, %r4715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4738, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4739, %r4715, %r4738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4742, %r4734, %r4739;
	// end inline asm
	// begin inline asm
	mov.b32 %r4750, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4761, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4749, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r4747, %r886, %r4749, %r4750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4751, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4752, %r4750, %r4751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4755, %r4747, %r4752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4758, %r897, %r4749, %r4761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4762, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4763, %r4761, %r4762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4766, %r4758, %r4763;
	// end inline asm
	shr.u32 	%r4771, %r4749, 8;
	// begin inline asm
	lop3.b32 %r4769, %r886, %r4771, %r4750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4773, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4774, %r4750, %r4773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4777, %r4769, %r4774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4780, %r897, %r4771, %r4761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4784, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4785, %r4761, %r4784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4788, %r4780, %r4785;
	// end inline asm
	// begin inline asm
	mov.b32 %r4796, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4807, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4795, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r4793, %r886, %r4795, %r4796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4797, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4798, %r4796, %r4797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4801, %r4793, %r4798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4804, %r897, %r4795, %r4807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4808, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4809, %r4807, %r4808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4812, %r4804, %r4809;
	// end inline asm
	shr.u32 	%r4817, %r4795, 8;
	// begin inline asm
	lop3.b32 %r4815, %r886, %r4817, %r4796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4819, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4820, %r4796, %r4819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4823, %r4815, %r4820;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4826, %r897, %r4817, %r4807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4830, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4831, %r4807, %r4830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4834, %r4826, %r4831;
	// end inline asm
	// begin inline asm
	mov.b32 %r4842, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4853, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4841, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r4839, %r886, %r4841, %r4842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4843, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4844, %r4842, %r4843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4847, %r4839, %r4844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4850, %r897, %r4841, %r4853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4854, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4855, %r4853, %r4854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4858, %r4850, %r4855;
	// end inline asm
	shr.u32 	%r4863, %r4841, 8;
	// begin inline asm
	lop3.b32 %r4861, %r886, %r4863, %r4842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4865, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4866, %r4842, %r4865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4869, %r4861, %r4866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4872, %r897, %r4863, %r4853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4876, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4877, %r4853, %r4876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4880, %r4872, %r4877;
	// end inline asm
	// begin inline asm
	mov.b32 %r4888, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4899, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4887, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r4885, %r886, %r4887, %r4888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4889, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4890, %r4888, %r4889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4893, %r4885, %r4890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4896, %r897, %r4887, %r4899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4900, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4901, %r4899, %r4900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4904, %r4896, %r4901;
	// end inline asm
	shr.u32 	%r4909, %r4887, 8;
	// begin inline asm
	lop3.b32 %r4907, %r886, %r4909, %r4888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4911, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4912, %r4888, %r4911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4915, %r4907, %r4912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4918, %r897, %r4909, %r4899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4922, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4923, %r4899, %r4922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4926, %r4918, %r4923;
	// end inline asm
	// begin inline asm
	mov.b32 %r4934, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4945, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4933, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r4931, %r886, %r4933, %r4934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4936, %r4934, %r4935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4939, %r4931, %r4936;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4942, %r897, %r4933, %r4945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4947, %r4945, %r4946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4950, %r4942, %r4947;
	// end inline asm
	shr.u32 	%r4955, %r4933, 8;
	// begin inline asm
	lop3.b32 %r4953, %r886, %r4955, %r4934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4958, %r4934, %r4957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4961, %r4953, %r4958;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4964, %r897, %r4955, %r4945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4968, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4969, %r4945, %r4968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4972, %r4964, %r4969;
	// end inline asm
	// begin inline asm
	mov.b32 %r4980, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4991, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4979, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r4977, %r886, %r4979, %r4980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4982, %r4980, %r4981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4985, %r4977, %r4982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4988, %r897, %r4979, %r4991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4993, %r4991, %r4992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4996, %r4988, %r4993;
	// end inline asm
	shr.u32 	%r5001, %r4979, 8;
	// begin inline asm
	lop3.b32 %r4999, %r886, %r5001, %r4980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5004, %r4980, %r5003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5007, %r4999, %r5004;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5010, %r897, %r5001, %r4991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5014, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5015, %r4991, %r5014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5018, %r5010, %r5015;
	// end inline asm
	// begin inline asm
	mov.b32 %r5026, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5037, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r5025, %r16399, -2004318072;
	// begin inline asm
	lop3.b32 %r5023, %r886, %r5025, %r5026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5027, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5028, %r5026, %r5027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5031, %r5023, %r5028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5034, %r897, %r5025, %r5037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5039, %r5037, %r5038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5042, %r5034, %r5039;
	// end inline asm
	shr.u32 	%r5047, %r5025, 8;
	// begin inline asm
	lop3.b32 %r5045, %r886, %r5047, %r5026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5050, %r5026, %r5049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5053, %r5045, %r5050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5056, %r897, %r5047, %r5037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5061, %r5037, %r5060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5064, %r5056, %r5061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5067, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5069, %r5067, %r4709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5072, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5074, %r5072, %r4720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5077, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5079, %r5077, %r4731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5082, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5084, %r5082, %r4742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5087, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5089, %r5087, %r4755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5092, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5094, %r5092, %r4766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5097, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5099, %r5097, %r4777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5102, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5104, %r5102, %r4788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5107, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5109, %r5107, %r4801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5112, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5114, %r5112, %r4812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5117, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5119, %r5117, %r4823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5122, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5124, %r5122, %r4834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5127, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5129, %r5127, %r4847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5132, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5134, %r5132, %r4858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5137, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5139, %r5137, %r4869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5142, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5144, %r5142, %r4880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5147, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5149, %r5147, %r4893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5152, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5154, %r5152, %r4904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5157, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5159, %r5157, %r4915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5162, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5164, %r5162, %r4926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5167, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5169, %r5167, %r4939;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5172, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5174, %r5172, %r4950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5177, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5179, %r5177, %r4961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5182, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5184, %r5182, %r4972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5187, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5189, %r5187, %r4985;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5192, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5194, %r5192, %r4996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5197, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5199, %r5197, %r5007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5202, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5204, %r5202, %r5018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5207, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5209, %r5207, %r5031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5212, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5214, %r5212, %r5042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5217, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5219, %r5217, %r5053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5222, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5224, %r5222, %r5064;
	// end inline asm
	// begin inline asm
	mov.b32 %r5232, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5243, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5229, %r886, %r1911, %r5232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5233, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5234, %r5232, %r5233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5237, %r5229, %r5234;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5240, %r897, %r1911, %r5243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5245, %r5243, %r5244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5248, %r5240, %r5245;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5251, %r886, %r1933, %r5232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5255, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5256, %r5232, %r5255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5259, %r5251, %r5256;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5262, %r897, %r1933, %r5243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5266, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5267, %r5243, %r5266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5270, %r5262, %r5267;
	// end inline asm
	// begin inline asm
	mov.b32 %r5278, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5289, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5275, %r886, %r1957, %r5278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5279, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5280, %r5278, %r5279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5283, %r5275, %r5280;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5286, %r897, %r1957, %r5289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5291, %r5289, %r5290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5294, %r5286, %r5291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5297, %r886, %r1979, %r5278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5301, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5302, %r5278, %r5301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5305, %r5297, %r5302;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5308, %r897, %r1979, %r5289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5313, %r5289, %r5312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5316, %r5308, %r5313;
	// end inline asm
	// begin inline asm
	mov.b32 %r5324, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5335, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5321, %r886, %r2003, %r5324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5325, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5326, %r5324, %r5325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5329, %r5321, %r5326;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5332, %r897, %r2003, %r5335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5336, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5337, %r5335, %r5336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5340, %r5332, %r5337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5343, %r886, %r2025, %r5324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5347, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5348, %r5324, %r5347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5351, %r5343, %r5348;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5354, %r897, %r2025, %r5335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5358, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5359, %r5335, %r5358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5362, %r5354, %r5359;
	// end inline asm
	// begin inline asm
	mov.b32 %r5370, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5381, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5367, %r886, %r2049, %r5370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5371, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5372, %r5370, %r5371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5375, %r5367, %r5372;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5378, %r897, %r2049, %r5381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5382, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5383, %r5381, %r5382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5386, %r5378, %r5383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5389, %r886, %r2071, %r5370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5393, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5394, %r5370, %r5393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5397, %r5389, %r5394;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5400, %r897, %r2071, %r5381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5404, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5405, %r5381, %r5404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5408, %r5400, %r5405;
	// end inline asm
	// begin inline asm
	mov.b32 %r5416, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5427, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5413, %r886, %r2095, %r5416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5417, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5418, %r5416, %r5417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5421, %r5413, %r5418;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5424, %r897, %r2095, %r5427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5429, %r5427, %r5428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5432, %r5424, %r5429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5435, %r886, %r2117, %r5416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5439, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5440, %r5416, %r5439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5443, %r5435, %r5440;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5446, %r897, %r2117, %r5427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5450, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5451, %r5427, %r5450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5454, %r5446, %r5451;
	// end inline asm
	// begin inline asm
	mov.b32 %r5462, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5473, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5459, %r886, %r2141, %r5462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5463, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5464, %r5462, %r5463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5467, %r5459, %r5464;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5470, %r897, %r2141, %r5473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5475, %r5473, %r5474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5478, %r5470, %r5475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5481, %r886, %r2163, %r5462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5485, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5486, %r5462, %r5485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5489, %r5481, %r5486;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5492, %r897, %r2163, %r5473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5497, %r5473, %r5496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5500, %r5492, %r5497;
	// end inline asm
	// begin inline asm
	mov.b32 %r5508, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5519, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5505, %r886, %r2187, %r5508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5509, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5510, %r5508, %r5509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5513, %r5505, %r5510;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5516, %r897, %r2187, %r5519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5521, %r5519, %r5520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5524, %r5516, %r5521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5527, %r886, %r2209, %r5508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5531, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5532, %r5508, %r5531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5535, %r5527, %r5532;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5538, %r897, %r2209, %r5519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5542, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5543, %r5519, %r5542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5546, %r5538, %r5543;
	// end inline asm
	// begin inline asm
	mov.b32 %r5554, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5565, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5551, %r886, %r2233, %r5554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5555, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5556, %r5554, %r5555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5559, %r5551, %r5556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5562, %r897, %r2233, %r5565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5566, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5567, %r5565, %r5566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5570, %r5562, %r5567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5573, %r886, %r2255, %r5554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5577, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5578, %r5554, %r5577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5581, %r5573, %r5578;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5584, %r897, %r2255, %r5565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5588, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5589, %r5565, %r5588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5592, %r5584, %r5589;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5595, %r307, %r5237, %r5069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5599, %r307, %r5248, %r5074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5603, %r307, %r5259, %r5079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5607, %r307, %r5270, %r5084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5611, %r307, %r5283, %r5089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5615, %r307, %r5294, %r5094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5619, %r307, %r5305, %r5099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5623, %r307, %r5316, %r5104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5627, %r307, %r5329, %r5109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5631, %r307, %r5340, %r5114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5635, %r307, %r5351, %r5119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5639, %r307, %r5362, %r5124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5643, %r307, %r5375, %r5129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5647, %r307, %r5386, %r5134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5651, %r307, %r5397, %r5139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5655, %r307, %r5408, %r5144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5659, %r325, %r5421, %r5149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5663, %r325, %r5432, %r5154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5667, %r325, %r5443, %r5159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5671, %r325, %r5454, %r5164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5675, %r325, %r5467, %r5169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5679, %r325, %r5478, %r5174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5683, %r325, %r5489, %r5179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5687, %r325, %r5500, %r5184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5691, %r325, %r5513, %r5189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5695, %r325, %r5524, %r5194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5699, %r325, %r5535, %r5199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5703, %r325, %r5546, %r5204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5707, %r325, %r5559, %r5209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5711, %r325, %r5570, %r5214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5715, %r325, %r5581, %r5219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5719, %r325, %r5592, %r5224;
	// end inline asm
	// begin inline asm
	mov.b32 %r5728, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5739, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5725, %r886, %r2471, %r5728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5729, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5730, %r5728, %r5729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5733, %r5725, %r5730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5736, %r897, %r2471, %r5739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5740, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5741, %r5739, %r5740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5744, %r5736, %r5741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5747, %r886, %r2493, %r5728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5751, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5752, %r5728, %r5751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5755, %r5747, %r5752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5758, %r897, %r2493, %r5739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5762, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5763, %r5739, %r5762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5766, %r5758, %r5763;
	// end inline asm
	// begin inline asm
	mov.b32 %r5774, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5785, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5771, %r886, %r2517, %r5774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5775, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5776, %r5774, %r5775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5779, %r5771, %r5776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5782, %r897, %r2517, %r5785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5786, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5787, %r5785, %r5786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5790, %r5782, %r5787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5793, %r886, %r2539, %r5774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5797, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5798, %r5774, %r5797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5801, %r5793, %r5798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5804, %r897, %r2539, %r5785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5808, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5809, %r5785, %r5808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5812, %r5804, %r5809;
	// end inline asm
	// begin inline asm
	mov.b32 %r5820, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5831, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5817, %r886, %r2563, %r5820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5821, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5822, %r5820, %r5821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5825, %r5817, %r5822;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5828, %r897, %r2563, %r5831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5832, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5833, %r5831, %r5832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5836, %r5828, %r5833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5839, %r886, %r2585, %r5820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5843, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5844, %r5820, %r5843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5847, %r5839, %r5844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5850, %r897, %r2585, %r5831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5854, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5855, %r5831, %r5854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5858, %r5850, %r5855;
	// end inline asm
	// begin inline asm
	mov.b32 %r5866, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5877, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5863, %r886, %r2609, %r5866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5867, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5868, %r5866, %r5867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5871, %r5863, %r5868;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5874, %r897, %r2609, %r5877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5878, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5879, %r5877, %r5878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5882, %r5874, %r5879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5885, %r886, %r2631, %r5866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5889, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5890, %r5866, %r5889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5893, %r5885, %r5890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5896, %r897, %r2631, %r5877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5900, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5901, %r5877, %r5900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5904, %r5896, %r5901;
	// end inline asm
	// begin inline asm
	mov.b32 %r5912, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5923, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5909, %r886, %r2655, %r5912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5913, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5914, %r5912, %r5913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5917, %r5909, %r5914;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5920, %r897, %r2655, %r5923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5925, %r5923, %r5924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5928, %r5920, %r5925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5931, %r886, %r2677, %r5912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5936, %r5912, %r5935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5939, %r5931, %r5936;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5942, %r897, %r2677, %r5923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5947, %r5923, %r5946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5950, %r5942, %r5947;
	// end inline asm
	// begin inline asm
	mov.b32 %r5958, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5969, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5955, %r886, %r2701, %r5958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5959, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5960, %r5958, %r5959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5963, %r5955, %r5960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5966, %r897, %r2701, %r5969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5970, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5971, %r5969, %r5970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5974, %r5966, %r5971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5977, %r886, %r2723, %r5958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5982, %r5958, %r5981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5985, %r5977, %r5982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5988, %r897, %r2723, %r5969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5993, %r5969, %r5992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5996, %r5988, %r5993;
	// end inline asm
	// begin inline asm
	mov.b32 %r6004, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6015, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6001, %r886, %r2747, %r6004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6006, %r6004, %r6005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6009, %r6001, %r6006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6012, %r897, %r2747, %r6015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6016, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6017, %r6015, %r6016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6020, %r6012, %r6017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6023, %r886, %r2769, %r6004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6027, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6028, %r6004, %r6027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6031, %r6023, %r6028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6034, %r897, %r2769, %r6015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6039, %r6015, %r6038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6042, %r6034, %r6039;
	// end inline asm
	// begin inline asm
	mov.b32 %r6050, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6061, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6047, %r886, %r2793, %r6050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6052, %r6050, %r6051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6055, %r6047, %r6052;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6058, %r897, %r2793, %r6061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6063, %r6061, %r6062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6066, %r6058, %r6063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6069, %r886, %r2815, %r6050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6073, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6074, %r6050, %r6073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6077, %r6069, %r6074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6080, %r897, %r2815, %r6061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6084, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6085, %r6061, %r6084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6088, %r6080, %r6085;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6091, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6093, %r6091, %r5733, %r5595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6097, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6099, %r6097, %r5744, %r5599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6103, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6105, %r6103, %r5755, %r5603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6109, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6111, %r6109, %r5766, %r5607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6115, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6117, %r6115, %r5779, %r5611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6121, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6123, %r6121, %r5790, %r5615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6127, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6129, %r6127, %r5801, %r5619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6133, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6135, %r6133, %r5812, %r5623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6139, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6141, %r6139, %r5825, %r5627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6145, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6147, %r6145, %r5836, %r5631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6151, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6153, %r6151, %r5847, %r5635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6157, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6159, %r6157, %r5858, %r5639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6163, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6165, %r6163, %r5871, %r5643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6169, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6171, %r6169, %r5882, %r5647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6175, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6177, %r6175, %r5893, %r5651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6181, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6183, %r6181, %r5904, %r5655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6187, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6189, %r6187, %r5917, %r5659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6193, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6195, %r6193, %r5928, %r5663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6199, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6201, %r6199, %r5939, %r5667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6205, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6207, %r6205, %r5950, %r5671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6211, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6213, %r6211, %r5963, %r5675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6217, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6219, %r6217, %r5974, %r5679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6223, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6225, %r6223, %r5985, %r5683;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6229, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6231, %r6229, %r5996, %r5687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6235, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6237, %r6235, %r6009, %r5691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6241, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6243, %r6241, %r6020, %r5695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6247, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6249, %r6247, %r6031, %r5699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6253, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6255, %r6253, %r6042, %r5703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6259, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6261, %r6259, %r6055, %r5707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6265, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6267, %r6265, %r6066, %r5711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6271, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6273, %r6271, %r6077, %r5715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6277, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6279, %r6277, %r6088, %r5719;
	// end inline asm
	// begin inline asm
	mov.b32 %r6288, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6299, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6285, %r886, %r887, %r6288, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6289, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6290, %r6288, %r6289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6293, %r6285, %r6290;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6296, %r897, %r887, %r6299, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6300, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6301, %r6299, %r6300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6304, %r6296, %r6301;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6307, %r886, %r909, %r6288, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6311, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6312, %r6288, %r6311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6315, %r6307, %r6312;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6318, %r897, %r909, %r6299, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6322, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6323, %r6299, %r6322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6326, %r6318, %r6323;
	// end inline asm
	// begin inline asm
	mov.b32 %r6334, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6345, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6331, %r886, %r933, %r6334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6335, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6336, %r6334, %r6335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6339, %r6331, %r6336;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6342, %r897, %r933, %r6345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6347, %r6345, %r6346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6350, %r6342, %r6347;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6353, %r886, %r955, %r6334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6357, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6358, %r6334, %r6357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6361, %r6353, %r6358;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6364, %r897, %r955, %r6345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6368, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6369, %r6345, %r6368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6372, %r6364, %r6369;
	// end inline asm
	// begin inline asm
	mov.b32 %r6380, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6391, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6377, %r886, %r979, %r6380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6381, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6382, %r6380, %r6381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6385, %r6377, %r6382;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6388, %r897, %r979, %r6391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6392, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6393, %r6391, %r6392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6396, %r6388, %r6393;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6399, %r886, %r1001, %r6380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6403, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6404, %r6380, %r6403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6407, %r6399, %r6404;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6410, %r897, %r1001, %r6391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6414, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6415, %r6391, %r6414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6418, %r6410, %r6415;
	// end inline asm
	// begin inline asm
	mov.b32 %r6426, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6437, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6423, %r886, %r1025, %r6426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6427, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6428, %r6426, %r6427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6431, %r6423, %r6428;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6434, %r897, %r1025, %r6437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6438, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6439, %r6437, %r6438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6442, %r6434, %r6439;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6445, %r886, %r1047, %r6426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6449, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6450, %r6426, %r6449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6453, %r6445, %r6450;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6456, %r897, %r1047, %r6437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6460, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6461, %r6437, %r6460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6464, %r6456, %r6461;
	// end inline asm
	// begin inline asm
	mov.b32 %r6472, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6483, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6469, %r886, %r1071, %r6472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6473, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6474, %r6472, %r6473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6477, %r6469, %r6474;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6480, %r897, %r1071, %r6483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6484, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6485, %r6483, %r6484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6488, %r6480, %r6485;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6491, %r886, %r1093, %r6472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6495, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6496, %r6472, %r6495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6499, %r6491, %r6496;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6502, %r897, %r1093, %r6483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6506, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6507, %r6483, %r6506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6510, %r6502, %r6507;
	// end inline asm
	// begin inline asm
	mov.b32 %r6518, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6529, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6515, %r886, %r1117, %r6518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6519, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6520, %r6518, %r6519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6523, %r6515, %r6520;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6526, %r897, %r1117, %r6529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6530, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6531, %r6529, %r6530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6534, %r6526, %r6531;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6537, %r886, %r1139, %r6518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6541, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6542, %r6518, %r6541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6545, %r6537, %r6542;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6548, %r897, %r1139, %r6529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6552, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6553, %r6529, %r6552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6556, %r6548, %r6553;
	// end inline asm
	// begin inline asm
	mov.b32 %r6564, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6575, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6561, %r886, %r1163, %r6564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6565, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6566, %r6564, %r6565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6569, %r6561, %r6566;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6572, %r897, %r1163, %r6575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6576, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6577, %r6575, %r6576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6580, %r6572, %r6577;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6583, %r886, %r1185, %r6564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6587, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6588, %r6564, %r6587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6591, %r6583, %r6588;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6594, %r897, %r1185, %r6575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6598, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6599, %r6575, %r6598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6602, %r6594, %r6599;
	// end inline asm
	// begin inline asm
	mov.b32 %r6610, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6621, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6607, %r886, %r1209, %r6610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6611, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6612, %r6610, %r6611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6615, %r6607, %r6612;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6618, %r897, %r1209, %r6621, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6622, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6623, %r6621, %r6622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6626, %r6618, %r6623;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6629, %r886, %r1231, %r6610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6633, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6634, %r6610, %r6633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6637, %r6629, %r6634;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6640, %r897, %r1231, %r6621, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6644, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6645, %r6621, %r6644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6648, %r6640, %r6645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6786, %r379, %r6293, %r6093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6783, %r379, %r6304, %r6099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6795, %r379, %r6315, %r6105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6792, %r379, %r6326, %r6111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6804, %r379, %r6339, %r6117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6801, %r379, %r6350, %r6123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6813, %r379, %r6361, %r6129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6810, %r379, %r6372, %r6135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6822, %r379, %r6385, %r6141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6819, %r379, %r6396, %r6147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6831, %r379, %r6407, %r6153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6828, %r379, %r6418, %r6159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6840, %r379, %r6431, %r6165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6837, %r379, %r6442, %r6171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6849, %r379, %r6453, %r6177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6846, %r379, %r6464, %r6183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6858, %r397, %r6477, %r6189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6855, %r397, %r6488, %r6195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6867, %r397, %r6499, %r6201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6864, %r397, %r6510, %r6207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6876, %r397, %r6523, %r6213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6873, %r397, %r6534, %r6219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6885, %r397, %r6545, %r6225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6882, %r397, %r6556, %r6231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6894, %r397, %r6569, %r6237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6891, %r397, %r6580, %r6243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6903, %r397, %r6591, %r6249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6900, %r397, %r6602, %r6255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6912, %r397, %r6615, %r6261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6909, %r397, %r6626, %r6267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6921, %r397, %r6637, %r6273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6918, %r397, %r6648, %r6279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6779, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6781, %r6779, %r6783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6784, %r461, %r6786, %r6781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6788, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6790, %r6788, %r6792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6793, %r461, %r6795, %r6790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6797, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6799, %r6797, %r6801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6802, %r461, %r6804, %r6799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6806, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6808, %r6806, %r6810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6811, %r461, %r6813, %r6808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6815, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6817, %r6815, %r6819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6820, %r461, %r6822, %r6817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6824, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6826, %r6824, %r6828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6829, %r461, %r6831, %r6826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6833, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6835, %r6833, %r6837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6838, %r461, %r6840, %r6835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6842, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6844, %r6842, %r6846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6847, %r461, %r6849, %r6844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6851, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6853, %r6851, %r6855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6856, %r464, %r6858, %r6853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6860, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6862, %r6860, %r6864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6865, %r464, %r6867, %r6862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6869, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6871, %r6869, %r6873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6874, %r464, %r6876, %r6871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6878, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6880, %r6878, %r6882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6883, %r464, %r6885, %r6880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6887, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6889, %r6887, %r6891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6892, %r464, %r6894, %r6889;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6896, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6898, %r6896, %r6900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6901, %r464, %r6903, %r6898;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6905, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6907, %r6905, %r6909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6910, %r464, %r6912, %r6907;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6914, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6916, %r6914, %r6918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6919, %r464, %r6921, %r6916;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6923, %r467, %r6786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6926, %r461, %r6783, %r6923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6930, %r467, %r6795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6933, %r461, %r6792, %r6930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6937, %r467, %r6804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6940, %r461, %r6801, %r6937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6944, %r467, %r6813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6947, %r461, %r6810, %r6944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6951, %r467, %r6822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6954, %r461, %r6819, %r6951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6958, %r467, %r6831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6961, %r461, %r6828, %r6958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6965, %r467, %r6840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6968, %r461, %r6837, %r6965;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6972, %r467, %r6849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6975, %r461, %r6846, %r6972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6979, %r470, %r6858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6982, %r464, %r6855, %r6979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6986, %r470, %r6867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6989, %r464, %r6864, %r6986;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6993, %r470, %r6876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6996, %r464, %r6873, %r6993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7000, %r470, %r6885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7003, %r464, %r6882, %r7000;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7007, %r470, %r6894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7010, %r464, %r6891, %r7007;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7014, %r470, %r6903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7017, %r464, %r6900, %r7014;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7021, %r470, %r6912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7024, %r464, %r6909, %r7021;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7028, %r470, %r6921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7031, %r464, %r6918, %r7028;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7202, %r7199}, {%r516, %r522, %r519, %r525}, {%r6784, %r6926}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7211, %r7208}, {%r516, %r522, %r519, %r525}, {%r6793, %r6933}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7220, %r7217}, {%r516, %r522, %r519, %r525}, {%r6802, %r6940}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7229, %r7226}, {%r516, %r522, %r519, %r525}, {%r6811, %r6947}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7238, %r7235}, {%r516, %r522, %r519, %r525}, {%r6820, %r6954}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7247, %r7244}, {%r516, %r522, %r519, %r525}, {%r6829, %r6961}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7256, %r7253}, {%r516, %r522, %r519, %r525}, {%r6838, %r6968}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7265, %r7262}, {%r516, %r522, %r519, %r525}, {%r6847, %r6975}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7274, %r7271}, {%r516, %r522, %r519, %r525}, {%r6856, %r6982}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7283, %r7280}, {%r516, %r522, %r519, %r525}, {%r6865, %r6989}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7292, %r7289}, {%r516, %r522, %r519, %r525}, {%r6874, %r6996}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7301, %r7298}, {%r516, %r522, %r519, %r525}, {%r6883, %r7003}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7310, %r7307}, {%r516, %r522, %r519, %r525}, {%r6892, %r7010}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7319, %r7316}, {%r516, %r522, %r519, %r525}, {%r6901, %r7017}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7328, %r7325}, {%r516, %r522, %r519, %r525}, {%r6910, %r7024}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7337, %r7334}, {%r516, %r522, %r519, %r525}, {%r6919, %r7031}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7195, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7197, %r7195, %r7199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7200, %r566, %r7202, %r7197;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7204, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7206, %r7204, %r7208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7209, %r566, %r7211, %r7206;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7213, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7215, %r7213, %r7217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7218, %r566, %r7220, %r7215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7222, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7224, %r7222, %r7226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7227, %r566, %r7229, %r7224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7231, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7233, %r7231, %r7235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7236, %r566, %r7238, %r7233;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7240, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7242, %r7240, %r7244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7245, %r566, %r7247, %r7242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7249, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7251, %r7249, %r7253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7254, %r566, %r7256, %r7251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7258, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7260, %r7258, %r7262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7263, %r566, %r7265, %r7260;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7267, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7269, %r7267, %r7271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7272, %r566, %r7274, %r7269;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7276, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7278, %r7276, %r7280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7281, %r566, %r7283, %r7278;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7285, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7287, %r7285, %r7289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7290, %r566, %r7292, %r7287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7294, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7296, %r7294, %r7298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7299, %r566, %r7301, %r7296;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7303, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7305, %r7303, %r7307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7308, %r566, %r7310, %r7305;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7312, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7314, %r7312, %r7316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7317, %r566, %r7319, %r7314;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7321, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7323, %r7321, %r7325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7326, %r566, %r7328, %r7323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7330, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7332, %r7330, %r7334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7335, %r566, %r7337, %r7332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7339, %r569, %r7202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7342, %r566, %r7199, %r7339;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7346, %r569, %r7211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7349, %r566, %r7208, %r7346;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7353, %r569, %r7220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7356, %r566, %r7217, %r7353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7360, %r569, %r7229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7363, %r566, %r7226, %r7360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7367, %r569, %r7238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7370, %r566, %r7235, %r7367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7374, %r569, %r7247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7377, %r566, %r7244, %r7374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7381, %r569, %r7256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7384, %r566, %r7253, %r7381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7388, %r569, %r7265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7391, %r566, %r7262, %r7388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7395, %r569, %r7274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7398, %r566, %r7271, %r7395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7402, %r569, %r7283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7405, %r566, %r7280, %r7402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7409, %r569, %r7292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7412, %r566, %r7289, %r7409;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7416, %r569, %r7301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7419, %r566, %r7298, %r7416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7423, %r569, %r7310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7426, %r566, %r7307, %r7423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7430, %r569, %r7319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7433, %r566, %r7316, %r7430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7437, %r569, %r7328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7440, %r566, %r7325, %r7437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7444, %r569, %r7337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7447, %r566, %r7334, %r7444;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7740, %r7743}, {%r604, %r610, %r607, %r613}, {%r7200, %r7342}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7746, %r7749}, {%r604, %r610, %r607, %r613}, {%r7209, %r7349}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7752, %r7755}, {%r604, %r610, %r607, %r613}, {%r7218, %r7356}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7758, %r7761}, {%r604, %r610, %r607, %r613}, {%r7227, %r7363}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7764, %r7767}, {%r604, %r610, %r607, %r613}, {%r7236, %r7370}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7770, %r7773}, {%r604, %r610, %r607, %r613}, {%r7245, %r7377}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7776, %r7779}, {%r604, %r610, %r607, %r613}, {%r7254, %r7384}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7782, %r7785}, {%r604, %r610, %r607, %r613}, {%r7263, %r7391}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7741, %r7744}, {%r604, %r610, %r607, %r613}, {%r7272, %r7398}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7747, %r7750}, {%r604, %r610, %r607, %r613}, {%r7281, %r7405}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7753, %r7756}, {%r604, %r610, %r607, %r613}, {%r7290, %r7412}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7759, %r7762}, {%r604, %r610, %r607, %r613}, {%r7299, %r7419}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7765, %r7768}, {%r604, %r610, %r607, %r613}, {%r7308, %r7426}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7771, %r7774}, {%r604, %r610, %r607, %r613}, {%r7317, %r7433}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7777, %r7780}, {%r604, %r610, %r607, %r613}, {%r7326, %r7440}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7783, %r7786}, {%r604, %r610, %r607, %r613}, {%r7335, %r7447}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7739, %r7740, %r7741;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7742, %r7743, %r7744;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7745, %r7746, %r7747;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7748, %r7749, %r7750;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7751, %r7752, %r7753;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7754, %r7755, %r7756;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7757, %r7758, %r7759;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7760, %r7761, %r7762;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7763, %r7764, %r7765;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7766, %r7767, %r7768;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7769, %r7770, %r7771;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7772, %r7773, %r7774;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7775, %r7776, %r7777;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7778, %r7779, %r7780;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7781, %r7782, %r7783;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7784, %r7785, %r7786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7787, %r7740, %r7741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7790, %r7743, %r7744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7793, %r7746, %r7747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7796, %r7749, %r7750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7799, %r7752, %r7753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7802, %r7755, %r7756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7805, %r7758, %r7759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7808, %r7761, %r7762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7811, %r7764, %r7765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7814, %r7767, %r7768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7817, %r7770, %r7771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7820, %r7773, %r7774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7823, %r7776, %r7777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7826, %r7779, %r7780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7829, %r7782, %r7783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7832, %r7785, %r7786;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7835, %r186, %r7739;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7838, %r186, %r7742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7841, %r186, %r7745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7844, %r186, %r7748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7847, %r186, %r7751;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7850, %r186, %r7754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7853, %r186, %r7757;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7856, %r186, %r7760;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7859, %r186, %r7763;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7862, %r186, %r7766;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7865, %r186, %r7769;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7868, %r186, %r7772;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7871, %r186, %r7775;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7874, %r186, %r7778;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7877, %r186, %r7781;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7880, %r186, %r7784;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7883, %r187, %r7787;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7886, %r187, %r7790;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7889, %r187, %r7793;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7892, %r187, %r7796;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7895, %r187, %r7799;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7898, %r187, %r7802;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7901, %r187, %r7805;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7904, %r187, %r7808;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7907, %r187, %r7811;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7910, %r187, %r7814;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7913, %r187, %r7817;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7916, %r187, %r7820;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7919, %r187, %r7823;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7922, %r187, %r7826;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7925, %r187, %r7829;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7928, %r187, %r7832;
	// end inline asm
	// begin inline asm
	mov.b32 %r7931, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7932, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7933, %r7835, %r7931;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7936, %r7933, %r7932;
	// end inline asm
	// begin inline asm
	mov.b32 %r7939, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7940, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7941, %r7838, %r7939;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7944, %r7941, %r7940;
	// end inline asm
	// begin inline asm
	mov.b32 %r7947, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7948, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7949, %r7841, %r7947;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7952, %r7949, %r7948;
	// end inline asm
	// begin inline asm
	mov.b32 %r7955, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7956, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7957, %r7844, %r7955;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7960, %r7957, %r7956;
	// end inline asm
	// begin inline asm
	mov.b32 %r7963, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7964, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7965, %r7847, %r7963;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7968, %r7965, %r7964;
	// end inline asm
	// begin inline asm
	mov.b32 %r7971, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7972, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7973, %r7850, %r7971;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7976, %r7973, %r7972;
	// end inline asm
	// begin inline asm
	mov.b32 %r7979, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7980, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7981, %r7853, %r7979;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7984, %r7981, %r7980;
	// end inline asm
	// begin inline asm
	mov.b32 %r7987, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7988, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7989, %r7856, %r7987;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7992, %r7989, %r7988;
	// end inline asm
	// begin inline asm
	mov.b32 %r7995, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7996, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7997, %r7859, %r7995;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8000, %r7997, %r7996;
	// end inline asm
	// begin inline asm
	mov.b32 %r8003, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8004, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8005, %r7862, %r8003;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8008, %r8005, %r8004;
	// end inline asm
	// begin inline asm
	mov.b32 %r8011, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8012, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8013, %r7865, %r8011;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8016, %r8013, %r8012;
	// end inline asm
	// begin inline asm
	mov.b32 %r8019, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8020, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8021, %r7868, %r8019;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8024, %r8021, %r8020;
	// end inline asm
	// begin inline asm
	mov.b32 %r8027, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8028, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8029, %r7871, %r8027;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8032, %r8029, %r8028;
	// end inline asm
	// begin inline asm
	mov.b32 %r8035, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8036, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8037, %r7874, %r8035;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8040, %r8037, %r8036;
	// end inline asm
	// begin inline asm
	mov.b32 %r8043, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8044, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8045, %r7877, %r8043;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8048, %r8045, %r8044;
	// end inline asm
	// begin inline asm
	mov.b32 %r8051, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8052, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8053, %r7880, %r8051;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8056, %r8053, %r8052;
	// end inline asm
	// begin inline asm
	mov.b32 %r8059, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8060, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8061, %r7883, %r8059;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8064, %r8061, %r8060;
	// end inline asm
	// begin inline asm
	mov.b32 %r8067, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8068, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8069, %r7886, %r8067;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8072, %r8069, %r8068;
	// end inline asm
	// begin inline asm
	mov.b32 %r8075, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8076, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8077, %r7889, %r8075;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8080, %r8077, %r8076;
	// end inline asm
	// begin inline asm
	mov.b32 %r8083, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8084, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8085, %r7892, %r8083;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8088, %r8085, %r8084;
	// end inline asm
	// begin inline asm
	mov.b32 %r8091, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8092, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8093, %r7895, %r8091;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8096, %r8093, %r8092;
	// end inline asm
	// begin inline asm
	mov.b32 %r8099, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8100, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8101, %r7898, %r8099;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8104, %r8101, %r8100;
	// end inline asm
	// begin inline asm
	mov.b32 %r8107, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8108, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8109, %r7901, %r8107;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8112, %r8109, %r8108;
	// end inline asm
	// begin inline asm
	mov.b32 %r8115, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8116, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8117, %r7904, %r8115;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8120, %r8117, %r8116;
	// end inline asm
	// begin inline asm
	mov.b32 %r8123, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8124, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8125, %r7907, %r8123;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8128, %r8125, %r8124;
	// end inline asm
	// begin inline asm
	mov.b32 %r8131, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8132, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8133, %r7910, %r8131;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8136, %r8133, %r8132;
	// end inline asm
	// begin inline asm
	mov.b32 %r8139, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8140, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8141, %r7913, %r8139;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8144, %r8141, %r8140;
	// end inline asm
	// begin inline asm
	mov.b32 %r8147, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8148, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8149, %r7916, %r8147;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8152, %r8149, %r8148;
	// end inline asm
	// begin inline asm
	mov.b32 %r8155, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8156, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8157, %r7919, %r8155;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8160, %r8157, %r8156;
	// end inline asm
	// begin inline asm
	mov.b32 %r8163, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8164, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8165, %r7922, %r8163;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8168, %r8165, %r8164;
	// end inline asm
	// begin inline asm
	mov.b32 %r8171, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8172, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8173, %r7925, %r8171;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8176, %r8173, %r8172;
	// end inline asm
	// begin inline asm
	mov.b32 %r8179, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8180, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8181, %r7928, %r8179;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8184, %r8181, %r8180;
	// end inline asm
	// begin inline asm
	mov.b32 %r8190, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8188, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8189, %r8190, %r8188;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8192, %r7936, %r8189;
	// end inline asm
	// begin inline asm
	mov.b32 %r8195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8196, %r8190, %r8195;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8199, %r7944, %r8196;
	// end inline asm
	// begin inline asm
	mov.b32 %r8202, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8203, %r8190, %r8202;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8206, %r7952, %r8203;
	// end inline asm
	// begin inline asm
	mov.b32 %r8209, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8210, %r8190, %r8209;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8213, %r7960, %r8210;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8216, %r8192, %r8206, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8220, %r8199, %r8213, %r4403;
	// end inline asm
	shl.b32 	%r8227, %r8220, 4;
	// begin inline asm
	lop3.b32 %r8224, %r4409, %r8216, %r8227, 202;
	// end inline asm
	xor.b32  	%r16243, %r8224, -2004318072;
	// begin inline asm
	mov.b32 %r8231, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8229, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8230, %r8231, %r8229;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8233, %r7968, %r8230;
	// end inline asm
	// begin inline asm
	mov.b32 %r8236, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8237, %r8231, %r8236;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8240, %r7976, %r8237;
	// end inline asm
	// begin inline asm
	mov.b32 %r8243, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8244, %r8231, %r8243;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8247, %r7984, %r8244;
	// end inline asm
	// begin inline asm
	mov.b32 %r8250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8251, %r8231, %r8250;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8254, %r7992, %r8251;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8257, %r8233, %r8247, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8261, %r8240, %r8254, %r4403;
	// end inline asm
	shl.b32 	%r8268, %r8261, 4;
	// begin inline asm
	lop3.b32 %r8265, %r4409, %r8257, %r8268, 202;
	// end inline asm
	xor.b32  	%r16244, %r8265, -2004318072;
	// begin inline asm
	mov.b32 %r8272, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8270, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8271, %r8272, %r8270;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8274, %r8000, %r8271;
	// end inline asm
	// begin inline asm
	mov.b32 %r8277, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8278, %r8272, %r8277;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8281, %r8008, %r8278;
	// end inline asm
	// begin inline asm
	mov.b32 %r8284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8285, %r8272, %r8284;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8288, %r8016, %r8285;
	// end inline asm
	// begin inline asm
	mov.b32 %r8291, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8292, %r8272, %r8291;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8295, %r8024, %r8292;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8298, %r8274, %r8288, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8302, %r8281, %r8295, %r4403;
	// end inline asm
	shl.b32 	%r8309, %r8302, 4;
	// begin inline asm
	lop3.b32 %r8306, %r4409, %r8298, %r8309, 202;
	// end inline asm
	xor.b32  	%r16245, %r8306, -2004318072;
	// begin inline asm
	mov.b32 %r8313, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8311, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8312, %r8313, %r8311;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8315, %r8032, %r8312;
	// end inline asm
	// begin inline asm
	mov.b32 %r8318, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8319, %r8313, %r8318;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8322, %r8040, %r8319;
	// end inline asm
	// begin inline asm
	mov.b32 %r8325, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8326, %r8313, %r8325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8329, %r8048, %r8326;
	// end inline asm
	// begin inline asm
	mov.b32 %r8332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8333, %r8313, %r8332;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8336, %r8056, %r8333;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8339, %r8315, %r8329, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8343, %r8322, %r8336, %r4403;
	// end inline asm
	shl.b32 	%r8350, %r8343, 4;
	// begin inline asm
	lop3.b32 %r8347, %r4409, %r8339, %r8350, 202;
	// end inline asm
	xor.b32  	%r16246, %r8347, -2004318072;
	// begin inline asm
	mov.b32 %r8354, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8352, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8353, %r8354, %r8352;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8356, %r8064, %r8353;
	// end inline asm
	// begin inline asm
	mov.b32 %r8359, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8360, %r8354, %r8359;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8363, %r8072, %r8360;
	// end inline asm
	// begin inline asm
	mov.b32 %r8366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8367, %r8354, %r8366;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8370, %r8080, %r8367;
	// end inline asm
	// begin inline asm
	mov.b32 %r8373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8374, %r8354, %r8373;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8377, %r8088, %r8374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8380, %r8356, %r8370, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8384, %r8363, %r8377, %r4403;
	// end inline asm
	shl.b32 	%r8391, %r8384, 4;
	// begin inline asm
	lop3.b32 %r8388, %r4409, %r8380, %r8391, 202;
	// end inline asm
	xor.b32  	%r16247, %r8388, -2004318072;
	// begin inline asm
	mov.b32 %r8395, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8393, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8394, %r8395, %r8393;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8397, %r8096, %r8394;
	// end inline asm
	// begin inline asm
	mov.b32 %r8400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8401, %r8395, %r8400;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8404, %r8104, %r8401;
	// end inline asm
	// begin inline asm
	mov.b32 %r8407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8408, %r8395, %r8407;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8411, %r8112, %r8408;
	// end inline asm
	// begin inline asm
	mov.b32 %r8414, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8415, %r8395, %r8414;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8418, %r8120, %r8415;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8421, %r8397, %r8411, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8425, %r8404, %r8418, %r4403;
	// end inline asm
	shl.b32 	%r8432, %r8425, 4;
	// begin inline asm
	lop3.b32 %r8429, %r4409, %r8421, %r8432, 202;
	// end inline asm
	xor.b32  	%r16248, %r8429, -2004318072;
	// begin inline asm
	mov.b32 %r8436, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8435, %r8436, %r8434;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8438, %r8128, %r8435;
	// end inline asm
	// begin inline asm
	mov.b32 %r8441, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8442, %r8436, %r8441;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8445, %r8136, %r8442;
	// end inline asm
	// begin inline asm
	mov.b32 %r8448, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8449, %r8436, %r8448;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8452, %r8144, %r8449;
	// end inline asm
	// begin inline asm
	mov.b32 %r8455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8456, %r8436, %r8455;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8459, %r8152, %r8456;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8462, %r8438, %r8452, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8466, %r8445, %r8459, %r4403;
	// end inline asm
	shl.b32 	%r8473, %r8466, 4;
	// begin inline asm
	lop3.b32 %r8470, %r4409, %r8462, %r8473, 202;
	// end inline asm
	xor.b32  	%r16249, %r8470, -2004318072;
	// begin inline asm
	mov.b32 %r8477, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8476, %r8477, %r8475;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8479, %r8160, %r8476;
	// end inline asm
	// begin inline asm
	mov.b32 %r8482, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8483, %r8477, %r8482;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8486, %r8168, %r8483;
	// end inline asm
	// begin inline asm
	mov.b32 %r8489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8490, %r8477, %r8489;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8493, %r8176, %r8490;
	// end inline asm
	// begin inline asm
	mov.b32 %r8496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8497, %r8477, %r8496;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8500, %r8184, %r8497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8503, %r8479, %r8493, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8507, %r8486, %r8500, %r4403;
	// end inline asm
	shl.b32 	%r8514, %r8507, 4;
	// begin inline asm
	lop3.b32 %r8511, %r4409, %r8503, %r8514, 202;
	// end inline asm
	xor.b32  	%r16250, %r8511, -2004318072;
	st.shared.u32 	[%rd116], %r16243;
	st.shared.u32 	[%rd118], %r16244;
	st.shared.u32 	[%rd120], %r16245;
	st.shared.u32 	[%rd122], %r16246;
	st.shared.u32 	[%rd124], %r16247;
	st.shared.u32 	[%rd126], %r16248;
	st.shared.u32 	[%rd128], %r16249;
	st.shared.u32 	[%rd130], %r16250;
	ld.shared.u32 	%r16388, [%rd100];
	ld.shared.u32 	%r16389, [%rd102];
	ld.shared.u32 	%r16390, [%rd104];
	ld.shared.u32 	%r16391, [%rd106];
	ld.shared.u32 	%r16400, [%rd108];
	ld.shared.u32 	%r16401, [%rd110];
	ld.shared.u32 	%r16402, [%rd112];
	ld.shared.u32 	%r16403, [%rd114];
	// begin inline asm
	mov.b32 %r8520, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8531, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8519, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r8517, %r886, %r8519, %r8520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8522, %r8520, %r8521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8525, %r8517, %r8522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8528, %r897, %r8519, %r8531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8533, %r8531, %r8532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8536, %r8528, %r8533;
	// end inline asm
	shr.u32 	%r8541, %r8519, 8;
	// begin inline asm
	lop3.b32 %r8539, %r886, %r8541, %r8520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8543, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8544, %r8520, %r8543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8547, %r8539, %r8544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8550, %r897, %r8541, %r8531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8554, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8555, %r8531, %r8554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8558, %r8550, %r8555;
	// end inline asm
	// begin inline asm
	mov.b32 %r8566, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8577, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8565, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r8563, %r886, %r8565, %r8566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8568, %r8566, %r8567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8571, %r8563, %r8568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8574, %r897, %r8565, %r8577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8579, %r8577, %r8578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8582, %r8574, %r8579;
	// end inline asm
	shr.u32 	%r8587, %r8565, 8;
	// begin inline asm
	lop3.b32 %r8585, %r886, %r8587, %r8566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8589, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8590, %r8566, %r8589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8593, %r8585, %r8590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8596, %r897, %r8587, %r8577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8600, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8601, %r8577, %r8600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8604, %r8596, %r8601;
	// end inline asm
	// begin inline asm
	mov.b32 %r8612, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8623, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8611, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r8609, %r886, %r8611, %r8612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8614, %r8612, %r8613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8617, %r8609, %r8614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8620, %r897, %r8611, %r8623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8625, %r8623, %r8624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8628, %r8620, %r8625;
	// end inline asm
	shr.u32 	%r8633, %r8611, 8;
	// begin inline asm
	lop3.b32 %r8631, %r886, %r8633, %r8612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8635, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8636, %r8612, %r8635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8639, %r8631, %r8636;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8642, %r897, %r8633, %r8623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8646, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8647, %r8623, %r8646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8650, %r8642, %r8647;
	// end inline asm
	// begin inline asm
	mov.b32 %r8658, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8669, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8657, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r8655, %r886, %r8657, %r8658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8659, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8660, %r8658, %r8659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8663, %r8655, %r8660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8666, %r897, %r8657, %r8669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8670, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8671, %r8669, %r8670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8674, %r8666, %r8671;
	// end inline asm
	shr.u32 	%r8679, %r8657, 8;
	// begin inline asm
	lop3.b32 %r8677, %r886, %r8679, %r8658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8681, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8682, %r8658, %r8681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8685, %r8677, %r8682;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8688, %r897, %r8679, %r8669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8692, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8693, %r8669, %r8692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8696, %r8688, %r8693;
	// end inline asm
	// begin inline asm
	mov.b32 %r8704, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8715, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8703, %r16400, -2004318072;
	// begin inline asm
	lop3.b32 %r8701, %r886, %r8703, %r8704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8705, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8706, %r8704, %r8705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8709, %r8701, %r8706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8712, %r897, %r8703, %r8715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8716, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8717, %r8715, %r8716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8720, %r8712, %r8717;
	// end inline asm
	shr.u32 	%r8725, %r8703, 8;
	// begin inline asm
	lop3.b32 %r8723, %r886, %r8725, %r8704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8727, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8728, %r8704, %r8727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8731, %r8723, %r8728;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8734, %r897, %r8725, %r8715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8738, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8739, %r8715, %r8738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8742, %r8734, %r8739;
	// end inline asm
	// begin inline asm
	mov.b32 %r8750, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8761, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8749, %r16401, -2004318072;
	// begin inline asm
	lop3.b32 %r8747, %r886, %r8749, %r8750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8751, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8752, %r8750, %r8751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8755, %r8747, %r8752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8758, %r897, %r8749, %r8761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8762, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8763, %r8761, %r8762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8766, %r8758, %r8763;
	// end inline asm
	shr.u32 	%r8771, %r8749, 8;
	// begin inline asm
	lop3.b32 %r8769, %r886, %r8771, %r8750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8773, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8774, %r8750, %r8773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8777, %r8769, %r8774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8780, %r897, %r8771, %r8761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8784, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8785, %r8761, %r8784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8788, %r8780, %r8785;
	// end inline asm
	// begin inline asm
	mov.b32 %r8796, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8807, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8795, %r16402, -2004318072;
	// begin inline asm
	lop3.b32 %r8793, %r886, %r8795, %r8796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8797, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8798, %r8796, %r8797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8801, %r8793, %r8798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8804, %r897, %r8795, %r8807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8808, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8809, %r8807, %r8808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8812, %r8804, %r8809;
	// end inline asm
	shr.u32 	%r8817, %r8795, 8;
	// begin inline asm
	lop3.b32 %r8815, %r886, %r8817, %r8796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8819, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8820, %r8796, %r8819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8823, %r8815, %r8820;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8826, %r897, %r8817, %r8807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8830, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8831, %r8807, %r8830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8834, %r8826, %r8831;
	// end inline asm
	// begin inline asm
	mov.b32 %r8842, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8853, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8841, %r16403, -2004318072;
	// begin inline asm
	lop3.b32 %r8839, %r886, %r8841, %r8842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8843, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8844, %r8842, %r8843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8847, %r8839, %r8844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8850, %r897, %r8841, %r8853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8854, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8855, %r8853, %r8854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8858, %r8850, %r8855;
	// end inline asm
	shr.u32 	%r8863, %r8841, 8;
	// begin inline asm
	lop3.b32 %r8861, %r886, %r8863, %r8842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8865, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8866, %r8842, %r8865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8869, %r8861, %r8866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8872, %r897, %r8863, %r8853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8876, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8877, %r8853, %r8876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8880, %r8872, %r8877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8883, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8885, %r8883, %r8525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8888, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8890, %r8888, %r8536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8893, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8895, %r8893, %r8547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8898, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8900, %r8898, %r8558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8903, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8905, %r8903, %r8571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8908, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8910, %r8908, %r8582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8913, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8915, %r8913, %r8593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8918, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8920, %r8918, %r8604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8923, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8925, %r8923, %r8617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8928, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8930, %r8928, %r8628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8933, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8935, %r8933, %r8639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8938, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8940, %r8938, %r8650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8943, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8945, %r8943, %r8663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8948, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8950, %r8948, %r8674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8953, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8955, %r8953, %r8685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8958, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8960, %r8958, %r8696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8963, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8965, %r8963, %r8709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8968, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8970, %r8968, %r8720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8973, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8975, %r8973, %r8731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8978, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8980, %r8978, %r8742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8983, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8985, %r8983, %r8755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8988, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8990, %r8988, %r8766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8993, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8995, %r8993, %r8777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8998, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9000, %r8998, %r8788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9003, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9005, %r9003, %r8801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9008, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9010, %r9008, %r8812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9013, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9015, %r9013, %r8823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9018, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9020, %r9018, %r8834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9023, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9025, %r9023, %r8847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9028, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9030, %r9028, %r8858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9033, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9035, %r9033, %r8869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9038, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9040, %r9038, %r8880;
	// end inline asm
	// begin inline asm
	mov.b32 %r9048, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9059, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9045, %r886, %r2471, %r9048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9050, %r9048, %r9049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9053, %r9045, %r9050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9056, %r897, %r2471, %r9059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9061, %r9059, %r9060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9064, %r9056, %r9061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9067, %r886, %r2493, %r9048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9071, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9072, %r9048, %r9071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9075, %r9067, %r9072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9078, %r897, %r2493, %r9059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9082, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9083, %r9059, %r9082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9086, %r9078, %r9083;
	// end inline asm
	// begin inline asm
	mov.b32 %r9094, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9105, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9091, %r886, %r2517, %r9094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9096, %r9094, %r9095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9099, %r9091, %r9096;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9102, %r897, %r2517, %r9105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9107, %r9105, %r9106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9110, %r9102, %r9107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9113, %r886, %r2539, %r9094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9117, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9118, %r9094, %r9117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9121, %r9113, %r9118;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9124, %r897, %r2539, %r9105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9128, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9129, %r9105, %r9128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9132, %r9124, %r9129;
	// end inline asm
	// begin inline asm
	mov.b32 %r9140, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9151, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9137, %r886, %r2563, %r9140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9142, %r9140, %r9141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9145, %r9137, %r9142;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9148, %r897, %r2563, %r9151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9152, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9153, %r9151, %r9152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9156, %r9148, %r9153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9159, %r886, %r2585, %r9140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9163, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9164, %r9140, %r9163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9167, %r9159, %r9164;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9170, %r897, %r2585, %r9151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9174, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9175, %r9151, %r9174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9178, %r9170, %r9175;
	// end inline asm
	// begin inline asm
	mov.b32 %r9186, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9197, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9183, %r886, %r2609, %r9186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9188, %r9186, %r9187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9191, %r9183, %r9188;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9194, %r897, %r2609, %r9197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9198, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9199, %r9197, %r9198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9202, %r9194, %r9199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9205, %r886, %r2631, %r9186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9209, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9210, %r9186, %r9209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9213, %r9205, %r9210;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9216, %r897, %r2631, %r9197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9220, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9221, %r9197, %r9220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9224, %r9216, %r9221;
	// end inline asm
	// begin inline asm
	mov.b32 %r9232, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9243, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9229, %r886, %r2655, %r9232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9233, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9234, %r9232, %r9233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9237, %r9229, %r9234;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9240, %r897, %r2655, %r9243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9245, %r9243, %r9244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9248, %r9240, %r9245;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9251, %r886, %r2677, %r9232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9255, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9256, %r9232, %r9255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9259, %r9251, %r9256;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9262, %r897, %r2677, %r9243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9266, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9267, %r9243, %r9266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9270, %r9262, %r9267;
	// end inline asm
	// begin inline asm
	mov.b32 %r9278, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9289, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9275, %r886, %r2701, %r9278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9279, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9280, %r9278, %r9279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9283, %r9275, %r9280;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9286, %r897, %r2701, %r9289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9291, %r9289, %r9290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9294, %r9286, %r9291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9297, %r886, %r2723, %r9278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9301, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9302, %r9278, %r9301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9305, %r9297, %r9302;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9308, %r897, %r2723, %r9289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9313, %r9289, %r9312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9316, %r9308, %r9313;
	// end inline asm
	// begin inline asm
	mov.b32 %r9324, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9335, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9321, %r886, %r2747, %r9324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9325, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9326, %r9324, %r9325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9329, %r9321, %r9326;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9332, %r897, %r2747, %r9335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9336, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9337, %r9335, %r9336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9340, %r9332, %r9337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9343, %r886, %r2769, %r9324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9347, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9348, %r9324, %r9347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9351, %r9343, %r9348;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9354, %r897, %r2769, %r9335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9358, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9359, %r9335, %r9358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9362, %r9354, %r9359;
	// end inline asm
	// begin inline asm
	mov.b32 %r9370, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9381, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9367, %r886, %r2793, %r9370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9371, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9372, %r9370, %r9371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9375, %r9367, %r9372;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9378, %r897, %r2793, %r9381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9382, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9383, %r9381, %r9382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9386, %r9378, %r9383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9389, %r886, %r2815, %r9370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9393, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9394, %r9370, %r9393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9397, %r9389, %r9394;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9400, %r897, %r2815, %r9381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9404, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9405, %r9381, %r9404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9408, %r9400, %r9405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9411, %r307, %r9053, %r8885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9415, %r307, %r9064, %r8890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9419, %r307, %r9075, %r8895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9423, %r307, %r9086, %r8900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9427, %r307, %r9099, %r8905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9431, %r307, %r9110, %r8910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9435, %r307, %r9121, %r8915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9439, %r307, %r9132, %r8920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9443, %r307, %r9145, %r8925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9447, %r307, %r9156, %r8930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9451, %r307, %r9167, %r8935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9455, %r307, %r9178, %r8940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9459, %r307, %r9191, %r8945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9463, %r307, %r9202, %r8950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9467, %r307, %r9213, %r8955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9471, %r307, %r9224, %r8960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9475, %r325, %r9237, %r8965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9479, %r325, %r9248, %r8970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9483, %r325, %r9259, %r8975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9487, %r325, %r9270, %r8980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9491, %r325, %r9283, %r8985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9495, %r325, %r9294, %r8990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9499, %r325, %r9305, %r8995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9503, %r325, %r9316, %r9000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9507, %r325, %r9329, %r9005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9511, %r325, %r9340, %r9010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9515, %r325, %r9351, %r9015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9519, %r325, %r9362, %r9020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9523, %r325, %r9375, %r9025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9527, %r325, %r9386, %r9030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9531, %r325, %r9397, %r9035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9535, %r325, %r9408, %r9040;
	// end inline asm
	// begin inline asm
	mov.b32 %r9544, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9555, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9541, %r886, %r887, %r9544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9546, %r9544, %r9545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9549, %r9541, %r9546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9552, %r897, %r887, %r9555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9557, %r9555, %r9556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9560, %r9552, %r9557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9563, %r886, %r909, %r9544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9568, %r9544, %r9567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9571, %r9563, %r9568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9574, %r897, %r909, %r9555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9579, %r9555, %r9578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9582, %r9574, %r9579;
	// end inline asm
	// begin inline asm
	mov.b32 %r9590, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9601, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9587, %r886, %r933, %r9590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9592, %r9590, %r9591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9595, %r9587, %r9592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9598, %r897, %r933, %r9601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9603, %r9601, %r9602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9606, %r9598, %r9603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9609, %r886, %r955, %r9590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9614, %r9590, %r9613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9617, %r9609, %r9614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9620, %r897, %r955, %r9601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9625, %r9601, %r9624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9628, %r9620, %r9625;
	// end inline asm
	// begin inline asm
	mov.b32 %r9636, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9647, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9633, %r886, %r979, %r9636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9638, %r9636, %r9637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9641, %r9633, %r9638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9644, %r897, %r979, %r9647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9649, %r9647, %r9648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9652, %r9644, %r9649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9655, %r886, %r1001, %r9636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9659, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9660, %r9636, %r9659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9663, %r9655, %r9660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9666, %r897, %r1001, %r9647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9670, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9671, %r9647, %r9670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9674, %r9666, %r9671;
	// end inline asm
	// begin inline asm
	mov.b32 %r9682, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9693, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9679, %r886, %r1025, %r9682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9683, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9684, %r9682, %r9683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9687, %r9679, %r9684;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9690, %r897, %r1025, %r9693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9694, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9695, %r9693, %r9694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9698, %r9690, %r9695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9701, %r886, %r1047, %r9682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9705, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9706, %r9682, %r9705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9709, %r9701, %r9706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9712, %r897, %r1047, %r9693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9716, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9717, %r9693, %r9716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9720, %r9712, %r9717;
	// end inline asm
	// begin inline asm
	mov.b32 %r9728, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9739, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9725, %r886, %r1071, %r9728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9729, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9730, %r9728, %r9729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9733, %r9725, %r9730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9736, %r897, %r1071, %r9739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9740, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9741, %r9739, %r9740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9744, %r9736, %r9741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9747, %r886, %r1093, %r9728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9751, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9752, %r9728, %r9751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9755, %r9747, %r9752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9758, %r897, %r1093, %r9739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9762, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9763, %r9739, %r9762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9766, %r9758, %r9763;
	// end inline asm
	// begin inline asm
	mov.b32 %r9774, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9785, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9771, %r886, %r1117, %r9774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9775, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9776, %r9774, %r9775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9779, %r9771, %r9776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9782, %r897, %r1117, %r9785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9786, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9787, %r9785, %r9786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9790, %r9782, %r9787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9793, %r886, %r1139, %r9774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9797, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9798, %r9774, %r9797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9801, %r9793, %r9798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9804, %r897, %r1139, %r9785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9808, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9809, %r9785, %r9808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9812, %r9804, %r9809;
	// end inline asm
	// begin inline asm
	mov.b32 %r9820, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9831, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9817, %r886, %r1163, %r9820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9821, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9822, %r9820, %r9821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9825, %r9817, %r9822;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9828, %r897, %r1163, %r9831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9832, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9833, %r9831, %r9832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9836, %r9828, %r9833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9839, %r886, %r1185, %r9820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9843, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9844, %r9820, %r9843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9847, %r9839, %r9844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9850, %r897, %r1185, %r9831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9854, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9855, %r9831, %r9854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9858, %r9850, %r9855;
	// end inline asm
	// begin inline asm
	mov.b32 %r9866, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9877, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9863, %r886, %r1209, %r9866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9867, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9868, %r9866, %r9867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9871, %r9863, %r9868;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9874, %r897, %r1209, %r9877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9878, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9879, %r9877, %r9878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9882, %r9874, %r9879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9885, %r886, %r1231, %r9866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9889, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9890, %r9866, %r9889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9893, %r9885, %r9890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9896, %r897, %r1231, %r9877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9900, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9901, %r9877, %r9900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9904, %r9896, %r9901;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9907, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9909, %r9907, %r9549, %r9411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9913, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9915, %r9913, %r9560, %r9415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9919, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9921, %r9919, %r9571, %r9419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9925, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9927, %r9925, %r9582, %r9423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9931, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9933, %r9931, %r9595, %r9427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9937, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9939, %r9937, %r9606, %r9431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9943, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9945, %r9943, %r9617, %r9435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9949, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9951, %r9949, %r9628, %r9439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9955, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9957, %r9955, %r9641, %r9443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9961, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9963, %r9961, %r9652, %r9447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9967, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9969, %r9967, %r9663, %r9451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9973, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9975, %r9973, %r9674, %r9455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9979, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9981, %r9979, %r9687, %r9459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9985, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9987, %r9985, %r9698, %r9463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9991, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9993, %r9991, %r9709, %r9467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9997, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9999, %r9997, %r9720, %r9471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10003, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10005, %r10003, %r9733, %r9475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10009, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10011, %r10009, %r9744, %r9479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10015, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10017, %r10015, %r9755, %r9483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10021, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10023, %r10021, %r9766, %r9487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10027, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10029, %r10027, %r9779, %r9491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10033, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10035, %r10033, %r9790, %r9495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10039, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10041, %r10039, %r9801, %r9499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10045, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10047, %r10045, %r9812, %r9503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10051, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10053, %r10051, %r9825, %r9507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10057, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10059, %r10057, %r9836, %r9511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10063, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10065, %r10063, %r9847, %r9515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10069, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10071, %r10069, %r9858, %r9519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10075, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10077, %r10075, %r9871, %r9523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10081, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10083, %r10081, %r9882, %r9527;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10087, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10089, %r10087, %r9893, %r9531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10093, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10095, %r10093, %r9904, %r9535;
	// end inline asm
	// begin inline asm
	mov.b32 %r10104, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10115, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10101, %r886, %r4703, %r10104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10105, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10106, %r10104, %r10105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10109, %r10101, %r10106;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10112, %r897, %r4703, %r10115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10116, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10117, %r10115, %r10116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10120, %r10112, %r10117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10123, %r886, %r4725, %r10104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10128, %r10104, %r10127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10131, %r10123, %r10128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10134, %r897, %r4725, %r10115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10139, %r10115, %r10138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10142, %r10134, %r10139;
	// end inline asm
	// begin inline asm
	mov.b32 %r10150, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10161, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10147, %r886, %r4749, %r10150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10151, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10152, %r10150, %r10151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10155, %r10147, %r10152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10158, %r897, %r4749, %r10161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10163, %r10161, %r10162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10166, %r10158, %r10163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10169, %r886, %r4771, %r10150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10174, %r10150, %r10173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10177, %r10169, %r10174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10180, %r897, %r4771, %r10161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10185, %r10161, %r10184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10188, %r10180, %r10185;
	// end inline asm
	// begin inline asm
	mov.b32 %r10196, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10207, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10193, %r886, %r4795, %r10196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10197, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10198, %r10196, %r10197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10201, %r10193, %r10198;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10204, %r897, %r4795, %r10207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10209, %r10207, %r10208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10212, %r10204, %r10209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10215, %r886, %r4817, %r10196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10219, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10220, %r10196, %r10219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10223, %r10215, %r10220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10226, %r897, %r4817, %r10207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10231, %r10207, %r10230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10234, %r10226, %r10231;
	// end inline asm
	// begin inline asm
	mov.b32 %r10242, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10253, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10239, %r886, %r4841, %r10242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10243, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10244, %r10242, %r10243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10247, %r10239, %r10244;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10250, %r897, %r4841, %r10253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10254, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10255, %r10253, %r10254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10258, %r10250, %r10255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10261, %r886, %r4863, %r10242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10265, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10266, %r10242, %r10265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10269, %r10261, %r10266;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10272, %r897, %r4863, %r10253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10276, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10277, %r10253, %r10276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10280, %r10272, %r10277;
	// end inline asm
	// begin inline asm
	mov.b32 %r10288, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10299, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10285, %r886, %r4887, %r10288, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10289, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10290, %r10288, %r10289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10293, %r10285, %r10290;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10296, %r897, %r4887, %r10299, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10300, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10301, %r10299, %r10300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10304, %r10296, %r10301;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10307, %r886, %r4909, %r10288, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10311, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10312, %r10288, %r10311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10315, %r10307, %r10312;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10318, %r897, %r4909, %r10299, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10322, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10323, %r10299, %r10322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10326, %r10318, %r10323;
	// end inline asm
	// begin inline asm
	mov.b32 %r10334, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10345, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10331, %r886, %r4933, %r10334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10335, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10336, %r10334, %r10335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10339, %r10331, %r10336;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10342, %r897, %r4933, %r10345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10347, %r10345, %r10346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10350, %r10342, %r10347;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10353, %r886, %r4955, %r10334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10357, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10358, %r10334, %r10357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10361, %r10353, %r10358;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10364, %r897, %r4955, %r10345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10368, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10369, %r10345, %r10368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10372, %r10364, %r10369;
	// end inline asm
	// begin inline asm
	mov.b32 %r10380, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10391, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10377, %r886, %r4979, %r10380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10381, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10382, %r10380, %r10381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10385, %r10377, %r10382;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10388, %r897, %r4979, %r10391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10392, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10393, %r10391, %r10392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10396, %r10388, %r10393;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10399, %r886, %r5001, %r10380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10403, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10404, %r10380, %r10403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10407, %r10399, %r10404;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10410, %r897, %r5001, %r10391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10414, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10415, %r10391, %r10414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10418, %r10410, %r10415;
	// end inline asm
	// begin inline asm
	mov.b32 %r10426, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10437, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10423, %r886, %r5025, %r10426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10427, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10428, %r10426, %r10427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10431, %r10423, %r10428;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10434, %r897, %r5025, %r10437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10438, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10439, %r10437, %r10438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10442, %r10434, %r10439;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10445, %r886, %r5047, %r10426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10449, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10450, %r10426, %r10449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10453, %r10445, %r10450;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10456, %r897, %r5047, %r10437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10460, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10461, %r10437, %r10460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10464, %r10456, %r10461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10602, %r379, %r10109, %r9909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10599, %r379, %r10120, %r9915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10611, %r379, %r10131, %r9921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10608, %r379, %r10142, %r9927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10620, %r379, %r10155, %r9933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10617, %r379, %r10166, %r9939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10629, %r379, %r10177, %r9945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10626, %r379, %r10188, %r9951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10638, %r379, %r10201, %r9957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10635, %r379, %r10212, %r9963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10647, %r379, %r10223, %r9969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10644, %r379, %r10234, %r9975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10656, %r379, %r10247, %r9981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10653, %r379, %r10258, %r9987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10665, %r379, %r10269, %r9993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10662, %r379, %r10280, %r9999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10674, %r397, %r10293, %r10005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10671, %r397, %r10304, %r10011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10683, %r397, %r10315, %r10017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10680, %r397, %r10326, %r10023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10692, %r397, %r10339, %r10029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10689, %r397, %r10350, %r10035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10701, %r397, %r10361, %r10041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10698, %r397, %r10372, %r10047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10710, %r397, %r10385, %r10053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10707, %r397, %r10396, %r10059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10719, %r397, %r10407, %r10065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10716, %r397, %r10418, %r10071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10728, %r397, %r10431, %r10077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10725, %r397, %r10442, %r10083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10737, %r397, %r10453, %r10089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10734, %r397, %r10464, %r10095;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10595, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10597, %r10595, %r10599;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10600, %r461, %r10602, %r10597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10604, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10606, %r10604, %r10608;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10609, %r461, %r10611, %r10606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10613, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10615, %r10613, %r10617;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10618, %r461, %r10620, %r10615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10622, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10624, %r10622, %r10626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10627, %r461, %r10629, %r10624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10631, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10633, %r10631, %r10635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10636, %r461, %r10638, %r10633;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10640, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10642, %r10640, %r10644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10645, %r461, %r10647, %r10642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10649, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10651, %r10649, %r10653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10654, %r461, %r10656, %r10651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10658, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10660, %r10658, %r10662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10663, %r461, %r10665, %r10660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10667, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10669, %r10667, %r10671;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10672, %r464, %r10674, %r10669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10676, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10678, %r10676, %r10680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10681, %r464, %r10683, %r10678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10685, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10687, %r10685, %r10689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10690, %r464, %r10692, %r10687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10694, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10696, %r10694, %r10698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10699, %r464, %r10701, %r10696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10703, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10705, %r10703, %r10707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10708, %r464, %r10710, %r10705;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10712, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10714, %r10712, %r10716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10717, %r464, %r10719, %r10714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10721, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10723, %r10721, %r10725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10726, %r464, %r10728, %r10723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10730, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10732, %r10730, %r10734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10735, %r464, %r10737, %r10732;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10739, %r467, %r10602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10742, %r461, %r10599, %r10739;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10746, %r467, %r10611;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10749, %r461, %r10608, %r10746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10753, %r467, %r10620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10756, %r461, %r10617, %r10753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10760, %r467, %r10629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10763, %r461, %r10626, %r10760;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10767, %r467, %r10638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10770, %r461, %r10635, %r10767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10774, %r467, %r10647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10777, %r461, %r10644, %r10774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10781, %r467, %r10656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10784, %r461, %r10653, %r10781;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10788, %r467, %r10665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10791, %r461, %r10662, %r10788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10795, %r470, %r10674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10798, %r464, %r10671, %r10795;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10802, %r470, %r10683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10805, %r464, %r10680, %r10802;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10809, %r470, %r10692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10812, %r464, %r10689, %r10809;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10816, %r470, %r10701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10819, %r464, %r10698, %r10816;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10823, %r470, %r10710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10826, %r464, %r10707, %r10823;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10830, %r470, %r10719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10833, %r464, %r10716, %r10830;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10837, %r470, %r10728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10840, %r464, %r10725, %r10837;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10844, %r470, %r10737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10847, %r464, %r10734, %r10844;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11018, %r11015}, {%r516, %r522, %r519, %r525}, {%r10600, %r10742}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11027, %r11024}, {%r516, %r522, %r519, %r525}, {%r10609, %r10749}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11036, %r11033}, {%r516, %r522, %r519, %r525}, {%r10618, %r10756}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11045, %r11042}, {%r516, %r522, %r519, %r525}, {%r10627, %r10763}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11054, %r11051}, {%r516, %r522, %r519, %r525}, {%r10636, %r10770}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11063, %r11060}, {%r516, %r522, %r519, %r525}, {%r10645, %r10777}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11072, %r11069}, {%r516, %r522, %r519, %r525}, {%r10654, %r10784}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11081, %r11078}, {%r516, %r522, %r519, %r525}, {%r10663, %r10791}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11090, %r11087}, {%r516, %r522, %r519, %r525}, {%r10672, %r10798}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11099, %r11096}, {%r516, %r522, %r519, %r525}, {%r10681, %r10805}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11108, %r11105}, {%r516, %r522, %r519, %r525}, {%r10690, %r10812}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11117, %r11114}, {%r516, %r522, %r519, %r525}, {%r10699, %r10819}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11126, %r11123}, {%r516, %r522, %r519, %r525}, {%r10708, %r10826}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11135, %r11132}, {%r516, %r522, %r519, %r525}, {%r10717, %r10833}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11144, %r11141}, {%r516, %r522, %r519, %r525}, {%r10726, %r10840}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11153, %r11150}, {%r516, %r522, %r519, %r525}, {%r10735, %r10847}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11011, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11013, %r11011, %r11015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11016, %r566, %r11018, %r11013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11020, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11022, %r11020, %r11024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11025, %r566, %r11027, %r11022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11029, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11031, %r11029, %r11033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11034, %r566, %r11036, %r11031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11038, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11040, %r11038, %r11042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11043, %r566, %r11045, %r11040;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11047, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11049, %r11047, %r11051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11052, %r566, %r11054, %r11049;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11056, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11058, %r11056, %r11060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11061, %r566, %r11063, %r11058;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11065, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11067, %r11065, %r11069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11070, %r566, %r11072, %r11067;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11074, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11076, %r11074, %r11078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11079, %r566, %r11081, %r11076;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11083, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11085, %r11083, %r11087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11088, %r566, %r11090, %r11085;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11092, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11094, %r11092, %r11096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11097, %r566, %r11099, %r11094;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11101, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11103, %r11101, %r11105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11106, %r566, %r11108, %r11103;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11110, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11112, %r11110, %r11114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11115, %r566, %r11117, %r11112;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11119, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11121, %r11119, %r11123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11124, %r566, %r11126, %r11121;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11128, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11130, %r11128, %r11132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11133, %r566, %r11135, %r11130;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11137, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11139, %r11137, %r11141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11142, %r566, %r11144, %r11139;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11146, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11148, %r11146, %r11150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11151, %r566, %r11153, %r11148;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11155, %r569, %r11018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11158, %r566, %r11015, %r11155;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11162, %r569, %r11027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11165, %r566, %r11024, %r11162;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11169, %r569, %r11036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11172, %r566, %r11033, %r11169;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11176, %r569, %r11045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11179, %r566, %r11042, %r11176;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11183, %r569, %r11054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11186, %r566, %r11051, %r11183;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11190, %r569, %r11063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11193, %r566, %r11060, %r11190;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11197, %r569, %r11072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11200, %r566, %r11069, %r11197;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11204, %r569, %r11081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11207, %r566, %r11078, %r11204;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11211, %r569, %r11090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11214, %r566, %r11087, %r11211;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11218, %r569, %r11099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11221, %r566, %r11096, %r11218;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11225, %r569, %r11108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11228, %r566, %r11105, %r11225;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11232, %r569, %r11117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11235, %r566, %r11114, %r11232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11239, %r569, %r11126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11242, %r566, %r11123, %r11239;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11246, %r569, %r11135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11249, %r566, %r11132, %r11246;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11253, %r569, %r11144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11256, %r566, %r11141, %r11253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11260, %r569, %r11153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11263, %r566, %r11150, %r11260;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11556, %r11559}, {%r604, %r610, %r607, %r613}, {%r11016, %r11158}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11562, %r11565}, {%r604, %r610, %r607, %r613}, {%r11025, %r11165}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11568, %r11571}, {%r604, %r610, %r607, %r613}, {%r11034, %r11172}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11574, %r11577}, {%r604, %r610, %r607, %r613}, {%r11043, %r11179}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11580, %r11583}, {%r604, %r610, %r607, %r613}, {%r11052, %r11186}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11586, %r11589}, {%r604, %r610, %r607, %r613}, {%r11061, %r11193}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11592, %r11595}, {%r604, %r610, %r607, %r613}, {%r11070, %r11200}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11598, %r11601}, {%r604, %r610, %r607, %r613}, {%r11079, %r11207}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11557, %r11560}, {%r604, %r610, %r607, %r613}, {%r11088, %r11214}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11563, %r11566}, {%r604, %r610, %r607, %r613}, {%r11097, %r11221}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11569, %r11572}, {%r604, %r610, %r607, %r613}, {%r11106, %r11228}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11575, %r11578}, {%r604, %r610, %r607, %r613}, {%r11115, %r11235}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11581, %r11584}, {%r604, %r610, %r607, %r613}, {%r11124, %r11242}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11587, %r11590}, {%r604, %r610, %r607, %r613}, {%r11133, %r11249}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11593, %r11596}, {%r604, %r610, %r607, %r613}, {%r11142, %r11256}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11599, %r11602}, {%r604, %r610, %r607, %r613}, {%r11151, %r11263}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11555, %r11556, %r11557;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11558, %r11559, %r11560;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11561, %r11562, %r11563;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11564, %r11565, %r11566;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11567, %r11568, %r11569;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11570, %r11571, %r11572;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11573, %r11574, %r11575;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11576, %r11577, %r11578;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11579, %r11580, %r11581;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11582, %r11583, %r11584;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11585, %r11586, %r11587;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11588, %r11589, %r11590;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11591, %r11592, %r11593;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11594, %r11595, %r11596;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11597, %r11598, %r11599;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11600, %r11601, %r11602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11603, %r11556, %r11557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11606, %r11559, %r11560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11609, %r11562, %r11563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11612, %r11565, %r11566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11615, %r11568, %r11569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11618, %r11571, %r11572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11621, %r11574, %r11575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11624, %r11577, %r11578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11627, %r11580, %r11581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11630, %r11583, %r11584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11633, %r11586, %r11587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11636, %r11589, %r11590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11639, %r11592, %r11593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11642, %r11595, %r11596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11645, %r11598, %r11599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11648, %r11601, %r11602;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11651, %r186, %r11555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11654, %r186, %r11558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11657, %r186, %r11561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11660, %r186, %r11564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11663, %r186, %r11567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11666, %r186, %r11570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11669, %r186, %r11573;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11672, %r186, %r11576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11675, %r186, %r11579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11678, %r186, %r11582;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11681, %r186, %r11585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11684, %r186, %r11588;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11687, %r186, %r11591;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11690, %r186, %r11594;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11693, %r186, %r11597;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11696, %r186, %r11600;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11699, %r187, %r11603;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11702, %r187, %r11606;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11705, %r187, %r11609;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11708, %r187, %r11612;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11711, %r187, %r11615;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11714, %r187, %r11618;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11717, %r187, %r11621;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11720, %r187, %r11624;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11723, %r187, %r11627;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11726, %r187, %r11630;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11729, %r187, %r11633;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11732, %r187, %r11636;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11735, %r187, %r11639;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11738, %r187, %r11642;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11741, %r187, %r11645;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11744, %r187, %r11648;
	// end inline asm
	// begin inline asm
	mov.b32 %r11747, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11748, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11749, %r11651, %r11747;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11752, %r11749, %r11748;
	// end inline asm
	// begin inline asm
	mov.b32 %r11755, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11756, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11757, %r11654, %r11755;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11760, %r11757, %r11756;
	// end inline asm
	// begin inline asm
	mov.b32 %r11763, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11764, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11765, %r11657, %r11763;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11768, %r11765, %r11764;
	// end inline asm
	// begin inline asm
	mov.b32 %r11771, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11772, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11773, %r11660, %r11771;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11776, %r11773, %r11772;
	// end inline asm
	// begin inline asm
	mov.b32 %r11779, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11780, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11781, %r11663, %r11779;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11784, %r11781, %r11780;
	// end inline asm
	// begin inline asm
	mov.b32 %r11787, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11788, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11789, %r11666, %r11787;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11792, %r11789, %r11788;
	// end inline asm
	// begin inline asm
	mov.b32 %r11795, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11796, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11797, %r11669, %r11795;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11800, %r11797, %r11796;
	// end inline asm
	// begin inline asm
	mov.b32 %r11803, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11804, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11805, %r11672, %r11803;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11808, %r11805, %r11804;
	// end inline asm
	// begin inline asm
	mov.b32 %r11811, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11812, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11813, %r11675, %r11811;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11816, %r11813, %r11812;
	// end inline asm
	// begin inline asm
	mov.b32 %r11819, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11820, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11821, %r11678, %r11819;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11824, %r11821, %r11820;
	// end inline asm
	// begin inline asm
	mov.b32 %r11827, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11828, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11829, %r11681, %r11827;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11832, %r11829, %r11828;
	// end inline asm
	// begin inline asm
	mov.b32 %r11835, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11836, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11837, %r11684, %r11835;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11840, %r11837, %r11836;
	// end inline asm
	// begin inline asm
	mov.b32 %r11843, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11844, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11845, %r11687, %r11843;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11848, %r11845, %r11844;
	// end inline asm
	// begin inline asm
	mov.b32 %r11851, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11852, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11853, %r11690, %r11851;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11856, %r11853, %r11852;
	// end inline asm
	// begin inline asm
	mov.b32 %r11859, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11860, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11861, %r11693, %r11859;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11864, %r11861, %r11860;
	// end inline asm
	// begin inline asm
	mov.b32 %r11867, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11868, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11869, %r11696, %r11867;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11872, %r11869, %r11868;
	// end inline asm
	// begin inline asm
	mov.b32 %r11875, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11876, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11877, %r11699, %r11875;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11880, %r11877, %r11876;
	// end inline asm
	// begin inline asm
	mov.b32 %r11883, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11884, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11885, %r11702, %r11883;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11888, %r11885, %r11884;
	// end inline asm
	// begin inline asm
	mov.b32 %r11891, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11892, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11893, %r11705, %r11891;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11896, %r11893, %r11892;
	// end inline asm
	// begin inline asm
	mov.b32 %r11899, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11900, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11901, %r11708, %r11899;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11904, %r11901, %r11900;
	// end inline asm
	// begin inline asm
	mov.b32 %r11907, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11908, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11909, %r11711, %r11907;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11912, %r11909, %r11908;
	// end inline asm
	// begin inline asm
	mov.b32 %r11915, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11916, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11917, %r11714, %r11915;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11920, %r11917, %r11916;
	// end inline asm
	// begin inline asm
	mov.b32 %r11923, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11924, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11925, %r11717, %r11923;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11928, %r11925, %r11924;
	// end inline asm
	// begin inline asm
	mov.b32 %r11931, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11932, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11933, %r11720, %r11931;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11936, %r11933, %r11932;
	// end inline asm
	// begin inline asm
	mov.b32 %r11939, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11940, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11941, %r11723, %r11939;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11944, %r11941, %r11940;
	// end inline asm
	// begin inline asm
	mov.b32 %r11947, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11948, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11949, %r11726, %r11947;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11952, %r11949, %r11948;
	// end inline asm
	// begin inline asm
	mov.b32 %r11955, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11956, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11957, %r11729, %r11955;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11960, %r11957, %r11956;
	// end inline asm
	// begin inline asm
	mov.b32 %r11963, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11964, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11965, %r11732, %r11963;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11968, %r11965, %r11964;
	// end inline asm
	// begin inline asm
	mov.b32 %r11971, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11972, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11973, %r11735, %r11971;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11976, %r11973, %r11972;
	// end inline asm
	// begin inline asm
	mov.b32 %r11979, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11980, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11981, %r11738, %r11979;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11984, %r11981, %r11980;
	// end inline asm
	// begin inline asm
	mov.b32 %r11987, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11988, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11989, %r11741, %r11987;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11992, %r11989, %r11988;
	// end inline asm
	// begin inline asm
	mov.b32 %r11995, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11996, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11997, %r11744, %r11995;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12000, %r11997, %r11996;
	// end inline asm
	// begin inline asm
	mov.b32 %r12006, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12004, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12005, %r12006, %r12004;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12008, %r11752, %r12005;
	// end inline asm
	// begin inline asm
	mov.b32 %r12011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12012, %r12006, %r12011;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12015, %r11760, %r12012;
	// end inline asm
	// begin inline asm
	mov.b32 %r12018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12019, %r12006, %r12018;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12022, %r11768, %r12019;
	// end inline asm
	// begin inline asm
	mov.b32 %r12025, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12026, %r12006, %r12025;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12029, %r11776, %r12026;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12032, %r12008, %r12022, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12036, %r12015, %r12029, %r4403;
	// end inline asm
	shl.b32 	%r12043, %r12036, 4;
	// begin inline asm
	lop3.b32 %r12040, %r4409, %r12032, %r12043, 202;
	// end inline asm
	xor.b32  	%r16251, %r12040, -2004318072;
	// begin inline asm
	mov.b32 %r12047, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12045, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12046, %r12047, %r12045;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12049, %r11784, %r12046;
	// end inline asm
	// begin inline asm
	mov.b32 %r12052, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12053, %r12047, %r12052;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12056, %r11792, %r12053;
	// end inline asm
	// begin inline asm
	mov.b32 %r12059, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12060, %r12047, %r12059;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12063, %r11800, %r12060;
	// end inline asm
	// begin inline asm
	mov.b32 %r12066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12067, %r12047, %r12066;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12070, %r11808, %r12067;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12073, %r12049, %r12063, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12077, %r12056, %r12070, %r4403;
	// end inline asm
	shl.b32 	%r12084, %r12077, 4;
	// begin inline asm
	lop3.b32 %r12081, %r4409, %r12073, %r12084, 202;
	// end inline asm
	xor.b32  	%r16252, %r12081, -2004318072;
	// begin inline asm
	mov.b32 %r12088, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12086, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12087, %r12088, %r12086;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12090, %r11816, %r12087;
	// end inline asm
	// begin inline asm
	mov.b32 %r12093, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12094, %r12088, %r12093;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12097, %r11824, %r12094;
	// end inline asm
	// begin inline asm
	mov.b32 %r12100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12101, %r12088, %r12100;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12104, %r11832, %r12101;
	// end inline asm
	// begin inline asm
	mov.b32 %r12107, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12108, %r12088, %r12107;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12111, %r11840, %r12108;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12114, %r12090, %r12104, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12118, %r12097, %r12111, %r4403;
	// end inline asm
	shl.b32 	%r12125, %r12118, 4;
	// begin inline asm
	lop3.b32 %r12122, %r4409, %r12114, %r12125, 202;
	// end inline asm
	xor.b32  	%r16253, %r12122, -2004318072;
	// begin inline asm
	mov.b32 %r12129, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12128, %r12129, %r12127;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12131, %r11848, %r12128;
	// end inline asm
	// begin inline asm
	mov.b32 %r12134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12135, %r12129, %r12134;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12138, %r11856, %r12135;
	// end inline asm
	// begin inline asm
	mov.b32 %r12141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12142, %r12129, %r12141;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12145, %r11864, %r12142;
	// end inline asm
	// begin inline asm
	mov.b32 %r12148, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12149, %r12129, %r12148;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12152, %r11872, %r12149;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12155, %r12131, %r12145, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12159, %r12138, %r12152, %r4403;
	// end inline asm
	shl.b32 	%r12166, %r12159, 4;
	// begin inline asm
	lop3.b32 %r12163, %r4409, %r12155, %r12166, 202;
	// end inline asm
	xor.b32  	%r16254, %r12163, -2004318072;
	// begin inline asm
	mov.b32 %r12170, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12168, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12169, %r12170, %r12168;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12172, %r11880, %r12169;
	// end inline asm
	// begin inline asm
	mov.b32 %r12175, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12176, %r12170, %r12175;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12179, %r11888, %r12176;
	// end inline asm
	// begin inline asm
	mov.b32 %r12182, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12183, %r12170, %r12182;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12186, %r11896, %r12183;
	// end inline asm
	// begin inline asm
	mov.b32 %r12189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12190, %r12170, %r12189;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12193, %r11904, %r12190;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12196, %r12172, %r12186, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12200, %r12179, %r12193, %r4403;
	// end inline asm
	shl.b32 	%r12207, %r12200, 4;
	// begin inline asm
	lop3.b32 %r12204, %r4409, %r12196, %r12207, 202;
	// end inline asm
	xor.b32  	%r16255, %r12204, -2004318072;
	// begin inline asm
	mov.b32 %r12211, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12209, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12210, %r12211, %r12209;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12213, %r11912, %r12210;
	// end inline asm
	// begin inline asm
	mov.b32 %r12216, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12217, %r12211, %r12216;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12220, %r11920, %r12217;
	// end inline asm
	// begin inline asm
	mov.b32 %r12223, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12224, %r12211, %r12223;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12227, %r11928, %r12224;
	// end inline asm
	// begin inline asm
	mov.b32 %r12230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12231, %r12211, %r12230;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12234, %r11936, %r12231;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12237, %r12213, %r12227, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12241, %r12220, %r12234, %r4403;
	// end inline asm
	shl.b32 	%r12248, %r12241, 4;
	// begin inline asm
	lop3.b32 %r12245, %r4409, %r12237, %r12248, 202;
	// end inline asm
	xor.b32  	%r16256, %r12245, -2004318072;
	// begin inline asm
	mov.b32 %r12252, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12251, %r12252, %r12250;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12254, %r11944, %r12251;
	// end inline asm
	// begin inline asm
	mov.b32 %r12257, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12258, %r12252, %r12257;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12261, %r11952, %r12258;
	// end inline asm
	// begin inline asm
	mov.b32 %r12264, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12265, %r12252, %r12264;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12268, %r11960, %r12265;
	// end inline asm
	// begin inline asm
	mov.b32 %r12271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12272, %r12252, %r12271;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12275, %r11968, %r12272;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12278, %r12254, %r12268, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12282, %r12261, %r12275, %r4403;
	// end inline asm
	shl.b32 	%r12289, %r12282, 4;
	// begin inline asm
	lop3.b32 %r12286, %r4409, %r12278, %r12289, 202;
	// end inline asm
	xor.b32  	%r16257, %r12286, -2004318072;
	// begin inline asm
	mov.b32 %r12293, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12291, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12292, %r12293, %r12291;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12295, %r11976, %r12292;
	// end inline asm
	// begin inline asm
	mov.b32 %r12298, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12299, %r12293, %r12298;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12302, %r11984, %r12299;
	// end inline asm
	// begin inline asm
	mov.b32 %r12305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12306, %r12293, %r12305;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12309, %r11992, %r12306;
	// end inline asm
	// begin inline asm
	mov.b32 %r12312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12313, %r12293, %r12312;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12316, %r12000, %r12313;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12319, %r12295, %r12309, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12323, %r12302, %r12316, %r4403;
	// end inline asm
	shl.b32 	%r12330, %r12323, 4;
	// begin inline asm
	lop3.b32 %r12327, %r4409, %r12319, %r12330, 202;
	// end inline asm
	xor.b32  	%r16258, %r12327, -2004318072;
	st.shared.u32 	[%rd116], %r16251;
	st.shared.u32 	[%rd118], %r16252;
	st.shared.u32 	[%rd120], %r16253;
	st.shared.u32 	[%rd122], %r16254;
	st.shared.u32 	[%rd124], %r16255;
	st.shared.u32 	[%rd126], %r16256;
	st.shared.u32 	[%rd128], %r16257;
	st.shared.u32 	[%rd130], %r16258;
	ld.shared.u32 	%r16392, [%rd100];
	ld.shared.u32 	%r16393, [%rd102];
	ld.shared.u32 	%r16394, [%rd104];
	ld.shared.u32 	%r16395, [%rd106];
	ld.shared.u32 	%r16404, [%rd108];
	ld.shared.u32 	%r16405, [%rd110];
	ld.shared.u32 	%r16406, [%rd112];
	ld.shared.u32 	%r16407, [%rd114];
	// begin inline asm
	mov.b32 %r12336, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12347, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12335, %r16392, -2004318072;
	// begin inline asm
	lop3.b32 %r12333, %r886, %r12335, %r12336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12337, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12338, %r12336, %r12337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12341, %r12333, %r12338;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12344, %r897, %r12335, %r12347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12348, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12349, %r12347, %r12348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12352, %r12344, %r12349;
	// end inline asm
	shr.u32 	%r12357, %r12335, 8;
	// begin inline asm
	lop3.b32 %r12355, %r886, %r12357, %r12336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12359, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12360, %r12336, %r12359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12363, %r12355, %r12360;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12366, %r897, %r12357, %r12347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12370, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12371, %r12347, %r12370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12374, %r12366, %r12371;
	// end inline asm
	// begin inline asm
	mov.b32 %r12382, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12393, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12381, %r16393, -2004318072;
	// begin inline asm
	lop3.b32 %r12379, %r886, %r12381, %r12382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12384, %r12382, %r12383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12387, %r12379, %r12384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12390, %r897, %r12381, %r12393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12395, %r12393, %r12394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12398, %r12390, %r12395;
	// end inline asm
	shr.u32 	%r12403, %r12381, 8;
	// begin inline asm
	lop3.b32 %r12401, %r886, %r12403, %r12382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12405, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12406, %r12382, %r12405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12409, %r12401, %r12406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12412, %r897, %r12403, %r12393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12416, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12417, %r12393, %r12416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12420, %r12412, %r12417;
	// end inline asm
	// begin inline asm
	mov.b32 %r12428, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12439, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12427, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r12425, %r886, %r12427, %r12428, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12429, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12430, %r12428, %r12429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12433, %r12425, %r12430;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12436, %r897, %r12427, %r12439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12440, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12441, %r12439, %r12440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12444, %r12436, %r12441;
	// end inline asm
	shr.u32 	%r12449, %r12427, 8;
	// begin inline asm
	lop3.b32 %r12447, %r886, %r12449, %r12428, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12451, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12452, %r12428, %r12451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12455, %r12447, %r12452;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12458, %r897, %r12449, %r12439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12462, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12463, %r12439, %r12462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12466, %r12458, %r12463;
	// end inline asm
	// begin inline asm
	mov.b32 %r12474, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12485, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12473, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r12471, %r886, %r12473, %r12474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12476, %r12474, %r12475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12479, %r12471, %r12476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12482, %r897, %r12473, %r12485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12486, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12487, %r12485, %r12486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12490, %r12482, %r12487;
	// end inline asm
	shr.u32 	%r12495, %r12473, 8;
	// begin inline asm
	lop3.b32 %r12493, %r886, %r12495, %r12474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12497, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12498, %r12474, %r12497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12501, %r12493, %r12498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12504, %r897, %r12495, %r12485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12508, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12509, %r12485, %r12508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12512, %r12504, %r12509;
	// end inline asm
	// begin inline asm
	mov.b32 %r12520, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12531, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12519, %r16404, -2004318072;
	// begin inline asm
	lop3.b32 %r12517, %r886, %r12519, %r12520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12522, %r12520, %r12521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12525, %r12517, %r12522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12528, %r897, %r12519, %r12531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12533, %r12531, %r12532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12536, %r12528, %r12533;
	// end inline asm
	shr.u32 	%r12541, %r12519, 8;
	// begin inline asm
	lop3.b32 %r12539, %r886, %r12541, %r12520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12543, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12544, %r12520, %r12543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12547, %r12539, %r12544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12550, %r897, %r12541, %r12531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12554, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12555, %r12531, %r12554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12558, %r12550, %r12555;
	// end inline asm
	// begin inline asm
	mov.b32 %r12566, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12577, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12565, %r16405, -2004318072;
	// begin inline asm
	lop3.b32 %r12563, %r886, %r12565, %r12566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12568, %r12566, %r12567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12571, %r12563, %r12568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12574, %r897, %r12565, %r12577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12579, %r12577, %r12578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12582, %r12574, %r12579;
	// end inline asm
	shr.u32 	%r12587, %r12565, 8;
	// begin inline asm
	lop3.b32 %r12585, %r886, %r12587, %r12566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12589, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12590, %r12566, %r12589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12593, %r12585, %r12590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12596, %r897, %r12587, %r12577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12600, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12601, %r12577, %r12600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12604, %r12596, %r12601;
	// end inline asm
	// begin inline asm
	mov.b32 %r12612, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12623, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12611, %r16406, -2004318072;
	// begin inline asm
	lop3.b32 %r12609, %r886, %r12611, %r12612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12614, %r12612, %r12613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12617, %r12609, %r12614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12620, %r897, %r12611, %r12623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12625, %r12623, %r12624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12628, %r12620, %r12625;
	// end inline asm
	shr.u32 	%r12633, %r12611, 8;
	// begin inline asm
	lop3.b32 %r12631, %r886, %r12633, %r12612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12635, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12636, %r12612, %r12635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12639, %r12631, %r12636;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12642, %r897, %r12633, %r12623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12646, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12647, %r12623, %r12646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12650, %r12642, %r12647;
	// end inline asm
	// begin inline asm
	mov.b32 %r12658, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12669, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12657, %r16407, -2004318072;
	// begin inline asm
	lop3.b32 %r12655, %r886, %r12657, %r12658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12659, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12660, %r12658, %r12659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12663, %r12655, %r12660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12666, %r897, %r12657, %r12669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12670, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12671, %r12669, %r12670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12674, %r12666, %r12671;
	// end inline asm
	shr.u32 	%r12679, %r12657, 8;
	// begin inline asm
	lop3.b32 %r12677, %r886, %r12679, %r12658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12681, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12682, %r12658, %r12681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12685, %r12677, %r12682;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12688, %r897, %r12679, %r12669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12692, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12693, %r12669, %r12692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12696, %r12688, %r12693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12699, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12701, %r12699, %r12341;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12704, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12706, %r12704, %r12352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12709, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12711, %r12709, %r12363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12714, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12716, %r12714, %r12374;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12719, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12721, %r12719, %r12387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12724, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12726, %r12724, %r12398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12729, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12731, %r12729, %r12409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12734, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12736, %r12734, %r12420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12739, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12741, %r12739, %r12433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12744, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12746, %r12744, %r12444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12749, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12751, %r12749, %r12455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12754, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12756, %r12754, %r12466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12759, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12761, %r12759, %r12479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12764, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12766, %r12764, %r12490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12769, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12771, %r12769, %r12501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12774, %r415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12776, %r12774, %r12512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12779, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12781, %r12779, %r12525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12784, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12786, %r12784, %r12536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12789, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12791, %r12789, %r12547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12794, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12796, %r12794, %r12558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12799, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12801, %r12799, %r12571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12804, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12806, %r12804, %r12582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12809, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12811, %r12809, %r12593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12814, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12816, %r12814, %r12604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12819, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12821, %r12819, %r12617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12824, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12826, %r12824, %r12628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12829, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12831, %r12829, %r12639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12834, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12836, %r12834, %r12650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12839, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12841, %r12839, %r12663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12844, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12846, %r12844, %r12674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12849, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12851, %r12849, %r12685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12854, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12856, %r12854, %r12696;
	// end inline asm
	// begin inline asm
	mov.b32 %r12864, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12875, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12861, %r886, %r887, %r12864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12865, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12866, %r12864, %r12865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12869, %r12861, %r12866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12872, %r897, %r887, %r12875, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12876, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12877, %r12875, %r12876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12880, %r12872, %r12877;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12883, %r886, %r909, %r12864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12887, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12888, %r12864, %r12887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12891, %r12883, %r12888;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12894, %r897, %r909, %r12875, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12898, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12899, %r12875, %r12898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12902, %r12894, %r12899;
	// end inline asm
	// begin inline asm
	mov.b32 %r12910, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12921, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12907, %r886, %r933, %r12910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12911, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12912, %r12910, %r12911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12915, %r12907, %r12912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12918, %r897, %r933, %r12921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12922, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12923, %r12921, %r12922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12926, %r12918, %r12923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12929, %r886, %r955, %r12910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12933, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12934, %r12910, %r12933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12937, %r12929, %r12934;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12940, %r897, %r955, %r12921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12944, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12945, %r12921, %r12944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12948, %r12940, %r12945;
	// end inline asm
	// begin inline asm
	mov.b32 %r12956, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12967, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12953, %r886, %r979, %r12956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12958, %r12956, %r12957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12961, %r12953, %r12958;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12964, %r897, %r979, %r12967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12968, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12969, %r12967, %r12968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12972, %r12964, %r12969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12975, %r886, %r1001, %r12956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12979, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12980, %r12956, %r12979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12983, %r12975, %r12980;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12986, %r897, %r1001, %r12967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12990, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12991, %r12967, %r12990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12994, %r12986, %r12991;
	// end inline asm
	// begin inline asm
	mov.b32 %r13002, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13013, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12999, %r886, %r1025, %r13002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13004, %r13002, %r13003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13007, %r12999, %r13004;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13010, %r897, %r1025, %r13013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13014, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13015, %r13013, %r13014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13018, %r13010, %r13015;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13021, %r886, %r1047, %r13002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13025, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13026, %r13002, %r13025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13029, %r13021, %r13026;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13032, %r897, %r1047, %r13013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13036, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13037, %r13013, %r13036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13040, %r13032, %r13037;
	// end inline asm
	// begin inline asm
	mov.b32 %r13048, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13059, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13045, %r886, %r1071, %r13048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13050, %r13048, %r13049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13053, %r13045, %r13050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13056, %r897, %r1071, %r13059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13061, %r13059, %r13060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13064, %r13056, %r13061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13067, %r886, %r1093, %r13048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13071, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13072, %r13048, %r13071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13075, %r13067, %r13072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13078, %r897, %r1093, %r13059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13082, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13083, %r13059, %r13082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13086, %r13078, %r13083;
	// end inline asm
	// begin inline asm
	mov.b32 %r13094, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13105, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13091, %r886, %r1117, %r13094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13096, %r13094, %r13095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13099, %r13091, %r13096;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13102, %r897, %r1117, %r13105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13107, %r13105, %r13106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13110, %r13102, %r13107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13113, %r886, %r1139, %r13094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13117, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13118, %r13094, %r13117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13121, %r13113, %r13118;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13124, %r897, %r1139, %r13105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13128, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13129, %r13105, %r13128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13132, %r13124, %r13129;
	// end inline asm
	// begin inline asm
	mov.b32 %r13140, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13151, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13137, %r886, %r1163, %r13140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13142, %r13140, %r13141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13145, %r13137, %r13142;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13148, %r897, %r1163, %r13151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13152, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13153, %r13151, %r13152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13156, %r13148, %r13153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13159, %r886, %r1185, %r13140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13163, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13164, %r13140, %r13163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13167, %r13159, %r13164;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13170, %r897, %r1185, %r13151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13174, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13175, %r13151, %r13174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13178, %r13170, %r13175;
	// end inline asm
	// begin inline asm
	mov.b32 %r13186, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13197, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13183, %r886, %r1209, %r13186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13188, %r13186, %r13187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13191, %r13183, %r13188;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13194, %r897, %r1209, %r13197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13198, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13199, %r13197, %r13198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13202, %r13194, %r13199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13205, %r886, %r1231, %r13186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13209, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13210, %r13186, %r13209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13213, %r13205, %r13210;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13216, %r897, %r1231, %r13197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13220, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13221, %r13197, %r13220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13224, %r13216, %r13221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13227, %r307, %r12869, %r12701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13231, %r307, %r12880, %r12706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13235, %r307, %r12891, %r12711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13239, %r307, %r12902, %r12716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13243, %r307, %r12915, %r12721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13247, %r307, %r12926, %r12726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13251, %r307, %r12937, %r12731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13255, %r307, %r12948, %r12736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13259, %r307, %r12961, %r12741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13263, %r307, %r12972, %r12746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13267, %r307, %r12983, %r12751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13271, %r307, %r12994, %r12756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13275, %r307, %r13007, %r12761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13279, %r307, %r13018, %r12766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13283, %r307, %r13029, %r12771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13287, %r307, %r13040, %r12776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13291, %r325, %r13053, %r12781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13295, %r325, %r13064, %r12786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13299, %r325, %r13075, %r12791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13303, %r325, %r13086, %r12796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13307, %r325, %r13099, %r12801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13311, %r325, %r13110, %r12806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13315, %r325, %r13121, %r12811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13319, %r325, %r13132, %r12816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13323, %r325, %r13145, %r12821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13327, %r325, %r13156, %r12826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13331, %r325, %r13167, %r12831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13335, %r325, %r13178, %r12836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13339, %r325, %r13191, %r12841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13343, %r325, %r13202, %r12846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13347, %r325, %r13213, %r12851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13351, %r325, %r13224, %r12856;
	// end inline asm
	// begin inline asm
	mov.b32 %r13360, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13371, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13357, %r886, %r4703, %r13360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13361, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13362, %r13360, %r13361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13365, %r13357, %r13362;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13368, %r897, %r4703, %r13371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13373, %r13371, %r13372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13376, %r13368, %r13373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13379, %r886, %r4725, %r13360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13384, %r13360, %r13383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13387, %r13379, %r13384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13390, %r897, %r4725, %r13371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13395, %r13371, %r13394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13398, %r13390, %r13395;
	// end inline asm
	// begin inline asm
	mov.b32 %r13406, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13417, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13403, %r886, %r4749, %r13406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13408, %r13406, %r13407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13411, %r13403, %r13408;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13414, %r897, %r4749, %r13417, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13419, %r13417, %r13418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13422, %r13414, %r13419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13425, %r886, %r4771, %r13406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13429, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13430, %r13406, %r13429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13433, %r13425, %r13430;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13436, %r897, %r4771, %r13417, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13440, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13441, %r13417, %r13440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13444, %r13436, %r13441;
	// end inline asm
	// begin inline asm
	mov.b32 %r13452, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13463, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13449, %r886, %r4795, %r13452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13454, %r13452, %r13453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13457, %r13449, %r13454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13460, %r897, %r4795, %r13463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13465, %r13463, %r13464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13468, %r13460, %r13465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13471, %r886, %r4817, %r13452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13476, %r13452, %r13475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13479, %r13471, %r13476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13482, %r897, %r4817, %r13463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13486, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13487, %r13463, %r13486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13490, %r13482, %r13487;
	// end inline asm
	// begin inline asm
	mov.b32 %r13498, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13509, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13495, %r886, %r4841, %r13498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13500, %r13498, %r13499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13503, %r13495, %r13500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13506, %r897, %r4841, %r13509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13511, %r13509, %r13510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13514, %r13506, %r13511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13517, %r886, %r4863, %r13498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13522, %r13498, %r13521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13525, %r13517, %r13522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13528, %r897, %r4863, %r13509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13533, %r13509, %r13532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13536, %r13528, %r13533;
	// end inline asm
	// begin inline asm
	mov.b32 %r13544, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13555, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13541, %r886, %r4887, %r13544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13546, %r13544, %r13545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13549, %r13541, %r13546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13552, %r897, %r4887, %r13555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13557, %r13555, %r13556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13560, %r13552, %r13557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13563, %r886, %r4909, %r13544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13568, %r13544, %r13567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13571, %r13563, %r13568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13574, %r897, %r4909, %r13555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13579, %r13555, %r13578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13582, %r13574, %r13579;
	// end inline asm
	// begin inline asm
	mov.b32 %r13590, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13601, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13587, %r886, %r4933, %r13590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13592, %r13590, %r13591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13595, %r13587, %r13592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13598, %r897, %r4933, %r13601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13603, %r13601, %r13602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13606, %r13598, %r13603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13609, %r886, %r4955, %r13590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13614, %r13590, %r13613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13617, %r13609, %r13614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13620, %r897, %r4955, %r13601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13625, %r13601, %r13624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13628, %r13620, %r13625;
	// end inline asm
	// begin inline asm
	mov.b32 %r13636, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13647, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13633, %r886, %r4979, %r13636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13638, %r13636, %r13637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13641, %r13633, %r13638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13644, %r897, %r4979, %r13647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13649, %r13647, %r13648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13652, %r13644, %r13649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13655, %r886, %r5001, %r13636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13659, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13660, %r13636, %r13659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13663, %r13655, %r13660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13666, %r897, %r5001, %r13647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13670, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13671, %r13647, %r13670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13674, %r13666, %r13671;
	// end inline asm
	// begin inline asm
	mov.b32 %r13682, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13693, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13679, %r886, %r5025, %r13682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13683, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13684, %r13682, %r13683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13687, %r13679, %r13684;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13690, %r897, %r5025, %r13693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13694, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13695, %r13693, %r13694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13698, %r13690, %r13695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13701, %r886, %r5047, %r13682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13705, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13706, %r13682, %r13705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13709, %r13701, %r13706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13712, %r897, %r5047, %r13693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13716, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13717, %r13693, %r13716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13720, %r13712, %r13717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13723, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13725, %r13723, %r13365, %r13227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13729, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13731, %r13729, %r13376, %r13231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13735, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13737, %r13735, %r13387, %r13235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13741, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13743, %r13741, %r13398, %r13239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13747, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13749, %r13747, %r13411, %r13243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13753, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13755, %r13753, %r13422, %r13247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13759, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13761, %r13759, %r13433, %r13251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13765, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13767, %r13765, %r13444, %r13255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13771, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13773, %r13771, %r13457, %r13259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13777, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13779, %r13777, %r13468, %r13263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13783, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13785, %r13783, %r13479, %r13267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13789, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13791, %r13789, %r13490, %r13271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13795, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13797, %r13795, %r13503, %r13275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13801, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13803, %r13801, %r13514, %r13279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13807, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13809, %r13807, %r13525, %r13283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13813, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13815, %r13813, %r13536, %r13287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13819, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13821, %r13819, %r13549, %r13291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13825, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13827, %r13825, %r13560, %r13295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13831, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13833, %r13831, %r13571, %r13299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13837, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13839, %r13837, %r13582, %r13303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13843, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13845, %r13843, %r13595, %r13307;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13849, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13851, %r13849, %r13606, %r13311;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13855, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13857, %r13855, %r13617, %r13315;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13861, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13863, %r13861, %r13628, %r13319;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13867, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13869, %r13867, %r13641, %r13323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13873, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13875, %r13873, %r13652, %r13327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13879, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13881, %r13879, %r13663, %r13331;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13885, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13887, %r13885, %r13674, %r13335;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13891, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13893, %r13891, %r13687, %r13339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13897, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13899, %r13897, %r13698, %r13343;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13903, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13905, %r13903, %r13709, %r13347;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13909, %r361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13911, %r13909, %r13720, %r13351;
	// end inline asm
	// begin inline asm
	mov.b32 %r13920, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13931, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13917, %r886, %r8519, %r13920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13921, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13922, %r13920, %r13921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13925, %r13917, %r13922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13928, %r897, %r8519, %r13931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13932, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13933, %r13931, %r13932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13936, %r13928, %r13933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13939, %r886, %r8541, %r13920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13944, %r13920, %r13943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13947, %r13939, %r13944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13950, %r897, %r8541, %r13931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13955, %r13931, %r13954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13958, %r13950, %r13955;
	// end inline asm
	// begin inline asm
	mov.b32 %r13966, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13977, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13963, %r886, %r8565, %r13966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13967, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13968, %r13966, %r13967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13971, %r13963, %r13968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13974, %r897, %r8565, %r13977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13979, %r13977, %r13978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13982, %r13974, %r13979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13985, %r886, %r8587, %r13966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13990, %r13966, %r13989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13993, %r13985, %r13990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13996, %r897, %r8587, %r13977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14001, %r13977, %r14000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14004, %r13996, %r14001;
	// end inline asm
	// begin inline asm
	mov.b32 %r14012, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14023, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14009, %r886, %r8611, %r14012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14013, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14014, %r14012, %r14013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14017, %r14009, %r14014;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14020, %r897, %r8611, %r14023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14025, %r14023, %r14024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14028, %r14020, %r14025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14031, %r886, %r8633, %r14012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14036, %r14012, %r14035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14039, %r14031, %r14036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14042, %r897, %r8633, %r14023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14047, %r14023, %r14046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14050, %r14042, %r14047;
	// end inline asm
	// begin inline asm
	mov.b32 %r14058, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14069, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14055, %r886, %r8657, %r14058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14059, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14060, %r14058, %r14059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14063, %r14055, %r14060;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14066, %r897, %r8657, %r14069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14070, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14071, %r14069, %r14070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14074, %r14066, %r14071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14077, %r886, %r8679, %r14058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14082, %r14058, %r14081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14085, %r14077, %r14082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14088, %r897, %r8679, %r14069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14093, %r14069, %r14092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14096, %r14088, %r14093;
	// end inline asm
	// begin inline asm
	mov.b32 %r14104, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14115, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14101, %r886, %r8703, %r14104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14105, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14106, %r14104, %r14105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14109, %r14101, %r14106;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14112, %r897, %r8703, %r14115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14116, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14117, %r14115, %r14116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14120, %r14112, %r14117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14123, %r886, %r8725, %r14104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14128, %r14104, %r14127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14131, %r14123, %r14128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14134, %r897, %r8725, %r14115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14139, %r14115, %r14138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14142, %r14134, %r14139;
	// end inline asm
	// begin inline asm
	mov.b32 %r14150, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14161, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14147, %r886, %r8749, %r14150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14151, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14152, %r14150, %r14151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14155, %r14147, %r14152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14158, %r897, %r8749, %r14161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14163, %r14161, %r14162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14166, %r14158, %r14163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14169, %r886, %r8771, %r14150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14174, %r14150, %r14173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14177, %r14169, %r14174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14180, %r897, %r8771, %r14161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14185, %r14161, %r14184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14188, %r14180, %r14185;
	// end inline asm
	// begin inline asm
	mov.b32 %r14196, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14207, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14193, %r886, %r8795, %r14196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14197, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14198, %r14196, %r14197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14201, %r14193, %r14198;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14204, %r897, %r8795, %r14207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14209, %r14207, %r14208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14212, %r14204, %r14209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14215, %r886, %r8817, %r14196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14219, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14220, %r14196, %r14219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14223, %r14215, %r14220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14226, %r897, %r8817, %r14207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14231, %r14207, %r14230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14234, %r14226, %r14231;
	// end inline asm
	// begin inline asm
	mov.b32 %r14242, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14253, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14239, %r886, %r8841, %r14242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14243, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14244, %r14242, %r14243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14247, %r14239, %r14244;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14250, %r897, %r8841, %r14253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14254, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14255, %r14253, %r14254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14258, %r14250, %r14255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14261, %r886, %r8863, %r14242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14265, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14266, %r14242, %r14265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14269, %r14261, %r14266;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14272, %r897, %r8863, %r14253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14276, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14277, %r14253, %r14276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14280, %r14272, %r14277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14418, %r379, %r13925, %r13725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14415, %r379, %r13936, %r13731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14427, %r379, %r13947, %r13737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14424, %r379, %r13958, %r13743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14436, %r379, %r13971, %r13749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14433, %r379, %r13982, %r13755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14445, %r379, %r13993, %r13761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14442, %r379, %r14004, %r13767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14454, %r379, %r14017, %r13773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14451, %r379, %r14028, %r13779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14463, %r379, %r14039, %r13785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14460, %r379, %r14050, %r13791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14472, %r379, %r14063, %r13797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14469, %r379, %r14074, %r13803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14481, %r379, %r14085, %r13809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14478, %r379, %r14096, %r13815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14490, %r397, %r14109, %r13821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14487, %r397, %r14120, %r13827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14499, %r397, %r14131, %r13833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14496, %r397, %r14142, %r13839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14508, %r397, %r14155, %r13845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14505, %r397, %r14166, %r13851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14517, %r397, %r14177, %r13857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14514, %r397, %r14188, %r13863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14526, %r397, %r14201, %r13869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14523, %r397, %r14212, %r13875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14535, %r397, %r14223, %r13881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14532, %r397, %r14234, %r13887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14544, %r397, %r14247, %r13893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14541, %r397, %r14258, %r13899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14553, %r397, %r14269, %r13905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14550, %r397, %r14280, %r13911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14411, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14413, %r14411, %r14415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14416, %r461, %r14418, %r14413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14420, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14422, %r14420, %r14424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14425, %r461, %r14427, %r14422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14429, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14431, %r14429, %r14433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14434, %r461, %r14436, %r14431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14438, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14440, %r14438, %r14442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14443, %r461, %r14445, %r14440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14447, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14449, %r14447, %r14451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14452, %r461, %r14454, %r14449;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14456, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14458, %r14456, %r14460;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14461, %r461, %r14463, %r14458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14465, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14467, %r14465, %r14469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14470, %r461, %r14472, %r14467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14474, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14476, %r14474, %r14478;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14479, %r461, %r14481, %r14476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14483, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14485, %r14483, %r14487;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14488, %r464, %r14490, %r14485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14492, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14494, %r14492, %r14496;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14497, %r464, %r14499, %r14494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14501, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14503, %r14501, %r14505;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14506, %r464, %r14508, %r14503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14510, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14512, %r14510, %r14514;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14515, %r464, %r14517, %r14512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14519, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14521, %r14519, %r14523;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14524, %r464, %r14526, %r14521;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14528, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14530, %r14528, %r14532;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14533, %r464, %r14535, %r14530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14537, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14539, %r14537, %r14541;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14542, %r464, %r14544, %r14539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14546, %r470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14548, %r14546, %r14550;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14551, %r464, %r14553, %r14548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14555, %r467, %r14418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14558, %r461, %r14415, %r14555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14562, %r467, %r14427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14565, %r461, %r14424, %r14562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14569, %r467, %r14436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14572, %r461, %r14433, %r14569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14576, %r467, %r14445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14579, %r461, %r14442, %r14576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14583, %r467, %r14454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14586, %r461, %r14451, %r14583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14590, %r467, %r14463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14593, %r461, %r14460, %r14590;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14597, %r467, %r14472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14600, %r461, %r14469, %r14597;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14604, %r467, %r14481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14607, %r461, %r14478, %r14604;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14611, %r470, %r14490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14614, %r464, %r14487, %r14611;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14618, %r470, %r14499;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14621, %r464, %r14496, %r14618;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14625, %r470, %r14508;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14628, %r464, %r14505, %r14625;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14632, %r470, %r14517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14635, %r464, %r14514, %r14632;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14639, %r470, %r14526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14642, %r464, %r14523, %r14639;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14646, %r470, %r14535;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14649, %r464, %r14532, %r14646;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14653, %r470, %r14544;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14656, %r464, %r14541, %r14653;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14660, %r470, %r14553;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14663, %r464, %r14550, %r14660;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14834, %r14831}, {%r516, %r522, %r519, %r525}, {%r14416, %r14558}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14843, %r14840}, {%r516, %r522, %r519, %r525}, {%r14425, %r14565}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14852, %r14849}, {%r516, %r522, %r519, %r525}, {%r14434, %r14572}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14861, %r14858}, {%r516, %r522, %r519, %r525}, {%r14443, %r14579}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14870, %r14867}, {%r516, %r522, %r519, %r525}, {%r14452, %r14586}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14879, %r14876}, {%r516, %r522, %r519, %r525}, {%r14461, %r14593}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14888, %r14885}, {%r516, %r522, %r519, %r525}, {%r14470, %r14600}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14897, %r14894}, {%r516, %r522, %r519, %r525}, {%r14479, %r14607}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14906, %r14903}, {%r516, %r522, %r519, %r525}, {%r14488, %r14614}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14915, %r14912}, {%r516, %r522, %r519, %r525}, {%r14497, %r14621}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14924, %r14921}, {%r516, %r522, %r519, %r525}, {%r14506, %r14628}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14933, %r14930}, {%r516, %r522, %r519, %r525}, {%r14515, %r14635}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14942, %r14939}, {%r516, %r522, %r519, %r525}, {%r14524, %r14642}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14951, %r14948}, {%r516, %r522, %r519, %r525}, {%r14533, %r14649}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14960, %r14957}, {%r516, %r522, %r519, %r525}, {%r14542, %r14656}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14969, %r14966}, {%r516, %r522, %r519, %r525}, {%r14551, %r14663}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14827, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14829, %r14827, %r14831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14832, %r566, %r14834, %r14829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14836, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14838, %r14836, %r14840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14841, %r566, %r14843, %r14838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14845, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14847, %r14845, %r14849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14850, %r566, %r14852, %r14847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14854, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14856, %r14854, %r14858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14859, %r566, %r14861, %r14856;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14863, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14865, %r14863, %r14867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14868, %r566, %r14870, %r14865;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14872, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14874, %r14872, %r14876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14877, %r566, %r14879, %r14874;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14881, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14883, %r14881, %r14885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14886, %r566, %r14888, %r14883;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14890, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14892, %r14890, %r14894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14895, %r566, %r14897, %r14892;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14899, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14901, %r14899, %r14903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14904, %r566, %r14906, %r14901;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14908, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14910, %r14908, %r14912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14913, %r566, %r14915, %r14910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14917, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14919, %r14917, %r14921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14922, %r566, %r14924, %r14919;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14926, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14928, %r14926, %r14930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14931, %r566, %r14933, %r14928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14935, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14937, %r14935, %r14939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14940, %r566, %r14942, %r14937;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14944, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14946, %r14944, %r14948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14949, %r566, %r14951, %r14946;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14953, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14955, %r14953, %r14957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14958, %r566, %r14960, %r14955;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14962, %r569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14964, %r14962, %r14966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14967, %r566, %r14969, %r14964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14971, %r569, %r14834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14974, %r566, %r14831, %r14971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14978, %r569, %r14843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14981, %r566, %r14840, %r14978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14985, %r569, %r14852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14988, %r566, %r14849, %r14985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14992, %r569, %r14861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14995, %r566, %r14858, %r14992;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14999, %r569, %r14870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15002, %r566, %r14867, %r14999;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15006, %r569, %r14879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15009, %r566, %r14876, %r15006;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15013, %r569, %r14888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15016, %r566, %r14885, %r15013;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15020, %r569, %r14897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15023, %r566, %r14894, %r15020;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15027, %r569, %r14906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15030, %r566, %r14903, %r15027;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15034, %r569, %r14915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15037, %r566, %r14912, %r15034;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15041, %r569, %r14924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15044, %r566, %r14921, %r15041;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15048, %r569, %r14933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15051, %r566, %r14930, %r15048;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15055, %r569, %r14942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15058, %r566, %r14939, %r15055;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15062, %r569, %r14951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15065, %r566, %r14948, %r15062;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15069, %r569, %r14960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15072, %r566, %r14957, %r15069;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15076, %r569, %r14969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15079, %r566, %r14966, %r15076;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15372, %r15375}, {%r604, %r610, %r607, %r613}, {%r14832, %r14974}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15378, %r15381}, {%r604, %r610, %r607, %r613}, {%r14841, %r14981}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15384, %r15387}, {%r604, %r610, %r607, %r613}, {%r14850, %r14988}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15390, %r15393}, {%r604, %r610, %r607, %r613}, {%r14859, %r14995}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15396, %r15399}, {%r604, %r610, %r607, %r613}, {%r14868, %r15002}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15402, %r15405}, {%r604, %r610, %r607, %r613}, {%r14877, %r15009}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15408, %r15411}, {%r604, %r610, %r607, %r613}, {%r14886, %r15016}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15414, %r15417}, {%r604, %r610, %r607, %r613}, {%r14895, %r15023}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15373, %r15376}, {%r604, %r610, %r607, %r613}, {%r14904, %r15030}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15379, %r15382}, {%r604, %r610, %r607, %r613}, {%r14913, %r15037}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15385, %r15388}, {%r604, %r610, %r607, %r613}, {%r14922, %r15044}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15391, %r15394}, {%r604, %r610, %r607, %r613}, {%r14931, %r15051}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15397, %r15400}, {%r604, %r610, %r607, %r613}, {%r14940, %r15058}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15403, %r15406}, {%r604, %r610, %r607, %r613}, {%r14949, %r15065}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15409, %r15412}, {%r604, %r610, %r607, %r613}, {%r14958, %r15072}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15415, %r15418}, {%r604, %r610, %r607, %r613}, {%r14967, %r15079}, {%r3227, %r3227};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15371, %r15372, %r15373;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15374, %r15375, %r15376;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15377, %r15378, %r15379;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15380, %r15381, %r15382;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15383, %r15384, %r15385;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15386, %r15387, %r15388;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15389, %r15390, %r15391;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15392, %r15393, %r15394;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15395, %r15396, %r15397;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15398, %r15399, %r15400;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15401, %r15402, %r15403;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15404, %r15405, %r15406;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15407, %r15408, %r15409;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15410, %r15411, %r15412;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15413, %r15414, %r15415;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15416, %r15417, %r15418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15419, %r15372, %r15373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15422, %r15375, %r15376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15425, %r15378, %r15379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15428, %r15381, %r15382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15431, %r15384, %r15385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15434, %r15387, %r15388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15437, %r15390, %r15391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15440, %r15393, %r15394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15443, %r15396, %r15397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15446, %r15399, %r15400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15449, %r15402, %r15403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15452, %r15405, %r15406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15455, %r15408, %r15409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15458, %r15411, %r15412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15461, %r15414, %r15415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15464, %r15417, %r15418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15467, %r186, %r15371;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15470, %r186, %r15374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15473, %r186, %r15377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15476, %r186, %r15380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15479, %r186, %r15383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15482, %r186, %r15386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15485, %r186, %r15389;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15488, %r186, %r15392;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15491, %r186, %r15395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15494, %r186, %r15398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15497, %r186, %r15401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15500, %r186, %r15404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15503, %r186, %r15407;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15506, %r186, %r15410;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15509, %r186, %r15413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15512, %r186, %r15416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15515, %r187, %r15419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15518, %r187, %r15422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15521, %r187, %r15425;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15524, %r187, %r15428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15527, %r187, %r15431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15530, %r187, %r15434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15533, %r187, %r15437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15536, %r187, %r15440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15539, %r187, %r15443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15542, %r187, %r15446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15545, %r187, %r15449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15548, %r187, %r15452;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15551, %r187, %r15455;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15554, %r187, %r15458;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15557, %r187, %r15461;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15560, %r187, %r15464;
	// end inline asm
	// begin inline asm
	mov.b32 %r15563, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15564, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15565, %r15467, %r15563;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15568, %r15565, %r15564;
	// end inline asm
	// begin inline asm
	mov.b32 %r15571, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15572, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15573, %r15470, %r15571;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15576, %r15573, %r15572;
	// end inline asm
	// begin inline asm
	mov.b32 %r15579, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15580, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15581, %r15473, %r15579;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15584, %r15581, %r15580;
	// end inline asm
	// begin inline asm
	mov.b32 %r15587, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15588, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15589, %r15476, %r15587;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15592, %r15589, %r15588;
	// end inline asm
	// begin inline asm
	mov.b32 %r15595, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15596, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15597, %r15479, %r15595;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15600, %r15597, %r15596;
	// end inline asm
	// begin inline asm
	mov.b32 %r15603, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15604, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15605, %r15482, %r15603;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15608, %r15605, %r15604;
	// end inline asm
	// begin inline asm
	mov.b32 %r15611, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15612, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15613, %r15485, %r15611;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15616, %r15613, %r15612;
	// end inline asm
	// begin inline asm
	mov.b32 %r15619, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15620, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15621, %r15488, %r15619;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15624, %r15621, %r15620;
	// end inline asm
	// begin inline asm
	mov.b32 %r15627, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15628, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15629, %r15491, %r15627;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15632, %r15629, %r15628;
	// end inline asm
	// begin inline asm
	mov.b32 %r15635, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15636, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15637, %r15494, %r15635;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15640, %r15637, %r15636;
	// end inline asm
	// begin inline asm
	mov.b32 %r15643, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15644, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15645, %r15497, %r15643;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15648, %r15645, %r15644;
	// end inline asm
	// begin inline asm
	mov.b32 %r15651, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15652, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15653, %r15500, %r15651;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15656, %r15653, %r15652;
	// end inline asm
	// begin inline asm
	mov.b32 %r15659, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15660, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15661, %r15503, %r15659;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15664, %r15661, %r15660;
	// end inline asm
	// begin inline asm
	mov.b32 %r15667, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15668, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15669, %r15506, %r15667;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15672, %r15669, %r15668;
	// end inline asm
	// begin inline asm
	mov.b32 %r15675, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15676, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15677, %r15509, %r15675;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15680, %r15677, %r15676;
	// end inline asm
	// begin inline asm
	mov.b32 %r15683, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15684, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15685, %r15512, %r15683;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15688, %r15685, %r15684;
	// end inline asm
	// begin inline asm
	mov.b32 %r15691, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15692, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15693, %r15515, %r15691;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15696, %r15693, %r15692;
	// end inline asm
	// begin inline asm
	mov.b32 %r15699, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15700, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15701, %r15518, %r15699;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15704, %r15701, %r15700;
	// end inline asm
	// begin inline asm
	mov.b32 %r15707, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15708, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15709, %r15521, %r15707;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15712, %r15709, %r15708;
	// end inline asm
	// begin inline asm
	mov.b32 %r15715, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15716, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15717, %r15524, %r15715;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15720, %r15717, %r15716;
	// end inline asm
	// begin inline asm
	mov.b32 %r15723, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15724, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15725, %r15527, %r15723;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15728, %r15725, %r15724;
	// end inline asm
	// begin inline asm
	mov.b32 %r15731, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15732, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15733, %r15530, %r15731;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15736, %r15733, %r15732;
	// end inline asm
	// begin inline asm
	mov.b32 %r15739, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15740, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15741, %r15533, %r15739;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15744, %r15741, %r15740;
	// end inline asm
	// begin inline asm
	mov.b32 %r15747, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15748, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15749, %r15536, %r15747;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15752, %r15749, %r15748;
	// end inline asm
	// begin inline asm
	mov.b32 %r15755, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15756, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15757, %r15539, %r15755;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15760, %r15757, %r15756;
	// end inline asm
	// begin inline asm
	mov.b32 %r15763, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15764, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15765, %r15542, %r15763;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15768, %r15765, %r15764;
	// end inline asm
	// begin inline asm
	mov.b32 %r15771, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15772, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15773, %r15545, %r15771;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15776, %r15773, %r15772;
	// end inline asm
	// begin inline asm
	mov.b32 %r15779, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15780, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15781, %r15548, %r15779;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15784, %r15781, %r15780;
	// end inline asm
	// begin inline asm
	mov.b32 %r15787, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15788, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15789, %r15551, %r15787;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15792, %r15789, %r15788;
	// end inline asm
	// begin inline asm
	mov.b32 %r15795, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15796, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15797, %r15554, %r15795;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15800, %r15797, %r15796;
	// end inline asm
	// begin inline asm
	mov.b32 %r15803, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15804, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15805, %r15557, %r15803;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15808, %r15805, %r15804;
	// end inline asm
	// begin inline asm
	mov.b32 %r15811, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15812, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15813, %r15560, %r15811;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15816, %r15813, %r15812;
	// end inline asm
	// begin inline asm
	mov.b32 %r15822, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15820, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15821, %r15822, %r15820;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15824, %r15568, %r15821;
	// end inline asm
	// begin inline asm
	mov.b32 %r15827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15828, %r15822, %r15827;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15831, %r15576, %r15828;
	// end inline asm
	// begin inline asm
	mov.b32 %r15834, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15835, %r15822, %r15834;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15838, %r15584, %r15835;
	// end inline asm
	// begin inline asm
	mov.b32 %r15841, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15842, %r15822, %r15841;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15845, %r15592, %r15842;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15848, %r15824, %r15838, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15852, %r15831, %r15845, %r4403;
	// end inline asm
	shl.b32 	%r15859, %r15852, 4;
	// begin inline asm
	lop3.b32 %r15856, %r4409, %r15848, %r15859, 202;
	// end inline asm
	xor.b32  	%r16259, %r15856, -2004318072;
	// begin inline asm
	mov.b32 %r15863, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15861, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15862, %r15863, %r15861;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15865, %r15600, %r15862;
	// end inline asm
	// begin inline asm
	mov.b32 %r15868, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15869, %r15863, %r15868;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15872, %r15608, %r15869;
	// end inline asm
	// begin inline asm
	mov.b32 %r15875, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15876, %r15863, %r15875;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15879, %r15616, %r15876;
	// end inline asm
	// begin inline asm
	mov.b32 %r15882, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15883, %r15863, %r15882;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15886, %r15624, %r15883;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15889, %r15865, %r15879, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15893, %r15872, %r15886, %r4403;
	// end inline asm
	shl.b32 	%r15900, %r15893, 4;
	// begin inline asm
	lop3.b32 %r15897, %r4409, %r15889, %r15900, 202;
	// end inline asm
	xor.b32  	%r16260, %r15897, -2004318072;
	// begin inline asm
	mov.b32 %r15904, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15902, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15903, %r15904, %r15902;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15906, %r15632, %r15903;
	// end inline asm
	// begin inline asm
	mov.b32 %r15909, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15910, %r15904, %r15909;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15913, %r15640, %r15910;
	// end inline asm
	// begin inline asm
	mov.b32 %r15916, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15917, %r15904, %r15916;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15920, %r15648, %r15917;
	// end inline asm
	// begin inline asm
	mov.b32 %r15923, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15924, %r15904, %r15923;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15927, %r15656, %r15924;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15930, %r15906, %r15920, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15934, %r15913, %r15927, %r4403;
	// end inline asm
	shl.b32 	%r15941, %r15934, 4;
	// begin inline asm
	lop3.b32 %r15938, %r4409, %r15930, %r15941, 202;
	// end inline asm
	xor.b32  	%r16261, %r15938, -2004318072;
	// begin inline asm
	mov.b32 %r15945, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15944, %r15945, %r15943;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15947, %r15664, %r15944;
	// end inline asm
	// begin inline asm
	mov.b32 %r15950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15951, %r15945, %r15950;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15954, %r15672, %r15951;
	// end inline asm
	// begin inline asm
	mov.b32 %r15957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15958, %r15945, %r15957;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15961, %r15680, %r15958;
	// end inline asm
	// begin inline asm
	mov.b32 %r15964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15965, %r15945, %r15964;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15968, %r15688, %r15965;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15971, %r15947, %r15961, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15975, %r15954, %r15968, %r4403;
	// end inline asm
	shl.b32 	%r15982, %r15975, 4;
	// begin inline asm
	lop3.b32 %r15979, %r4409, %r15971, %r15982, 202;
	// end inline asm
	xor.b32  	%r16262, %r15979, -2004318072;
	// begin inline asm
	mov.b32 %r15986, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15984, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15985, %r15986, %r15984;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15988, %r15696, %r15985;
	// end inline asm
	// begin inline asm
	mov.b32 %r15991, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15992, %r15986, %r15991;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15995, %r15704, %r15992;
	// end inline asm
	// begin inline asm
	mov.b32 %r15998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15999, %r15986, %r15998;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16002, %r15712, %r15999;
	// end inline asm
	// begin inline asm
	mov.b32 %r16005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16006, %r15986, %r16005;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16009, %r15720, %r16006;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16012, %r15988, %r16002, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16016, %r15995, %r16009, %r4403;
	// end inline asm
	shl.b32 	%r16023, %r16016, 4;
	// begin inline asm
	lop3.b32 %r16020, %r4409, %r16012, %r16023, 202;
	// end inline asm
	xor.b32  	%r16263, %r16020, -2004318072;
	// begin inline asm
	mov.b32 %r16027, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16025, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16026, %r16027, %r16025;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16029, %r15728, %r16026;
	// end inline asm
	// begin inline asm
	mov.b32 %r16032, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16033, %r16027, %r16032;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16036, %r15736, %r16033;
	// end inline asm
	// begin inline asm
	mov.b32 %r16039, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16040, %r16027, %r16039;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16043, %r15744, %r16040;
	// end inline asm
	// begin inline asm
	mov.b32 %r16046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16047, %r16027, %r16046;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16050, %r15752, %r16047;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16053, %r16029, %r16043, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16057, %r16036, %r16050, %r4403;
	// end inline asm
	shl.b32 	%r16064, %r16057, 4;
	// begin inline asm
	lop3.b32 %r16061, %r4409, %r16053, %r16064, 202;
	// end inline asm
	xor.b32  	%r16264, %r16061, -2004318072;
	// begin inline asm
	mov.b32 %r16068, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16067, %r16068, %r16066;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16070, %r15760, %r16067;
	// end inline asm
	// begin inline asm
	mov.b32 %r16073, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16074, %r16068, %r16073;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16077, %r15768, %r16074;
	// end inline asm
	// begin inline asm
	mov.b32 %r16080, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16081, %r16068, %r16080;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16084, %r15776, %r16081;
	// end inline asm
	// begin inline asm
	mov.b32 %r16087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16088, %r16068, %r16087;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16091, %r15784, %r16088;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16094, %r16070, %r16084, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16098, %r16077, %r16091, %r4403;
	// end inline asm
	shl.b32 	%r16105, %r16098, 4;
	// begin inline asm
	lop3.b32 %r16102, %r4409, %r16094, %r16105, 202;
	// end inline asm
	xor.b32  	%r16265, %r16102, -2004318072;
	// begin inline asm
	mov.b32 %r16109, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16107, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16108, %r16109, %r16107;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16111, %r15792, %r16108;
	// end inline asm
	// begin inline asm
	mov.b32 %r16114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16115, %r16109, %r16114;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16118, %r15800, %r16115;
	// end inline asm
	// begin inline asm
	mov.b32 %r16121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16122, %r16109, %r16121;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16125, %r15808, %r16122;
	// end inline asm
	// begin inline asm
	mov.b32 %r16128, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16129, %r16109, %r16128;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16132, %r15816, %r16129;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16135, %r16111, %r16125, %r4403;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16139, %r16118, %r16132, %r4403;
	// end inline asm
	shl.b32 	%r16146, %r16139, 4;
	// begin inline asm
	lop3.b32 %r16143, %r4409, %r16135, %r16146, 202;
	// end inline asm
	xor.b32  	%r16266, %r16143, -2004318072;
	st.shared.u32 	[%rd116], %r16259;
	st.shared.u32 	[%rd118], %r16260;
	st.shared.u32 	[%rd120], %r16261;
	st.shared.u32 	[%rd122], %r16262;
	st.shared.u32 	[%rd124], %r16263;
	st.shared.u32 	[%rd126], %r16264;
	st.shared.u32 	[%rd128], %r16265;
	st.shared.u32 	[%rd130], %r16266;
	add.s32 	%r16409, %r16409, 128;
	setp.eq.s32 	%p329, %r16409, 256;
	@%p329 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;
$L__BB0_184:                            // %guard_exit29817
                                        //   in Loop: Header=BB0_181 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16272, [%rd5];
	ld.shared.u32 	%r16273, [%rd6+128];
	ld.shared.u32 	%r16280, [%rd6+4];
	ld.shared.u32 	%r16281, [%rd6+132];
	ld.shared.u32 	%r16288, [%rd7];
	ld.shared.u32 	%r16289, [%rd8+128];
	ld.shared.u32 	%r16296, [%rd8+4];
	ld.shared.u32 	%r16297, [%rd8+132];
	ld.shared.u32 	%r16304, [%rd5+16644];
	ld.shared.u32 	%r16305, [%rd6+16772];
	ld.shared.u32 	%r16312, [%rd6+16648];
	ld.shared.u32 	%r16313, [%rd6+16776];
	ld.shared.u32 	%r16320, [%rd7+16644];
	ld.shared.u32 	%r16321, [%rd8+16772];
	ld.shared.u32 	%r16328, [%rd8+16648];
	ld.shared.u32 	%r16329, [%rd8+16776];
	// begin inline asm
	prmt.b32 %r16267, %r16272, %r16273, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16271, %r16272, %r16273, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16275, %r16280, %r16281, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16279, %r16280, %r16281, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16283, %r16288, %r16289, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16287, %r16288, %r16289, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16291, %r16296, %r16297, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16295, %r16296, %r16297, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16299, %r16304, %r16305, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16303, %r16304, %r16305, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16307, %r16312, %r16313, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16311, %r16312, %r16313, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16315, %r16320, %r16321, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16319, %r16320, %r16321, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16323, %r16328, %r16329, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16327, %r16328, %r16329, %r803;
	// end inline asm
	selp.b32 	%r16331, %r16271, %r16267, %p315;
	shfl.sync.bfly.b32	%r257, %r16331, 8, 31, -1;
	selp.b32 	%r16332, %r16279, %r16275, %p315;
	shfl.sync.bfly.b32	%r258, %r16332, 8, 31, -1;
	selp.b32 	%r16333, %r16287, %r16283, %p315;
	shfl.sync.bfly.b32	%r259, %r16333, 8, 31, -1;
	selp.b32 	%r16334, %r16295, %r16291, %p315;
	shfl.sync.bfly.b32	%r260, %r16334, 8, 31, -1;
	selp.b32 	%r16335, %r16303, %r16299, %p315;
	shfl.sync.bfly.b32	%r16336, %r16335, 8, 31, -1;
	selp.b32 	%r16337, %r16311, %r16307, %p315;
	shfl.sync.bfly.b32	%r16338, %r16337, 8, 31, -1;
	selp.b32 	%r16339, %r16319, %r16315, %p315;
	shfl.sync.bfly.b32	%r16340, %r16339, 8, 31, -1;
	selp.b32 	%r16341, %r16327, %r16323, %p315;
	shfl.sync.bfly.b32	%r16342, %r16341, 8, 31, -1;
	and.b32  	%r269, %r16408, 768;
	setp.lt.u32 	%p331, %r269, 384;
	shl.b32 	%r16363, %r16408, 13;
	@%p331 bra 	$L__BB0_186;
// %bb.185:                             // %pass28509
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r16343, %r260, %r16295, %p315;
	selp.b32 	%r16344, %r16291, %r260, %p315;
	selp.b32 	%r16345, %r259, %r16287, %p315;
	selp.b32 	%r16346, %r16283, %r259, %p315;
	selp.b32 	%r16347, %r258, %r16279, %p315;
	selp.b32 	%r16348, %r16275, %r258, %p315;
	selp.b32 	%r16349, %r257, %r16271, %p315;
	selp.b32 	%r16350, %r16267, %r257, %p315;
	or.b32  	%r16352, %r16363, %r142;
	or.b32  	%r16353, %r16352, %r125;
	cvt.s64.s32 	%rd131, %r16353;
	add.s64 	%rd132, %rd131, %rd9;
	shr.u64 	%rd133, %rd132, 38;
	add.s64 	%rd134, %rd132, %rd133;
	shr.s64 	%rd135, %rd134, 26;
	setp.lt.s64 	%p333, %rd132, 0;
	and.b64  	%rd136, %rd134, -67108864;
	setp.ne.s64 	%p334, %rd136, %rd132;
	and.pred  	%p335, %p333, %p334;
	selp.u64 	%rd137, 1, 0, %p335;
	sub.s64 	%rd138, %rd137, %rd135;
	shl.b64 	%rd139, %rd138, 26;
	add.s64 	%rd140, %rd139, %rd132;
	shl.b64 	%rd141, %rd140, 2;
	add.s64 	%rd142, %rd3, %rd141;
	st.global.v4.u32 	[%rd142], {%r16350, %r16348, %r16349, %r16347};
	add.s32 	%r16354, %r143, %r16363;
	cvt.s64.s32 	%rd143, %r16354;
	add.s64 	%rd144, %rd143, %rd9;
	shr.u64 	%rd145, %rd144, 38;
	add.s64 	%rd146, %rd144, %rd145;
	shr.u64 	%rd147, %rd146, 26;
	shr.u64 	%rd148, %rd144, 63;
	sub.s64 	%rd149, %rd148, %rd147;
	shl.b64 	%rd150, %rd149, 26;
	add.s64 	%rd151, %rd150, %rd144;
	shl.b64 	%rd152, %rd151, 2;
	add.s64 	%rd153, %rd3, %rd152;
	st.global.v4.u32 	[%rd153], {%r16346, %r16344, %r16345, %r16343};
$L__BB0_186:                            // %pass28635
                                        //   in Loop: Header=BB0_181 Depth=1
	or.b32  	%r16355, %r269, 128;
	setp.lt.u32 	%p336, %r16355, 384;
	@%p336 bra 	$L__BB0_187;
// %bb.189:                             // %pass28729
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r261, %r16299, %r16336, %p315;
	selp.b32 	%r262, %r16336, %r16303, %p315;
	selp.b32 	%r263, %r16307, %r16338, %p315;
	selp.b32 	%r264, %r16338, %r16311, %p315;
	selp.b32 	%r265, %r16315, %r16340, %p315;
	selp.b32 	%r266, %r16340, %r16319, %p315;
	selp.b32 	%r267, %r16323, %r16342, %p315;
	selp.b32 	%r268, %r16342, %r16327, %p315;
	or.b32  	%r16357, %r16363, 1048576;
	or.b32  	%r16358, %r16357, %r142;
	or.b32  	%r16359, %r16358, %r125;
	cvt.s64.s32 	%rd154, %r16359;
	add.s64 	%rd155, %rd154, %rd9;
	shr.u64 	%rd156, %rd155, 38;
	add.s64 	%rd157, %rd155, %rd156;
	shr.s64 	%rd158, %rd157, 26;
	setp.lt.s64 	%p337, %rd155, 0;
	and.b64  	%rd159, %rd157, -67108864;
	setp.ne.s64 	%p338, %rd159, %rd155;
	and.pred  	%p339, %p337, %p338;
	selp.u64 	%rd160, 1, 0, %p339;
	sub.s64 	%rd161, %rd160, %rd158;
	shl.b64 	%rd162, %rd161, 26;
	add.s64 	%rd163, %rd162, %rd155;
	shl.b64 	%rd164, %rd163, 2;
	add.s64 	%rd165, %rd3, %rd164;
	st.global.v4.u32 	[%rd165], {%r261, %r263, %r262, %r264};
	add.s32 	%r16360, %r143, %r16357;
	cvt.s64.s32 	%rd166, %r16360;
	add.s64 	%rd167, %rd166, %rd9;
	shr.u64 	%rd168, %rd167, 38;
	add.s64 	%rd169, %rd167, %rd168;
	shr.u64 	%rd170, %rd169, 26;
	shr.u64 	%rd171, %rd167, 63;
	sub.s64 	%rd172, %rd171, %rd170;
	shl.b64 	%rd173, %rd172, 26;
	add.s64 	%rd174, %rd173, %rd167;
	shl.b64 	%rd175, %rd174, 2;
	add.s64 	%rd176, %rd3, %rd175;
	st.global.v4.u32 	[%rd176], {%r265, %r267, %r266, %r268};
	bra.uni 	$L__BB0_187;
$L__BB0_188:                            // %L70764
	mov.u32 	%r16361, 0;
	st.global.u32 	[%rd4], %r16361;
	ret;
$L__BB0_7:                              // %L246
	mov.u32 	%r16362, 2;
	st.global.u32 	[%rd4], %r16362;
	mov.u64 	%rd177, exception5808;
	cvta.global.u64 	%rd178, %rd177;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd178;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd24;
	st.param.b32 	[param0+8], %r270;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd45, exception1;
	cvta.global.u64 	%rd46, %rd45;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd46;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd24;
	st.param.b32 	[param0+8], %r270;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
