// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_17533
(
	.param .align 8 .b8 julia_power_by_squaring_17533_param_0[16],
	.param .b64 julia_power_by_squaring_17533_param_1,
	.param .b64 julia_power_by_squaring_17533_param_2
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5812[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<306>;
	.reg .b16 	%rs<2414>;
	.reg .b32 	%r<16350>;
	.reg .f32 	%f<1310>;
	.reg .b64 	%rd<121>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r220, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd22, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r225, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r225, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd23, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u32 	%r221, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r226, %r1, 9;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r227, %r3, %r4;
	or.b32  	%r228, %r227, %r226;
	mul.wide.u32 	%rd29, %r228, 4;
	add.s64 	%rd3, %rd23, %rd29;
	mov.u32 	%r229, 1;
	st.global.u32 	[%rd3], %r229;
	setp.lt.s32 	%p2, %r221, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L114
	ld.param.u32 	%r222, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r222, %r221;
	setp.gt.s32 	%p4, %r222, 65536;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L124
	ld.param.u32 	%r223, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r230, %r222, %r221;
	and.b32  	%r231, %r230, 255;
	setp.ne.s32 	%p6, %r231, 0;
	setp.lt.s32 	%p7, %r223, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L130
	ld.param.u32 	%r224, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r224, %r223;
	setp.gt.s32 	%p10, %r224, 512;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L140
	sub.s32 	%r232, %r224, %r223;
	and.b32  	%r233, %r232, 1;
	setp.eq.b32 	%p12, %r233, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass137
	shr.u32 	%r234, %r1, 3;
	cvt.u16.u32 	%rs1, %r234;
	and.b16  	%rs2, %rs1, 255;
	mul.lo.s16 	%rs3, %rs2, 171;
	shr.u16 	%rs4, %rs3, 13;
	bfe.u32 	%r136, %r4, 1, 1;
	and.b32  	%r137, %r4, 1;
	bfe.u32 	%r139, %r4, 2, 1;
	shr.u32 	%r140, %r4, 4;
	shl.b32 	%r243, %r140, 2;
	shl.b32 	%r244, %r139, 3;
	shl.b32 	%r245, %r137, 4;
	shl.b32 	%r246, %r136, 5;
	or.b32  	%r247, %r245, %r246;
	or.b32  	%r248, %r244, %r247;
	or.b32  	%r249, %r243, %r248;
	bfe.u32 	%r142, %r4, 3, 1;
	shl.b32 	%r250, %r142, 1;
	or.b32  	%r143, %r250, %r249;
	or.b32  	%r144, %r143, 64;
	mov.f32 	%f221, 0f40000000;
	mov.f32 	%f222, 0f43FF8000;
	div.approx.f32 	%f159, %f222, %f221;
	cvt.rn.f32.s32 	%f223, %r143;
	sub.f32 	%f224, %f223, %f159;
	mov.f32 	%f253, 0f43000000;
	div.approx.f32 	%f161, %f224, %f253;
	setp.ne.f32 	%p20, %f161, 0f00000000;
	mov.f32 	%f1277, 0f3F800000;
	mov.f32 	%f1262, %f1277;
	@%p20 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L648
	sin.approx.f32 	%f254, %f161;
	div.approx.f32 	%f1262, %f254, %f161;
$L__BB0_10:                             // %L651
	mul.lo.s16 	%rs5, %rs4, 48;
	cvt.rn.f32.s32 	%f257, %r144;
	sub.f32 	%f258, %f257, %f159;
	div.approx.f32 	%f5, %f258, %f253;
	setp.eq.f32 	%p26, %f5, 0f00000000;
	mov.f32 	%f1263, %f1277;
	@%p26 bra 	$L__BB0_12;
// %bb.11:                              // %L668
	sin.approx.f32 	%f288, %f5;
	div.approx.f32 	%f1263, %f288, %f5;
$L__BB0_12:                             // %L671
	sub.s16 	%rs6, %rs1, %rs5;
	or.b32  	%r268, %r143, 1;
	or.b32  	%r6, %r143, 65;
	cvt.rn.f32.s32 	%f292, %r268;
	sub.f32 	%f293, %f292, %f159;
	div.approx.f32 	%f9, %f293, %f253;
	setp.eq.f32 	%p32, %f9, 0f00000000;
	mov.f32 	%f1264, %f1277;
	@%p32 bra 	$L__BB0_14;
// %bb.13:                              // %L750
	sin.approx.f32 	%f323, %f9;
	div.approx.f32 	%f1264, %f323, %f9;
$L__BB0_14:                             // %L753
	shl.b32 	%r126, %r4, 2;
	and.b16  	%rs7, %rs6, 255;
	cvt.rn.f32.s32 	%f326, %r6;
	sub.f32 	%f327, %f326, %f159;
	div.approx.f32 	%f14, %f327, %f253;
	setp.eq.f32 	%p38, %f14, 0f00000000;
	mov.f32 	%f1265, %f1277;
	@%p38 bra 	$L__BB0_16;
// %bb.15:                              // %L770
	sin.approx.f32 	%f357, %f14;
	div.approx.f32 	%f1265, %f357, %f14;
$L__BB0_16:                             // %L773
	and.b32  	%r127, %r126, 32;
	mul.wide.u16 	%r128, %rs7, 128;
	shl.b32 	%r129, %r4, 1;
	or.b32  	%r286, %r143, 128;
	or.b32  	%r8, %r143, 192;
	cvt.rn.f32.s32 	%f361, %r286;
	sub.f32 	%f362, %f361, %f159;
	div.approx.f32 	%f18, %f362, %f253;
	setp.eq.f32 	%p44, %f18, 0f00000000;
	mov.f32 	%f1266, %f1277;
	@%p44 bra 	$L__BB0_18;
// %bb.17:                              // %L852
	sin.approx.f32 	%f392, %f18;
	div.approx.f32 	%f1266, %f392, %f18;
$L__BB0_18:                             // %L855
	mov.f32 	%f225, 0f44004000;
	or.b32  	%r235, %r128, %r127;
	and.b32  	%r130, %r129, 8;
	cvt.rn.f32.s32 	%f395, %r8;
	sub.f32 	%f396, %f395, %f159;
	div.approx.f32 	%f23, %f396, %f253;
	setp.eq.f32 	%p50, %f23, 0f00000000;
	mov.f32 	%f1267, %f1277;
	@%p50 bra 	$L__BB0_20;
// %bb.19:                              // %L872
	sin.approx.f32 	%f426, %f23;
	div.approx.f32 	%f1267, %f426, %f23;
$L__BB0_20:                             // %L875
	div.approx.f32 	%f226, %f224, %f225;
	div.approx.f32 	%f260, %f258, %f225;
	div.approx.f32 	%f295, %f293, %f225;
	div.approx.f32 	%f329, %f327, %f225;
	div.approx.f32 	%f364, %f362, %f225;
	div.approx.f32 	%f398, %f396, %f225;
	or.b32  	%r236, %r235, %r130;
	and.b32  	%r131, %r4, 16;
	or.b32  	%r304, %r143, 129;
	or.b32  	%r10, %r143, 193;
	cvt.rn.f32.s32 	%f430, %r304;
	sub.f32 	%f431, %f430, %f159;
	div.approx.f32 	%f433, %f431, %f225;
	div.approx.f32 	%f27, %f431, %f253;
	setp.eq.f32 	%p56, %f27, 0f00000000;
	mov.f32 	%f1268, %f1277;
	@%p56 bra 	$L__BB0_22;
// %bb.21:                              // %L954
	sin.approx.f32 	%f461, %f27;
	div.approx.f32 	%f1268, %f461, %f27;
$L__BB0_22:                             // %L957
	abs.f32 	%f227, %f226;
	abs.f32 	%f261, %f260;
	abs.f32 	%f296, %f295;
	abs.f32 	%f330, %f329;
	abs.f32 	%f365, %f364;
	abs.f32 	%f399, %f398;
	abs.f32 	%f434, %f433;
	or.b32  	%r237, %r236, %r131;
	and.b32  	%r132, %r126, 4;
	cvt.rn.f32.s32 	%f464, %r10;
	sub.f32 	%f465, %f464, %f159;
	div.approx.f32 	%f467, %f465, %f225;
	abs.f32 	%f468, %f467;
	div.approx.f32 	%f32, %f465, %f253;
	setp.eq.f32 	%p62, %f32, 0f00000000;
	mov.f32 	%f1269, %f1277;
	@%p62 bra 	$L__BB0_24;
// %bb.23:                              // %L974
	sin.approx.f32 	%f495, %f32;
	div.approx.f32 	%f1269, %f495, %f32;
$L__BB0_24:                             // %L977
	setp.gt.f32 	%p15, %f227, 0f4B800000;
	mul.f32 	%f228, %f226, 0f00000000;
	setp.gt.f32 	%p21, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p27, %f296, 0f4B800000;
	mul.f32 	%f297, %f295, 0f00000000;
	setp.gt.f32 	%p33, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p39, %f365, 0f4B800000;
	mul.f32 	%f366, %f364, 0f00000000;
	setp.gt.f32 	%p45, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p51, %f434, 0f4B800000;
	mul.f32 	%f435, %f433, 0f00000000;
	setp.gt.f32 	%p57, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	or.b32  	%r238, %r237, %r132;
	and.b32  	%r239, %r4, 2;
	or.b32  	%r322, %r143, 256;
	or.b32  	%r12, %r143, 320;
	cvt.rn.f32.s32 	%f499, %r322;
	sub.f32 	%f500, %f499, %f159;
	div.approx.f32 	%f502, %f500, %f225;
	abs.f32 	%f503, %f502;
	setp.gt.f32 	%p63, %f503, 0f4B800000;
	mul.f32 	%f504, %f502, 0f00000000;
	div.approx.f32 	%f36, %f500, %f253;
	setp.eq.f32 	%p68, %f36, 0f00000000;
	mov.f32 	%f1270, %f1277;
	@%p68 bra 	$L__BB0_26;
// %bb.25:                              // %L1056
	sin.approx.f32 	%f530, %f36;
	div.approx.f32 	%f1270, %f530, %f36;
$L__BB0_26:                             // %L1059
	selp.f32 	%f229, %f228, %f226, %p15;
	selp.f32 	%f263, %f262, %f260, %p21;
	selp.f32 	%f298, %f297, %f295, %p27;
	selp.f32 	%f332, %f331, %f329, %p33;
	selp.f32 	%f367, %f366, %f364, %p39;
	selp.f32 	%f401, %f400, %f398, %p45;
	selp.f32 	%f436, %f435, %f433, %p51;
	selp.f32 	%f470, %f469, %f467, %p57;
	selp.f32 	%f505, %f504, %f502, %p63;
	or.b32  	%r240, %r238, %r239;
	cvt.rn.f32.s32 	%f533, %r12;
	sub.f32 	%f534, %f533, %f159;
	div.approx.f32 	%f536, %f534, %f225;
	abs.f32 	%f537, %f536;
	setp.gt.f32 	%p69, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	selp.f32 	%f539, %f538, %f536, %p69;
	div.approx.f32 	%f41, %f534, %f253;
	setp.eq.f32 	%p74, %f41, 0f00000000;
	mov.f32 	%f1271, %f1277;
	@%p74 bra 	$L__BB0_28;
// %bb.27:                              // %L1076
	sin.approx.f32 	%f564, %f41;
	div.approx.f32 	%f1271, %f564, %f41;
$L__BB0_28:                             // %L1079
	add.f32 	%f230, %f229, %f229;
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f299, %f298, %f298;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f368, %f367, %f367;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f437, %f436, %f436;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f506, %f505, %f505;
	add.f32 	%f540, %f539, %f539;
	cvt.u16.u32 	%rs8, %r240;
	or.b32  	%r340, %r143, 257;
	or.b32  	%r14, %r143, 321;
	cvt.rn.f32.s32 	%f568, %r340;
	sub.f32 	%f569, %f568, %f159;
	div.approx.f32 	%f571, %f569, %f225;
	abs.f32 	%f572, %f571;
	setp.gt.f32 	%p75, %f572, 0f4B800000;
	mul.f32 	%f573, %f571, 0f00000000;
	selp.f32 	%f574, %f573, %f571, %p75;
	add.f32 	%f575, %f574, %f574;
	div.approx.f32 	%f45, %f569, %f253;
	setp.eq.f32 	%p80, %f45, 0f00000000;
	mov.f32 	%f1272, %f1277;
	@%p80 bra 	$L__BB0_30;
// %bb.29:                              // %L1158
	sin.approx.f32 	%f599, %f45;
	div.approx.f32 	%f1272, %f599, %f45;
$L__BB0_30:                             // %L1161
	mov.b32 	%r251, %f230;
	mov.b32 	%r258, %f264;
	mov.b32 	%r269, %f299;
	mov.b32 	%r276, %f333;
	mov.b32 	%r287, %f368;
	mov.b32 	%r294, %f402;
	mov.b32 	%r305, %f437;
	mov.b32 	%r312, %f471;
	mov.b32 	%r323, %f506;
	mov.b32 	%r330, %f540;
	mov.b32 	%r341, %f575;
	shr.u16 	%rs9, %rs8, 1;
	cvt.rn.f32.s32 	%f602, %r14;
	sub.f32 	%f603, %f602, %f159;
	div.approx.f32 	%f605, %f603, %f225;
	abs.f32 	%f606, %f605;
	setp.gt.f32 	%p81, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	selp.f32 	%f608, %f607, %f605, %p81;
	add.f32 	%f609, %f608, %f608;
	mov.b32 	%r348, %f609;
	div.approx.f32 	%f50, %f603, %f253;
	setp.eq.f32 	%p86, %f50, 0f00000000;
	mov.f32 	%f1273, %f1277;
	@%p86 bra 	$L__BB0_32;
// %bb.31:                              // %L1178
	sin.approx.f32 	%f633, %f50;
	div.approx.f32 	%f1273, %f633, %f50;
$L__BB0_32:                             // %L1181
	and.b32  	%r252, %r251, -2147483648;
	and.b32  	%r259, %r258, -2147483648;
	and.b32  	%r270, %r269, -2147483648;
	and.b32  	%r277, %r276, -2147483648;
	and.b32  	%r288, %r287, -2147483648;
	and.b32  	%r295, %r294, -2147483648;
	and.b32  	%r306, %r305, -2147483648;
	and.b32  	%r313, %r312, -2147483648;
	and.b32  	%r324, %r323, -2147483648;
	and.b32  	%r331, %r330, -2147483648;
	and.b32  	%r342, %r341, -2147483648;
	and.b32  	%r349, %r348, -2147483648;
	or.b16  	%rs14, %rs9, 32;
	or.b32  	%r358, %r143, 384;
	or.b32  	%r16, %r143, 448;
	cvt.rn.f32.s32 	%f637, %r358;
	sub.f32 	%f638, %f637, %f159;
	div.approx.f32 	%f640, %f638, %f225;
	abs.f32 	%f641, %f640;
	setp.gt.f32 	%p87, %f641, 0f4B800000;
	mul.f32 	%f642, %f640, 0f00000000;
	selp.f32 	%f643, %f642, %f640, %p87;
	add.f32 	%f644, %f643, %f643;
	mov.b32 	%r359, %f644;
	and.b32  	%r360, %r359, -2147483648;
	div.approx.f32 	%f54, %f638, %f253;
	setp.eq.f32 	%p92, %f54, 0f00000000;
	mov.f32 	%f1274, %f1277;
	@%p92 bra 	$L__BB0_34;
// %bb.33:                              // %L1260
	sin.approx.f32 	%f668, %f54;
	div.approx.f32 	%f1274, %f668, %f54;
$L__BB0_34:                             // %L1263
	or.b32  	%r253, %r252, 1056964608;
	or.b32  	%r260, %r259, 1056964608;
	or.b32  	%r271, %r270, 1056964608;
	or.b32  	%r278, %r277, 1056964608;
	or.b32  	%r289, %r288, 1056964608;
	or.b32  	%r296, %r295, 1056964608;
	or.b32  	%r307, %r306, 1056964608;
	or.b32  	%r314, %r313, 1056964608;
	or.b32  	%r325, %r324, 1056964608;
	or.b32  	%r332, %r331, 1056964608;
	or.b32  	%r343, %r342, 1056964608;
	or.b32  	%r350, %r349, 1056964608;
	or.b32  	%r361, %r360, 1056964608;
	mul.hi.u16 	%rs10, %rs9, -21845;
	mul.hi.u16 	%rs15, %rs14, -21845;
	cvt.rn.f32.s32 	%f671, %r16;
	sub.f32 	%f672, %f671, %f159;
	div.approx.f32 	%f674, %f672, %f225;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p93, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	selp.f32 	%f677, %f676, %f674, %p93;
	add.f32 	%f678, %f677, %f677;
	mov.b32 	%r366, %f678;
	and.b32  	%r367, %r366, -2147483648;
	or.b32  	%r368, %r367, 1056964608;
	div.approx.f32 	%f59, %f672, %f253;
	setp.eq.f32 	%p98, %f59, 0f00000000;
	mov.f32 	%f1275, %f1277;
	@%p98 bra 	$L__BB0_36;
// %bb.35:                              // %L1280
	sin.approx.f32 	%f702, %f59;
	div.approx.f32 	%f1275, %f702, %f59;
$L__BB0_36:                             // %L1283
	mov.b32 	%f231, %r253;
	mov.b32 	%f265, %r260;
	mov.b32 	%f300, %r271;
	mov.b32 	%f334, %r278;
	mov.b32 	%f369, %r289;
	mov.b32 	%f403, %r296;
	mov.b32 	%f438, %r307;
	mov.b32 	%f472, %r314;
	mov.b32 	%f507, %r325;
	mov.b32 	%f541, %r332;
	mov.b32 	%f576, %r343;
	mov.b32 	%f610, %r350;
	mov.b32 	%f645, %r361;
	mov.b32 	%f679, %r368;
	shr.u16 	%rs11, %rs10, 11;
	shr.u16 	%rs16, %rs15, 11;
	or.b32  	%r376, %r143, 385;
	or.b32  	%r18, %r143, 449;
	cvt.rn.f32.s32 	%f706, %r376;
	sub.f32 	%f707, %f706, %f159;
	div.approx.f32 	%f709, %f707, %f225;
	abs.f32 	%f710, %f709;
	setp.gt.f32 	%p99, %f710, 0f4B800000;
	mul.f32 	%f711, %f709, 0f00000000;
	selp.f32 	%f712, %f711, %f709, %p99;
	add.f32 	%f713, %f712, %f712;
	mov.b32 	%r377, %f713;
	and.b32  	%r378, %r377, -2147483648;
	or.b32  	%r379, %r378, 1056964608;
	mov.b32 	%f714, %r379;
	div.approx.f32 	%f63, %f707, %f253;
	setp.eq.f32 	%p104, %f63, 0f00000000;
	mov.f32 	%f1276, %f1277;
	@%p104 bra 	$L__BB0_38;
// %bb.37:                              // %L1362
	sin.approx.f32 	%f737, %f63;
	div.approx.f32 	%f1276, %f737, %f63;
$L__BB0_38:                             // %L1365
	add.f32 	%f232, %f230, %f231;
	abs.f32 	%f234, %f230;
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f301, %f299, %f300;
	abs.f32 	%f303, %f299;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f370, %f368, %f369;
	abs.f32 	%f372, %f368;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f439, %f437, %f438;
	abs.f32 	%f441, %f437;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f508, %f506, %f507;
	abs.f32 	%f510, %f506;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f577, %f575, %f576;
	abs.f32 	%f579, %f575;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f646, %f644, %f645;
	abs.f32 	%f648, %f644;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f715, %f713, %f714;
	abs.f32 	%f717, %f713;
	mul.lo.s16 	%rs12, %rs11, 3072;
	mul.lo.s16 	%rs17, %rs16, 3072;
	shr.u32 	%r135, %r4, 1;
	shr.u32 	%r141, %r4, 3;
	cvt.rn.f32.s32 	%f740, %r18;
	sub.f32 	%f741, %f740, %f159;
	div.approx.f32 	%f743, %f741, %f225;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p105, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p105;
	add.f32 	%f747, %f746, %f746;
	mov.b32 	%r384, %f747;
	and.b32  	%r385, %r384, -2147483648;
	or.b32  	%r386, %r385, 1056964608;
	mov.b32 	%f748, %r386;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	div.approx.f32 	%f68, %f741, %f253;
	setp.eq.f32 	%p110, %f68, 0f00000000;
	@%p110 bra 	$L__BB0_40;
// %bb.39:                              // %L1382
	sin.approx.f32 	%f771, %f68;
	div.approx.f32 	%f1277, %f771, %f68;
$L__BB0_40:                             // %L1385
	cvt.rzi.f32.f32 	%f233, %f232;
	setp.gt.f32 	%p16, %f234, 0f4B000000;
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p22, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f302, %f301;
	setp.gt.f32 	%p28, %f303, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p34, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f371, %f370;
	setp.gt.f32 	%p40, %f372, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p46, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f440, %f439;
	setp.gt.f32 	%p52, %f441, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p58, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f509, %f508;
	setp.gt.f32 	%p64, %f510, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p70, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f578, %f577;
	setp.gt.f32 	%p76, %f579, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p82, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f647, %f646;
	setp.gt.f32 	%p88, %f648, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p94, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f716, %f715;
	setp.gt.f32 	%p100, %f717, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p106, %f751, 0f4B000000;
	sub.s16 	%rs13, %rs9, %rs12;
	sub.s16 	%rs18, %rs14, %rs17;
	mul.lo.s32 	%r406, %r143, 127;
	and.b32  	%r407, %r406, 255;
	cvt.rn.f32.s32 	%f774, %r407;
	div.approx.f32 	%f776, %f774, %f253;
	add.f32 	%f777, %f776, %f776;
	mov.b32 	%r408, %f777;
	and.b32  	%r409, %r408, -2147483648;
	or.b32  	%r410, %r409, 1056964608;
	mov.b32 	%f778, %r410;
	add.f32 	%f779, %f777, %f778;
	cvt.rzi.f32.f32 	%f780, %f779;
	abs.f32 	%f781, %f777;
	setp.gt.f32 	%p111, %f781, 0f4B000000;
	selp.f32 	%f782, %f777, %f780, %p111;
	cvt.rzi.f32.f32 	%f783, %f777;
	setp.lt.f32 	%p112, %f781, 0f3F000000;
	add.s32 	%r416, %r406, 192;
	and.b32  	%r417, %r416, 255;
	cvt.rn.f32.s32 	%f809, %r417;
	div.approx.f32 	%f810, %f809, %f253;
	add.f32 	%f811, %f810, %f810;
	mov.b32 	%r418, %f811;
	and.b32  	%r419, %r418, -2147483648;
	or.b32  	%r420, %r419, 1056964608;
	mov.b32 	%f812, %r420;
	add.f32 	%f813, %f811, %f812;
	cvt.rzi.f32.f32 	%f814, %f813;
	abs.f32 	%f815, %f811;
	setp.gt.f32 	%p118, %f815, 0f4B000000;
	selp.f32 	%f816, %f811, %f814, %p118;
	cvt.rzi.f32.f32 	%f817, %f811;
	setp.lt.f32 	%p119, %f815, 0f3F000000;
	and.b32  	%r426, %r141, 2;
	and.b32  	%r427, %r135, 4;
	or.b32  	%r428, %r139, %r426;
	or.b32  	%r24, %r428, %r427;
	and.b32  	%r429, %r4, 3;
	mul.lo.s32 	%r430, %r429, %r24;
	shl.b32 	%r431, %r430, 1;
	neg.s32 	%r432, %r431;
	cvt.rn.f32.s32 	%f842, %r432;
	mov.f32 	%f843, 0f41000000;
	div.approx.f32 	%f71, %f842, %f843;
	abs.f32 	%f1300, %f71;
	setp.lt.f32 	%p125, %f1300, 0f40000000;
	@%p125 bra 	$L__BB0_132;
// %bb.41:
	setp.gtu.f32 	%p126, %f1300, 0f4B800000;
	@%p126 bra 	$L__BB0_128;
	bra.uni 	$L__BB0_42;
$L__BB0_128:
	mov.b32 	%r146, %f1300;
	and.b32  	%r433, %r146, 8388607;
	or.b32  	%r16319, %r433, 1065353216;
	mov.b32 	%f1299, %r16319;
	add.s32 	%r434, %r146, -1073741824;
	and.b32  	%r16320, %r434, -8388608;
	setp.eq.s32 	%p132, %r16320, 0;
	@%p132 bra 	$L__BB0_131;
// %bb.129:                             // %__nv_fmaf_rn.exit4.i.i.i1743.preheader
	mov.f32 	%f853, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f852,%f853;
	// end inline asm
$L__BB0_130:                            // %__nv_fmaf_rn.exit4.i.i.i1743
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r435, %r16320, 192937984;
	add.s32 	%r436, %r16319, %r435;
	mov.b32 	%f854, %r436;
	mul.f32 	%f855, %f852, %f854;
	sub.f32 	%f856, %f854, %f855;
	fma.rn.f32 	%f857, %f856, %f852, %f855;
	sub.f32 	%f858, %f854, %f857;
	fma.rz.f32 	%f859, %f858, %f852, %f857;
	cvt.rzi.f32.f32 	%f860, %f859;
	sub.f32 	%f1299, %f854, %f860;
	sub.s32 	%r16320, %r16320, %r435;
	mov.b32 	%r16319, %f1299;
	setp.ne.s32 	%p133, %r16320, 0;
	setp.ne.s32 	%p134, %r16319, 0;
	and.pred  	%p135, %p133, %p134;
	@%p135 bra 	$L__BB0_130;
$L__BB0_131:                            // %__internal_fmodf_slowpath_mod.exit.i.i1745
	setp.gt.u32 	%p136, %r146, 2139095039;
	selp.f32 	%f861, 0f7FFFFFFF, 0f4B800000, %p136;
	mul.f32 	%f862, %f1299, 0f34000000;
	mul.f32 	%f1300, %f861, %f862;
	bra.uni 	$L__BB0_132;
$L__BB0_42:                             // %__nv_fast_fdividef.exit.i.i.i1722
	div.approx.f32 	%f845, %f1300, %f221;
	cvt.rzi.f32.f32 	%f1298, %f845;
	fma.rn.f32 	%f163, %f1298, 0fC0000000, %f1300;
	mov.b32 	%r145, %f163;
	setp.lt.u32 	%p127, %r145, 1073741824;
	@%p127 bra 	$L__BB0_127;
// %bb.43:
	setp.lt.u32 	%p128, %r145, -2147483647;
	@%p128 bra 	$L__BB0_125;
// %bb.44:
	add.f32 	%f850, %f1298, 0fBF800000;
	setp.lt.f32 	%p131, %f163, 0fC0000000;
	add.f32 	%f851, %f850, 0fBF800000;
	selp.f32 	%f1298, %f851, %f850, %p131;
	bra.uni 	$L__BB0_127;
$L__BB0_125:
	add.f32 	%f1298, %f1298, 0f3F800000;
	setp.ltu.f32 	%p129, %f163, 0f40800000;
	@%p129 bra 	$L__BB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i1726
	add.f32 	%f846, %f1298, 0f3F800000;
	fma.rn.f32 	%f848, %f221, 0fC0400000, %f163;
	setp.ge.f32 	%p130, %f848, 0f00000000;
	add.f32 	%f849, %f846, 0f3F800000;
	selp.f32 	%f1298, %f849, %f846, %p130;
$L__BB0_127:                            // %__internal_fmodf_fastpath_quot.exit.i.i1729
	fma.rn.f32 	%f1300, %f1298, 0fC0000000, %f1300;
$L__BB0_132:                            // %__internal_fmodf_kernel.exit.i1748
	selp.f32 	%f235, %f230, %f233, %p16;
	cvt.rzi.f32.f32 	%f236, %f230;
	setp.lt.f32 	%p17, %f234, 0f3F000000;
	selp.f32 	%f269, %f264, %f267, %p22;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p23, %f268, 0f3F000000;
	selp.f32 	%f304, %f299, %f302, %p28;
	cvt.rzi.f32.f32 	%f305, %f299;
	setp.lt.f32 	%p29, %f303, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p34;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p35, %f337, 0f3F000000;
	selp.f32 	%f373, %f368, %f371, %p40;
	cvt.rzi.f32.f32 	%f374, %f368;
	setp.lt.f32 	%p41, %f372, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p46;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p47, %f406, 0f3F000000;
	selp.f32 	%f442, %f437, %f440, %p52;
	cvt.rzi.f32.f32 	%f443, %f437;
	setp.lt.f32 	%p53, %f441, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p58;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p59, %f475, 0f3F000000;
	selp.f32 	%f511, %f506, %f509, %p64;
	cvt.rzi.f32.f32 	%f512, %f506;
	setp.lt.f32 	%p65, %f510, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p70;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p71, %f544, 0f3F000000;
	selp.f32 	%f580, %f575, %f578, %p76;
	cvt.rzi.f32.f32 	%f581, %f575;
	setp.lt.f32 	%p77, %f579, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p82;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p83, %f613, 0f3F000000;
	selp.f32 	%f649, %f644, %f647, %p88;
	cvt.rzi.f32.f32 	%f650, %f644;
	setp.lt.f32 	%p89, %f648, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p94;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p95, %f682, 0f3F000000;
	selp.f32 	%f718, %f713, %f716, %p100;
	cvt.rzi.f32.f32 	%f719, %f713;
	setp.lt.f32 	%p101, %f717, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p106;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p107, %f751, 0f3F000000;
	selp.f32 	%f784, %f783, %f782, %p112;
	selp.f32 	%f818, %f817, %f816, %p119;
	cvt.u32.u16 	%r241, %rs13;
	cvt.u32.u16 	%r242, %rs18;
	abs.f32 	%f863, %f1300;
	setp.gtu.f32 	%p137, %f863, 0f7F800000;
	@%p137 bra 	$L__BB0_134;
// %bb.133:
	mov.b32 	%r437, %f71;
	and.b32  	%r438, %r437, -2147483648;
	mov.b32 	%r439, %f1300;
	or.b32  	%r440, %r438, %r439;
	mov.b32 	%f1300, %r440;
$L__BB0_134:                            // %__nv_fmodf.exit1749
	selp.f32 	%f237, %f236, %f235, %p17;
	selp.f32 	%f271, %f270, %f269, %p23;
	selp.f32 	%f306, %f305, %f304, %p29;
	selp.f32 	%f340, %f339, %f338, %p35;
	selp.f32 	%f375, %f374, %f373, %p41;
	selp.f32 	%f409, %f408, %f407, %p47;
	selp.f32 	%f444, %f443, %f442, %p53;
	selp.f32 	%f478, %f477, %f476, %p59;
	selp.f32 	%f513, %f512, %f511, %p65;
	selp.f32 	%f547, %f546, %f545, %p71;
	selp.f32 	%f582, %f581, %f580, %p77;
	selp.f32 	%f616, %f615, %f614, %p83;
	selp.f32 	%f651, %f650, %f649, %p89;
	selp.f32 	%f685, %f684, %f683, %p95;
	selp.f32 	%f720, %f719, %f718, %p101;
	selp.f32 	%f754, %f753, %f752, %p107;
	fma.rn.f32 	%f785, %f784, 0fBF000000, %f776;
	fma.rn.f32 	%f819, %f818, 0fBF000000, %f810;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd30, %r241, 4;
	mul.wide.u32 	%rd32, %r242, 4;
	add.f32 	%f864, %f1300, %f1300;
	mov.b32 	%r441, %f864;
	and.b32  	%r442, %r441, -2147483648;
	or.b32  	%r443, %r442, 1056964608;
	mov.b32 	%f865, %r443;
	add.f32 	%f866, %f864, %f865;
	cvt.rzi.f32.f32 	%f867, %f866;
	abs.f32 	%f868, %f864;
	setp.gt.f32 	%p138, %f868, 0f4B000000;
	selp.f32 	%f869, %f864, %f867, %p138;
	cvt.rzi.f32.f32 	%f870, %f864;
	setp.lt.f32 	%p139, %f868, 0f3F000000;
	selp.f32 	%f871, %f870, %f869, %p139;
	fma.rn.f32 	%f872, %f871, 0fBF000000, %f1300;
	and.b32  	%r449, %r129, 6;
	mov.u32 	%r450, -8;
	sub.s32 	%r451, %r450, %r449;
	mul.lo.s32 	%r452, %r24, %r451;
	cvt.rn.f32.s32 	%f894, %r452;
	div.approx.f32 	%f179, %f894, %f843;
	abs.f32 	%f1280, %f179;
	setp.lt.f32 	%p145, %f1280, 0f40000000;
	@%p145 bra 	$L__BB0_56;
// %bb.45:
	setp.gtu.f32 	%p146, %f1280, 0f4B800000;
	@%p146 bra 	$L__BB0_52;
	bra.uni 	$L__BB0_46;
$L__BB0_52:
	mov.b32 	%r26, %f1280;
	and.b32  	%r453, %r26, 8388607;
	or.b32  	%r16284, %r453, 1065353216;
	mov.b32 	%f1279, %r16284;
	add.s32 	%r454, %r26, -1073741824;
	and.b32  	%r16285, %r454, -8388608;
	setp.eq.s32 	%p152, %r16285, 0;
	@%p152 bra 	$L__BB0_55;
// %bb.53:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f905, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f904,%f905;
	// end inline asm
$L__BB0_54:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r455, %r16285, 192937984;
	add.s32 	%r456, %r16284, %r455;
	mov.b32 	%f906, %r456;
	mul.f32 	%f907, %f904, %f906;
	sub.f32 	%f908, %f906, %f907;
	fma.rn.f32 	%f909, %f908, %f904, %f907;
	sub.f32 	%f910, %f906, %f909;
	fma.rz.f32 	%f911, %f910, %f904, %f909;
	cvt.rzi.f32.f32 	%f912, %f911;
	sub.f32 	%f1279, %f906, %f912;
	sub.s32 	%r16285, %r16285, %r455;
	mov.b32 	%r16284, %f1279;
	setp.ne.s32 	%p153, %r16285, 0;
	setp.ne.s32 	%p154, %r16284, 0;
	and.pred  	%p155, %p153, %p154;
	@%p155 bra 	$L__BB0_54;
$L__BB0_55:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p156, %r26, 2139095039;
	selp.f32 	%f913, 0f7FFFFFFF, 0f4B800000, %p156;
	mul.f32 	%f914, %f1279, 0f34000000;
	mul.f32 	%f1280, %f913, %f914;
	bra.uni 	$L__BB0_56;
$L__BB0_46:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f897, %f1280, %f221;
	cvt.rzi.f32.f32 	%f1278, %f897;
	fma.rn.f32 	%f74, %f1278, 0fC0000000, %f1280;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p147, %r25, 1073741824;
	@%p147 bra 	$L__BB0_51;
// %bb.47:
	setp.lt.u32 	%p148, %r25, -2147483647;
	@%p148 bra 	$L__BB0_49;
// %bb.48:
	add.f32 	%f902, %f1278, 0fBF800000;
	setp.lt.f32 	%p151, %f74, 0fC0000000;
	add.f32 	%f903, %f902, 0fBF800000;
	selp.f32 	%f1278, %f903, %f902, %p151;
	bra.uni 	$L__BB0_51;
$L__BB0_49:
	add.f32 	%f1278, %f1278, 0f3F800000;
	setp.ltu.f32 	%p149, %f74, 0f40800000;
	@%p149 bra 	$L__BB0_51;
// %bb.50:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f898, %f1278, 0f3F800000;
	fma.rn.f32 	%f900, %f221, 0fC0400000, %f74;
	setp.ge.f32 	%p150, %f900, 0f00000000;
	add.f32 	%f901, %f898, 0f3F800000;
	selp.f32 	%f1278, %f901, %f898, %p150;
$L__BB0_51:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1280, %f1278, 0fC0000000, %f1280;
$L__BB0_56:                             // %__internal_fmodf_kernel.exit.i
	fma.rn.f32 	%f238, %f237, 0fBF000000, %f229;
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f307, %f306, 0fBF000000, %f298;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f376, %f375, 0fBF000000, %f367;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f445, %f444, 0fBF000000, %f436;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f514, %f513, 0fBF000000, %f505;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f583, %f582, 0fBF000000, %f574;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f652, %f651, 0fBF000000, %f643;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f721, %f720, 0fBF000000, %f712;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	mul.f32 	%f786, %f785, %f785;
	mul.f32 	%f820, %f819, %f819;
	mul.f32 	%f873, %f872, %f872;
	add.s64 	%rd31, %rd1, %rd30;
	add.s64 	%rd33, %rd1, %rd32;
	abs.f32 	%f915, %f1280;
	setp.gtu.f32 	%p157, %f915, 0f7F800000;
	@%p157 bra 	$L__BB0_58;
// %bb.57:
	mov.b32 	%r457, %f179;
	and.b32  	%r458, %r457, -2147483648;
	mov.b32 	%r459, %f1280;
	or.b32  	%r460, %r458, %r459;
	mov.b32 	%f1280, %r460;
$L__BB0_58:                             // %__nv_fmodf.exit
	mul.f32 	%f239, %f238, %f238;
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f308, %f307, %f307;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f377, %f376, %f376;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f446, %f445, %f445;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f515, %f514, %f514;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f584, %f583, %f583;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f653, %f652, %f652;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f722, %f721, %f721;
	mul.f32 	%f756, %f755, %f755;
	fma.rn.f32 	%f787, %f786, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f788, %f786, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f821, %f820, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f822, %f820, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f874, %f873, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f875, %f873, 0f3E684E12, 0fBFAAD2E0;
	ld.global.u32 	%r133, [%rd31];
	ld.global.u32 	%r134, [%rd33];
	add.f32 	%f916, %f1280, %f1280;
	mov.b32 	%r473, %f916;
	and.b32  	%r474, %r473, -2147483648;
	or.b32  	%r475, %r474, 1056964608;
	mov.b32 	%f917, %r475;
	add.f32 	%f918, %f916, %f917;
	cvt.rzi.f32.f32 	%f919, %f918;
	abs.f32 	%f920, %f916;
	setp.gt.f32 	%p158, %f920, 0f4B000000;
	selp.f32 	%f921, %f916, %f919, %p158;
	cvt.rzi.f32.f32 	%f922, %f916;
	setp.lt.f32 	%p159, %f920, 0f3F000000;
	selp.f32 	%f923, %f922, %f921, %p159;
	fma.rn.f32 	%f924, %f923, 0fBF000000, %f1280;
	mul.f32 	%f925, %f924, %f924;
	fma.rn.f32 	%f926, %f925, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f927, %f925, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r481, %r137, 2147483646;
	shl.b32 	%r482, %r136, 2;
	sub.s32 	%r483, %r481, %r482;
	mul.lo.s32 	%r484, %r483, %r24;
	shl.b32 	%r37, %r484, 1;
	mov.u64 	%rd34, 2;
	mov.u64 	%rd35, 6;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r220;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd34;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd35;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_17533, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd36, [retval0+0];
	} // callseq 2
	cvt.rn.f32.s32 	%f88, %r37;
	cvt.rn.f32.s64 	%f948, %rd36;
	div.approx.f32 	%f89, %f88, %f948;
	abs.f32 	%f1304, %f89;
	setp.lt.f32 	%p165, %f1304, 0f40000000;
	@%p165 bra 	$L__BB0_142;
// %bb.59:
	setp.gtu.f32 	%p166, %f1304, 0f4B800000;
	@%p166 bra 	$L__BB0_138;
	bra.uni 	$L__BB0_60;
$L__BB0_138:
	mov.b32 	%r154, %f1304;
	and.b32  	%r485, %r154, 8388607;
	or.b32  	%r16321, %r485, 1065353216;
	mov.b32 	%f1303, %r16321;
	add.s32 	%r486, %r154, -1073741824;
	and.b32  	%r16322, %r486, -8388608;
	setp.eq.s32 	%p172, %r16322, 0;
	@%p172 bra 	$L__BB0_141;
// %bb.139:                             // %__nv_fmaf_rn.exit4.i.i.i1774.preheader
	mov.f32 	%f958, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f957,%f958;
	// end inline asm
$L__BB0_140:                            // %__nv_fmaf_rn.exit4.i.i.i1774
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r487, %r16322, 192937984;
	add.s32 	%r488, %r16321, %r487;
	mov.b32 	%f959, %r488;
	mul.f32 	%f960, %f957, %f959;
	sub.f32 	%f961, %f959, %f960;
	fma.rn.f32 	%f962, %f961, %f957, %f960;
	sub.f32 	%f963, %f959, %f962;
	fma.rz.f32 	%f964, %f963, %f957, %f962;
	cvt.rzi.f32.f32 	%f965, %f964;
	sub.f32 	%f1303, %f959, %f965;
	sub.s32 	%r16322, %r16322, %r487;
	mov.b32 	%r16321, %f1303;
	setp.ne.s32 	%p173, %r16322, 0;
	setp.ne.s32 	%p174, %r16321, 0;
	and.pred  	%p175, %p173, %p174;
	@%p175 bra 	$L__BB0_140;
$L__BB0_141:                            // %__internal_fmodf_slowpath_mod.exit.i.i1776
	setp.gt.u32 	%p176, %r154, 2139095039;
	selp.f32 	%f966, 0f7FFFFFFF, 0f4B800000, %p176;
	mul.f32 	%f967, %f1303, 0f34000000;
	mul.f32 	%f1304, %f966, %f967;
	bra.uni 	$L__BB0_142;
$L__BB0_60:                             // %__nv_fast_fdividef.exit.i.i.i1753
	div.approx.f32 	%f950, %f1304, %f221;
	cvt.rzi.f32.f32 	%f1302, %f950;
	fma.rn.f32 	%f182, %f1302, 0fC0000000, %f1304;
	mov.b32 	%r153, %f182;
	setp.lt.u32 	%p167, %r153, 1073741824;
	@%p167 bra 	$L__BB0_137;
// %bb.61:
	setp.lt.u32 	%p168, %r153, -2147483647;
	@%p168 bra 	$L__BB0_135;
// %bb.62:
	add.f32 	%f955, %f1302, 0fBF800000;
	setp.lt.f32 	%p171, %f182, 0fC0000000;
	add.f32 	%f956, %f955, 0fBF800000;
	selp.f32 	%f1302, %f956, %f955, %p171;
	bra.uni 	$L__BB0_137;
$L__BB0_135:
	add.f32 	%f1302, %f1302, 0f3F800000;
	setp.ltu.f32 	%p169, %f182, 0f40800000;
	@%p169 bra 	$L__BB0_137;
// %bb.136:                             // %__nv_fmaf_rn.exit.i.i.i1757
	add.f32 	%f951, %f1302, 0f3F800000;
	fma.rn.f32 	%f953, %f221, 0fC0400000, %f182;
	setp.ge.f32 	%p170, %f953, 0f00000000;
	add.f32 	%f954, %f951, 0f3F800000;
	selp.f32 	%f1302, %f954, %f951, %p170;
$L__BB0_137:                            // %__internal_fmodf_fastpath_quot.exit.i.i1760
	fma.rn.f32 	%f1304, %f1302, 0fC0000000, %f1304;
$L__BB0_142:                            // %__internal_fmodf_kernel.exit.i1779
	cvt.rzi.s32.f32 	%r254, %f237;
	fma.rn.f32 	%f240, %f239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f241, %f239, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r261, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r272, %f306;
	fma.rn.f32 	%f309, %f308, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f310, %f308, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r279, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r290, %f375;
	fma.rn.f32 	%f378, %f377, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f379, %f377, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r297, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r308, %f444;
	fma.rn.f32 	%f447, %f446, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f448, %f446, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r315, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r326, %f513;
	fma.rn.f32 	%f516, %f515, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f517, %f515, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r333, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r344, %f582;
	fma.rn.f32 	%f585, %f584, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f586, %f584, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r351, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r362, %f651;
	fma.rn.f32 	%f654, %f653, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f655, %f653, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r369, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r380, %f720;
	fma.rn.f32 	%f723, %f722, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f724, %f722, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r387, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r411, %f784;
	fma.rn.f32 	%f789, %f787, %f786, 0fC0A55DF6;
	fma.rn.f32 	%f790, %f788, %f786, 0f4081E0CF;
	fma.rn.f32 	%f791, %f786, %f785, 0f00000000;
	cvt.rzi.s32.f32 	%r421, %f818;
	fma.rn.f32 	%f823, %f821, %f820, 0fC0A55DF6;
	fma.rn.f32 	%f824, %f822, %f820, 0f4081E0CF;
	fma.rn.f32 	%f825, %f820, %f819, 0f00000000;
	cvt.rzi.s32.f32 	%r444, %f871;
	fma.rn.f32 	%f876, %f874, %f873, 0fC0A55DF6;
	fma.rn.f32 	%f877, %f875, %f873, 0f4081E0CF;
	fma.rn.f32 	%f878, %f873, %f872, 0f00000000;
	cvt.rzi.s32.f32 	%r476, %f923;
	fma.rn.f32 	%f928, %f926, %f925, 0fC0A55DF6;
	fma.rn.f32 	%f929, %f927, %f925, 0f4081E0CF;
	fma.rn.f32 	%f930, %f925, %f924, 0f00000000;
	abs.f32 	%f968, %f1304;
	setp.gtu.f32 	%p177, %f968, 0f7F800000;
	@%p177 bra 	$L__BB0_144;
// %bb.143:
	mov.b32 	%r489, %f89;
	and.b32  	%r490, %r489, -2147483648;
	mov.b32 	%r491, %f1304;
	or.b32  	%r492, %r490, %r491;
	mov.b32 	%f1304, %r492;
$L__BB0_144:                            // %__nv_fmodf.exit1780
	add.s32 	%r255, %r254, 1;
	fma.rn.f32 	%f242, %f240, %f239, 0fC0A55DF6;
	fma.rn.f32 	%f243, %f241, %f239, 0f4081E0CF;
	fma.rn.f32 	%f244, %f239, %f238, 0f00000000;
	add.s32 	%r262, %r261, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r273, %r272, 1;
	fma.rn.f32 	%f311, %f309, %f308, 0fC0A55DF6;
	fma.rn.f32 	%f312, %f310, %f308, 0f4081E0CF;
	fma.rn.f32 	%f313, %f308, %f307, 0f00000000;
	add.s32 	%r280, %r279, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r291, %r290, 1;
	fma.rn.f32 	%f380, %f378, %f377, 0fC0A55DF6;
	fma.rn.f32 	%f381, %f379, %f377, 0f4081E0CF;
	fma.rn.f32 	%f382, %f377, %f376, 0f00000000;
	add.s32 	%r298, %r297, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r309, %r308, 1;
	fma.rn.f32 	%f449, %f447, %f446, 0fC0A55DF6;
	fma.rn.f32 	%f450, %f448, %f446, 0f4081E0CF;
	fma.rn.f32 	%f451, %f446, %f445, 0f00000000;
	add.s32 	%r316, %r315, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r327, %r326, 1;
	fma.rn.f32 	%f518, %f516, %f515, 0fC0A55DF6;
	fma.rn.f32 	%f519, %f517, %f515, 0f4081E0CF;
	fma.rn.f32 	%f520, %f515, %f514, 0f00000000;
	add.s32 	%r334, %r333, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r345, %r344, 1;
	fma.rn.f32 	%f587, %f585, %f584, 0fC0A55DF6;
	fma.rn.f32 	%f588, %f586, %f584, 0f4081E0CF;
	fma.rn.f32 	%f589, %f584, %f583, 0f00000000;
	add.s32 	%r352, %r351, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r363, %r362, 1;
	fma.rn.f32 	%f656, %f654, %f653, 0fC0A55DF6;
	fma.rn.f32 	%f657, %f655, %f653, 0f4081E0CF;
	fma.rn.f32 	%f658, %f653, %f652, 0f00000000;
	add.s32 	%r370, %r369, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r381, %r380, 1;
	fma.rn.f32 	%f725, %f723, %f722, 0fC0A55DF6;
	fma.rn.f32 	%f726, %f724, %f722, 0f4081E0CF;
	fma.rn.f32 	%f727, %f722, %f721, 0f00000000;
	add.s32 	%r388, %r387, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	fma.rn.f32 	%f792, %f790, %f786, 0fC09DE9E6;
	fma.rn.f32 	%f793, %f789, %f791, 0f00000000;
	and.b32  	%r412, %r411, 1;
	fma.rn.f32 	%f826, %f824, %f820, 0fC09DE9E6;
	fma.rn.f32 	%f827, %f823, %f825, 0f00000000;
	and.b32  	%r422, %r421, 1;
	fma.rn.f32 	%f879, %f877, %f873, 0fC09DE9E6;
	fma.rn.f32 	%f880, %f876, %f878, 0f00000000;
	and.b32  	%r445, %r444, 1;
	fma.rn.f32 	%f931, %f929, %f925, 0fC09DE9E6;
	fma.rn.f32 	%f932, %f928, %f930, 0f00000000;
	and.b32  	%r477, %r476, 1;
	add.f32 	%f969, %f1304, %f1304;
	mov.b32 	%r493, %f969;
	and.b32  	%r494, %r493, -2147483648;
	or.b32  	%r495, %r494, 1056964608;
	mov.b32 	%f970, %r495;
	add.f32 	%f971, %f969, %f970;
	cvt.rzi.f32.f32 	%f972, %f971;
	abs.f32 	%f973, %f969;
	setp.gt.f32 	%p178, %f973, 0f4B000000;
	selp.f32 	%f974, %f969, %f972, %p178;
	cvt.rzi.f32.f32 	%f975, %f969;
	setp.lt.f32 	%p179, %f973, 0f3F000000;
	selp.f32 	%f976, %f975, %f974, %p179;
	cvt.rzi.s32.f32 	%r496, %f976;
	fma.rn.f32 	%f977, %f976, 0fBF000000, %f1304;
	mul.f32 	%f978, %f977, %f977;
	fma.rn.f32 	%f979, %f978, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f980, %f978, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f981, %f979, %f978, 0fC0A55DF6;
	fma.rn.f32 	%f982, %f980, %f978, 0f4081E0CF;
	fma.rn.f32 	%f983, %f978, %f977, 0f00000000;
	shl.b32 	%r501, %r24, 4;
	sub.s32 	%r502, %r37, %r501;
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r220;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd34;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd35;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_17533, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd40, [retval0+0];
	} // callseq 3
	cvt.rn.f32.s32 	%f198, %r502;
	cvt.rn.f32.s64 	%f999, %rd40;
	div.approx.f32 	%f199, %f198, %f999;
	abs.f32 	%f1284, %f199;
	setp.lt.f32 	%p185, %f1284, 0f40000000;
	@%p185 bra 	$L__BB0_74;
// %bb.63:
	setp.gtu.f32 	%p186, %f1284, 0f4B800000;
	@%p186 bra 	$L__BB0_70;
	bra.uni 	$L__BB0_64;
$L__BB0_70:
	mov.b32 	%r39, %f1284;
	and.b32  	%r503, %r39, 8388607;
	or.b32  	%r16286, %r503, 1065353216;
	mov.b32 	%f1283, %r16286;
	add.s32 	%r504, %r39, -1073741824;
	and.b32  	%r16287, %r504, -8388608;
	setp.eq.s32 	%p192, %r16287, 0;
	@%p192 bra 	$L__BB0_73;
// %bb.71:                              // %__nv_fmaf_rn.exit4.i.i.i1619.preheader
	mov.f32 	%f1009, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1008,%f1009;
	// end inline asm
$L__BB0_72:                             // %__nv_fmaf_rn.exit4.i.i.i1619
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r505, %r16287, 192937984;
	add.s32 	%r506, %r16286, %r505;
	mov.b32 	%f1010, %r506;
	mul.f32 	%f1011, %f1008, %f1010;
	sub.f32 	%f1012, %f1010, %f1011;
	fma.rn.f32 	%f1013, %f1012, %f1008, %f1011;
	sub.f32 	%f1014, %f1010, %f1013;
	fma.rz.f32 	%f1015, %f1014, %f1008, %f1013;
	cvt.rzi.f32.f32 	%f1016, %f1015;
	sub.f32 	%f1283, %f1010, %f1016;
	sub.s32 	%r16287, %r16287, %r505;
	mov.b32 	%r16286, %f1283;
	setp.ne.s32 	%p193, %r16287, 0;
	setp.ne.s32 	%p194, %r16286, 0;
	and.pred  	%p195, %p193, %p194;
	@%p195 bra 	$L__BB0_72;
$L__BB0_73:                             // %__internal_fmodf_slowpath_mod.exit.i.i1621
	setp.gt.u32 	%p196, %r39, 2139095039;
	selp.f32 	%f1017, 0f7FFFFFFF, 0f4B800000, %p196;
	mul.f32 	%f1018, %f1283, 0f34000000;
	mul.f32 	%f1284, %f1017, %f1018;
	bra.uni 	$L__BB0_74;
$L__BB0_64:                             // %__nv_fast_fdividef.exit.i.i.i1598
	div.approx.f32 	%f1001, %f1284, %f221;
	cvt.rzi.f32.f32 	%f1282, %f1001;
	fma.rn.f32 	%f92, %f1282, 0fC0000000, %f1284;
	mov.b32 	%r38, %f92;
	setp.lt.u32 	%p187, %r38, 1073741824;
	@%p187 bra 	$L__BB0_69;
// %bb.65:
	setp.lt.u32 	%p188, %r38, -2147483647;
	@%p188 bra 	$L__BB0_67;
// %bb.66:
	add.f32 	%f1006, %f1282, 0fBF800000;
	setp.lt.f32 	%p191, %f92, 0fC0000000;
	add.f32 	%f1007, %f1006, 0fBF800000;
	selp.f32 	%f1282, %f1007, %f1006, %p191;
	bra.uni 	$L__BB0_69;
$L__BB0_67:
	add.f32 	%f1282, %f1282, 0f3F800000;
	setp.ltu.f32 	%p189, %f92, 0f40800000;
	@%p189 bra 	$L__BB0_69;
// %bb.68:                              // %__nv_fmaf_rn.exit.i.i.i1602
	add.f32 	%f1002, %f1282, 0f3F800000;
	fma.rn.f32 	%f1004, %f221, 0fC0400000, %f92;
	setp.ge.f32 	%p190, %f1004, 0f00000000;
	add.f32 	%f1005, %f1002, 0f3F800000;
	selp.f32 	%f1282, %f1005, %f1002, %p190;
$L__BB0_69:                             // %__internal_fmodf_fastpath_quot.exit.i.i1605
	fma.rn.f32 	%f1284, %f1282, 0fC0000000, %f1284;
$L__BB0_74:                             // %__internal_fmodf_kernel.exit.i1624
	fma.rn.f32 	%f245, %f243, %f239, 0fC09DE9E6;
	fma.rn.f32 	%f246, %f242, %f244, 0f00000000;
	and.b32  	%r256, %r255, 1;
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r263, %r262, 1;
	fma.rn.f32 	%f314, %f312, %f308, 0fC09DE9E6;
	fma.rn.f32 	%f315, %f311, %f313, 0f00000000;
	and.b32  	%r274, %r273, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r281, %r280, 1;
	fma.rn.f32 	%f383, %f381, %f377, 0fC09DE9E6;
	fma.rn.f32 	%f384, %f380, %f382, 0f00000000;
	and.b32  	%r292, %r291, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r299, %r298, 1;
	fma.rn.f32 	%f452, %f450, %f446, 0fC09DE9E6;
	fma.rn.f32 	%f453, %f449, %f451, 0f00000000;
	and.b32  	%r310, %r309, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r317, %r316, 1;
	fma.rn.f32 	%f521, %f519, %f515, 0fC09DE9E6;
	fma.rn.f32 	%f522, %f518, %f520, 0f00000000;
	and.b32  	%r328, %r327, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r335, %r334, 1;
	fma.rn.f32 	%f590, %f588, %f584, 0fC09DE9E6;
	fma.rn.f32 	%f591, %f587, %f589, 0f00000000;
	and.b32  	%r346, %r345, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r353, %r352, 1;
	fma.rn.f32 	%f659, %f657, %f653, 0fC09DE9E6;
	fma.rn.f32 	%f660, %f656, %f658, 0f00000000;
	and.b32  	%r364, %r363, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r371, %r370, 1;
	fma.rn.f32 	%f728, %f726, %f722, 0fC09DE9E6;
	fma.rn.f32 	%f729, %f725, %f727, 0f00000000;
	and.b32  	%r382, %r381, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r389, %r388, 1;
	fma.rn.f32 	%f794, %f792, %f786, 0f3F800000;
	fma.rn.f32 	%f795, %f785, 0f40490FDB, %f793;
	setp.eq.b32 	%p113, %r412, 1;
	fma.rn.f32 	%f828, %f826, %f820, 0f3F800000;
	fma.rn.f32 	%f829, %f819, 0f40490FDB, %f827;
	setp.eq.b32 	%p120, %r422, 1;
	fma.rn.f32 	%f881, %f879, %f873, 0f3F800000;
	fma.rn.f32 	%f882, %f872, 0f40490FDB, %f880;
	setp.eq.b32 	%p140, %r445, 1;
	fma.rn.f32 	%f933, %f931, %f925, 0f3F800000;
	fma.rn.f32 	%f934, %f924, 0f40490FDB, %f932;
	setp.eq.b32 	%p160, %r477, 1;
	fma.rn.f32 	%f984, %f982, %f978, 0fC09DE9E6;
	fma.rn.f32 	%f985, %f981, %f983, 0f00000000;
	and.b32  	%r497, %r496, 1;
	abs.f32 	%f1019, %f1284;
	setp.gtu.f32 	%p197, %f1019, 0f7F800000;
	@%p197 bra 	$L__BB0_76;
// %bb.75:
	mov.b32 	%r507, %f199;
	and.b32  	%r508, %r507, -2147483648;
	mov.b32 	%r509, %f1284;
	or.b32  	%r510, %r508, %r509;
	mov.b32 	%f1284, %r510;
$L__BB0_76:                             // %__nv_fmodf.exit1625
	fma.rn.f32 	%f247, %f245, %f239, 0f3F800000;
	fma.rn.f32 	%f248, %f238, 0f40490FDB, %f246;
	setp.eq.b32 	%p18, %r256, 1;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p24, %r263, 1;
	fma.rn.f32 	%f316, %f314, %f308, 0f3F800000;
	fma.rn.f32 	%f317, %f307, 0f40490FDB, %f315;
	setp.eq.b32 	%p30, %r274, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p36, %r281, 1;
	fma.rn.f32 	%f385, %f383, %f377, 0f3F800000;
	fma.rn.f32 	%f386, %f376, 0f40490FDB, %f384;
	setp.eq.b32 	%p42, %r292, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p48, %r299, 1;
	fma.rn.f32 	%f454, %f452, %f446, 0f3F800000;
	fma.rn.f32 	%f455, %f445, 0f40490FDB, %f453;
	setp.eq.b32 	%p54, %r310, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p60, %r317, 1;
	fma.rn.f32 	%f523, %f521, %f515, 0f3F800000;
	fma.rn.f32 	%f524, %f514, 0f40490FDB, %f522;
	setp.eq.b32 	%p66, %r328, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p72, %r335, 1;
	fma.rn.f32 	%f592, %f590, %f584, 0f3F800000;
	fma.rn.f32 	%f593, %f583, 0f40490FDB, %f591;
	setp.eq.b32 	%p78, %r346, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p84, %r353, 1;
	fma.rn.f32 	%f661, %f659, %f653, 0f3F800000;
	fma.rn.f32 	%f662, %f652, 0f40490FDB, %f660;
	setp.eq.b32 	%p90, %r364, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p96, %r371, 1;
	fma.rn.f32 	%f730, %f728, %f722, 0f3F800000;
	fma.rn.f32 	%f731, %f721, 0f40490FDB, %f729;
	setp.eq.b32 	%p102, %r382, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p108, %r389, 1;
	selp.f32 	%f796, %f794, %f795, %p113;
	and.b32  	%r413, %r411, 2;
	selp.f32 	%f830, %f828, %f829, %p120;
	and.b32  	%r423, %r421, 2;
	selp.f32 	%f883, %f881, %f882, %p140;
	and.b32  	%r446, %r444, 2;
	selp.f32 	%f935, %f933, %f934, %p160;
	and.b32  	%r478, %r476, 2;
	fma.rn.f32 	%f986, %f984, %f978, 0f3F800000;
	fma.rn.f32 	%f987, %f977, 0f40490FDB, %f985;
	setp.eq.b32 	%p180, %r497, 1;
	add.f32 	%f1020, %f1284, %f1284;
	mov.b32 	%r517, %f1020;
	and.b32  	%r518, %r517, -2147483648;
	or.b32  	%r519, %r518, 1056964608;
	mov.b32 	%f1021, %r519;
	add.f32 	%f1022, %f1020, %f1021;
	cvt.rzi.f32.f32 	%f1023, %f1022;
	abs.f32 	%f1024, %f1020;
	setp.gt.f32 	%p198, %f1024, 0f4B000000;
	selp.f32 	%f1025, %f1020, %f1023, %p198;
	cvt.rzi.f32.f32 	%f1026, %f1020;
	setp.lt.f32 	%p199, %f1024, 0f3F000000;
	selp.f32 	%f1027, %f1026, %f1025, %p199;
	cvt.rzi.s32.f32 	%r520, %f1027;
	fma.rn.f32 	%f1028, %f1027, 0fBF000000, %f1284;
	mul.f32 	%f1029, %f1028, %f1028;
	fma.rn.f32 	%f1030, %f1029, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1031, %f1029, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1032, %f1030, %f1029, 0fC0A55DF6;
	fma.rn.f32 	%f1033, %f1031, %f1029, 0f4081E0CF;
	fma.rn.f32 	%f1034, %f1029, %f1028, 0f00000000;
	fma.rn.f32 	%f1035, %f1033, %f1029, 0fC09DE9E6;
	fma.rn.f32 	%f1036, %f1032, %f1034, 0f00000000;
	fma.rn.f32 	%f1037, %f1035, %f1029, 0f3F800000;
	fma.rn.f32 	%f1038, %f1028, 0f40490FDB, %f1036;
	and.b32  	%r521, %r520, 1;
	setp.eq.b32 	%p200, %r521, 1;
	div.approx.f32 	%f106, %f88, %f843;
	abs.f32 	%f1308, %f106;
	setp.lt.f32 	%p205, %f1308, 0f40000000;
	@%p205 bra 	$L__BB0_152;
// %bb.77:
	setp.gtu.f32 	%p206, %f1308, 0f4B800000;
	@%p206 bra 	$L__BB0_148;
	bra.uni 	$L__BB0_78;
$L__BB0_148:
	mov.b32 	%r162, %f1308;
	and.b32  	%r525, %r162, 8388607;
	or.b32  	%r16323, %r525, 1065353216;
	mov.b32 	%f1307, %r16323;
	add.s32 	%r526, %r162, -1073741824;
	and.b32  	%r16324, %r526, -8388608;
	setp.eq.s32 	%p212, %r16324, 0;
	@%p212 bra 	$L__BB0_151;
// %bb.149:                             // %__nv_fmaf_rn.exit4.i.i.i1805.preheader
	mov.f32 	%f1062, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1061,%f1062;
	// end inline asm
$L__BB0_150:                            // %__nv_fmaf_rn.exit4.i.i.i1805
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r527, %r16324, 192937984;
	add.s32 	%r528, %r16323, %r527;
	mov.b32 	%f1063, %r528;
	mul.f32 	%f1064, %f1061, %f1063;
	sub.f32 	%f1065, %f1063, %f1064;
	fma.rn.f32 	%f1066, %f1065, %f1061, %f1064;
	sub.f32 	%f1067, %f1063, %f1066;
	fma.rz.f32 	%f1068, %f1067, %f1061, %f1066;
	cvt.rzi.f32.f32 	%f1069, %f1068;
	sub.f32 	%f1307, %f1063, %f1069;
	sub.s32 	%r16324, %r16324, %r527;
	mov.b32 	%r16323, %f1307;
	setp.ne.s32 	%p213, %r16324, 0;
	setp.ne.s32 	%p214, %r16323, 0;
	and.pred  	%p215, %p213, %p214;
	@%p215 bra 	$L__BB0_150;
$L__BB0_151:                            // %__internal_fmodf_slowpath_mod.exit.i.i1807
	setp.gt.u32 	%p216, %r162, 2139095039;
	selp.f32 	%f1070, 0f7FFFFFFF, 0f4B800000, %p216;
	mul.f32 	%f1071, %f1307, 0f34000000;
	mul.f32 	%f1308, %f1070, %f1071;
	bra.uni 	$L__BB0_152;
$L__BB0_78:                             // %__nv_fast_fdividef.exit.i.i.i1784
	div.approx.f32 	%f1054, %f1308, %f221;
	cvt.rzi.f32.f32 	%f1306, %f1054;
	fma.rn.f32 	%f202, %f1306, 0fC0000000, %f1308;
	mov.b32 	%r161, %f202;
	setp.lt.u32 	%p207, %r161, 1073741824;
	@%p207 bra 	$L__BB0_147;
// %bb.79:
	setp.lt.u32 	%p208, %r161, -2147483647;
	@%p208 bra 	$L__BB0_145;
// %bb.80:
	add.f32 	%f1059, %f1306, 0fBF800000;
	setp.lt.f32 	%p211, %f202, 0fC0000000;
	add.f32 	%f1060, %f1059, 0fBF800000;
	selp.f32 	%f1306, %f1060, %f1059, %p211;
	bra.uni 	$L__BB0_147;
$L__BB0_145:
	add.f32 	%f1306, %f1306, 0f3F800000;
	setp.ltu.f32 	%p209, %f202, 0f40800000;
	@%p209 bra 	$L__BB0_147;
// %bb.146:                             // %__nv_fmaf_rn.exit.i.i.i1788
	add.f32 	%f1055, %f1306, 0f3F800000;
	fma.rn.f32 	%f1057, %f221, 0fC0400000, %f202;
	setp.ge.f32 	%p210, %f1057, 0f00000000;
	add.f32 	%f1058, %f1055, 0f3F800000;
	selp.f32 	%f1306, %f1058, %f1055, %p210;
$L__BB0_147:                            // %__internal_fmodf_fastpath_quot.exit.i.i1791
	fma.rn.f32 	%f1308, %f1306, 0fC0000000, %f1308;
$L__BB0_152:                            // %__internal_fmodf_kernel.exit.i1810
	selp.f32 	%f249, %f247, %f248, %p18;
	and.b32  	%r257, %r255, 2;
	mov.f32 	%f250, 0f00000000;
	selp.f32 	%f283, %f281, %f282, %p24;
	and.b32  	%r264, %r262, 2;
	selp.f32 	%f318, %f316, %f317, %p30;
	and.b32  	%r275, %r273, 2;
	selp.f32 	%f352, %f350, %f351, %p36;
	and.b32  	%r282, %r280, 2;
	selp.f32 	%f387, %f385, %f386, %p42;
	and.b32  	%r293, %r291, 2;
	selp.f32 	%f421, %f419, %f420, %p48;
	and.b32  	%r300, %r298, 2;
	selp.f32 	%f456, %f454, %f455, %p54;
	and.b32  	%r311, %r309, 2;
	selp.f32 	%f490, %f488, %f489, %p60;
	and.b32  	%r318, %r316, 2;
	selp.f32 	%f525, %f523, %f524, %p66;
	and.b32  	%r329, %r327, 2;
	selp.f32 	%f559, %f557, %f558, %p72;
	and.b32  	%r336, %r334, 2;
	selp.f32 	%f594, %f592, %f593, %p78;
	and.b32  	%r347, %r345, 2;
	selp.f32 	%f628, %f626, %f627, %p84;
	and.b32  	%r354, %r352, 2;
	selp.f32 	%f663, %f661, %f662, %p90;
	and.b32  	%r365, %r363, 2;
	selp.f32 	%f697, %f695, %f696, %p96;
	and.b32  	%r372, %r370, 2;
	selp.f32 	%f732, %f730, %f731, %p102;
	and.b32  	%r383, %r381, 2;
	selp.f32 	%f766, %f764, %f765, %p108;
	and.b32  	%r390, %r388, 2;
	setp.eq.s32 	%p114, %r413, 0;
	neg.f32 	%f798, %f796;
	add.s32 	%r414, %r411, 1;
	cvt.rzi.f32.f32 	%f803, %f776;
	setp.eq.s32 	%p121, %r423, 0;
	neg.f32 	%f832, %f830;
	add.s32 	%r424, %r421, 1;
	cvt.rzi.f32.f32 	%f836, %f810;
	setp.eq.s32 	%p141, %r446, 0;
	neg.f32 	%f885, %f883;
	add.s32 	%r447, %r444, 1;
	cvt.rzi.f32.f32 	%f890, %f1300;
	setp.eq.s32 	%p161, %r478, 0;
	neg.f32 	%f937, %f935;
	add.s32 	%r479, %r476, 1;
	cvt.rzi.f32.f32 	%f942, %f1280;
	selp.f32 	%f988, %f986, %f987, %p180;
	and.b32  	%r498, %r496, 2;
	selp.f32 	%f1039, %f1037, %f1038, %p200;
	and.b32  	%r522, %r520, 2;
	abs.f32 	%f1072, %f1308;
	setp.gtu.f32 	%p217, %f1072, 0f7F800000;
	@%p217 bra 	$L__BB0_154;
// %bb.153:
	mov.b32 	%r529, %f106;
	and.b32  	%r530, %r529, -2147483648;
	mov.b32 	%r531, %f1308;
	or.b32  	%r532, %r530, %r531;
	mov.b32 	%f1308, %r532;
$L__BB0_154:                            // %__nv_fmodf.exit1811
	setp.eq.s32 	%p19, %r257, 0;
	sub.f32 	%f251, %f250, %f249;
	setp.eq.s32 	%p25, %r264, 0;
	sub.f32 	%f285, %f250, %f283;
	setp.eq.s32 	%p31, %r275, 0;
	sub.f32 	%f320, %f250, %f318;
	setp.eq.s32 	%p37, %r282, 0;
	sub.f32 	%f354, %f250, %f352;
	setp.eq.s32 	%p43, %r293, 0;
	sub.f32 	%f389, %f250, %f387;
	setp.eq.s32 	%p49, %r300, 0;
	sub.f32 	%f423, %f250, %f421;
	setp.eq.s32 	%p55, %r311, 0;
	sub.f32 	%f458, %f250, %f456;
	setp.eq.s32 	%p61, %r318, 0;
	sub.f32 	%f492, %f250, %f490;
	setp.eq.s32 	%p67, %r329, 0;
	sub.f32 	%f527, %f250, %f525;
	setp.eq.s32 	%p73, %r336, 0;
	sub.f32 	%f561, %f250, %f559;
	setp.eq.s32 	%p79, %r347, 0;
	sub.f32 	%f596, %f250, %f594;
	setp.eq.s32 	%p85, %r354, 0;
	sub.f32 	%f630, %f250, %f628;
	setp.eq.s32 	%p91, %r365, 0;
	sub.f32 	%f665, %f250, %f663;
	setp.eq.s32 	%p97, %r372, 0;
	sub.f32 	%f699, %f250, %f697;
	setp.eq.s32 	%p103, %r383, 0;
	sub.f32 	%f734, %f250, %f732;
	setp.eq.s32 	%p109, %r390, 0;
	sub.f32 	%f768, %f250, %f766;
	selp.f32 	%f797, %f795, %f794, %p113;
	selp.f32 	%f799, %f796, %f798, %p114;
	and.b32  	%r415, %r414, 2;
	setp.eq.f32 	%p116, %f803, %f776;
	mul.f32 	%f804, %f776, 0f00000000;
	selp.f32 	%f831, %f829, %f828, %p120;
	selp.f32 	%f833, %f830, %f832, %p121;
	and.b32  	%r425, %r424, 2;
	setp.eq.f32 	%p123, %f836, %f810;
	mul.f32 	%f837, %f810, 0f00000000;
	selp.f32 	%f884, %f882, %f881, %p140;
	selp.f32 	%f886, %f883, %f885, %p141;
	and.b32  	%r448, %r447, 2;
	setp.eq.f32 	%p143, %f890, %f1300;
	mul.f32 	%f891, %f1300, 0f00000000;
	selp.f32 	%f936, %f934, %f933, %p160;
	selp.f32 	%f938, %f935, %f937, %p161;
	and.b32  	%r480, %r479, 2;
	setp.eq.f32 	%p163, %f942, %f1280;
	mul.f32 	%f943, %f1280, 0f00000000;
	setp.eq.s32 	%p181, %r498, 0;
	neg.f32 	%f990, %f988;
	add.s32 	%r499, %r496, 1;
	cvt.rzi.f32.f32 	%f995, %f1304;
	setp.eq.s32 	%p201, %r522, 0;
	neg.f32 	%f1041, %f1039;
	add.s32 	%r523, %r520, 1;
	cvt.rzi.f32.f32 	%f1046, %f1284;
	add.f32 	%f1073, %f1308, %f1308;
	mov.b32 	%r533, %f1073;
	and.b32  	%r534, %r533, -2147483648;
	or.b32  	%r535, %r534, 1056964608;
	mov.b32 	%f1074, %r535;
	add.f32 	%f1075, %f1073, %f1074;
	cvt.rzi.f32.f32 	%f1076, %f1075;
	abs.f32 	%f1077, %f1073;
	setp.gt.f32 	%p218, %f1077, 0f4B000000;
	selp.f32 	%f1078, %f1073, %f1076, %p218;
	cvt.rzi.f32.f32 	%f1079, %f1073;
	setp.lt.f32 	%p219, %f1077, 0f3F000000;
	selp.f32 	%f1080, %f1079, %f1078, %p219;
	cvt.rzi.s32.f32 	%r536, %f1080;
	fma.rn.f32 	%f1081, %f1080, 0fBF000000, %f1308;
	mul.f32 	%f1082, %f1081, %f1081;
	fma.rn.f32 	%f1083, %f1082, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1084, %f1082, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1085, %f1083, %f1082, 0fC0A55DF6;
	fma.rn.f32 	%f1086, %f1084, %f1082, 0f4081E0CF;
	fma.rn.f32 	%f1087, %f1082, %f1081, 0f00000000;
	fma.rn.f32 	%f1088, %f1086, %f1082, 0fC09DE9E6;
	fma.rn.f32 	%f1089, %f1085, %f1087, 0f00000000;
	fma.rn.f32 	%f1090, %f1088, %f1082, 0f3F800000;
	fma.rn.f32 	%f1091, %f1081, 0f40490FDB, %f1089;
	and.b32  	%r537, %r536, 1;
	setp.eq.b32 	%p220, %r537, 1;
	selp.f32 	%f1092, %f1090, %f1091, %p220;
	selp.f32 	%f1093, %f1091, %f1090, %p220;
	and.b32  	%r538, %r536, 2;
	setp.eq.s32 	%p221, %r538, 0;
	neg.f32 	%f1094, %f1092;
	selp.f32 	%f1095, %f1092, %f1094, %p221;
	add.s32 	%r539, %r536, 1;
	and.b32  	%r540, %r539, 2;
	cvt.rzi.f32.f32 	%f1099, %f1308;
	setp.eq.f32 	%p223, %f1099, %f1308;
	mul.f32 	%f1100, %f1308, 0f00000000;
	div.approx.f32 	%f218, %f198, %f843;
	abs.f32 	%f1288, %f218;
	setp.lt.f32 	%p225, %f1288, 0f40000000;
	@%p225 bra 	$L__BB0_92;
// %bb.81:
	setp.gtu.f32 	%p226, %f1288, 0f4B800000;
	@%p226 bra 	$L__BB0_88;
	bra.uni 	$L__BB0_82;
$L__BB0_88:
	mov.b32 	%r49, %f1288;
	and.b32  	%r541, %r49, 8388607;
	or.b32  	%r16288, %r541, 1065353216;
	mov.b32 	%f1287, %r16288;
	add.s32 	%r542, %r49, -1073741824;
	and.b32  	%r16289, %r542, -8388608;
	setp.eq.s32 	%p232, %r16289, 0;
	@%p232 bra 	$L__BB0_91;
// %bb.89:                              // %__nv_fmaf_rn.exit4.i.i.i1650.preheader
	mov.f32 	%f1113, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1112,%f1113;
	// end inline asm
$L__BB0_90:                             // %__nv_fmaf_rn.exit4.i.i.i1650
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r543, %r16289, 192937984;
	add.s32 	%r544, %r16288, %r543;
	mov.b32 	%f1114, %r544;
	mul.f32 	%f1115, %f1112, %f1114;
	sub.f32 	%f1116, %f1114, %f1115;
	fma.rn.f32 	%f1117, %f1116, %f1112, %f1115;
	sub.f32 	%f1118, %f1114, %f1117;
	fma.rz.f32 	%f1119, %f1118, %f1112, %f1117;
	cvt.rzi.f32.f32 	%f1120, %f1119;
	sub.f32 	%f1287, %f1114, %f1120;
	sub.s32 	%r16289, %r16289, %r543;
	mov.b32 	%r16288, %f1287;
	setp.ne.s32 	%p233, %r16289, 0;
	setp.ne.s32 	%p234, %r16288, 0;
	and.pred  	%p235, %p233, %p234;
	@%p235 bra 	$L__BB0_90;
$L__BB0_91:                             // %__internal_fmodf_slowpath_mod.exit.i.i1652
	setp.gt.u32 	%p236, %r49, 2139095039;
	selp.f32 	%f1121, 0f7FFFFFFF, 0f4B800000, %p236;
	mul.f32 	%f1122, %f1287, 0f34000000;
	mul.f32 	%f1288, %f1121, %f1122;
	bra.uni 	$L__BB0_92;
$L__BB0_82:                             // %__nv_fast_fdividef.exit.i.i.i1629
	div.approx.f32 	%f1105, %f1288, %f221;
	cvt.rzi.f32.f32 	%f1286, %f1105;
	fma.rn.f32 	%f109, %f1286, 0fC0000000, %f1288;
	mov.b32 	%r48, %f109;
	setp.lt.u32 	%p227, %r48, 1073741824;
	@%p227 bra 	$L__BB0_87;
// %bb.83:
	setp.lt.u32 	%p228, %r48, -2147483647;
	@%p228 bra 	$L__BB0_85;
// %bb.84:
	add.f32 	%f1110, %f1286, 0fBF800000;
	setp.lt.f32 	%p231, %f109, 0fC0000000;
	add.f32 	%f1111, %f1110, 0fBF800000;
	selp.f32 	%f1286, %f1111, %f1110, %p231;
	bra.uni 	$L__BB0_87;
$L__BB0_85:
	add.f32 	%f1286, %f1286, 0f3F800000;
	setp.ltu.f32 	%p229, %f109, 0f40800000;
	@%p229 bra 	$L__BB0_87;
// %bb.86:                              // %__nv_fmaf_rn.exit.i.i.i1633
	add.f32 	%f1106, %f1286, 0f3F800000;
	fma.rn.f32 	%f1108, %f221, 0fC0400000, %f109;
	setp.ge.f32 	%p230, %f1108, 0f00000000;
	add.f32 	%f1109, %f1106, 0f3F800000;
	selp.f32 	%f1286, %f1109, %f1106, %p230;
$L__BB0_87:                             // %__internal_fmodf_fastpath_quot.exit.i.i1636
	fma.rn.f32 	%f1288, %f1286, 0fC0000000, %f1288;
$L__BB0_92:                             // %__internal_fmodf_kernel.exit.i1655
	selp.f32 	%f252, %f249, %f251, %p19;
	selp.f32 	%f286, %f283, %f285, %p25;
	selp.f32 	%f321, %f318, %f320, %p31;
	selp.f32 	%f355, %f352, %f354, %p37;
	selp.f32 	%f390, %f387, %f389, %p43;
	selp.f32 	%f424, %f421, %f423, %p49;
	selp.f32 	%f459, %f456, %f458, %p55;
	selp.f32 	%f493, %f490, %f492, %p61;
	selp.f32 	%f528, %f525, %f527, %p67;
	selp.f32 	%f562, %f559, %f561, %p73;
	selp.f32 	%f597, %f594, %f596, %p79;
	selp.f32 	%f631, %f628, %f630, %p85;
	selp.f32 	%f666, %f663, %f665, %p91;
	selp.f32 	%f700, %f697, %f699, %p97;
	selp.f32 	%f735, %f732, %f734, %p103;
	selp.f32 	%f769, %f766, %f768, %p109;
	setp.eq.s32 	%p115, %r415, 0;
	sub.f32 	%f801, %f250, %f797;
	selp.f32 	%f805, %f804, %f799, %p116;
	abs.f32 	%f806, %f776;
	setp.eq.s32 	%p122, %r425, 0;
	sub.f32 	%f834, %f250, %f831;
	selp.f32 	%f838, %f837, %f833, %p123;
	abs.f32 	%f839, %f810;
	setp.eq.s32 	%p142, %r448, 0;
	sub.f32 	%f888, %f250, %f884;
	selp.f32 	%f177, %f891, %f886, %p143;
	abs.f32 	%f892, %f1300;
	setp.eq.s32 	%p162, %r480, 0;
	sub.f32 	%f940, %f250, %f936;
	selp.f32 	%f944, %f943, %f938, %p163;
	abs.f32 	%f945, %f1280;
	selp.f32 	%f989, %f987, %f986, %p180;
	selp.f32 	%f991, %f988, %f990, %p181;
	and.b32  	%r500, %r499, 2;
	setp.eq.f32 	%p183, %f995, %f1304;
	mul.f32 	%f996, %f1304, 0f00000000;
	selp.f32 	%f1040, %f1038, %f1037, %p200;
	selp.f32 	%f1042, %f1039, %f1041, %p201;
	and.b32  	%r524, %r523, 2;
	setp.eq.f32 	%p203, %f1046, %f1284;
	mul.f32 	%f1047, %f1284, 0f00000000;
	setp.eq.s32 	%p222, %r540, 0;
	sub.f32 	%f1097, %f250, %f1093;
	selp.f32 	%f216, %f1100, %f1095, %p223;
	abs.f32 	%f1101, %f1308;
	abs.f32 	%f1123, %f1288;
	setp.gtu.f32 	%p237, %f1123, 0f7F800000;
	@%p237 bra 	$L__BB0_94;
// %bb.93:
	mov.b32 	%r545, %f218;
	and.b32  	%r546, %r545, -2147483648;
	mov.b32 	%r547, %f1288;
	or.b32  	%r548, %r546, %r547;
	mov.b32 	%f1288, %r548;
$L__BB0_94:                             // %__nv_fmodf.exit1656
	mul.f32 	%f160, %f252, %f252;
	mul.f32 	%f4, %f286, %f286;
	mul.f32 	%f8, %f321, %f321;
	mul.f32 	%f13, %f355, %f355;
	mul.f32 	%f17, %f390, %f390;
	mul.f32 	%f22, %f424, %f424;
	mul.f32 	%f26, %f459, %f459;
	mul.f32 	%f31, %f493, %f493;
	mul.f32 	%f35, %f528, %f528;
	mul.f32 	%f40, %f562, %f562;
	mul.f32 	%f44, %f597, %f597;
	mul.f32 	%f49, %f631, %f631;
	mul.f32 	%f53, %f666, %f666;
	mul.f32 	%f58, %f700, %f700;
	mul.f32 	%f62, %f735, %f735;
	mul.f32 	%f67, %f769, %f769;
	selp.f32 	%f802, %f797, %f801, %p115;
	setp.gt.f32 	%p117, %f806, 0f4B800000;
	add.f32 	%f807, %f805, 0f3F800000;
	selp.f32 	%f835, %f831, %f834, %p122;
	setp.gt.f32 	%p124, %f839, 0f4B800000;
	add.f32 	%f840, %f838, 0f3F800000;
	selp.f32 	%f889, %f884, %f888, %p142;
	setp.gt.f32 	%p144, %f892, 0f4B800000;
	add.f32 	%f893, %f177, 0f3F800000;
	selp.f32 	%f941, %f936, %f940, %p162;
	setp.gt.f32 	%p164, %f945, 0f4B800000;
	add.f32 	%f946, %f944, 0f3F800000;
	setp.eq.s32 	%p182, %r500, 0;
	sub.f32 	%f993, %f250, %f989;
	selp.f32 	%f196, %f996, %f991, %p183;
	abs.f32 	%f997, %f1304;
	setp.eq.s32 	%p202, %r524, 0;
	sub.f32 	%f1044, %f250, %f1040;
	selp.f32 	%f1048, %f1047, %f1042, %p203;
	abs.f32 	%f1049, %f1284;
	selp.f32 	%f1098, %f1093, %f1097, %p222;
	setp.gt.f32 	%p224, %f1101, 0f4B800000;
	add.f32 	%f1102, %f216, 0f3F800000;
	add.f32 	%f1124, %f1288, %f1288;
	mov.b32 	%r561, %f1124;
	and.b32  	%r562, %r561, -2147483648;
	or.b32  	%r563, %r562, 1056964608;
	mov.b32 	%f1125, %r563;
	add.f32 	%f1126, %f1124, %f1125;
	cvt.rzi.f32.f32 	%f1127, %f1126;
	abs.f32 	%f1128, %f1124;
	setp.gt.f32 	%p238, %f1128, 0f4B000000;
	selp.f32 	%f1129, %f1124, %f1127, %p238;
	cvt.rzi.f32.f32 	%f1130, %f1124;
	setp.lt.f32 	%p239, %f1128, 0f3F000000;
	selp.f32 	%f1131, %f1130, %f1129, %p239;
	cvt.rzi.s32.f32 	%r564, %f1131;
	fma.rn.f32 	%f1132, %f1131, 0fBF000000, %f1288;
	mul.f32 	%f1133, %f1132, %f1132;
	fma.rn.f32 	%f1134, %f1133, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1135, %f1133, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1136, %f1134, %f1133, 0fC0A55DF6;
	fma.rn.f32 	%f1137, %f1135, %f1133, 0f4081E0CF;
	fma.rn.f32 	%f1138, %f1133, %f1132, 0f00000000;
	fma.rn.f32 	%f1139, %f1137, %f1133, 0fC09DE9E6;
	fma.rn.f32 	%f1140, %f1136, %f1138, 0f00000000;
	fma.rn.f32 	%f1141, %f1139, %f1133, 0f3F800000;
	fma.rn.f32 	%f1142, %f1132, 0f40490FDB, %f1140;
	and.b32  	%r565, %r564, 1;
	setp.eq.b32 	%p240, %r565, 1;
	selp.f32 	%f1143, %f1141, %f1142, %p240;
	selp.f32 	%f1144, %f1142, %f1141, %p240;
	and.b32  	%r566, %r564, 2;
	setp.eq.s32 	%p241, %r566, 0;
	neg.f32 	%f1145, %f1143;
	selp.f32 	%f1146, %f1143, %f1145, %p241;
	add.s32 	%r567, %r564, 1;
	and.b32  	%r568, %r567, 2;
	setp.eq.s32 	%p242, %r568, 0;
	sub.f32 	%f1148, %f250, %f1144;
	selp.f32 	%f1149, %f1144, %f1148, %p242;
	cvt.rzi.f32.f32 	%f1150, %f1288;
	setp.eq.f32 	%p243, %f1150, %f1288;
	mul.f32 	%f1151, %f1288, 0f00000000;
	selp.f32 	%f1152, %f1151, %f1146, %p243;
	abs.f32 	%f1153, %f1288;
	setp.gt.f32 	%p244, %f1153, 0f4B800000;
	add.f32 	%f1154, %f1152, 0f3F800000;
	mul.lo.s32 	%r569, %r139, 2147483640;
	cvt.u16.u32 	%rs19, %r4;
	shr.u16 	%rs20, %rs19, 8;
	shl.b16 	%rs21, %rs19, 8;
	or.b16  	%rs22, %rs21, %rs20;
	shl.b16 	%rs23, %rs22, 4;
	shr.u16 	%rs24, %rs22, 4;
	and.b16  	%rs25, %rs24, 3840;
	or.b16  	%rs26, %rs25, %rs23;
	and.b16  	%rs27, %rs26, 13107;
	shl.b16 	%rs28, %rs27, 2;
	shr.u16 	%rs29, %rs26, 2;
	and.b16  	%rs30, %rs29, 13107;
	or.b16  	%rs31, %rs30, %rs28;
	and.b16  	%rs32, %rs31, 20480;
	shl.b16 	%rs33, %rs32, 1;
	shr.u16 	%rs34, %rs31, 1;
	and.b16  	%rs35, %rs34, 16384;
	or.b16  	%rs36, %rs35, %rs33;
	shr.u16 	%rs37, %rs36, 13;
	sub.s32 	%r570, %r569, %r131;
	mad.lo.s32 	%r571, %r142, 2147483616, %r570;
	or.b16  	%rs38, %rs37, 1;
	cvt.u32.u16 	%r572, %rs38;
	and.b16  	%rs39, %rs37, 6;
	cvt.u32.u16 	%r573, %rs39;
	sub.s32 	%r574, %r571, %r573;
	shl.b32 	%r575, %r574, 1;
	cvt.rn.f32.s32 	%f1156, %r575;
	div.approx.f32 	%f123, %f1156, %f253;
	abs.f32 	%f1292, %f123;
	setp.lt.f32 	%p245, %f1292, 0f40000000;
	@%p245 bra 	$L__BB0_106;
// %bb.95:
	setp.gtu.f32 	%p246, %f1292, 0f4B800000;
	@%p246 bra 	$L__BB0_102;
	bra.uni 	$L__BB0_96;
$L__BB0_102:
	mov.b32 	%r62, %f1292;
	and.b32  	%r576, %r62, 8388607;
	or.b32  	%r16290, %r576, 1065353216;
	mov.b32 	%f1291, %r16290;
	add.s32 	%r577, %r62, -1073741824;
	and.b32  	%r16291, %r577, -8388608;
	setp.eq.s32 	%p252, %r16291, 0;
	@%p252 bra 	$L__BB0_105;
// %bb.103:                             // %__nv_fmaf_rn.exit4.i.i.i1681.preheader
	mov.f32 	%f1167, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1166,%f1167;
	// end inline asm
$L__BB0_104:                            // %__nv_fmaf_rn.exit4.i.i.i1681
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r578, %r16291, 192937984;
	add.s32 	%r579, %r16290, %r578;
	mov.b32 	%f1168, %r579;
	mul.f32 	%f1169, %f1166, %f1168;
	sub.f32 	%f1170, %f1168, %f1169;
	fma.rn.f32 	%f1171, %f1170, %f1166, %f1169;
	sub.f32 	%f1172, %f1168, %f1171;
	fma.rz.f32 	%f1173, %f1172, %f1166, %f1171;
	cvt.rzi.f32.f32 	%f1174, %f1173;
	sub.f32 	%f1291, %f1168, %f1174;
	sub.s32 	%r16291, %r16291, %r578;
	mov.b32 	%r16290, %f1291;
	setp.ne.s32 	%p253, %r16291, 0;
	setp.ne.s32 	%p254, %r16290, 0;
	and.pred  	%p255, %p253, %p254;
	@%p255 bra 	$L__BB0_104;
$L__BB0_105:                            // %__internal_fmodf_slowpath_mod.exit.i.i1683
	setp.gt.u32 	%p256, %r62, 2139095039;
	selp.f32 	%f1175, 0f7FFFFFFF, 0f4B800000, %p256;
	mul.f32 	%f1176, %f1291, 0f34000000;
	mul.f32 	%f1292, %f1175, %f1176;
	bra.uni 	$L__BB0_106;
$L__BB0_96:                             // %__nv_fast_fdividef.exit.i.i.i1660
	div.approx.f32 	%f1159, %f1292, %f221;
	cvt.rzi.f32.f32 	%f1290, %f1159;
	fma.rn.f32 	%f126, %f1290, 0fC0000000, %f1292;
	mov.b32 	%r61, %f126;
	setp.lt.u32 	%p247, %r61, 1073741824;
	@%p247 bra 	$L__BB0_101;
// %bb.97:
	setp.lt.u32 	%p248, %r61, -2147483647;
	@%p248 bra 	$L__BB0_99;
// %bb.98:
	add.f32 	%f1164, %f1290, 0fBF800000;
	setp.lt.f32 	%p251, %f126, 0fC0000000;
	add.f32 	%f1165, %f1164, 0fBF800000;
	selp.f32 	%f1290, %f1165, %f1164, %p251;
	bra.uni 	$L__BB0_101;
$L__BB0_99:
	add.f32 	%f1290, %f1290, 0f3F800000;
	setp.ltu.f32 	%p249, %f126, 0f40800000;
	@%p249 bra 	$L__BB0_101;
// %bb.100:                             // %__nv_fmaf_rn.exit.i.i.i1664
	add.f32 	%f1160, %f1290, 0f3F800000;
	fma.rn.f32 	%f1162, %f221, 0fC0400000, %f126;
	setp.ge.f32 	%p250, %f1162, 0f00000000;
	add.f32 	%f1163, %f1160, 0f3F800000;
	selp.f32 	%f1290, %f1163, %f1160, %p250;
$L__BB0_101:                            // %__internal_fmodf_fastpath_quot.exit.i.i1667
	fma.rn.f32 	%f1292, %f1290, 0fC0000000, %f1292;
$L__BB0_106:                            // %__internal_fmodf_kernel.exit.i1686
	mul.f32 	%f256, %f160, 0f3B8B2FF9;
	mul.f32 	%f290, %f4, 0f3B8B2FF9;
	mul.f32 	%f325, %f8, 0f3B8B2FF9;
	mul.f32 	%f359, %f13, 0f3B8B2FF9;
	mul.f32 	%f394, %f17, 0f3B8B2FF9;
	mul.f32 	%f428, %f22, 0f3B8B2FF9;
	mul.f32 	%f463, %f26, 0f3B8B2FF9;
	mul.f32 	%f497, %f31, 0f3B8B2FF9;
	mul.f32 	%f532, %f35, 0f3B8B2FF9;
	mul.f32 	%f566, %f40, 0f3B8B2FF9;
	mul.f32 	%f601, %f44, 0f3B8B2FF9;
	mul.f32 	%f635, %f49, 0f3B8B2FF9;
	mul.f32 	%f670, %f53, 0f3B8B2FF9;
	mul.f32 	%f704, %f58, 0f3B8B2FF9;
	mul.f32 	%f739, %f62, 0f3B8B2FF9;
	mul.f32 	%f772, %f67, 0f3B8B2FF9;
	selp.f32 	%f808, %f807, %f802, %p117;
	selp.f32 	%f841, %f840, %f835, %p124;
	selp.f32 	%f178, %f893, %f889, %p144;
	selp.f32 	%f947, %f946, %f941, %p164;
	selp.f32 	%f994, %f989, %f993, %p182;
	setp.gt.f32 	%p184, %f997, 0f4B800000;
	add.f32 	%f998, %f196, 0f3F800000;
	selp.f32 	%f1045, %f1040, %f1044, %p202;
	setp.gt.f32 	%p204, %f1049, 0f4B800000;
	add.f32 	%f1050, %f1048, 0f3F800000;
	selp.f32 	%f217, %f1102, %f1098, %p224;
	selp.f32 	%f1155, %f1154, %f1149, %p244;
	sub.s32 	%r60, %r571, %r572;
	abs.f32 	%f1177, %f1292;
	setp.gtu.f32 	%p257, %f1177, 0f7F800000;
	@%p257 bra 	$L__BB0_108;
// %bb.107:
	mov.b32 	%r580, %f123;
	and.b32  	%r581, %r580, -2147483648;
	mov.b32 	%r582, %f1292;
	or.b32  	%r583, %r581, %r582;
	mov.b32 	%f1292, %r583;
$L__BB0_108:                            // %__nv_fmodf.exit1687
	mul.f32 	%f3, %f256, %f1262;
	mul.f32 	%f291, %f290, %f1263;
	mul.f32 	%f12, %f325, %f1264;
	mul.f32 	%f360, %f359, %f1265;
	mul.f32 	%f21, %f394, %f1266;
	mul.f32 	%f429, %f428, %f1267;
	mul.f32 	%f30, %f463, %f1268;
	mul.f32 	%f498, %f497, %f1269;
	mul.f32 	%f39, %f532, %f1270;
	mul.f32 	%f567, %f566, %f1271;
	mul.f32 	%f48, %f601, %f1272;
	mul.f32 	%f636, %f635, %f1273;
	mul.f32 	%f57, %f670, %f1274;
	mul.f32 	%f705, %f704, %f1275;
	mul.f32 	%f66, %f739, %f1276;
	mul.f32 	%f773, %f772, %f1277;
	mov.b32 	%r395, %f808;
	mov.b32 	%r396, %f841;
	mov.b32 	%r401, %f805;
	mov.b32 	%r402, %f838;
	mov.b32 	%r463, %f947;
	mov.b32 	%r462, %f178;
	mov.b32 	%r469, %f944;
	mov.b32 	%r468, %f177;
	selp.f32 	%f197, %f998, %f994, %p184;
	selp.f32 	%f1051, %f1050, %f1045, %p204;
	mov.b32 	%r551, %f1155;
	mov.b32 	%r550, %f217;
	mov.b32 	%r557, %f1152;
	mov.b32 	%r556, %f216;
	add.f32 	%f1178, %f1292, %f1292;
	mov.b32 	%r584, %f1178;
	and.b32  	%r585, %r584, -2147483648;
	or.b32  	%r586, %r585, 1056964608;
	mov.b32 	%f1179, %r586;
	add.f32 	%f1180, %f1178, %f1179;
	cvt.rzi.f32.f32 	%f1181, %f1180;
	abs.f32 	%f1182, %f1178;
	setp.gt.f32 	%p258, %f1182, 0f4B000000;
	selp.f32 	%f1183, %f1178, %f1181, %p258;
	cvt.rzi.f32.f32 	%f1184, %f1178;
	setp.lt.f32 	%p259, %f1182, 0f3F000000;
	selp.f32 	%f1185, %f1184, %f1183, %p259;
	cvt.rzi.s32.f32 	%r587, %f1185;
	fma.rn.f32 	%f1186, %f1185, 0fBF000000, %f1292;
	mul.f32 	%f1187, %f1186, %f1186;
	fma.rn.f32 	%f1188, %f1187, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1189, %f1187, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1190, %f1188, %f1187, 0fC0A55DF6;
	fma.rn.f32 	%f1191, %f1189, %f1187, 0f4081E0CF;
	fma.rn.f32 	%f1192, %f1187, %f1186, 0f00000000;
	fma.rn.f32 	%f1193, %f1191, %f1187, 0fC09DE9E6;
	fma.rn.f32 	%f1194, %f1190, %f1192, 0f00000000;
	fma.rn.f32 	%f1195, %f1193, %f1187, 0f3F800000;
	fma.rn.f32 	%f1196, %f1186, 0f40490FDB, %f1194;
	and.b32  	%r588, %r587, 1;
	setp.eq.b32 	%p260, %r588, 1;
	selp.f32 	%f1197, %f1195, %f1196, %p260;
	selp.f32 	%f1198, %f1196, %f1195, %p260;
	and.b32  	%r589, %r587, 2;
	setp.eq.s32 	%p261, %r589, 0;
	neg.f32 	%f1199, %f1197;
	selp.f32 	%f1200, %f1197, %f1199, %p261;
	add.s32 	%r590, %r587, 1;
	and.b32  	%r591, %r590, 2;
	setp.eq.s32 	%p262, %r591, 0;
	sub.f32 	%f1202, %f250, %f1198;
	selp.f32 	%f1203, %f1198, %f1202, %p262;
	cvt.rzi.f32.f32 	%f1204, %f1292;
	setp.eq.f32 	%p263, %f1204, %f1292;
	mul.f32 	%f1205, %f1292, 0f00000000;
	selp.f32 	%f140, %f1205, %f1200, %p263;
	abs.f32 	%f1206, %f1292;
	setp.gt.f32 	%p264, %f1206, 0f4B800000;
	add.f32 	%f1207, %f140, 0f3F800000;
	shl.b32 	%r592, %r60, 1;
	cvt.rn.f32.s32 	%f1208, %r592;
	div.approx.f32 	%f142, %f1208, %f253;
	abs.f32 	%f1296, %f142;
	setp.lt.f32 	%p265, %f1296, 0f40000000;
	@%p265 bra 	$L__BB0_120;
// %bb.109:
	setp.gtu.f32 	%p266, %f1296, 0f4B800000;
	@%p266 bra 	$L__BB0_116;
	bra.uni 	$L__BB0_110;
$L__BB0_116:
	mov.b32 	%r70, %f1296;
	and.b32  	%r593, %r70, 8388607;
	or.b32  	%r16292, %r593, 1065353216;
	mov.b32 	%f1295, %r16292;
	add.s32 	%r594, %r70, -1073741824;
	and.b32  	%r16293, %r594, -8388608;
	setp.eq.s32 	%p272, %r16293, 0;
	@%p272 bra 	$L__BB0_119;
// %bb.117:                             // %__nv_fmaf_rn.exit4.i.i.i1712.preheader
	mov.f32 	%f1219, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1218,%f1219;
	// end inline asm
$L__BB0_118:                            // %__nv_fmaf_rn.exit4.i.i.i1712
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r595, %r16293, 192937984;
	add.s32 	%r596, %r16292, %r595;
	mov.b32 	%f1220, %r596;
	mul.f32 	%f1221, %f1218, %f1220;
	sub.f32 	%f1222, %f1220, %f1221;
	fma.rn.f32 	%f1223, %f1222, %f1218, %f1221;
	sub.f32 	%f1224, %f1220, %f1223;
	fma.rz.f32 	%f1225, %f1224, %f1218, %f1223;
	cvt.rzi.f32.f32 	%f1226, %f1225;
	sub.f32 	%f1295, %f1220, %f1226;
	sub.s32 	%r16293, %r16293, %r595;
	mov.b32 	%r16292, %f1295;
	setp.ne.s32 	%p273, %r16293, 0;
	setp.ne.s32 	%p274, %r16292, 0;
	and.pred  	%p275, %p273, %p274;
	@%p275 bra 	$L__BB0_118;
$L__BB0_119:                            // %__internal_fmodf_slowpath_mod.exit.i.i1714
	setp.gt.u32 	%p276, %r70, 2139095039;
	selp.f32 	%f1227, 0f7FFFFFFF, 0f4B800000, %p276;
	mul.f32 	%f1228, %f1295, 0f34000000;
	mul.f32 	%f1296, %f1227, %f1228;
	bra.uni 	$L__BB0_120;
$L__BB0_110:                            // %__nv_fast_fdividef.exit.i.i.i1691
	div.approx.f32 	%f1211, %f1296, %f221;
	cvt.rzi.f32.f32 	%f1294, %f1211;
	fma.rn.f32 	%f145, %f1294, 0fC0000000, %f1296;
	mov.b32 	%r69, %f145;
	setp.lt.u32 	%p267, %r69, 1073741824;
	@%p267 bra 	$L__BB0_115;
// %bb.111:
	setp.lt.u32 	%p268, %r69, -2147483647;
	@%p268 bra 	$L__BB0_113;
// %bb.112:
	add.f32 	%f1216, %f1294, 0fBF800000;
	setp.lt.f32 	%p271, %f145, 0fC0000000;
	add.f32 	%f1217, %f1216, 0fBF800000;
	selp.f32 	%f1294, %f1217, %f1216, %p271;
	bra.uni 	$L__BB0_115;
$L__BB0_113:
	add.f32 	%f1294, %f1294, 0f3F800000;
	setp.ltu.f32 	%p269, %f145, 0f40800000;
	@%p269 bra 	$L__BB0_115;
// %bb.114:                             // %__nv_fmaf_rn.exit.i.i.i1695
	add.f32 	%f1212, %f1294, 0f3F800000;
	fma.rn.f32 	%f1214, %f221, 0fC0400000, %f145;
	setp.ge.f32 	%p270, %f1214, 0f00000000;
	add.f32 	%f1215, %f1212, 0f3F800000;
	selp.f32 	%f1294, %f1215, %f1212, %p270;
$L__BB0_115:                            // %__internal_fmodf_fastpath_quot.exit.i.i1698
	fma.rn.f32 	%f1296, %f1294, 0fC0000000, %f1296;
$L__BB0_120:                            // %__internal_fmodf_kernel.exit.i1717
	shr.u32 	%r138, %r4, 2;
	mov.b32 	%r267, %f291;
	mov.b32 	%r266, %f3;
	mov.b32 	%r285, %f360;
	mov.b32 	%r284, %f12;
	mov.b32 	%r303, %f429;
	mov.b32 	%r302, %f21;
	mov.b32 	%r321, %f498;
	mov.b32 	%r320, %f30;
	mov.b32 	%r339, %f567;
	mov.b32 	%r338, %f39;
	mov.b32 	%r357, %f636;
	mov.b32 	%r356, %f48;
	mov.b32 	%r375, %f705;
	mov.b32 	%r374, %f57;
	mov.b32 	%r393, %f773;
	mov.b32 	%r392, %f66;
	xor.b32  	%r466, %r469, -2147483648;
	xor.b32  	%r465, %r468, -2147483648;
	mov.b32 	%r513, %f1051;
	mov.b32 	%r512, %f197;
	mov.b32 	%r516, %f1048;
	mov.b32 	%r515, %f196;
	xor.b32  	%r554, %r557, -2147483648;
	xor.b32  	%r553, %r556, -2147483648;
	selp.f32 	%f141, %f1207, %f1203, %p264;
	abs.f32 	%f1229, %f1296;
	setp.gtu.f32 	%p277, %f1229, 0f7F800000;
	@%p277 bra 	$L__BB0_122;
// %bb.121:
	mov.b32 	%r597, %f142;
	and.b32  	%r598, %r597, -2147483648;
	mov.b32 	%r599, %f1296;
	or.b32  	%r600, %r598, %r599;
	mov.b32 	%f1296, %r600;
$L__BB0_122:                            // %__nv_fmodf.exit1718
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	// begin inline asm
	cvt.rn.f16x2.f32 %r265, %r267, %r266;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r283, %r285, %r284;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r301, %r303, %r302;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r319, %r321, %r320;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r337, %r339, %r338;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r355, %r357, %r356;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r373, %r375, %r374;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r391, %r393, %r392;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r394, %r396, %r395;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r397, %r396, %r395;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r400, %r402, %r401;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r403, %r402, %r401;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r461, %r463, %r462;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r464, %r466, %r465;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r467, %r469, %r468;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r470, %r463, %r462;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r511, %r513, %r512;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r514, %r516, %r515;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r549, %r551, %r550;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r552, %r554, %r553;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r555, %r557, %r556;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r558, %r551, %r550;
	// end inline asm
	add.f32 	%f1230, %f1296, %f1296;
	mov.b32 	%r608, %f1230;
	and.b32  	%r609, %r608, -2147483648;
	or.b32  	%r610, %r609, 1056964608;
	mov.b32 	%f1231, %r610;
	add.f32 	%f1232, %f1230, %f1231;
	cvt.rzi.f32.f32 	%f1233, %f1232;
	abs.f32 	%f1234, %f1230;
	setp.gt.f32 	%p278, %f1234, 0f4B000000;
	selp.f32 	%f1235, %f1230, %f1233, %p278;
	cvt.rzi.f32.f32 	%f1236, %f1230;
	setp.lt.f32 	%p279, %f1234, 0f3F000000;
	selp.f32 	%f1237, %f1236, %f1235, %p279;
	cvt.rzi.s32.f32 	%r611, %f1237;
	fma.rn.f32 	%f1238, %f1237, 0fBF000000, %f1296;
	mul.f32 	%f1239, %f1238, %f1238;
	fma.rn.f32 	%f1240, %f1239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1241, %f1239, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1242, %f1240, %f1239, 0fC0A55DF6;
	fma.rn.f32 	%f1243, %f1241, %f1239, 0f4081E0CF;
	fma.rn.f32 	%f1244, %f1239, %f1238, 0f00000000;
	fma.rn.f32 	%f1245, %f1243, %f1239, 0fC09DE9E6;
	fma.rn.f32 	%f1246, %f1242, %f1244, 0f00000000;
	fma.rn.f32 	%f1247, %f1245, %f1239, 0f3F800000;
	fma.rn.f32 	%f1248, %f1238, 0f40490FDB, %f1246;
	and.b32  	%r612, %r611, 1;
	setp.eq.b32 	%p280, %r612, 1;
	selp.f32 	%f1249, %f1247, %f1248, %p280;
	selp.f32 	%f1250, %f1248, %f1247, %p280;
	and.b32  	%r613, %r611, 2;
	setp.eq.s32 	%p281, %r613, 0;
	neg.f32 	%f1251, %f1249;
	selp.f32 	%f1252, %f1249, %f1251, %p281;
	add.s32 	%r614, %r611, 1;
	and.b32  	%r615, %r614, 2;
	setp.eq.s32 	%p282, %r615, 0;
	sub.f32 	%f1254, %f250, %f1250;
	selp.f32 	%f1255, %f1250, %f1254, %p282;
	cvt.rzi.f32.f32 	%f1256, %f1296;
	setp.eq.f32 	%p283, %f1256, %f1296;
	mul.f32 	%f1257, %f1296, 0f00000000;
	selp.f32 	%f1258, %f1257, %f1252, %p283;
	abs.f32 	%f1259, %f1296;
	setp.gt.f32 	%p284, %f1259, 0f4B800000;
	add.f32 	%f1260, %f1258, 0f3F800000;
	selp.f32 	%f1261, %f1260, %f1255, %p284;
	mov.b32 	%r603, %f1261;
	mov.b32 	%r602, %f141;
	// begin inline asm
	cvt.rn.f16x2.f32 %r601, %r603, %r602;
	// end inline asm
	mov.b32 	%r606, %f1258;
	mov.b32 	%r605, %f140;
	// begin inline asm
	cvt.rn.f16x2.f32 %r604, %r606, %r605;
	// end inline asm
	shl.b32 	%r616, %r1, 5;
	and.b32  	%r617, %r126, 28;
	cvt.u16.u32 	%rs40, %r128;
	mul.hi.u16 	%rs41, %rs40, -21845;
	shr.u16 	%rs42, %rs41, 5;
	mul.lo.s16 	%rs43, %rs42, 48;
	sub.s16 	%rs44, %rs40, %rs43;
	shl.b16 	%rs45, %rs44, 8;
	cvt.u32.u16 	%r618, %rs45;
	and.b32  	%r619, %r616, 224;
	or.b32  	%r620, %r619, %r617;
	shl.b32 	%r621, %r4, 3;
	and.b32  	%r622, %r621, 64;
	or.b32  	%r79, %r622, %r2;
	or.b32  	%r80, %r620, %r618;
	bfe.s32 	%r623, %r4, 3, 1;
	and.b32  	%r81, %r4, 8;
	shl.b32 	%r624, %r4, 4;
	or.b32  	%r625, %r81, %r624;
	shr.u32 	%r626, %r625, 2;
	and.b32  	%r627, %r626, 30;
	and.b32  	%r628, %r138, 6;
	or.b32  	%r629, %r130, %r628;
	and.b32  	%r630, %r624, 48;
	shr.u32 	%r631, %r2, 1;
	and.b32  	%r632, %r3, 32;
	or.b32  	%r633, %r632, %r631;
	or.b32  	%r634, %r633, 8;
	or.b32  	%r635, %r633, 16;
	or.b32  	%r636, %r633, 24;
	or.b32  	%r82, %r630, %r629;
	and.b32  	%r637, %r4, 18;
	or.b32  	%r638, %r637, %r130;
	or.b32  	%r639, %r638, %r127;
	or.b32  	%r640, %r639, %r132;
	shr.u32 	%r641, %r640, 1;
	mul.lo.s32 	%r642, %r641, 65;
	add.s32 	%r83, %r633, %r642;
	add.s32 	%r84, %r634, %r642;
	add.s32 	%r85, %r635, %r642;
	add.s32 	%r86, %r636, %r642;
	add.s32 	%r643, %r642, 2080;
	add.s32 	%r87, %r633, %r643;
	add.s32 	%r88, %r634, %r643;
	add.s32 	%r89, %r635, %r643;
	add.s32 	%r90, %r636, %r643;
	shl.b32 	%r644, %r2, 1;
	or.b32  	%r645, %r140, %r644;
	mul.lo.s32 	%r646, %r645, 65;
	add.s32 	%r647, %r627, %r646;
	mul.wide.u32 	%rd42, %r647, 4;
	mov.u64 	%rd43, shmem;
	add.s64 	%rd4, %rd43, %rd42;
	cvt.u64.u32 	%rd44, %r627;
	cvt.u64.u32 	%rd45, %r646;
	add.s64 	%rd46, %rd45, %rd44;
	shl.b64 	%rd47, %rd46, 2;
	add.s64 	%rd5, %rd43, %rd47;
	or.b32  	%r648, %r645, 32;
	mul.lo.s32 	%r649, %r648, 65;
	add.s32 	%r650, %r627, %r649;
	mul.wide.u32 	%rd48, %r650, 4;
	add.s64 	%rd6, %rd43, %rd48;
	cvt.u64.u32 	%rd49, %r649;
	add.s64 	%rd50, %rd49, %rd44;
	shl.b64 	%rd51, %rd50, 2;
	add.s64 	%rd7, %rd43, %rd51;
	shr.u32 	%r651, %r130, 3;
	setp.gt.u32 	%p285, %r4, 15;
	bfe.u32 	%r652, %r624, 5, 1;
	and.b32  	%r91, %r129, 32;
	shr.u32 	%r653, %r2, 3;
	mul.lo.s32 	%r654, %r653, 260;
	bfe.s32 	%r655, %r2, 1, 1;
	and.b32  	%r656, %r2, 2;
	setp.eq.s32 	%p286, %r656, 0;
	and.b32  	%r657, %r655, 1040;
	bfe.s32 	%r658, %r2, 2, 1;
	and.b32  	%r659, %r2, 4;
	setp.eq.s32 	%p287, %r659, 0;
	and.b32  	%r660, %r658, 520;
	mul.lo.s32 	%r661, %r140, 65;
	and.b32  	%r662, %r2, 1;
	neg.s32 	%r663, %r662;
	and.b32  	%r664, %r663, 2080;
	or.b32  	%r665, %r664, %r627;
	add.s32 	%r666, %r665, %r657;
	add.s32 	%r667, %r666, %r654;
	add.s32 	%r668, %r667, %r660;
	add.s32 	%r669, %r668, %r661;
	mul.wide.u32 	%rd52, %r669, 4;
	add.s64 	%rd8, %rd43, %rd52;
	cvt.u64.u32 	%rd53, %r661;
	selp.b64 	%rd54, 0, 520, %p287;
	cvt.u64.u32 	%rd55, %r654;
	selp.b64 	%rd56, 0, 1040, %p286;
	cvt.u64.u32 	%rd57, %r665;
	add.s64 	%rd58, %rd57, %rd56;
	add.s64 	%rd59, %rd58, %rd55;
	add.s64 	%rd60, %rd59, %rd54;
	add.s64 	%rd61, %rd60, %rd53;
	shl.b64 	%rd62, %rd61, 2;
	add.s64 	%rd9, %rd43, %rd62;
	cvt.u64.u32 	%rd63, %r667;
	add.s64 	%rd64, %rd63, %rd54;
	add.s64 	%rd65, %rd64, %rd53;
	shl.b64 	%rd66, %rd65, 2;
	add.s64 	%rd10, %rd43, %rd66;
	add.s32 	%r670, %r669, 162;
	mul.wide.u32 	%rd67, %r670, 4;
	add.s64 	%rd11, %rd43, %rd67;
	add.s32 	%r671, %r669, 131;
	mul.wide.u32 	%rd68, %r671, 4;
	add.s64 	%rd12, %rd43, %rd68;
	add.s32 	%r672, %r669, 163;
	mul.wide.u32 	%rd69, %r672, 4;
	add.s64 	%rd13, %rd43, %rd69;
	add.s32 	%r673, %r669, 4193;
	mul.wide.u32 	%rd70, %r673, 4;
	add.s64 	%rd14, %rd43, %rd70;
	add.s32 	%r674, %r669, 4162;
	mul.wide.u32 	%rd71, %r674, 4;
	add.s64 	%rd15, %rd43, %rd71;
	add.s32 	%r675, %r669, 4194;
	mul.wide.u32 	%rd72, %r675, 4;
	add.s64 	%rd16, %rd43, %rd72;
	add.s32 	%r676, %r669, 4291;
	mul.wide.u32 	%rd73, %r676, 4;
	add.s64 	%rd17, %rd43, %rd73;
	add.s32 	%r677, %r669, 4323;
	mul.wide.u32 	%rd74, %r677, 4;
	add.s64 	%rd18, %rd43, %rd74;
	add.s32 	%r678, %r669, 4292;
	mul.wide.u32 	%rd75, %r678, 4;
	add.s64 	%rd19, %rd43, %rd75;
	add.s32 	%r679, %r669, 4324;
	mul.wide.u32 	%rd76, %r679, 4;
	add.s64 	%rd20, %rd43, %rd76;
	mul.lo.s32 	%r680, %r651, 260;
	and.b32  	%r681, %r623, 1040;
	setp.eq.s32 	%p288, %r137, 0;
	selp.b32 	%r682, 0, 130, %p288;
	selp.b32 	%r683, 520, 0, %p285;
	mul.lo.s32 	%r92, %r652, 65;
	or.b32  	%r684, %r633, %r681;
	add.s32 	%r685, %r684, %r680;
	add.s32 	%r686, %r685, %r682;
	add.s32 	%r687, %r686, %r683;
	add.s32 	%r93, %r687, %r92;
	or.b32  	%r688, %r634, %r681;
	add.s32 	%r689, %r688, %r680;
	add.s32 	%r690, %r689, %r682;
	add.s32 	%r691, %r690, %r683;
	add.s32 	%r94, %r691, %r92;
	add.s32 	%r692, %r635, %r681;
	add.s32 	%r693, %r692, %r680;
	add.s32 	%r694, %r693, %r682;
	add.s32 	%r695, %r694, %r683;
	add.s32 	%r95, %r695, %r92;
	add.s32 	%r696, %r636, %r681;
	add.s32 	%r697, %r696, %r680;
	add.s32 	%r698, %r697, %r682;
	add.s32 	%r699, %r698, %r683;
	add.s32 	%r96, %r699, %r92;
	add.s32 	%r97, %r633, 2080;
	add.s32 	%r98, %r634, 2080;
	add.s32 	%r99, %r635, 2080;
	add.s32 	%r100, %r636, 2080;
	add.s32 	%r700, %r650, 4193;
	mul.wide.u32 	%rd77, %r700, 4;
	add.s64 	%rd21, %rd43, %rd77;
	mov.u32 	%r16294, 0;
	setp.eq.s32 	%p290, %r81, 0;
	mov.u16 	%rs2405, 25600;
	mov.u16 	%rs2197, 21504;
	mov.u16 	%rs2413, 18432;
	mov.u32 	%r16295, %r16294;
	mov.u32 	%r16296, %r16294;
	mov.u32 	%r16297, %r16294;
	mov.u32 	%r16298, %r16294;
	mov.u32 	%r16299, %r16294;
	mov.u32 	%r16300, %r16294;
	mov.u32 	%r16301, %r16294;
	mov.u32 	%r16302, %r16294;
	mov.u32 	%r16303, %r16294;
	mov.u32 	%r16304, %r16294;
	mov.u32 	%r16305, %r16294;
	mov.u32 	%r16306, %r16294;
	mov.u32 	%r16307, %r16294;
	mov.u32 	%r16308, %r16294;
	mov.u32 	%r16309, %r16294;
	mov.u32 	%r16310, %r16294;
	mov.u32 	%r16311, %r16294;
	mov.u32 	%r16312, %r16294;
	mov.u32 	%r16313, %r16294;
	mov.u32 	%r16314, %r16294;
	mov.u32 	%r16315, %r16294;
	mov.u32 	%r16316, %r16294;
	mov.u32 	%r16317, %r16294;
	mov.u32 	%r16318, %r16294;
$L__BB0_123:                            // %L2066
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_156 Depth 2
	add.s32 	%r701, %r16318, %r221;
	setp.lt.s32 	%p289, %r701, %r222;
	@%p289 bra 	$L__BB0_155;
	bra.uni 	$L__BB0_124;
$L__BB0_155:                            // %pass806
                                        //   in Loop: Header=BB0_123 Depth=1
	or.b32  	%r768, %r16318, %r91;
	or.b32  	%r769, %r79, %r768;
	add.s32 	%r770, %r769, %r221;
	mad.lo.s32 	%r771, %r770, 12288, %r80;
	mul.hi.s32 	%r772, %r771, 715827883;
	shr.u32 	%r773, %r772, 31;
	shr.s32 	%r774, %r772, 26;
	add.s32 	%r775, %r774, %r773;
	setp.lt.s32 	%p291, %r771, 0;
	mul.lo.s32 	%r776, %r775, 402653184;
	setp.ne.s32 	%p292, %r776, %r771;
	and.pred  	%p293, %p291, %p292;
	selp.s32 	%r777, -1, 0, %p293;
	add.s32 	%r778, %r775, %r777;
	or.b32  	%r779, %r771, 1;
	mad.lo.s32 	%r780, %r778, -402653184, %r779;
	mul.wide.s32 	%rd78, %r780, 4;
	add.s64 	%rd79, %rd2, %rd78;
	ld.global.v4.u32 	{%r781, %r782, %r783, %r784}, [%rd79+-4];
	or.b32  	%r785, %r769, 16;
	add.s32 	%r786, %r785, %r221;
	mad.lo.s32 	%r787, %r786, 12288, %r80;
	mul.hi.s32 	%r788, %r787, 715827883;
	shr.u32 	%r789, %r788, 31;
	shr.s32 	%r790, %r788, 26;
	add.s32 	%r791, %r790, %r789;
	setp.lt.s32 	%p294, %r787, 0;
	mul.lo.s32 	%r792, %r791, 402653184;
	setp.ne.s32 	%p295, %r792, %r787;
	and.pred  	%p296, %p294, %p295;
	selp.s32 	%r793, -1, 0, %p296;
	add.s32 	%r794, %r791, %r793;
	or.b32  	%r795, %r787, 1;
	mad.lo.s32 	%r796, %r794, -402653184, %r795;
	mul.wide.s32 	%rd80, %r796, 4;
	add.s64 	%rd81, %rd2, %rd80;
	ld.global.v4.u32 	{%r797, %r798, %r799, %r800}, [%rd81+-4];
	or.b32  	%r801, %r769, 128;
	add.s32 	%r802, %r801, %r221;
	mad.lo.s32 	%r803, %r802, 12288, %r80;
	mul.hi.s32 	%r804, %r803, 715827883;
	shr.u32 	%r805, %r804, 31;
	shr.s32 	%r806, %r804, 26;
	add.s32 	%r807, %r806, %r805;
	setp.lt.s32 	%p297, %r803, 0;
	mul.lo.s32 	%r808, %r807, 402653184;
	setp.ne.s32 	%p298, %r808, %r803;
	and.pred  	%p299, %p297, %p298;
	selp.s32 	%r809, -1, 0, %p299;
	add.s32 	%r810, %r807, %r809;
	or.b32  	%r811, %r803, 1;
	mad.lo.s32 	%r812, %r810, -402653184, %r811;
	mul.wide.s32 	%rd82, %r812, 4;
	add.s64 	%rd83, %rd2, %rd82;
	ld.global.v4.u32 	{%r813, %r814, %r815, %r816}, [%rd83+-4];
	or.b32  	%r817, %r769, 144;
	add.s32 	%r818, %r817, %r221;
	mad.lo.s32 	%r819, %r818, 12288, %r80;
	mul.hi.s32 	%r820, %r819, 715827883;
	shr.u32 	%r821, %r820, 31;
	shr.s32 	%r822, %r820, 26;
	add.s32 	%r823, %r822, %r821;
	setp.lt.s32 	%p300, %r819, 0;
	mul.lo.s32 	%r824, %r823, 402653184;
	setp.ne.s32 	%p301, %r824, %r819;
	and.pred  	%p302, %p300, %p301;
	selp.s32 	%r825, -1, 0, %p302;
	add.s32 	%r826, %r823, %r825;
	or.b32  	%r827, %r819, 1;
	mad.lo.s32 	%r828, %r826, -402653184, %r827;
	mul.wide.s32 	%rd84, %r828, 4;
	add.s64 	%rd85, %rd2, %rd84;
	ld.global.v4.u32 	{%r829, %r830, %r831, %r832}, [%rd85+-4];
	selp.b32 	%r833, %r783, %r781, %p290;
	shfl.sync.bfly.b32	%r834, %r833, 8, 31, -1;
	selp.b32 	%r704, %r781, %r834, %p290;
	selp.b32 	%r705, %r834, %r783, %p290;
	selp.b32 	%r835, %r784, %r782, %p290;
	shfl.sync.bfly.b32	%r836, %r835, 8, 31, -1;
	selp.b32 	%r712, %r782, %r836, %p290;
	selp.b32 	%r713, %r836, %r784, %p290;
	selp.b32 	%r837, %r799, %r797, %p290;
	shfl.sync.bfly.b32	%r838, %r837, 8, 31, -1;
	selp.b32 	%r720, %r797, %r838, %p290;
	selp.b32 	%r721, %r838, %r799, %p290;
	selp.b32 	%r839, %r800, %r798, %p290;
	shfl.sync.bfly.b32	%r840, %r839, 8, 31, -1;
	selp.b32 	%r728, %r798, %r840, %p290;
	selp.b32 	%r729, %r840, %r800, %p290;
	selp.b32 	%r841, %r815, %r813, %p290;
	shfl.sync.bfly.b32	%r842, %r841, 8, 31, -1;
	selp.b32 	%r736, %r813, %r842, %p290;
	selp.b32 	%r737, %r842, %r815, %p290;
	selp.b32 	%r843, %r816, %r814, %p290;
	shfl.sync.bfly.b32	%r844, %r843, 8, 31, -1;
	selp.b32 	%r744, %r814, %r844, %p290;
	selp.b32 	%r745, %r844, %r816, %p290;
	selp.b32 	%r845, %r831, %r829, %p290;
	shfl.sync.bfly.b32	%r846, %r845, 8, 31, -1;
	selp.b32 	%r752, %r829, %r846, %p290;
	selp.b32 	%r753, %r846, %r831, %p290;
	selp.b32 	%r847, %r832, %r830, %p290;
	shfl.sync.bfly.b32	%r848, %r847, 8, 31, -1;
	selp.b32 	%r760, %r830, %r848, %p290;
	selp.b32 	%r761, %r848, %r832, %p290;
	mov.u32 	%r16205, 21520;
	// begin inline asm
	prmt.b32 %r703, %r704, %r705, %r16205;
	// end inline asm
	mov.u32 	%r16209, 30258;
	// begin inline asm
	prmt.b32 %r707, %r704, %r705, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r711, %r712, %r713, %r16205;
	// end inline asm
	// begin inline asm
	prmt.b32 %r715, %r712, %r713, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r719, %r720, %r721, %r16205;
	// end inline asm
	// begin inline asm
	prmt.b32 %r723, %r720, %r721, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r727, %r728, %r729, %r16205;
	// end inline asm
	// begin inline asm
	prmt.b32 %r731, %r728, %r729, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r735, %r736, %r737, %r16205;
	// end inline asm
	// begin inline asm
	prmt.b32 %r739, %r736, %r737, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r743, %r744, %r745, %r16205;
	// end inline asm
	// begin inline asm
	prmt.b32 %r747, %r744, %r745, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r751, %r752, %r753, %r16205;
	// end inline asm
	// begin inline asm
	prmt.b32 %r755, %r752, %r753, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r759, %r760, %r761, %r16205;
	// end inline asm
	// begin inline asm
	prmt.b32 %r763, %r760, %r761, %r16209;
	// end inline asm
	st.shared.u32 	[%rd8], %r703;
	st.shared.u32 	[%rd9+128], %r707;
	st.shared.u32 	[%rd9+4], %r711;
	st.shared.u32 	[%rd9+132], %r715;
	st.shared.u32 	[%rd10+520], %r719;
	st.shared.u32 	[%rd11], %r723;
	st.shared.u32 	[%rd12], %r727;
	st.shared.u32 	[%rd13], %r731;
	st.shared.u32 	[%rd8+16644], %r735;
	st.shared.u32 	[%rd14], %r739;
	st.shared.u32 	[%rd15], %r743;
	st.shared.u32 	[%rd16], %r747;
	st.shared.u32 	[%rd17], %r751;
	st.shared.u32 	[%rd18], %r755;
	st.shared.u32 	[%rd19], %r759;
	st.shared.u32 	[%rd20], %r763;
	bar.sync 	0;
	or.b32  	%r849, %r82, %r16318;
	or.b32  	%r169, %r849, 1;
	mov.u32 	%r3194, 0;
	mov.u32 	%r16325, %r3194;
$L__BB0_156:                            // %pass6325
                                        //   Parent Loop BB0_123 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.eq.s32 	%p303, %r16325, 0;
	selp.b32 	%r16114, 0, 4161, %p303;
	add.s32 	%r16115, %r93, %r16114;
	mul.wide.u32 	%rd86, %r16115, 4;
	add.s64 	%rd88, %rd43, %rd86;
	ld.shared.u32 	%r16116, [%rd88];
	add.s32 	%r16117, %r94, %r16114;
	mul.wide.u32 	%rd89, %r16117, 4;
	add.s64 	%rd90, %rd43, %rd89;
	ld.shared.u32 	%r16118, [%rd90];
	add.s32 	%r16119, %r95, %r16114;
	mul.wide.u32 	%rd91, %r16119, 4;
	add.s64 	%rd92, %rd43, %rd91;
	ld.shared.u32 	%r16120, [%rd92];
	add.s32 	%r16121, %r96, %r16114;
	mul.wide.u32 	%rd93, %r16121, 4;
	add.s64 	%rd94, %rd43, %rd93;
	ld.shared.u32 	%r16122, [%rd94];
	add.s32 	%r16123, %r169, %r16325;
	bfe.s32 	%r16124, %r16123, 3, 1;
	and.b32  	%r16125, %r16124, 260;
	bfe.s32 	%r16126, %r16123, 1, 1;
	and.b32  	%r16127, %r16126, 1040;
	bfe.s32 	%r16128, %r16123, 4, 1;
	and.b32  	%r16129, %r16128, 130;
	bfe.s32 	%r16130, %r16123, 2, 1;
	and.b32  	%r16131, %r16130, 520;
	bfe.s32 	%r16132, %r16123, 7, 1;
	and.b32  	%r16133, %r16132, 4161;
	or.b32  	%r16134, %r97, %r16127;
	add.s32 	%r16135, %r16134, %r16125;
	add.s32 	%r16136, %r16135, %r16129;
	add.s32 	%r16137, %r16136, %r16131;
	add.s32 	%r16138, %r16137, %r92;
	add.s32 	%r16139, %r16138, %r16133;
	mul.wide.u32 	%rd95, %r16139, 4;
	add.s64 	%rd96, %rd43, %rd95;
	ld.shared.u32 	%r16140, [%rd96];
	or.b32  	%r16141, %r98, %r16127;
	add.s32 	%r16142, %r16141, %r16125;
	add.s32 	%r16143, %r16142, %r16129;
	add.s32 	%r16144, %r16143, %r16131;
	add.s32 	%r16145, %r16144, %r92;
	add.s32 	%r16146, %r16145, %r16133;
	mul.wide.u32 	%rd97, %r16146, 4;
	add.s64 	%rd98, %rd43, %rd97;
	ld.shared.u32 	%r16147, [%rd98];
	add.s32 	%r16148, %r99, %r16127;
	add.s32 	%r16149, %r16148, %r16125;
	add.s32 	%r16150, %r16149, %r16129;
	add.s32 	%r16151, %r16150, %r16131;
	add.s32 	%r16152, %r16151, %r92;
	add.s32 	%r16153, %r16152, %r16133;
	mul.wide.u32 	%rd99, %r16153, 4;
	add.s64 	%rd100, %rd43, %rd99;
	ld.shared.u32 	%r16154, [%rd100];
	add.s32 	%r16155, %r100, %r16127;
	add.s32 	%r16156, %r16155, %r16125;
	add.s32 	%r16157, %r16156, %r16129;
	add.s32 	%r16158, %r16157, %r16131;
	add.s32 	%r16159, %r16158, %r92;
	add.s32 	%r16160, %r16159, %r16133;
	mul.wide.u32 	%rd101, %r16160, 4;
	add.s64 	%rd102, %rd43, %rd101;
	ld.shared.u32 	%r16161, [%rd102];
	// begin inline asm
	mov.b32 %r855, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r866, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r854, %r16116, -2004318072;
	mov.u32 	%r853, 983055;
	// begin inline asm
	lop3.b32 %r852, %r853, %r854, %r855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r856, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r857, %r855, %r856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r860, %r852, %r857;
	// end inline asm
	mov.u32 	%r864, 15728880;
	// begin inline asm
	lop3.b32 %r863, %r864, %r854, %r866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r867, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r868, %r866, %r867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r871, %r863, %r868;
	// end inline asm
	shr.u32 	%r876, %r854, 8;
	// begin inline asm
	lop3.b32 %r874, %r853, %r876, %r855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r878, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r879, %r855, %r878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r882, %r874, %r879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r885, %r864, %r876, %r866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r889, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r890, %r866, %r889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r893, %r885, %r890;
	// end inline asm
	// begin inline asm
	mov.b32 %r901, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r912, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r900, %r16118, -2004318072;
	// begin inline asm
	lop3.b32 %r898, %r853, %r900, %r901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r902, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r903, %r901, %r902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r906, %r898, %r903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r909, %r864, %r900, %r912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r913, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r914, %r912, %r913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r917, %r909, %r914;
	// end inline asm
	shr.u32 	%r922, %r900, 8;
	// begin inline asm
	lop3.b32 %r920, %r853, %r922, %r901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r924, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r925, %r901, %r924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r928, %r920, %r925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r931, %r864, %r922, %r912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r935, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r936, %r912, %r935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r939, %r931, %r936;
	// end inline asm
	// begin inline asm
	mov.b32 %r947, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r958, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r946, %r16120, -2004318072;
	// begin inline asm
	lop3.b32 %r944, %r853, %r946, %r947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r948, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r949, %r947, %r948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r952, %r944, %r949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r955, %r864, %r946, %r958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r959, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r960, %r958, %r959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r963, %r955, %r960;
	// end inline asm
	shr.u32 	%r968, %r946, 8;
	// begin inline asm
	lop3.b32 %r966, %r853, %r968, %r947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r970, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r971, %r947, %r970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r974, %r966, %r971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r977, %r864, %r968, %r958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r981, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r982, %r958, %r981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r985, %r977, %r982;
	// end inline asm
	// begin inline asm
	mov.b32 %r993, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1004, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r992, %r16122, -2004318072;
	// begin inline asm
	lop3.b32 %r990, %r853, %r992, %r993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r994, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r995, %r993, %r994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r998, %r990, %r995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1001, %r864, %r992, %r1004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1005, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1006, %r1004, %r1005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1009, %r1001, %r1006;
	// end inline asm
	shr.u32 	%r1014, %r992, 8;
	// begin inline asm
	lop3.b32 %r1012, %r853, %r1014, %r993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1016, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1017, %r993, %r1016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1020, %r1012, %r1017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1023, %r864, %r1014, %r1004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1027, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1028, %r1004, %r1027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1031, %r1023, %r1028;
	// end inline asm
	// begin inline asm
	mov.b32 %r1039, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1050, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1038, %r16140, -2004318072;
	// begin inline asm
	lop3.b32 %r1036, %r853, %r1038, %r1039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1040, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1041, %r1039, %r1040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1044, %r1036, %r1041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1047, %r864, %r1038, %r1050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1051, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1052, %r1050, %r1051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1055, %r1047, %r1052;
	// end inline asm
	shr.u32 	%r1060, %r1038, 8;
	// begin inline asm
	lop3.b32 %r1058, %r853, %r1060, %r1039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1062, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1063, %r1039, %r1062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1066, %r1058, %r1063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1069, %r864, %r1060, %r1050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1073, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1074, %r1050, %r1073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1077, %r1069, %r1074;
	// end inline asm
	// begin inline asm
	mov.b32 %r1085, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1096, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1084, %r16147, -2004318072;
	// begin inline asm
	lop3.b32 %r1082, %r853, %r1084, %r1085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1086, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1087, %r1085, %r1086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1090, %r1082, %r1087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1093, %r864, %r1084, %r1096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1097, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1098, %r1096, %r1097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1101, %r1093, %r1098;
	// end inline asm
	shr.u32 	%r1106, %r1084, 8;
	// begin inline asm
	lop3.b32 %r1104, %r853, %r1106, %r1085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1108, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1109, %r1085, %r1108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1112, %r1104, %r1109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1115, %r864, %r1106, %r1096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1119, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1120, %r1096, %r1119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1123, %r1115, %r1120;
	// end inline asm
	// begin inline asm
	mov.b32 %r1131, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1142, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1130, %r16154, -2004318072;
	// begin inline asm
	lop3.b32 %r1128, %r853, %r1130, %r1131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1132, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1133, %r1131, %r1132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1136, %r1128, %r1133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1139, %r864, %r1130, %r1142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1143, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1144, %r1142, %r1143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1147, %r1139, %r1144;
	// end inline asm
	shr.u32 	%r1152, %r1130, 8;
	// begin inline asm
	lop3.b32 %r1150, %r853, %r1152, %r1131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1154, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1155, %r1131, %r1154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1158, %r1150, %r1155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1161, %r864, %r1152, %r1142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1165, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1166, %r1142, %r1165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1169, %r1161, %r1166;
	// end inline asm
	// begin inline asm
	mov.b32 %r1177, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1188, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1176, %r16161, -2004318072;
	// begin inline asm
	lop3.b32 %r1174, %r853, %r1176, %r1177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1178, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1179, %r1177, %r1178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1182, %r1174, %r1179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1185, %r864, %r1176, %r1188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1189, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1190, %r1188, %r1189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1193, %r1185, %r1190;
	// end inline asm
	shr.u32 	%r1198, %r1176, 8;
	// begin inline asm
	lop3.b32 %r1196, %r853, %r1198, %r1177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1200, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1201, %r1177, %r1200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1204, %r1196, %r1201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1207, %r864, %r1198, %r1188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1211, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1212, %r1188, %r1211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1215, %r1207, %r1212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1218, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1220, %r1218, %r860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1223, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1225, %r1223, %r871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1228, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1230, %r1228, %r882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1233, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1235, %r1233, %r893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1238, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1240, %r1238, %r906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1243, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1245, %r1243, %r917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1248, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1250, %r1248, %r928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1253, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1255, %r1253, %r939;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1258, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1260, %r1258, %r952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1263, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1265, %r1263, %r963;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1268, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1270, %r1268, %r974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1273, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1275, %r1273, %r985;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1278, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1280, %r1278, %r998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1283, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1285, %r1283, %r1009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1288, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1290, %r1288, %r1020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1293, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1295, %r1293, %r1031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1298, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1300, %r1298, %r1044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1303, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1305, %r1303, %r1055;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1308, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1310, %r1308, %r1066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1313, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1315, %r1313, %r1077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1318, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1320, %r1318, %r1090;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1323, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1325, %r1323, %r1101;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1328, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1330, %r1328, %r1112;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1333, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1335, %r1333, %r1123;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1338, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1340, %r1338, %r1136;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1343, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1345, %r1343, %r1147;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1348, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1350, %r1348, %r1158;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1353, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1355, %r1353, %r1169;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1358, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1360, %r1358, %r1182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1363, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1365, %r1363, %r1193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1368, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1370, %r1368, %r1204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1373, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1375, %r1373, %r1215;
	// end inline asm
	// begin inline asm
	mov.b32 %r1383, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1394, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1382, %r16294, -2004318072;
	// begin inline asm
	lop3.b32 %r1380, %r853, %r1382, %r1383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1384, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1385, %r1383, %r1384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1388, %r1380, %r1385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1391, %r864, %r1382, %r1394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1395, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1396, %r1394, %r1395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1399, %r1391, %r1396;
	// end inline asm
	shr.u32 	%r1404, %r1382, 8;
	// begin inline asm
	lop3.b32 %r1402, %r853, %r1404, %r1383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1406, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1407, %r1383, %r1406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1410, %r1402, %r1407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1413, %r864, %r1404, %r1394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1417, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1418, %r1394, %r1417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1421, %r1413, %r1418;
	// end inline asm
	// begin inline asm
	mov.b32 %r1429, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1440, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1428, %r16295, -2004318072;
	// begin inline asm
	lop3.b32 %r1426, %r853, %r1428, %r1429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1430, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1431, %r1429, %r1430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1434, %r1426, %r1431;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1437, %r864, %r1428, %r1440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1441, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1442, %r1440, %r1441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1445, %r1437, %r1442;
	// end inline asm
	shr.u32 	%r1450, %r1428, 8;
	// begin inline asm
	lop3.b32 %r1448, %r853, %r1450, %r1429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1452, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1453, %r1429, %r1452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1456, %r1448, %r1453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1459, %r864, %r1450, %r1440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1463, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1464, %r1440, %r1463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1467, %r1459, %r1464;
	// end inline asm
	// begin inline asm
	mov.b32 %r1475, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1486, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1474, %r16296, -2004318072;
	// begin inline asm
	lop3.b32 %r1472, %r853, %r1474, %r1475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1476, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1477, %r1475, %r1476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1480, %r1472, %r1477;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1483, %r864, %r1474, %r1486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1487, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1488, %r1486, %r1487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1491, %r1483, %r1488;
	// end inline asm
	shr.u32 	%r1496, %r1474, 8;
	// begin inline asm
	lop3.b32 %r1494, %r853, %r1496, %r1475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1498, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1499, %r1475, %r1498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1502, %r1494, %r1499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1505, %r864, %r1496, %r1486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1509, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1510, %r1486, %r1509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1513, %r1505, %r1510;
	// end inline asm
	// begin inline asm
	mov.b32 %r1521, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1532, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1520, %r16297, -2004318072;
	// begin inline asm
	lop3.b32 %r1518, %r853, %r1520, %r1521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1522, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1523, %r1521, %r1522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1526, %r1518, %r1523;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1529, %r864, %r1520, %r1532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1533, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1534, %r1532, %r1533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1537, %r1529, %r1534;
	// end inline asm
	shr.u32 	%r1542, %r1520, 8;
	// begin inline asm
	lop3.b32 %r1540, %r853, %r1542, %r1521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1544, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1545, %r1521, %r1544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1548, %r1540, %r1545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1551, %r864, %r1542, %r1532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1555, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1556, %r1532, %r1555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1559, %r1551, %r1556;
	// end inline asm
	// begin inline asm
	mov.b32 %r1567, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1578, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1566, %r16306, -2004318072;
	// begin inline asm
	lop3.b32 %r1564, %r853, %r1566, %r1567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1568, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1569, %r1567, %r1568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1572, %r1564, %r1569;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1575, %r864, %r1566, %r1578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1579, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1580, %r1578, %r1579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1583, %r1575, %r1580;
	// end inline asm
	shr.u32 	%r1588, %r1566, 8;
	// begin inline asm
	lop3.b32 %r1586, %r853, %r1588, %r1567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1590, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1591, %r1567, %r1590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1594, %r1586, %r1591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1597, %r864, %r1588, %r1578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1601, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1602, %r1578, %r1601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1605, %r1597, %r1602;
	// end inline asm
	// begin inline asm
	mov.b32 %r1613, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1624, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1612, %r16307, -2004318072;
	// begin inline asm
	lop3.b32 %r1610, %r853, %r1612, %r1613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1614, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1615, %r1613, %r1614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1618, %r1610, %r1615;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1621, %r864, %r1612, %r1624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1625, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1626, %r1624, %r1625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1629, %r1621, %r1626;
	// end inline asm
	shr.u32 	%r1634, %r1612, 8;
	// begin inline asm
	lop3.b32 %r1632, %r853, %r1634, %r1613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1636, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1637, %r1613, %r1636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1640, %r1632, %r1637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1643, %r864, %r1634, %r1624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1647, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1648, %r1624, %r1647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1651, %r1643, %r1648;
	// end inline asm
	// begin inline asm
	mov.b32 %r1659, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1670, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1658, %r16308, -2004318072;
	// begin inline asm
	lop3.b32 %r1656, %r853, %r1658, %r1659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1660, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1661, %r1659, %r1660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1664, %r1656, %r1661;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1667, %r864, %r1658, %r1670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1671, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1672, %r1670, %r1671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1675, %r1667, %r1672;
	// end inline asm
	shr.u32 	%r1680, %r1658, 8;
	// begin inline asm
	lop3.b32 %r1678, %r853, %r1680, %r1659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1682, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1683, %r1659, %r1682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1686, %r1678, %r1683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1689, %r864, %r1680, %r1670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1693, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1694, %r1670, %r1693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1697, %r1689, %r1694;
	// end inline asm
	// begin inline asm
	mov.b32 %r1705, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1716, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1704, %r16309, -2004318072;
	// begin inline asm
	lop3.b32 %r1702, %r853, %r1704, %r1705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1706, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1707, %r1705, %r1706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1710, %r1702, %r1707;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1713, %r864, %r1704, %r1716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1717, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1718, %r1716, %r1717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1721, %r1713, %r1718;
	// end inline asm
	shr.u32 	%r1726, %r1704, 8;
	// begin inline asm
	lop3.b32 %r1724, %r853, %r1726, %r1705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1728, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1729, %r1705, %r1728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1732, %r1724, %r1729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1735, %r864, %r1726, %r1716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1739, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1740, %r1716, %r1739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1743, %r1735, %r1740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1746, %r265, %r1388, %r1220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1750, %r265, %r1399, %r1225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1754, %r265, %r1410, %r1230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1758, %r265, %r1421, %r1235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1762, %r265, %r1434, %r1240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1766, %r265, %r1445, %r1245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1770, %r265, %r1456, %r1250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1774, %r265, %r1467, %r1255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1778, %r265, %r1480, %r1260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1782, %r265, %r1491, %r1265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1786, %r265, %r1502, %r1270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1790, %r265, %r1513, %r1275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1794, %r265, %r1526, %r1280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1798, %r265, %r1537, %r1285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1802, %r265, %r1548, %r1290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1806, %r265, %r1559, %r1295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1810, %r283, %r1572, %r1300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1814, %r283, %r1583, %r1305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1818, %r283, %r1594, %r1310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1822, %r283, %r1605, %r1315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1826, %r283, %r1618, %r1320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1830, %r283, %r1629, %r1325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1834, %r283, %r1640, %r1330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1838, %r283, %r1651, %r1335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1842, %r283, %r1664, %r1340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1846, %r283, %r1675, %r1345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1850, %r283, %r1686, %r1350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1854, %r283, %r1697, %r1355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1858, %r283, %r1710, %r1360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1862, %r283, %r1721, %r1365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1866, %r283, %r1732, %r1370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1870, %r283, %r1743, %r1375;
	// end inline asm
	// begin inline asm
	mov.b32 %r1879, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1890, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1878, %r16298, -2004318072;
	// begin inline asm
	lop3.b32 %r1876, %r853, %r1878, %r1879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1880, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1881, %r1879, %r1880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1884, %r1876, %r1881;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1887, %r864, %r1878, %r1890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1891, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1892, %r1890, %r1891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1895, %r1887, %r1892;
	// end inline asm
	shr.u32 	%r1900, %r1878, 8;
	// begin inline asm
	lop3.b32 %r1898, %r853, %r1900, %r1879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1902, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1903, %r1879, %r1902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1906, %r1898, %r1903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1909, %r864, %r1900, %r1890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1913, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1914, %r1890, %r1913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1917, %r1909, %r1914;
	// end inline asm
	// begin inline asm
	mov.b32 %r1925, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1936, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1924, %r16299, -2004318072;
	// begin inline asm
	lop3.b32 %r1922, %r853, %r1924, %r1925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1926, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1927, %r1925, %r1926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1930, %r1922, %r1927;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1933, %r864, %r1924, %r1936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1937, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1938, %r1936, %r1937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1941, %r1933, %r1938;
	// end inline asm
	shr.u32 	%r1946, %r1924, 8;
	// begin inline asm
	lop3.b32 %r1944, %r853, %r1946, %r1925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1948, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1949, %r1925, %r1948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1952, %r1944, %r1949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1955, %r864, %r1946, %r1936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1959, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1960, %r1936, %r1959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1963, %r1955, %r1960;
	// end inline asm
	// begin inline asm
	mov.b32 %r1971, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1982, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1970, %r16300, -2004318072;
	// begin inline asm
	lop3.b32 %r1968, %r853, %r1970, %r1971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1972, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1973, %r1971, %r1972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1976, %r1968, %r1973;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1979, %r864, %r1970, %r1982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1983, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1984, %r1982, %r1983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1987, %r1979, %r1984;
	// end inline asm
	shr.u32 	%r1992, %r1970, 8;
	// begin inline asm
	lop3.b32 %r1990, %r853, %r1992, %r1971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1994, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1995, %r1971, %r1994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1998, %r1990, %r1995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2001, %r864, %r1992, %r1982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2005, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2006, %r1982, %r2005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2009, %r2001, %r2006;
	// end inline asm
	// begin inline asm
	mov.b32 %r2017, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2028, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2016, %r16301, -2004318072;
	// begin inline asm
	lop3.b32 %r2014, %r853, %r2016, %r2017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2018, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2019, %r2017, %r2018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2022, %r2014, %r2019;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2025, %r864, %r2016, %r2028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2029, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2030, %r2028, %r2029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2033, %r2025, %r2030;
	// end inline asm
	shr.u32 	%r2038, %r2016, 8;
	// begin inline asm
	lop3.b32 %r2036, %r853, %r2038, %r2017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2040, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2041, %r2017, %r2040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2044, %r2036, %r2041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2047, %r864, %r2038, %r2028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2051, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2052, %r2028, %r2051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2055, %r2047, %r2052;
	// end inline asm
	// begin inline asm
	mov.b32 %r2063, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2074, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2062, %r16310, -2004318072;
	// begin inline asm
	lop3.b32 %r2060, %r853, %r2062, %r2063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2064, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2065, %r2063, %r2064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2068, %r2060, %r2065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2071, %r864, %r2062, %r2074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2075, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2076, %r2074, %r2075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2079, %r2071, %r2076;
	// end inline asm
	shr.u32 	%r2084, %r2062, 8;
	// begin inline asm
	lop3.b32 %r2082, %r853, %r2084, %r2063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2086, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2087, %r2063, %r2086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2090, %r2082, %r2087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2093, %r864, %r2084, %r2074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2097, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2098, %r2074, %r2097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2101, %r2093, %r2098;
	// end inline asm
	// begin inline asm
	mov.b32 %r2109, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2120, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2108, %r16311, -2004318072;
	// begin inline asm
	lop3.b32 %r2106, %r853, %r2108, %r2109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2110, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2111, %r2109, %r2110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2114, %r2106, %r2111;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2117, %r864, %r2108, %r2120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2121, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2122, %r2120, %r2121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2125, %r2117, %r2122;
	// end inline asm
	shr.u32 	%r2130, %r2108, 8;
	// begin inline asm
	lop3.b32 %r2128, %r853, %r2130, %r2109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2132, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2133, %r2109, %r2132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2136, %r2128, %r2133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2139, %r864, %r2130, %r2120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2143, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2144, %r2120, %r2143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2147, %r2139, %r2144;
	// end inline asm
	// begin inline asm
	mov.b32 %r2155, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2166, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2154, %r16312, -2004318072;
	// begin inline asm
	lop3.b32 %r2152, %r853, %r2154, %r2155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2156, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2157, %r2155, %r2156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2160, %r2152, %r2157;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2163, %r864, %r2154, %r2166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2167, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2168, %r2166, %r2167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2171, %r2163, %r2168;
	// end inline asm
	shr.u32 	%r2176, %r2154, 8;
	// begin inline asm
	lop3.b32 %r2174, %r853, %r2176, %r2155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2178, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2179, %r2155, %r2178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2182, %r2174, %r2179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2185, %r864, %r2176, %r2166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2189, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2190, %r2166, %r2189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2193, %r2185, %r2190;
	// end inline asm
	// begin inline asm
	mov.b32 %r2201, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2212, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2200, %r16313, -2004318072;
	// begin inline asm
	lop3.b32 %r2198, %r853, %r2200, %r2201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2202, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2203, %r2201, %r2202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2206, %r2198, %r2203;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2209, %r864, %r2200, %r2212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2213, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2214, %r2212, %r2213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2217, %r2209, %r2214;
	// end inline asm
	shr.u32 	%r2222, %r2200, 8;
	// begin inline asm
	lop3.b32 %r2220, %r853, %r2222, %r2201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2224, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2225, %r2201, %r2224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2228, %r2220, %r2225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2231, %r864, %r2222, %r2212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2235, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2236, %r2212, %r2235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2239, %r2231, %r2236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2242, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2244, %r2242, %r1884, %r1746;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2248, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2250, %r2248, %r1895, %r1750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2254, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2256, %r2254, %r1906, %r1754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2260, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2262, %r2260, %r1917, %r1758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2266, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2268, %r2266, %r1930, %r1762;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2272, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2274, %r2272, %r1941, %r1766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2278, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2280, %r2278, %r1952, %r1770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2284, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2286, %r2284, %r1963, %r1774;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2290, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2292, %r2290, %r1976, %r1778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2296, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2298, %r2296, %r1987, %r1782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2302, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2304, %r2302, %r1998, %r1786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2308, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2310, %r2308, %r2009, %r1790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2314, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2316, %r2314, %r2022, %r1794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2320, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2322, %r2320, %r2033, %r1798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2326, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2328, %r2326, %r2044, %r1802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2332, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2334, %r2332, %r2055, %r1806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2338, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2340, %r2338, %r2068, %r1810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2344, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2346, %r2344, %r2079, %r1814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2350, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2352, %r2350, %r2090, %r1818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2356, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2358, %r2356, %r2101, %r1822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2362, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2364, %r2362, %r2114, %r1826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2368, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2370, %r2368, %r2125, %r1830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2374, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2376, %r2374, %r2136, %r1834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2380, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2382, %r2380, %r2147, %r1838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2386, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2388, %r2386, %r2160, %r1842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2392, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2394, %r2392, %r2171, %r1846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2398, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2400, %r2398, %r2182, %r1850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2404, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2406, %r2404, %r2193, %r1854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2410, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2412, %r2410, %r2206, %r1858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2416, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2418, %r2416, %r2217, %r1862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2422, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2424, %r2422, %r2228, %r1866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2428, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2430, %r2428, %r2239, %r1870;
	// end inline asm
	// begin inline asm
	mov.b32 %r2439, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2450, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2438, %r16302, -2004318072;
	// begin inline asm
	lop3.b32 %r2436, %r853, %r2438, %r2439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2440, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2441, %r2439, %r2440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2444, %r2436, %r2441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2447, %r864, %r2438, %r2450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2451, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2452, %r2450, %r2451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2455, %r2447, %r2452;
	// end inline asm
	shr.u32 	%r2460, %r2438, 8;
	// begin inline asm
	lop3.b32 %r2458, %r853, %r2460, %r2439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2462, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2463, %r2439, %r2462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2466, %r2458, %r2463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2469, %r864, %r2460, %r2450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2473, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2474, %r2450, %r2473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2477, %r2469, %r2474;
	// end inline asm
	// begin inline asm
	mov.b32 %r2485, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2496, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2484, %r16303, -2004318072;
	// begin inline asm
	lop3.b32 %r2482, %r853, %r2484, %r2485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2486, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2487, %r2485, %r2486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2490, %r2482, %r2487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2493, %r864, %r2484, %r2496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2497, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2498, %r2496, %r2497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2501, %r2493, %r2498;
	// end inline asm
	shr.u32 	%r2506, %r2484, 8;
	// begin inline asm
	lop3.b32 %r2504, %r853, %r2506, %r2485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2508, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2509, %r2485, %r2508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2512, %r2504, %r2509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2515, %r864, %r2506, %r2496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2519, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2520, %r2496, %r2519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2523, %r2515, %r2520;
	// end inline asm
	// begin inline asm
	mov.b32 %r2531, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2542, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2530, %r16304, -2004318072;
	// begin inline asm
	lop3.b32 %r2528, %r853, %r2530, %r2531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2532, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2533, %r2531, %r2532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2536, %r2528, %r2533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2539, %r864, %r2530, %r2542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2543, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2544, %r2542, %r2543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2547, %r2539, %r2544;
	// end inline asm
	shr.u32 	%r2552, %r2530, 8;
	// begin inline asm
	lop3.b32 %r2550, %r853, %r2552, %r2531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2554, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2555, %r2531, %r2554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2558, %r2550, %r2555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2561, %r864, %r2552, %r2542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2565, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2566, %r2542, %r2565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2569, %r2561, %r2566;
	// end inline asm
	// begin inline asm
	mov.b32 %r2577, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2588, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2576, %r16305, -2004318072;
	// begin inline asm
	lop3.b32 %r2574, %r853, %r2576, %r2577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2578, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2579, %r2577, %r2578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2582, %r2574, %r2579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2585, %r864, %r2576, %r2588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2589, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2590, %r2588, %r2589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2593, %r2585, %r2590;
	// end inline asm
	shr.u32 	%r2598, %r2576, 8;
	// begin inline asm
	lop3.b32 %r2596, %r853, %r2598, %r2577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2600, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2601, %r2577, %r2600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2604, %r2596, %r2601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2607, %r864, %r2598, %r2588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2611, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2612, %r2588, %r2611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2615, %r2607, %r2612;
	// end inline asm
	// begin inline asm
	mov.b32 %r2623, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2634, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2622, %r16314, -2004318072;
	// begin inline asm
	lop3.b32 %r2620, %r853, %r2622, %r2623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2624, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2625, %r2623, %r2624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2628, %r2620, %r2625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2631, %r864, %r2622, %r2634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2635, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2636, %r2634, %r2635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2639, %r2631, %r2636;
	// end inline asm
	shr.u32 	%r2644, %r2622, 8;
	// begin inline asm
	lop3.b32 %r2642, %r853, %r2644, %r2623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2646, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2647, %r2623, %r2646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2650, %r2642, %r2647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2653, %r864, %r2644, %r2634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2657, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2658, %r2634, %r2657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2661, %r2653, %r2658;
	// end inline asm
	// begin inline asm
	mov.b32 %r2669, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2680, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2668, %r16315, -2004318072;
	// begin inline asm
	lop3.b32 %r2666, %r853, %r2668, %r2669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2670, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2671, %r2669, %r2670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2674, %r2666, %r2671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2677, %r864, %r2668, %r2680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2681, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2682, %r2680, %r2681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2685, %r2677, %r2682;
	// end inline asm
	shr.u32 	%r2690, %r2668, 8;
	// begin inline asm
	lop3.b32 %r2688, %r853, %r2690, %r2669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2692, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2693, %r2669, %r2692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2696, %r2688, %r2693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2699, %r864, %r2690, %r2680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2703, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2704, %r2680, %r2703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2707, %r2699, %r2704;
	// end inline asm
	// begin inline asm
	mov.b32 %r2715, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2726, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2714, %r16316, -2004318072;
	// begin inline asm
	lop3.b32 %r2712, %r853, %r2714, %r2715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2716, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2717, %r2715, %r2716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2720, %r2712, %r2717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2723, %r864, %r2714, %r2726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2727, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2728, %r2726, %r2727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2731, %r2723, %r2728;
	// end inline asm
	shr.u32 	%r2736, %r2714, 8;
	// begin inline asm
	lop3.b32 %r2734, %r853, %r2736, %r2715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2738, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2739, %r2715, %r2738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2742, %r2734, %r2739;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2745, %r864, %r2736, %r2726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2749, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2750, %r2726, %r2749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2753, %r2745, %r2750;
	// end inline asm
	// begin inline asm
	mov.b32 %r2761, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2772, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2760, %r16317, -2004318072;
	// begin inline asm
	lop3.b32 %r2758, %r853, %r2760, %r2761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2762, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2763, %r2761, %r2762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2766, %r2758, %r2763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2769, %r864, %r2760, %r2772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2773, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2774, %r2772, %r2773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2777, %r2769, %r2774;
	// end inline asm
	shr.u32 	%r2782, %r2760, 8;
	// begin inline asm
	lop3.b32 %r2780, %r853, %r2782, %r2761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2784, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2785, %r2761, %r2784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2788, %r2780, %r2785;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2791, %r864, %r2782, %r2772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2795, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2796, %r2772, %r2795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2799, %r2791, %r2796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2937, %r337, %r2444, %r2244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2934, %r337, %r2455, %r2250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2946, %r337, %r2466, %r2256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2943, %r337, %r2477, %r2262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2955, %r337, %r2490, %r2268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2952, %r337, %r2501, %r2274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2964, %r337, %r2512, %r2280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2961, %r337, %r2523, %r2286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2973, %r337, %r2536, %r2292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2970, %r337, %r2547, %r2298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2982, %r337, %r2558, %r2304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2979, %r337, %r2569, %r2310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2991, %r337, %r2582, %r2316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2988, %r337, %r2593, %r2322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3000, %r337, %r2604, %r2328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2997, %r337, %r2615, %r2334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3009, %r355, %r2628, %r2340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3006, %r355, %r2639, %r2346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3018, %r355, %r2650, %r2352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3015, %r355, %r2661, %r2358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3027, %r355, %r2674, %r2364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3024, %r355, %r2685, %r2370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3036, %r355, %r2696, %r2376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3033, %r355, %r2707, %r2382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3045, %r355, %r2720, %r2388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3042, %r355, %r2731, %r2394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3054, %r355, %r2742, %r2400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3051, %r355, %r2753, %r2406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3063, %r355, %r2766, %r2412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3060, %r355, %r2777, %r2418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3072, %r355, %r2788, %r2424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3069, %r355, %r2799, %r2430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2930, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2932, %r2930, %r2934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2935, %r394, %r2937, %r2932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2939, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2941, %r2939, %r2943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2944, %r394, %r2946, %r2941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2948, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2950, %r2948, %r2952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2953, %r394, %r2955, %r2950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2957, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2959, %r2957, %r2961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2962, %r394, %r2964, %r2959;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2966, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2968, %r2966, %r2970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2971, %r394, %r2973, %r2968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2975, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2977, %r2975, %r2979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2980, %r394, %r2982, %r2977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2984, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2986, %r2984, %r2988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2989, %r394, %r2991, %r2986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2993, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2995, %r2993, %r2997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2998, %r394, %r3000, %r2995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3002, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3004, %r3002, %r3006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3007, %r397, %r3009, %r3004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3011, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3013, %r3011, %r3015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3016, %r397, %r3018, %r3013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3020, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3022, %r3020, %r3024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3025, %r397, %r3027, %r3022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3029, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3031, %r3029, %r3033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3034, %r397, %r3036, %r3031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3038, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3040, %r3038, %r3042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3043, %r397, %r3045, %r3040;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3047, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3049, %r3047, %r3051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3052, %r397, %r3054, %r3049;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3056, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3058, %r3056, %r3060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3061, %r397, %r3063, %r3058;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3065, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3067, %r3065, %r3069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3070, %r397, %r3072, %r3067;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3074, %r400, %r2937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3077, %r394, %r2934, %r3074;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3081, %r400, %r2946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3084, %r394, %r2943, %r3081;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3088, %r400, %r2955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3091, %r394, %r2952, %r3088;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3095, %r400, %r2964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3098, %r394, %r2961, %r3095;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3102, %r400, %r2973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3105, %r394, %r2970, %r3102;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3109, %r400, %r2982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3112, %r394, %r2979, %r3109;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3116, %r400, %r2991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3119, %r394, %r2988, %r3116;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3123, %r400, %r3000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3126, %r394, %r2997, %r3123;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3130, %r403, %r3009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3133, %r397, %r3006, %r3130;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3137, %r403, %r3018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3140, %r397, %r3015, %r3137;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3144, %r403, %r3027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3147, %r397, %r3024, %r3144;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3151, %r403, %r3036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3154, %r397, %r3033, %r3151;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3158, %r403, %r3045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3161, %r397, %r3042, %r3158;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3165, %r403, %r3054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3168, %r397, %r3051, %r3165;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3172, %r403, %r3063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3175, %r397, %r3060, %r3172;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3179, %r403, %r3072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3182, %r397, %r3069, %r3179;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3353, %r3350}, {%r461, %r467, %r464, %r470}, {%r2935, %r3077}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3362, %r3359}, {%r461, %r467, %r464, %r470}, {%r2944, %r3084}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3371, %r3368}, {%r461, %r467, %r464, %r470}, {%r2953, %r3091}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3380, %r3377}, {%r461, %r467, %r464, %r470}, {%r2962, %r3098}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3389, %r3386}, {%r461, %r467, %r464, %r470}, {%r2971, %r3105}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3398, %r3395}, {%r461, %r467, %r464, %r470}, {%r2980, %r3112}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3407, %r3404}, {%r461, %r467, %r464, %r470}, {%r2989, %r3119}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3416, %r3413}, {%r461, %r467, %r464, %r470}, {%r2998, %r3126}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3425, %r3422}, {%r461, %r467, %r464, %r470}, {%r3007, %r3133}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3434, %r3431}, {%r461, %r467, %r464, %r470}, {%r3016, %r3140}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3443, %r3440}, {%r461, %r467, %r464, %r470}, {%r3025, %r3147}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3452, %r3449}, {%r461, %r467, %r464, %r470}, {%r3034, %r3154}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3461, %r3458}, {%r461, %r467, %r464, %r470}, {%r3043, %r3161}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3470, %r3467}, {%r461, %r467, %r464, %r470}, {%r3052, %r3168}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3479, %r3476}, {%r461, %r467, %r464, %r470}, {%r3061, %r3175}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3488, %r3485}, {%r461, %r467, %r464, %r470}, {%r3070, %r3182}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3346, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3348, %r3346, %r3350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3351, %r511, %r3353, %r3348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3355, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3357, %r3355, %r3359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3360, %r511, %r3362, %r3357;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3364, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3366, %r3364, %r3368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3369, %r511, %r3371, %r3366;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3373, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3375, %r3373, %r3377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3378, %r511, %r3380, %r3375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3382, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3384, %r3382, %r3386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3387, %r511, %r3389, %r3384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3391, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3393, %r3391, %r3395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3396, %r511, %r3398, %r3393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3400, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3402, %r3400, %r3404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3405, %r511, %r3407, %r3402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3409, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3411, %r3409, %r3413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3414, %r511, %r3416, %r3411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3418, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3420, %r3418, %r3422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3423, %r511, %r3425, %r3420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3427, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3429, %r3427, %r3431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3432, %r511, %r3434, %r3429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3436, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3438, %r3436, %r3440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3441, %r511, %r3443, %r3438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3445, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3447, %r3445, %r3449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3450, %r511, %r3452, %r3447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3454, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3456, %r3454, %r3458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3459, %r511, %r3461, %r3456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3463, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3465, %r3463, %r3467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3468, %r511, %r3470, %r3465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3472, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3474, %r3472, %r3476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3477, %r511, %r3479, %r3474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3481, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3483, %r3481, %r3485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3486, %r511, %r3488, %r3483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3490, %r514, %r3353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3493, %r511, %r3350, %r3490;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3497, %r514, %r3362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3500, %r511, %r3359, %r3497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3504, %r514, %r3371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3507, %r511, %r3368, %r3504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3511, %r514, %r3380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3514, %r511, %r3377, %r3511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3518, %r514, %r3389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3521, %r511, %r3386, %r3518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3525, %r514, %r3398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3528, %r511, %r3395, %r3525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3532, %r514, %r3407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3535, %r511, %r3404, %r3532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3539, %r514, %r3416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3542, %r511, %r3413, %r3539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3546, %r514, %r3425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3549, %r511, %r3422, %r3546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3553, %r514, %r3434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3556, %r511, %r3431, %r3553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3560, %r514, %r3443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3563, %r511, %r3440, %r3560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3567, %r514, %r3452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3570, %r511, %r3449, %r3567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3574, %r514, %r3461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3577, %r511, %r3458, %r3574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3581, %r514, %r3470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3584, %r511, %r3467, %r3581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3588, %r514, %r3479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3591, %r511, %r3476, %r3588;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3595, %r514, %r3488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3598, %r511, %r3485, %r3595;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3891, %r3894}, {%r549, %r555, %r552, %r558}, {%r3351, %r3493}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3897, %r3900}, {%r549, %r555, %r552, %r558}, {%r3360, %r3500}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3903, %r3906}, {%r549, %r555, %r552, %r558}, {%r3369, %r3507}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3909, %r3912}, {%r549, %r555, %r552, %r558}, {%r3378, %r3514}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3915, %r3918}, {%r549, %r555, %r552, %r558}, {%r3387, %r3521}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3921, %r3924}, {%r549, %r555, %r552, %r558}, {%r3396, %r3528}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3927, %r3930}, {%r549, %r555, %r552, %r558}, {%r3405, %r3535}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3933, %r3936}, {%r549, %r555, %r552, %r558}, {%r3414, %r3542}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3892, %r3895}, {%r549, %r555, %r552, %r558}, {%r3423, %r3549}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3898, %r3901}, {%r549, %r555, %r552, %r558}, {%r3432, %r3556}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3904, %r3907}, {%r549, %r555, %r552, %r558}, {%r3441, %r3563}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3910, %r3913}, {%r549, %r555, %r552, %r558}, {%r3450, %r3570}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3916, %r3919}, {%r549, %r555, %r552, %r558}, {%r3459, %r3577}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3922, %r3925}, {%r549, %r555, %r552, %r558}, {%r3468, %r3584}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3928, %r3931}, {%r549, %r555, %r552, %r558}, {%r3477, %r3591}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3934, %r3937}, {%r549, %r555, %r552, %r558}, {%r3486, %r3598}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3890, %r3891, %r3892;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3893, %r3894, %r3895;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3896, %r3897, %r3898;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3899, %r3900, %r3901;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3902, %r3903, %r3904;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3905, %r3906, %r3907;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3908, %r3909, %r3910;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3911, %r3912, %r3913;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3914, %r3915, %r3916;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3917, %r3918, %r3919;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3920, %r3921, %r3922;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3923, %r3924, %r3925;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3926, %r3927, %r3928;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3929, %r3930, %r3931;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3932, %r3933, %r3934;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3935, %r3936, %r3937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3938, %r3891, %r3892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3941, %r3894, %r3895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3944, %r3897, %r3898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3947, %r3900, %r3901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3950, %r3903, %r3904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3953, %r3906, %r3907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3956, %r3909, %r3910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3959, %r3912, %r3913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3962, %r3915, %r3916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3965, %r3918, %r3919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3968, %r3921, %r3922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3971, %r3924, %r3925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3974, %r3927, %r3928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3977, %r3930, %r3931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3980, %r3933, %r3934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3983, %r3936, %r3937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3986, %r133, %r3890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3989, %r133, %r3893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3992, %r133, %r3896;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3995, %r133, %r3899;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3998, %r133, %r3902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4001, %r133, %r3905;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4004, %r133, %r3908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4007, %r133, %r3911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4010, %r133, %r3914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4013, %r133, %r3917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4016, %r133, %r3920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4019, %r133, %r3923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4022, %r133, %r3926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4025, %r133, %r3929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4028, %r133, %r3932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4031, %r133, %r3935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4034, %r134, %r3938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4037, %r134, %r3941;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4040, %r134, %r3944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4043, %r134, %r3947;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4046, %r134, %r3950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4049, %r134, %r3953;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4052, %r134, %r3956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4055, %r134, %r3959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4058, %r134, %r3962;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4061, %r134, %r3965;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4064, %r134, %r3968;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4067, %r134, %r3971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4070, %r134, %r3974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4073, %r134, %r3977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4076, %r134, %r3980;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4079, %r134, %r3983;
	// end inline asm
	mov.u16 	%rs430, -14592;
	// begin inline asm
	mov.b32 %r4082, {%rs430, %rs430};
	// end inline asm
	mov.u16 	%rs432, 18176;
	// begin inline asm
	mov.b32 %r4083, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4084, %r3986, %r4082;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4087, %r4084, %r4083;
	// end inline asm
	// begin inline asm
	mov.b32 %r4090, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4091, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4092, %r3989, %r4090;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4095, %r4092, %r4091;
	// end inline asm
	// begin inline asm
	mov.b32 %r4098, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4099, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4100, %r3992, %r4098;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4103, %r4100, %r4099;
	// end inline asm
	// begin inline asm
	mov.b32 %r4106, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4107, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4108, %r3995, %r4106;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4111, %r4108, %r4107;
	// end inline asm
	// begin inline asm
	mov.b32 %r4114, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4115, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4116, %r3998, %r4114;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4119, %r4116, %r4115;
	// end inline asm
	// begin inline asm
	mov.b32 %r4122, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4123, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4124, %r4001, %r4122;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4127, %r4124, %r4123;
	// end inline asm
	// begin inline asm
	mov.b32 %r4130, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4131, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4132, %r4004, %r4130;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4135, %r4132, %r4131;
	// end inline asm
	// begin inline asm
	mov.b32 %r4138, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4139, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4140, %r4007, %r4138;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4143, %r4140, %r4139;
	// end inline asm
	// begin inline asm
	mov.b32 %r4146, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4148, %r4010, %r4146;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4151, %r4148, %r4147;
	// end inline asm
	// begin inline asm
	mov.b32 %r4154, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4155, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4156, %r4013, %r4154;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4159, %r4156, %r4155;
	// end inline asm
	// begin inline asm
	mov.b32 %r4162, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4163, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4164, %r4016, %r4162;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4167, %r4164, %r4163;
	// end inline asm
	// begin inline asm
	mov.b32 %r4170, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4171, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4172, %r4019, %r4170;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4175, %r4172, %r4171;
	// end inline asm
	// begin inline asm
	mov.b32 %r4178, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4179, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4180, %r4022, %r4178;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4183, %r4180, %r4179;
	// end inline asm
	// begin inline asm
	mov.b32 %r4186, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4187, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4188, %r4025, %r4186;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4191, %r4188, %r4187;
	// end inline asm
	// begin inline asm
	mov.b32 %r4194, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4196, %r4028, %r4194;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4199, %r4196, %r4195;
	// end inline asm
	// begin inline asm
	mov.b32 %r4202, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4204, %r4031, %r4202;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4207, %r4204, %r4203;
	// end inline asm
	// begin inline asm
	mov.b32 %r4210, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4211, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4212, %r4034, %r4210;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4215, %r4212, %r4211;
	// end inline asm
	// begin inline asm
	mov.b32 %r4218, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4219, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4220, %r4037, %r4218;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4223, %r4220, %r4219;
	// end inline asm
	// begin inline asm
	mov.b32 %r4226, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4227, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4228, %r4040, %r4226;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4231, %r4228, %r4227;
	// end inline asm
	// begin inline asm
	mov.b32 %r4234, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4236, %r4043, %r4234;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4239, %r4236, %r4235;
	// end inline asm
	// begin inline asm
	mov.b32 %r4242, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4243, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4244, %r4046, %r4242;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4247, %r4244, %r4243;
	// end inline asm
	// begin inline asm
	mov.b32 %r4250, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4251, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4252, %r4049, %r4250;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4255, %r4252, %r4251;
	// end inline asm
	// begin inline asm
	mov.b32 %r4258, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4259, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4260, %r4052, %r4258;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4263, %r4260, %r4259;
	// end inline asm
	// begin inline asm
	mov.b32 %r4266, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4267, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4268, %r4055, %r4266;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4271, %r4268, %r4267;
	// end inline asm
	// begin inline asm
	mov.b32 %r4274, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4275, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4276, %r4058, %r4274;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4279, %r4276, %r4275;
	// end inline asm
	// begin inline asm
	mov.b32 %r4282, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4283, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4284, %r4061, %r4282;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4287, %r4284, %r4283;
	// end inline asm
	// begin inline asm
	mov.b32 %r4290, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4291, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4292, %r4064, %r4290;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4295, %r4292, %r4291;
	// end inline asm
	// begin inline asm
	mov.b32 %r4298, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4299, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4300, %r4067, %r4298;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4303, %r4300, %r4299;
	// end inline asm
	// begin inline asm
	mov.b32 %r4306, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4307, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4308, %r4070, %r4306;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4311, %r4308, %r4307;
	// end inline asm
	// begin inline asm
	mov.b32 %r4314, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4315, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4316, %r4073, %r4314;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4319, %r4316, %r4315;
	// end inline asm
	// begin inline asm
	mov.b32 %r4322, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4323, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4324, %r4076, %r4322;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4327, %r4324, %r4323;
	// end inline asm
	// begin inline asm
	mov.b32 %r4330, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4331, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4332, %r4079, %r4330;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4335, %r4332, %r4331;
	// end inline asm
	// begin inline asm
	mov.b32 %r4341, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4339, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4340, %r4341, %r4339;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4343, %r4087, %r4340;
	// end inline asm
	// begin inline asm
	mov.b32 %r4346, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4347, %r4341, %r4346;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4350, %r4095, %r4347;
	// end inline asm
	// begin inline asm
	mov.b32 %r4353, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4354, %r4341, %r4353;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4357, %r4103, %r4354;
	// end inline asm
	// begin inline asm
	mov.b32 %r4360, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4361, %r4341, %r4360;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4364, %r4111, %r4361;
	// end inline asm
	mov.u32 	%r4370, 25152;
	// begin inline asm
	prmt.b32 %r4367, %r4343, %r4357, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4371, %r4350, %r4364, %r4370;
	// end inline asm
	shl.b32 	%r4378, %r4371, 4;
	mov.u32 	%r4376, 252645135;
	// begin inline asm
	lop3.b32 %r4375, %r4376, %r4367, %r4378, 202;
	// end inline asm
	xor.b32  	%r16162, %r4375, -2004318072;
	// begin inline asm
	mov.b32 %r4382, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4380, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4381, %r4382, %r4380;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4384, %r4119, %r4381;
	// end inline asm
	// begin inline asm
	mov.b32 %r4387, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4388, %r4382, %r4387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4391, %r4127, %r4388;
	// end inline asm
	// begin inline asm
	mov.b32 %r4394, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4395, %r4382, %r4394;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4398, %r4135, %r4395;
	// end inline asm
	// begin inline asm
	mov.b32 %r4401, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4402, %r4382, %r4401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4405, %r4143, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4408, %r4384, %r4398, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4412, %r4391, %r4405, %r4370;
	// end inline asm
	shl.b32 	%r4419, %r4412, 4;
	// begin inline asm
	lop3.b32 %r4416, %r4376, %r4408, %r4419, 202;
	// end inline asm
	xor.b32  	%r16163, %r4416, -2004318072;
	// begin inline asm
	mov.b32 %r4423, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4421, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4422, %r4423, %r4421;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4425, %r4151, %r4422;
	// end inline asm
	// begin inline asm
	mov.b32 %r4428, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4429, %r4423, %r4428;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4432, %r4159, %r4429;
	// end inline asm
	// begin inline asm
	mov.b32 %r4435, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4436, %r4423, %r4435;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4439, %r4167, %r4436;
	// end inline asm
	// begin inline asm
	mov.b32 %r4442, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4443, %r4423, %r4442;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4446, %r4175, %r4443;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4449, %r4425, %r4439, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4453, %r4432, %r4446, %r4370;
	// end inline asm
	shl.b32 	%r4460, %r4453, 4;
	// begin inline asm
	lop3.b32 %r4457, %r4376, %r4449, %r4460, 202;
	// end inline asm
	xor.b32  	%r16164, %r4457, -2004318072;
	// begin inline asm
	mov.b32 %r4464, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4462, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4463, %r4464, %r4462;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4466, %r4183, %r4463;
	// end inline asm
	// begin inline asm
	mov.b32 %r4469, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4470, %r4464, %r4469;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4473, %r4191, %r4470;
	// end inline asm
	// begin inline asm
	mov.b32 %r4476, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4477, %r4464, %r4476;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4480, %r4199, %r4477;
	// end inline asm
	// begin inline asm
	mov.b32 %r4483, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4484, %r4464, %r4483;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4487, %r4207, %r4484;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4490, %r4466, %r4480, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4494, %r4473, %r4487, %r4370;
	// end inline asm
	shl.b32 	%r4501, %r4494, 4;
	// begin inline asm
	lop3.b32 %r4498, %r4376, %r4490, %r4501, 202;
	// end inline asm
	xor.b32  	%r16165, %r4498, -2004318072;
	// begin inline asm
	mov.b32 %r4505, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4503, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4504, %r4505, %r4503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4507, %r4215, %r4504;
	// end inline asm
	// begin inline asm
	mov.b32 %r4510, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4511, %r4505, %r4510;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4514, %r4223, %r4511;
	// end inline asm
	// begin inline asm
	mov.b32 %r4517, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4518, %r4505, %r4517;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4521, %r4231, %r4518;
	// end inline asm
	// begin inline asm
	mov.b32 %r4524, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4525, %r4505, %r4524;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4528, %r4239, %r4525;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4531, %r4507, %r4521, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4535, %r4514, %r4528, %r4370;
	// end inline asm
	shl.b32 	%r4542, %r4535, 4;
	// begin inline asm
	lop3.b32 %r4539, %r4376, %r4531, %r4542, 202;
	// end inline asm
	xor.b32  	%r16166, %r4539, -2004318072;
	// begin inline asm
	mov.b32 %r4546, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4544, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4545, %r4546, %r4544;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4548, %r4247, %r4545;
	// end inline asm
	// begin inline asm
	mov.b32 %r4551, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4552, %r4546, %r4551;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4555, %r4255, %r4552;
	// end inline asm
	// begin inline asm
	mov.b32 %r4558, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4559, %r4546, %r4558;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4562, %r4263, %r4559;
	// end inline asm
	// begin inline asm
	mov.b32 %r4565, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4566, %r4546, %r4565;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4569, %r4271, %r4566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4572, %r4548, %r4562, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4576, %r4555, %r4569, %r4370;
	// end inline asm
	shl.b32 	%r4583, %r4576, 4;
	// begin inline asm
	lop3.b32 %r4580, %r4376, %r4572, %r4583, 202;
	// end inline asm
	xor.b32  	%r16167, %r4580, -2004318072;
	// begin inline asm
	mov.b32 %r4587, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4585, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4586, %r4587, %r4585;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4589, %r4279, %r4586;
	// end inline asm
	// begin inline asm
	mov.b32 %r4592, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4593, %r4587, %r4592;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4596, %r4287, %r4593;
	// end inline asm
	// begin inline asm
	mov.b32 %r4599, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4600, %r4587, %r4599;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4603, %r4295, %r4600;
	// end inline asm
	// begin inline asm
	mov.b32 %r4606, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4607, %r4587, %r4606;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4610, %r4303, %r4607;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4613, %r4589, %r4603, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4617, %r4596, %r4610, %r4370;
	// end inline asm
	shl.b32 	%r4624, %r4617, 4;
	// begin inline asm
	lop3.b32 %r4621, %r4376, %r4613, %r4624, 202;
	// end inline asm
	xor.b32  	%r16168, %r4621, -2004318072;
	// begin inline asm
	mov.b32 %r4628, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4626, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4627, %r4628, %r4626;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4630, %r4311, %r4627;
	// end inline asm
	// begin inline asm
	mov.b32 %r4633, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4634, %r4628, %r4633;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4637, %r4319, %r4634;
	// end inline asm
	// begin inline asm
	mov.b32 %r4640, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4641, %r4628, %r4640;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4644, %r4327, %r4641;
	// end inline asm
	// begin inline asm
	mov.b32 %r4647, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4648, %r4628, %r4647;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4651, %r4335, %r4648;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4654, %r4630, %r4644, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4658, %r4637, %r4651, %r4370;
	// end inline asm
	shl.b32 	%r4665, %r4658, 4;
	// begin inline asm
	lop3.b32 %r4662, %r4376, %r4654, %r4665, 202;
	// end inline asm
	xor.b32  	%r16169, %r4662, -2004318072;
	add.s32 	%r16170, %r83, %r16114;
	mul.wide.u32 	%rd103, %r16170, 4;
	add.s64 	%rd104, %rd43, %rd103;
	st.shared.u32 	[%rd104], %r16162;
	add.s32 	%r16171, %r84, %r16114;
	mul.wide.u32 	%rd105, %r16171, 4;
	add.s64 	%rd106, %rd43, %rd105;
	st.shared.u32 	[%rd106], %r16163;
	add.s32 	%r16172, %r85, %r16114;
	mul.wide.u32 	%rd107, %r16172, 4;
	add.s64 	%rd108, %rd43, %rd107;
	st.shared.u32 	[%rd108], %r16164;
	add.s32 	%r16173, %r86, %r16114;
	mul.wide.u32 	%rd109, %r16173, 4;
	add.s64 	%rd110, %rd43, %rd109;
	st.shared.u32 	[%rd110], %r16165;
	add.s32 	%r16174, %r87, %r16114;
	mul.wide.u32 	%rd111, %r16174, 4;
	add.s64 	%rd112, %rd43, %rd111;
	st.shared.u32 	[%rd112], %r16166;
	add.s32 	%r16175, %r88, %r16114;
	mul.wide.u32 	%rd113, %r16175, 4;
	add.s64 	%rd114, %rd43, %rd113;
	st.shared.u32 	[%rd114], %r16167;
	add.s32 	%r16176, %r89, %r16114;
	mul.wide.u32 	%rd115, %r16176, 4;
	add.s64 	%rd116, %rd43, %rd115;
	st.shared.u32 	[%rd116], %r16168;
	add.s32 	%r16177, %r90, %r16114;
	mul.wide.u32 	%rd117, %r16177, 4;
	add.s64 	%rd118, %rd43, %rd117;
	st.shared.u32 	[%rd118], %r16169;
	ld.shared.u32 	%r16294, [%rd88];
	ld.shared.u32 	%r16295, [%rd90];
	ld.shared.u32 	%r16296, [%rd92];
	ld.shared.u32 	%r16297, [%rd94];
	ld.shared.u32 	%r16306, [%rd96];
	ld.shared.u32 	%r16307, [%rd98];
	ld.shared.u32 	%r16308, [%rd100];
	ld.shared.u32 	%r16309, [%rd102];
	// begin inline asm
	mov.b32 %r4671, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4682, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r4670, %r16294, -2004318072;
	// begin inline asm
	lop3.b32 %r4668, %r853, %r4670, %r4671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4672, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4673, %r4671, %r4672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4676, %r4668, %r4673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4679, %r864, %r4670, %r4682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4683, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4684, %r4682, %r4683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4687, %r4679, %r4684;
	// end inline asm
	shr.u32 	%r4692, %r4670, 8;
	// begin inline asm
	lop3.b32 %r4690, %r853, %r4692, %r4671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4694, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4695, %r4671, %r4694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4698, %r4690, %r4695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4701, %r864, %r4692, %r4682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4705, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4706, %r4682, %r4705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4709, %r4701, %r4706;
	// end inline asm
	// begin inline asm
	mov.b32 %r4717, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4728, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r4716, %r16295, -2004318072;
	// begin inline asm
	lop3.b32 %r4714, %r853, %r4716, %r4717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4718, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4719, %r4717, %r4718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4722, %r4714, %r4719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4725, %r864, %r4716, %r4728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4729, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4730, %r4728, %r4729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4733, %r4725, %r4730;
	// end inline asm
	shr.u32 	%r4738, %r4716, 8;
	// begin inline asm
	lop3.b32 %r4736, %r853, %r4738, %r4717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4740, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4741, %r4717, %r4740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4744, %r4736, %r4741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4747, %r864, %r4738, %r4728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4751, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4752, %r4728, %r4751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4755, %r4747, %r4752;
	// end inline asm
	// begin inline asm
	mov.b32 %r4763, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4774, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r4762, %r16296, -2004318072;
	// begin inline asm
	lop3.b32 %r4760, %r853, %r4762, %r4763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4764, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4765, %r4763, %r4764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4768, %r4760, %r4765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4771, %r864, %r4762, %r4774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4775, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4776, %r4774, %r4775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4779, %r4771, %r4776;
	// end inline asm
	shr.u32 	%r4784, %r4762, 8;
	// begin inline asm
	lop3.b32 %r4782, %r853, %r4784, %r4763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4786, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4787, %r4763, %r4786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4790, %r4782, %r4787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4793, %r864, %r4784, %r4774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4797, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4798, %r4774, %r4797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4801, %r4793, %r4798;
	// end inline asm
	// begin inline asm
	mov.b32 %r4809, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4820, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r4808, %r16297, -2004318072;
	// begin inline asm
	lop3.b32 %r4806, %r853, %r4808, %r4809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4810, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4811, %r4809, %r4810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4814, %r4806, %r4811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4817, %r864, %r4808, %r4820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4821, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4822, %r4820, %r4821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4825, %r4817, %r4822;
	// end inline asm
	shr.u32 	%r4830, %r4808, 8;
	// begin inline asm
	lop3.b32 %r4828, %r853, %r4830, %r4809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4832, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4833, %r4809, %r4832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4836, %r4828, %r4833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4839, %r864, %r4830, %r4820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4843, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4844, %r4820, %r4843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4847, %r4839, %r4844;
	// end inline asm
	// begin inline asm
	mov.b32 %r4855, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4866, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r4854, %r16306, -2004318072;
	// begin inline asm
	lop3.b32 %r4852, %r853, %r4854, %r4855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4856, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4857, %r4855, %r4856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4860, %r4852, %r4857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4863, %r864, %r4854, %r4866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4867, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4868, %r4866, %r4867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4871, %r4863, %r4868;
	// end inline asm
	shr.u32 	%r4876, %r4854, 8;
	// begin inline asm
	lop3.b32 %r4874, %r853, %r4876, %r4855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4878, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4879, %r4855, %r4878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4882, %r4874, %r4879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4885, %r864, %r4876, %r4866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4889, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4890, %r4866, %r4889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4893, %r4885, %r4890;
	// end inline asm
	// begin inline asm
	mov.b32 %r4901, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4912, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r4900, %r16307, -2004318072;
	// begin inline asm
	lop3.b32 %r4898, %r853, %r4900, %r4901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4902, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4903, %r4901, %r4902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4906, %r4898, %r4903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4909, %r864, %r4900, %r4912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4913, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4914, %r4912, %r4913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4917, %r4909, %r4914;
	// end inline asm
	shr.u32 	%r4922, %r4900, 8;
	// begin inline asm
	lop3.b32 %r4920, %r853, %r4922, %r4901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4924, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4925, %r4901, %r4924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4928, %r4920, %r4925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4931, %r864, %r4922, %r4912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4935, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4936, %r4912, %r4935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4939, %r4931, %r4936;
	// end inline asm
	// begin inline asm
	mov.b32 %r4947, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4958, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r4946, %r16308, -2004318072;
	// begin inline asm
	lop3.b32 %r4944, %r853, %r4946, %r4947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4948, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4949, %r4947, %r4948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4952, %r4944, %r4949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4955, %r864, %r4946, %r4958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4959, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4960, %r4958, %r4959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4963, %r4955, %r4960;
	// end inline asm
	shr.u32 	%r4968, %r4946, 8;
	// begin inline asm
	lop3.b32 %r4966, %r853, %r4968, %r4947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4970, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4971, %r4947, %r4970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4974, %r4966, %r4971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4977, %r864, %r4968, %r4958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4981, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4982, %r4958, %r4981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4985, %r4977, %r4982;
	// end inline asm
	// begin inline asm
	mov.b32 %r4993, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5004, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r4992, %r16309, -2004318072;
	// begin inline asm
	lop3.b32 %r4990, %r853, %r4992, %r4993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4994, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4995, %r4993, %r4994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4998, %r4990, %r4995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5001, %r864, %r4992, %r5004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5005, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5006, %r5004, %r5005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5009, %r5001, %r5006;
	// end inline asm
	shr.u32 	%r5014, %r4992, 8;
	// begin inline asm
	lop3.b32 %r5012, %r853, %r5014, %r4993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5016, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5017, %r4993, %r5016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5020, %r5012, %r5017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5023, %r864, %r5014, %r5004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5027, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5028, %r5004, %r5027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5031, %r5023, %r5028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5034, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5036, %r5034, %r4676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5039, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5041, %r5039, %r4687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5044, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5046, %r5044, %r4698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5049, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5051, %r5049, %r4709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5054, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5056, %r5054, %r4722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5059, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5061, %r5059, %r4733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5064, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5066, %r5064, %r4744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5069, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5071, %r5069, %r4755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5074, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5076, %r5074, %r4768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5079, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5081, %r5079, %r4779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5084, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5086, %r5084, %r4790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5089, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5091, %r5089, %r4801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5094, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5096, %r5094, %r4814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5099, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5101, %r5099, %r4825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5104, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5106, %r5104, %r4836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5109, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5111, %r5109, %r4847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5114, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5116, %r5114, %r4860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5119, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5121, %r5119, %r4871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5124, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5126, %r5124, %r4882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5129, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5131, %r5129, %r4893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5134, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5136, %r5134, %r4906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5139, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5141, %r5139, %r4917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5144, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5146, %r5144, %r4928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5149, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5151, %r5149, %r4939;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5154, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5156, %r5154, %r4952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5159, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5161, %r5159, %r4963;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5164, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5166, %r5164, %r4974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5169, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5171, %r5169, %r4985;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5174, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5176, %r5174, %r4998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5179, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5181, %r5179, %r5009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5184, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5186, %r5184, %r5020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5189, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5191, %r5189, %r5031;
	// end inline asm
	// begin inline asm
	mov.b32 %r5199, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5210, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5196, %r853, %r1878, %r5199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5200, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5201, %r5199, %r5200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5204, %r5196, %r5201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5207, %r864, %r1878, %r5210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5211, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5212, %r5210, %r5211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5215, %r5207, %r5212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5218, %r853, %r1900, %r5199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5222, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5223, %r5199, %r5222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5226, %r5218, %r5223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5229, %r864, %r1900, %r5210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5233, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5234, %r5210, %r5233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5237, %r5229, %r5234;
	// end inline asm
	// begin inline asm
	mov.b32 %r5245, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5256, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5242, %r853, %r1924, %r5245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5246, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5247, %r5245, %r5246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5250, %r5242, %r5247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5253, %r864, %r1924, %r5256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5257, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5258, %r5256, %r5257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5261, %r5253, %r5258;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5264, %r853, %r1946, %r5245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5268, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5269, %r5245, %r5268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5272, %r5264, %r5269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5275, %r864, %r1946, %r5256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5279, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5280, %r5256, %r5279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5283, %r5275, %r5280;
	// end inline asm
	// begin inline asm
	mov.b32 %r5291, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5302, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5288, %r853, %r1970, %r5291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5292, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5293, %r5291, %r5292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5296, %r5288, %r5293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5299, %r864, %r1970, %r5302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5303, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5304, %r5302, %r5303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5307, %r5299, %r5304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5310, %r853, %r1992, %r5291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5314, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5315, %r5291, %r5314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5318, %r5310, %r5315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5321, %r864, %r1992, %r5302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5325, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5326, %r5302, %r5325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5329, %r5321, %r5326;
	// end inline asm
	// begin inline asm
	mov.b32 %r5337, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5348, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5334, %r853, %r2016, %r5337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5338, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5339, %r5337, %r5338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5342, %r5334, %r5339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5345, %r864, %r2016, %r5348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5349, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5350, %r5348, %r5349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5353, %r5345, %r5350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5356, %r853, %r2038, %r5337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5360, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5361, %r5337, %r5360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5364, %r5356, %r5361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5367, %r864, %r2038, %r5348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5371, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5372, %r5348, %r5371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5375, %r5367, %r5372;
	// end inline asm
	// begin inline asm
	mov.b32 %r5383, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5394, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5380, %r853, %r2062, %r5383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5384, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5385, %r5383, %r5384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5388, %r5380, %r5385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5391, %r864, %r2062, %r5394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5395, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5396, %r5394, %r5395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5399, %r5391, %r5396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5402, %r853, %r2084, %r5383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5406, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5407, %r5383, %r5406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5410, %r5402, %r5407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5413, %r864, %r2084, %r5394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5417, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5418, %r5394, %r5417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5421, %r5413, %r5418;
	// end inline asm
	// begin inline asm
	mov.b32 %r5429, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5440, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5426, %r853, %r2108, %r5429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5430, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5431, %r5429, %r5430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5434, %r5426, %r5431;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5437, %r864, %r2108, %r5440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5441, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5442, %r5440, %r5441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5445, %r5437, %r5442;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5448, %r853, %r2130, %r5429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5452, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5453, %r5429, %r5452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5456, %r5448, %r5453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5459, %r864, %r2130, %r5440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5463, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5464, %r5440, %r5463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5467, %r5459, %r5464;
	// end inline asm
	// begin inline asm
	mov.b32 %r5475, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5486, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5472, %r853, %r2154, %r5475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5476, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5477, %r5475, %r5476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5480, %r5472, %r5477;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5483, %r864, %r2154, %r5486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5487, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5488, %r5486, %r5487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5491, %r5483, %r5488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5494, %r853, %r2176, %r5475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5498, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5499, %r5475, %r5498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5502, %r5494, %r5499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5505, %r864, %r2176, %r5486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5509, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5510, %r5486, %r5509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5513, %r5505, %r5510;
	// end inline asm
	// begin inline asm
	mov.b32 %r5521, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5532, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5518, %r853, %r2200, %r5521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5522, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5523, %r5521, %r5522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5526, %r5518, %r5523;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5529, %r864, %r2200, %r5532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5533, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5534, %r5532, %r5533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5537, %r5529, %r5534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5540, %r853, %r2222, %r5521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5544, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5545, %r5521, %r5544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5548, %r5540, %r5545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5551, %r864, %r2222, %r5532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5555, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5556, %r5532, %r5555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5559, %r5551, %r5556;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5562, %r265, %r5204, %r5036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5566, %r265, %r5215, %r5041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5570, %r265, %r5226, %r5046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5574, %r265, %r5237, %r5051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5578, %r265, %r5250, %r5056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5582, %r265, %r5261, %r5061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5586, %r265, %r5272, %r5066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5590, %r265, %r5283, %r5071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5594, %r265, %r5296, %r5076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5598, %r265, %r5307, %r5081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5602, %r265, %r5318, %r5086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5606, %r265, %r5329, %r5091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5610, %r265, %r5342, %r5096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5614, %r265, %r5353, %r5101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5618, %r265, %r5364, %r5106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5622, %r265, %r5375, %r5111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5626, %r283, %r5388, %r5116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5630, %r283, %r5399, %r5121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5634, %r283, %r5410, %r5126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5638, %r283, %r5421, %r5131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5642, %r283, %r5434, %r5136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5646, %r283, %r5445, %r5141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5650, %r283, %r5456, %r5146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5654, %r283, %r5467, %r5151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5658, %r283, %r5480, %r5156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5662, %r283, %r5491, %r5161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5666, %r283, %r5502, %r5166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5670, %r283, %r5513, %r5171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5674, %r283, %r5526, %r5176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5678, %r283, %r5537, %r5181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5682, %r283, %r5548, %r5186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5686, %r283, %r5559, %r5191;
	// end inline asm
	// begin inline asm
	mov.b32 %r5695, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5706, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5692, %r853, %r2438, %r5695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5696, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5697, %r5695, %r5696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5700, %r5692, %r5697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5703, %r864, %r2438, %r5706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5707, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5708, %r5706, %r5707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5711, %r5703, %r5708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5714, %r853, %r2460, %r5695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5718, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5719, %r5695, %r5718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5722, %r5714, %r5719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5725, %r864, %r2460, %r5706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5729, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5730, %r5706, %r5729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5733, %r5725, %r5730;
	// end inline asm
	// begin inline asm
	mov.b32 %r5741, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5752, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5738, %r853, %r2484, %r5741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5742, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5743, %r5741, %r5742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5746, %r5738, %r5743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5749, %r864, %r2484, %r5752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5753, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5754, %r5752, %r5753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5757, %r5749, %r5754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5760, %r853, %r2506, %r5741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5764, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5765, %r5741, %r5764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5768, %r5760, %r5765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5771, %r864, %r2506, %r5752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5775, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5776, %r5752, %r5775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5779, %r5771, %r5776;
	// end inline asm
	// begin inline asm
	mov.b32 %r5787, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5798, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5784, %r853, %r2530, %r5787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5788, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5789, %r5787, %r5788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5792, %r5784, %r5789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5795, %r864, %r2530, %r5798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5799, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5800, %r5798, %r5799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5803, %r5795, %r5800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5806, %r853, %r2552, %r5787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5810, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5811, %r5787, %r5810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5814, %r5806, %r5811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5817, %r864, %r2552, %r5798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5821, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5822, %r5798, %r5821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5825, %r5817, %r5822;
	// end inline asm
	// begin inline asm
	mov.b32 %r5833, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5844, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5830, %r853, %r2576, %r5833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5834, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5835, %r5833, %r5834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5838, %r5830, %r5835;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5841, %r864, %r2576, %r5844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5845, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5846, %r5844, %r5845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5849, %r5841, %r5846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5852, %r853, %r2598, %r5833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5856, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5857, %r5833, %r5856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5860, %r5852, %r5857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5863, %r864, %r2598, %r5844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5867, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5868, %r5844, %r5867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5871, %r5863, %r5868;
	// end inline asm
	// begin inline asm
	mov.b32 %r5879, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5890, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5876, %r853, %r2622, %r5879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5880, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5881, %r5879, %r5880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5884, %r5876, %r5881;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5887, %r864, %r2622, %r5890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5891, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5892, %r5890, %r5891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5895, %r5887, %r5892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5898, %r853, %r2644, %r5879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5902, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5903, %r5879, %r5902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5906, %r5898, %r5903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5909, %r864, %r2644, %r5890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5913, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5914, %r5890, %r5913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5917, %r5909, %r5914;
	// end inline asm
	// begin inline asm
	mov.b32 %r5925, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5936, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5922, %r853, %r2668, %r5925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5926, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5927, %r5925, %r5926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5930, %r5922, %r5927;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5933, %r864, %r2668, %r5936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5937, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5938, %r5936, %r5937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5941, %r5933, %r5938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5944, %r853, %r2690, %r5925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5948, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5949, %r5925, %r5948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5952, %r5944, %r5949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5955, %r864, %r2690, %r5936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5959, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5960, %r5936, %r5959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5963, %r5955, %r5960;
	// end inline asm
	// begin inline asm
	mov.b32 %r5971, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5982, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5968, %r853, %r2714, %r5971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5972, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5973, %r5971, %r5972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5976, %r5968, %r5973;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5979, %r864, %r2714, %r5982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5983, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5984, %r5982, %r5983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5987, %r5979, %r5984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5990, %r853, %r2736, %r5971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5994, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5995, %r5971, %r5994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5998, %r5990, %r5995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6001, %r864, %r2736, %r5982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6005, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6006, %r5982, %r6005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6009, %r6001, %r6006;
	// end inline asm
	// begin inline asm
	mov.b32 %r6017, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r6028, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6014, %r853, %r2760, %r6017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6018, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6019, %r6017, %r6018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6022, %r6014, %r6019;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6025, %r864, %r2760, %r6028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6029, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6030, %r6028, %r6029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6033, %r6025, %r6030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6036, %r853, %r2782, %r6017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6040, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6041, %r6017, %r6040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6044, %r6036, %r6041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6047, %r864, %r2782, %r6028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6051, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6052, %r6028, %r6051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6055, %r6047, %r6052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6058, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6060, %r6058, %r5700, %r5562;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6064, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6066, %r6064, %r5711, %r5566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6070, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6072, %r6070, %r5722, %r5570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6076, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6078, %r6076, %r5733, %r5574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6082, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6084, %r6082, %r5746, %r5578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6088, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6090, %r6088, %r5757, %r5582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6094, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6096, %r6094, %r5768, %r5586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6100, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6102, %r6100, %r5779, %r5590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6106, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6108, %r6106, %r5792, %r5594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6112, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6114, %r6112, %r5803, %r5598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6118, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6120, %r6118, %r5814, %r5602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6124, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6126, %r6124, %r5825, %r5606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6130, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6132, %r6130, %r5838, %r5610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6136, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6138, %r6136, %r5849, %r5614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6142, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6144, %r6142, %r5860, %r5618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6148, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6150, %r6148, %r5871, %r5622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6154, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6156, %r6154, %r5884, %r5626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6160, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6162, %r6160, %r5895, %r5630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6166, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6168, %r6166, %r5906, %r5634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6172, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6174, %r6172, %r5917, %r5638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6178, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6180, %r6178, %r5930, %r5642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6184, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6186, %r6184, %r5941, %r5646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6190, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6192, %r6190, %r5952, %r5650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6196, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6198, %r6196, %r5963, %r5654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6202, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6204, %r6202, %r5976, %r5658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6208, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6210, %r6208, %r5987, %r5662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6214, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6216, %r6214, %r5998, %r5666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6220, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6222, %r6220, %r6009, %r5670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6226, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6228, %r6226, %r6022, %r5674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6232, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6234, %r6232, %r6033, %r5678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6238, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6240, %r6238, %r6044, %r5682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6244, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6246, %r6244, %r6055, %r5686;
	// end inline asm
	// begin inline asm
	mov.b32 %r6255, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r6266, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6252, %r853, %r854, %r6255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6256, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6257, %r6255, %r6256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6260, %r6252, %r6257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6263, %r864, %r854, %r6266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6267, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6268, %r6266, %r6267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6271, %r6263, %r6268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6274, %r853, %r876, %r6255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6278, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6279, %r6255, %r6278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6282, %r6274, %r6279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6285, %r864, %r876, %r6266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6289, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6290, %r6266, %r6289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6293, %r6285, %r6290;
	// end inline asm
	// begin inline asm
	mov.b32 %r6301, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r6312, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6298, %r853, %r900, %r6301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6302, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6303, %r6301, %r6302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6306, %r6298, %r6303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6309, %r864, %r900, %r6312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6313, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6314, %r6312, %r6313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6317, %r6309, %r6314;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6320, %r853, %r922, %r6301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6324, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6325, %r6301, %r6324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6328, %r6320, %r6325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6331, %r864, %r922, %r6312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6335, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6336, %r6312, %r6335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6339, %r6331, %r6336;
	// end inline asm
	// begin inline asm
	mov.b32 %r6347, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r6358, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6344, %r853, %r946, %r6347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6348, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6349, %r6347, %r6348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6352, %r6344, %r6349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6355, %r864, %r946, %r6358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6359, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6360, %r6358, %r6359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6363, %r6355, %r6360;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6366, %r853, %r968, %r6347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6370, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6371, %r6347, %r6370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6374, %r6366, %r6371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6377, %r864, %r968, %r6358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6381, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6382, %r6358, %r6381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6385, %r6377, %r6382;
	// end inline asm
	// begin inline asm
	mov.b32 %r6393, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r6404, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6390, %r853, %r992, %r6393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6394, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6395, %r6393, %r6394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6398, %r6390, %r6395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6401, %r864, %r992, %r6404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6405, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6406, %r6404, %r6405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6409, %r6401, %r6406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6412, %r853, %r1014, %r6393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6416, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6417, %r6393, %r6416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6420, %r6412, %r6417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6423, %r864, %r1014, %r6404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6427, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6428, %r6404, %r6427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6431, %r6423, %r6428;
	// end inline asm
	// begin inline asm
	mov.b32 %r6439, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r6450, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6436, %r853, %r1038, %r6439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6440, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6441, %r6439, %r6440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6444, %r6436, %r6441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6447, %r864, %r1038, %r6450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6451, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6452, %r6450, %r6451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6455, %r6447, %r6452;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6458, %r853, %r1060, %r6439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6462, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6463, %r6439, %r6462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6466, %r6458, %r6463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6469, %r864, %r1060, %r6450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6473, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6474, %r6450, %r6473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6477, %r6469, %r6474;
	// end inline asm
	// begin inline asm
	mov.b32 %r6485, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r6496, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6482, %r853, %r1084, %r6485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6486, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6487, %r6485, %r6486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6490, %r6482, %r6487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6493, %r864, %r1084, %r6496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6497, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6498, %r6496, %r6497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6501, %r6493, %r6498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6504, %r853, %r1106, %r6485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6508, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6509, %r6485, %r6508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6512, %r6504, %r6509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6515, %r864, %r1106, %r6496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6519, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6520, %r6496, %r6519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6523, %r6515, %r6520;
	// end inline asm
	// begin inline asm
	mov.b32 %r6531, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r6542, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6528, %r853, %r1130, %r6531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6532, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6533, %r6531, %r6532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6536, %r6528, %r6533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6539, %r864, %r1130, %r6542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6543, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6544, %r6542, %r6543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6547, %r6539, %r6544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6550, %r853, %r1152, %r6531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6554, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6555, %r6531, %r6554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6558, %r6550, %r6555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6561, %r864, %r1152, %r6542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6565, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6566, %r6542, %r6565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6569, %r6561, %r6566;
	// end inline asm
	// begin inline asm
	mov.b32 %r6577, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r6588, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6574, %r853, %r1176, %r6577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6578, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6579, %r6577, %r6578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6582, %r6574, %r6579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6585, %r864, %r1176, %r6588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6589, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6590, %r6588, %r6589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6593, %r6585, %r6590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6596, %r853, %r1198, %r6577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6600, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6601, %r6577, %r6600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6604, %r6596, %r6601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6607, %r864, %r1198, %r6588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6611, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6612, %r6588, %r6611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6615, %r6607, %r6612;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6753, %r337, %r6260, %r6060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6750, %r337, %r6271, %r6066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6762, %r337, %r6282, %r6072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6759, %r337, %r6293, %r6078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6771, %r337, %r6306, %r6084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6768, %r337, %r6317, %r6090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6780, %r337, %r6328, %r6096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6777, %r337, %r6339, %r6102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6789, %r337, %r6352, %r6108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6786, %r337, %r6363, %r6114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6798, %r337, %r6374, %r6120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6795, %r337, %r6385, %r6126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6807, %r337, %r6398, %r6132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6804, %r337, %r6409, %r6138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6816, %r337, %r6420, %r6144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6813, %r337, %r6431, %r6150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6825, %r355, %r6444, %r6156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6822, %r355, %r6455, %r6162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6834, %r355, %r6466, %r6168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6831, %r355, %r6477, %r6174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6843, %r355, %r6490, %r6180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6840, %r355, %r6501, %r6186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6852, %r355, %r6512, %r6192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6849, %r355, %r6523, %r6198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6861, %r355, %r6536, %r6204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6858, %r355, %r6547, %r6210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6870, %r355, %r6558, %r6216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6867, %r355, %r6569, %r6222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6879, %r355, %r6582, %r6228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6876, %r355, %r6593, %r6234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6888, %r355, %r6604, %r6240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6885, %r355, %r6615, %r6246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6746, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6748, %r6746, %r6750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6751, %r394, %r6753, %r6748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6755, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6757, %r6755, %r6759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6760, %r394, %r6762, %r6757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6764, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6766, %r6764, %r6768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6769, %r394, %r6771, %r6766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6773, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6775, %r6773, %r6777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6778, %r394, %r6780, %r6775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6782, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6784, %r6782, %r6786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6787, %r394, %r6789, %r6784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6791, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6793, %r6791, %r6795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6796, %r394, %r6798, %r6793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6800, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6802, %r6800, %r6804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6805, %r394, %r6807, %r6802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6809, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6811, %r6809, %r6813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6814, %r394, %r6816, %r6811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6818, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6820, %r6818, %r6822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6823, %r397, %r6825, %r6820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6827, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6829, %r6827, %r6831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6832, %r397, %r6834, %r6829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6836, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6838, %r6836, %r6840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6841, %r397, %r6843, %r6838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6845, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6847, %r6845, %r6849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6850, %r397, %r6852, %r6847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6854, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6856, %r6854, %r6858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6859, %r397, %r6861, %r6856;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6863, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6865, %r6863, %r6867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6868, %r397, %r6870, %r6865;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6872, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6874, %r6872, %r6876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6877, %r397, %r6879, %r6874;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6881, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6883, %r6881, %r6885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6886, %r397, %r6888, %r6883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6890, %r400, %r6753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6893, %r394, %r6750, %r6890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6897, %r400, %r6762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6900, %r394, %r6759, %r6897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6904, %r400, %r6771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6907, %r394, %r6768, %r6904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6911, %r400, %r6780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6914, %r394, %r6777, %r6911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6918, %r400, %r6789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6921, %r394, %r6786, %r6918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6925, %r400, %r6798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6928, %r394, %r6795, %r6925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6932, %r400, %r6807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6935, %r394, %r6804, %r6932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6939, %r400, %r6816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6942, %r394, %r6813, %r6939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6946, %r403, %r6825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6949, %r397, %r6822, %r6946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6953, %r403, %r6834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6956, %r397, %r6831, %r6953;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6960, %r403, %r6843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6963, %r397, %r6840, %r6960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6967, %r403, %r6852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6970, %r397, %r6849, %r6967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6974, %r403, %r6861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6977, %r397, %r6858, %r6974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6981, %r403, %r6870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6984, %r397, %r6867, %r6981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6988, %r403, %r6879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6991, %r397, %r6876, %r6988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6995, %r403, %r6888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6998, %r397, %r6885, %r6995;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7169, %r7166}, {%r461, %r467, %r464, %r470}, {%r6751, %r6893}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7178, %r7175}, {%r461, %r467, %r464, %r470}, {%r6760, %r6900}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7187, %r7184}, {%r461, %r467, %r464, %r470}, {%r6769, %r6907}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7196, %r7193}, {%r461, %r467, %r464, %r470}, {%r6778, %r6914}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7205, %r7202}, {%r461, %r467, %r464, %r470}, {%r6787, %r6921}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7214, %r7211}, {%r461, %r467, %r464, %r470}, {%r6796, %r6928}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7223, %r7220}, {%r461, %r467, %r464, %r470}, {%r6805, %r6935}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7232, %r7229}, {%r461, %r467, %r464, %r470}, {%r6814, %r6942}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7241, %r7238}, {%r461, %r467, %r464, %r470}, {%r6823, %r6949}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7250, %r7247}, {%r461, %r467, %r464, %r470}, {%r6832, %r6956}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7259, %r7256}, {%r461, %r467, %r464, %r470}, {%r6841, %r6963}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7268, %r7265}, {%r461, %r467, %r464, %r470}, {%r6850, %r6970}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7277, %r7274}, {%r461, %r467, %r464, %r470}, {%r6859, %r6977}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7286, %r7283}, {%r461, %r467, %r464, %r470}, {%r6868, %r6984}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7295, %r7292}, {%r461, %r467, %r464, %r470}, {%r6877, %r6991}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7304, %r7301}, {%r461, %r467, %r464, %r470}, {%r6886, %r6998}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7162, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7164, %r7162, %r7166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7167, %r511, %r7169, %r7164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7171, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7173, %r7171, %r7175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7176, %r511, %r7178, %r7173;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7180, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7182, %r7180, %r7184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7185, %r511, %r7187, %r7182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7189, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7191, %r7189, %r7193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7194, %r511, %r7196, %r7191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7198, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7200, %r7198, %r7202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7203, %r511, %r7205, %r7200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7207, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7209, %r7207, %r7211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7212, %r511, %r7214, %r7209;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7216, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7218, %r7216, %r7220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7221, %r511, %r7223, %r7218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7225, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7227, %r7225, %r7229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7230, %r511, %r7232, %r7227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7234, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7236, %r7234, %r7238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7239, %r511, %r7241, %r7236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7243, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7245, %r7243, %r7247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7248, %r511, %r7250, %r7245;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7252, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7254, %r7252, %r7256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7257, %r511, %r7259, %r7254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7261, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7263, %r7261, %r7265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7266, %r511, %r7268, %r7263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7270, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7272, %r7270, %r7274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7275, %r511, %r7277, %r7272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7279, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7281, %r7279, %r7283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7284, %r511, %r7286, %r7281;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7288, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7290, %r7288, %r7292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7293, %r511, %r7295, %r7290;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7297, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7299, %r7297, %r7301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7302, %r511, %r7304, %r7299;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7306, %r514, %r7169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7309, %r511, %r7166, %r7306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7313, %r514, %r7178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7316, %r511, %r7175, %r7313;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7320, %r514, %r7187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7323, %r511, %r7184, %r7320;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7327, %r514, %r7196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7330, %r511, %r7193, %r7327;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7334, %r514, %r7205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7337, %r511, %r7202, %r7334;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7341, %r514, %r7214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7344, %r511, %r7211, %r7341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7348, %r514, %r7223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7351, %r511, %r7220, %r7348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7355, %r514, %r7232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7358, %r511, %r7229, %r7355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7362, %r514, %r7241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7365, %r511, %r7238, %r7362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7369, %r514, %r7250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7372, %r511, %r7247, %r7369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7376, %r514, %r7259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7379, %r511, %r7256, %r7376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7383, %r514, %r7268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7386, %r511, %r7265, %r7383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7390, %r514, %r7277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7393, %r511, %r7274, %r7390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7397, %r514, %r7286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7400, %r511, %r7283, %r7397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7404, %r514, %r7295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7407, %r511, %r7292, %r7404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7411, %r514, %r7304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7414, %r511, %r7301, %r7411;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7707, %r7710}, {%r549, %r555, %r552, %r558}, {%r7167, %r7309}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7713, %r7716}, {%r549, %r555, %r552, %r558}, {%r7176, %r7316}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7719, %r7722}, {%r549, %r555, %r552, %r558}, {%r7185, %r7323}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7725, %r7728}, {%r549, %r555, %r552, %r558}, {%r7194, %r7330}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7731, %r7734}, {%r549, %r555, %r552, %r558}, {%r7203, %r7337}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7737, %r7740}, {%r549, %r555, %r552, %r558}, {%r7212, %r7344}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7743, %r7746}, {%r549, %r555, %r552, %r558}, {%r7221, %r7351}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7749, %r7752}, {%r549, %r555, %r552, %r558}, {%r7230, %r7358}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7708, %r7711}, {%r549, %r555, %r552, %r558}, {%r7239, %r7365}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7714, %r7717}, {%r549, %r555, %r552, %r558}, {%r7248, %r7372}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7720, %r7723}, {%r549, %r555, %r552, %r558}, {%r7257, %r7379}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7726, %r7729}, {%r549, %r555, %r552, %r558}, {%r7266, %r7386}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7732, %r7735}, {%r549, %r555, %r552, %r558}, {%r7275, %r7393}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7738, %r7741}, {%r549, %r555, %r552, %r558}, {%r7284, %r7400}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7744, %r7747}, {%r549, %r555, %r552, %r558}, {%r7293, %r7407}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7750, %r7753}, {%r549, %r555, %r552, %r558}, {%r7302, %r7414}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7706, %r7707, %r7708;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7709, %r7710, %r7711;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7712, %r7713, %r7714;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7715, %r7716, %r7717;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7718, %r7719, %r7720;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7721, %r7722, %r7723;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7724, %r7725, %r7726;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7727, %r7728, %r7729;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7730, %r7731, %r7732;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7733, %r7734, %r7735;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7736, %r7737, %r7738;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7739, %r7740, %r7741;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7742, %r7743, %r7744;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7745, %r7746, %r7747;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7748, %r7749, %r7750;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7751, %r7752, %r7753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7754, %r7707, %r7708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7757, %r7710, %r7711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7760, %r7713, %r7714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7763, %r7716, %r7717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7766, %r7719, %r7720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7769, %r7722, %r7723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7772, %r7725, %r7726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7775, %r7728, %r7729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7778, %r7731, %r7732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7781, %r7734, %r7735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7784, %r7737, %r7738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7787, %r7740, %r7741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7790, %r7743, %r7744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7793, %r7746, %r7747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7796, %r7749, %r7750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7799, %r7752, %r7753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7802, %r133, %r7706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7805, %r133, %r7709;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7808, %r133, %r7712;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7811, %r133, %r7715;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7814, %r133, %r7718;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7817, %r133, %r7721;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7820, %r133, %r7724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7823, %r133, %r7727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7826, %r133, %r7730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7829, %r133, %r7733;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7832, %r133, %r7736;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7835, %r133, %r7739;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7838, %r133, %r7742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7841, %r133, %r7745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7844, %r133, %r7748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7847, %r133, %r7751;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7850, %r134, %r7754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7853, %r134, %r7757;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7856, %r134, %r7760;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7859, %r134, %r7763;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7862, %r134, %r7766;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7865, %r134, %r7769;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7868, %r134, %r7772;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7871, %r134, %r7775;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7874, %r134, %r7778;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7877, %r134, %r7781;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7880, %r134, %r7784;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7883, %r134, %r7787;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7886, %r134, %r7790;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7889, %r134, %r7793;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7892, %r134, %r7796;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7895, %r134, %r7799;
	// end inline asm
	// begin inline asm
	mov.b32 %r7898, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7899, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7900, %r7802, %r7898;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7903, %r7900, %r7899;
	// end inline asm
	// begin inline asm
	mov.b32 %r7906, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7907, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7908, %r7805, %r7906;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7911, %r7908, %r7907;
	// end inline asm
	// begin inline asm
	mov.b32 %r7914, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7915, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7916, %r7808, %r7914;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7919, %r7916, %r7915;
	// end inline asm
	// begin inline asm
	mov.b32 %r7922, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7923, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7924, %r7811, %r7922;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7927, %r7924, %r7923;
	// end inline asm
	// begin inline asm
	mov.b32 %r7930, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7931, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7932, %r7814, %r7930;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7935, %r7932, %r7931;
	// end inline asm
	// begin inline asm
	mov.b32 %r7938, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7939, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7940, %r7817, %r7938;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7943, %r7940, %r7939;
	// end inline asm
	// begin inline asm
	mov.b32 %r7946, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7947, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7948, %r7820, %r7946;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7951, %r7948, %r7947;
	// end inline asm
	// begin inline asm
	mov.b32 %r7954, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7955, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7956, %r7823, %r7954;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7959, %r7956, %r7955;
	// end inline asm
	// begin inline asm
	mov.b32 %r7962, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7963, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7964, %r7826, %r7962;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7967, %r7964, %r7963;
	// end inline asm
	// begin inline asm
	mov.b32 %r7970, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7971, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7972, %r7829, %r7970;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7975, %r7972, %r7971;
	// end inline asm
	// begin inline asm
	mov.b32 %r7978, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7979, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7980, %r7832, %r7978;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7983, %r7980, %r7979;
	// end inline asm
	// begin inline asm
	mov.b32 %r7986, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7987, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7988, %r7835, %r7986;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7991, %r7988, %r7987;
	// end inline asm
	// begin inline asm
	mov.b32 %r7994, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7995, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7996, %r7838, %r7994;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7999, %r7996, %r7995;
	// end inline asm
	// begin inline asm
	mov.b32 %r8002, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8003, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8004, %r7841, %r8002;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8007, %r8004, %r8003;
	// end inline asm
	// begin inline asm
	mov.b32 %r8010, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8011, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8012, %r7844, %r8010;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8015, %r8012, %r8011;
	// end inline asm
	// begin inline asm
	mov.b32 %r8018, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8019, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8020, %r7847, %r8018;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8023, %r8020, %r8019;
	// end inline asm
	// begin inline asm
	mov.b32 %r8026, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8027, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8028, %r7850, %r8026;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8031, %r8028, %r8027;
	// end inline asm
	// begin inline asm
	mov.b32 %r8034, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8035, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8036, %r7853, %r8034;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8039, %r8036, %r8035;
	// end inline asm
	// begin inline asm
	mov.b32 %r8042, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8043, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8044, %r7856, %r8042;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8047, %r8044, %r8043;
	// end inline asm
	// begin inline asm
	mov.b32 %r8050, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8051, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8052, %r7859, %r8050;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8055, %r8052, %r8051;
	// end inline asm
	// begin inline asm
	mov.b32 %r8058, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8059, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8060, %r7862, %r8058;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8063, %r8060, %r8059;
	// end inline asm
	// begin inline asm
	mov.b32 %r8066, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8067, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8068, %r7865, %r8066;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8071, %r8068, %r8067;
	// end inline asm
	// begin inline asm
	mov.b32 %r8074, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8075, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8076, %r7868, %r8074;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8079, %r8076, %r8075;
	// end inline asm
	// begin inline asm
	mov.b32 %r8082, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8083, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8084, %r7871, %r8082;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8087, %r8084, %r8083;
	// end inline asm
	// begin inline asm
	mov.b32 %r8090, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8091, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8092, %r7874, %r8090;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8095, %r8092, %r8091;
	// end inline asm
	// begin inline asm
	mov.b32 %r8098, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8099, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8100, %r7877, %r8098;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8103, %r8100, %r8099;
	// end inline asm
	// begin inline asm
	mov.b32 %r8106, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8107, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8108, %r7880, %r8106;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8111, %r8108, %r8107;
	// end inline asm
	// begin inline asm
	mov.b32 %r8114, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8115, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8116, %r7883, %r8114;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8119, %r8116, %r8115;
	// end inline asm
	// begin inline asm
	mov.b32 %r8122, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8123, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8124, %r7886, %r8122;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8127, %r8124, %r8123;
	// end inline asm
	// begin inline asm
	mov.b32 %r8130, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8131, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8132, %r7889, %r8130;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8135, %r8132, %r8131;
	// end inline asm
	// begin inline asm
	mov.b32 %r8138, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8139, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8140, %r7892, %r8138;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8143, %r8140, %r8139;
	// end inline asm
	// begin inline asm
	mov.b32 %r8146, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8147, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8148, %r7895, %r8146;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8151, %r8148, %r8147;
	// end inline asm
	// begin inline asm
	mov.b32 %r8157, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8155, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8156, %r8157, %r8155;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8159, %r7903, %r8156;
	// end inline asm
	// begin inline asm
	mov.b32 %r8162, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8163, %r8157, %r8162;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8166, %r7911, %r8163;
	// end inline asm
	// begin inline asm
	mov.b32 %r8169, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8170, %r8157, %r8169;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8173, %r7919, %r8170;
	// end inline asm
	// begin inline asm
	mov.b32 %r8176, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8177, %r8157, %r8176;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8180, %r7927, %r8177;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8183, %r8159, %r8173, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8187, %r8166, %r8180, %r4370;
	// end inline asm
	shl.b32 	%r8194, %r8187, 4;
	// begin inline asm
	lop3.b32 %r8191, %r4376, %r8183, %r8194, 202;
	// end inline asm
	xor.b32  	%r16178, %r8191, -2004318072;
	// begin inline asm
	mov.b32 %r8198, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8196, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8197, %r8198, %r8196;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8200, %r7935, %r8197;
	// end inline asm
	// begin inline asm
	mov.b32 %r8203, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8204, %r8198, %r8203;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8207, %r7943, %r8204;
	// end inline asm
	// begin inline asm
	mov.b32 %r8210, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8211, %r8198, %r8210;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8214, %r7951, %r8211;
	// end inline asm
	// begin inline asm
	mov.b32 %r8217, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8218, %r8198, %r8217;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8221, %r7959, %r8218;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8224, %r8200, %r8214, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8228, %r8207, %r8221, %r4370;
	// end inline asm
	shl.b32 	%r8235, %r8228, 4;
	// begin inline asm
	lop3.b32 %r8232, %r4376, %r8224, %r8235, 202;
	// end inline asm
	xor.b32  	%r16179, %r8232, -2004318072;
	// begin inline asm
	mov.b32 %r8239, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8237, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8238, %r8239, %r8237;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8241, %r7967, %r8238;
	// end inline asm
	// begin inline asm
	mov.b32 %r8244, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8245, %r8239, %r8244;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8248, %r7975, %r8245;
	// end inline asm
	// begin inline asm
	mov.b32 %r8251, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8252, %r8239, %r8251;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8255, %r7983, %r8252;
	// end inline asm
	// begin inline asm
	mov.b32 %r8258, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8259, %r8239, %r8258;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8262, %r7991, %r8259;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8265, %r8241, %r8255, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8269, %r8248, %r8262, %r4370;
	// end inline asm
	shl.b32 	%r8276, %r8269, 4;
	// begin inline asm
	lop3.b32 %r8273, %r4376, %r8265, %r8276, 202;
	// end inline asm
	xor.b32  	%r16180, %r8273, -2004318072;
	// begin inline asm
	mov.b32 %r8280, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8278, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8279, %r8280, %r8278;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8282, %r7999, %r8279;
	// end inline asm
	// begin inline asm
	mov.b32 %r8285, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8286, %r8280, %r8285;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8289, %r8007, %r8286;
	// end inline asm
	// begin inline asm
	mov.b32 %r8292, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8293, %r8280, %r8292;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8296, %r8015, %r8293;
	// end inline asm
	// begin inline asm
	mov.b32 %r8299, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8300, %r8280, %r8299;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8303, %r8023, %r8300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8306, %r8282, %r8296, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8310, %r8289, %r8303, %r4370;
	// end inline asm
	shl.b32 	%r8317, %r8310, 4;
	// begin inline asm
	lop3.b32 %r8314, %r4376, %r8306, %r8317, 202;
	// end inline asm
	xor.b32  	%r16181, %r8314, -2004318072;
	// begin inline asm
	mov.b32 %r8321, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8319, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8320, %r8321, %r8319;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8323, %r8031, %r8320;
	// end inline asm
	// begin inline asm
	mov.b32 %r8326, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8327, %r8321, %r8326;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8330, %r8039, %r8327;
	// end inline asm
	// begin inline asm
	mov.b32 %r8333, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8334, %r8321, %r8333;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8337, %r8047, %r8334;
	// end inline asm
	// begin inline asm
	mov.b32 %r8340, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8341, %r8321, %r8340;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8344, %r8055, %r8341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8347, %r8323, %r8337, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8351, %r8330, %r8344, %r4370;
	// end inline asm
	shl.b32 	%r8358, %r8351, 4;
	// begin inline asm
	lop3.b32 %r8355, %r4376, %r8347, %r8358, 202;
	// end inline asm
	xor.b32  	%r16182, %r8355, -2004318072;
	// begin inline asm
	mov.b32 %r8362, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8360, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8361, %r8362, %r8360;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8364, %r8063, %r8361;
	// end inline asm
	// begin inline asm
	mov.b32 %r8367, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8368, %r8362, %r8367;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8371, %r8071, %r8368;
	// end inline asm
	// begin inline asm
	mov.b32 %r8374, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8375, %r8362, %r8374;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8378, %r8079, %r8375;
	// end inline asm
	// begin inline asm
	mov.b32 %r8381, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8382, %r8362, %r8381;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8385, %r8087, %r8382;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8388, %r8364, %r8378, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8392, %r8371, %r8385, %r4370;
	// end inline asm
	shl.b32 	%r8399, %r8392, 4;
	// begin inline asm
	lop3.b32 %r8396, %r4376, %r8388, %r8399, 202;
	// end inline asm
	xor.b32  	%r16183, %r8396, -2004318072;
	// begin inline asm
	mov.b32 %r8403, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8401, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8402, %r8403, %r8401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8405, %r8095, %r8402;
	// end inline asm
	// begin inline asm
	mov.b32 %r8408, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8409, %r8403, %r8408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8412, %r8103, %r8409;
	// end inline asm
	// begin inline asm
	mov.b32 %r8415, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8416, %r8403, %r8415;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8419, %r8111, %r8416;
	// end inline asm
	// begin inline asm
	mov.b32 %r8422, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8423, %r8403, %r8422;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8426, %r8119, %r8423;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8429, %r8405, %r8419, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8433, %r8412, %r8426, %r4370;
	// end inline asm
	shl.b32 	%r8440, %r8433, 4;
	// begin inline asm
	lop3.b32 %r8437, %r4376, %r8429, %r8440, 202;
	// end inline asm
	xor.b32  	%r16184, %r8437, -2004318072;
	// begin inline asm
	mov.b32 %r8444, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8442, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8443, %r8444, %r8442;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8446, %r8127, %r8443;
	// end inline asm
	// begin inline asm
	mov.b32 %r8449, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8450, %r8444, %r8449;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8453, %r8135, %r8450;
	// end inline asm
	// begin inline asm
	mov.b32 %r8456, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8457, %r8444, %r8456;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8460, %r8143, %r8457;
	// end inline asm
	// begin inline asm
	mov.b32 %r8463, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8464, %r8444, %r8463;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8467, %r8151, %r8464;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8470, %r8446, %r8460, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8474, %r8453, %r8467, %r4370;
	// end inline asm
	shl.b32 	%r8481, %r8474, 4;
	// begin inline asm
	lop3.b32 %r8478, %r4376, %r8470, %r8481, 202;
	// end inline asm
	xor.b32  	%r16185, %r8478, -2004318072;
	st.shared.u32 	[%rd104], %r16178;
	st.shared.u32 	[%rd106], %r16179;
	st.shared.u32 	[%rd108], %r16180;
	st.shared.u32 	[%rd110], %r16181;
	st.shared.u32 	[%rd112], %r16182;
	st.shared.u32 	[%rd114], %r16183;
	st.shared.u32 	[%rd116], %r16184;
	st.shared.u32 	[%rd118], %r16185;
	ld.shared.u32 	%r16298, [%rd88];
	ld.shared.u32 	%r16299, [%rd90];
	ld.shared.u32 	%r16300, [%rd92];
	ld.shared.u32 	%r16301, [%rd94];
	ld.shared.u32 	%r16310, [%rd96];
	ld.shared.u32 	%r16311, [%rd98];
	ld.shared.u32 	%r16312, [%rd100];
	ld.shared.u32 	%r16313, [%rd102];
	// begin inline asm
	mov.b32 %r8487, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8498, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r8486, %r16298, -2004318072;
	// begin inline asm
	lop3.b32 %r8484, %r853, %r8486, %r8487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8488, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8489, %r8487, %r8488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8492, %r8484, %r8489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8495, %r864, %r8486, %r8498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8499, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8500, %r8498, %r8499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8503, %r8495, %r8500;
	// end inline asm
	shr.u32 	%r8508, %r8486, 8;
	// begin inline asm
	lop3.b32 %r8506, %r853, %r8508, %r8487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8510, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8511, %r8487, %r8510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8514, %r8506, %r8511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8517, %r864, %r8508, %r8498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8521, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8522, %r8498, %r8521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8525, %r8517, %r8522;
	// end inline asm
	// begin inline asm
	mov.b32 %r8533, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8544, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r8532, %r16299, -2004318072;
	// begin inline asm
	lop3.b32 %r8530, %r853, %r8532, %r8533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8534, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8535, %r8533, %r8534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8538, %r8530, %r8535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8541, %r864, %r8532, %r8544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8545, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8546, %r8544, %r8545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8549, %r8541, %r8546;
	// end inline asm
	shr.u32 	%r8554, %r8532, 8;
	// begin inline asm
	lop3.b32 %r8552, %r853, %r8554, %r8533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8556, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8557, %r8533, %r8556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8560, %r8552, %r8557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8563, %r864, %r8554, %r8544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8567, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8568, %r8544, %r8567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8571, %r8563, %r8568;
	// end inline asm
	// begin inline asm
	mov.b32 %r8579, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8590, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r8578, %r16300, -2004318072;
	// begin inline asm
	lop3.b32 %r8576, %r853, %r8578, %r8579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8580, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8581, %r8579, %r8580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8584, %r8576, %r8581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8587, %r864, %r8578, %r8590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8591, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8592, %r8590, %r8591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8595, %r8587, %r8592;
	// end inline asm
	shr.u32 	%r8600, %r8578, 8;
	// begin inline asm
	lop3.b32 %r8598, %r853, %r8600, %r8579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8602, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8603, %r8579, %r8602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8606, %r8598, %r8603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8609, %r864, %r8600, %r8590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8613, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8614, %r8590, %r8613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8617, %r8609, %r8614;
	// end inline asm
	// begin inline asm
	mov.b32 %r8625, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8636, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r8624, %r16301, -2004318072;
	// begin inline asm
	lop3.b32 %r8622, %r853, %r8624, %r8625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8626, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8627, %r8625, %r8626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8630, %r8622, %r8627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8633, %r864, %r8624, %r8636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8637, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8638, %r8636, %r8637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8641, %r8633, %r8638;
	// end inline asm
	shr.u32 	%r8646, %r8624, 8;
	// begin inline asm
	lop3.b32 %r8644, %r853, %r8646, %r8625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8648, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8649, %r8625, %r8648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8652, %r8644, %r8649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8655, %r864, %r8646, %r8636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8659, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8660, %r8636, %r8659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8663, %r8655, %r8660;
	// end inline asm
	// begin inline asm
	mov.b32 %r8671, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8682, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r8670, %r16310, -2004318072;
	// begin inline asm
	lop3.b32 %r8668, %r853, %r8670, %r8671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8672, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8673, %r8671, %r8672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8676, %r8668, %r8673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8679, %r864, %r8670, %r8682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8683, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8684, %r8682, %r8683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8687, %r8679, %r8684;
	// end inline asm
	shr.u32 	%r8692, %r8670, 8;
	// begin inline asm
	lop3.b32 %r8690, %r853, %r8692, %r8671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8694, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8695, %r8671, %r8694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8698, %r8690, %r8695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8701, %r864, %r8692, %r8682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8705, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8706, %r8682, %r8705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8709, %r8701, %r8706;
	// end inline asm
	// begin inline asm
	mov.b32 %r8717, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8728, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r8716, %r16311, -2004318072;
	// begin inline asm
	lop3.b32 %r8714, %r853, %r8716, %r8717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8718, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8719, %r8717, %r8718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8722, %r8714, %r8719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8725, %r864, %r8716, %r8728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8729, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8730, %r8728, %r8729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8733, %r8725, %r8730;
	// end inline asm
	shr.u32 	%r8738, %r8716, 8;
	// begin inline asm
	lop3.b32 %r8736, %r853, %r8738, %r8717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8740, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8741, %r8717, %r8740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8744, %r8736, %r8741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8747, %r864, %r8738, %r8728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8751, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8752, %r8728, %r8751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8755, %r8747, %r8752;
	// end inline asm
	// begin inline asm
	mov.b32 %r8763, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8774, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r8762, %r16312, -2004318072;
	// begin inline asm
	lop3.b32 %r8760, %r853, %r8762, %r8763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8764, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8765, %r8763, %r8764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8768, %r8760, %r8765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8771, %r864, %r8762, %r8774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8775, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8776, %r8774, %r8775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8779, %r8771, %r8776;
	// end inline asm
	shr.u32 	%r8784, %r8762, 8;
	// begin inline asm
	lop3.b32 %r8782, %r853, %r8784, %r8763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8786, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8787, %r8763, %r8786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8790, %r8782, %r8787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8793, %r864, %r8784, %r8774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8797, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8798, %r8774, %r8797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8801, %r8793, %r8798;
	// end inline asm
	// begin inline asm
	mov.b32 %r8809, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8820, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r8808, %r16313, -2004318072;
	// begin inline asm
	lop3.b32 %r8806, %r853, %r8808, %r8809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8810, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8811, %r8809, %r8810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8814, %r8806, %r8811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8817, %r864, %r8808, %r8820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8821, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8822, %r8820, %r8821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8825, %r8817, %r8822;
	// end inline asm
	shr.u32 	%r8830, %r8808, 8;
	// begin inline asm
	lop3.b32 %r8828, %r853, %r8830, %r8809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8832, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8833, %r8809, %r8832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8836, %r8828, %r8833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8839, %r864, %r8830, %r8820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8843, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8844, %r8820, %r8843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8847, %r8839, %r8844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8850, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8852, %r8850, %r8492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8855, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8857, %r8855, %r8503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8860, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8862, %r8860, %r8514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8865, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8867, %r8865, %r8525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8870, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8872, %r8870, %r8538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8875, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8877, %r8875, %r8549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8880, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8882, %r8880, %r8560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8885, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8887, %r8885, %r8571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8890, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8892, %r8890, %r8584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8895, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8897, %r8895, %r8595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8900, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8902, %r8900, %r8606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8905, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8907, %r8905, %r8617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8910, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8912, %r8910, %r8630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8915, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8917, %r8915, %r8641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8920, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8922, %r8920, %r8652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8925, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8927, %r8925, %r8663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8930, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8932, %r8930, %r8676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8935, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8937, %r8935, %r8687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8940, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8942, %r8940, %r8698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8945, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8947, %r8945, %r8709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8950, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8952, %r8950, %r8722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8955, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8957, %r8955, %r8733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8960, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8962, %r8960, %r8744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8965, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8967, %r8965, %r8755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8970, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8972, %r8970, %r8768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8975, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8977, %r8975, %r8779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8980, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8982, %r8980, %r8790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8985, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8987, %r8985, %r8801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8990, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8992, %r8990, %r8814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8995, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8997, %r8995, %r8825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9000, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9002, %r9000, %r8836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9005, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9007, %r9005, %r8847;
	// end inline asm
	// begin inline asm
	mov.b32 %r9015, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9026, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9012, %r853, %r2438, %r9015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9016, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9017, %r9015, %r9016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9020, %r9012, %r9017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9023, %r864, %r2438, %r9026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9027, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9028, %r9026, %r9027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9031, %r9023, %r9028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9034, %r853, %r2460, %r9015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9038, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9039, %r9015, %r9038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9042, %r9034, %r9039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9045, %r864, %r2460, %r9026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9049, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9050, %r9026, %r9049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9053, %r9045, %r9050;
	// end inline asm
	// begin inline asm
	mov.b32 %r9061, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9072, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9058, %r853, %r2484, %r9061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9062, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9063, %r9061, %r9062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9066, %r9058, %r9063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9069, %r864, %r2484, %r9072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9073, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9074, %r9072, %r9073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9077, %r9069, %r9074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9080, %r853, %r2506, %r9061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9084, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9085, %r9061, %r9084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9088, %r9080, %r9085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9091, %r864, %r2506, %r9072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9095, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9096, %r9072, %r9095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9099, %r9091, %r9096;
	// end inline asm
	// begin inline asm
	mov.b32 %r9107, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9118, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9104, %r853, %r2530, %r9107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9108, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9109, %r9107, %r9108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9112, %r9104, %r9109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9115, %r864, %r2530, %r9118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9119, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9120, %r9118, %r9119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9123, %r9115, %r9120;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9126, %r853, %r2552, %r9107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9130, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9131, %r9107, %r9130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9134, %r9126, %r9131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9137, %r864, %r2552, %r9118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9141, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9142, %r9118, %r9141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9145, %r9137, %r9142;
	// end inline asm
	// begin inline asm
	mov.b32 %r9153, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9164, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9150, %r853, %r2576, %r9153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9154, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9155, %r9153, %r9154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9158, %r9150, %r9155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9161, %r864, %r2576, %r9164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9165, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9166, %r9164, %r9165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9169, %r9161, %r9166;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9172, %r853, %r2598, %r9153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9176, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9177, %r9153, %r9176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9180, %r9172, %r9177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9183, %r864, %r2598, %r9164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9187, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9188, %r9164, %r9187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9191, %r9183, %r9188;
	// end inline asm
	// begin inline asm
	mov.b32 %r9199, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9210, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9196, %r853, %r2622, %r9199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9200, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9201, %r9199, %r9200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9204, %r9196, %r9201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9207, %r864, %r2622, %r9210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9211, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9212, %r9210, %r9211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9215, %r9207, %r9212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9218, %r853, %r2644, %r9199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9222, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9223, %r9199, %r9222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9226, %r9218, %r9223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9229, %r864, %r2644, %r9210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9233, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9234, %r9210, %r9233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9237, %r9229, %r9234;
	// end inline asm
	// begin inline asm
	mov.b32 %r9245, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9256, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9242, %r853, %r2668, %r9245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9246, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9247, %r9245, %r9246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9250, %r9242, %r9247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9253, %r864, %r2668, %r9256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9257, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9258, %r9256, %r9257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9261, %r9253, %r9258;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9264, %r853, %r2690, %r9245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9268, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9269, %r9245, %r9268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9272, %r9264, %r9269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9275, %r864, %r2690, %r9256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9279, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9280, %r9256, %r9279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9283, %r9275, %r9280;
	// end inline asm
	// begin inline asm
	mov.b32 %r9291, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9302, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9288, %r853, %r2714, %r9291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9292, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9293, %r9291, %r9292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9296, %r9288, %r9293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9299, %r864, %r2714, %r9302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9303, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9304, %r9302, %r9303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9307, %r9299, %r9304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9310, %r853, %r2736, %r9291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9314, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9315, %r9291, %r9314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9318, %r9310, %r9315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9321, %r864, %r2736, %r9302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9325, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9326, %r9302, %r9325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9329, %r9321, %r9326;
	// end inline asm
	// begin inline asm
	mov.b32 %r9337, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9348, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9334, %r853, %r2760, %r9337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9338, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9339, %r9337, %r9338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9342, %r9334, %r9339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9345, %r864, %r2760, %r9348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9349, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9350, %r9348, %r9349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9353, %r9345, %r9350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9356, %r853, %r2782, %r9337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9360, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9361, %r9337, %r9360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9364, %r9356, %r9361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9367, %r864, %r2782, %r9348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9371, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9372, %r9348, %r9371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9375, %r9367, %r9372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9378, %r265, %r9020, %r8852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9382, %r265, %r9031, %r8857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9386, %r265, %r9042, %r8862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9390, %r265, %r9053, %r8867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9394, %r265, %r9066, %r8872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9398, %r265, %r9077, %r8877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9402, %r265, %r9088, %r8882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9406, %r265, %r9099, %r8887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9410, %r265, %r9112, %r8892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9414, %r265, %r9123, %r8897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9418, %r265, %r9134, %r8902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9422, %r265, %r9145, %r8907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9426, %r265, %r9158, %r8912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9430, %r265, %r9169, %r8917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9434, %r265, %r9180, %r8922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9438, %r265, %r9191, %r8927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9442, %r283, %r9204, %r8932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9446, %r283, %r9215, %r8937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9450, %r283, %r9226, %r8942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9454, %r283, %r9237, %r8947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9458, %r283, %r9250, %r8952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9462, %r283, %r9261, %r8957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9466, %r283, %r9272, %r8962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9470, %r283, %r9283, %r8967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9474, %r283, %r9296, %r8972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9478, %r283, %r9307, %r8977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9482, %r283, %r9318, %r8982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9486, %r283, %r9329, %r8987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9490, %r283, %r9342, %r8992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9494, %r283, %r9353, %r8997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9498, %r283, %r9364, %r9002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9502, %r283, %r9375, %r9007;
	// end inline asm
	// begin inline asm
	mov.b32 %r9511, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9522, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9508, %r853, %r854, %r9511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9512, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9513, %r9511, %r9512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9516, %r9508, %r9513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9519, %r864, %r854, %r9522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9523, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9524, %r9522, %r9523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9527, %r9519, %r9524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9530, %r853, %r876, %r9511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9534, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9535, %r9511, %r9534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9538, %r9530, %r9535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9541, %r864, %r876, %r9522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9545, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9546, %r9522, %r9545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9549, %r9541, %r9546;
	// end inline asm
	// begin inline asm
	mov.b32 %r9557, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9568, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9554, %r853, %r900, %r9557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9558, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9559, %r9557, %r9558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9562, %r9554, %r9559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9565, %r864, %r900, %r9568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9569, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9570, %r9568, %r9569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9573, %r9565, %r9570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9576, %r853, %r922, %r9557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9580, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9581, %r9557, %r9580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9584, %r9576, %r9581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9587, %r864, %r922, %r9568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9591, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9592, %r9568, %r9591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9595, %r9587, %r9592;
	// end inline asm
	// begin inline asm
	mov.b32 %r9603, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9614, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9600, %r853, %r946, %r9603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9604, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9605, %r9603, %r9604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9608, %r9600, %r9605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9611, %r864, %r946, %r9614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9615, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9616, %r9614, %r9615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9619, %r9611, %r9616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9622, %r853, %r968, %r9603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9626, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9627, %r9603, %r9626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9630, %r9622, %r9627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9633, %r864, %r968, %r9614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9637, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9638, %r9614, %r9637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9641, %r9633, %r9638;
	// end inline asm
	// begin inline asm
	mov.b32 %r9649, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9660, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9646, %r853, %r992, %r9649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9650, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9651, %r9649, %r9650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9654, %r9646, %r9651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9657, %r864, %r992, %r9660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9661, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9662, %r9660, %r9661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9665, %r9657, %r9662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9668, %r853, %r1014, %r9649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9672, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9673, %r9649, %r9672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9676, %r9668, %r9673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9679, %r864, %r1014, %r9660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9683, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9684, %r9660, %r9683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9687, %r9679, %r9684;
	// end inline asm
	// begin inline asm
	mov.b32 %r9695, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9706, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9692, %r853, %r1038, %r9695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9696, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9697, %r9695, %r9696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9700, %r9692, %r9697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9703, %r864, %r1038, %r9706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9707, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9708, %r9706, %r9707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9711, %r9703, %r9708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9714, %r853, %r1060, %r9695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9718, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9719, %r9695, %r9718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9722, %r9714, %r9719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9725, %r864, %r1060, %r9706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9729, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9730, %r9706, %r9729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9733, %r9725, %r9730;
	// end inline asm
	// begin inline asm
	mov.b32 %r9741, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9752, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9738, %r853, %r1084, %r9741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9742, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9743, %r9741, %r9742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9746, %r9738, %r9743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9749, %r864, %r1084, %r9752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9753, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9754, %r9752, %r9753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9757, %r9749, %r9754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9760, %r853, %r1106, %r9741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9764, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9765, %r9741, %r9764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9768, %r9760, %r9765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9771, %r864, %r1106, %r9752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9775, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9776, %r9752, %r9775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9779, %r9771, %r9776;
	// end inline asm
	// begin inline asm
	mov.b32 %r9787, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9798, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9784, %r853, %r1130, %r9787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9788, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9789, %r9787, %r9788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9792, %r9784, %r9789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9795, %r864, %r1130, %r9798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9799, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9800, %r9798, %r9799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9803, %r9795, %r9800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9806, %r853, %r1152, %r9787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9810, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9811, %r9787, %r9810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9814, %r9806, %r9811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9817, %r864, %r1152, %r9798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9821, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9822, %r9798, %r9821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9825, %r9817, %r9822;
	// end inline asm
	// begin inline asm
	mov.b32 %r9833, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9844, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9830, %r853, %r1176, %r9833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9834, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9835, %r9833, %r9834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9838, %r9830, %r9835;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9841, %r864, %r1176, %r9844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9845, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9846, %r9844, %r9845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9849, %r9841, %r9846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9852, %r853, %r1198, %r9833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9856, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9857, %r9833, %r9856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9860, %r9852, %r9857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9863, %r864, %r1198, %r9844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9867, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9868, %r9844, %r9867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9871, %r9863, %r9868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9874, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9876, %r9874, %r9516, %r9378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9880, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9882, %r9880, %r9527, %r9382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9886, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9888, %r9886, %r9538, %r9386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9892, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9894, %r9892, %r9549, %r9390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9898, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9900, %r9898, %r9562, %r9394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9904, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9906, %r9904, %r9573, %r9398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9910, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9912, %r9910, %r9584, %r9402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9916, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9918, %r9916, %r9595, %r9406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9922, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9924, %r9922, %r9608, %r9410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9928, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9930, %r9928, %r9619, %r9414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9934, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9936, %r9934, %r9630, %r9418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9940, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9942, %r9940, %r9641, %r9422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9946, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9948, %r9946, %r9654, %r9426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9952, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9954, %r9952, %r9665, %r9430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9958, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9960, %r9958, %r9676, %r9434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9964, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9966, %r9964, %r9687, %r9438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9970, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9972, %r9970, %r9700, %r9442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9976, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9978, %r9976, %r9711, %r9446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9982, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9984, %r9982, %r9722, %r9450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9988, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9990, %r9988, %r9733, %r9454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9994, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9996, %r9994, %r9746, %r9458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10000, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10002, %r10000, %r9757, %r9462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10006, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10008, %r10006, %r9768, %r9466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10012, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10014, %r10012, %r9779, %r9470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10018, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10020, %r10018, %r9792, %r9474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10024, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10026, %r10024, %r9803, %r9478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10030, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10032, %r10030, %r9814, %r9482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10036, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10038, %r10036, %r9825, %r9486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10042, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10044, %r10042, %r9838, %r9490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10048, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10050, %r10048, %r9849, %r9494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10054, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10056, %r10054, %r9860, %r9498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10060, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10062, %r10060, %r9871, %r9502;
	// end inline asm
	// begin inline asm
	mov.b32 %r10071, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r10082, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10068, %r853, %r4670, %r10071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10072, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10073, %r10071, %r10072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10076, %r10068, %r10073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10079, %r864, %r4670, %r10082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10083, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10084, %r10082, %r10083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10087, %r10079, %r10084;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10090, %r853, %r4692, %r10071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10094, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10095, %r10071, %r10094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10098, %r10090, %r10095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10101, %r864, %r4692, %r10082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10105, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10106, %r10082, %r10105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10109, %r10101, %r10106;
	// end inline asm
	// begin inline asm
	mov.b32 %r10117, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r10128, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10114, %r853, %r4716, %r10117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10118, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10119, %r10117, %r10118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10122, %r10114, %r10119;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10125, %r864, %r4716, %r10128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10129, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10130, %r10128, %r10129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10133, %r10125, %r10130;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10136, %r853, %r4738, %r10117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10140, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10141, %r10117, %r10140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10144, %r10136, %r10141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10147, %r864, %r4738, %r10128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10151, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10152, %r10128, %r10151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10155, %r10147, %r10152;
	// end inline asm
	// begin inline asm
	mov.b32 %r10163, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r10174, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10160, %r853, %r4762, %r10163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10164, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10165, %r10163, %r10164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10168, %r10160, %r10165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10171, %r864, %r4762, %r10174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10175, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10176, %r10174, %r10175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10179, %r10171, %r10176;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10182, %r853, %r4784, %r10163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10186, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10187, %r10163, %r10186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10190, %r10182, %r10187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10193, %r864, %r4784, %r10174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10197, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10198, %r10174, %r10197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10201, %r10193, %r10198;
	// end inline asm
	// begin inline asm
	mov.b32 %r10209, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r10220, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10206, %r853, %r4808, %r10209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10210, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10211, %r10209, %r10210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10214, %r10206, %r10211;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10217, %r864, %r4808, %r10220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10221, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10222, %r10220, %r10221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10225, %r10217, %r10222;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10228, %r853, %r4830, %r10209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10232, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10233, %r10209, %r10232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10236, %r10228, %r10233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10239, %r864, %r4830, %r10220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10243, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10244, %r10220, %r10243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10247, %r10239, %r10244;
	// end inline asm
	// begin inline asm
	mov.b32 %r10255, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r10266, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10252, %r853, %r4854, %r10255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10256, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10257, %r10255, %r10256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10260, %r10252, %r10257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10263, %r864, %r4854, %r10266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10267, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10268, %r10266, %r10267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10271, %r10263, %r10268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10274, %r853, %r4876, %r10255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10278, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10279, %r10255, %r10278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10282, %r10274, %r10279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10285, %r864, %r4876, %r10266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10289, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10290, %r10266, %r10289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10293, %r10285, %r10290;
	// end inline asm
	// begin inline asm
	mov.b32 %r10301, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r10312, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10298, %r853, %r4900, %r10301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10302, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10303, %r10301, %r10302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10306, %r10298, %r10303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10309, %r864, %r4900, %r10312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10313, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10314, %r10312, %r10313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10317, %r10309, %r10314;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10320, %r853, %r4922, %r10301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10324, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10325, %r10301, %r10324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10328, %r10320, %r10325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10331, %r864, %r4922, %r10312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10335, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10336, %r10312, %r10335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10339, %r10331, %r10336;
	// end inline asm
	// begin inline asm
	mov.b32 %r10347, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r10358, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10344, %r853, %r4946, %r10347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10348, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10349, %r10347, %r10348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10352, %r10344, %r10349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10355, %r864, %r4946, %r10358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10359, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10360, %r10358, %r10359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10363, %r10355, %r10360;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10366, %r853, %r4968, %r10347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10370, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10371, %r10347, %r10370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10374, %r10366, %r10371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10377, %r864, %r4968, %r10358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10381, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10382, %r10358, %r10381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10385, %r10377, %r10382;
	// end inline asm
	// begin inline asm
	mov.b32 %r10393, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r10404, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10390, %r853, %r4992, %r10393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10394, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10395, %r10393, %r10394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10398, %r10390, %r10395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10401, %r864, %r4992, %r10404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10405, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10406, %r10404, %r10405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10409, %r10401, %r10406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10412, %r853, %r5014, %r10393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10416, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10417, %r10393, %r10416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10420, %r10412, %r10417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10423, %r864, %r5014, %r10404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10427, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10428, %r10404, %r10427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10431, %r10423, %r10428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10569, %r337, %r10076, %r9876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10566, %r337, %r10087, %r9882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10578, %r337, %r10098, %r9888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10575, %r337, %r10109, %r9894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10587, %r337, %r10122, %r9900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10584, %r337, %r10133, %r9906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10596, %r337, %r10144, %r9912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10593, %r337, %r10155, %r9918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10605, %r337, %r10168, %r9924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10602, %r337, %r10179, %r9930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10614, %r337, %r10190, %r9936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10611, %r337, %r10201, %r9942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10623, %r337, %r10214, %r9948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10620, %r337, %r10225, %r9954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10632, %r337, %r10236, %r9960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10629, %r337, %r10247, %r9966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10641, %r355, %r10260, %r9972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10638, %r355, %r10271, %r9978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10650, %r355, %r10282, %r9984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10647, %r355, %r10293, %r9990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10659, %r355, %r10306, %r9996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10656, %r355, %r10317, %r10002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10668, %r355, %r10328, %r10008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10665, %r355, %r10339, %r10014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10677, %r355, %r10352, %r10020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10674, %r355, %r10363, %r10026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10686, %r355, %r10374, %r10032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10683, %r355, %r10385, %r10038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10695, %r355, %r10398, %r10044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10692, %r355, %r10409, %r10050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10704, %r355, %r10420, %r10056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10701, %r355, %r10431, %r10062;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10562, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10564, %r10562, %r10566;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10567, %r394, %r10569, %r10564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10571, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10573, %r10571, %r10575;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10576, %r394, %r10578, %r10573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10580, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10582, %r10580, %r10584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10585, %r394, %r10587, %r10582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10589, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10591, %r10589, %r10593;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10594, %r394, %r10596, %r10591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10598, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10600, %r10598, %r10602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10603, %r394, %r10605, %r10600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10607, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10609, %r10607, %r10611;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10612, %r394, %r10614, %r10609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10616, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10618, %r10616, %r10620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10621, %r394, %r10623, %r10618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10625, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10627, %r10625, %r10629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10630, %r394, %r10632, %r10627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10634, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10636, %r10634, %r10638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10639, %r397, %r10641, %r10636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10643, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10645, %r10643, %r10647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10648, %r397, %r10650, %r10645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10652, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10654, %r10652, %r10656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10657, %r397, %r10659, %r10654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10661, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10663, %r10661, %r10665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10666, %r397, %r10668, %r10663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10670, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10672, %r10670, %r10674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10675, %r397, %r10677, %r10672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10679, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10681, %r10679, %r10683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10684, %r397, %r10686, %r10681;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10688, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10690, %r10688, %r10692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10693, %r397, %r10695, %r10690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10697, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10699, %r10697, %r10701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10702, %r397, %r10704, %r10699;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10706, %r400, %r10569;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10709, %r394, %r10566, %r10706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10713, %r400, %r10578;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10716, %r394, %r10575, %r10713;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10720, %r400, %r10587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10723, %r394, %r10584, %r10720;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10727, %r400, %r10596;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10730, %r394, %r10593, %r10727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10734, %r400, %r10605;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10737, %r394, %r10602, %r10734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10741, %r400, %r10614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10744, %r394, %r10611, %r10741;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10748, %r400, %r10623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10751, %r394, %r10620, %r10748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10755, %r400, %r10632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10758, %r394, %r10629, %r10755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10762, %r403, %r10641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10765, %r397, %r10638, %r10762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10769, %r403, %r10650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10772, %r397, %r10647, %r10769;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10776, %r403, %r10659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10779, %r397, %r10656, %r10776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10783, %r403, %r10668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10786, %r397, %r10665, %r10783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10790, %r403, %r10677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10793, %r397, %r10674, %r10790;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10797, %r403, %r10686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10800, %r397, %r10683, %r10797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10804, %r403, %r10695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10807, %r397, %r10692, %r10804;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10811, %r403, %r10704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10814, %r397, %r10701, %r10811;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10985, %r10982}, {%r461, %r467, %r464, %r470}, {%r10567, %r10709}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10994, %r10991}, {%r461, %r467, %r464, %r470}, {%r10576, %r10716}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11003, %r11000}, {%r461, %r467, %r464, %r470}, {%r10585, %r10723}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11012, %r11009}, {%r461, %r467, %r464, %r470}, {%r10594, %r10730}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11021, %r11018}, {%r461, %r467, %r464, %r470}, {%r10603, %r10737}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11030, %r11027}, {%r461, %r467, %r464, %r470}, {%r10612, %r10744}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11039, %r11036}, {%r461, %r467, %r464, %r470}, {%r10621, %r10751}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11048, %r11045}, {%r461, %r467, %r464, %r470}, {%r10630, %r10758}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11057, %r11054}, {%r461, %r467, %r464, %r470}, {%r10639, %r10765}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11066, %r11063}, {%r461, %r467, %r464, %r470}, {%r10648, %r10772}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11075, %r11072}, {%r461, %r467, %r464, %r470}, {%r10657, %r10779}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11084, %r11081}, {%r461, %r467, %r464, %r470}, {%r10666, %r10786}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11093, %r11090}, {%r461, %r467, %r464, %r470}, {%r10675, %r10793}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11102, %r11099}, {%r461, %r467, %r464, %r470}, {%r10684, %r10800}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11111, %r11108}, {%r461, %r467, %r464, %r470}, {%r10693, %r10807}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11120, %r11117}, {%r461, %r467, %r464, %r470}, {%r10702, %r10814}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10978, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10980, %r10978, %r10982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10983, %r511, %r10985, %r10980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10987, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10989, %r10987, %r10991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10992, %r511, %r10994, %r10989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10996, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10998, %r10996, %r11000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11001, %r511, %r11003, %r10998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11005, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11007, %r11005, %r11009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11010, %r511, %r11012, %r11007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11014, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11016, %r11014, %r11018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11019, %r511, %r11021, %r11016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11023, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11025, %r11023, %r11027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11028, %r511, %r11030, %r11025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11032, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11034, %r11032, %r11036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11037, %r511, %r11039, %r11034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11041, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11043, %r11041, %r11045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11046, %r511, %r11048, %r11043;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11050, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11052, %r11050, %r11054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11055, %r511, %r11057, %r11052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11059, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11061, %r11059, %r11063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11064, %r511, %r11066, %r11061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11068, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11070, %r11068, %r11072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11073, %r511, %r11075, %r11070;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11077, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11079, %r11077, %r11081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11082, %r511, %r11084, %r11079;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11086, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11088, %r11086, %r11090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11091, %r511, %r11093, %r11088;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11095, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11097, %r11095, %r11099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11100, %r511, %r11102, %r11097;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11104, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11106, %r11104, %r11108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11109, %r511, %r11111, %r11106;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11113, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11115, %r11113, %r11117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11118, %r511, %r11120, %r11115;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11122, %r514, %r10985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11125, %r511, %r10982, %r11122;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11129, %r514, %r10994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11132, %r511, %r10991, %r11129;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11136, %r514, %r11003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11139, %r511, %r11000, %r11136;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11143, %r514, %r11012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11146, %r511, %r11009, %r11143;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11150, %r514, %r11021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11153, %r511, %r11018, %r11150;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11157, %r514, %r11030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11160, %r511, %r11027, %r11157;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11164, %r514, %r11039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11167, %r511, %r11036, %r11164;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11171, %r514, %r11048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11174, %r511, %r11045, %r11171;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11178, %r514, %r11057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11181, %r511, %r11054, %r11178;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11185, %r514, %r11066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11188, %r511, %r11063, %r11185;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11192, %r514, %r11075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11195, %r511, %r11072, %r11192;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11199, %r514, %r11084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11202, %r511, %r11081, %r11199;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11206, %r514, %r11093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11209, %r511, %r11090, %r11206;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11213, %r514, %r11102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11216, %r511, %r11099, %r11213;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11220, %r514, %r11111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11223, %r511, %r11108, %r11220;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11227, %r514, %r11120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11230, %r511, %r11117, %r11227;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11523, %r11526}, {%r549, %r555, %r552, %r558}, {%r10983, %r11125}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11529, %r11532}, {%r549, %r555, %r552, %r558}, {%r10992, %r11132}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11535, %r11538}, {%r549, %r555, %r552, %r558}, {%r11001, %r11139}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11541, %r11544}, {%r549, %r555, %r552, %r558}, {%r11010, %r11146}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11547, %r11550}, {%r549, %r555, %r552, %r558}, {%r11019, %r11153}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11553, %r11556}, {%r549, %r555, %r552, %r558}, {%r11028, %r11160}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11559, %r11562}, {%r549, %r555, %r552, %r558}, {%r11037, %r11167}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11565, %r11568}, {%r549, %r555, %r552, %r558}, {%r11046, %r11174}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11524, %r11527}, {%r549, %r555, %r552, %r558}, {%r11055, %r11181}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11530, %r11533}, {%r549, %r555, %r552, %r558}, {%r11064, %r11188}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11536, %r11539}, {%r549, %r555, %r552, %r558}, {%r11073, %r11195}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11542, %r11545}, {%r549, %r555, %r552, %r558}, {%r11082, %r11202}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11548, %r11551}, {%r549, %r555, %r552, %r558}, {%r11091, %r11209}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11554, %r11557}, {%r549, %r555, %r552, %r558}, {%r11100, %r11216}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11560, %r11563}, {%r549, %r555, %r552, %r558}, {%r11109, %r11223}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11566, %r11569}, {%r549, %r555, %r552, %r558}, {%r11118, %r11230}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11522, %r11523, %r11524;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11525, %r11526, %r11527;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11528, %r11529, %r11530;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11531, %r11532, %r11533;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11534, %r11535, %r11536;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11537, %r11538, %r11539;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11540, %r11541, %r11542;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11543, %r11544, %r11545;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11546, %r11547, %r11548;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11549, %r11550, %r11551;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11552, %r11553, %r11554;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11555, %r11556, %r11557;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11558, %r11559, %r11560;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11561, %r11562, %r11563;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11564, %r11565, %r11566;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11567, %r11568, %r11569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11570, %r11523, %r11524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11573, %r11526, %r11527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11576, %r11529, %r11530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11579, %r11532, %r11533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11582, %r11535, %r11536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11585, %r11538, %r11539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11588, %r11541, %r11542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11591, %r11544, %r11545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11594, %r11547, %r11548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11597, %r11550, %r11551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11600, %r11553, %r11554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11603, %r11556, %r11557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11606, %r11559, %r11560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11609, %r11562, %r11563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11612, %r11565, %r11566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11615, %r11568, %r11569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11618, %r133, %r11522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11621, %r133, %r11525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11624, %r133, %r11528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11627, %r133, %r11531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11630, %r133, %r11534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11633, %r133, %r11537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11636, %r133, %r11540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11639, %r133, %r11543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11642, %r133, %r11546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11645, %r133, %r11549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11648, %r133, %r11552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11651, %r133, %r11555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11654, %r133, %r11558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11657, %r133, %r11561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11660, %r133, %r11564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11663, %r133, %r11567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11666, %r134, %r11570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11669, %r134, %r11573;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11672, %r134, %r11576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11675, %r134, %r11579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11678, %r134, %r11582;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11681, %r134, %r11585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11684, %r134, %r11588;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11687, %r134, %r11591;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11690, %r134, %r11594;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11693, %r134, %r11597;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11696, %r134, %r11600;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11699, %r134, %r11603;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11702, %r134, %r11606;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11705, %r134, %r11609;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11708, %r134, %r11612;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11711, %r134, %r11615;
	// end inline asm
	// begin inline asm
	mov.b32 %r11714, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11715, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11716, %r11618, %r11714;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11719, %r11716, %r11715;
	// end inline asm
	// begin inline asm
	mov.b32 %r11722, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11723, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11724, %r11621, %r11722;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11727, %r11724, %r11723;
	// end inline asm
	// begin inline asm
	mov.b32 %r11730, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11731, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11732, %r11624, %r11730;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11735, %r11732, %r11731;
	// end inline asm
	// begin inline asm
	mov.b32 %r11738, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11739, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11740, %r11627, %r11738;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11743, %r11740, %r11739;
	// end inline asm
	// begin inline asm
	mov.b32 %r11746, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11747, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11748, %r11630, %r11746;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11751, %r11748, %r11747;
	// end inline asm
	// begin inline asm
	mov.b32 %r11754, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11755, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11756, %r11633, %r11754;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11759, %r11756, %r11755;
	// end inline asm
	// begin inline asm
	mov.b32 %r11762, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11763, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11764, %r11636, %r11762;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11767, %r11764, %r11763;
	// end inline asm
	// begin inline asm
	mov.b32 %r11770, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11771, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11772, %r11639, %r11770;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11775, %r11772, %r11771;
	// end inline asm
	// begin inline asm
	mov.b32 %r11778, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11779, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11780, %r11642, %r11778;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11783, %r11780, %r11779;
	// end inline asm
	// begin inline asm
	mov.b32 %r11786, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11787, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11788, %r11645, %r11786;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11791, %r11788, %r11787;
	// end inline asm
	// begin inline asm
	mov.b32 %r11794, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11795, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11796, %r11648, %r11794;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11799, %r11796, %r11795;
	// end inline asm
	// begin inline asm
	mov.b32 %r11802, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11803, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11804, %r11651, %r11802;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11807, %r11804, %r11803;
	// end inline asm
	// begin inline asm
	mov.b32 %r11810, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11811, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11812, %r11654, %r11810;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11815, %r11812, %r11811;
	// end inline asm
	// begin inline asm
	mov.b32 %r11818, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11819, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11820, %r11657, %r11818;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11823, %r11820, %r11819;
	// end inline asm
	// begin inline asm
	mov.b32 %r11826, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11827, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11828, %r11660, %r11826;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11831, %r11828, %r11827;
	// end inline asm
	// begin inline asm
	mov.b32 %r11834, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11835, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11836, %r11663, %r11834;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11839, %r11836, %r11835;
	// end inline asm
	// begin inline asm
	mov.b32 %r11842, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11843, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11844, %r11666, %r11842;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11847, %r11844, %r11843;
	// end inline asm
	// begin inline asm
	mov.b32 %r11850, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11851, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11852, %r11669, %r11850;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11855, %r11852, %r11851;
	// end inline asm
	// begin inline asm
	mov.b32 %r11858, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11859, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11860, %r11672, %r11858;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11863, %r11860, %r11859;
	// end inline asm
	// begin inline asm
	mov.b32 %r11866, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11867, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11868, %r11675, %r11866;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11871, %r11868, %r11867;
	// end inline asm
	// begin inline asm
	mov.b32 %r11874, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11875, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11876, %r11678, %r11874;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11879, %r11876, %r11875;
	// end inline asm
	// begin inline asm
	mov.b32 %r11882, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11883, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11884, %r11681, %r11882;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11887, %r11884, %r11883;
	// end inline asm
	// begin inline asm
	mov.b32 %r11890, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11891, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11892, %r11684, %r11890;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11895, %r11892, %r11891;
	// end inline asm
	// begin inline asm
	mov.b32 %r11898, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11899, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11900, %r11687, %r11898;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11903, %r11900, %r11899;
	// end inline asm
	// begin inline asm
	mov.b32 %r11906, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11907, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11908, %r11690, %r11906;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11911, %r11908, %r11907;
	// end inline asm
	// begin inline asm
	mov.b32 %r11914, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11915, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11916, %r11693, %r11914;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11919, %r11916, %r11915;
	// end inline asm
	// begin inline asm
	mov.b32 %r11922, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11923, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11924, %r11696, %r11922;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11927, %r11924, %r11923;
	// end inline asm
	// begin inline asm
	mov.b32 %r11930, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11931, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11932, %r11699, %r11930;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11935, %r11932, %r11931;
	// end inline asm
	// begin inline asm
	mov.b32 %r11938, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11939, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11940, %r11702, %r11938;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11943, %r11940, %r11939;
	// end inline asm
	// begin inline asm
	mov.b32 %r11946, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11947, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11948, %r11705, %r11946;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11951, %r11948, %r11947;
	// end inline asm
	// begin inline asm
	mov.b32 %r11954, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11955, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11956, %r11708, %r11954;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11959, %r11956, %r11955;
	// end inline asm
	// begin inline asm
	mov.b32 %r11962, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11963, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11964, %r11711, %r11962;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11967, %r11964, %r11963;
	// end inline asm
	// begin inline asm
	mov.b32 %r11973, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r11971, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11972, %r11973, %r11971;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11975, %r11719, %r11972;
	// end inline asm
	// begin inline asm
	mov.b32 %r11978, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11979, %r11973, %r11978;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11982, %r11727, %r11979;
	// end inline asm
	// begin inline asm
	mov.b32 %r11985, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11986, %r11973, %r11985;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11989, %r11735, %r11986;
	// end inline asm
	// begin inline asm
	mov.b32 %r11992, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11993, %r11973, %r11992;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11996, %r11743, %r11993;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11999, %r11975, %r11989, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12003, %r11982, %r11996, %r4370;
	// end inline asm
	shl.b32 	%r12010, %r12003, 4;
	// begin inline asm
	lop3.b32 %r12007, %r4376, %r11999, %r12010, 202;
	// end inline asm
	xor.b32  	%r16186, %r12007, -2004318072;
	// begin inline asm
	mov.b32 %r12014, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12012, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12013, %r12014, %r12012;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12016, %r11751, %r12013;
	// end inline asm
	// begin inline asm
	mov.b32 %r12019, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12020, %r12014, %r12019;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12023, %r11759, %r12020;
	// end inline asm
	// begin inline asm
	mov.b32 %r12026, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12027, %r12014, %r12026;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12030, %r11767, %r12027;
	// end inline asm
	// begin inline asm
	mov.b32 %r12033, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12034, %r12014, %r12033;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12037, %r11775, %r12034;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12040, %r12016, %r12030, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12044, %r12023, %r12037, %r4370;
	// end inline asm
	shl.b32 	%r12051, %r12044, 4;
	// begin inline asm
	lop3.b32 %r12048, %r4376, %r12040, %r12051, 202;
	// end inline asm
	xor.b32  	%r16187, %r12048, -2004318072;
	// begin inline asm
	mov.b32 %r12055, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12053, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12054, %r12055, %r12053;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12057, %r11783, %r12054;
	// end inline asm
	// begin inline asm
	mov.b32 %r12060, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12061, %r12055, %r12060;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12064, %r11791, %r12061;
	// end inline asm
	// begin inline asm
	mov.b32 %r12067, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12068, %r12055, %r12067;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12071, %r11799, %r12068;
	// end inline asm
	// begin inline asm
	mov.b32 %r12074, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12075, %r12055, %r12074;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12078, %r11807, %r12075;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12081, %r12057, %r12071, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12085, %r12064, %r12078, %r4370;
	// end inline asm
	shl.b32 	%r12092, %r12085, 4;
	// begin inline asm
	lop3.b32 %r12089, %r4376, %r12081, %r12092, 202;
	// end inline asm
	xor.b32  	%r16188, %r12089, -2004318072;
	// begin inline asm
	mov.b32 %r12096, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12094, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12095, %r12096, %r12094;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12098, %r11815, %r12095;
	// end inline asm
	// begin inline asm
	mov.b32 %r12101, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12102, %r12096, %r12101;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12105, %r11823, %r12102;
	// end inline asm
	// begin inline asm
	mov.b32 %r12108, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12109, %r12096, %r12108;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12112, %r11831, %r12109;
	// end inline asm
	// begin inline asm
	mov.b32 %r12115, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12116, %r12096, %r12115;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12119, %r11839, %r12116;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12122, %r12098, %r12112, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12126, %r12105, %r12119, %r4370;
	// end inline asm
	shl.b32 	%r12133, %r12126, 4;
	// begin inline asm
	lop3.b32 %r12130, %r4376, %r12122, %r12133, 202;
	// end inline asm
	xor.b32  	%r16189, %r12130, -2004318072;
	// begin inline asm
	mov.b32 %r12137, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12135, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12136, %r12137, %r12135;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12139, %r11847, %r12136;
	// end inline asm
	// begin inline asm
	mov.b32 %r12142, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12143, %r12137, %r12142;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12146, %r11855, %r12143;
	// end inline asm
	// begin inline asm
	mov.b32 %r12149, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12150, %r12137, %r12149;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12153, %r11863, %r12150;
	// end inline asm
	// begin inline asm
	mov.b32 %r12156, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12157, %r12137, %r12156;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12160, %r11871, %r12157;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12163, %r12139, %r12153, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12167, %r12146, %r12160, %r4370;
	// end inline asm
	shl.b32 	%r12174, %r12167, 4;
	// begin inline asm
	lop3.b32 %r12171, %r4376, %r12163, %r12174, 202;
	// end inline asm
	xor.b32  	%r16190, %r12171, -2004318072;
	// begin inline asm
	mov.b32 %r12178, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12176, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12177, %r12178, %r12176;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12180, %r11879, %r12177;
	// end inline asm
	// begin inline asm
	mov.b32 %r12183, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12184, %r12178, %r12183;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12187, %r11887, %r12184;
	// end inline asm
	// begin inline asm
	mov.b32 %r12190, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12191, %r12178, %r12190;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12194, %r11895, %r12191;
	// end inline asm
	// begin inline asm
	mov.b32 %r12197, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12198, %r12178, %r12197;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12201, %r11903, %r12198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12204, %r12180, %r12194, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12208, %r12187, %r12201, %r4370;
	// end inline asm
	shl.b32 	%r12215, %r12208, 4;
	// begin inline asm
	lop3.b32 %r12212, %r4376, %r12204, %r12215, 202;
	// end inline asm
	xor.b32  	%r16191, %r12212, -2004318072;
	// begin inline asm
	mov.b32 %r12219, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12217, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12218, %r12219, %r12217;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12221, %r11911, %r12218;
	// end inline asm
	// begin inline asm
	mov.b32 %r12224, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12225, %r12219, %r12224;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12228, %r11919, %r12225;
	// end inline asm
	// begin inline asm
	mov.b32 %r12231, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12232, %r12219, %r12231;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12235, %r11927, %r12232;
	// end inline asm
	// begin inline asm
	mov.b32 %r12238, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12239, %r12219, %r12238;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12242, %r11935, %r12239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12245, %r12221, %r12235, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12249, %r12228, %r12242, %r4370;
	// end inline asm
	shl.b32 	%r12256, %r12249, 4;
	// begin inline asm
	lop3.b32 %r12253, %r4376, %r12245, %r12256, 202;
	// end inline asm
	xor.b32  	%r16192, %r12253, -2004318072;
	// begin inline asm
	mov.b32 %r12260, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12258, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12259, %r12260, %r12258;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12262, %r11943, %r12259;
	// end inline asm
	// begin inline asm
	mov.b32 %r12265, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12266, %r12260, %r12265;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12269, %r11951, %r12266;
	// end inline asm
	// begin inline asm
	mov.b32 %r12272, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12273, %r12260, %r12272;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12276, %r11959, %r12273;
	// end inline asm
	// begin inline asm
	mov.b32 %r12279, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12280, %r12260, %r12279;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12283, %r11967, %r12280;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12286, %r12262, %r12276, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12290, %r12269, %r12283, %r4370;
	// end inline asm
	shl.b32 	%r12297, %r12290, 4;
	// begin inline asm
	lop3.b32 %r12294, %r4376, %r12286, %r12297, 202;
	// end inline asm
	xor.b32  	%r16193, %r12294, -2004318072;
	st.shared.u32 	[%rd104], %r16186;
	st.shared.u32 	[%rd106], %r16187;
	st.shared.u32 	[%rd108], %r16188;
	st.shared.u32 	[%rd110], %r16189;
	st.shared.u32 	[%rd112], %r16190;
	st.shared.u32 	[%rd114], %r16191;
	st.shared.u32 	[%rd116], %r16192;
	st.shared.u32 	[%rd118], %r16193;
	ld.shared.u32 	%r16302, [%rd88];
	ld.shared.u32 	%r16303, [%rd90];
	ld.shared.u32 	%r16304, [%rd92];
	ld.shared.u32 	%r16305, [%rd94];
	ld.shared.u32 	%r16314, [%rd96];
	ld.shared.u32 	%r16315, [%rd98];
	ld.shared.u32 	%r16316, [%rd100];
	ld.shared.u32 	%r16317, [%rd102];
	// begin inline asm
	mov.b32 %r12303, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12314, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r12302, %r16302, -2004318072;
	// begin inline asm
	lop3.b32 %r12300, %r853, %r12302, %r12303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12304, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12305, %r12303, %r12304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12308, %r12300, %r12305;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12311, %r864, %r12302, %r12314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12315, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12316, %r12314, %r12315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12319, %r12311, %r12316;
	// end inline asm
	shr.u32 	%r12324, %r12302, 8;
	// begin inline asm
	lop3.b32 %r12322, %r853, %r12324, %r12303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12326, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12327, %r12303, %r12326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12330, %r12322, %r12327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12333, %r864, %r12324, %r12314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12337, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12338, %r12314, %r12337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12341, %r12333, %r12338;
	// end inline asm
	// begin inline asm
	mov.b32 %r12349, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12360, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r12348, %r16303, -2004318072;
	// begin inline asm
	lop3.b32 %r12346, %r853, %r12348, %r12349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12350, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12351, %r12349, %r12350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12354, %r12346, %r12351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12357, %r864, %r12348, %r12360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12361, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12362, %r12360, %r12361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12365, %r12357, %r12362;
	// end inline asm
	shr.u32 	%r12370, %r12348, 8;
	// begin inline asm
	lop3.b32 %r12368, %r853, %r12370, %r12349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12372, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12373, %r12349, %r12372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12376, %r12368, %r12373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12379, %r864, %r12370, %r12360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12383, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12384, %r12360, %r12383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12387, %r12379, %r12384;
	// end inline asm
	// begin inline asm
	mov.b32 %r12395, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12406, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r12394, %r16304, -2004318072;
	// begin inline asm
	lop3.b32 %r12392, %r853, %r12394, %r12395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12396, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12397, %r12395, %r12396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12400, %r12392, %r12397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12403, %r864, %r12394, %r12406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12407, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12408, %r12406, %r12407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12411, %r12403, %r12408;
	// end inline asm
	shr.u32 	%r12416, %r12394, 8;
	// begin inline asm
	lop3.b32 %r12414, %r853, %r12416, %r12395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12418, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12419, %r12395, %r12418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12422, %r12414, %r12419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12425, %r864, %r12416, %r12406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12429, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12430, %r12406, %r12429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12433, %r12425, %r12430;
	// end inline asm
	// begin inline asm
	mov.b32 %r12441, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12452, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r12440, %r16305, -2004318072;
	// begin inline asm
	lop3.b32 %r12438, %r853, %r12440, %r12441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12442, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12443, %r12441, %r12442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12446, %r12438, %r12443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12449, %r864, %r12440, %r12452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12453, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12454, %r12452, %r12453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12457, %r12449, %r12454;
	// end inline asm
	shr.u32 	%r12462, %r12440, 8;
	// begin inline asm
	lop3.b32 %r12460, %r853, %r12462, %r12441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12464, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12465, %r12441, %r12464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12468, %r12460, %r12465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12471, %r864, %r12462, %r12452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12475, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12476, %r12452, %r12475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12479, %r12471, %r12476;
	// end inline asm
	// begin inline asm
	mov.b32 %r12487, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12498, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r12486, %r16314, -2004318072;
	// begin inline asm
	lop3.b32 %r12484, %r853, %r12486, %r12487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12488, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12489, %r12487, %r12488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12492, %r12484, %r12489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12495, %r864, %r12486, %r12498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12499, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12500, %r12498, %r12499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12503, %r12495, %r12500;
	// end inline asm
	shr.u32 	%r12508, %r12486, 8;
	// begin inline asm
	lop3.b32 %r12506, %r853, %r12508, %r12487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12510, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12511, %r12487, %r12510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12514, %r12506, %r12511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12517, %r864, %r12508, %r12498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12521, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12522, %r12498, %r12521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12525, %r12517, %r12522;
	// end inline asm
	// begin inline asm
	mov.b32 %r12533, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12544, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r12532, %r16315, -2004318072;
	// begin inline asm
	lop3.b32 %r12530, %r853, %r12532, %r12533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12534, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12535, %r12533, %r12534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12538, %r12530, %r12535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12541, %r864, %r12532, %r12544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12545, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12546, %r12544, %r12545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12549, %r12541, %r12546;
	// end inline asm
	shr.u32 	%r12554, %r12532, 8;
	// begin inline asm
	lop3.b32 %r12552, %r853, %r12554, %r12533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12556, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12557, %r12533, %r12556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12560, %r12552, %r12557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12563, %r864, %r12554, %r12544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12567, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12568, %r12544, %r12567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12571, %r12563, %r12568;
	// end inline asm
	// begin inline asm
	mov.b32 %r12579, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12590, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r12578, %r16316, -2004318072;
	// begin inline asm
	lop3.b32 %r12576, %r853, %r12578, %r12579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12580, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12581, %r12579, %r12580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12584, %r12576, %r12581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12587, %r864, %r12578, %r12590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12591, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12592, %r12590, %r12591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12595, %r12587, %r12592;
	// end inline asm
	shr.u32 	%r12600, %r12578, 8;
	// begin inline asm
	lop3.b32 %r12598, %r853, %r12600, %r12579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12602, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12603, %r12579, %r12602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12606, %r12598, %r12603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12609, %r864, %r12600, %r12590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12613, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12614, %r12590, %r12613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12617, %r12609, %r12614;
	// end inline asm
	// begin inline asm
	mov.b32 %r12625, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12636, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r12624, %r16317, -2004318072;
	// begin inline asm
	lop3.b32 %r12622, %r853, %r12624, %r12625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12626, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12627, %r12625, %r12626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12630, %r12622, %r12627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12633, %r864, %r12624, %r12636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12637, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12638, %r12636, %r12637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12641, %r12633, %r12638;
	// end inline asm
	shr.u32 	%r12646, %r12624, 8;
	// begin inline asm
	lop3.b32 %r12644, %r853, %r12646, %r12625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12648, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12649, %r12625, %r12648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12652, %r12644, %r12649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12655, %r864, %r12646, %r12636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12659, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12660, %r12636, %r12659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12663, %r12655, %r12660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12666, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12668, %r12666, %r12308;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12671, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12673, %r12671, %r12319;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12676, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12678, %r12676, %r12330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12681, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12683, %r12681, %r12341;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12686, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12688, %r12686, %r12354;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12691, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12693, %r12691, %r12365;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12696, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12698, %r12696, %r12376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12701, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12703, %r12701, %r12387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12706, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12708, %r12706, %r12400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12711, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12713, %r12711, %r12411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12716, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12718, %r12716, %r12422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12721, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12723, %r12721, %r12433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12726, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12728, %r12726, %r12446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12731, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12733, %r12731, %r12457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12736, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12738, %r12736, %r12468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12741, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12743, %r12741, %r12479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12746, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12748, %r12746, %r12492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12751, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12753, %r12751, %r12503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12756, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12758, %r12756, %r12514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12761, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12763, %r12761, %r12525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12766, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12768, %r12766, %r12538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12771, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12773, %r12771, %r12549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12776, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12778, %r12776, %r12560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12781, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12783, %r12781, %r12571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12786, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12788, %r12786, %r12584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12791, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12793, %r12791, %r12595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12796, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12798, %r12796, %r12606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12801, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12803, %r12801, %r12617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12806, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12808, %r12806, %r12630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12811, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12813, %r12811, %r12641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12816, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12818, %r12816, %r12652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12821, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12823, %r12821, %r12663;
	// end inline asm
	// begin inline asm
	mov.b32 %r12831, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12842, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12828, %r853, %r854, %r12831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12832, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12833, %r12831, %r12832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12836, %r12828, %r12833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12839, %r864, %r854, %r12842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12843, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12844, %r12842, %r12843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12847, %r12839, %r12844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12850, %r853, %r876, %r12831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12854, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12855, %r12831, %r12854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12858, %r12850, %r12855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12861, %r864, %r876, %r12842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12865, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12866, %r12842, %r12865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12869, %r12861, %r12866;
	// end inline asm
	// begin inline asm
	mov.b32 %r12877, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12888, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12874, %r853, %r900, %r12877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12878, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12879, %r12877, %r12878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12882, %r12874, %r12879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12885, %r864, %r900, %r12888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12889, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12890, %r12888, %r12889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12893, %r12885, %r12890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12896, %r853, %r922, %r12877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12900, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12901, %r12877, %r12900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12904, %r12896, %r12901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12907, %r864, %r922, %r12888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12911, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12912, %r12888, %r12911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12915, %r12907, %r12912;
	// end inline asm
	// begin inline asm
	mov.b32 %r12923, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12934, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12920, %r853, %r946, %r12923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12924, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12925, %r12923, %r12924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12928, %r12920, %r12925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12931, %r864, %r946, %r12934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12935, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12936, %r12934, %r12935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12939, %r12931, %r12936;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12942, %r853, %r968, %r12923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12946, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12947, %r12923, %r12946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12950, %r12942, %r12947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12953, %r864, %r968, %r12934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12957, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12958, %r12934, %r12957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12961, %r12953, %r12958;
	// end inline asm
	// begin inline asm
	mov.b32 %r12969, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12980, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12966, %r853, %r992, %r12969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12970, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12971, %r12969, %r12970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12974, %r12966, %r12971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12977, %r864, %r992, %r12980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12981, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12982, %r12980, %r12981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12985, %r12977, %r12982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12988, %r853, %r1014, %r12969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12992, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12993, %r12969, %r12992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12996, %r12988, %r12993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12999, %r864, %r1014, %r12980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13003, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13004, %r12980, %r13003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13007, %r12999, %r13004;
	// end inline asm
	// begin inline asm
	mov.b32 %r13015, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13026, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13012, %r853, %r1038, %r13015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13016, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13017, %r13015, %r13016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13020, %r13012, %r13017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13023, %r864, %r1038, %r13026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13027, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13028, %r13026, %r13027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13031, %r13023, %r13028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13034, %r853, %r1060, %r13015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13038, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13039, %r13015, %r13038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13042, %r13034, %r13039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13045, %r864, %r1060, %r13026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13049, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13050, %r13026, %r13049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13053, %r13045, %r13050;
	// end inline asm
	// begin inline asm
	mov.b32 %r13061, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13072, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13058, %r853, %r1084, %r13061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13062, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13063, %r13061, %r13062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13066, %r13058, %r13063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13069, %r864, %r1084, %r13072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13073, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13074, %r13072, %r13073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13077, %r13069, %r13074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13080, %r853, %r1106, %r13061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13084, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13085, %r13061, %r13084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13088, %r13080, %r13085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13091, %r864, %r1106, %r13072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13095, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13096, %r13072, %r13095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13099, %r13091, %r13096;
	// end inline asm
	// begin inline asm
	mov.b32 %r13107, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13118, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13104, %r853, %r1130, %r13107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13108, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13109, %r13107, %r13108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13112, %r13104, %r13109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13115, %r864, %r1130, %r13118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13119, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13120, %r13118, %r13119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13123, %r13115, %r13120;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13126, %r853, %r1152, %r13107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13130, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13131, %r13107, %r13130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13134, %r13126, %r13131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13137, %r864, %r1152, %r13118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13141, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13142, %r13118, %r13141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13145, %r13137, %r13142;
	// end inline asm
	// begin inline asm
	mov.b32 %r13153, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13164, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13150, %r853, %r1176, %r13153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13154, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13155, %r13153, %r13154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13158, %r13150, %r13155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13161, %r864, %r1176, %r13164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13165, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13166, %r13164, %r13165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13169, %r13161, %r13166;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13172, %r853, %r1198, %r13153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13176, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13177, %r13153, %r13176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13180, %r13172, %r13177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13183, %r864, %r1198, %r13164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13187, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13188, %r13164, %r13187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13191, %r13183, %r13188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13194, %r265, %r12836, %r12668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13198, %r265, %r12847, %r12673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13202, %r265, %r12858, %r12678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13206, %r265, %r12869, %r12683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13210, %r265, %r12882, %r12688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13214, %r265, %r12893, %r12693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13218, %r265, %r12904, %r12698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13222, %r265, %r12915, %r12703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13226, %r265, %r12928, %r12708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13230, %r265, %r12939, %r12713;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13234, %r265, %r12950, %r12718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13238, %r265, %r12961, %r12723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13242, %r265, %r12974, %r12728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13246, %r265, %r12985, %r12733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13250, %r265, %r12996, %r12738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13254, %r265, %r13007, %r12743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13258, %r283, %r13020, %r12748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13262, %r283, %r13031, %r12753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13266, %r283, %r13042, %r12758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13270, %r283, %r13053, %r12763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13274, %r283, %r13066, %r12768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13278, %r283, %r13077, %r12773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13282, %r283, %r13088, %r12778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13286, %r283, %r13099, %r12783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13290, %r283, %r13112, %r12788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13294, %r283, %r13123, %r12793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13298, %r283, %r13134, %r12798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13302, %r283, %r13145, %r12803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13306, %r283, %r13158, %r12808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13310, %r283, %r13169, %r12813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13314, %r283, %r13180, %r12818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13318, %r283, %r13191, %r12823;
	// end inline asm
	// begin inline asm
	mov.b32 %r13327, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13338, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13324, %r853, %r4670, %r13327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13328, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13329, %r13327, %r13328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13332, %r13324, %r13329;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13335, %r864, %r4670, %r13338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13339, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13340, %r13338, %r13339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13343, %r13335, %r13340;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13346, %r853, %r4692, %r13327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13350, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13351, %r13327, %r13350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13354, %r13346, %r13351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13357, %r864, %r4692, %r13338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13361, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13362, %r13338, %r13361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13365, %r13357, %r13362;
	// end inline asm
	// begin inline asm
	mov.b32 %r13373, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13384, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13370, %r853, %r4716, %r13373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13374, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13375, %r13373, %r13374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13378, %r13370, %r13375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13381, %r864, %r4716, %r13384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13385, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13386, %r13384, %r13385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13389, %r13381, %r13386;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13392, %r853, %r4738, %r13373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13396, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13397, %r13373, %r13396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13400, %r13392, %r13397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13403, %r864, %r4738, %r13384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13407, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13408, %r13384, %r13407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13411, %r13403, %r13408;
	// end inline asm
	// begin inline asm
	mov.b32 %r13419, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13430, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13416, %r853, %r4762, %r13419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13420, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13421, %r13419, %r13420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13424, %r13416, %r13421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13427, %r864, %r4762, %r13430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13431, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13432, %r13430, %r13431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13435, %r13427, %r13432;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13438, %r853, %r4784, %r13419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13442, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13443, %r13419, %r13442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13446, %r13438, %r13443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13449, %r864, %r4784, %r13430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13453, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13454, %r13430, %r13453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13457, %r13449, %r13454;
	// end inline asm
	// begin inline asm
	mov.b32 %r13465, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13476, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13462, %r853, %r4808, %r13465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13466, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13467, %r13465, %r13466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13470, %r13462, %r13467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13473, %r864, %r4808, %r13476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13477, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13478, %r13476, %r13477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13481, %r13473, %r13478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13484, %r853, %r4830, %r13465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13488, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13489, %r13465, %r13488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13492, %r13484, %r13489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13495, %r864, %r4830, %r13476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13499, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13500, %r13476, %r13499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13503, %r13495, %r13500;
	// end inline asm
	// begin inline asm
	mov.b32 %r13511, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13522, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13508, %r853, %r4854, %r13511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13512, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13513, %r13511, %r13512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13516, %r13508, %r13513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13519, %r864, %r4854, %r13522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13523, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13524, %r13522, %r13523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13527, %r13519, %r13524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13530, %r853, %r4876, %r13511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13534, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13535, %r13511, %r13534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13538, %r13530, %r13535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13541, %r864, %r4876, %r13522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13545, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13546, %r13522, %r13545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13549, %r13541, %r13546;
	// end inline asm
	// begin inline asm
	mov.b32 %r13557, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13568, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13554, %r853, %r4900, %r13557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13558, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13559, %r13557, %r13558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13562, %r13554, %r13559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13565, %r864, %r4900, %r13568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13569, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13570, %r13568, %r13569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13573, %r13565, %r13570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13576, %r853, %r4922, %r13557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13580, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13581, %r13557, %r13580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13584, %r13576, %r13581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13587, %r864, %r4922, %r13568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13591, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13592, %r13568, %r13591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13595, %r13587, %r13592;
	// end inline asm
	// begin inline asm
	mov.b32 %r13603, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13614, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13600, %r853, %r4946, %r13603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13604, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13605, %r13603, %r13604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13608, %r13600, %r13605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13611, %r864, %r4946, %r13614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13615, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13616, %r13614, %r13615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13619, %r13611, %r13616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13622, %r853, %r4968, %r13603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13626, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13627, %r13603, %r13626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13630, %r13622, %r13627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13633, %r864, %r4968, %r13614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13637, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13638, %r13614, %r13637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13641, %r13633, %r13638;
	// end inline asm
	// begin inline asm
	mov.b32 %r13649, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13660, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13646, %r853, %r4992, %r13649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13650, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13651, %r13649, %r13650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13654, %r13646, %r13651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13657, %r864, %r4992, %r13660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13661, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13662, %r13660, %r13661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13665, %r13657, %r13662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13668, %r853, %r5014, %r13649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13672, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13673, %r13649, %r13672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13676, %r13668, %r13673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13679, %r864, %r5014, %r13660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13683, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13684, %r13660, %r13683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13687, %r13679, %r13684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13690, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13692, %r13690, %r13332, %r13194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13696, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13698, %r13696, %r13343, %r13198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13702, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13704, %r13702, %r13354, %r13202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13708, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13710, %r13708, %r13365, %r13206;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13714, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13716, %r13714, %r13378, %r13210;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13720, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13722, %r13720, %r13389, %r13214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13726, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13728, %r13726, %r13400, %r13218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13732, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13734, %r13732, %r13411, %r13222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13738, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13740, %r13738, %r13424, %r13226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13744, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13746, %r13744, %r13435, %r13230;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13750, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13752, %r13750, %r13446, %r13234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13756, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13758, %r13756, %r13457, %r13238;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13762, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13764, %r13762, %r13470, %r13242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13768, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13770, %r13768, %r13481, %r13246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13774, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13776, %r13774, %r13492, %r13250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13780, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13782, %r13780, %r13503, %r13254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13786, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13788, %r13786, %r13516, %r13258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13792, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13794, %r13792, %r13527, %r13262;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13798, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13800, %r13798, %r13538, %r13266;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13804, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13806, %r13804, %r13549, %r13270;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13810, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13812, %r13810, %r13562, %r13274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13816, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13818, %r13816, %r13573, %r13278;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13822, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13824, %r13822, %r13584, %r13282;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13828, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13830, %r13828, %r13595, %r13286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13834, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13836, %r13834, %r13608, %r13290;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13840, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13842, %r13840, %r13619, %r13294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13846, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13848, %r13846, %r13630, %r13298;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13852, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13854, %r13852, %r13641, %r13302;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13858, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13860, %r13858, %r13654, %r13306;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13864, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13866, %r13864, %r13665, %r13310;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13870, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13872, %r13870, %r13676, %r13314;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13876, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13878, %r13876, %r13687, %r13318;
	// end inline asm
	// begin inline asm
	mov.b32 %r13887, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13898, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13884, %r853, %r8486, %r13887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13888, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13889, %r13887, %r13888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13892, %r13884, %r13889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13895, %r864, %r8486, %r13898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13899, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13900, %r13898, %r13899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13903, %r13895, %r13900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13906, %r853, %r8508, %r13887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13910, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13911, %r13887, %r13910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13914, %r13906, %r13911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13917, %r864, %r8508, %r13898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13921, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13922, %r13898, %r13921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13925, %r13917, %r13922;
	// end inline asm
	// begin inline asm
	mov.b32 %r13933, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13944, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13930, %r853, %r8532, %r13933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13934, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13935, %r13933, %r13934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13938, %r13930, %r13935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13941, %r864, %r8532, %r13944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13945, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13946, %r13944, %r13945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13949, %r13941, %r13946;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13952, %r853, %r8554, %r13933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13956, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13957, %r13933, %r13956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13960, %r13952, %r13957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13963, %r864, %r8554, %r13944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13967, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13968, %r13944, %r13967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13971, %r13963, %r13968;
	// end inline asm
	// begin inline asm
	mov.b32 %r13979, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13990, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13976, %r853, %r8578, %r13979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13980, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13981, %r13979, %r13980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13984, %r13976, %r13981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13987, %r864, %r8578, %r13990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13991, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13992, %r13990, %r13991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13995, %r13987, %r13992;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13998, %r853, %r8600, %r13979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14002, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14003, %r13979, %r14002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14006, %r13998, %r14003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14009, %r864, %r8600, %r13990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14013, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14014, %r13990, %r14013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14017, %r14009, %r14014;
	// end inline asm
	// begin inline asm
	mov.b32 %r14025, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r14036, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14022, %r853, %r8624, %r14025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14026, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14027, %r14025, %r14026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14030, %r14022, %r14027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14033, %r864, %r8624, %r14036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14037, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14038, %r14036, %r14037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14041, %r14033, %r14038;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14044, %r853, %r8646, %r14025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14048, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14049, %r14025, %r14048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14052, %r14044, %r14049;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14055, %r864, %r8646, %r14036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14059, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14060, %r14036, %r14059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14063, %r14055, %r14060;
	// end inline asm
	// begin inline asm
	mov.b32 %r14071, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r14082, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14068, %r853, %r8670, %r14071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14072, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14073, %r14071, %r14072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14076, %r14068, %r14073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14079, %r864, %r8670, %r14082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14083, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14084, %r14082, %r14083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14087, %r14079, %r14084;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14090, %r853, %r8692, %r14071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14094, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14095, %r14071, %r14094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14098, %r14090, %r14095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14101, %r864, %r8692, %r14082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14105, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14106, %r14082, %r14105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14109, %r14101, %r14106;
	// end inline asm
	// begin inline asm
	mov.b32 %r14117, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r14128, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14114, %r853, %r8716, %r14117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14118, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14119, %r14117, %r14118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14122, %r14114, %r14119;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14125, %r864, %r8716, %r14128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14129, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14130, %r14128, %r14129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14133, %r14125, %r14130;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14136, %r853, %r8738, %r14117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14140, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14141, %r14117, %r14140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14144, %r14136, %r14141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14147, %r864, %r8738, %r14128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14151, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14152, %r14128, %r14151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14155, %r14147, %r14152;
	// end inline asm
	// begin inline asm
	mov.b32 %r14163, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r14174, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14160, %r853, %r8762, %r14163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14164, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14165, %r14163, %r14164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14168, %r14160, %r14165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14171, %r864, %r8762, %r14174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14175, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14176, %r14174, %r14175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14179, %r14171, %r14176;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14182, %r853, %r8784, %r14163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14186, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14187, %r14163, %r14186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14190, %r14182, %r14187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14193, %r864, %r8784, %r14174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14197, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14198, %r14174, %r14197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14201, %r14193, %r14198;
	// end inline asm
	// begin inline asm
	mov.b32 %r14209, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r14220, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14206, %r853, %r8808, %r14209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14210, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14211, %r14209, %r14210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14214, %r14206, %r14211;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14217, %r864, %r8808, %r14220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14221, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14222, %r14220, %r14221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14225, %r14217, %r14222;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14228, %r853, %r8830, %r14209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14232, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14233, %r14209, %r14232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14236, %r14228, %r14233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14239, %r864, %r8830, %r14220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14243, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14244, %r14220, %r14243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14247, %r14239, %r14244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14385, %r337, %r13892, %r13692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14382, %r337, %r13903, %r13698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14394, %r337, %r13914, %r13704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14391, %r337, %r13925, %r13710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14403, %r337, %r13938, %r13716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14400, %r337, %r13949, %r13722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14412, %r337, %r13960, %r13728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14409, %r337, %r13971, %r13734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14421, %r337, %r13984, %r13740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14418, %r337, %r13995, %r13746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14430, %r337, %r14006, %r13752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14427, %r337, %r14017, %r13758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14439, %r337, %r14030, %r13764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14436, %r337, %r14041, %r13770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14448, %r337, %r14052, %r13776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14445, %r337, %r14063, %r13782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14457, %r355, %r14076, %r13788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14454, %r355, %r14087, %r13794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14466, %r355, %r14098, %r13800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14463, %r355, %r14109, %r13806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14475, %r355, %r14122, %r13812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14472, %r355, %r14133, %r13818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14484, %r355, %r14144, %r13824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14481, %r355, %r14155, %r13830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14493, %r355, %r14168, %r13836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14490, %r355, %r14179, %r13842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14502, %r355, %r14190, %r13848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14499, %r355, %r14201, %r13854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14511, %r355, %r14214, %r13860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14508, %r355, %r14225, %r13866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14520, %r355, %r14236, %r13872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14517, %r355, %r14247, %r13878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14378, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14380, %r14378, %r14382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14383, %r394, %r14385, %r14380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14387, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14389, %r14387, %r14391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14392, %r394, %r14394, %r14389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14396, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14398, %r14396, %r14400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14401, %r394, %r14403, %r14398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14405, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14407, %r14405, %r14409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14410, %r394, %r14412, %r14407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14414, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14416, %r14414, %r14418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14419, %r394, %r14421, %r14416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14423, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14425, %r14423, %r14427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14428, %r394, %r14430, %r14425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14432, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14434, %r14432, %r14436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14437, %r394, %r14439, %r14434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14441, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14443, %r14441, %r14445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14446, %r394, %r14448, %r14443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14450, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14452, %r14450, %r14454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14455, %r397, %r14457, %r14452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14459, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14461, %r14459, %r14463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14464, %r397, %r14466, %r14461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14468, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14470, %r14468, %r14472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14473, %r397, %r14475, %r14470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14477, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14479, %r14477, %r14481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14482, %r397, %r14484, %r14479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14486, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14488, %r14486, %r14490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14491, %r397, %r14493, %r14488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14495, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14497, %r14495, %r14499;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14500, %r397, %r14502, %r14497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14504, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14506, %r14504, %r14508;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14509, %r397, %r14511, %r14506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14513, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14515, %r14513, %r14517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14518, %r397, %r14520, %r14515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14522, %r400, %r14385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14525, %r394, %r14382, %r14522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14529, %r400, %r14394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14532, %r394, %r14391, %r14529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14536, %r400, %r14403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14539, %r394, %r14400, %r14536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14543, %r400, %r14412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14546, %r394, %r14409, %r14543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14550, %r400, %r14421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14553, %r394, %r14418, %r14550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14557, %r400, %r14430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14560, %r394, %r14427, %r14557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14564, %r400, %r14439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14567, %r394, %r14436, %r14564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14571, %r400, %r14448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14574, %r394, %r14445, %r14571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14578, %r403, %r14457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14581, %r397, %r14454, %r14578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14585, %r403, %r14466;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14588, %r397, %r14463, %r14585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14592, %r403, %r14475;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14595, %r397, %r14472, %r14592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14599, %r403, %r14484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14602, %r397, %r14481, %r14599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14606, %r403, %r14493;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14609, %r397, %r14490, %r14606;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14613, %r403, %r14502;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14616, %r397, %r14499, %r14613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14620, %r403, %r14511;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14623, %r397, %r14508, %r14620;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14627, %r403, %r14520;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14630, %r397, %r14517, %r14627;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14801, %r14798}, {%r461, %r467, %r464, %r470}, {%r14383, %r14525}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14810, %r14807}, {%r461, %r467, %r464, %r470}, {%r14392, %r14532}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14819, %r14816}, {%r461, %r467, %r464, %r470}, {%r14401, %r14539}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14828, %r14825}, {%r461, %r467, %r464, %r470}, {%r14410, %r14546}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14837, %r14834}, {%r461, %r467, %r464, %r470}, {%r14419, %r14553}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14846, %r14843}, {%r461, %r467, %r464, %r470}, {%r14428, %r14560}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14855, %r14852}, {%r461, %r467, %r464, %r470}, {%r14437, %r14567}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14864, %r14861}, {%r461, %r467, %r464, %r470}, {%r14446, %r14574}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14873, %r14870}, {%r461, %r467, %r464, %r470}, {%r14455, %r14581}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14882, %r14879}, {%r461, %r467, %r464, %r470}, {%r14464, %r14588}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14891, %r14888}, {%r461, %r467, %r464, %r470}, {%r14473, %r14595}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14900, %r14897}, {%r461, %r467, %r464, %r470}, {%r14482, %r14602}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14909, %r14906}, {%r461, %r467, %r464, %r470}, {%r14491, %r14609}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14918, %r14915}, {%r461, %r467, %r464, %r470}, {%r14500, %r14616}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14927, %r14924}, {%r461, %r467, %r464, %r470}, {%r14509, %r14623}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14936, %r14933}, {%r461, %r467, %r464, %r470}, {%r14518, %r14630}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14794, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14796, %r14794, %r14798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14799, %r511, %r14801, %r14796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14803, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14805, %r14803, %r14807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14808, %r511, %r14810, %r14805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14812, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14814, %r14812, %r14816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14817, %r511, %r14819, %r14814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14821, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14823, %r14821, %r14825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14826, %r511, %r14828, %r14823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14830, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14832, %r14830, %r14834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14835, %r511, %r14837, %r14832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14839, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14841, %r14839, %r14843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14844, %r511, %r14846, %r14841;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14848, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14850, %r14848, %r14852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14853, %r511, %r14855, %r14850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14857, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14859, %r14857, %r14861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14862, %r511, %r14864, %r14859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14866, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14868, %r14866, %r14870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14871, %r511, %r14873, %r14868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14875, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14877, %r14875, %r14879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14880, %r511, %r14882, %r14877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14884, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14886, %r14884, %r14888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14889, %r511, %r14891, %r14886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14893, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14895, %r14893, %r14897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14898, %r511, %r14900, %r14895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14902, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14904, %r14902, %r14906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14907, %r511, %r14909, %r14904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14911, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14913, %r14911, %r14915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14916, %r511, %r14918, %r14913;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14920, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14922, %r14920, %r14924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14925, %r511, %r14927, %r14922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14929, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14931, %r14929, %r14933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14934, %r511, %r14936, %r14931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14938, %r514, %r14801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14941, %r511, %r14798, %r14938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14945, %r514, %r14810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14948, %r511, %r14807, %r14945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14952, %r514, %r14819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14955, %r511, %r14816, %r14952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14959, %r514, %r14828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14962, %r511, %r14825, %r14959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14966, %r514, %r14837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14969, %r511, %r14834, %r14966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14973, %r514, %r14846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14976, %r511, %r14843, %r14973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14980, %r514, %r14855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14983, %r511, %r14852, %r14980;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14987, %r514, %r14864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14990, %r511, %r14861, %r14987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14994, %r514, %r14873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14997, %r511, %r14870, %r14994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15001, %r514, %r14882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15004, %r511, %r14879, %r15001;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15008, %r514, %r14891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15011, %r511, %r14888, %r15008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15015, %r514, %r14900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15018, %r511, %r14897, %r15015;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15022, %r514, %r14909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15025, %r511, %r14906, %r15022;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15029, %r514, %r14918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15032, %r511, %r14915, %r15029;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15036, %r514, %r14927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15039, %r511, %r14924, %r15036;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15043, %r514, %r14936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15046, %r511, %r14933, %r15043;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15339, %r15342}, {%r549, %r555, %r552, %r558}, {%r14799, %r14941}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15345, %r15348}, {%r549, %r555, %r552, %r558}, {%r14808, %r14948}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15351, %r15354}, {%r549, %r555, %r552, %r558}, {%r14817, %r14955}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15357, %r15360}, {%r549, %r555, %r552, %r558}, {%r14826, %r14962}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15363, %r15366}, {%r549, %r555, %r552, %r558}, {%r14835, %r14969}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15369, %r15372}, {%r549, %r555, %r552, %r558}, {%r14844, %r14976}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15375, %r15378}, {%r549, %r555, %r552, %r558}, {%r14853, %r14983}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15381, %r15384}, {%r549, %r555, %r552, %r558}, {%r14862, %r14990}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15340, %r15343}, {%r549, %r555, %r552, %r558}, {%r14871, %r14997}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15346, %r15349}, {%r549, %r555, %r552, %r558}, {%r14880, %r15004}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15352, %r15355}, {%r549, %r555, %r552, %r558}, {%r14889, %r15011}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15358, %r15361}, {%r549, %r555, %r552, %r558}, {%r14898, %r15018}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15364, %r15367}, {%r549, %r555, %r552, %r558}, {%r14907, %r15025}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15370, %r15373}, {%r549, %r555, %r552, %r558}, {%r14916, %r15032}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15376, %r15379}, {%r549, %r555, %r552, %r558}, {%r14925, %r15039}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15382, %r15385}, {%r549, %r555, %r552, %r558}, {%r14934, %r15046}, {%r3194, %r3194};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15338, %r15339, %r15340;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15341, %r15342, %r15343;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15344, %r15345, %r15346;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15347, %r15348, %r15349;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15350, %r15351, %r15352;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15353, %r15354, %r15355;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15356, %r15357, %r15358;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15359, %r15360, %r15361;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15362, %r15363, %r15364;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15365, %r15366, %r15367;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15368, %r15369, %r15370;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15371, %r15372, %r15373;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15374, %r15375, %r15376;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15377, %r15378, %r15379;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15380, %r15381, %r15382;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15383, %r15384, %r15385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15386, %r15339, %r15340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15389, %r15342, %r15343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15392, %r15345, %r15346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15395, %r15348, %r15349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15398, %r15351, %r15352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15401, %r15354, %r15355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15404, %r15357, %r15358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15407, %r15360, %r15361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15410, %r15363, %r15364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15413, %r15366, %r15367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15416, %r15369, %r15370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15419, %r15372, %r15373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15422, %r15375, %r15376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15425, %r15378, %r15379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15428, %r15381, %r15382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15431, %r15384, %r15385;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15434, %r133, %r15338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15437, %r133, %r15341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15440, %r133, %r15344;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15443, %r133, %r15347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15446, %r133, %r15350;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15449, %r133, %r15353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15452, %r133, %r15356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15455, %r133, %r15359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15458, %r133, %r15362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15461, %r133, %r15365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15464, %r133, %r15368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15467, %r133, %r15371;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15470, %r133, %r15374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15473, %r133, %r15377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15476, %r133, %r15380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15479, %r133, %r15383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15482, %r134, %r15386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15485, %r134, %r15389;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15488, %r134, %r15392;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15491, %r134, %r15395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15494, %r134, %r15398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15497, %r134, %r15401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15500, %r134, %r15404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15503, %r134, %r15407;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15506, %r134, %r15410;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15509, %r134, %r15413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15512, %r134, %r15416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15515, %r134, %r15419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15518, %r134, %r15422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15521, %r134, %r15425;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15524, %r134, %r15428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15527, %r134, %r15431;
	// end inline asm
	// begin inline asm
	mov.b32 %r15530, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15531, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15532, %r15434, %r15530;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15535, %r15532, %r15531;
	// end inline asm
	// begin inline asm
	mov.b32 %r15538, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15539, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15540, %r15437, %r15538;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15543, %r15540, %r15539;
	// end inline asm
	// begin inline asm
	mov.b32 %r15546, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15547, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15548, %r15440, %r15546;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15551, %r15548, %r15547;
	// end inline asm
	// begin inline asm
	mov.b32 %r15554, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15555, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15556, %r15443, %r15554;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15559, %r15556, %r15555;
	// end inline asm
	// begin inline asm
	mov.b32 %r15562, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15563, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15564, %r15446, %r15562;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15567, %r15564, %r15563;
	// end inline asm
	// begin inline asm
	mov.b32 %r15570, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15571, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15572, %r15449, %r15570;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15575, %r15572, %r15571;
	// end inline asm
	// begin inline asm
	mov.b32 %r15578, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15579, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15580, %r15452, %r15578;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15583, %r15580, %r15579;
	// end inline asm
	// begin inline asm
	mov.b32 %r15586, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15587, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15588, %r15455, %r15586;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15591, %r15588, %r15587;
	// end inline asm
	// begin inline asm
	mov.b32 %r15594, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15595, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15596, %r15458, %r15594;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15599, %r15596, %r15595;
	// end inline asm
	// begin inline asm
	mov.b32 %r15602, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15603, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15604, %r15461, %r15602;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15607, %r15604, %r15603;
	// end inline asm
	// begin inline asm
	mov.b32 %r15610, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15611, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15612, %r15464, %r15610;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15615, %r15612, %r15611;
	// end inline asm
	// begin inline asm
	mov.b32 %r15618, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15619, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15620, %r15467, %r15618;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15623, %r15620, %r15619;
	// end inline asm
	// begin inline asm
	mov.b32 %r15626, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15627, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15628, %r15470, %r15626;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15631, %r15628, %r15627;
	// end inline asm
	// begin inline asm
	mov.b32 %r15634, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15635, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15636, %r15473, %r15634;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15639, %r15636, %r15635;
	// end inline asm
	// begin inline asm
	mov.b32 %r15642, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15643, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15644, %r15476, %r15642;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15647, %r15644, %r15643;
	// end inline asm
	// begin inline asm
	mov.b32 %r15650, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15651, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15652, %r15479, %r15650;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15655, %r15652, %r15651;
	// end inline asm
	// begin inline asm
	mov.b32 %r15658, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15659, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15660, %r15482, %r15658;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15663, %r15660, %r15659;
	// end inline asm
	// begin inline asm
	mov.b32 %r15666, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15667, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15668, %r15485, %r15666;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15671, %r15668, %r15667;
	// end inline asm
	// begin inline asm
	mov.b32 %r15674, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15675, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15676, %r15488, %r15674;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15679, %r15676, %r15675;
	// end inline asm
	// begin inline asm
	mov.b32 %r15682, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15683, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15684, %r15491, %r15682;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15687, %r15684, %r15683;
	// end inline asm
	// begin inline asm
	mov.b32 %r15690, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15691, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15692, %r15494, %r15690;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15695, %r15692, %r15691;
	// end inline asm
	// begin inline asm
	mov.b32 %r15698, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15699, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15700, %r15497, %r15698;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15703, %r15700, %r15699;
	// end inline asm
	// begin inline asm
	mov.b32 %r15706, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15707, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15708, %r15500, %r15706;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15711, %r15708, %r15707;
	// end inline asm
	// begin inline asm
	mov.b32 %r15714, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15715, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15716, %r15503, %r15714;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15719, %r15716, %r15715;
	// end inline asm
	// begin inline asm
	mov.b32 %r15722, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15723, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15724, %r15506, %r15722;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15727, %r15724, %r15723;
	// end inline asm
	// begin inline asm
	mov.b32 %r15730, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15731, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15732, %r15509, %r15730;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15735, %r15732, %r15731;
	// end inline asm
	// begin inline asm
	mov.b32 %r15738, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15739, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15740, %r15512, %r15738;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15743, %r15740, %r15739;
	// end inline asm
	// begin inline asm
	mov.b32 %r15746, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15747, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15748, %r15515, %r15746;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15751, %r15748, %r15747;
	// end inline asm
	// begin inline asm
	mov.b32 %r15754, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15755, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15756, %r15518, %r15754;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15759, %r15756, %r15755;
	// end inline asm
	// begin inline asm
	mov.b32 %r15762, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15763, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15764, %r15521, %r15762;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15767, %r15764, %r15763;
	// end inline asm
	// begin inline asm
	mov.b32 %r15770, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15771, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15772, %r15524, %r15770;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15775, %r15772, %r15771;
	// end inline asm
	// begin inline asm
	mov.b32 %r15778, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15779, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15780, %r15527, %r15778;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15783, %r15780, %r15779;
	// end inline asm
	// begin inline asm
	mov.b32 %r15789, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r15787, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15788, %r15789, %r15787;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15791, %r15535, %r15788;
	// end inline asm
	// begin inline asm
	mov.b32 %r15794, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15795, %r15789, %r15794;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15798, %r15543, %r15795;
	// end inline asm
	// begin inline asm
	mov.b32 %r15801, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15802, %r15789, %r15801;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15805, %r15551, %r15802;
	// end inline asm
	// begin inline asm
	mov.b32 %r15808, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15809, %r15789, %r15808;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15812, %r15559, %r15809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15815, %r15791, %r15805, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15819, %r15798, %r15812, %r4370;
	// end inline asm
	shl.b32 	%r15826, %r15819, 4;
	// begin inline asm
	lop3.b32 %r15823, %r4376, %r15815, %r15826, 202;
	// end inline asm
	xor.b32  	%r16194, %r15823, -2004318072;
	// begin inline asm
	mov.b32 %r15830, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r15828, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15829, %r15830, %r15828;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15832, %r15567, %r15829;
	// end inline asm
	// begin inline asm
	mov.b32 %r15835, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15836, %r15830, %r15835;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15839, %r15575, %r15836;
	// end inline asm
	// begin inline asm
	mov.b32 %r15842, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15843, %r15830, %r15842;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15846, %r15583, %r15843;
	// end inline asm
	// begin inline asm
	mov.b32 %r15849, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15850, %r15830, %r15849;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15853, %r15591, %r15850;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15856, %r15832, %r15846, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15860, %r15839, %r15853, %r4370;
	// end inline asm
	shl.b32 	%r15867, %r15860, 4;
	// begin inline asm
	lop3.b32 %r15864, %r4376, %r15856, %r15867, 202;
	// end inline asm
	xor.b32  	%r16195, %r15864, -2004318072;
	// begin inline asm
	mov.b32 %r15871, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r15869, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15870, %r15871, %r15869;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15873, %r15599, %r15870;
	// end inline asm
	// begin inline asm
	mov.b32 %r15876, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15877, %r15871, %r15876;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15880, %r15607, %r15877;
	// end inline asm
	// begin inline asm
	mov.b32 %r15883, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15884, %r15871, %r15883;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15887, %r15615, %r15884;
	// end inline asm
	// begin inline asm
	mov.b32 %r15890, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15891, %r15871, %r15890;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15894, %r15623, %r15891;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15897, %r15873, %r15887, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15901, %r15880, %r15894, %r4370;
	// end inline asm
	shl.b32 	%r15908, %r15901, 4;
	// begin inline asm
	lop3.b32 %r15905, %r4376, %r15897, %r15908, 202;
	// end inline asm
	xor.b32  	%r16196, %r15905, -2004318072;
	// begin inline asm
	mov.b32 %r15912, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r15910, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15911, %r15912, %r15910;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15914, %r15631, %r15911;
	// end inline asm
	// begin inline asm
	mov.b32 %r15917, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15918, %r15912, %r15917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15921, %r15639, %r15918;
	// end inline asm
	// begin inline asm
	mov.b32 %r15924, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15925, %r15912, %r15924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15928, %r15647, %r15925;
	// end inline asm
	// begin inline asm
	mov.b32 %r15931, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15932, %r15912, %r15931;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15935, %r15655, %r15932;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15938, %r15914, %r15928, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15942, %r15921, %r15935, %r4370;
	// end inline asm
	shl.b32 	%r15949, %r15942, 4;
	// begin inline asm
	lop3.b32 %r15946, %r4376, %r15938, %r15949, 202;
	// end inline asm
	xor.b32  	%r16197, %r15946, -2004318072;
	// begin inline asm
	mov.b32 %r15953, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r15951, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15952, %r15953, %r15951;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15955, %r15663, %r15952;
	// end inline asm
	// begin inline asm
	mov.b32 %r15958, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15959, %r15953, %r15958;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15962, %r15671, %r15959;
	// end inline asm
	// begin inline asm
	mov.b32 %r15965, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15966, %r15953, %r15965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15969, %r15679, %r15966;
	// end inline asm
	// begin inline asm
	mov.b32 %r15972, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15973, %r15953, %r15972;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15976, %r15687, %r15973;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15979, %r15955, %r15969, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15983, %r15962, %r15976, %r4370;
	// end inline asm
	shl.b32 	%r15990, %r15983, 4;
	// begin inline asm
	lop3.b32 %r15987, %r4376, %r15979, %r15990, 202;
	// end inline asm
	xor.b32  	%r16198, %r15987, -2004318072;
	// begin inline asm
	mov.b32 %r15994, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r15992, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15993, %r15994, %r15992;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15996, %r15695, %r15993;
	// end inline asm
	// begin inline asm
	mov.b32 %r15999, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16000, %r15994, %r15999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16003, %r15703, %r16000;
	// end inline asm
	// begin inline asm
	mov.b32 %r16006, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16007, %r15994, %r16006;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16010, %r15711, %r16007;
	// end inline asm
	// begin inline asm
	mov.b32 %r16013, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16014, %r15994, %r16013;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16017, %r15719, %r16014;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16020, %r15996, %r16010, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16024, %r16003, %r16017, %r4370;
	// end inline asm
	shl.b32 	%r16031, %r16024, 4;
	// begin inline asm
	lop3.b32 %r16028, %r4376, %r16020, %r16031, 202;
	// end inline asm
	xor.b32  	%r16199, %r16028, -2004318072;
	// begin inline asm
	mov.b32 %r16035, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r16033, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16034, %r16035, %r16033;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16037, %r15727, %r16034;
	// end inline asm
	// begin inline asm
	mov.b32 %r16040, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16041, %r16035, %r16040;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16044, %r15735, %r16041;
	// end inline asm
	// begin inline asm
	mov.b32 %r16047, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16048, %r16035, %r16047;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16051, %r15743, %r16048;
	// end inline asm
	// begin inline asm
	mov.b32 %r16054, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16055, %r16035, %r16054;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16058, %r15751, %r16055;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16061, %r16037, %r16051, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16065, %r16044, %r16058, %r4370;
	// end inline asm
	shl.b32 	%r16072, %r16065, 4;
	// begin inline asm
	lop3.b32 %r16069, %r4376, %r16061, %r16072, 202;
	// end inline asm
	xor.b32  	%r16200, %r16069, -2004318072;
	// begin inline asm
	mov.b32 %r16076, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r16074, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16075, %r16076, %r16074;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16078, %r15759, %r16075;
	// end inline asm
	// begin inline asm
	mov.b32 %r16081, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16082, %r16076, %r16081;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16085, %r15767, %r16082;
	// end inline asm
	// begin inline asm
	mov.b32 %r16088, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16089, %r16076, %r16088;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16092, %r15775, %r16089;
	// end inline asm
	// begin inline asm
	mov.b32 %r16095, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16096, %r16076, %r16095;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16099, %r15783, %r16096;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16102, %r16078, %r16092, %r4370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16106, %r16085, %r16099, %r4370;
	// end inline asm
	shl.b32 	%r16113, %r16106, 4;
	// begin inline asm
	lop3.b32 %r16110, %r4376, %r16102, %r16113, 202;
	// end inline asm
	xor.b32  	%r16201, %r16110, -2004318072;
	st.shared.u32 	[%rd104], %r16194;
	st.shared.u32 	[%rd106], %r16195;
	st.shared.u32 	[%rd108], %r16196;
	st.shared.u32 	[%rd110], %r16197;
	st.shared.u32 	[%rd112], %r16198;
	st.shared.u32 	[%rd114], %r16199;
	st.shared.u32 	[%rd116], %r16200;
	st.shared.u32 	[%rd118], %r16201;
	add.s32 	%r16325, %r16325, 128;
	setp.ne.s32 	%p304, %r16325, 256;
	@%p304 bra 	$L__BB0_156;
// %bb.157:                             // %guard_exit29661
                                        //   in Loop: Header=BB0_123 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16207, [%rd4];
	ld.shared.u32 	%r16208, [%rd5+128];
	ld.shared.u32 	%r16215, [%rd5+4];
	ld.shared.u32 	%r16216, [%rd5+132];
	ld.shared.u32 	%r16223, [%rd6];
	ld.shared.u32 	%r16224, [%rd7+128];
	ld.shared.u32 	%r16231, [%rd7+4];
	ld.shared.u32 	%r16232, [%rd7+132];
	ld.shared.u32 	%r16239, [%rd4+16644];
	ld.shared.u32 	%r16240, [%rd5+16772];
	ld.shared.u32 	%r16247, [%rd5+16648];
	ld.shared.u32 	%r16248, [%rd5+16776];
	ld.shared.u32 	%r16255, [%rd6+16644];
	ld.shared.u32 	%r16256, [%rd21];
	ld.shared.u32 	%r16263, [%rd7+16648];
	ld.shared.u32 	%r16264, [%rd7+16776];
	// begin inline asm
	prmt.b32 %r16202, %r16207, %r16208, %r16205;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16206, %r16207, %r16208, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16210, %r16215, %r16216, %r16205;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16214, %r16215, %r16216, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16218, %r16223, %r16224, %r16205;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16222, %r16223, %r16224, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16226, %r16231, %r16232, %r16205;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16230, %r16231, %r16232, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16234, %r16239, %r16240, %r16205;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16238, %r16239, %r16240, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16242, %r16247, %r16248, %r16205;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16246, %r16247, %r16248, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16250, %r16255, %r16256, %r16205;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16254, %r16255, %r16256, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16258, %r16263, %r16264, %r16205;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16262, %r16263, %r16264, %r16209;
	// end inline asm
	selp.b32 	%r16267, %r16206, %r16202, %p290;
	shfl.sync.bfly.b32	%r16268, %r16267, 8, 31, -1;
	selp.b32 	%r16269, %r16214, %r16210, %p290;
	shfl.sync.bfly.b32	%r16270, %r16269, 8, 31, -1;
	selp.b32 	%r16271, %r16222, %r16218, %p290;
	shfl.sync.bfly.b32	%r16272, %r16271, 8, 31, -1;
	selp.b32 	%r16273, %r16230, %r16226, %p290;
	shfl.sync.bfly.b32	%r16274, %r16273, 8, 31, -1;
	selp.b32 	%r16275, %r16238, %r16234, %p290;
	shfl.sync.bfly.b32	%r16276, %r16275, 8, 31, -1;
	selp.b32 	%r16277, %r16246, %r16242, %p290;
	shfl.sync.bfly.b32	%r16278, %r16277, 8, 31, -1;
	selp.b32 	%r16279, %r16254, %r16250, %p290;
	shfl.sync.bfly.b32	%r16280, %r16279, 8, 31, -1;
	selp.b32 	%r16281, %r16262, %r16258, %p290;
	shfl.sync.bfly.b32	%r16282, %r16281, 8, 31, -1;
	mov.u32 	%r16318, 256;
	bra.uni 	$L__BB0_123;
$L__BB0_124:                            // %L70621
	mov.u32 	%r702, 0;
	st.global.u32 	[%rd3], %r702;
	ret;
$L__BB0_7:                              // %L156
	mov.u32 	%r16283, 2;
	st.global.u32 	[%rd3], %r16283;
	mov.u64 	%rd119, exception5812;
	cvta.global.u64 	%rd120, %rd119;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd120;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r220;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd27, exception1;
	cvta.global.u64 	%rd28, %rd27;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd28;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r220;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
