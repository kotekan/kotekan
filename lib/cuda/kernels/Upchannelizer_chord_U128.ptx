// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5808[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<320>;
	.reg .b16 	%rs<2402>;
	.reg .b32 	%r<16386>;
	.reg .f32 	%f<1310>;
	.reg .b64 	%rd<158>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r246, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd22, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r253, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r253, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd23, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r247, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r254, %r4, 9;
	or.b32  	%r255, %r2, %r3;
	or.b32  	%r256, %r255, %r254;
	mul.wide.u32 	%rd29, %r256, 4;
	add.s64 	%rd4, %rd23, %rd29;
	mov.u32 	%r257, 1;
	st.global.u32 	[%rd4], %r257;
	setp.gt.u32 	%p2, %r247, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L120
	ld.param.u32 	%r248, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r248, %r247;
	setp.gt.s32 	%p4, %r248, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L127
	ld.param.u32 	%r249, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r258, %r248, %r247;
	and.b32  	%r259, %r258, 255;
	setp.ne.s32 	%p6, %r259, 0;
	setp.gt.u32 	%p7, %r249, 255;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L138
	ld.param.u32 	%r250, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r250, %r249;
	setp.gt.s32 	%p10, %r250, 511;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L145
	sub.s32 	%r260, %r250, %r249;
	and.b32  	%r261, %r260, 1;
	setp.eq.b32 	%p12, %r261, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r251, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p15, %r251, 0;
	@%p15 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r252, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p16, %r251, %r252;
	setp.lt.s32 	%p17, %r252, 49;
	and.pred  	%p18, %p16, %p17;
	@%p18 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass189
	bfe.u32 	%r184, %r3, 1, 1;
	and.b32  	%r185, %r3, 1;
	bfe.u32 	%r187, %r3, 2, 1;
	shr.u32 	%r188, %r3, 4;
	shl.b32 	%r271, %r188, 2;
	shl.b32 	%r272, %r187, 3;
	shl.b32 	%r273, %r185, 4;
	shl.b32 	%r274, %r184, 5;
	or.b32  	%r275, %r273, %r274;
	or.b32  	%r276, %r272, %r275;
	or.b32  	%r277, %r271, %r276;
	bfe.u32 	%r190, %r3, 3, 1;
	shl.b32 	%r278, %r190, 1;
	or.b32  	%r191, %r278, %r277;
	or.b32  	%r192, %r191, 64;
	mov.f32 	%f221, 0f40000000;
	mov.f32 	%f222, 0f43FF8000;
	div.approx.f32 	%f140, %f222, %f221;
	cvt.rn.f32.s32 	%f223, %r191;
	sub.f32 	%f224, %f223, %f140;
	mov.f32 	%f253, 0f43000000;
	div.approx.f32 	%f142, %f224, %f253;
	setp.ne.f32 	%p24, %f142, 0f00000000;
	mov.f32 	%f1277, 0f3F800000;
	mov.f32 	%f1262, %f1277;
	@%p24 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L764
	sin.approx.f32 	%f254, %f142;
	div.approx.f32 	%f1262, %f254, %f142;
$L__BB0_13:                             // %L767
	cvt.rn.f32.s32 	%f257, %r192;
	sub.f32 	%f258, %f257, %f140;
	div.approx.f32 	%f5, %f258, %f253;
	setp.eq.f32 	%p30, %f5, 0f00000000;
	mov.f32 	%f1263, %f1277;
	@%p30 bra 	$L__BB0_15;
// %bb.14:                              // %L784
	sin.approx.f32 	%f288, %f5;
	div.approx.f32 	%f1263, %f288, %f5;
$L__BB0_15:                             // %L787
	or.b32  	%r296, %r191, 1;
	or.b32  	%r6, %r191, 65;
	cvt.rn.f32.s32 	%f292, %r296;
	sub.f32 	%f293, %f292, %f140;
	div.approx.f32 	%f9, %f293, %f253;
	setp.eq.f32 	%p36, %f9, 0f00000000;
	mov.f32 	%f1264, %f1277;
	@%p36 bra 	$L__BB0_17;
// %bb.16:                              // %L866
	sin.approx.f32 	%f323, %f9;
	div.approx.f32 	%f1264, %f323, %f9;
$L__BB0_17:                             // %L869
	cvt.rn.f32.s32 	%f326, %r6;
	sub.f32 	%f327, %f326, %f140;
	div.approx.f32 	%f14, %f327, %f253;
	setp.eq.f32 	%p42, %f14, 0f00000000;
	mov.f32 	%f1265, %f1277;
	@%p42 bra 	$L__BB0_19;
// %bb.18:                              // %L886
	sin.approx.f32 	%f357, %f14;
	div.approx.f32 	%f1265, %f357, %f14;
$L__BB0_19:                             // %L889
	or.b32  	%r314, %r191, 128;
	or.b32  	%r8, %r191, 192;
	cvt.rn.f32.s32 	%f361, %r314;
	sub.f32 	%f362, %f361, %f140;
	div.approx.f32 	%f18, %f362, %f253;
	setp.eq.f32 	%p48, %f18, 0f00000000;
	mov.f32 	%f1266, %f1277;
	@%p48 bra 	$L__BB0_21;
// %bb.20:                              // %L968
	sin.approx.f32 	%f392, %f18;
	div.approx.f32 	%f1266, %f392, %f18;
$L__BB0_21:                             // %L971
	mov.f32 	%f225, 0f44004000;
	cvt.rn.f32.s32 	%f395, %r8;
	sub.f32 	%f396, %f395, %f140;
	div.approx.f32 	%f23, %f396, %f253;
	setp.eq.f32 	%p54, %f23, 0f00000000;
	mov.f32 	%f1267, %f1277;
	@%p54 bra 	$L__BB0_23;
// %bb.22:                              // %L988
	sin.approx.f32 	%f426, %f23;
	div.approx.f32 	%f1267, %f426, %f23;
$L__BB0_23:                             // %L991
	div.approx.f32 	%f226, %f224, %f225;
	div.approx.f32 	%f260, %f258, %f225;
	div.approx.f32 	%f295, %f293, %f225;
	div.approx.f32 	%f329, %f327, %f225;
	div.approx.f32 	%f364, %f362, %f225;
	div.approx.f32 	%f398, %f396, %f225;
	or.b32  	%r332, %r191, 129;
	or.b32  	%r10, %r191, 193;
	cvt.rn.f32.s32 	%f430, %r332;
	sub.f32 	%f431, %f430, %f140;
	div.approx.f32 	%f433, %f431, %f225;
	div.approx.f32 	%f27, %f431, %f253;
	setp.eq.f32 	%p60, %f27, 0f00000000;
	mov.f32 	%f1268, %f1277;
	@%p60 bra 	$L__BB0_25;
// %bb.24:                              // %L1070
	sin.approx.f32 	%f461, %f27;
	div.approx.f32 	%f1268, %f461, %f27;
$L__BB0_25:                             // %L1073
	abs.f32 	%f227, %f226;
	abs.f32 	%f261, %f260;
	abs.f32 	%f296, %f295;
	abs.f32 	%f330, %f329;
	abs.f32 	%f365, %f364;
	abs.f32 	%f399, %f398;
	abs.f32 	%f434, %f433;
	cvt.rn.f32.s32 	%f464, %r10;
	sub.f32 	%f465, %f464, %f140;
	div.approx.f32 	%f467, %f465, %f225;
	abs.f32 	%f468, %f467;
	div.approx.f32 	%f32, %f465, %f253;
	setp.eq.f32 	%p66, %f32, 0f00000000;
	mov.f32 	%f1269, %f1277;
	@%p66 bra 	$L__BB0_27;
// %bb.26:                              // %L1090
	sin.approx.f32 	%f495, %f32;
	div.approx.f32 	%f1269, %f495, %f32;
$L__BB0_27:                             // %L1093
	setp.gt.f32 	%p19, %f227, 0f4B800000;
	mul.f32 	%f228, %f226, 0f00000000;
	setp.gt.f32 	%p25, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p31, %f296, 0f4B800000;
	mul.f32 	%f297, %f295, 0f00000000;
	setp.gt.f32 	%p37, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p43, %f365, 0f4B800000;
	mul.f32 	%f366, %f364, 0f00000000;
	setp.gt.f32 	%p49, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p55, %f434, 0f4B800000;
	mul.f32 	%f435, %f433, 0f00000000;
	setp.gt.f32 	%p61, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	or.b32  	%r350, %r191, 256;
	or.b32  	%r12, %r191, 320;
	cvt.rn.f32.s32 	%f499, %r350;
	sub.f32 	%f500, %f499, %f140;
	div.approx.f32 	%f502, %f500, %f225;
	abs.f32 	%f503, %f502;
	setp.gt.f32 	%p67, %f503, 0f4B800000;
	mul.f32 	%f504, %f502, 0f00000000;
	div.approx.f32 	%f36, %f500, %f253;
	setp.eq.f32 	%p72, %f36, 0f00000000;
	mov.f32 	%f1270, %f1277;
	@%p72 bra 	$L__BB0_29;
// %bb.28:                              // %L1172
	sin.approx.f32 	%f530, %f36;
	div.approx.f32 	%f1270, %f530, %f36;
$L__BB0_29:                             // %L1175
	selp.f32 	%f229, %f228, %f226, %p19;
	selp.f32 	%f263, %f262, %f260, %p25;
	selp.f32 	%f298, %f297, %f295, %p31;
	selp.f32 	%f332, %f331, %f329, %p37;
	selp.f32 	%f367, %f366, %f364, %p43;
	selp.f32 	%f401, %f400, %f398, %p49;
	selp.f32 	%f436, %f435, %f433, %p55;
	selp.f32 	%f470, %f469, %f467, %p61;
	selp.f32 	%f505, %f504, %f502, %p67;
	cvt.rn.f32.s32 	%f533, %r12;
	sub.f32 	%f534, %f533, %f140;
	div.approx.f32 	%f536, %f534, %f225;
	abs.f32 	%f537, %f536;
	setp.gt.f32 	%p73, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	selp.f32 	%f539, %f538, %f536, %p73;
	div.approx.f32 	%f41, %f534, %f253;
	setp.eq.f32 	%p78, %f41, 0f00000000;
	mov.f32 	%f1271, %f1277;
	@%p78 bra 	$L__BB0_31;
// %bb.30:                              // %L1192
	sin.approx.f32 	%f564, %f41;
	div.approx.f32 	%f1271, %f564, %f41;
$L__BB0_31:                             // %L1195
	add.f32 	%f230, %f229, %f229;
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f299, %f298, %f298;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f368, %f367, %f367;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f437, %f436, %f436;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f506, %f505, %f505;
	add.f32 	%f540, %f539, %f539;
	or.b32  	%r368, %r191, 257;
	or.b32  	%r14, %r191, 321;
	cvt.rn.f32.s32 	%f568, %r368;
	sub.f32 	%f569, %f568, %f140;
	div.approx.f32 	%f571, %f569, %f225;
	abs.f32 	%f572, %f571;
	setp.gt.f32 	%p79, %f572, 0f4B800000;
	mul.f32 	%f573, %f571, 0f00000000;
	selp.f32 	%f574, %f573, %f571, %p79;
	add.f32 	%f575, %f574, %f574;
	div.approx.f32 	%f45, %f569, %f253;
	setp.eq.f32 	%p84, %f45, 0f00000000;
	mov.f32 	%f1272, %f1277;
	@%p84 bra 	$L__BB0_33;
// %bb.32:                              // %L1274
	sin.approx.f32 	%f599, %f45;
	div.approx.f32 	%f1272, %f599, %f45;
$L__BB0_33:                             // %L1277
	mov.b32 	%r279, %f230;
	mov.b32 	%r286, %f264;
	mov.b32 	%r297, %f299;
	mov.b32 	%r304, %f333;
	mov.b32 	%r315, %f368;
	mov.b32 	%r322, %f402;
	mov.b32 	%r333, %f437;
	mov.b32 	%r340, %f471;
	mov.b32 	%r351, %f506;
	mov.b32 	%r358, %f540;
	mov.b32 	%r369, %f575;
	cvt.rn.f32.s32 	%f602, %r14;
	sub.f32 	%f603, %f602, %f140;
	div.approx.f32 	%f605, %f603, %f225;
	abs.f32 	%f606, %f605;
	setp.gt.f32 	%p85, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	selp.f32 	%f608, %f607, %f605, %p85;
	add.f32 	%f609, %f608, %f608;
	mov.b32 	%r376, %f609;
	div.approx.f32 	%f50, %f603, %f253;
	setp.eq.f32 	%p90, %f50, 0f00000000;
	mov.f32 	%f1273, %f1277;
	@%p90 bra 	$L__BB0_35;
// %bb.34:                              // %L1294
	sin.approx.f32 	%f633, %f50;
	div.approx.f32 	%f1273, %f633, %f50;
$L__BB0_35:                             // %L1297
	and.b32  	%r280, %r279, -2147483648;
	and.b32  	%r287, %r286, -2147483648;
	and.b32  	%r298, %r297, -2147483648;
	and.b32  	%r305, %r304, -2147483648;
	and.b32  	%r316, %r315, -2147483648;
	and.b32  	%r323, %r322, -2147483648;
	and.b32  	%r334, %r333, -2147483648;
	and.b32  	%r341, %r340, -2147483648;
	and.b32  	%r352, %r351, -2147483648;
	and.b32  	%r359, %r358, -2147483648;
	and.b32  	%r370, %r369, -2147483648;
	and.b32  	%r377, %r376, -2147483648;
	or.b32  	%r386, %r191, 384;
	or.b32  	%r16, %r191, 448;
	cvt.rn.f32.s32 	%f637, %r386;
	sub.f32 	%f638, %f637, %f140;
	div.approx.f32 	%f640, %f638, %f225;
	abs.f32 	%f641, %f640;
	setp.gt.f32 	%p91, %f641, 0f4B800000;
	mul.f32 	%f642, %f640, 0f00000000;
	selp.f32 	%f643, %f642, %f640, %p91;
	add.f32 	%f644, %f643, %f643;
	mov.b32 	%r387, %f644;
	and.b32  	%r388, %r387, -2147483648;
	div.approx.f32 	%f54, %f638, %f253;
	setp.eq.f32 	%p96, %f54, 0f00000000;
	mov.f32 	%f1274, %f1277;
	@%p96 bra 	$L__BB0_37;
// %bb.36:                              // %L1376
	sin.approx.f32 	%f668, %f54;
	div.approx.f32 	%f1274, %f668, %f54;
$L__BB0_37:                             // %L1379
	or.b32  	%r281, %r280, 1056964608;
	or.b32  	%r288, %r287, 1056964608;
	or.b32  	%r299, %r298, 1056964608;
	or.b32  	%r306, %r305, 1056964608;
	or.b32  	%r317, %r316, 1056964608;
	or.b32  	%r324, %r323, 1056964608;
	or.b32  	%r335, %r334, 1056964608;
	or.b32  	%r342, %r341, 1056964608;
	or.b32  	%r353, %r352, 1056964608;
	or.b32  	%r360, %r359, 1056964608;
	or.b32  	%r371, %r370, 1056964608;
	or.b32  	%r378, %r377, 1056964608;
	or.b32  	%r389, %r388, 1056964608;
	cvt.rn.f32.s32 	%f671, %r16;
	sub.f32 	%f672, %f671, %f140;
	div.approx.f32 	%f674, %f672, %f225;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p97, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	selp.f32 	%f677, %f676, %f674, %p97;
	add.f32 	%f678, %f677, %f677;
	mov.b32 	%r394, %f678;
	and.b32  	%r395, %r394, -2147483648;
	or.b32  	%r396, %r395, 1056964608;
	div.approx.f32 	%f59, %f672, %f253;
	setp.eq.f32 	%p102, %f59, 0f00000000;
	mov.f32 	%f1275, %f1277;
	@%p102 bra 	$L__BB0_39;
// %bb.38:                              // %L1396
	sin.approx.f32 	%f702, %f59;
	div.approx.f32 	%f1275, %f702, %f59;
$L__BB0_39:                             // %L1399
	mov.b32 	%f231, %r281;
	mov.b32 	%f265, %r288;
	mov.b32 	%f300, %r299;
	mov.b32 	%f334, %r306;
	mov.b32 	%f369, %r317;
	mov.b32 	%f403, %r324;
	mov.b32 	%f438, %r335;
	mov.b32 	%f472, %r342;
	mov.b32 	%f507, %r353;
	mov.b32 	%f541, %r360;
	mov.b32 	%f576, %r371;
	mov.b32 	%f610, %r378;
	mov.b32 	%f645, %r389;
	mov.b32 	%f679, %r396;
	or.b32  	%r404, %r191, 385;
	or.b32  	%r18, %r191, 449;
	cvt.rn.f32.s32 	%f706, %r404;
	sub.f32 	%f707, %f706, %f140;
	div.approx.f32 	%f709, %f707, %f225;
	abs.f32 	%f710, %f709;
	setp.gt.f32 	%p103, %f710, 0f4B800000;
	mul.f32 	%f711, %f709, 0f00000000;
	selp.f32 	%f712, %f711, %f709, %p103;
	add.f32 	%f713, %f712, %f712;
	mov.b32 	%r405, %f713;
	and.b32  	%r406, %r405, -2147483648;
	or.b32  	%r407, %r406, 1056964608;
	mov.b32 	%f714, %r407;
	div.approx.f32 	%f63, %f707, %f253;
	setp.eq.f32 	%p108, %f63, 0f00000000;
	mov.f32 	%f1276, %f1277;
	@%p108 bra 	$L__BB0_41;
// %bb.40:                              // %L1478
	sin.approx.f32 	%f737, %f63;
	div.approx.f32 	%f1276, %f737, %f63;
$L__BB0_41:                             // %L1481
	add.f32 	%f232, %f230, %f231;
	abs.f32 	%f234, %f230;
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f301, %f299, %f300;
	abs.f32 	%f303, %f299;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f370, %f368, %f369;
	abs.f32 	%f372, %f368;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f439, %f437, %f438;
	abs.f32 	%f441, %f437;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f508, %f506, %f507;
	abs.f32 	%f510, %f506;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f577, %f575, %f576;
	abs.f32 	%f579, %f575;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f646, %f644, %f645;
	abs.f32 	%f648, %f644;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f715, %f713, %f714;
	abs.f32 	%f717, %f713;
	shr.u32 	%r183, %r3, 1;
	shr.u32 	%r189, %r3, 3;
	cvt.rn.f32.s32 	%f740, %r18;
	sub.f32 	%f741, %f740, %f140;
	div.approx.f32 	%f743, %f741, %f225;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p109, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p109;
	add.f32 	%f747, %f746, %f746;
	mov.b32 	%r412, %f747;
	and.b32  	%r413, %r412, -2147483648;
	or.b32  	%r414, %r413, 1056964608;
	mov.b32 	%f748, %r414;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	div.approx.f32 	%f68, %f741, %f253;
	setp.eq.f32 	%p114, %f68, 0f00000000;
	@%p114 bra 	$L__BB0_43;
// %bb.42:                              // %L1498
	sin.approx.f32 	%f771, %f68;
	div.approx.f32 	%f1277, %f771, %f68;
$L__BB0_43:                             // %L1501
	cvt.rzi.f32.f32 	%f233, %f232;
	setp.gt.f32 	%p20, %f234, 0f4B000000;
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p26, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f302, %f301;
	setp.gt.f32 	%p32, %f303, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p38, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f371, %f370;
	setp.gt.f32 	%p44, %f372, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p50, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f440, %f439;
	setp.gt.f32 	%p56, %f441, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p62, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f509, %f508;
	setp.gt.f32 	%p68, %f510, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p74, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f578, %f577;
	setp.gt.f32 	%p80, %f579, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p86, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f647, %f646;
	setp.gt.f32 	%p92, %f648, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p98, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f716, %f715;
	setp.gt.f32 	%p104, %f717, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p110, %f751, 0f4B000000;
	mul.lo.s32 	%r434, %r191, 127;
	and.b32  	%r435, %r434, 255;
	cvt.rn.f32.s32 	%f774, %r435;
	div.approx.f32 	%f776, %f774, %f253;
	add.f32 	%f777, %f776, %f776;
	mov.b32 	%r436, %f777;
	and.b32  	%r437, %r436, -2147483648;
	or.b32  	%r438, %r437, 1056964608;
	mov.b32 	%f778, %r438;
	add.f32 	%f779, %f777, %f778;
	cvt.rzi.f32.f32 	%f780, %f779;
	abs.f32 	%f781, %f777;
	setp.gt.f32 	%p115, %f781, 0f4B000000;
	selp.f32 	%f782, %f777, %f780, %p115;
	cvt.rzi.f32.f32 	%f783, %f777;
	setp.lt.f32 	%p116, %f781, 0f3F000000;
	add.s32 	%r444, %r434, 192;
	and.b32  	%r445, %r444, 255;
	cvt.rn.f32.s32 	%f809, %r445;
	div.approx.f32 	%f810, %f809, %f253;
	add.f32 	%f811, %f810, %f810;
	mov.b32 	%r446, %f811;
	and.b32  	%r447, %r446, -2147483648;
	or.b32  	%r448, %r447, 1056964608;
	mov.b32 	%f812, %r448;
	add.f32 	%f813, %f811, %f812;
	cvt.rzi.f32.f32 	%f814, %f813;
	abs.f32 	%f815, %f811;
	setp.gt.f32 	%p122, %f815, 0f4B000000;
	selp.f32 	%f816, %f811, %f814, %p122;
	cvt.rzi.f32.f32 	%f817, %f811;
	setp.lt.f32 	%p123, %f815, 0f3F000000;
	and.b32  	%r454, %r189, 2;
	and.b32  	%r455, %r183, 4;
	or.b32  	%r456, %r187, %r454;
	or.b32  	%r24, %r456, %r455;
	and.b32  	%r457, %r3, 3;
	mul.lo.s32 	%r458, %r457, %r24;
	shl.b32 	%r459, %r458, 1;
	neg.s32 	%r460, %r459;
	cvt.rn.f32.s32 	%f842, %r460;
	mov.f32 	%f843, 0f41000000;
	div.approx.f32 	%f71, %f842, %f843;
	abs.f32 	%f1296, %f71;
	setp.lt.f32 	%p129, %f1296, 0f40000000;
	@%p129 bra 	$L__BB0_131;
// %bb.44:
	setp.gtu.f32 	%p130, %f1296, 0f4B800000;
	@%p130 bra 	$L__BB0_127;
	bra.uni 	$L__BB0_45;
$L__BB0_127:
	mov.b32 	%r194, %f1296;
	and.b32  	%r461, %r194, 8388607;
	or.b32  	%r16378, %r461, 1065353216;
	mov.b32 	%f1295, %r16378;
	add.s32 	%r462, %r194, -1073741824;
	and.b32  	%r16379, %r462, -8388608;
	setp.eq.s32 	%p136, %r16379, 0;
	@%p136 bra 	$L__BB0_130;
// %bb.128:                             // %__nv_fmaf_rn.exit4.i.i.i1712.preheader
	mov.f32 	%f853, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f852,%f853;
	// end inline asm
$L__BB0_129:                            // %__nv_fmaf_rn.exit4.i.i.i1712
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r463, %r16379, 192937984;
	add.s32 	%r464, %r16378, %r463;
	mov.b32 	%f854, %r464;
	mul.f32 	%f855, %f852, %f854;
	sub.f32 	%f856, %f854, %f855;
	fma.rn.f32 	%f857, %f856, %f852, %f855;
	sub.f32 	%f858, %f854, %f857;
	fma.rz.f32 	%f859, %f858, %f852, %f857;
	cvt.rzi.f32.f32 	%f860, %f859;
	sub.f32 	%f1295, %f854, %f860;
	sub.s32 	%r16379, %r16379, %r463;
	mov.b32 	%r16378, %f1295;
	setp.ne.s32 	%p137, %r16379, 0;
	setp.ne.s32 	%p138, %r16378, 0;
	and.pred  	%p139, %p137, %p138;
	@%p139 bra 	$L__BB0_129;
$L__BB0_130:                            // %__internal_fmodf_slowpath_mod.exit.i.i1714
	setp.gt.u32 	%p140, %r194, 2139095039;
	selp.f32 	%f861, 0f7FFFFFFF, 0f4B800000, %p140;
	mul.f32 	%f862, %f1295, 0f34000000;
	mul.f32 	%f1296, %f861, %f862;
	bra.uni 	$L__BB0_131;
$L__BB0_45:                             // %__nv_fast_fdividef.exit.i.i.i1691
	div.approx.f32 	%f845, %f1296, %f221;
	cvt.rzi.f32.f32 	%f1294, %f845;
	fma.rn.f32 	%f144, %f1294, 0fC0000000, %f1296;
	mov.b32 	%r193, %f144;
	setp.lt.u32 	%p131, %r193, 1073741824;
	@%p131 bra 	$L__BB0_126;
// %bb.46:
	setp.lt.u32 	%p132, %r193, -2147483647;
	@%p132 bra 	$L__BB0_124;
// %bb.47:
	add.f32 	%f850, %f1294, 0fBF800000;
	setp.lt.f32 	%p135, %f144, 0fC0000000;
	add.f32 	%f851, %f850, 0fBF800000;
	selp.f32 	%f1294, %f851, %f850, %p135;
	bra.uni 	$L__BB0_126;
$L__BB0_124:
	add.f32 	%f1294, %f1294, 0f3F800000;
	setp.ltu.f32 	%p133, %f144, 0f40800000;
	@%p133 bra 	$L__BB0_126;
// %bb.125:                             // %__nv_fmaf_rn.exit.i.i.i1695
	add.f32 	%f846, %f1294, 0f3F800000;
	fma.rn.f32 	%f848, %f221, 0fC0400000, %f144;
	setp.ge.f32 	%p134, %f848, 0f00000000;
	add.f32 	%f849, %f846, 0f3F800000;
	selp.f32 	%f1294, %f849, %f846, %p134;
$L__BB0_126:                            // %__internal_fmodf_fastpath_quot.exit.i.i1698
	fma.rn.f32 	%f1296, %f1294, 0fC0000000, %f1296;
$L__BB0_131:                            // %__internal_fmodf_kernel.exit.i1717
	selp.f32 	%f235, %f230, %f233, %p20;
	cvt.rzi.f32.f32 	%f236, %f230;
	setp.lt.f32 	%p21, %f234, 0f3F000000;
	selp.f32 	%f269, %f264, %f267, %p26;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p27, %f268, 0f3F000000;
	selp.f32 	%f304, %f299, %f302, %p32;
	cvt.rzi.f32.f32 	%f305, %f299;
	setp.lt.f32 	%p33, %f303, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p38;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p39, %f337, 0f3F000000;
	selp.f32 	%f373, %f368, %f371, %p44;
	cvt.rzi.f32.f32 	%f374, %f368;
	setp.lt.f32 	%p45, %f372, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p50;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p51, %f406, 0f3F000000;
	selp.f32 	%f442, %f437, %f440, %p56;
	cvt.rzi.f32.f32 	%f443, %f437;
	setp.lt.f32 	%p57, %f441, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p62;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p63, %f475, 0f3F000000;
	selp.f32 	%f511, %f506, %f509, %p68;
	cvt.rzi.f32.f32 	%f512, %f506;
	setp.lt.f32 	%p69, %f510, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p74;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p75, %f544, 0f3F000000;
	selp.f32 	%f580, %f575, %f578, %p80;
	cvt.rzi.f32.f32 	%f581, %f575;
	setp.lt.f32 	%p81, %f579, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p86;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p87, %f613, 0f3F000000;
	selp.f32 	%f649, %f644, %f647, %p92;
	cvt.rzi.f32.f32 	%f650, %f644;
	setp.lt.f32 	%p93, %f648, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p98;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p99, %f682, 0f3F000000;
	selp.f32 	%f718, %f713, %f716, %p104;
	cvt.rzi.f32.f32 	%f719, %f713;
	setp.lt.f32 	%p105, %f717, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p110;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p111, %f751, 0f3F000000;
	selp.f32 	%f784, %f783, %f782, %p116;
	selp.f32 	%f818, %f817, %f816, %p123;
	shl.b32 	%r177, %r3, 1;
	abs.f32 	%f863, %f1296;
	setp.gtu.f32 	%p141, %f863, 0f7F800000;
	@%p141 bra 	$L__BB0_133;
// %bb.132:
	mov.b32 	%r465, %f71;
	and.b32  	%r466, %r465, -2147483648;
	mov.b32 	%r467, %f1296;
	or.b32  	%r468, %r466, %r467;
	mov.b32 	%f1296, %r468;
$L__BB0_133:                            // %__nv_fmodf.exit1718
	selp.f32 	%f237, %f236, %f235, %p21;
	selp.f32 	%f271, %f270, %f269, %p27;
	selp.f32 	%f306, %f305, %f304, %p33;
	selp.f32 	%f340, %f339, %f338, %p39;
	selp.f32 	%f375, %f374, %f373, %p45;
	selp.f32 	%f409, %f408, %f407, %p51;
	selp.f32 	%f444, %f443, %f442, %p57;
	selp.f32 	%f478, %f477, %f476, %p63;
	selp.f32 	%f513, %f512, %f511, %p69;
	selp.f32 	%f547, %f546, %f545, %p75;
	selp.f32 	%f582, %f581, %f580, %p81;
	selp.f32 	%f616, %f615, %f614, %p87;
	selp.f32 	%f651, %f650, %f649, %p93;
	selp.f32 	%f685, %f684, %f683, %p99;
	selp.f32 	%f720, %f719, %f718, %p105;
	selp.f32 	%f754, %f753, %f752, %p111;
	fma.rn.f32 	%f785, %f784, 0fBF000000, %f776;
	fma.rn.f32 	%f819, %f818, 0fBF000000, %f810;
	add.f32 	%f864, %f1296, %f1296;
	mov.b32 	%r469, %f864;
	and.b32  	%r470, %r469, -2147483648;
	or.b32  	%r471, %r470, 1056964608;
	mov.b32 	%f865, %r471;
	add.f32 	%f866, %f864, %f865;
	cvt.rzi.f32.f32 	%f867, %f866;
	abs.f32 	%f868, %f864;
	setp.gt.f32 	%p142, %f868, 0f4B000000;
	selp.f32 	%f869, %f864, %f867, %p142;
	cvt.rzi.f32.f32 	%f870, %f864;
	setp.lt.f32 	%p143, %f868, 0f3F000000;
	selp.f32 	%f871, %f870, %f869, %p143;
	fma.rn.f32 	%f872, %f871, 0fBF000000, %f1296;
	and.b32  	%r477, %r177, 6;
	mov.u32 	%r478, -8;
	sub.s32 	%r479, %r478, %r477;
	mul.lo.s32 	%r480, %r24, %r479;
	cvt.rn.f32.s32 	%f894, %r480;
	div.approx.f32 	%f160, %f894, %f843;
	abs.f32 	%f1280, %f160;
	setp.lt.f32 	%p149, %f1280, 0f40000000;
	@%p149 bra 	$L__BB0_59;
// %bb.48:
	setp.gtu.f32 	%p150, %f1280, 0f4B800000;
	@%p150 bra 	$L__BB0_55;
	bra.uni 	$L__BB0_49;
$L__BB0_55:
	mov.b32 	%r26, %f1280;
	and.b32  	%r481, %r26, 8388607;
	or.b32  	%r16320, %r481, 1065353216;
	mov.b32 	%f1279, %r16320;
	add.s32 	%r482, %r26, -1073741824;
	and.b32  	%r16321, %r482, -8388608;
	setp.eq.s32 	%p156, %r16321, 0;
	@%p156 bra 	$L__BB0_58;
// %bb.56:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f905, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f904,%f905;
	// end inline asm
$L__BB0_57:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r483, %r16321, 192937984;
	add.s32 	%r484, %r16320, %r483;
	mov.b32 	%f906, %r484;
	mul.f32 	%f907, %f904, %f906;
	sub.f32 	%f908, %f906, %f907;
	fma.rn.f32 	%f909, %f908, %f904, %f907;
	sub.f32 	%f910, %f906, %f909;
	fma.rz.f32 	%f911, %f910, %f904, %f909;
	cvt.rzi.f32.f32 	%f912, %f911;
	sub.f32 	%f1279, %f906, %f912;
	sub.s32 	%r16321, %r16321, %r483;
	mov.b32 	%r16320, %f1279;
	setp.ne.s32 	%p157, %r16321, 0;
	setp.ne.s32 	%p158, %r16320, 0;
	and.pred  	%p159, %p157, %p158;
	@%p159 bra 	$L__BB0_57;
$L__BB0_58:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p160, %r26, 2139095039;
	selp.f32 	%f913, 0f7FFFFFFF, 0f4B800000, %p160;
	mul.f32 	%f914, %f1279, 0f34000000;
	mul.f32 	%f1280, %f913, %f914;
	bra.uni 	$L__BB0_59;
$L__BB0_49:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f897, %f1280, %f221;
	cvt.rzi.f32.f32 	%f1278, %f897;
	fma.rn.f32 	%f74, %f1278, 0fC0000000, %f1280;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p151, %r25, 1073741824;
	@%p151 bra 	$L__BB0_54;
// %bb.50:
	setp.lt.u32 	%p152, %r25, -2147483647;
	@%p152 bra 	$L__BB0_52;
// %bb.51:
	add.f32 	%f902, %f1278, 0fBF800000;
	setp.lt.f32 	%p155, %f74, 0fC0000000;
	add.f32 	%f903, %f902, 0fBF800000;
	selp.f32 	%f1278, %f903, %f902, %p155;
	bra.uni 	$L__BB0_54;
$L__BB0_52:
	add.f32 	%f1278, %f1278, 0f3F800000;
	setp.ltu.f32 	%p153, %f74, 0f40800000;
	@%p153 bra 	$L__BB0_54;
// %bb.53:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f898, %f1278, 0f3F800000;
	fma.rn.f32 	%f900, %f221, 0fC0400000, %f74;
	setp.ge.f32 	%p154, %f900, 0f00000000;
	add.f32 	%f901, %f898, 0f3F800000;
	selp.f32 	%f1278, %f901, %f898, %p154;
$L__BB0_54:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1280, %f1278, 0fC0000000, %f1280;
$L__BB0_59:                             // %__internal_fmodf_kernel.exit.i
	fma.rn.f32 	%f238, %f237, 0fBF000000, %f229;
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f307, %f306, 0fBF000000, %f298;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f376, %f375, 0fBF000000, %f367;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f445, %f444, 0fBF000000, %f436;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f514, %f513, 0fBF000000, %f505;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f583, %f582, 0fBF000000, %f574;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f652, %f651, 0fBF000000, %f643;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f721, %f720, 0fBF000000, %f712;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	mul.f32 	%f786, %f785, %f785;
	mul.f32 	%f820, %f819, %f819;
	mul.f32 	%f873, %f872, %f872;
	abs.f32 	%f915, %f1280;
	setp.gtu.f32 	%p161, %f915, 0f7F800000;
	@%p161 bra 	$L__BB0_61;
// %bb.60:
	mov.b32 	%r485, %f160;
	and.b32  	%r486, %r485, -2147483648;
	mov.b32 	%r487, %f1280;
	or.b32  	%r488, %r486, %r487;
	mov.b32 	%f1280, %r488;
$L__BB0_61:                             // %__nv_fmodf.exit
	mul.f32 	%f239, %f238, %f238;
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f308, %f307, %f307;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f377, %f376, %f376;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f446, %f445, %f445;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f515, %f514, %f514;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f584, %f583, %f583;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f653, %f652, %f652;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f722, %f721, %f721;
	mul.f32 	%f756, %f755, %f755;
	fma.rn.f32 	%f787, %f786, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f788, %f786, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f821, %f820, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f822, %f820, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f874, %f873, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f875, %f873, 0f3E684E12, 0fBFAAD2E0;
	add.f32 	%f916, %f1280, %f1280;
	mov.b32 	%r501, %f916;
	and.b32  	%r502, %r501, -2147483648;
	or.b32  	%r503, %r502, 1056964608;
	mov.b32 	%f917, %r503;
	add.f32 	%f918, %f916, %f917;
	cvt.rzi.f32.f32 	%f919, %f918;
	abs.f32 	%f920, %f916;
	setp.gt.f32 	%p162, %f920, 0f4B000000;
	selp.f32 	%f921, %f916, %f919, %p162;
	cvt.rzi.f32.f32 	%f922, %f916;
	setp.lt.f32 	%p163, %f920, 0f3F000000;
	selp.f32 	%f923, %f922, %f921, %p163;
	fma.rn.f32 	%f924, %f923, 0fBF000000, %f1280;
	mul.f32 	%f925, %f924, %f924;
	fma.rn.f32 	%f926, %f925, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f927, %f925, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r509, %r185, 2147483646;
	shl.b32 	%r510, %r184, 2;
	sub.s32 	%r511, %r509, %r510;
	mul.lo.s32 	%r512, %r511, %r24;
	shl.b32 	%r37, %r512, 1;
	cvt.rn.f32.s32 	%f88, %r37;
	mov.f32 	%f948, 0f42800000;
	div.approx.f32 	%f89, %f88, %f948;
	abs.f32 	%f1300, %f89;
	setp.lt.f32 	%p169, %f1300, 0f40000000;
	@%p169 bra 	$L__BB0_141;
// %bb.62:
	setp.gtu.f32 	%p170, %f1300, 0f4B800000;
	@%p170 bra 	$L__BB0_137;
	bra.uni 	$L__BB0_63;
$L__BB0_137:
	mov.b32 	%r202, %f1300;
	and.b32  	%r513, %r202, 8388607;
	or.b32  	%r16380, %r513, 1065353216;
	mov.b32 	%f1299, %r16380;
	add.s32 	%r514, %r202, -1073741824;
	and.b32  	%r16381, %r514, -8388608;
	setp.eq.s32 	%p176, %r16381, 0;
	@%p176 bra 	$L__BB0_140;
// %bb.138:                             // %__nv_fmaf_rn.exit4.i.i.i1743.preheader
	mov.f32 	%f958, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f957,%f958;
	// end inline asm
$L__BB0_139:                            // %__nv_fmaf_rn.exit4.i.i.i1743
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r515, %r16381, 192937984;
	add.s32 	%r516, %r16380, %r515;
	mov.b32 	%f959, %r516;
	mul.f32 	%f960, %f957, %f959;
	sub.f32 	%f961, %f959, %f960;
	fma.rn.f32 	%f962, %f961, %f957, %f960;
	sub.f32 	%f963, %f959, %f962;
	fma.rz.f32 	%f964, %f963, %f957, %f962;
	cvt.rzi.f32.f32 	%f965, %f964;
	sub.f32 	%f1299, %f959, %f965;
	sub.s32 	%r16381, %r16381, %r515;
	mov.b32 	%r16380, %f1299;
	setp.ne.s32 	%p177, %r16381, 0;
	setp.ne.s32 	%p178, %r16380, 0;
	and.pred  	%p179, %p177, %p178;
	@%p179 bra 	$L__BB0_139;
$L__BB0_140:                            // %__internal_fmodf_slowpath_mod.exit.i.i1745
	setp.gt.u32 	%p180, %r202, 2139095039;
	selp.f32 	%f966, 0f7FFFFFFF, 0f4B800000, %p180;
	mul.f32 	%f967, %f1299, 0f34000000;
	mul.f32 	%f1300, %f966, %f967;
	bra.uni 	$L__BB0_141;
$L__BB0_63:                             // %__nv_fast_fdividef.exit.i.i.i1722
	div.approx.f32 	%f950, %f1300, %f221;
	cvt.rzi.f32.f32 	%f1298, %f950;
	fma.rn.f32 	%f163, %f1298, 0fC0000000, %f1300;
	mov.b32 	%r201, %f163;
	setp.lt.u32 	%p171, %r201, 1073741824;
	@%p171 bra 	$L__BB0_136;
// %bb.64:
	setp.lt.u32 	%p172, %r201, -2147483647;
	@%p172 bra 	$L__BB0_134;
// %bb.65:
	add.f32 	%f955, %f1298, 0fBF800000;
	setp.lt.f32 	%p175, %f163, 0fC0000000;
	add.f32 	%f956, %f955, 0fBF800000;
	selp.f32 	%f1298, %f956, %f955, %p175;
	bra.uni 	$L__BB0_136;
$L__BB0_134:
	add.f32 	%f1298, %f1298, 0f3F800000;
	setp.ltu.f32 	%p173, %f163, 0f40800000;
	@%p173 bra 	$L__BB0_136;
// %bb.135:                             // %__nv_fmaf_rn.exit.i.i.i1726
	add.f32 	%f951, %f1298, 0f3F800000;
	fma.rn.f32 	%f953, %f221, 0fC0400000, %f163;
	setp.ge.f32 	%p174, %f953, 0f00000000;
	add.f32 	%f954, %f951, 0f3F800000;
	selp.f32 	%f1298, %f954, %f951, %p174;
$L__BB0_136:                            // %__internal_fmodf_fastpath_quot.exit.i.i1729
	fma.rn.f32 	%f1300, %f1298, 0fC0000000, %f1300;
$L__BB0_141:                            // %__internal_fmodf_kernel.exit.i1748
	cvt.rzi.s32.f32 	%r282, %f237;
	fma.rn.f32 	%f240, %f239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f241, %f239, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r289, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r300, %f306;
	fma.rn.f32 	%f309, %f308, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f310, %f308, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r307, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r318, %f375;
	fma.rn.f32 	%f378, %f377, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f379, %f377, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r325, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r336, %f444;
	fma.rn.f32 	%f447, %f446, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f448, %f446, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r343, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r354, %f513;
	fma.rn.f32 	%f516, %f515, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f517, %f515, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r361, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r372, %f582;
	fma.rn.f32 	%f585, %f584, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f586, %f584, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r379, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r390, %f651;
	fma.rn.f32 	%f654, %f653, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f655, %f653, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r397, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r408, %f720;
	fma.rn.f32 	%f723, %f722, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f724, %f722, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r415, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r439, %f784;
	fma.rn.f32 	%f789, %f787, %f786, 0fC0A55DF6;
	fma.rn.f32 	%f790, %f788, %f786, 0f4081E0CF;
	fma.rn.f32 	%f791, %f786, %f785, 0f00000000;
	cvt.rzi.s32.f32 	%r449, %f818;
	fma.rn.f32 	%f823, %f821, %f820, 0fC0A55DF6;
	fma.rn.f32 	%f824, %f822, %f820, 0f4081E0CF;
	fma.rn.f32 	%f825, %f820, %f819, 0f00000000;
	cvt.rzi.s32.f32 	%r472, %f871;
	fma.rn.f32 	%f876, %f874, %f873, 0fC0A55DF6;
	fma.rn.f32 	%f877, %f875, %f873, 0f4081E0CF;
	fma.rn.f32 	%f878, %f873, %f872, 0f00000000;
	cvt.rzi.s32.f32 	%r504, %f923;
	fma.rn.f32 	%f928, %f926, %f925, 0fC0A55DF6;
	fma.rn.f32 	%f929, %f927, %f925, 0f4081E0CF;
	fma.rn.f32 	%f930, %f925, %f924, 0f00000000;
	abs.f32 	%f968, %f1300;
	setp.gtu.f32 	%p181, %f968, 0f7F800000;
	@%p181 bra 	$L__BB0_143;
// %bb.142:
	mov.b32 	%r517, %f89;
	and.b32  	%r518, %r517, -2147483648;
	mov.b32 	%r519, %f1300;
	or.b32  	%r520, %r518, %r519;
	mov.b32 	%f1300, %r520;
$L__BB0_143:                            // %__nv_fmodf.exit1749
	add.s32 	%r283, %r282, 1;
	fma.rn.f32 	%f242, %f240, %f239, 0fC0A55DF6;
	fma.rn.f32 	%f243, %f241, %f239, 0f4081E0CF;
	fma.rn.f32 	%f244, %f239, %f238, 0f00000000;
	add.s32 	%r290, %r289, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r301, %r300, 1;
	fma.rn.f32 	%f311, %f309, %f308, 0fC0A55DF6;
	fma.rn.f32 	%f312, %f310, %f308, 0f4081E0CF;
	fma.rn.f32 	%f313, %f308, %f307, 0f00000000;
	add.s32 	%r308, %r307, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r319, %r318, 1;
	fma.rn.f32 	%f380, %f378, %f377, 0fC0A55DF6;
	fma.rn.f32 	%f381, %f379, %f377, 0f4081E0CF;
	fma.rn.f32 	%f382, %f377, %f376, 0f00000000;
	add.s32 	%r326, %r325, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r337, %r336, 1;
	fma.rn.f32 	%f449, %f447, %f446, 0fC0A55DF6;
	fma.rn.f32 	%f450, %f448, %f446, 0f4081E0CF;
	fma.rn.f32 	%f451, %f446, %f445, 0f00000000;
	add.s32 	%r344, %r343, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r355, %r354, 1;
	fma.rn.f32 	%f518, %f516, %f515, 0fC0A55DF6;
	fma.rn.f32 	%f519, %f517, %f515, 0f4081E0CF;
	fma.rn.f32 	%f520, %f515, %f514, 0f00000000;
	add.s32 	%r362, %r361, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r373, %r372, 1;
	fma.rn.f32 	%f587, %f585, %f584, 0fC0A55DF6;
	fma.rn.f32 	%f588, %f586, %f584, 0f4081E0CF;
	fma.rn.f32 	%f589, %f584, %f583, 0f00000000;
	add.s32 	%r380, %r379, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r391, %r390, 1;
	fma.rn.f32 	%f656, %f654, %f653, 0fC0A55DF6;
	fma.rn.f32 	%f657, %f655, %f653, 0f4081E0CF;
	fma.rn.f32 	%f658, %f653, %f652, 0f00000000;
	add.s32 	%r398, %r397, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r409, %r408, 1;
	fma.rn.f32 	%f725, %f723, %f722, 0fC0A55DF6;
	fma.rn.f32 	%f726, %f724, %f722, 0f4081E0CF;
	fma.rn.f32 	%f727, %f722, %f721, 0f00000000;
	add.s32 	%r416, %r415, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	fma.rn.f32 	%f792, %f790, %f786, 0fC09DE9E6;
	fma.rn.f32 	%f793, %f789, %f791, 0f00000000;
	and.b32  	%r440, %r439, 1;
	fma.rn.f32 	%f826, %f824, %f820, 0fC09DE9E6;
	fma.rn.f32 	%f827, %f823, %f825, 0f00000000;
	and.b32  	%r450, %r449, 1;
	fma.rn.f32 	%f879, %f877, %f873, 0fC09DE9E6;
	fma.rn.f32 	%f880, %f876, %f878, 0f00000000;
	and.b32  	%r473, %r472, 1;
	fma.rn.f32 	%f931, %f929, %f925, 0fC09DE9E6;
	fma.rn.f32 	%f932, %f928, %f930, 0f00000000;
	and.b32  	%r505, %r504, 1;
	add.f32 	%f969, %f1300, %f1300;
	mov.b32 	%r521, %f969;
	and.b32  	%r522, %r521, -2147483648;
	or.b32  	%r523, %r522, 1056964608;
	mov.b32 	%f970, %r523;
	add.f32 	%f971, %f969, %f970;
	cvt.rzi.f32.f32 	%f972, %f971;
	abs.f32 	%f973, %f969;
	setp.gt.f32 	%p182, %f973, 0f4B000000;
	selp.f32 	%f974, %f969, %f972, %p182;
	cvt.rzi.f32.f32 	%f975, %f969;
	setp.lt.f32 	%p183, %f973, 0f3F000000;
	selp.f32 	%f976, %f975, %f974, %p183;
	cvt.rzi.s32.f32 	%r524, %f976;
	fma.rn.f32 	%f977, %f976, 0fBF000000, %f1300;
	mul.f32 	%f978, %f977, %f977;
	fma.rn.f32 	%f979, %f978, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f980, %f978, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f981, %f979, %f978, 0fC0A55DF6;
	fma.rn.f32 	%f982, %f980, %f978, 0f4081E0CF;
	fma.rn.f32 	%f983, %f978, %f977, 0f00000000;
	shl.b32 	%r529, %r24, 4;
	sub.s32 	%r530, %r37, %r529;
	cvt.rn.f32.s32 	%f179, %r530;
	div.approx.f32 	%f180, %f179, %f948;
	abs.f32 	%f1284, %f180;
	setp.lt.f32 	%p189, %f1284, 0f40000000;
	@%p189 bra 	$L__BB0_77;
// %bb.66:
	setp.gtu.f32 	%p190, %f1284, 0f4B800000;
	@%p190 bra 	$L__BB0_73;
	bra.uni 	$L__BB0_67;
$L__BB0_73:
	mov.b32 	%r39, %f1284;
	and.b32  	%r531, %r39, 8388607;
	or.b32  	%r16322, %r531, 1065353216;
	mov.b32 	%f1283, %r16322;
	add.s32 	%r532, %r39, -1073741824;
	and.b32  	%r16323, %r532, -8388608;
	setp.eq.s32 	%p196, %r16323, 0;
	@%p196 bra 	$L__BB0_76;
// %bb.74:                              // %__nv_fmaf_rn.exit4.i.i.i1619.preheader
	mov.f32 	%f1009, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1008,%f1009;
	// end inline asm
$L__BB0_75:                             // %__nv_fmaf_rn.exit4.i.i.i1619
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r533, %r16323, 192937984;
	add.s32 	%r534, %r16322, %r533;
	mov.b32 	%f1010, %r534;
	mul.f32 	%f1011, %f1008, %f1010;
	sub.f32 	%f1012, %f1010, %f1011;
	fma.rn.f32 	%f1013, %f1012, %f1008, %f1011;
	sub.f32 	%f1014, %f1010, %f1013;
	fma.rz.f32 	%f1015, %f1014, %f1008, %f1013;
	cvt.rzi.f32.f32 	%f1016, %f1015;
	sub.f32 	%f1283, %f1010, %f1016;
	sub.s32 	%r16323, %r16323, %r533;
	mov.b32 	%r16322, %f1283;
	setp.ne.s32 	%p197, %r16323, 0;
	setp.ne.s32 	%p198, %r16322, 0;
	and.pred  	%p199, %p197, %p198;
	@%p199 bra 	$L__BB0_75;
$L__BB0_76:                             // %__internal_fmodf_slowpath_mod.exit.i.i1621
	setp.gt.u32 	%p200, %r39, 2139095039;
	selp.f32 	%f1017, 0f7FFFFFFF, 0f4B800000, %p200;
	mul.f32 	%f1018, %f1283, 0f34000000;
	mul.f32 	%f1284, %f1017, %f1018;
	bra.uni 	$L__BB0_77;
$L__BB0_67:                             // %__nv_fast_fdividef.exit.i.i.i1598
	div.approx.f32 	%f1001, %f1284, %f221;
	cvt.rzi.f32.f32 	%f1282, %f1001;
	fma.rn.f32 	%f92, %f1282, 0fC0000000, %f1284;
	mov.b32 	%r38, %f92;
	setp.lt.u32 	%p191, %r38, 1073741824;
	@%p191 bra 	$L__BB0_72;
// %bb.68:
	setp.lt.u32 	%p192, %r38, -2147483647;
	@%p192 bra 	$L__BB0_70;
// %bb.69:
	add.f32 	%f1006, %f1282, 0fBF800000;
	setp.lt.f32 	%p195, %f92, 0fC0000000;
	add.f32 	%f1007, %f1006, 0fBF800000;
	selp.f32 	%f1282, %f1007, %f1006, %p195;
	bra.uni 	$L__BB0_72;
$L__BB0_70:
	add.f32 	%f1282, %f1282, 0f3F800000;
	setp.ltu.f32 	%p193, %f92, 0f40800000;
	@%p193 bra 	$L__BB0_72;
// %bb.71:                              // %__nv_fmaf_rn.exit.i.i.i1602
	add.f32 	%f1002, %f1282, 0f3F800000;
	fma.rn.f32 	%f1004, %f221, 0fC0400000, %f92;
	setp.ge.f32 	%p194, %f1004, 0f00000000;
	add.f32 	%f1005, %f1002, 0f3F800000;
	selp.f32 	%f1282, %f1005, %f1002, %p194;
$L__BB0_72:                             // %__internal_fmodf_fastpath_quot.exit.i.i1605
	fma.rn.f32 	%f1284, %f1282, 0fC0000000, %f1284;
$L__BB0_77:                             // %__internal_fmodf_kernel.exit.i1624
	shr.u32 	%r266, %r4, 3;
	fma.rn.f32 	%f245, %f243, %f239, 0fC09DE9E6;
	fma.rn.f32 	%f246, %f242, %f244, 0f00000000;
	and.b32  	%r284, %r283, 1;
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r291, %r290, 1;
	fma.rn.f32 	%f314, %f312, %f308, 0fC09DE9E6;
	fma.rn.f32 	%f315, %f311, %f313, 0f00000000;
	and.b32  	%r302, %r301, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r309, %r308, 1;
	fma.rn.f32 	%f383, %f381, %f377, 0fC09DE9E6;
	fma.rn.f32 	%f384, %f380, %f382, 0f00000000;
	and.b32  	%r320, %r319, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r327, %r326, 1;
	fma.rn.f32 	%f452, %f450, %f446, 0fC09DE9E6;
	fma.rn.f32 	%f453, %f449, %f451, 0f00000000;
	and.b32  	%r338, %r337, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r345, %r344, 1;
	fma.rn.f32 	%f521, %f519, %f515, 0fC09DE9E6;
	fma.rn.f32 	%f522, %f518, %f520, 0f00000000;
	and.b32  	%r356, %r355, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r363, %r362, 1;
	fma.rn.f32 	%f590, %f588, %f584, 0fC09DE9E6;
	fma.rn.f32 	%f591, %f587, %f589, 0f00000000;
	and.b32  	%r374, %r373, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r381, %r380, 1;
	fma.rn.f32 	%f659, %f657, %f653, 0fC09DE9E6;
	fma.rn.f32 	%f660, %f656, %f658, 0f00000000;
	and.b32  	%r392, %r391, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r399, %r398, 1;
	fma.rn.f32 	%f728, %f726, %f722, 0fC09DE9E6;
	fma.rn.f32 	%f729, %f725, %f727, 0f00000000;
	and.b32  	%r410, %r409, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r417, %r416, 1;
	fma.rn.f32 	%f794, %f792, %f786, 0f3F800000;
	fma.rn.f32 	%f795, %f785, 0f40490FDB, %f793;
	setp.eq.b32 	%p117, %r440, 1;
	fma.rn.f32 	%f828, %f826, %f820, 0f3F800000;
	fma.rn.f32 	%f829, %f819, 0f40490FDB, %f827;
	setp.eq.b32 	%p124, %r450, 1;
	fma.rn.f32 	%f881, %f879, %f873, 0f3F800000;
	fma.rn.f32 	%f882, %f872, 0f40490FDB, %f880;
	setp.eq.b32 	%p144, %r473, 1;
	fma.rn.f32 	%f933, %f931, %f925, 0f3F800000;
	fma.rn.f32 	%f934, %f924, 0f40490FDB, %f932;
	setp.eq.b32 	%p164, %r505, 1;
	fma.rn.f32 	%f984, %f982, %f978, 0fC09DE9E6;
	fma.rn.f32 	%f985, %f981, %f983, 0f00000000;
	and.b32  	%r525, %r524, 1;
	abs.f32 	%f1019, %f1284;
	setp.gtu.f32 	%p201, %f1019, 0f7F800000;
	@%p201 bra 	$L__BB0_79;
// %bb.78:
	mov.b32 	%r535, %f180;
	and.b32  	%r536, %r535, -2147483648;
	mov.b32 	%r537, %f1284;
	or.b32  	%r538, %r536, %r537;
	mov.b32 	%f1284, %r538;
$L__BB0_79:                             // %__nv_fmodf.exit1625
	shl.b32 	%r173, %r3, 2;
	and.b32  	%r179, %r3, 18;
	cvt.u16.u32 	%rs2, %r266;
	fma.rn.f32 	%f247, %f245, %f239, 0f3F800000;
	fma.rn.f32 	%f248, %f238, 0f40490FDB, %f246;
	setp.eq.b32 	%p22, %r284, 1;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p28, %r291, 1;
	fma.rn.f32 	%f316, %f314, %f308, 0f3F800000;
	fma.rn.f32 	%f317, %f307, 0f40490FDB, %f315;
	setp.eq.b32 	%p34, %r302, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p40, %r309, 1;
	fma.rn.f32 	%f385, %f383, %f377, 0f3F800000;
	fma.rn.f32 	%f386, %f376, 0f40490FDB, %f384;
	setp.eq.b32 	%p46, %r320, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p52, %r327, 1;
	fma.rn.f32 	%f454, %f452, %f446, 0f3F800000;
	fma.rn.f32 	%f455, %f445, 0f40490FDB, %f453;
	setp.eq.b32 	%p58, %r338, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p64, %r345, 1;
	fma.rn.f32 	%f523, %f521, %f515, 0f3F800000;
	fma.rn.f32 	%f524, %f514, 0f40490FDB, %f522;
	setp.eq.b32 	%p70, %r356, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p76, %r363, 1;
	fma.rn.f32 	%f592, %f590, %f584, 0f3F800000;
	fma.rn.f32 	%f593, %f583, 0f40490FDB, %f591;
	setp.eq.b32 	%p82, %r374, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p88, %r381, 1;
	fma.rn.f32 	%f661, %f659, %f653, 0f3F800000;
	fma.rn.f32 	%f662, %f652, 0f40490FDB, %f660;
	setp.eq.b32 	%p94, %r392, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p100, %r399, 1;
	fma.rn.f32 	%f730, %f728, %f722, 0f3F800000;
	fma.rn.f32 	%f731, %f721, 0f40490FDB, %f729;
	setp.eq.b32 	%p106, %r410, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p112, %r417, 1;
	selp.f32 	%f796, %f794, %f795, %p117;
	and.b32  	%r441, %r439, 2;
	selp.f32 	%f830, %f828, %f829, %p124;
	and.b32  	%r451, %r449, 2;
	selp.f32 	%f883, %f881, %f882, %p144;
	and.b32  	%r474, %r472, 2;
	selp.f32 	%f935, %f933, %f934, %p164;
	and.b32  	%r506, %r504, 2;
	fma.rn.f32 	%f986, %f984, %f978, 0f3F800000;
	fma.rn.f32 	%f987, %f977, 0f40490FDB, %f985;
	setp.eq.b32 	%p184, %r525, 1;
	add.f32 	%f1020, %f1284, %f1284;
	mov.b32 	%r545, %f1020;
	and.b32  	%r546, %r545, -2147483648;
	or.b32  	%r547, %r546, 1056964608;
	mov.b32 	%f1021, %r547;
	add.f32 	%f1022, %f1020, %f1021;
	cvt.rzi.f32.f32 	%f1023, %f1022;
	abs.f32 	%f1024, %f1020;
	setp.gt.f32 	%p202, %f1024, 0f4B000000;
	selp.f32 	%f1025, %f1020, %f1023, %p202;
	cvt.rzi.f32.f32 	%f1026, %f1020;
	setp.lt.f32 	%p203, %f1024, 0f3F000000;
	selp.f32 	%f1027, %f1026, %f1025, %p203;
	cvt.rzi.s32.f32 	%r548, %f1027;
	fma.rn.f32 	%f1028, %f1027, 0fBF000000, %f1284;
	mul.f32 	%f1029, %f1028, %f1028;
	fma.rn.f32 	%f1030, %f1029, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1031, %f1029, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1032, %f1030, %f1029, 0fC0A55DF6;
	fma.rn.f32 	%f1033, %f1031, %f1029, 0f4081E0CF;
	fma.rn.f32 	%f1034, %f1029, %f1028, 0f00000000;
	fma.rn.f32 	%f1035, %f1033, %f1029, 0fC09DE9E6;
	fma.rn.f32 	%f1036, %f1032, %f1034, 0f00000000;
	fma.rn.f32 	%f1037, %f1035, %f1029, 0f3F800000;
	fma.rn.f32 	%f1038, %f1028, 0f40490FDB, %f1036;
	and.b32  	%r549, %r548, 1;
	setp.eq.b32 	%p204, %r549, 1;
	div.approx.f32 	%f106, %f88, %f843;
	abs.f32 	%f1304, %f106;
	setp.lt.f32 	%p209, %f1304, 0f40000000;
	@%p209 bra 	$L__BB0_151;
// %bb.80:
	setp.gtu.f32 	%p210, %f1304, 0f4B800000;
	@%p210 bra 	$L__BB0_147;
	bra.uni 	$L__BB0_81;
$L__BB0_147:
	mov.b32 	%r210, %f1304;
	and.b32  	%r553, %r210, 8388607;
	or.b32  	%r16382, %r553, 1065353216;
	mov.b32 	%f1303, %r16382;
	add.s32 	%r554, %r210, -1073741824;
	and.b32  	%r16383, %r554, -8388608;
	setp.eq.s32 	%p216, %r16383, 0;
	@%p216 bra 	$L__BB0_150;
// %bb.148:                             // %__nv_fmaf_rn.exit4.i.i.i1774.preheader
	mov.f32 	%f1062, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1061,%f1062;
	// end inline asm
$L__BB0_149:                            // %__nv_fmaf_rn.exit4.i.i.i1774
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r555, %r16383, 192937984;
	add.s32 	%r556, %r16382, %r555;
	mov.b32 	%f1063, %r556;
	mul.f32 	%f1064, %f1061, %f1063;
	sub.f32 	%f1065, %f1063, %f1064;
	fma.rn.f32 	%f1066, %f1065, %f1061, %f1064;
	sub.f32 	%f1067, %f1063, %f1066;
	fma.rz.f32 	%f1068, %f1067, %f1061, %f1066;
	cvt.rzi.f32.f32 	%f1069, %f1068;
	sub.f32 	%f1303, %f1063, %f1069;
	sub.s32 	%r16383, %r16383, %r555;
	mov.b32 	%r16382, %f1303;
	setp.ne.s32 	%p217, %r16383, 0;
	setp.ne.s32 	%p218, %r16382, 0;
	and.pred  	%p219, %p217, %p218;
	@%p219 bra 	$L__BB0_149;
$L__BB0_150:                            // %__internal_fmodf_slowpath_mod.exit.i.i1776
	setp.gt.u32 	%p220, %r210, 2139095039;
	selp.f32 	%f1070, 0f7FFFFFFF, 0f4B800000, %p220;
	mul.f32 	%f1071, %f1303, 0f34000000;
	mul.f32 	%f1304, %f1070, %f1071;
	bra.uni 	$L__BB0_151;
$L__BB0_81:                             // %__nv_fast_fdividef.exit.i.i.i1753
	div.approx.f32 	%f1054, %f1304, %f221;
	cvt.rzi.f32.f32 	%f1302, %f1054;
	fma.rn.f32 	%f183, %f1302, 0fC0000000, %f1304;
	mov.b32 	%r209, %f183;
	setp.lt.u32 	%p211, %r209, 1073741824;
	@%p211 bra 	$L__BB0_146;
// %bb.82:
	setp.lt.u32 	%p212, %r209, -2147483647;
	@%p212 bra 	$L__BB0_144;
// %bb.83:
	add.f32 	%f1059, %f1302, 0fBF800000;
	setp.lt.f32 	%p215, %f183, 0fC0000000;
	add.f32 	%f1060, %f1059, 0fBF800000;
	selp.f32 	%f1302, %f1060, %f1059, %p215;
	bra.uni 	$L__BB0_146;
$L__BB0_144:
	add.f32 	%f1302, %f1302, 0f3F800000;
	setp.ltu.f32 	%p213, %f183, 0f40800000;
	@%p213 bra 	$L__BB0_146;
// %bb.145:                             // %__nv_fmaf_rn.exit.i.i.i1757
	add.f32 	%f1055, %f1302, 0f3F800000;
	fma.rn.f32 	%f1057, %f221, 0fC0400000, %f183;
	setp.ge.f32 	%p214, %f1057, 0f00000000;
	add.f32 	%f1058, %f1055, 0f3F800000;
	selp.f32 	%f1302, %f1058, %f1055, %p214;
$L__BB0_146:                            // %__internal_fmodf_fastpath_quot.exit.i.i1760
	fma.rn.f32 	%f1304, %f1302, 0fC0000000, %f1304;
$L__BB0_151:                            // %__internal_fmodf_kernel.exit.i1779
	and.b32  	%r174, %r173, 4;
	or.b32  	%r181, %r179, 64;
	and.b16  	%rs3, %rs2, 255;
	selp.f32 	%f249, %f247, %f248, %p22;
	and.b32  	%r285, %r283, 2;
	mov.f32 	%f250, 0f00000000;
	selp.f32 	%f283, %f281, %f282, %p28;
	and.b32  	%r292, %r290, 2;
	selp.f32 	%f318, %f316, %f317, %p34;
	and.b32  	%r303, %r301, 2;
	selp.f32 	%f352, %f350, %f351, %p40;
	and.b32  	%r310, %r308, 2;
	selp.f32 	%f387, %f385, %f386, %p46;
	and.b32  	%r321, %r319, 2;
	selp.f32 	%f421, %f419, %f420, %p52;
	and.b32  	%r328, %r326, 2;
	selp.f32 	%f456, %f454, %f455, %p58;
	and.b32  	%r339, %r337, 2;
	selp.f32 	%f490, %f488, %f489, %p64;
	and.b32  	%r346, %r344, 2;
	selp.f32 	%f525, %f523, %f524, %p70;
	and.b32  	%r357, %r355, 2;
	selp.f32 	%f559, %f557, %f558, %p76;
	and.b32  	%r364, %r362, 2;
	selp.f32 	%f594, %f592, %f593, %p82;
	and.b32  	%r375, %r373, 2;
	selp.f32 	%f628, %f626, %f627, %p88;
	and.b32  	%r382, %r380, 2;
	selp.f32 	%f663, %f661, %f662, %p94;
	and.b32  	%r393, %r391, 2;
	selp.f32 	%f697, %f695, %f696, %p100;
	and.b32  	%r400, %r398, 2;
	selp.f32 	%f732, %f730, %f731, %p106;
	and.b32  	%r411, %r409, 2;
	selp.f32 	%f766, %f764, %f765, %p112;
	and.b32  	%r418, %r416, 2;
	setp.eq.s32 	%p118, %r441, 0;
	neg.f32 	%f798, %f796;
	add.s32 	%r442, %r439, 1;
	cvt.rzi.f32.f32 	%f803, %f776;
	setp.eq.s32 	%p125, %r451, 0;
	neg.f32 	%f832, %f830;
	add.s32 	%r452, %r449, 1;
	cvt.rzi.f32.f32 	%f836, %f810;
	setp.eq.s32 	%p145, %r474, 0;
	neg.f32 	%f885, %f883;
	add.s32 	%r475, %r472, 1;
	cvt.rzi.f32.f32 	%f890, %f1296;
	setp.eq.s32 	%p165, %r506, 0;
	neg.f32 	%f937, %f935;
	add.s32 	%r507, %r504, 1;
	cvt.rzi.f32.f32 	%f942, %f1280;
	selp.f32 	%f988, %f986, %f987, %p184;
	and.b32  	%r526, %r524, 2;
	selp.f32 	%f1039, %f1037, %f1038, %p204;
	and.b32  	%r550, %r548, 2;
	abs.f32 	%f1072, %f1304;
	setp.gtu.f32 	%p221, %f1072, 0f7F800000;
	@%p221 bra 	$L__BB0_153;
// %bb.152:
	mov.b32 	%r557, %f106;
	and.b32  	%r558, %r557, -2147483648;
	mov.b32 	%r559, %f1304;
	or.b32  	%r560, %r558, %r559;
	mov.b32 	%f1304, %r560;
$L__BB0_153:                            // %__nv_fmodf.exit1780
	and.b32  	%r176, %r173, 32;
	or.b32  	%r262, %r179, %r174;
	or.b32  	%r267, %r181, %r174;
	mul.lo.s16 	%rs4, %rs3, 171;
	setp.eq.s32 	%p23, %r285, 0;
	sub.f32 	%f251, %f250, %f249;
	setp.eq.s32 	%p29, %r292, 0;
	sub.f32 	%f285, %f250, %f283;
	setp.eq.s32 	%p35, %r303, 0;
	sub.f32 	%f320, %f250, %f318;
	setp.eq.s32 	%p41, %r310, 0;
	sub.f32 	%f354, %f250, %f352;
	setp.eq.s32 	%p47, %r321, 0;
	sub.f32 	%f389, %f250, %f387;
	setp.eq.s32 	%p53, %r328, 0;
	sub.f32 	%f423, %f250, %f421;
	setp.eq.s32 	%p59, %r339, 0;
	sub.f32 	%f458, %f250, %f456;
	setp.eq.s32 	%p65, %r346, 0;
	sub.f32 	%f492, %f250, %f490;
	setp.eq.s32 	%p71, %r357, 0;
	sub.f32 	%f527, %f250, %f525;
	setp.eq.s32 	%p77, %r364, 0;
	sub.f32 	%f561, %f250, %f559;
	setp.eq.s32 	%p83, %r375, 0;
	sub.f32 	%f596, %f250, %f594;
	setp.eq.s32 	%p89, %r382, 0;
	sub.f32 	%f630, %f250, %f628;
	setp.eq.s32 	%p95, %r393, 0;
	sub.f32 	%f665, %f250, %f663;
	setp.eq.s32 	%p101, %r400, 0;
	sub.f32 	%f699, %f250, %f697;
	setp.eq.s32 	%p107, %r411, 0;
	sub.f32 	%f734, %f250, %f732;
	setp.eq.s32 	%p113, %r418, 0;
	sub.f32 	%f768, %f250, %f766;
	selp.f32 	%f797, %f795, %f794, %p117;
	selp.f32 	%f799, %f796, %f798, %p118;
	and.b32  	%r443, %r442, 2;
	setp.eq.f32 	%p120, %f803, %f776;
	mul.f32 	%f804, %f776, 0f00000000;
	selp.f32 	%f831, %f829, %f828, %p124;
	selp.f32 	%f833, %f830, %f832, %p125;
	and.b32  	%r453, %r452, 2;
	setp.eq.f32 	%p127, %f836, %f810;
	mul.f32 	%f837, %f810, 0f00000000;
	selp.f32 	%f884, %f882, %f881, %p144;
	selp.f32 	%f886, %f883, %f885, %p145;
	and.b32  	%r476, %r475, 2;
	setp.eq.f32 	%p147, %f890, %f1296;
	mul.f32 	%f891, %f1296, 0f00000000;
	selp.f32 	%f936, %f934, %f933, %p164;
	selp.f32 	%f938, %f935, %f937, %p165;
	and.b32  	%r508, %r507, 2;
	setp.eq.f32 	%p167, %f942, %f1280;
	mul.f32 	%f943, %f1280, 0f00000000;
	setp.eq.s32 	%p185, %r526, 0;
	neg.f32 	%f990, %f988;
	add.s32 	%r527, %r524, 1;
	cvt.rzi.f32.f32 	%f995, %f1300;
	setp.eq.s32 	%p205, %r550, 0;
	neg.f32 	%f1041, %f1039;
	add.s32 	%r551, %r548, 1;
	cvt.rzi.f32.f32 	%f1046, %f1284;
	add.f32 	%f1073, %f1304, %f1304;
	mov.b32 	%r561, %f1073;
	and.b32  	%r562, %r561, -2147483648;
	or.b32  	%r563, %r562, 1056964608;
	mov.b32 	%f1074, %r563;
	add.f32 	%f1075, %f1073, %f1074;
	cvt.rzi.f32.f32 	%f1076, %f1075;
	abs.f32 	%f1077, %f1073;
	setp.gt.f32 	%p222, %f1077, 0f4B000000;
	selp.f32 	%f1078, %f1073, %f1076, %p222;
	cvt.rzi.f32.f32 	%f1079, %f1073;
	setp.lt.f32 	%p223, %f1077, 0f3F000000;
	selp.f32 	%f1080, %f1079, %f1078, %p223;
	cvt.rzi.s32.f32 	%r564, %f1080;
	fma.rn.f32 	%f1081, %f1080, 0fBF000000, %f1304;
	mul.f32 	%f1082, %f1081, %f1081;
	fma.rn.f32 	%f1083, %f1082, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1084, %f1082, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1085, %f1083, %f1082, 0fC0A55DF6;
	fma.rn.f32 	%f1086, %f1084, %f1082, 0f4081E0CF;
	fma.rn.f32 	%f1087, %f1082, %f1081, 0f00000000;
	fma.rn.f32 	%f1088, %f1086, %f1082, 0fC09DE9E6;
	fma.rn.f32 	%f1089, %f1085, %f1087, 0f00000000;
	fma.rn.f32 	%f1090, %f1088, %f1082, 0f3F800000;
	fma.rn.f32 	%f1091, %f1081, 0f40490FDB, %f1089;
	and.b32  	%r565, %r564, 1;
	setp.eq.b32 	%p224, %r565, 1;
	selp.f32 	%f1092, %f1090, %f1091, %p224;
	selp.f32 	%f1093, %f1091, %f1090, %p224;
	and.b32  	%r566, %r564, 2;
	setp.eq.s32 	%p225, %r566, 0;
	neg.f32 	%f1094, %f1092;
	selp.f32 	%f1095, %f1092, %f1094, %p225;
	add.s32 	%r567, %r564, 1;
	and.b32  	%r568, %r567, 2;
	cvt.rzi.f32.f32 	%f1099, %f1304;
	setp.eq.f32 	%p227, %f1099, %f1304;
	mul.f32 	%f1100, %f1304, 0f00000000;
	div.approx.f32 	%f199, %f179, %f843;
	abs.f32 	%f1288, %f199;
	setp.lt.f32 	%p229, %f1288, 0f40000000;
	@%p229 bra 	$L__BB0_95;
// %bb.84:
	setp.gtu.f32 	%p230, %f1288, 0f4B800000;
	@%p230 bra 	$L__BB0_91;
	bra.uni 	$L__BB0_85;
$L__BB0_91:
	mov.b32 	%r49, %f1288;
	and.b32  	%r569, %r49, 8388607;
	or.b32  	%r16324, %r569, 1065353216;
	mov.b32 	%f1287, %r16324;
	add.s32 	%r570, %r49, -1073741824;
	and.b32  	%r16325, %r570, -8388608;
	setp.eq.s32 	%p236, %r16325, 0;
	@%p236 bra 	$L__BB0_94;
// %bb.92:                              // %__nv_fmaf_rn.exit4.i.i.i1650.preheader
	mov.f32 	%f1113, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1112,%f1113;
	// end inline asm
$L__BB0_93:                             // %__nv_fmaf_rn.exit4.i.i.i1650
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r571, %r16325, 192937984;
	add.s32 	%r572, %r16324, %r571;
	mov.b32 	%f1114, %r572;
	mul.f32 	%f1115, %f1112, %f1114;
	sub.f32 	%f1116, %f1114, %f1115;
	fma.rn.f32 	%f1117, %f1116, %f1112, %f1115;
	sub.f32 	%f1118, %f1114, %f1117;
	fma.rz.f32 	%f1119, %f1118, %f1112, %f1117;
	cvt.rzi.f32.f32 	%f1120, %f1119;
	sub.f32 	%f1287, %f1114, %f1120;
	sub.s32 	%r16325, %r16325, %r571;
	mov.b32 	%r16324, %f1287;
	setp.ne.s32 	%p237, %r16325, 0;
	setp.ne.s32 	%p238, %r16324, 0;
	and.pred  	%p239, %p237, %p238;
	@%p239 bra 	$L__BB0_93;
$L__BB0_94:                             // %__internal_fmodf_slowpath_mod.exit.i.i1652
	setp.gt.u32 	%p240, %r49, 2139095039;
	selp.f32 	%f1121, 0f7FFFFFFF, 0f4B800000, %p240;
	mul.f32 	%f1122, %f1287, 0f34000000;
	mul.f32 	%f1288, %f1121, %f1122;
	bra.uni 	$L__BB0_95;
$L__BB0_85:                             // %__nv_fast_fdividef.exit.i.i.i1629
	div.approx.f32 	%f1105, %f1288, %f221;
	cvt.rzi.f32.f32 	%f1286, %f1105;
	fma.rn.f32 	%f109, %f1286, 0fC0000000, %f1288;
	mov.b32 	%r48, %f109;
	setp.lt.u32 	%p231, %r48, 1073741824;
	@%p231 bra 	$L__BB0_90;
// %bb.86:
	setp.lt.u32 	%p232, %r48, -2147483647;
	@%p232 bra 	$L__BB0_88;
// %bb.87:
	add.f32 	%f1110, %f1286, 0fBF800000;
	setp.lt.f32 	%p235, %f109, 0fC0000000;
	add.f32 	%f1111, %f1110, 0fBF800000;
	selp.f32 	%f1286, %f1111, %f1110, %p235;
	bra.uni 	$L__BB0_90;
$L__BB0_88:
	add.f32 	%f1286, %f1286, 0f3F800000;
	setp.ltu.f32 	%p233, %f109, 0f40800000;
	@%p233 bra 	$L__BB0_90;
// %bb.89:                              // %__nv_fmaf_rn.exit.i.i.i1633
	add.f32 	%f1106, %f1286, 0f3F800000;
	fma.rn.f32 	%f1108, %f221, 0fC0400000, %f109;
	setp.ge.f32 	%p234, %f1108, 0f00000000;
	add.f32 	%f1109, %f1106, 0f3F800000;
	selp.f32 	%f1286, %f1109, %f1106, %p234;
$L__BB0_90:                             // %__internal_fmodf_fastpath_quot.exit.i.i1636
	fma.rn.f32 	%f1288, %f1286, 0fC0000000, %f1288;
$L__BB0_95:                             // %__internal_fmodf_kernel.exit.i1655
	and.b32  	%r178, %r177, 8;
	or.b32  	%r263, %r262, %r176;
	or.b32  	%r268, %r267, %r176;
	shr.u16 	%rs5, %rs4, 13;
	selp.f32 	%f252, %f249, %f251, %p23;
	selp.f32 	%f286, %f283, %f285, %p29;
	selp.f32 	%f321, %f318, %f320, %p35;
	selp.f32 	%f355, %f352, %f354, %p41;
	selp.f32 	%f390, %f387, %f389, %p47;
	selp.f32 	%f424, %f421, %f423, %p53;
	selp.f32 	%f459, %f456, %f458, %p59;
	selp.f32 	%f493, %f490, %f492, %p65;
	selp.f32 	%f528, %f525, %f527, %p71;
	selp.f32 	%f562, %f559, %f561, %p77;
	selp.f32 	%f597, %f594, %f596, %p83;
	selp.f32 	%f631, %f628, %f630, %p89;
	selp.f32 	%f666, %f663, %f665, %p95;
	selp.f32 	%f700, %f697, %f699, %p101;
	selp.f32 	%f735, %f732, %f734, %p107;
	selp.f32 	%f769, %f766, %f768, %p113;
	setp.eq.s32 	%p119, %r443, 0;
	sub.f32 	%f801, %f250, %f797;
	selp.f32 	%f805, %f804, %f799, %p120;
	abs.f32 	%f806, %f776;
	setp.eq.s32 	%p126, %r453, 0;
	sub.f32 	%f834, %f250, %f831;
	selp.f32 	%f838, %f837, %f833, %p127;
	abs.f32 	%f839, %f810;
	setp.eq.s32 	%p146, %r476, 0;
	sub.f32 	%f888, %f250, %f884;
	selp.f32 	%f158, %f891, %f886, %p147;
	abs.f32 	%f892, %f1296;
	setp.eq.s32 	%p166, %r508, 0;
	sub.f32 	%f940, %f250, %f936;
	selp.f32 	%f944, %f943, %f938, %p167;
	abs.f32 	%f945, %f1280;
	selp.f32 	%f989, %f987, %f986, %p184;
	selp.f32 	%f991, %f988, %f990, %p185;
	and.b32  	%r528, %r527, 2;
	setp.eq.f32 	%p187, %f995, %f1300;
	mul.f32 	%f996, %f1300, 0f00000000;
	selp.f32 	%f1040, %f1038, %f1037, %p204;
	selp.f32 	%f1042, %f1039, %f1041, %p205;
	and.b32  	%r552, %r551, 2;
	setp.eq.f32 	%p207, %f1046, %f1284;
	mul.f32 	%f1047, %f1284, 0f00000000;
	setp.eq.s32 	%p226, %r568, 0;
	sub.f32 	%f1097, %f250, %f1093;
	selp.f32 	%f197, %f1100, %f1095, %p227;
	abs.f32 	%f1101, %f1304;
	and.b32  	%r175, %r3, 16;
	abs.f32 	%f1123, %f1288;
	setp.gtu.f32 	%p241, %f1123, 0f7F800000;
	@%p241 bra 	$L__BB0_97;
// %bb.96:
	mov.b32 	%r573, %f199;
	and.b32  	%r574, %r573, -2147483648;
	mov.b32 	%r575, %f1288;
	or.b32  	%r576, %r574, %r575;
	mov.b32 	%f1288, %r576;
$L__BB0_97:                             // %__nv_fmodf.exit1656
	or.b32  	%r264, %r263, %r178;
	or.b32  	%r269, %r268, %r178;
	mul.lo.s16 	%rs6, %rs5, 48;
	mul.f32 	%f141, %f252, %f252;
	mul.f32 	%f4, %f286, %f286;
	mul.f32 	%f8, %f321, %f321;
	mul.f32 	%f13, %f355, %f355;
	mul.f32 	%f17, %f390, %f390;
	mul.f32 	%f22, %f424, %f424;
	mul.f32 	%f26, %f459, %f459;
	mul.f32 	%f31, %f493, %f493;
	mul.f32 	%f35, %f528, %f528;
	mul.f32 	%f40, %f562, %f562;
	mul.f32 	%f44, %f597, %f597;
	mul.f32 	%f49, %f631, %f631;
	mul.f32 	%f53, %f666, %f666;
	mul.f32 	%f58, %f700, %f700;
	mul.f32 	%f62, %f735, %f735;
	mul.f32 	%f67, %f769, %f769;
	selp.f32 	%f802, %f797, %f801, %p119;
	setp.gt.f32 	%p121, %f806, 0f4B800000;
	add.f32 	%f807, %f805, 0f3F800000;
	selp.f32 	%f835, %f831, %f834, %p126;
	setp.gt.f32 	%p128, %f839, 0f4B800000;
	add.f32 	%f840, %f838, 0f3F800000;
	selp.f32 	%f889, %f884, %f888, %p146;
	setp.gt.f32 	%p148, %f892, 0f4B800000;
	add.f32 	%f893, %f158, 0f3F800000;
	selp.f32 	%f941, %f936, %f940, %p166;
	setp.gt.f32 	%p168, %f945, 0f4B800000;
	add.f32 	%f946, %f944, 0f3F800000;
	setp.eq.s32 	%p186, %r528, 0;
	sub.f32 	%f993, %f250, %f989;
	selp.f32 	%f177, %f996, %f991, %p187;
	abs.f32 	%f997, %f1300;
	setp.eq.s32 	%p206, %r552, 0;
	sub.f32 	%f1044, %f250, %f1040;
	selp.f32 	%f1048, %f1047, %f1042, %p207;
	abs.f32 	%f1049, %f1284;
	selp.f32 	%f1098, %f1093, %f1097, %p226;
	setp.gt.f32 	%p228, %f1101, 0f4B800000;
	add.f32 	%f1102, %f197, 0f3F800000;
	add.f32 	%f1124, %f1288, %f1288;
	mov.b32 	%r589, %f1124;
	and.b32  	%r590, %r589, -2147483648;
	or.b32  	%r591, %r590, 1056964608;
	mov.b32 	%f1125, %r591;
	add.f32 	%f1126, %f1124, %f1125;
	cvt.rzi.f32.f32 	%f1127, %f1126;
	abs.f32 	%f1128, %f1124;
	setp.gt.f32 	%p242, %f1128, 0f4B000000;
	selp.f32 	%f1129, %f1124, %f1127, %p242;
	cvt.rzi.f32.f32 	%f1130, %f1124;
	setp.lt.f32 	%p243, %f1128, 0f3F000000;
	selp.f32 	%f1131, %f1130, %f1129, %p243;
	cvt.rzi.s32.f32 	%r592, %f1131;
	fma.rn.f32 	%f1132, %f1131, 0fBF000000, %f1288;
	mul.f32 	%f1133, %f1132, %f1132;
	fma.rn.f32 	%f1134, %f1133, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1135, %f1133, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1136, %f1134, %f1133, 0fC0A55DF6;
	fma.rn.f32 	%f1137, %f1135, %f1133, 0f4081E0CF;
	fma.rn.f32 	%f1138, %f1133, %f1132, 0f00000000;
	fma.rn.f32 	%f1139, %f1137, %f1133, 0fC09DE9E6;
	fma.rn.f32 	%f1140, %f1136, %f1138, 0f00000000;
	fma.rn.f32 	%f1141, %f1139, %f1133, 0f3F800000;
	fma.rn.f32 	%f1142, %f1132, 0f40490FDB, %f1140;
	and.b32  	%r593, %r592, 1;
	setp.eq.b32 	%p244, %r593, 1;
	selp.f32 	%f1143, %f1141, %f1142, %p244;
	selp.f32 	%f1144, %f1142, %f1141, %p244;
	and.b32  	%r594, %r592, 2;
	setp.eq.s32 	%p245, %r594, 0;
	neg.f32 	%f1145, %f1143;
	selp.f32 	%f1146, %f1143, %f1145, %p245;
	add.s32 	%r595, %r592, 1;
	and.b32  	%r596, %r595, 2;
	setp.eq.s32 	%p246, %r596, 0;
	sub.f32 	%f1148, %f250, %f1144;
	selp.f32 	%f1149, %f1144, %f1148, %p246;
	cvt.rzi.f32.f32 	%f1150, %f1288;
	setp.eq.f32 	%p247, %f1150, %f1288;
	mul.f32 	%f1151, %f1288, 0f00000000;
	selp.f32 	%f1152, %f1151, %f1146, %p247;
	abs.f32 	%f1153, %f1288;
	setp.gt.f32 	%p248, %f1153, 0f4B800000;
	add.f32 	%f1154, %f1152, 0f3F800000;
	mul.lo.s32 	%r597, %r187, 2147483640;
	cvt.u16.u32 	%rs9, %r3;
	shr.u16 	%rs10, %rs9, 8;
	shl.b16 	%rs11, %rs9, 8;
	or.b16  	%rs12, %rs11, %rs10;
	shl.b16 	%rs13, %rs12, 4;
	shr.u16 	%rs14, %rs12, 4;
	and.b16  	%rs15, %rs14, 3840;
	or.b16  	%rs16, %rs15, %rs13;
	and.b16  	%rs17, %rs16, 13107;
	shl.b16 	%rs18, %rs17, 2;
	shr.u16 	%rs19, %rs16, 2;
	and.b16  	%rs20, %rs19, 13107;
	or.b16  	%rs21, %rs20, %rs18;
	and.b16  	%rs22, %rs21, 20480;
	shl.b16 	%rs23, %rs22, 1;
	shr.u16 	%rs24, %rs21, 1;
	and.b16  	%rs25, %rs24, 16384;
	or.b16  	%rs26, %rs25, %rs23;
	shr.u16 	%rs27, %rs26, 13;
	sub.s32 	%r598, %r597, %r175;
	mad.lo.s32 	%r599, %r190, 2147483616, %r598;
	or.b16  	%rs28, %rs27, 1;
	cvt.u32.u16 	%r600, %rs28;
	and.b16  	%rs29, %rs27, 6;
	cvt.u32.u16 	%r601, %rs29;
	sub.s32 	%r602, %r599, %r601;
	shl.b32 	%r603, %r602, 1;
	cvt.rn.f32.s32 	%f1156, %r603;
	div.approx.f32 	%f123, %f1156, %f253;
	abs.f32 	%f1308, %f123;
	setp.lt.f32 	%p249, %f1308, 0f40000000;
	@%p249 bra 	$L__BB0_161;
// %bb.98:
	setp.gtu.f32 	%p250, %f1308, 0f4B800000;
	@%p250 bra 	$L__BB0_157;
	bra.uni 	$L__BB0_99;
$L__BB0_157:
	mov.b32 	%r218, %f1308;
	and.b32  	%r604, %r218, 8388607;
	or.b32  	%r16384, %r604, 1065353216;
	mov.b32 	%f1307, %r16384;
	add.s32 	%r605, %r218, -1073741824;
	and.b32  	%r16385, %r605, -8388608;
	setp.eq.s32 	%p256, %r16385, 0;
	@%p256 bra 	$L__BB0_160;
// %bb.158:                             // %__nv_fmaf_rn.exit4.i.i.i1805.preheader
	mov.f32 	%f1167, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1166,%f1167;
	// end inline asm
$L__BB0_159:                            // %__nv_fmaf_rn.exit4.i.i.i1805
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r606, %r16385, 192937984;
	add.s32 	%r607, %r16384, %r606;
	mov.b32 	%f1168, %r607;
	mul.f32 	%f1169, %f1166, %f1168;
	sub.f32 	%f1170, %f1168, %f1169;
	fma.rn.f32 	%f1171, %f1170, %f1166, %f1169;
	sub.f32 	%f1172, %f1168, %f1171;
	fma.rz.f32 	%f1173, %f1172, %f1166, %f1171;
	cvt.rzi.f32.f32 	%f1174, %f1173;
	sub.f32 	%f1307, %f1168, %f1174;
	sub.s32 	%r16385, %r16385, %r606;
	mov.b32 	%r16384, %f1307;
	setp.ne.s32 	%p257, %r16385, 0;
	setp.ne.s32 	%p258, %r16384, 0;
	and.pred  	%p259, %p257, %p258;
	@%p259 bra 	$L__BB0_159;
$L__BB0_160:                            // %__internal_fmodf_slowpath_mod.exit.i.i1807
	setp.gt.u32 	%p260, %r218, 2139095039;
	selp.f32 	%f1175, 0f7FFFFFFF, 0f4B800000, %p260;
	mul.f32 	%f1176, %f1307, 0f34000000;
	mul.f32 	%f1308, %f1175, %f1176;
	bra.uni 	$L__BB0_161;
$L__BB0_99:                             // %__nv_fast_fdividef.exit.i.i.i1784
	div.approx.f32 	%f1159, %f1308, %f221;
	cvt.rzi.f32.f32 	%f1306, %f1159;
	fma.rn.f32 	%f202, %f1306, 0fC0000000, %f1308;
	mov.b32 	%r217, %f202;
	setp.lt.u32 	%p251, %r217, 1073741824;
	@%p251 bra 	$L__BB0_156;
// %bb.100:
	setp.lt.u32 	%p252, %r217, -2147483647;
	@%p252 bra 	$L__BB0_154;
// %bb.101:
	add.f32 	%f1164, %f1306, 0fBF800000;
	setp.lt.f32 	%p255, %f202, 0fC0000000;
	add.f32 	%f1165, %f1164, 0fBF800000;
	selp.f32 	%f1306, %f1165, %f1164, %p255;
	bra.uni 	$L__BB0_156;
$L__BB0_154:
	add.f32 	%f1306, %f1306, 0f3F800000;
	setp.ltu.f32 	%p253, %f202, 0f40800000;
	@%p253 bra 	$L__BB0_156;
// %bb.155:                             // %__nv_fmaf_rn.exit.i.i.i1788
	add.f32 	%f1160, %f1306, 0f3F800000;
	fma.rn.f32 	%f1162, %f221, 0fC0400000, %f202;
	setp.ge.f32 	%p254, %f1162, 0f00000000;
	add.f32 	%f1163, %f1160, 0f3F800000;
	selp.f32 	%f1306, %f1163, %f1160, %p254;
$L__BB0_156:                            // %__internal_fmodf_fastpath_quot.exit.i.i1791
	fma.rn.f32 	%f1308, %f1306, 0fC0000000, %f1308;
$L__BB0_161:                            // %__internal_fmodf_kernel.exit.i1810
	shr.u32 	%r265, %r264, 1;
	shr.u32 	%r270, %r269, 1;
	sub.s16 	%rs7, %rs2, %rs6;
	mul.f32 	%f256, %f141, 0f3B8B2FF9;
	mul.f32 	%f290, %f4, 0f3B8B2FF9;
	mul.f32 	%f325, %f8, 0f3B8B2FF9;
	mul.f32 	%f359, %f13, 0f3B8B2FF9;
	mul.f32 	%f394, %f17, 0f3B8B2FF9;
	mul.f32 	%f428, %f22, 0f3B8B2FF9;
	mul.f32 	%f463, %f26, 0f3B8B2FF9;
	mul.f32 	%f497, %f31, 0f3B8B2FF9;
	mul.f32 	%f532, %f35, 0f3B8B2FF9;
	mul.f32 	%f566, %f40, 0f3B8B2FF9;
	mul.f32 	%f601, %f44, 0f3B8B2FF9;
	mul.f32 	%f635, %f49, 0f3B8B2FF9;
	mul.f32 	%f670, %f53, 0f3B8B2FF9;
	mul.f32 	%f704, %f58, 0f3B8B2FF9;
	mul.f32 	%f739, %f62, 0f3B8B2FF9;
	mul.f32 	%f772, %f67, 0f3B8B2FF9;
	selp.f32 	%f808, %f807, %f802, %p121;
	selp.f32 	%f841, %f840, %f835, %p128;
	selp.f32 	%f159, %f893, %f889, %p148;
	selp.f32 	%f947, %f946, %f941, %p168;
	selp.f32 	%f994, %f989, %f993, %p186;
	setp.gt.f32 	%p188, %f997, 0f4B800000;
	add.f32 	%f998, %f177, 0f3F800000;
	selp.f32 	%f1045, %f1040, %f1044, %p206;
	setp.gt.f32 	%p208, %f1049, 0f4B800000;
	add.f32 	%f1050, %f1048, 0f3F800000;
	selp.f32 	%f198, %f1102, %f1098, %p228;
	selp.f32 	%f1155, %f1154, %f1149, %p248;
	sub.s32 	%r60, %r599, %r600;
	abs.f32 	%f1177, %f1308;
	setp.gtu.f32 	%p261, %f1177, 0f7F800000;
	@%p261 bra 	$L__BB0_163;
// %bb.162:
	mov.b32 	%r608, %f123;
	and.b32  	%r609, %r608, -2147483648;
	mov.b32 	%r610, %f1308;
	or.b32  	%r611, %r609, %r610;
	mov.b32 	%f1308, %r611;
$L__BB0_163:                            // %__nv_fmodf.exit1811
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd30, %r265, 4;
	mul.wide.u32 	%rd32, %r270, 4;
	and.b16  	%rs8, %rs7, 255;
	mul.f32 	%f3, %f256, %f1262;
	mul.f32 	%f291, %f290, %f1263;
	mul.f32 	%f12, %f325, %f1264;
	mul.f32 	%f360, %f359, %f1265;
	mul.f32 	%f21, %f394, %f1266;
	mul.f32 	%f429, %f428, %f1267;
	mul.f32 	%f30, %f463, %f1268;
	mul.f32 	%f498, %f497, %f1269;
	mul.f32 	%f39, %f532, %f1270;
	mul.f32 	%f567, %f566, %f1271;
	mul.f32 	%f48, %f601, %f1272;
	mul.f32 	%f636, %f635, %f1273;
	mul.f32 	%f57, %f670, %f1274;
	mul.f32 	%f705, %f704, %f1275;
	mul.f32 	%f66, %f739, %f1276;
	mul.f32 	%f773, %f772, %f1277;
	mov.b32 	%r426, %f808;
	mov.b32 	%r427, %f841;
	mov.b32 	%r432, %f805;
	mov.b32 	%r433, %f838;
	mov.b32 	%r500, %f947;
	mov.b32 	%r499, %f159;
	mov.b32 	%r497, %f944;
	mov.b32 	%r496, %f158;
	selp.f32 	%f178, %f998, %f994, %p188;
	selp.f32 	%f1051, %f1050, %f1045, %p208;
	mov.b32 	%r588, %f1155;
	mov.b32 	%r587, %f198;
	mov.b32 	%r585, %f1152;
	mov.b32 	%r584, %f197;
	add.f32 	%f1178, %f1308, %f1308;
	mov.b32 	%r612, %f1178;
	and.b32  	%r613, %r612, -2147483648;
	or.b32  	%r614, %r613, 1056964608;
	mov.b32 	%f1179, %r614;
	add.f32 	%f1180, %f1178, %f1179;
	cvt.rzi.f32.f32 	%f1181, %f1180;
	abs.f32 	%f1182, %f1178;
	setp.gt.f32 	%p262, %f1182, 0f4B000000;
	selp.f32 	%f1183, %f1178, %f1181, %p262;
	cvt.rzi.f32.f32 	%f1184, %f1178;
	setp.lt.f32 	%p263, %f1182, 0f3F000000;
	selp.f32 	%f1185, %f1184, %f1183, %p263;
	cvt.rzi.s32.f32 	%r615, %f1185;
	fma.rn.f32 	%f1186, %f1185, 0fBF000000, %f1308;
	mul.f32 	%f1187, %f1186, %f1186;
	fma.rn.f32 	%f1188, %f1187, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1189, %f1187, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1190, %f1188, %f1187, 0fC0A55DF6;
	fma.rn.f32 	%f1191, %f1189, %f1187, 0f4081E0CF;
	fma.rn.f32 	%f1192, %f1187, %f1186, 0f00000000;
	fma.rn.f32 	%f1193, %f1191, %f1187, 0fC09DE9E6;
	fma.rn.f32 	%f1194, %f1190, %f1192, 0f00000000;
	fma.rn.f32 	%f1195, %f1193, %f1187, 0f3F800000;
	fma.rn.f32 	%f1196, %f1186, 0f40490FDB, %f1194;
	and.b32  	%r616, %r615, 1;
	setp.eq.b32 	%p264, %r616, 1;
	selp.f32 	%f1197, %f1195, %f1196, %p264;
	selp.f32 	%f1198, %f1196, %f1195, %p264;
	and.b32  	%r617, %r615, 2;
	setp.eq.s32 	%p265, %r617, 0;
	neg.f32 	%f1199, %f1197;
	selp.f32 	%f1200, %f1197, %f1199, %p265;
	add.s32 	%r618, %r615, 1;
	and.b32  	%r619, %r618, 2;
	setp.eq.s32 	%p266, %r619, 0;
	sub.f32 	%f1202, %f250, %f1198;
	selp.f32 	%f1203, %f1198, %f1202, %p266;
	cvt.rzi.f32.f32 	%f1204, %f1308;
	setp.eq.f32 	%p267, %f1204, %f1308;
	mul.f32 	%f1205, %f1308, 0f00000000;
	selp.f32 	%f216, %f1205, %f1200, %p267;
	abs.f32 	%f1206, %f1308;
	setp.gt.f32 	%p268, %f1206, 0f4B800000;
	add.f32 	%f1207, %f216, 0f3F800000;
	shl.b32 	%r620, %r60, 1;
	cvt.rn.f32.s32 	%f1208, %r620;
	div.approx.f32 	%f218, %f1208, %f253;
	abs.f32 	%f1292, %f218;
	setp.lt.f32 	%p269, %f1292, 0f40000000;
	@%p269 bra 	$L__BB0_113;
// %bb.102:
	setp.gtu.f32 	%p270, %f1292, 0f4B800000;
	@%p270 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_103;
$L__BB0_109:
	mov.b32 	%r62, %f1292;
	and.b32  	%r621, %r62, 8388607;
	or.b32  	%r16326, %r621, 1065353216;
	mov.b32 	%f1291, %r16326;
	add.s32 	%r622, %r62, -1073741824;
	and.b32  	%r16327, %r622, -8388608;
	setp.eq.s32 	%p276, %r16327, 0;
	@%p276 bra 	$L__BB0_112;
// %bb.110:                             // %__nv_fmaf_rn.exit4.i.i.i1681.preheader
	mov.f32 	%f1219, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1218,%f1219;
	// end inline asm
$L__BB0_111:                            // %__nv_fmaf_rn.exit4.i.i.i1681
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r623, %r16327, 192937984;
	add.s32 	%r624, %r16326, %r623;
	mov.b32 	%f1220, %r624;
	mul.f32 	%f1221, %f1218, %f1220;
	sub.f32 	%f1222, %f1220, %f1221;
	fma.rn.f32 	%f1223, %f1222, %f1218, %f1221;
	sub.f32 	%f1224, %f1220, %f1223;
	fma.rz.f32 	%f1225, %f1224, %f1218, %f1223;
	cvt.rzi.f32.f32 	%f1226, %f1225;
	sub.f32 	%f1291, %f1220, %f1226;
	sub.s32 	%r16327, %r16327, %r623;
	mov.b32 	%r16326, %f1291;
	setp.ne.s32 	%p277, %r16327, 0;
	setp.ne.s32 	%p278, %r16326, 0;
	and.pred  	%p279, %p277, %p278;
	@%p279 bra 	$L__BB0_111;
$L__BB0_112:                            // %__internal_fmodf_slowpath_mod.exit.i.i1683
	setp.gt.u32 	%p280, %r62, 2139095039;
	selp.f32 	%f1227, 0f7FFFFFFF, 0f4B800000, %p280;
	mul.f32 	%f1228, %f1291, 0f34000000;
	mul.f32 	%f1292, %f1227, %f1228;
	bra.uni 	$L__BB0_113;
$L__BB0_103:                            // %__nv_fast_fdividef.exit.i.i.i1660
	div.approx.f32 	%f1211, %f1292, %f221;
	cvt.rzi.f32.f32 	%f1290, %f1211;
	fma.rn.f32 	%f126, %f1290, 0fC0000000, %f1292;
	mov.b32 	%r61, %f126;
	setp.lt.u32 	%p271, %r61, 1073741824;
	@%p271 bra 	$L__BB0_108;
// %bb.104:
	setp.lt.u32 	%p272, %r61, -2147483647;
	@%p272 bra 	$L__BB0_106;
// %bb.105:
	add.f32 	%f1216, %f1290, 0fBF800000;
	setp.lt.f32 	%p275, %f126, 0fC0000000;
	add.f32 	%f1217, %f1216, 0fBF800000;
	selp.f32 	%f1290, %f1217, %f1216, %p275;
	bra.uni 	$L__BB0_108;
$L__BB0_106:
	add.f32 	%f1290, %f1290, 0f3F800000;
	setp.ltu.f32 	%p273, %f126, 0f40800000;
	@%p273 bra 	$L__BB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i1664
	add.f32 	%f1212, %f1290, 0f3F800000;
	fma.rn.f32 	%f1214, %f221, 0fC0400000, %f126;
	setp.ge.f32 	%p274, %f1214, 0f00000000;
	add.f32 	%f1215, %f1212, 0f3F800000;
	selp.f32 	%f1290, %f1215, %f1212, %p274;
$L__BB0_108:                            // %__internal_fmodf_fastpath_quot.exit.i.i1667
	fma.rn.f32 	%f1292, %f1290, 0fC0000000, %f1292;
$L__BB0_113:                            // %__internal_fmodf_kernel.exit.i1686
	add.s64 	%rd31, %rd1, %rd30;
	add.s64 	%rd33, %rd1, %rd32;
	shl.b16 	%rs1, %rs8, 7;
	shr.u32 	%r186, %r3, 2;
	mov.b32 	%r295, %f291;
	mov.b32 	%r294, %f3;
	mov.b32 	%r313, %f360;
	mov.b32 	%r312, %f12;
	mov.b32 	%r331, %f429;
	mov.b32 	%r330, %f21;
	mov.b32 	%r349, %f498;
	mov.b32 	%r348, %f30;
	mov.b32 	%r367, %f567;
	mov.b32 	%r366, %f39;
	mov.b32 	%r385, %f636;
	mov.b32 	%r384, %f48;
	mov.b32 	%r403, %f705;
	mov.b32 	%r402, %f57;
	mov.b32 	%r421, %f773;
	mov.b32 	%r420, %f66;
	xor.b32  	%r494, %r497, -2147483648;
	xor.b32  	%r493, %r496, -2147483648;
	mov.b32 	%r541, %f1051;
	mov.b32 	%r540, %f178;
	mov.b32 	%r544, %f1048;
	mov.b32 	%r543, %f177;
	xor.b32  	%r582, %r585, -2147483648;
	xor.b32  	%r581, %r584, -2147483648;
	selp.f32 	%f217, %f1207, %f1203, %p268;
	abs.f32 	%f1229, %f1292;
	setp.gtu.f32 	%p281, %f1229, 0f7F800000;
	@%p281 bra 	$L__BB0_115;
// %bb.114:
	mov.b32 	%r625, %f218;
	and.b32  	%r626, %r625, -2147483648;
	mov.b32 	%r627, %f1292;
	or.b32  	%r628, %r626, %r627;
	mov.b32 	%f1292, %r628;
$L__BB0_115:                            // %__nv_fmodf.exit1687
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r180, [%rd31];
	ld.global.u32 	%r182, [%rd33];
	// begin inline asm
	cvt.rn.f16x2.f32 %r293, %r295, %r294;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r311, %r313, %r312;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r329, %r331, %r330;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r347, %r349, %r348;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r365, %r367, %r366;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r383, %r385, %r384;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r401, %r403, %r402;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r419, %r421, %r420;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r422, %r427, %r426;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r425, %r427, %r426;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r428, %r433, %r432;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r431, %r433, %r432;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r489, %r500, %r499;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r492, %r494, %r493;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r495, %r497, %r496;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r498, %r500, %r499;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r539, %r541, %r540;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r542, %r544, %r543;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r577, %r588, %r587;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r580, %r582, %r581;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r583, %r585, %r584;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r586, %r588, %r587;
	// end inline asm
	add.f32 	%f1230, %f1292, %f1292;
	mov.b32 	%r636, %f1230;
	and.b32  	%r637, %r636, -2147483648;
	or.b32  	%r638, %r637, 1056964608;
	mov.b32 	%f1231, %r638;
	add.f32 	%f1232, %f1230, %f1231;
	cvt.rzi.f32.f32 	%f1233, %f1232;
	abs.f32 	%f1234, %f1230;
	setp.gt.f32 	%p282, %f1234, 0f4B000000;
	selp.f32 	%f1235, %f1230, %f1233, %p282;
	cvt.rzi.f32.f32 	%f1236, %f1230;
	setp.lt.f32 	%p283, %f1234, 0f3F000000;
	selp.f32 	%f1237, %f1236, %f1235, %p283;
	cvt.rzi.s32.f32 	%r639, %f1237;
	fma.rn.f32 	%f1238, %f1237, 0fBF000000, %f1292;
	mul.f32 	%f1239, %f1238, %f1238;
	fma.rn.f32 	%f1240, %f1239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1241, %f1239, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1242, %f1240, %f1239, 0fC0A55DF6;
	fma.rn.f32 	%f1243, %f1241, %f1239, 0f4081E0CF;
	fma.rn.f32 	%f1244, %f1239, %f1238, 0f00000000;
	fma.rn.f32 	%f1245, %f1243, %f1239, 0fC09DE9E6;
	fma.rn.f32 	%f1246, %f1242, %f1244, 0f00000000;
	fma.rn.f32 	%f1247, %f1245, %f1239, 0f3F800000;
	fma.rn.f32 	%f1248, %f1238, 0f40490FDB, %f1246;
	and.b32  	%r640, %r639, 1;
	setp.eq.b32 	%p284, %r640, 1;
	selp.f32 	%f1249, %f1247, %f1248, %p284;
	selp.f32 	%f1250, %f1248, %f1247, %p284;
	and.b32  	%r641, %r639, 2;
	setp.eq.s32 	%p285, %r641, 0;
	neg.f32 	%f1251, %f1249;
	selp.f32 	%f1252, %f1249, %f1251, %p285;
	add.s32 	%r642, %r639, 1;
	and.b32  	%r643, %r642, 2;
	setp.eq.s32 	%p286, %r643, 0;
	sub.f32 	%f1254, %f250, %f1250;
	selp.f32 	%f1255, %f1250, %f1254, %p286;
	cvt.rzi.f32.f32 	%f1256, %f1292;
	setp.eq.f32 	%p287, %f1256, %f1292;
	mul.f32 	%f1257, %f1292, 0f00000000;
	selp.f32 	%f1258, %f1257, %f1252, %p287;
	abs.f32 	%f1259, %f1292;
	setp.gt.f32 	%p288, %f1259, 0f4B800000;
	add.f32 	%f1260, %f1258, 0f3F800000;
	selp.f32 	%f1261, %f1260, %f1255, %p288;
	mov.b32 	%r631, %f1261;
	mov.b32 	%r630, %f217;
	// begin inline asm
	cvt.rn.f16x2.f32 %r629, %r631, %r630;
	// end inline asm
	mov.b32 	%r634, %f1258;
	mov.b32 	%r633, %f216;
	// begin inline asm
	cvt.rn.f16x2.f32 %r632, %r634, %r633;
	// end inline asm
	mul.hi.u16 	%rs30, %rs1, -21845;
	shr.u16 	%rs31, %rs30, 5;
	mul.lo.s16 	%rs32, %rs31, 48;
	sub.s16 	%rs33, %rs1, %rs32;
	cvt.u32.u16 	%r644, %rs33;
	shl.b32 	%r645, %r3, 3;
	and.b32  	%r71, %r645, 64;
	and.b32  	%r646, %r173, 28;
	shl.b32 	%r647, %r4, 5;
	and.b32  	%r648, %r647, 96;
	or.b32  	%r72, %r646, %r648;
	and.b32  	%r649, %r647, 128;
	add.s32 	%r650, %r644, %r251;
	shl.b32 	%r651, %r650, 8;
	or.b32  	%r652, %r72, %r649;
	or.b32  	%r73, %r652, %r651;
	bfe.s32 	%r653, %r3, 3, 1;
	and.b32  	%r74, %r3, 8;
	shl.b32 	%r654, %r3, 4;
	or.b32  	%r655, %r74, %r654;
	shr.u32 	%r656, %r655, 2;
	and.b32  	%r657, %r656, 30;
	and.b32  	%r75, %r654, 48;
	and.b32  	%r76, %r186, 6;
	and.b32  	%r658, %r2, 32;
	shr.u32 	%r659, %r1, 1;
	or.b32  	%r660, %r658, %r659;
	or.b32  	%r661, %r660, 8;
	or.b32  	%r662, %r660, 16;
	or.b32  	%r663, %r660, 24;
	or.b32  	%r664, %r179, %r176;
	or.b32  	%r665, %r664, %r178;
	or.b32  	%r666, %r665, %r174;
	shr.u32 	%r667, %r666, 1;
	mul.lo.s32 	%r668, %r667, 65;
	add.s32 	%r77, %r660, %r668;
	add.s32 	%r78, %r661, %r668;
	add.s32 	%r79, %r662, %r668;
	add.s32 	%r80, %r663, %r668;
	or.b32  	%r669, %r181, %r176;
	or.b32  	%r670, %r669, %r178;
	or.b32  	%r671, %r670, %r174;
	shr.u32 	%r672, %r671, 1;
	mul.lo.s32 	%r673, %r672, 65;
	add.s32 	%r81, %r660, %r673;
	add.s32 	%r82, %r661, %r673;
	add.s32 	%r83, %r662, %r673;
	add.s32 	%r84, %r663, %r673;
	shl.b32 	%r674, %r1, 1;
	or.b32  	%r675, %r188, %r674;
	mul.lo.s32 	%r676, %r675, 65;
	add.s32 	%r677, %r657, %r676;
	mul.wide.u32 	%rd34, %r677, 4;
	mov.u64 	%rd35, shmem;
	add.s64 	%rd5, %rd35, %rd34;
	cvt.u64.u32 	%rd36, %r657;
	cvt.u64.u32 	%rd37, %r676;
	add.s64 	%rd38, %rd37, %rd36;
	shl.b64 	%rd39, %rd38, 2;
	add.s64 	%rd6, %rd35, %rd39;
	or.b32  	%r678, %r675, 32;
	mul.lo.s32 	%r679, %r678, 65;
	add.s32 	%r680, %r657, %r679;
	mul.wide.u32 	%rd40, %r680, 4;
	add.s64 	%rd7, %rd35, %rd40;
	cvt.u64.u32 	%rd41, %r679;
	add.s64 	%rd42, %rd36, %rd41;
	shl.b64 	%rd43, %rd42, 2;
	add.s64 	%rd8, %rd35, %rd43;
	shl.b32 	%r681, %r249, 15;
	add.s32 	%r682, %r681, -98304;
	shl.b32 	%r683, %r1, 10;
	shl.b32 	%r684, %r3, 5;
	and.b32  	%r685, %r684, 768;
	or.b32  	%r686, %r685, %r683;
	or.b32  	%r85, %r686, %r649;
	cvt.s64.s32 	%rd9, %r682;
	or.b32  	%r86, %r85, 16384;
	bfe.u32 	%r687, %r654, 5, 1;
	mul.lo.s32 	%r688, %r188, 65;
	and.b32  	%r689, %r1, 1;
	neg.s32 	%r690, %r689;
	and.b32  	%r691, %r690, 2080;
	bfe.s32 	%r692, %r1, 1, 1;
	and.b32  	%r693, %r1, 2;
	setp.eq.s32 	%p289, %r693, 0;
	and.b32  	%r694, %r692, 1040;
	bfe.s32 	%r695, %r1, 2, 1;
	and.b32  	%r696, %r1, 4;
	setp.eq.s32 	%p290, %r696, 0;
	and.b32  	%r697, %r695, 520;
	shr.u32 	%r698, %r1, 3;
	mul.lo.s32 	%r699, %r698, 260;
	or.b32  	%r700, %r691, %r657;
	add.s32 	%r701, %r700, %r688;
	add.s32 	%r702, %r701, %r694;
	add.s32 	%r703, %r702, %r697;
	add.s32 	%r704, %r703, %r699;
	mul.wide.u32 	%rd44, %r704, 4;
	add.s64 	%rd10, %rd35, %rd44;
	cvt.u64.u32 	%rd45, %r699;
	selp.b64 	%rd46, 0, 520, %p290;
	selp.b64 	%rd47, 0, 1040, %p289;
	cvt.u64.u32 	%rd48, %r688;
	cvt.u64.u32 	%rd49, %r700;
	add.s64 	%rd50, %rd49, %rd48;
	add.s64 	%rd51, %rd50, %rd47;
	add.s64 	%rd52, %rd51, %rd46;
	add.s64 	%rd53, %rd52, %rd45;
	shl.b64 	%rd54, %rd53, 2;
	add.s64 	%rd11, %rd35, %rd54;
	cvt.u64.u32 	%rd55, %r703;
	add.s64 	%rd56, %rd55, %rd45;
	shl.b64 	%rd57, %rd56, 2;
	add.s64 	%rd12, %rd35, %rd57;
	add.s32 	%r705, %r704, 162;
	mul.wide.u32 	%rd58, %r705, 4;
	add.s64 	%rd13, %rd35, %rd58;
	add.s32 	%r706, %r704, 131;
	mul.wide.u32 	%rd59, %r706, 4;
	add.s64 	%rd14, %rd35, %rd59;
	add.s32 	%r707, %r704, 163;
	mul.wide.u32 	%rd60, %r707, 4;
	add.s64 	%rd15, %rd35, %rd60;
	add.s32 	%r708, %r704, 4193;
	mul.wide.u32 	%rd61, %r708, 4;
	add.s64 	%rd16, %rd35, %rd61;
	add.s32 	%r709, %r704, 4162;
	mul.wide.u32 	%rd62, %r709, 4;
	add.s64 	%rd17, %rd35, %rd62;
	add.s32 	%r710, %r704, 4194;
	mul.wide.u32 	%rd63, %r710, 4;
	add.s64 	%rd18, %rd35, %rd63;
	add.s32 	%r711, %r704, 4323;
	mul.wide.u32 	%rd64, %r711, 4;
	add.s64 	%rd19, %rd35, %rd64;
	add.s32 	%r712, %r704, 4292;
	mul.wide.u32 	%rd65, %r712, 4;
	add.s64 	%rd20, %rd35, %rd65;
	add.s32 	%r713, %r704, 4324;
	mul.wide.u32 	%rd66, %r713, 4;
	add.s64 	%rd21, %rd35, %rd66;
	mul.lo.s32 	%r714, %r687, 65;
	and.b32  	%r715, %r653, 1040;
	setp.lt.u32 	%p291, %r3, 16;
	selp.b32 	%r716, 0, 520, %p291;
	setp.eq.s32 	%p292, %r185, 0;
	selp.b32 	%r87, 0, 130, %p292;
	shr.u32 	%r717, %r178, 3;
	mul.lo.s32 	%r88, %r717, 260;
	or.b32  	%r718, %r660, %r715;
	add.s32 	%r719, %r718, %r714;
	add.s32 	%r89, %r719, %r716;
	or.b32  	%r720, %r661, %r715;
	add.s32 	%r721, %r720, %r714;
	add.s32 	%r90, %r721, %r716;
	add.s32 	%r722, %r662, %r715;
	add.s32 	%r723, %r722, %r714;
	add.s32 	%r91, %r723, %r716;
	add.s32 	%r724, %r663, %r715;
	add.s32 	%r725, %r724, %r714;
	add.s32 	%r92, %r725, %r716;
	add.s32 	%r726, %r660, %r714;
	add.s32 	%r93, %r726, 2080;
	add.s32 	%r94, %r726, 2088;
	add.s32 	%r95, %r726, 2096;
	add.s32 	%r96, %r726, 2104;
	mov.u32 	%r16328, 0;
	setp.eq.s32 	%p294, %r74, 0;
	mov.u16 	%rs2393, 25600;
	mov.u16 	%rs2185, 21504;
	mov.u16 	%rs2401, 18432;
	mov.u32 	%r16329, %r16328;
	mov.u32 	%r16330, %r16328;
	mov.u32 	%r16331, %r16328;
	mov.u32 	%r16332, %r16328;
	mov.u32 	%r16333, %r16328;
	mov.u32 	%r16334, %r16328;
	mov.u32 	%r16335, %r16328;
	mov.u32 	%r16336, %r16328;
	mov.u32 	%r16337, %r16328;
	mov.u32 	%r16338, %r16328;
	mov.u32 	%r16339, %r16328;
	mov.u32 	%r16340, %r16328;
	mov.u32 	%r16341, %r16328;
	mov.u32 	%r16342, %r16328;
	mov.u32 	%r16343, %r16328;
	mov.u32 	%r16344, %r16328;
	mov.u32 	%r16345, %r16328;
	mov.u32 	%r16346, %r16328;
	mov.u32 	%r16347, %r16328;
	mov.u32 	%r16348, %r16328;
	mov.u32 	%r16349, %r16328;
	mov.u32 	%r16350, %r16328;
	mov.u32 	%r16351, %r16328;
	mov.u32 	%r16352, %r16328;
	bra.uni 	$L__BB0_116;
$L__BB0_122:                            // %L70498
                                        //   in Loop: Header=BB0_116 Depth=1
	add.s32 	%r172, %r16352, 256;
	setp.ne.s32 	%p319, %r16352, 32512;
	mov.u32 	%r16352, %r172;
	@%p319 bra 	$L__BB0_116;
	bra.uni 	$L__BB0_123;
$L__BB0_116:                            // %L2122
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_118 Depth 2
	add.s32 	%r727, %r16352, %r247;
	setp.lt.s32 	%p293, %r727, %r248;
	@%p293 bra 	$L__BB0_117;
	bra.uni 	$L__BB0_123;
$L__BB0_117:                            // %pass797
                                        //   in Loop: Header=BB0_116 Depth=1
	or.b32  	%r793, %r16352, %r177;
	and.b32  	%r794, %r793, 32544;
	or.b32  	%r795, %r794, %r71;
	or.b32  	%r796, %r795, %r1;
	add.s32 	%r797, %r796, %r247;
	mad.lo.s32 	%r798, %r797, 12288, %r73;
	mul.hi.s32 	%r799, %r798, 715827883;
	shr.u32 	%r800, %r799, 31;
	shr.s32 	%r801, %r799, 26;
	add.s32 	%r802, %r801, %r800;
	setp.lt.s32 	%p295, %r798, 0;
	mul.lo.s32 	%r803, %r802, 402653184;
	setp.ne.s32 	%p296, %r803, %r798;
	and.pred  	%p297, %p295, %p296;
	selp.s32 	%r804, -1, 0, %p297;
	add.s32 	%r805, %r802, %r804;
	mad.lo.s32 	%r806, %r805, -402653184, %r798;
	mul.wide.s32 	%rd67, %r806, 4;
	add.s64 	%rd68, %rd2, %rd67;
	ld.global.v4.u32 	{%r807, %r808, %r809, %r810}, [%rd68];
	or.b32  	%r811, %r796, 16;
	add.s32 	%r812, %r811, %r247;
	mad.lo.s32 	%r813, %r812, 12288, %r73;
	mul.hi.s32 	%r814, %r813, 715827883;
	shr.u32 	%r815, %r814, 31;
	shr.s32 	%r816, %r814, 26;
	add.s32 	%r817, %r816, %r815;
	setp.lt.s32 	%p298, %r813, 0;
	mul.lo.s32 	%r818, %r817, 402653184;
	setp.ne.s32 	%p299, %r818, %r813;
	and.pred  	%p300, %p298, %p299;
	selp.s32 	%r819, -1, 0, %p300;
	add.s32 	%r820, %r817, %r819;
	mad.lo.s32 	%r821, %r820, -402653184, %r813;
	mul.wide.s32 	%rd69, %r821, 4;
	add.s64 	%rd70, %rd2, %rd69;
	ld.global.v4.u32 	{%r822, %r823, %r824, %r825}, [%rd70];
	or.b32  	%r826, %r796, 128;
	add.s32 	%r827, %r826, %r247;
	mad.lo.s32 	%r828, %r827, 12288, %r73;
	mul.hi.s32 	%r829, %r828, 715827883;
	shr.u32 	%r830, %r829, 31;
	shr.s32 	%r831, %r829, 26;
	add.s32 	%r832, %r831, %r830;
	setp.lt.s32 	%p301, %r828, 0;
	mul.lo.s32 	%r833, %r832, 402653184;
	setp.ne.s32 	%p302, %r833, %r828;
	and.pred  	%p303, %p301, %p302;
	selp.s32 	%r834, -1, 0, %p303;
	add.s32 	%r835, %r832, %r834;
	mad.lo.s32 	%r836, %r835, -402653184, %r828;
	mul.wide.s32 	%rd71, %r836, 4;
	add.s64 	%rd72, %rd2, %rd71;
	ld.global.v4.u32 	{%r837, %r838, %r839, %r840}, [%rd72];
	or.b32  	%r841, %r796, 144;
	add.s32 	%r842, %r841, %r247;
	mad.lo.s32 	%r843, %r842, 12288, %r73;
	mul.hi.s32 	%r844, %r843, 715827883;
	shr.u32 	%r845, %r844, 31;
	shr.s32 	%r846, %r844, 26;
	add.s32 	%r847, %r846, %r845;
	setp.lt.s32 	%p304, %r843, 0;
	mul.lo.s32 	%r848, %r847, 402653184;
	setp.ne.s32 	%p305, %r848, %r843;
	and.pred  	%p306, %p304, %p305;
	selp.s32 	%r849, -1, 0, %p306;
	add.s32 	%r850, %r847, %r849;
	mad.lo.s32 	%r851, %r850, -402653184, %r843;
	mul.wide.s32 	%rd73, %r851, 4;
	add.s64 	%rd74, %rd2, %rd73;
	ld.global.v4.u32 	{%r852, %r853, %r854, %r855}, [%rd74];
	selp.b32 	%r856, %r809, %r807, %p294;
	shfl.sync.bfly.b32	%r857, %r856, 8, 31, -1;
	selp.b32 	%r729, %r807, %r857, %p294;
	selp.b32 	%r730, %r857, %r809, %p294;
	selp.b32 	%r858, %r810, %r808, %p294;
	shfl.sync.bfly.b32	%r859, %r858, 8, 31, -1;
	selp.b32 	%r737, %r808, %r859, %p294;
	selp.b32 	%r738, %r859, %r810, %p294;
	selp.b32 	%r860, %r824, %r822, %p294;
	shfl.sync.bfly.b32	%r861, %r860, 8, 31, -1;
	selp.b32 	%r745, %r822, %r861, %p294;
	selp.b32 	%r746, %r861, %r824, %p294;
	selp.b32 	%r862, %r825, %r823, %p294;
	shfl.sync.bfly.b32	%r863, %r862, 8, 31, -1;
	selp.b32 	%r753, %r823, %r863, %p294;
	selp.b32 	%r754, %r863, %r825, %p294;
	selp.b32 	%r864, %r839, %r837, %p294;
	shfl.sync.bfly.b32	%r865, %r864, 8, 31, -1;
	selp.b32 	%r761, %r837, %r865, %p294;
	selp.b32 	%r762, %r865, %r839, %p294;
	selp.b32 	%r866, %r840, %r838, %p294;
	shfl.sync.bfly.b32	%r867, %r866, 8, 31, -1;
	selp.b32 	%r769, %r838, %r867, %p294;
	selp.b32 	%r770, %r867, %r840, %p294;
	selp.b32 	%r868, %r854, %r852, %p294;
	shfl.sync.bfly.b32	%r869, %r868, 8, 31, -1;
	selp.b32 	%r777, %r852, %r869, %p294;
	selp.b32 	%r778, %r869, %r854, %p294;
	selp.b32 	%r870, %r855, %r853, %p294;
	shfl.sync.bfly.b32	%r871, %r870, 8, 31, -1;
	selp.b32 	%r785, %r853, %r871, %p294;
	selp.b32 	%r786, %r871, %r855, %p294;
	mov.u32 	%r787, 21520;
	// begin inline asm
	prmt.b32 %r728, %r729, %r730, %r787;
	// end inline asm
	mov.u32 	%r791, 30258;
	// begin inline asm
	prmt.b32 %r732, %r729, %r730, %r791;
	// end inline asm
	// begin inline asm
	prmt.b32 %r736, %r737, %r738, %r787;
	// end inline asm
	// begin inline asm
	prmt.b32 %r740, %r737, %r738, %r791;
	// end inline asm
	// begin inline asm
	prmt.b32 %r744, %r745, %r746, %r787;
	// end inline asm
	// begin inline asm
	prmt.b32 %r748, %r745, %r746, %r791;
	// end inline asm
	// begin inline asm
	prmt.b32 %r752, %r753, %r754, %r787;
	// end inline asm
	// begin inline asm
	prmt.b32 %r756, %r753, %r754, %r791;
	// end inline asm
	// begin inline asm
	prmt.b32 %r760, %r761, %r762, %r787;
	// end inline asm
	// begin inline asm
	prmt.b32 %r764, %r761, %r762, %r791;
	// end inline asm
	// begin inline asm
	prmt.b32 %r768, %r769, %r770, %r787;
	// end inline asm
	// begin inline asm
	prmt.b32 %r772, %r769, %r770, %r791;
	// end inline asm
	// begin inline asm
	prmt.b32 %r776, %r777, %r778, %r787;
	// end inline asm
	// begin inline asm
	prmt.b32 %r780, %r777, %r778, %r791;
	// end inline asm
	// begin inline asm
	prmt.b32 %r784, %r785, %r786, %r787;
	// end inline asm
	// begin inline asm
	prmt.b32 %r788, %r785, %r786, %r791;
	// end inline asm
	st.shared.u32 	[%rd10], %r728;
	st.shared.u32 	[%rd11+128], %r732;
	st.shared.u32 	[%rd11+4], %r736;
	st.shared.u32 	[%rd11+132], %r740;
	st.shared.u32 	[%rd12+520], %r744;
	st.shared.u32 	[%rd13], %r748;
	st.shared.u32 	[%rd14], %r752;
	st.shared.u32 	[%rd15], %r756;
	st.shared.u32 	[%rd12+16644], %r760;
	st.shared.u32 	[%rd16], %r764;
	st.shared.u32 	[%rd17], %r768;
	st.shared.u32 	[%rd18], %r772;
	st.shared.u32 	[%rd12+17164], %r776;
	st.shared.u32 	[%rd19], %r780;
	st.shared.u32 	[%rd20], %r784;
	st.shared.u32 	[%rd21], %r788;
	bar.sync 	0;
	mov.u32 	%r16353, %r257;
$L__BB0_118:                            // %L13565
                                        //   Parent Loop BB0_116 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.eq.s32 	%p307, %r16353, 1;
	selp.b32 	%r16136, 0, 4161, %p307;
	add.s32 	%r16137, %r89, %r16136;
	add.s32 	%r16138, %r16137, %r87;
	add.s32 	%r16139, %r16138, %r88;
	mul.wide.u32 	%rd75, %r16139, 4;
	add.s64 	%rd77, %rd35, %rd75;
	ld.shared.u32 	%r16140, [%rd77];
	add.s32 	%r16141, %r90, %r16136;
	add.s32 	%r16142, %r16141, %r87;
	add.s32 	%r16143, %r16142, %r88;
	mul.wide.u32 	%rd78, %r16143, 4;
	add.s64 	%rd79, %rd35, %rd78;
	ld.shared.u32 	%r16144, [%rd79];
	add.s32 	%r16145, %r91, %r16136;
	add.s32 	%r16146, %r16145, %r87;
	add.s32 	%r16147, %r16146, %r88;
	mul.wide.u32 	%rd80, %r16147, 4;
	add.s64 	%rd81, %rd35, %rd80;
	ld.shared.u32 	%r16148, [%rd81];
	add.s32 	%r16149, %r92, %r16136;
	add.s32 	%r16150, %r16149, %r87;
	add.s32 	%r16151, %r16150, %r88;
	mul.wide.u32 	%rd82, %r16151, 4;
	add.s64 	%rd83, %rd35, %rd82;
	ld.shared.u32 	%r16152, [%rd83];
	add.s32 	%r16153, %r16352, %r16353;
	or.b32  	%r16154, %r16153, %r178;
	or.b32  	%r16155, %r16154, %r75;
	or.b32  	%r16156, %r16155, %r76;
	bfe.s32 	%r16157, %r16156, 1, 1;
	and.b32  	%r16158, %r16157, 1040;
	bfe.s32 	%r16159, %r16156, 2, 1;
	and.b32  	%r16160, %r16159, 520;
	add.s32 	%r16161, %r93, %r16158;
	add.s32 	%r16162, %r16161, %r16160;
	add.s32 	%r16163, %r16162, %r16136;
	add.s32 	%r16164, %r16163, %r87;
	add.s32 	%r16165, %r16164, %r88;
	mul.wide.u32 	%rd84, %r16165, 4;
	add.s64 	%rd85, %rd35, %rd84;
	ld.shared.u32 	%r16166, [%rd85];
	add.s32 	%r16167, %r94, %r16158;
	add.s32 	%r16168, %r16167, %r16160;
	add.s32 	%r16169, %r16168, %r16136;
	add.s32 	%r16170, %r16169, %r87;
	add.s32 	%r16171, %r16170, %r88;
	mul.wide.u32 	%rd86, %r16171, 4;
	add.s64 	%rd87, %rd35, %rd86;
	ld.shared.u32 	%r16172, [%rd87];
	add.s32 	%r16173, %r95, %r16158;
	add.s32 	%r16174, %r16173, %r16160;
	add.s32 	%r16175, %r16174, %r16136;
	add.s32 	%r16176, %r16175, %r87;
	add.s32 	%r16177, %r16176, %r88;
	mul.wide.u32 	%rd88, %r16177, 4;
	add.s64 	%rd89, %rd35, %rd88;
	ld.shared.u32 	%r16178, [%rd89];
	add.s32 	%r16179, %r96, %r16158;
	add.s32 	%r16180, %r16179, %r16160;
	add.s32 	%r16181, %r16180, %r16136;
	add.s32 	%r16182, %r16181, %r87;
	add.s32 	%r16183, %r16182, %r88;
	mul.wide.u32 	%rd90, %r16183, 4;
	add.s64 	%rd91, %rd35, %rd90;
	ld.shared.u32 	%r16184, [%rd91];
	// begin inline asm
	mov.b32 %r877, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r888, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r876, %r16140, -2004318072;
	mov.u32 	%r875, 983055;
	// begin inline asm
	lop3.b32 %r874, %r875, %r876, %r877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r878, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r879, %r877, %r878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r882, %r874, %r879;
	// end inline asm
	mov.u32 	%r886, 15728880;
	// begin inline asm
	lop3.b32 %r885, %r886, %r876, %r888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r889, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r890, %r888, %r889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r893, %r885, %r890;
	// end inline asm
	shr.u32 	%r898, %r876, 8;
	// begin inline asm
	lop3.b32 %r896, %r875, %r898, %r877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r900, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r901, %r877, %r900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r904, %r896, %r901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r907, %r886, %r898, %r888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r911, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r912, %r888, %r911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r915, %r907, %r912;
	// end inline asm
	// begin inline asm
	mov.b32 %r923, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r934, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r922, %r16144, -2004318072;
	// begin inline asm
	lop3.b32 %r920, %r875, %r922, %r923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r924, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r925, %r923, %r924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r928, %r920, %r925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r931, %r886, %r922, %r934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r935, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r936, %r934, %r935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r939, %r931, %r936;
	// end inline asm
	shr.u32 	%r944, %r922, 8;
	// begin inline asm
	lop3.b32 %r942, %r875, %r944, %r923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r946, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r947, %r923, %r946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r950, %r942, %r947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r953, %r886, %r944, %r934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r957, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r958, %r934, %r957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r961, %r953, %r958;
	// end inline asm
	// begin inline asm
	mov.b32 %r969, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r980, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r968, %r16148, -2004318072;
	// begin inline asm
	lop3.b32 %r966, %r875, %r968, %r969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r970, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r971, %r969, %r970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r974, %r966, %r971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r977, %r886, %r968, %r980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r981, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r982, %r980, %r981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r985, %r977, %r982;
	// end inline asm
	shr.u32 	%r990, %r968, 8;
	// begin inline asm
	lop3.b32 %r988, %r875, %r990, %r969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r992, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r993, %r969, %r992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r996, %r988, %r993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r999, %r886, %r990, %r980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1003, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1004, %r980, %r1003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1007, %r999, %r1004;
	// end inline asm
	// begin inline asm
	mov.b32 %r1015, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1026, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1014, %r16152, -2004318072;
	// begin inline asm
	lop3.b32 %r1012, %r875, %r1014, %r1015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1016, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1017, %r1015, %r1016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1020, %r1012, %r1017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1023, %r886, %r1014, %r1026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1027, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1028, %r1026, %r1027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1031, %r1023, %r1028;
	// end inline asm
	shr.u32 	%r1036, %r1014, 8;
	// begin inline asm
	lop3.b32 %r1034, %r875, %r1036, %r1015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1038, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1039, %r1015, %r1038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1042, %r1034, %r1039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1045, %r886, %r1036, %r1026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1049, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1050, %r1026, %r1049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1053, %r1045, %r1050;
	// end inline asm
	// begin inline asm
	mov.b32 %r1061, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1072, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1060, %r16166, -2004318072;
	// begin inline asm
	lop3.b32 %r1058, %r875, %r1060, %r1061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1062, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1063, %r1061, %r1062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1066, %r1058, %r1063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1069, %r886, %r1060, %r1072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1073, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1074, %r1072, %r1073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1077, %r1069, %r1074;
	// end inline asm
	shr.u32 	%r1082, %r1060, 8;
	// begin inline asm
	lop3.b32 %r1080, %r875, %r1082, %r1061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1084, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1085, %r1061, %r1084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1088, %r1080, %r1085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1091, %r886, %r1082, %r1072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1095, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1096, %r1072, %r1095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1099, %r1091, %r1096;
	// end inline asm
	// begin inline asm
	mov.b32 %r1107, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1118, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1106, %r16172, -2004318072;
	// begin inline asm
	lop3.b32 %r1104, %r875, %r1106, %r1107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1108, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1109, %r1107, %r1108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1112, %r1104, %r1109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1115, %r886, %r1106, %r1118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1119, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1120, %r1118, %r1119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1123, %r1115, %r1120;
	// end inline asm
	shr.u32 	%r1128, %r1106, 8;
	// begin inline asm
	lop3.b32 %r1126, %r875, %r1128, %r1107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1130, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1131, %r1107, %r1130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1134, %r1126, %r1131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1137, %r886, %r1128, %r1118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1141, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1142, %r1118, %r1141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1145, %r1137, %r1142;
	// end inline asm
	// begin inline asm
	mov.b32 %r1153, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1164, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1152, %r16178, -2004318072;
	// begin inline asm
	lop3.b32 %r1150, %r875, %r1152, %r1153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1154, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1155, %r1153, %r1154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1158, %r1150, %r1155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1161, %r886, %r1152, %r1164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1165, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1166, %r1164, %r1165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1169, %r1161, %r1166;
	// end inline asm
	shr.u32 	%r1174, %r1152, 8;
	// begin inline asm
	lop3.b32 %r1172, %r875, %r1174, %r1153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1176, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1177, %r1153, %r1176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1180, %r1172, %r1177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1183, %r886, %r1174, %r1164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1187, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1188, %r1164, %r1187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1191, %r1183, %r1188;
	// end inline asm
	// begin inline asm
	mov.b32 %r1199, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1210, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1198, %r16184, -2004318072;
	// begin inline asm
	lop3.b32 %r1196, %r875, %r1198, %r1199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1200, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1201, %r1199, %r1200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1204, %r1196, %r1201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1207, %r886, %r1198, %r1210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1211, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1212, %r1210, %r1211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1215, %r1207, %r1212;
	// end inline asm
	shr.u32 	%r1220, %r1198, 8;
	// begin inline asm
	lop3.b32 %r1218, %r875, %r1220, %r1199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1222, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1223, %r1199, %r1222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1226, %r1218, %r1223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1229, %r886, %r1220, %r1210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1233, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1234, %r1210, %r1233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1237, %r1229, %r1234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1240, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1242, %r1240, %r882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1245, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1247, %r1245, %r893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1250, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1252, %r1250, %r904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1255, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1257, %r1255, %r915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1260, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1262, %r1260, %r928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1265, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1267, %r1265, %r939;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1270, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1272, %r1270, %r950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1275, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1277, %r1275, %r961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1280, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1282, %r1280, %r974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1285, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1287, %r1285, %r985;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1290, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1292, %r1290, %r996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1295, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1297, %r1295, %r1007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1300, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1302, %r1300, %r1020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1305, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1307, %r1305, %r1031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1310, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1312, %r1310, %r1042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1315, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1317, %r1315, %r1053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1320, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1322, %r1320, %r1066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1325, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1327, %r1325, %r1077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1330, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1332, %r1330, %r1088;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1335, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1337, %r1335, %r1099;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1340, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1342, %r1340, %r1112;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1345, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1347, %r1345, %r1123;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1350, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1352, %r1350, %r1134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1355, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1357, %r1355, %r1145;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1360, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1362, %r1360, %r1158;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1365, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1367, %r1365, %r1169;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1370, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1372, %r1370, %r1180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1375, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1377, %r1375, %r1191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1380, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1382, %r1380, %r1204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1385, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1387, %r1385, %r1215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1390, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1392, %r1390, %r1226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1395, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1397, %r1395, %r1237;
	// end inline asm
	// begin inline asm
	mov.b32 %r1405, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1416, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1404, %r16328, -2004318072;
	// begin inline asm
	lop3.b32 %r1402, %r875, %r1404, %r1405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1406, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1407, %r1405, %r1406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1410, %r1402, %r1407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1413, %r886, %r1404, %r1416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1417, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1418, %r1416, %r1417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1421, %r1413, %r1418;
	// end inline asm
	shr.u32 	%r1426, %r1404, 8;
	// begin inline asm
	lop3.b32 %r1424, %r875, %r1426, %r1405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1428, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1429, %r1405, %r1428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1432, %r1424, %r1429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1435, %r886, %r1426, %r1416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1439, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1440, %r1416, %r1439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1443, %r1435, %r1440;
	// end inline asm
	// begin inline asm
	mov.b32 %r1451, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1462, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1450, %r16329, -2004318072;
	// begin inline asm
	lop3.b32 %r1448, %r875, %r1450, %r1451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1452, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1453, %r1451, %r1452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1456, %r1448, %r1453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1459, %r886, %r1450, %r1462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1463, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1464, %r1462, %r1463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1467, %r1459, %r1464;
	// end inline asm
	shr.u32 	%r1472, %r1450, 8;
	// begin inline asm
	lop3.b32 %r1470, %r875, %r1472, %r1451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1474, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1475, %r1451, %r1474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1478, %r1470, %r1475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1481, %r886, %r1472, %r1462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1485, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1486, %r1462, %r1485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1489, %r1481, %r1486;
	// end inline asm
	// begin inline asm
	mov.b32 %r1497, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1508, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1496, %r16330, -2004318072;
	// begin inline asm
	lop3.b32 %r1494, %r875, %r1496, %r1497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1498, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1499, %r1497, %r1498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1502, %r1494, %r1499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1505, %r886, %r1496, %r1508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1509, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1510, %r1508, %r1509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1513, %r1505, %r1510;
	// end inline asm
	shr.u32 	%r1518, %r1496, 8;
	// begin inline asm
	lop3.b32 %r1516, %r875, %r1518, %r1497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1520, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1521, %r1497, %r1520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1524, %r1516, %r1521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1527, %r886, %r1518, %r1508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1531, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1532, %r1508, %r1531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1535, %r1527, %r1532;
	// end inline asm
	// begin inline asm
	mov.b32 %r1543, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1554, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1542, %r16331, -2004318072;
	// begin inline asm
	lop3.b32 %r1540, %r875, %r1542, %r1543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1544, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1545, %r1543, %r1544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1548, %r1540, %r1545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1551, %r886, %r1542, %r1554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1555, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1556, %r1554, %r1555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1559, %r1551, %r1556;
	// end inline asm
	shr.u32 	%r1564, %r1542, 8;
	// begin inline asm
	lop3.b32 %r1562, %r875, %r1564, %r1543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1566, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1567, %r1543, %r1566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1570, %r1562, %r1567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1573, %r886, %r1564, %r1554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1577, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1578, %r1554, %r1577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1581, %r1573, %r1578;
	// end inline asm
	// begin inline asm
	mov.b32 %r1589, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1600, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1588, %r16340, -2004318072;
	// begin inline asm
	lop3.b32 %r1586, %r875, %r1588, %r1589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1590, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1591, %r1589, %r1590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1594, %r1586, %r1591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1597, %r886, %r1588, %r1600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1601, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1602, %r1600, %r1601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1605, %r1597, %r1602;
	// end inline asm
	shr.u32 	%r1610, %r1588, 8;
	// begin inline asm
	lop3.b32 %r1608, %r875, %r1610, %r1589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1612, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1613, %r1589, %r1612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1616, %r1608, %r1613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1619, %r886, %r1610, %r1600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1623, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1624, %r1600, %r1623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1627, %r1619, %r1624;
	// end inline asm
	// begin inline asm
	mov.b32 %r1635, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1646, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1634, %r16341, -2004318072;
	// begin inline asm
	lop3.b32 %r1632, %r875, %r1634, %r1635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1636, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1637, %r1635, %r1636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1640, %r1632, %r1637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1643, %r886, %r1634, %r1646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1647, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1648, %r1646, %r1647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1651, %r1643, %r1648;
	// end inline asm
	shr.u32 	%r1656, %r1634, 8;
	// begin inline asm
	lop3.b32 %r1654, %r875, %r1656, %r1635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1658, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1659, %r1635, %r1658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1662, %r1654, %r1659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1665, %r886, %r1656, %r1646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1669, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1670, %r1646, %r1669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1673, %r1665, %r1670;
	// end inline asm
	// begin inline asm
	mov.b32 %r1681, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1692, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1680, %r16342, -2004318072;
	// begin inline asm
	lop3.b32 %r1678, %r875, %r1680, %r1681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1682, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1683, %r1681, %r1682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1686, %r1678, %r1683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1689, %r886, %r1680, %r1692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1693, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1694, %r1692, %r1693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1697, %r1689, %r1694;
	// end inline asm
	shr.u32 	%r1702, %r1680, 8;
	// begin inline asm
	lop3.b32 %r1700, %r875, %r1702, %r1681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1704, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1705, %r1681, %r1704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1708, %r1700, %r1705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1711, %r886, %r1702, %r1692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1715, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1716, %r1692, %r1715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1719, %r1711, %r1716;
	// end inline asm
	// begin inline asm
	mov.b32 %r1727, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1738, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1726, %r16343, -2004318072;
	// begin inline asm
	lop3.b32 %r1724, %r875, %r1726, %r1727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1728, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1729, %r1727, %r1728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1732, %r1724, %r1729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1735, %r886, %r1726, %r1738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1739, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1740, %r1738, %r1739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1743, %r1735, %r1740;
	// end inline asm
	shr.u32 	%r1748, %r1726, 8;
	// begin inline asm
	lop3.b32 %r1746, %r875, %r1748, %r1727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1750, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1751, %r1727, %r1750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1754, %r1746, %r1751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1757, %r886, %r1748, %r1738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1761, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1762, %r1738, %r1761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1765, %r1757, %r1762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1768, %r293, %r1410, %r1242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1772, %r293, %r1421, %r1247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1776, %r293, %r1432, %r1252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1780, %r293, %r1443, %r1257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1784, %r293, %r1456, %r1262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1788, %r293, %r1467, %r1267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1792, %r293, %r1478, %r1272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1796, %r293, %r1489, %r1277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1800, %r293, %r1502, %r1282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1804, %r293, %r1513, %r1287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1808, %r293, %r1524, %r1292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1812, %r293, %r1535, %r1297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1816, %r293, %r1548, %r1302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1820, %r293, %r1559, %r1307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1824, %r293, %r1570, %r1312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1828, %r293, %r1581, %r1317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1832, %r311, %r1594, %r1322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1836, %r311, %r1605, %r1327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1840, %r311, %r1616, %r1332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1844, %r311, %r1627, %r1337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1848, %r311, %r1640, %r1342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1852, %r311, %r1651, %r1347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1856, %r311, %r1662, %r1352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1860, %r311, %r1673, %r1357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1864, %r311, %r1686, %r1362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1868, %r311, %r1697, %r1367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1872, %r311, %r1708, %r1372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1876, %r311, %r1719, %r1377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1880, %r311, %r1732, %r1382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1884, %r311, %r1743, %r1387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1888, %r311, %r1754, %r1392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1892, %r311, %r1765, %r1397;
	// end inline asm
	// begin inline asm
	mov.b32 %r1901, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1912, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1900, %r16332, -2004318072;
	// begin inline asm
	lop3.b32 %r1898, %r875, %r1900, %r1901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1902, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1903, %r1901, %r1902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1906, %r1898, %r1903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1909, %r886, %r1900, %r1912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1913, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1914, %r1912, %r1913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1917, %r1909, %r1914;
	// end inline asm
	shr.u32 	%r1922, %r1900, 8;
	// begin inline asm
	lop3.b32 %r1920, %r875, %r1922, %r1901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1924, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1925, %r1901, %r1924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1928, %r1920, %r1925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1931, %r886, %r1922, %r1912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1935, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1936, %r1912, %r1935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1939, %r1931, %r1936;
	// end inline asm
	// begin inline asm
	mov.b32 %r1947, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1958, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1946, %r16333, -2004318072;
	// begin inline asm
	lop3.b32 %r1944, %r875, %r1946, %r1947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1948, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1949, %r1947, %r1948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1952, %r1944, %r1949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1955, %r886, %r1946, %r1958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1959, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1960, %r1958, %r1959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1963, %r1955, %r1960;
	// end inline asm
	shr.u32 	%r1968, %r1946, 8;
	// begin inline asm
	lop3.b32 %r1966, %r875, %r1968, %r1947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1970, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1971, %r1947, %r1970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1974, %r1966, %r1971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1977, %r886, %r1968, %r1958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1981, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1982, %r1958, %r1981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1985, %r1977, %r1982;
	// end inline asm
	// begin inline asm
	mov.b32 %r1993, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2004, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1992, %r16334, -2004318072;
	// begin inline asm
	lop3.b32 %r1990, %r875, %r1992, %r1993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1994, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1995, %r1993, %r1994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1998, %r1990, %r1995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2001, %r886, %r1992, %r2004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2005, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2006, %r2004, %r2005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2009, %r2001, %r2006;
	// end inline asm
	shr.u32 	%r2014, %r1992, 8;
	// begin inline asm
	lop3.b32 %r2012, %r875, %r2014, %r1993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2016, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2017, %r1993, %r2016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2020, %r2012, %r2017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2023, %r886, %r2014, %r2004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2027, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2028, %r2004, %r2027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2031, %r2023, %r2028;
	// end inline asm
	// begin inline asm
	mov.b32 %r2039, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2050, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2038, %r16335, -2004318072;
	// begin inline asm
	lop3.b32 %r2036, %r875, %r2038, %r2039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2040, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2041, %r2039, %r2040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2044, %r2036, %r2041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2047, %r886, %r2038, %r2050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2051, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2052, %r2050, %r2051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2055, %r2047, %r2052;
	// end inline asm
	shr.u32 	%r2060, %r2038, 8;
	// begin inline asm
	lop3.b32 %r2058, %r875, %r2060, %r2039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2062, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2063, %r2039, %r2062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2066, %r2058, %r2063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2069, %r886, %r2060, %r2050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2073, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2074, %r2050, %r2073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2077, %r2069, %r2074;
	// end inline asm
	// begin inline asm
	mov.b32 %r2085, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2096, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2084, %r16344, -2004318072;
	// begin inline asm
	lop3.b32 %r2082, %r875, %r2084, %r2085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2086, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2087, %r2085, %r2086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2090, %r2082, %r2087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2093, %r886, %r2084, %r2096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2097, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2098, %r2096, %r2097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2101, %r2093, %r2098;
	// end inline asm
	shr.u32 	%r2106, %r2084, 8;
	// begin inline asm
	lop3.b32 %r2104, %r875, %r2106, %r2085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2108, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2109, %r2085, %r2108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2112, %r2104, %r2109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2115, %r886, %r2106, %r2096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2119, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2120, %r2096, %r2119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2123, %r2115, %r2120;
	// end inline asm
	// begin inline asm
	mov.b32 %r2131, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2142, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2130, %r16345, -2004318072;
	// begin inline asm
	lop3.b32 %r2128, %r875, %r2130, %r2131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2132, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2133, %r2131, %r2132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2136, %r2128, %r2133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2139, %r886, %r2130, %r2142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2143, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2144, %r2142, %r2143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2147, %r2139, %r2144;
	// end inline asm
	shr.u32 	%r2152, %r2130, 8;
	// begin inline asm
	lop3.b32 %r2150, %r875, %r2152, %r2131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2154, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2155, %r2131, %r2154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2158, %r2150, %r2155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2161, %r886, %r2152, %r2142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2165, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2166, %r2142, %r2165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2169, %r2161, %r2166;
	// end inline asm
	// begin inline asm
	mov.b32 %r2177, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2188, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2176, %r16346, -2004318072;
	// begin inline asm
	lop3.b32 %r2174, %r875, %r2176, %r2177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2178, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2179, %r2177, %r2178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2182, %r2174, %r2179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2185, %r886, %r2176, %r2188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2189, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2190, %r2188, %r2189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2193, %r2185, %r2190;
	// end inline asm
	shr.u32 	%r2198, %r2176, 8;
	// begin inline asm
	lop3.b32 %r2196, %r875, %r2198, %r2177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2200, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2201, %r2177, %r2200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2204, %r2196, %r2201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2207, %r886, %r2198, %r2188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2211, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2212, %r2188, %r2211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2215, %r2207, %r2212;
	// end inline asm
	// begin inline asm
	mov.b32 %r2223, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2234, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2222, %r16347, -2004318072;
	// begin inline asm
	lop3.b32 %r2220, %r875, %r2222, %r2223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2224, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2225, %r2223, %r2224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2228, %r2220, %r2225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2231, %r886, %r2222, %r2234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2235, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2236, %r2234, %r2235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2239, %r2231, %r2236;
	// end inline asm
	shr.u32 	%r2244, %r2222, 8;
	// begin inline asm
	lop3.b32 %r2242, %r875, %r2244, %r2223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2246, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2247, %r2223, %r2246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2250, %r2242, %r2247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2253, %r886, %r2244, %r2234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2257, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2258, %r2234, %r2257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2261, %r2253, %r2258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2264, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2266, %r2264, %r1906, %r1768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2270, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2272, %r2270, %r1917, %r1772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2276, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2278, %r2276, %r1928, %r1776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2282, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2284, %r2282, %r1939, %r1780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2288, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2290, %r2288, %r1952, %r1784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2294, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2296, %r2294, %r1963, %r1788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2300, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2302, %r2300, %r1974, %r1792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2306, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2308, %r2306, %r1985, %r1796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2312, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2314, %r2312, %r1998, %r1800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2318, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2320, %r2318, %r2009, %r1804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2324, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2326, %r2324, %r2020, %r1808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2330, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2332, %r2330, %r2031, %r1812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2336, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2338, %r2336, %r2044, %r1816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2342, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2344, %r2342, %r2055, %r1820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2348, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2350, %r2348, %r2066, %r1824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2354, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2356, %r2354, %r2077, %r1828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2360, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2362, %r2360, %r2090, %r1832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2366, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2368, %r2366, %r2101, %r1836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2372, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2374, %r2372, %r2112, %r1840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2378, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2380, %r2378, %r2123, %r1844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2384, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2386, %r2384, %r2136, %r1848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2390, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2392, %r2390, %r2147, %r1852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2396, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2398, %r2396, %r2158, %r1856;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2402, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2404, %r2402, %r2169, %r1860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2408, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2410, %r2408, %r2182, %r1864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2414, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2416, %r2414, %r2193, %r1868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2420, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2422, %r2420, %r2204, %r1872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2426, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2428, %r2426, %r2215, %r1876;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2432, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2434, %r2432, %r2228, %r1880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2438, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2440, %r2438, %r2239, %r1884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2444, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2446, %r2444, %r2250, %r1888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2450, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2452, %r2450, %r2261, %r1892;
	// end inline asm
	// begin inline asm
	mov.b32 %r2461, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2472, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2460, %r16336, -2004318072;
	// begin inline asm
	lop3.b32 %r2458, %r875, %r2460, %r2461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2462, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2463, %r2461, %r2462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2466, %r2458, %r2463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2469, %r886, %r2460, %r2472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2473, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2474, %r2472, %r2473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2477, %r2469, %r2474;
	// end inline asm
	shr.u32 	%r2482, %r2460, 8;
	// begin inline asm
	lop3.b32 %r2480, %r875, %r2482, %r2461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2484, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2485, %r2461, %r2484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2488, %r2480, %r2485;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2491, %r886, %r2482, %r2472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2495, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2496, %r2472, %r2495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2499, %r2491, %r2496;
	// end inline asm
	// begin inline asm
	mov.b32 %r2507, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2518, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2506, %r16337, -2004318072;
	// begin inline asm
	lop3.b32 %r2504, %r875, %r2506, %r2507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2508, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2509, %r2507, %r2508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2512, %r2504, %r2509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2515, %r886, %r2506, %r2518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2519, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2520, %r2518, %r2519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2523, %r2515, %r2520;
	// end inline asm
	shr.u32 	%r2528, %r2506, 8;
	// begin inline asm
	lop3.b32 %r2526, %r875, %r2528, %r2507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2530, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2531, %r2507, %r2530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2534, %r2526, %r2531;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2537, %r886, %r2528, %r2518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2541, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2542, %r2518, %r2541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2545, %r2537, %r2542;
	// end inline asm
	// begin inline asm
	mov.b32 %r2553, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2564, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2552, %r16338, -2004318072;
	// begin inline asm
	lop3.b32 %r2550, %r875, %r2552, %r2553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2554, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2555, %r2553, %r2554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2558, %r2550, %r2555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2561, %r886, %r2552, %r2564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2565, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2566, %r2564, %r2565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2569, %r2561, %r2566;
	// end inline asm
	shr.u32 	%r2574, %r2552, 8;
	// begin inline asm
	lop3.b32 %r2572, %r875, %r2574, %r2553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2576, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2577, %r2553, %r2576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2580, %r2572, %r2577;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2583, %r886, %r2574, %r2564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2587, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2588, %r2564, %r2587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2591, %r2583, %r2588;
	// end inline asm
	// begin inline asm
	mov.b32 %r2599, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2610, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2598, %r16339, -2004318072;
	// begin inline asm
	lop3.b32 %r2596, %r875, %r2598, %r2599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2600, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2601, %r2599, %r2600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2604, %r2596, %r2601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2607, %r886, %r2598, %r2610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2611, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2612, %r2610, %r2611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2615, %r2607, %r2612;
	// end inline asm
	shr.u32 	%r2620, %r2598, 8;
	// begin inline asm
	lop3.b32 %r2618, %r875, %r2620, %r2599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2622, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2623, %r2599, %r2622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2626, %r2618, %r2623;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2629, %r886, %r2620, %r2610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2633, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2634, %r2610, %r2633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2637, %r2629, %r2634;
	// end inline asm
	// begin inline asm
	mov.b32 %r2645, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2656, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2644, %r16348, -2004318072;
	// begin inline asm
	lop3.b32 %r2642, %r875, %r2644, %r2645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2646, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2647, %r2645, %r2646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2650, %r2642, %r2647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2653, %r886, %r2644, %r2656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2657, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2658, %r2656, %r2657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2661, %r2653, %r2658;
	// end inline asm
	shr.u32 	%r2666, %r2644, 8;
	// begin inline asm
	lop3.b32 %r2664, %r875, %r2666, %r2645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2668, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2669, %r2645, %r2668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2672, %r2664, %r2669;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2675, %r886, %r2666, %r2656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2679, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2680, %r2656, %r2679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2683, %r2675, %r2680;
	// end inline asm
	// begin inline asm
	mov.b32 %r2691, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2702, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2690, %r16349, -2004318072;
	// begin inline asm
	lop3.b32 %r2688, %r875, %r2690, %r2691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2692, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2693, %r2691, %r2692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2696, %r2688, %r2693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2699, %r886, %r2690, %r2702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2703, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2704, %r2702, %r2703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2707, %r2699, %r2704;
	// end inline asm
	shr.u32 	%r2712, %r2690, 8;
	// begin inline asm
	lop3.b32 %r2710, %r875, %r2712, %r2691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2714, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2715, %r2691, %r2714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2718, %r2710, %r2715;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2721, %r886, %r2712, %r2702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2725, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2726, %r2702, %r2725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2729, %r2721, %r2726;
	// end inline asm
	// begin inline asm
	mov.b32 %r2737, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2748, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2736, %r16350, -2004318072;
	// begin inline asm
	lop3.b32 %r2734, %r875, %r2736, %r2737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2738, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2739, %r2737, %r2738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2742, %r2734, %r2739;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2745, %r886, %r2736, %r2748, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2749, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2750, %r2748, %r2749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2753, %r2745, %r2750;
	// end inline asm
	shr.u32 	%r2758, %r2736, 8;
	// begin inline asm
	lop3.b32 %r2756, %r875, %r2758, %r2737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2760, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2761, %r2737, %r2760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2764, %r2756, %r2761;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2767, %r886, %r2758, %r2748, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2771, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2772, %r2748, %r2771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2775, %r2767, %r2772;
	// end inline asm
	// begin inline asm
	mov.b32 %r2783, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2794, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2782, %r16351, -2004318072;
	// begin inline asm
	lop3.b32 %r2780, %r875, %r2782, %r2783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2784, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2785, %r2783, %r2784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2788, %r2780, %r2785;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2791, %r886, %r2782, %r2794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2795, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2796, %r2794, %r2795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2799, %r2791, %r2796;
	// end inline asm
	shr.u32 	%r2804, %r2782, 8;
	// begin inline asm
	lop3.b32 %r2802, %r875, %r2804, %r2783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2806, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2807, %r2783, %r2806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2810, %r2802, %r2807;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2813, %r886, %r2804, %r2794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2817, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2818, %r2794, %r2817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2821, %r2813, %r2818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2959, %r365, %r2466, %r2266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2956, %r365, %r2477, %r2272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2968, %r365, %r2488, %r2278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2965, %r365, %r2499, %r2284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2977, %r365, %r2512, %r2290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2974, %r365, %r2523, %r2296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2986, %r365, %r2534, %r2302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2983, %r365, %r2545, %r2308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2995, %r365, %r2558, %r2314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2992, %r365, %r2569, %r2320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3004, %r365, %r2580, %r2326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3001, %r365, %r2591, %r2332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3013, %r365, %r2604, %r2338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3010, %r365, %r2615, %r2344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3022, %r365, %r2626, %r2350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3019, %r365, %r2637, %r2356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3031, %r383, %r2650, %r2362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3028, %r383, %r2661, %r2368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3040, %r383, %r2672, %r2374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3037, %r383, %r2683, %r2380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3049, %r383, %r2696, %r2386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3046, %r383, %r2707, %r2392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3058, %r383, %r2718, %r2398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3055, %r383, %r2729, %r2404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3067, %r383, %r2742, %r2410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3064, %r383, %r2753, %r2416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3076, %r383, %r2764, %r2422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3073, %r383, %r2775, %r2428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3085, %r383, %r2788, %r2434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3082, %r383, %r2799, %r2440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3094, %r383, %r2810, %r2446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3091, %r383, %r2821, %r2452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2952, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2954, %r2952, %r2956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2957, %r422, %r2959, %r2954;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2961, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2963, %r2961, %r2965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2966, %r422, %r2968, %r2963;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2970, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2972, %r2970, %r2974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2975, %r422, %r2977, %r2972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2979, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2981, %r2979, %r2983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2984, %r422, %r2986, %r2981;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2988, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2990, %r2988, %r2992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2993, %r422, %r2995, %r2990;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2997, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2999, %r2997, %r3001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3002, %r422, %r3004, %r2999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3006, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3008, %r3006, %r3010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3011, %r422, %r3013, %r3008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3015, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3017, %r3015, %r3019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3020, %r422, %r3022, %r3017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3024, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3026, %r3024, %r3028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r425, %r3031, %r3026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3033, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3035, %r3033, %r3037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r425, %r3040, %r3035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3042, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3044, %r3042, %r3046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3047, %r425, %r3049, %r3044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3051, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3053, %r3051, %r3055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3056, %r425, %r3058, %r3053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3060, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3062, %r3060, %r3064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3065, %r425, %r3067, %r3062;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3069, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3071, %r3069, %r3073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r425, %r3076, %r3071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3078, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3080, %r3078, %r3082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3083, %r425, %r3085, %r3080;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3087, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3089, %r3087, %r3091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3092, %r425, %r3094, %r3089;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3096, %r428, %r2959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3099, %r422, %r2956, %r3096;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3103, %r428, %r2968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3106, %r422, %r2965, %r3103;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3110, %r428, %r2977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3113, %r422, %r2974, %r3110;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3117, %r428, %r2986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3120, %r422, %r2983, %r3117;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3124, %r428, %r2995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3127, %r422, %r2992, %r3124;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3131, %r428, %r3004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3134, %r422, %r3001, %r3131;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3138, %r428, %r3013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3141, %r422, %r3010, %r3138;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3145, %r428, %r3022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3148, %r422, %r3019, %r3145;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3152, %r431, %r3031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3155, %r425, %r3028, %r3152;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3159, %r431, %r3040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3162, %r425, %r3037, %r3159;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3166, %r431, %r3049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3169, %r425, %r3046, %r3166;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3173, %r431, %r3058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3176, %r425, %r3055, %r3173;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3180, %r431, %r3067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3183, %r425, %r3064, %r3180;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3187, %r431, %r3076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3190, %r425, %r3073, %r3187;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3194, %r431, %r3085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3197, %r425, %r3082, %r3194;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3201, %r431, %r3094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3204, %r425, %r3091, %r3201;
	// end inline asm
	mov.u32 	%r3216, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3375, %r3372}, {%r489, %r495, %r492, %r498}, {%r2957, %r3099}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3384, %r3381}, {%r489, %r495, %r492, %r498}, {%r2966, %r3106}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3393, %r3390}, {%r489, %r495, %r492, %r498}, {%r2975, %r3113}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3402, %r3399}, {%r489, %r495, %r492, %r498}, {%r2984, %r3120}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3411, %r3408}, {%r489, %r495, %r492, %r498}, {%r2993, %r3127}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3420, %r3417}, {%r489, %r495, %r492, %r498}, {%r3002, %r3134}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3429, %r3426}, {%r489, %r495, %r492, %r498}, {%r3011, %r3141}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3438, %r3435}, {%r489, %r495, %r492, %r498}, {%r3020, %r3148}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3447, %r3444}, {%r489, %r495, %r492, %r498}, {%r3029, %r3155}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3456, %r3453}, {%r489, %r495, %r492, %r498}, {%r3038, %r3162}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3465, %r3462}, {%r489, %r495, %r492, %r498}, {%r3047, %r3169}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3474, %r3471}, {%r489, %r495, %r492, %r498}, {%r3056, %r3176}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3483, %r3480}, {%r489, %r495, %r492, %r498}, {%r3065, %r3183}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3492, %r3489}, {%r489, %r495, %r492, %r498}, {%r3074, %r3190}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3501, %r3498}, {%r489, %r495, %r492, %r498}, {%r3083, %r3197}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3510, %r3507}, {%r489, %r495, %r492, %r498}, {%r3092, %r3204}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3368, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3370, %r3368, %r3372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3373, %r539, %r3375, %r3370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3377, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3379, %r3377, %r3381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3382, %r539, %r3384, %r3379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3386, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3388, %r3386, %r3390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3391, %r539, %r3393, %r3388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3395, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3397, %r3395, %r3399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3400, %r539, %r3402, %r3397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3404, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3406, %r3404, %r3408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3409, %r539, %r3411, %r3406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3413, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3415, %r3413, %r3417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3418, %r539, %r3420, %r3415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3422, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3424, %r3422, %r3426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3427, %r539, %r3429, %r3424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3431, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3433, %r3431, %r3435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3436, %r539, %r3438, %r3433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3440, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3442, %r3440, %r3444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3445, %r539, %r3447, %r3442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3449, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3451, %r3449, %r3453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3454, %r539, %r3456, %r3451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3458, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3460, %r3458, %r3462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3463, %r539, %r3465, %r3460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3467, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3469, %r3467, %r3471;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3472, %r539, %r3474, %r3469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3476, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3478, %r3476, %r3480;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3481, %r539, %r3483, %r3478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3485, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3487, %r3485, %r3489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3490, %r539, %r3492, %r3487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3494, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3496, %r3494, %r3498;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3499, %r539, %r3501, %r3496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3503, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3505, %r3503, %r3507;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3508, %r539, %r3510, %r3505;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3512, %r542, %r3375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3515, %r539, %r3372, %r3512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3519, %r542, %r3384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3522, %r539, %r3381, %r3519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3526, %r542, %r3393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3529, %r539, %r3390, %r3526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3533, %r542, %r3402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3536, %r539, %r3399, %r3533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3540, %r542, %r3411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3543, %r539, %r3408, %r3540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3547, %r542, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3550, %r539, %r3417, %r3547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3554, %r542, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3557, %r539, %r3426, %r3554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3561, %r542, %r3438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3564, %r539, %r3435, %r3561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3568, %r542, %r3447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3571, %r539, %r3444, %r3568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3575, %r542, %r3456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3578, %r539, %r3453, %r3575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3582, %r542, %r3465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3585, %r539, %r3462, %r3582;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3589, %r542, %r3474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3592, %r539, %r3471, %r3589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3596, %r542, %r3483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3599, %r539, %r3480, %r3596;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3603, %r542, %r3492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3606, %r539, %r3489, %r3603;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3610, %r542, %r3501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3613, %r539, %r3498, %r3610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3617, %r542, %r3510;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3620, %r539, %r3507, %r3617;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3913, %r3916}, {%r577, %r583, %r580, %r586}, {%r3373, %r3515}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3919, %r3922}, {%r577, %r583, %r580, %r586}, {%r3382, %r3522}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3925, %r3928}, {%r577, %r583, %r580, %r586}, {%r3391, %r3529}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3931, %r3934}, {%r577, %r583, %r580, %r586}, {%r3400, %r3536}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3937, %r3940}, {%r577, %r583, %r580, %r586}, {%r3409, %r3543}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3943, %r3946}, {%r577, %r583, %r580, %r586}, {%r3418, %r3550}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3949, %r3952}, {%r577, %r583, %r580, %r586}, {%r3427, %r3557}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3955, %r3958}, {%r577, %r583, %r580, %r586}, {%r3436, %r3564}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3914, %r3917}, {%r577, %r583, %r580, %r586}, {%r3445, %r3571}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3920, %r3923}, {%r577, %r583, %r580, %r586}, {%r3454, %r3578}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3926, %r3929}, {%r577, %r583, %r580, %r586}, {%r3463, %r3585}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3932, %r3935}, {%r577, %r583, %r580, %r586}, {%r3472, %r3592}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3938, %r3941}, {%r577, %r583, %r580, %r586}, {%r3481, %r3599}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3944, %r3947}, {%r577, %r583, %r580, %r586}, {%r3490, %r3606}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3950, %r3953}, {%r577, %r583, %r580, %r586}, {%r3499, %r3613}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3956, %r3959}, {%r577, %r583, %r580, %r586}, {%r3508, %r3620}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3912, %r3913, %r3914;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3915, %r3916, %r3917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3918, %r3919, %r3920;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3921, %r3922, %r3923;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3924, %r3925, %r3926;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3927, %r3928, %r3929;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3930, %r3931, %r3932;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3933, %r3934, %r3935;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3936, %r3937, %r3938;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3939, %r3940, %r3941;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3942, %r3943, %r3944;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3945, %r3946, %r3947;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3948, %r3949, %r3950;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3951, %r3952, %r3953;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3954, %r3955, %r3956;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3957, %r3958, %r3959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3960, %r3913, %r3914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3963, %r3916, %r3917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3966, %r3919, %r3920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3969, %r3922, %r3923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3972, %r3925, %r3926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3975, %r3928, %r3929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3978, %r3931, %r3932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3981, %r3934, %r3935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3984, %r3937, %r3938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3987, %r3940, %r3941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3990, %r3943, %r3944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3993, %r3946, %r3947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3996, %r3949, %r3950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3999, %r3952, %r3953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4002, %r3955, %r3956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4005, %r3958, %r3959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4008, %r180, %r3912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4011, %r180, %r3915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4014, %r180, %r3918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4017, %r180, %r3921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4020, %r180, %r3924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4023, %r180, %r3927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4026, %r180, %r3930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4029, %r180, %r3933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4032, %r180, %r3936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4035, %r180, %r3939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4038, %r180, %r3942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4041, %r180, %r3945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4044, %r180, %r3948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4047, %r180, %r3951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4050, %r180, %r3954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4053, %r180, %r3957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4056, %r182, %r3960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4059, %r182, %r3963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4062, %r182, %r3966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4065, %r182, %r3969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4068, %r182, %r3972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4071, %r182, %r3975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4074, %r182, %r3978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4077, %r182, %r3981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4080, %r182, %r3984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4083, %r182, %r3987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4086, %r182, %r3990;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4089, %r182, %r3993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4092, %r182, %r3996;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4095, %r182, %r3999;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4098, %r182, %r4002;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4101, %r182, %r4005;
	// end inline asm
	mov.u16 	%rs418, -14592;
	// begin inline asm
	mov.b32 %r4104, {%rs418, %rs418};
	// end inline asm
	mov.u16 	%rs420, 18176;
	// begin inline asm
	mov.b32 %r4105, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4106, %r4008, %r4104;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4109, %r4106, %r4105;
	// end inline asm
	// begin inline asm
	mov.b32 %r4112, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4113, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4114, %r4011, %r4112;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4117, %r4114, %r4113;
	// end inline asm
	// begin inline asm
	mov.b32 %r4120, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4121, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4122, %r4014, %r4120;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4125, %r4122, %r4121;
	// end inline asm
	// begin inline asm
	mov.b32 %r4128, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4129, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4130, %r4017, %r4128;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4133, %r4130, %r4129;
	// end inline asm
	// begin inline asm
	mov.b32 %r4136, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4137, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4138, %r4020, %r4136;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4141, %r4138, %r4137;
	// end inline asm
	// begin inline asm
	mov.b32 %r4144, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4145, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4146, %r4023, %r4144;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4149, %r4146, %r4145;
	// end inline asm
	// begin inline asm
	mov.b32 %r4152, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4153, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4154, %r4026, %r4152;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4157, %r4154, %r4153;
	// end inline asm
	// begin inline asm
	mov.b32 %r4160, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4161, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4162, %r4029, %r4160;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4165, %r4162, %r4161;
	// end inline asm
	// begin inline asm
	mov.b32 %r4168, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4169, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4170, %r4032, %r4168;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4173, %r4170, %r4169;
	// end inline asm
	// begin inline asm
	mov.b32 %r4176, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4177, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4178, %r4035, %r4176;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4181, %r4178, %r4177;
	// end inline asm
	// begin inline asm
	mov.b32 %r4184, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4185, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4186, %r4038, %r4184;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4189, %r4186, %r4185;
	// end inline asm
	// begin inline asm
	mov.b32 %r4192, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4193, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4194, %r4041, %r4192;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4197, %r4194, %r4193;
	// end inline asm
	// begin inline asm
	mov.b32 %r4200, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4201, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4202, %r4044, %r4200;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4205, %r4202, %r4201;
	// end inline asm
	// begin inline asm
	mov.b32 %r4208, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4209, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4210, %r4047, %r4208;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4213, %r4210, %r4209;
	// end inline asm
	// begin inline asm
	mov.b32 %r4216, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4217, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4218, %r4050, %r4216;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4221, %r4218, %r4217;
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4225, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4226, %r4053, %r4224;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4229, %r4226, %r4225;
	// end inline asm
	// begin inline asm
	mov.b32 %r4232, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4233, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4234, %r4056, %r4232;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4237, %r4234, %r4233;
	// end inline asm
	// begin inline asm
	mov.b32 %r4240, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4241, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4242, %r4059, %r4240;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4245, %r4242, %r4241;
	// end inline asm
	// begin inline asm
	mov.b32 %r4248, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4249, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4250, %r4062, %r4248;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4253, %r4250, %r4249;
	// end inline asm
	// begin inline asm
	mov.b32 %r4256, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4257, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4258, %r4065, %r4256;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4261, %r4258, %r4257;
	// end inline asm
	// begin inline asm
	mov.b32 %r4264, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4265, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4266, %r4068, %r4264;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4269, %r4266, %r4265;
	// end inline asm
	// begin inline asm
	mov.b32 %r4272, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4273, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4274, %r4071, %r4272;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4277, %r4274, %r4273;
	// end inline asm
	// begin inline asm
	mov.b32 %r4280, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4281, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4282, %r4074, %r4280;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4285, %r4282, %r4281;
	// end inline asm
	// begin inline asm
	mov.b32 %r4288, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4289, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4290, %r4077, %r4288;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4293, %r4290, %r4289;
	// end inline asm
	// begin inline asm
	mov.b32 %r4296, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4297, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4298, %r4080, %r4296;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4301, %r4298, %r4297;
	// end inline asm
	// begin inline asm
	mov.b32 %r4304, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4305, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4306, %r4083, %r4304;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4309, %r4306, %r4305;
	// end inline asm
	// begin inline asm
	mov.b32 %r4312, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4313, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4314, %r4086, %r4312;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4317, %r4314, %r4313;
	// end inline asm
	// begin inline asm
	mov.b32 %r4320, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4321, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4322, %r4089, %r4320;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4325, %r4322, %r4321;
	// end inline asm
	// begin inline asm
	mov.b32 %r4328, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4329, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4330, %r4092, %r4328;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4333, %r4330, %r4329;
	// end inline asm
	// begin inline asm
	mov.b32 %r4336, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4337, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4338, %r4095, %r4336;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4341, %r4338, %r4337;
	// end inline asm
	// begin inline asm
	mov.b32 %r4344, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4345, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4346, %r4098, %r4344;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4349, %r4346, %r4345;
	// end inline asm
	// begin inline asm
	mov.b32 %r4352, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4353, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4354, %r4101, %r4352;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4357, %r4354, %r4353;
	// end inline asm
	// begin inline asm
	mov.b32 %r4363, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4361, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4362, %r4363, %r4361;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4365, %r4109, %r4362;
	// end inline asm
	// begin inline asm
	mov.b32 %r4368, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4369, %r4363, %r4368;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4372, %r4117, %r4369;
	// end inline asm
	// begin inline asm
	mov.b32 %r4375, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4376, %r4363, %r4375;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4379, %r4125, %r4376;
	// end inline asm
	// begin inline asm
	mov.b32 %r4382, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4383, %r4363, %r4382;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4386, %r4133, %r4383;
	// end inline asm
	mov.u32 	%r4392, 25152;
	// begin inline asm
	prmt.b32 %r4389, %r4365, %r4379, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4393, %r4372, %r4386, %r4392;
	// end inline asm
	shl.b32 	%r4400, %r4393, 4;
	mov.u32 	%r4398, 252645135;
	// begin inline asm
	lop3.b32 %r4397, %r4398, %r4389, %r4400, 202;
	// end inline asm
	xor.b32  	%r16185, %r4397, -2004318072;
	// begin inline asm
	mov.b32 %r4404, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4402, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4403, %r4404, %r4402;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4406, %r4141, %r4403;
	// end inline asm
	// begin inline asm
	mov.b32 %r4409, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4410, %r4404, %r4409;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4413, %r4149, %r4410;
	// end inline asm
	// begin inline asm
	mov.b32 %r4416, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4417, %r4404, %r4416;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4420, %r4157, %r4417;
	// end inline asm
	// begin inline asm
	mov.b32 %r4423, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4424, %r4404, %r4423;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4427, %r4165, %r4424;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4430, %r4406, %r4420, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4434, %r4413, %r4427, %r4392;
	// end inline asm
	shl.b32 	%r4441, %r4434, 4;
	// begin inline asm
	lop3.b32 %r4438, %r4398, %r4430, %r4441, 202;
	// end inline asm
	xor.b32  	%r16186, %r4438, -2004318072;
	// begin inline asm
	mov.b32 %r4445, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4443, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4444, %r4445, %r4443;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4447, %r4173, %r4444;
	// end inline asm
	// begin inline asm
	mov.b32 %r4450, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4451, %r4445, %r4450;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4454, %r4181, %r4451;
	// end inline asm
	// begin inline asm
	mov.b32 %r4457, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4458, %r4445, %r4457;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4461, %r4189, %r4458;
	// end inline asm
	// begin inline asm
	mov.b32 %r4464, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4465, %r4445, %r4464;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4468, %r4197, %r4465;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4471, %r4447, %r4461, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4475, %r4454, %r4468, %r4392;
	// end inline asm
	shl.b32 	%r4482, %r4475, 4;
	// begin inline asm
	lop3.b32 %r4479, %r4398, %r4471, %r4482, 202;
	// end inline asm
	xor.b32  	%r16187, %r4479, -2004318072;
	// begin inline asm
	mov.b32 %r4486, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4484, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4485, %r4486, %r4484;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4488, %r4205, %r4485;
	// end inline asm
	// begin inline asm
	mov.b32 %r4491, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4492, %r4486, %r4491;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4495, %r4213, %r4492;
	// end inline asm
	// begin inline asm
	mov.b32 %r4498, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4499, %r4486, %r4498;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4502, %r4221, %r4499;
	// end inline asm
	// begin inline asm
	mov.b32 %r4505, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4506, %r4486, %r4505;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4509, %r4229, %r4506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4512, %r4488, %r4502, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4516, %r4495, %r4509, %r4392;
	// end inline asm
	shl.b32 	%r4523, %r4516, 4;
	// begin inline asm
	lop3.b32 %r4520, %r4398, %r4512, %r4523, 202;
	// end inline asm
	xor.b32  	%r16188, %r4520, -2004318072;
	// begin inline asm
	mov.b32 %r4527, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4525, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4526, %r4527, %r4525;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4529, %r4237, %r4526;
	// end inline asm
	// begin inline asm
	mov.b32 %r4532, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4533, %r4527, %r4532;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4536, %r4245, %r4533;
	// end inline asm
	// begin inline asm
	mov.b32 %r4539, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4540, %r4527, %r4539;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4543, %r4253, %r4540;
	// end inline asm
	// begin inline asm
	mov.b32 %r4546, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4547, %r4527, %r4546;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4550, %r4261, %r4547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4553, %r4529, %r4543, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4557, %r4536, %r4550, %r4392;
	// end inline asm
	shl.b32 	%r4564, %r4557, 4;
	// begin inline asm
	lop3.b32 %r4561, %r4398, %r4553, %r4564, 202;
	// end inline asm
	xor.b32  	%r16189, %r4561, -2004318072;
	// begin inline asm
	mov.b32 %r4568, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4566, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4567, %r4568, %r4566;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4570, %r4269, %r4567;
	// end inline asm
	// begin inline asm
	mov.b32 %r4573, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4574, %r4568, %r4573;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4577, %r4277, %r4574;
	// end inline asm
	// begin inline asm
	mov.b32 %r4580, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4581, %r4568, %r4580;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4584, %r4285, %r4581;
	// end inline asm
	// begin inline asm
	mov.b32 %r4587, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4588, %r4568, %r4587;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4591, %r4293, %r4588;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4594, %r4570, %r4584, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4598, %r4577, %r4591, %r4392;
	// end inline asm
	shl.b32 	%r4605, %r4598, 4;
	// begin inline asm
	lop3.b32 %r4602, %r4398, %r4594, %r4605, 202;
	// end inline asm
	xor.b32  	%r16190, %r4602, -2004318072;
	// begin inline asm
	mov.b32 %r4609, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4607, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4608, %r4609, %r4607;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4611, %r4301, %r4608;
	// end inline asm
	// begin inline asm
	mov.b32 %r4614, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4615, %r4609, %r4614;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4618, %r4309, %r4615;
	// end inline asm
	// begin inline asm
	mov.b32 %r4621, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4622, %r4609, %r4621;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4625, %r4317, %r4622;
	// end inline asm
	// begin inline asm
	mov.b32 %r4628, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4629, %r4609, %r4628;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4632, %r4325, %r4629;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4635, %r4611, %r4625, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4639, %r4618, %r4632, %r4392;
	// end inline asm
	shl.b32 	%r4646, %r4639, 4;
	// begin inline asm
	lop3.b32 %r4643, %r4398, %r4635, %r4646, 202;
	// end inline asm
	xor.b32  	%r16191, %r4643, -2004318072;
	// begin inline asm
	mov.b32 %r4650, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4648, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4649, %r4650, %r4648;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4652, %r4333, %r4649;
	// end inline asm
	// begin inline asm
	mov.b32 %r4655, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4656, %r4650, %r4655;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4659, %r4341, %r4656;
	// end inline asm
	// begin inline asm
	mov.b32 %r4662, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4663, %r4650, %r4662;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4666, %r4349, %r4663;
	// end inline asm
	// begin inline asm
	mov.b32 %r4669, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4670, %r4650, %r4669;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4673, %r4357, %r4670;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4676, %r4652, %r4666, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4680, %r4659, %r4673, %r4392;
	// end inline asm
	shl.b32 	%r4687, %r4680, 4;
	// begin inline asm
	lop3.b32 %r4684, %r4398, %r4676, %r4687, 202;
	// end inline asm
	xor.b32  	%r16192, %r4684, -2004318072;
	add.s32 	%r16193, %r77, %r16136;
	mul.wide.u32 	%rd92, %r16193, 4;
	add.s64 	%rd93, %rd35, %rd92;
	st.shared.u32 	[%rd93], %r16185;
	add.s32 	%r16194, %r78, %r16136;
	mul.wide.u32 	%rd94, %r16194, 4;
	add.s64 	%rd95, %rd35, %rd94;
	st.shared.u32 	[%rd95], %r16186;
	add.s32 	%r16195, %r79, %r16136;
	mul.wide.u32 	%rd96, %r16195, 4;
	add.s64 	%rd97, %rd35, %rd96;
	st.shared.u32 	[%rd97], %r16187;
	add.s32 	%r16196, %r80, %r16136;
	mul.wide.u32 	%rd98, %r16196, 4;
	add.s64 	%rd99, %rd35, %rd98;
	st.shared.u32 	[%rd99], %r16188;
	add.s32 	%r16197, %r81, %r16136;
	mul.wide.u32 	%rd100, %r16197, 4;
	add.s64 	%rd101, %rd35, %rd100;
	st.shared.u32 	[%rd101], %r16189;
	add.s32 	%r16198, %r82, %r16136;
	mul.wide.u32 	%rd102, %r16198, 4;
	add.s64 	%rd103, %rd35, %rd102;
	st.shared.u32 	[%rd103], %r16190;
	add.s32 	%r16199, %r83, %r16136;
	mul.wide.u32 	%rd104, %r16199, 4;
	add.s64 	%rd105, %rd35, %rd104;
	st.shared.u32 	[%rd105], %r16191;
	add.s32 	%r16200, %r84, %r16136;
	mul.wide.u32 	%rd106, %r16200, 4;
	add.s64 	%rd107, %rd35, %rd106;
	st.shared.u32 	[%rd107], %r16192;
	ld.shared.u32 	%r16328, [%rd77];
	ld.shared.u32 	%r16329, [%rd79];
	ld.shared.u32 	%r16330, [%rd81];
	ld.shared.u32 	%r16331, [%rd83];
	ld.shared.u32 	%r16340, [%rd85];
	ld.shared.u32 	%r16341, [%rd87];
	ld.shared.u32 	%r16342, [%rd89];
	ld.shared.u32 	%r16343, [%rd91];
	// begin inline asm
	mov.b32 %r4693, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4704, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r4692, %r16328, -2004318072;
	// begin inline asm
	lop3.b32 %r4690, %r875, %r4692, %r4693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4694, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4695, %r4693, %r4694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4698, %r4690, %r4695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4701, %r886, %r4692, %r4704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4705, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4706, %r4704, %r4705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4709, %r4701, %r4706;
	// end inline asm
	shr.u32 	%r4714, %r4692, 8;
	// begin inline asm
	lop3.b32 %r4712, %r875, %r4714, %r4693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4716, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4717, %r4693, %r4716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4720, %r4712, %r4717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4723, %r886, %r4714, %r4704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4727, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4728, %r4704, %r4727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4731, %r4723, %r4728;
	// end inline asm
	// begin inline asm
	mov.b32 %r4739, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4750, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r4738, %r16329, -2004318072;
	// begin inline asm
	lop3.b32 %r4736, %r875, %r4738, %r4739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4740, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4741, %r4739, %r4740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4744, %r4736, %r4741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4747, %r886, %r4738, %r4750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4751, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4752, %r4750, %r4751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4755, %r4747, %r4752;
	// end inline asm
	shr.u32 	%r4760, %r4738, 8;
	// begin inline asm
	lop3.b32 %r4758, %r875, %r4760, %r4739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4762, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4763, %r4739, %r4762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4766, %r4758, %r4763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4769, %r886, %r4760, %r4750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4773, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4774, %r4750, %r4773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4777, %r4769, %r4774;
	// end inline asm
	// begin inline asm
	mov.b32 %r4785, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4796, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r4784, %r16330, -2004318072;
	// begin inline asm
	lop3.b32 %r4782, %r875, %r4784, %r4785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4786, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4787, %r4785, %r4786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4790, %r4782, %r4787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4793, %r886, %r4784, %r4796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4797, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4798, %r4796, %r4797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4801, %r4793, %r4798;
	// end inline asm
	shr.u32 	%r4806, %r4784, 8;
	// begin inline asm
	lop3.b32 %r4804, %r875, %r4806, %r4785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4808, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4809, %r4785, %r4808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4812, %r4804, %r4809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4815, %r886, %r4806, %r4796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4819, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4820, %r4796, %r4819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4823, %r4815, %r4820;
	// end inline asm
	// begin inline asm
	mov.b32 %r4831, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4842, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r4830, %r16331, -2004318072;
	// begin inline asm
	lop3.b32 %r4828, %r875, %r4830, %r4831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4832, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4833, %r4831, %r4832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4836, %r4828, %r4833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4839, %r886, %r4830, %r4842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4843, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4844, %r4842, %r4843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4847, %r4839, %r4844;
	// end inline asm
	shr.u32 	%r4852, %r4830, 8;
	// begin inline asm
	lop3.b32 %r4850, %r875, %r4852, %r4831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4854, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4855, %r4831, %r4854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4858, %r4850, %r4855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4861, %r886, %r4852, %r4842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4865, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4866, %r4842, %r4865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4869, %r4861, %r4866;
	// end inline asm
	// begin inline asm
	mov.b32 %r4877, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4888, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r4876, %r16340, -2004318072;
	// begin inline asm
	lop3.b32 %r4874, %r875, %r4876, %r4877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4878, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4879, %r4877, %r4878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4882, %r4874, %r4879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4885, %r886, %r4876, %r4888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4889, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4890, %r4888, %r4889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4893, %r4885, %r4890;
	// end inline asm
	shr.u32 	%r4898, %r4876, 8;
	// begin inline asm
	lop3.b32 %r4896, %r875, %r4898, %r4877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4900, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4901, %r4877, %r4900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4904, %r4896, %r4901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4907, %r886, %r4898, %r4888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4911, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4912, %r4888, %r4911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4915, %r4907, %r4912;
	// end inline asm
	// begin inline asm
	mov.b32 %r4923, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4934, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r4922, %r16341, -2004318072;
	// begin inline asm
	lop3.b32 %r4920, %r875, %r4922, %r4923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4924, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4925, %r4923, %r4924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4928, %r4920, %r4925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4931, %r886, %r4922, %r4934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4935, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4936, %r4934, %r4935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4939, %r4931, %r4936;
	// end inline asm
	shr.u32 	%r4944, %r4922, 8;
	// begin inline asm
	lop3.b32 %r4942, %r875, %r4944, %r4923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4946, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4947, %r4923, %r4946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4950, %r4942, %r4947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4953, %r886, %r4944, %r4934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4957, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4958, %r4934, %r4957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4961, %r4953, %r4958;
	// end inline asm
	// begin inline asm
	mov.b32 %r4969, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4980, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r4968, %r16342, -2004318072;
	// begin inline asm
	lop3.b32 %r4966, %r875, %r4968, %r4969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4970, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4971, %r4969, %r4970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4974, %r4966, %r4971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4977, %r886, %r4968, %r4980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4981, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4982, %r4980, %r4981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4985, %r4977, %r4982;
	// end inline asm
	shr.u32 	%r4990, %r4968, 8;
	// begin inline asm
	lop3.b32 %r4988, %r875, %r4990, %r4969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4992, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4993, %r4969, %r4992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4996, %r4988, %r4993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4999, %r886, %r4990, %r4980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5003, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5004, %r4980, %r5003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5007, %r4999, %r5004;
	// end inline asm
	// begin inline asm
	mov.b32 %r5015, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5026, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r5014, %r16343, -2004318072;
	// begin inline asm
	lop3.b32 %r5012, %r875, %r5014, %r5015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5016, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5017, %r5015, %r5016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5020, %r5012, %r5017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5023, %r886, %r5014, %r5026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5027, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5028, %r5026, %r5027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5031, %r5023, %r5028;
	// end inline asm
	shr.u32 	%r5036, %r5014, 8;
	// begin inline asm
	lop3.b32 %r5034, %r875, %r5036, %r5015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5038, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5039, %r5015, %r5038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5042, %r5034, %r5039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5045, %r886, %r5036, %r5026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5049, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5050, %r5026, %r5049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5053, %r5045, %r5050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5056, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5058, %r5056, %r4698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5061, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5063, %r5061, %r4709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5066, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5068, %r5066, %r4720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5071, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5073, %r5071, %r4731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5076, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5078, %r5076, %r4744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5081, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5083, %r5081, %r4755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5086, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5088, %r5086, %r4766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5091, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5093, %r5091, %r4777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5096, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5098, %r5096, %r4790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5101, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5103, %r5101, %r4801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5106, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5108, %r5106, %r4812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5111, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5113, %r5111, %r4823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5116, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5118, %r5116, %r4836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5121, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5123, %r5121, %r4847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5126, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5128, %r5126, %r4858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5131, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5133, %r5131, %r4869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5136, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5138, %r5136, %r4882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5141, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5143, %r5141, %r4893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5146, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5148, %r5146, %r4904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5151, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5153, %r5151, %r4915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5156, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5158, %r5156, %r4928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5161, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5163, %r5161, %r4939;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5166, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5168, %r5166, %r4950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5171, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5173, %r5171, %r4961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5176, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5178, %r5176, %r4974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5181, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5183, %r5181, %r4985;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5186, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5188, %r5186, %r4996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5191, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5193, %r5191, %r5007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5196, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5198, %r5196, %r5020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5201, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5203, %r5201, %r5031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5206, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5208, %r5206, %r5042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5211, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5213, %r5211, %r5053;
	// end inline asm
	// begin inline asm
	mov.b32 %r5221, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5232, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5218, %r875, %r1900, %r5221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5222, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5223, %r5221, %r5222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5226, %r5218, %r5223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5229, %r886, %r1900, %r5232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5233, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5234, %r5232, %r5233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5237, %r5229, %r5234;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5240, %r875, %r1922, %r5221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5244, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5245, %r5221, %r5244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5248, %r5240, %r5245;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5251, %r886, %r1922, %r5232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5255, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5256, %r5232, %r5255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5259, %r5251, %r5256;
	// end inline asm
	// begin inline asm
	mov.b32 %r5267, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5278, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5264, %r875, %r1946, %r5267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5268, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5269, %r5267, %r5268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5272, %r5264, %r5269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5275, %r886, %r1946, %r5278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5279, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5280, %r5278, %r5279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5283, %r5275, %r5280;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5286, %r875, %r1968, %r5267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5290, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5291, %r5267, %r5290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5294, %r5286, %r5291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5297, %r886, %r1968, %r5278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5301, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5302, %r5278, %r5301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5305, %r5297, %r5302;
	// end inline asm
	// begin inline asm
	mov.b32 %r5313, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5324, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5310, %r875, %r1992, %r5313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5314, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5315, %r5313, %r5314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5318, %r5310, %r5315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5321, %r886, %r1992, %r5324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5325, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5326, %r5324, %r5325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5329, %r5321, %r5326;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5332, %r875, %r2014, %r5313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5336, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5337, %r5313, %r5336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5340, %r5332, %r5337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5343, %r886, %r2014, %r5324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5347, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5348, %r5324, %r5347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5351, %r5343, %r5348;
	// end inline asm
	// begin inline asm
	mov.b32 %r5359, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5370, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5356, %r875, %r2038, %r5359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5360, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5361, %r5359, %r5360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5364, %r5356, %r5361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5367, %r886, %r2038, %r5370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5371, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5372, %r5370, %r5371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5375, %r5367, %r5372;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5378, %r875, %r2060, %r5359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5382, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5383, %r5359, %r5382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5386, %r5378, %r5383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5389, %r886, %r2060, %r5370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5393, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5394, %r5370, %r5393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5397, %r5389, %r5394;
	// end inline asm
	// begin inline asm
	mov.b32 %r5405, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5416, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5402, %r875, %r2084, %r5405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5406, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5407, %r5405, %r5406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5410, %r5402, %r5407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5413, %r886, %r2084, %r5416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5417, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5418, %r5416, %r5417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5421, %r5413, %r5418;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5424, %r875, %r2106, %r5405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5428, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5429, %r5405, %r5428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5432, %r5424, %r5429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5435, %r886, %r2106, %r5416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5439, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5440, %r5416, %r5439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5443, %r5435, %r5440;
	// end inline asm
	// begin inline asm
	mov.b32 %r5451, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5462, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5448, %r875, %r2130, %r5451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5452, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5453, %r5451, %r5452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5456, %r5448, %r5453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5459, %r886, %r2130, %r5462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5463, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5464, %r5462, %r5463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5467, %r5459, %r5464;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5470, %r875, %r2152, %r5451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5474, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5475, %r5451, %r5474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5478, %r5470, %r5475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5481, %r886, %r2152, %r5462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5485, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5486, %r5462, %r5485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5489, %r5481, %r5486;
	// end inline asm
	// begin inline asm
	mov.b32 %r5497, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5508, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5494, %r875, %r2176, %r5497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5498, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5499, %r5497, %r5498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5502, %r5494, %r5499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5505, %r886, %r2176, %r5508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5509, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5510, %r5508, %r5509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5513, %r5505, %r5510;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5516, %r875, %r2198, %r5497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5520, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5521, %r5497, %r5520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5524, %r5516, %r5521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5527, %r886, %r2198, %r5508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5531, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5532, %r5508, %r5531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5535, %r5527, %r5532;
	// end inline asm
	// begin inline asm
	mov.b32 %r5543, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5554, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5540, %r875, %r2222, %r5543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5544, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5545, %r5543, %r5544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5548, %r5540, %r5545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5551, %r886, %r2222, %r5554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5555, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5556, %r5554, %r5555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5559, %r5551, %r5556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5562, %r875, %r2244, %r5543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5566, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5567, %r5543, %r5566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5570, %r5562, %r5567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5573, %r886, %r2244, %r5554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5577, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5578, %r5554, %r5577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5581, %r5573, %r5578;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5584, %r293, %r5226, %r5058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5588, %r293, %r5237, %r5063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5592, %r293, %r5248, %r5068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5596, %r293, %r5259, %r5073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5600, %r293, %r5272, %r5078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5604, %r293, %r5283, %r5083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5608, %r293, %r5294, %r5088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5612, %r293, %r5305, %r5093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5616, %r293, %r5318, %r5098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5620, %r293, %r5329, %r5103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5624, %r293, %r5340, %r5108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5628, %r293, %r5351, %r5113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5632, %r293, %r5364, %r5118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5636, %r293, %r5375, %r5123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5640, %r293, %r5386, %r5128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5644, %r293, %r5397, %r5133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5648, %r311, %r5410, %r5138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5652, %r311, %r5421, %r5143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5656, %r311, %r5432, %r5148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5660, %r311, %r5443, %r5153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5664, %r311, %r5456, %r5158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5668, %r311, %r5467, %r5163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5672, %r311, %r5478, %r5168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5676, %r311, %r5489, %r5173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5680, %r311, %r5502, %r5178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5684, %r311, %r5513, %r5183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5688, %r311, %r5524, %r5188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5692, %r311, %r5535, %r5193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5696, %r311, %r5548, %r5198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5700, %r311, %r5559, %r5203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5704, %r311, %r5570, %r5208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5708, %r311, %r5581, %r5213;
	// end inline asm
	// begin inline asm
	mov.b32 %r5717, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5728, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5714, %r875, %r2460, %r5717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5718, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5719, %r5717, %r5718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5722, %r5714, %r5719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5725, %r886, %r2460, %r5728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5729, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5730, %r5728, %r5729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5733, %r5725, %r5730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5736, %r875, %r2482, %r5717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5740, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5741, %r5717, %r5740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5744, %r5736, %r5741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5747, %r886, %r2482, %r5728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5751, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5752, %r5728, %r5751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5755, %r5747, %r5752;
	// end inline asm
	// begin inline asm
	mov.b32 %r5763, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5774, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5760, %r875, %r2506, %r5763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5764, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5765, %r5763, %r5764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5768, %r5760, %r5765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5771, %r886, %r2506, %r5774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5775, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5776, %r5774, %r5775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5779, %r5771, %r5776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5782, %r875, %r2528, %r5763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5786, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5787, %r5763, %r5786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5790, %r5782, %r5787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5793, %r886, %r2528, %r5774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5797, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5798, %r5774, %r5797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5801, %r5793, %r5798;
	// end inline asm
	// begin inline asm
	mov.b32 %r5809, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5820, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5806, %r875, %r2552, %r5809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5810, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5811, %r5809, %r5810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5814, %r5806, %r5811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5817, %r886, %r2552, %r5820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5821, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5822, %r5820, %r5821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5825, %r5817, %r5822;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5828, %r875, %r2574, %r5809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5832, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5833, %r5809, %r5832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5836, %r5828, %r5833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5839, %r886, %r2574, %r5820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5843, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5844, %r5820, %r5843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5847, %r5839, %r5844;
	// end inline asm
	// begin inline asm
	mov.b32 %r5855, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5866, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5852, %r875, %r2598, %r5855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5856, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5857, %r5855, %r5856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5860, %r5852, %r5857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5863, %r886, %r2598, %r5866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5867, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5868, %r5866, %r5867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5871, %r5863, %r5868;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5874, %r875, %r2620, %r5855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5878, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5879, %r5855, %r5878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5882, %r5874, %r5879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5885, %r886, %r2620, %r5866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5889, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5890, %r5866, %r5889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5893, %r5885, %r5890;
	// end inline asm
	// begin inline asm
	mov.b32 %r5901, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5912, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5898, %r875, %r2644, %r5901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5902, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5903, %r5901, %r5902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5906, %r5898, %r5903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5909, %r886, %r2644, %r5912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5913, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5914, %r5912, %r5913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5917, %r5909, %r5914;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5920, %r875, %r2666, %r5901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5924, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5925, %r5901, %r5924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5928, %r5920, %r5925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5931, %r886, %r2666, %r5912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5935, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5936, %r5912, %r5935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5939, %r5931, %r5936;
	// end inline asm
	// begin inline asm
	mov.b32 %r5947, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5958, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5944, %r875, %r2690, %r5947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5948, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5949, %r5947, %r5948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5952, %r5944, %r5949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5955, %r886, %r2690, %r5958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5959, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5960, %r5958, %r5959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5963, %r5955, %r5960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5966, %r875, %r2712, %r5947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5970, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5971, %r5947, %r5970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5974, %r5966, %r5971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5977, %r886, %r2712, %r5958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5981, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5982, %r5958, %r5981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5985, %r5977, %r5982;
	// end inline asm
	// begin inline asm
	mov.b32 %r5993, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6004, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5990, %r875, %r2736, %r5993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5994, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5995, %r5993, %r5994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5998, %r5990, %r5995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6001, %r886, %r2736, %r6004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6005, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6006, %r6004, %r6005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6009, %r6001, %r6006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6012, %r875, %r2758, %r5993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6016, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6017, %r5993, %r6016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6020, %r6012, %r6017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6023, %r886, %r2758, %r6004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6027, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6028, %r6004, %r6027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6031, %r6023, %r6028;
	// end inline asm
	// begin inline asm
	mov.b32 %r6039, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6050, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6036, %r875, %r2782, %r6039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6040, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6041, %r6039, %r6040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6044, %r6036, %r6041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6047, %r886, %r2782, %r6050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6051, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6052, %r6050, %r6051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6055, %r6047, %r6052;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6058, %r875, %r2804, %r6039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6062, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6063, %r6039, %r6062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6066, %r6058, %r6063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6069, %r886, %r2804, %r6050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6073, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6074, %r6050, %r6073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6077, %r6069, %r6074;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6080, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6082, %r6080, %r5722, %r5584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6086, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6088, %r6086, %r5733, %r5588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6092, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6094, %r6092, %r5744, %r5592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6098, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6100, %r6098, %r5755, %r5596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6104, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6106, %r6104, %r5768, %r5600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6110, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6112, %r6110, %r5779, %r5604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6116, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6118, %r6116, %r5790, %r5608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6122, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6124, %r6122, %r5801, %r5612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6128, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6130, %r6128, %r5814, %r5616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6134, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6136, %r6134, %r5825, %r5620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6140, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6142, %r6140, %r5836, %r5624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6146, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6148, %r6146, %r5847, %r5628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6152, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6154, %r6152, %r5860, %r5632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6158, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6160, %r6158, %r5871, %r5636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6164, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6166, %r6164, %r5882, %r5640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6170, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6172, %r6170, %r5893, %r5644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6176, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6178, %r6176, %r5906, %r5648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6182, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6184, %r6182, %r5917, %r5652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6188, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6190, %r6188, %r5928, %r5656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6194, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6196, %r6194, %r5939, %r5660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6200, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6202, %r6200, %r5952, %r5664;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6206, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6208, %r6206, %r5963, %r5668;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6212, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6214, %r6212, %r5974, %r5672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6218, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6220, %r6218, %r5985, %r5676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6224, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6226, %r6224, %r5998, %r5680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6230, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6232, %r6230, %r6009, %r5684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6236, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6238, %r6236, %r6020, %r5688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6242, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6244, %r6242, %r6031, %r5692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6248, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6250, %r6248, %r6044, %r5696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6254, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6256, %r6254, %r6055, %r5700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6260, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6262, %r6260, %r6066, %r5704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6266, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6268, %r6266, %r6077, %r5708;
	// end inline asm
	// begin inline asm
	mov.b32 %r6277, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6288, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6274, %r875, %r876, %r6277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6278, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6279, %r6277, %r6278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6282, %r6274, %r6279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6285, %r886, %r876, %r6288, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6289, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6290, %r6288, %r6289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6293, %r6285, %r6290;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6296, %r875, %r898, %r6277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6300, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6301, %r6277, %r6300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6304, %r6296, %r6301;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6307, %r886, %r898, %r6288, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6311, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6312, %r6288, %r6311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6315, %r6307, %r6312;
	// end inline asm
	// begin inline asm
	mov.b32 %r6323, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6334, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6320, %r875, %r922, %r6323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6324, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6325, %r6323, %r6324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6328, %r6320, %r6325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6331, %r886, %r922, %r6334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6335, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6336, %r6334, %r6335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6339, %r6331, %r6336;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6342, %r875, %r944, %r6323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6346, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6347, %r6323, %r6346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6350, %r6342, %r6347;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6353, %r886, %r944, %r6334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6357, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6358, %r6334, %r6357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6361, %r6353, %r6358;
	// end inline asm
	// begin inline asm
	mov.b32 %r6369, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6380, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6366, %r875, %r968, %r6369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6370, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6371, %r6369, %r6370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6374, %r6366, %r6371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6377, %r886, %r968, %r6380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6381, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6382, %r6380, %r6381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6385, %r6377, %r6382;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6388, %r875, %r990, %r6369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6392, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6393, %r6369, %r6392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6396, %r6388, %r6393;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6399, %r886, %r990, %r6380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6403, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6404, %r6380, %r6403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6407, %r6399, %r6404;
	// end inline asm
	// begin inline asm
	mov.b32 %r6415, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6426, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6412, %r875, %r1014, %r6415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6416, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6417, %r6415, %r6416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6420, %r6412, %r6417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6423, %r886, %r1014, %r6426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6427, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6428, %r6426, %r6427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6431, %r6423, %r6428;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6434, %r875, %r1036, %r6415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6438, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6439, %r6415, %r6438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6442, %r6434, %r6439;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6445, %r886, %r1036, %r6426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6449, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6450, %r6426, %r6449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6453, %r6445, %r6450;
	// end inline asm
	// begin inline asm
	mov.b32 %r6461, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6472, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6458, %r875, %r1060, %r6461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6462, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6463, %r6461, %r6462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6466, %r6458, %r6463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6469, %r886, %r1060, %r6472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6473, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6474, %r6472, %r6473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6477, %r6469, %r6474;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6480, %r875, %r1082, %r6461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6484, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6485, %r6461, %r6484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6488, %r6480, %r6485;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6491, %r886, %r1082, %r6472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6495, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6496, %r6472, %r6495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6499, %r6491, %r6496;
	// end inline asm
	// begin inline asm
	mov.b32 %r6507, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6518, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6504, %r875, %r1106, %r6507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6508, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6509, %r6507, %r6508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6512, %r6504, %r6509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6515, %r886, %r1106, %r6518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6519, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6520, %r6518, %r6519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6523, %r6515, %r6520;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6526, %r875, %r1128, %r6507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6530, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6531, %r6507, %r6530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6534, %r6526, %r6531;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6537, %r886, %r1128, %r6518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6541, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6542, %r6518, %r6541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6545, %r6537, %r6542;
	// end inline asm
	// begin inline asm
	mov.b32 %r6553, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6564, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6550, %r875, %r1152, %r6553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6554, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6555, %r6553, %r6554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6558, %r6550, %r6555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6561, %r886, %r1152, %r6564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6565, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6566, %r6564, %r6565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6569, %r6561, %r6566;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6572, %r875, %r1174, %r6553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6576, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6577, %r6553, %r6576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6580, %r6572, %r6577;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6583, %r886, %r1174, %r6564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6587, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6588, %r6564, %r6587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6591, %r6583, %r6588;
	// end inline asm
	// begin inline asm
	mov.b32 %r6599, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6610, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6596, %r875, %r1198, %r6599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6600, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6601, %r6599, %r6600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6604, %r6596, %r6601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6607, %r886, %r1198, %r6610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6611, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6612, %r6610, %r6611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6615, %r6607, %r6612;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6618, %r875, %r1220, %r6599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6622, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6623, %r6599, %r6622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6626, %r6618, %r6623;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6629, %r886, %r1220, %r6610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6633, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6634, %r6610, %r6633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6637, %r6629, %r6634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6775, %r365, %r6282, %r6082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6772, %r365, %r6293, %r6088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6784, %r365, %r6304, %r6094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6781, %r365, %r6315, %r6100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6793, %r365, %r6328, %r6106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6790, %r365, %r6339, %r6112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6802, %r365, %r6350, %r6118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6799, %r365, %r6361, %r6124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6811, %r365, %r6374, %r6130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6808, %r365, %r6385, %r6136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6820, %r365, %r6396, %r6142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6817, %r365, %r6407, %r6148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6829, %r365, %r6420, %r6154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6826, %r365, %r6431, %r6160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6838, %r365, %r6442, %r6166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6835, %r365, %r6453, %r6172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6847, %r383, %r6466, %r6178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6844, %r383, %r6477, %r6184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6856, %r383, %r6488, %r6190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6853, %r383, %r6499, %r6196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6865, %r383, %r6512, %r6202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6862, %r383, %r6523, %r6208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6874, %r383, %r6534, %r6214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6871, %r383, %r6545, %r6220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6883, %r383, %r6558, %r6226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6880, %r383, %r6569, %r6232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6892, %r383, %r6580, %r6238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6889, %r383, %r6591, %r6244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6901, %r383, %r6604, %r6250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6898, %r383, %r6615, %r6256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6910, %r383, %r6626, %r6262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6907, %r383, %r6637, %r6268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6768, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6770, %r6768, %r6772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6773, %r422, %r6775, %r6770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6777, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6779, %r6777, %r6781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6782, %r422, %r6784, %r6779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6786, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6788, %r6786, %r6790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6791, %r422, %r6793, %r6788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6795, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6797, %r6795, %r6799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6800, %r422, %r6802, %r6797;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6804, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6806, %r6804, %r6808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6809, %r422, %r6811, %r6806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6813, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6815, %r6813, %r6817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6818, %r422, %r6820, %r6815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6822, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6824, %r6822, %r6826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r422, %r6829, %r6824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6831, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6833, %r6831, %r6835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6836, %r422, %r6838, %r6833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6840, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6842, %r6840, %r6844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r425, %r6847, %r6842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6849, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6851, %r6849, %r6853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6854, %r425, %r6856, %r6851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6858, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6860, %r6858, %r6862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6863, %r425, %r6865, %r6860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6867, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6869, %r6867, %r6871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6872, %r425, %r6874, %r6869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6876, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6878, %r6876, %r6880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6881, %r425, %r6883, %r6878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6885, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6887, %r6885, %r6889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6890, %r425, %r6892, %r6887;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6894, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6896, %r6894, %r6898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6899, %r425, %r6901, %r6896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6903, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6905, %r6903, %r6907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6908, %r425, %r6910, %r6905;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6912, %r428, %r6775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6915, %r422, %r6772, %r6912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6919, %r428, %r6784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6922, %r422, %r6781, %r6919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6926, %r428, %r6793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6929, %r422, %r6790, %r6926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6933, %r428, %r6802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6936, %r422, %r6799, %r6933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6940, %r428, %r6811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6943, %r422, %r6808, %r6940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6947, %r428, %r6820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6950, %r422, %r6817, %r6947;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6954, %r428, %r6829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6957, %r422, %r6826, %r6954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6961, %r428, %r6838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6964, %r422, %r6835, %r6961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6968, %r431, %r6847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6971, %r425, %r6844, %r6968;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6975, %r431, %r6856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6978, %r425, %r6853, %r6975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6982, %r431, %r6865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6985, %r425, %r6862, %r6982;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6989, %r431, %r6874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6992, %r425, %r6871, %r6989;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6996, %r431, %r6883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6999, %r425, %r6880, %r6996;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7003, %r431, %r6892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7006, %r425, %r6889, %r7003;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7010, %r431, %r6901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7013, %r425, %r6898, %r7010;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7017, %r431, %r6910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7020, %r425, %r6907, %r7017;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7191, %r7188}, {%r489, %r495, %r492, %r498}, {%r6773, %r6915}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7200, %r7197}, {%r489, %r495, %r492, %r498}, {%r6782, %r6922}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7209, %r7206}, {%r489, %r495, %r492, %r498}, {%r6791, %r6929}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7218, %r7215}, {%r489, %r495, %r492, %r498}, {%r6800, %r6936}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7227, %r7224}, {%r489, %r495, %r492, %r498}, {%r6809, %r6943}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7236, %r7233}, {%r489, %r495, %r492, %r498}, {%r6818, %r6950}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7245, %r7242}, {%r489, %r495, %r492, %r498}, {%r6827, %r6957}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7254, %r7251}, {%r489, %r495, %r492, %r498}, {%r6836, %r6964}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7263, %r7260}, {%r489, %r495, %r492, %r498}, {%r6845, %r6971}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7272, %r7269}, {%r489, %r495, %r492, %r498}, {%r6854, %r6978}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7281, %r7278}, {%r489, %r495, %r492, %r498}, {%r6863, %r6985}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7290, %r7287}, {%r489, %r495, %r492, %r498}, {%r6872, %r6992}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7299, %r7296}, {%r489, %r495, %r492, %r498}, {%r6881, %r6999}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7308, %r7305}, {%r489, %r495, %r492, %r498}, {%r6890, %r7006}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7317, %r7314}, {%r489, %r495, %r492, %r498}, {%r6899, %r7013}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7326, %r7323}, {%r489, %r495, %r492, %r498}, {%r6908, %r7020}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7184, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7186, %r7184, %r7188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7189, %r539, %r7191, %r7186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7193, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7195, %r7193, %r7197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7198, %r539, %r7200, %r7195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7202, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7204, %r7202, %r7206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7207, %r539, %r7209, %r7204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7211, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7213, %r7211, %r7215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7216, %r539, %r7218, %r7213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7220, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7222, %r7220, %r7224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7225, %r539, %r7227, %r7222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7229, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7231, %r7229, %r7233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7234, %r539, %r7236, %r7231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7238, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7240, %r7238, %r7242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7243, %r539, %r7245, %r7240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7247, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7249, %r7247, %r7251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7252, %r539, %r7254, %r7249;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7256, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7258, %r7256, %r7260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7261, %r539, %r7263, %r7258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7265, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7267, %r7265, %r7269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7270, %r539, %r7272, %r7267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7274, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7276, %r7274, %r7278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7279, %r539, %r7281, %r7276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7283, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7285, %r7283, %r7287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7288, %r539, %r7290, %r7285;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7292, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7294, %r7292, %r7296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7297, %r539, %r7299, %r7294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7301, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7303, %r7301, %r7305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7306, %r539, %r7308, %r7303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7310, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7312, %r7310, %r7314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7315, %r539, %r7317, %r7312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7319, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7321, %r7319, %r7323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7324, %r539, %r7326, %r7321;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7328, %r542, %r7191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7331, %r539, %r7188, %r7328;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7335, %r542, %r7200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7338, %r539, %r7197, %r7335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7342, %r542, %r7209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7345, %r539, %r7206, %r7342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7349, %r542, %r7218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7352, %r539, %r7215, %r7349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7356, %r542, %r7227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7359, %r539, %r7224, %r7356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7363, %r542, %r7236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7366, %r539, %r7233, %r7363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7370, %r542, %r7245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7373, %r539, %r7242, %r7370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7377, %r542, %r7254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7380, %r539, %r7251, %r7377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7384, %r542, %r7263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7387, %r539, %r7260, %r7384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7391, %r542, %r7272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7394, %r539, %r7269, %r7391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7398, %r542, %r7281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7401, %r539, %r7278, %r7398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7405, %r542, %r7290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7408, %r539, %r7287, %r7405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7412, %r542, %r7299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7415, %r539, %r7296, %r7412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7419, %r542, %r7308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7422, %r539, %r7305, %r7419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7426, %r542, %r7317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7429, %r539, %r7314, %r7426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7433, %r542, %r7326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7436, %r539, %r7323, %r7433;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7729, %r7732}, {%r577, %r583, %r580, %r586}, {%r7189, %r7331}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7735, %r7738}, {%r577, %r583, %r580, %r586}, {%r7198, %r7338}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7741, %r7744}, {%r577, %r583, %r580, %r586}, {%r7207, %r7345}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7747, %r7750}, {%r577, %r583, %r580, %r586}, {%r7216, %r7352}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7753, %r7756}, {%r577, %r583, %r580, %r586}, {%r7225, %r7359}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7759, %r7762}, {%r577, %r583, %r580, %r586}, {%r7234, %r7366}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7765, %r7768}, {%r577, %r583, %r580, %r586}, {%r7243, %r7373}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7771, %r7774}, {%r577, %r583, %r580, %r586}, {%r7252, %r7380}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7730, %r7733}, {%r577, %r583, %r580, %r586}, {%r7261, %r7387}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7736, %r7739}, {%r577, %r583, %r580, %r586}, {%r7270, %r7394}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7742, %r7745}, {%r577, %r583, %r580, %r586}, {%r7279, %r7401}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7748, %r7751}, {%r577, %r583, %r580, %r586}, {%r7288, %r7408}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7754, %r7757}, {%r577, %r583, %r580, %r586}, {%r7297, %r7415}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7760, %r7763}, {%r577, %r583, %r580, %r586}, {%r7306, %r7422}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7766, %r7769}, {%r577, %r583, %r580, %r586}, {%r7315, %r7429}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7772, %r7775}, {%r577, %r583, %r580, %r586}, {%r7324, %r7436}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7728, %r7729, %r7730;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7731, %r7732, %r7733;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7734, %r7735, %r7736;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7737, %r7738, %r7739;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7740, %r7741, %r7742;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7743, %r7744, %r7745;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7746, %r7747, %r7748;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7749, %r7750, %r7751;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7752, %r7753, %r7754;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7755, %r7756, %r7757;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7758, %r7759, %r7760;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7761, %r7762, %r7763;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7764, %r7765, %r7766;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7767, %r7768, %r7769;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7770, %r7771, %r7772;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7773, %r7774, %r7775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7776, %r7729, %r7730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7779, %r7732, %r7733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7782, %r7735, %r7736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7785, %r7738, %r7739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7788, %r7741, %r7742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7791, %r7744, %r7745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7794, %r7747, %r7748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7797, %r7750, %r7751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7800, %r7753, %r7754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7803, %r7756, %r7757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7806, %r7759, %r7760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7809, %r7762, %r7763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7812, %r7765, %r7766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7815, %r7768, %r7769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7818, %r7771, %r7772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7821, %r7774, %r7775;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7824, %r180, %r7728;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7827, %r180, %r7731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7830, %r180, %r7734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7833, %r180, %r7737;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7836, %r180, %r7740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7839, %r180, %r7743;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7842, %r180, %r7746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7845, %r180, %r7749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7848, %r180, %r7752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7851, %r180, %r7755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7854, %r180, %r7758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7857, %r180, %r7761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7860, %r180, %r7764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7863, %r180, %r7767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7866, %r180, %r7770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7869, %r180, %r7773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7872, %r182, %r7776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7875, %r182, %r7779;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7878, %r182, %r7782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7881, %r182, %r7785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7884, %r182, %r7788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7887, %r182, %r7791;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7890, %r182, %r7794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7893, %r182, %r7797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7896, %r182, %r7800;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7899, %r182, %r7803;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7902, %r182, %r7806;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7905, %r182, %r7809;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7908, %r182, %r7812;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7911, %r182, %r7815;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7914, %r182, %r7818;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7917, %r182, %r7821;
	// end inline asm
	// begin inline asm
	mov.b32 %r7920, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7921, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7922, %r7824, %r7920;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7925, %r7922, %r7921;
	// end inline asm
	// begin inline asm
	mov.b32 %r7928, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7929, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7930, %r7827, %r7928;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7933, %r7930, %r7929;
	// end inline asm
	// begin inline asm
	mov.b32 %r7936, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7937, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7938, %r7830, %r7936;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7941, %r7938, %r7937;
	// end inline asm
	// begin inline asm
	mov.b32 %r7944, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7945, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7946, %r7833, %r7944;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7949, %r7946, %r7945;
	// end inline asm
	// begin inline asm
	mov.b32 %r7952, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7953, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7954, %r7836, %r7952;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7957, %r7954, %r7953;
	// end inline asm
	// begin inline asm
	mov.b32 %r7960, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7961, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7962, %r7839, %r7960;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7965, %r7962, %r7961;
	// end inline asm
	// begin inline asm
	mov.b32 %r7968, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7969, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7970, %r7842, %r7968;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7973, %r7970, %r7969;
	// end inline asm
	// begin inline asm
	mov.b32 %r7976, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7977, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7978, %r7845, %r7976;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7981, %r7978, %r7977;
	// end inline asm
	// begin inline asm
	mov.b32 %r7984, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7985, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7986, %r7848, %r7984;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7989, %r7986, %r7985;
	// end inline asm
	// begin inline asm
	mov.b32 %r7992, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7993, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7994, %r7851, %r7992;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7997, %r7994, %r7993;
	// end inline asm
	// begin inline asm
	mov.b32 %r8000, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8001, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8002, %r7854, %r8000;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8005, %r8002, %r8001;
	// end inline asm
	// begin inline asm
	mov.b32 %r8008, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8009, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8010, %r7857, %r8008;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8013, %r8010, %r8009;
	// end inline asm
	// begin inline asm
	mov.b32 %r8016, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8017, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8018, %r7860, %r8016;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8021, %r8018, %r8017;
	// end inline asm
	// begin inline asm
	mov.b32 %r8024, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8025, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8026, %r7863, %r8024;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8029, %r8026, %r8025;
	// end inline asm
	// begin inline asm
	mov.b32 %r8032, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8033, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8034, %r7866, %r8032;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8037, %r8034, %r8033;
	// end inline asm
	// begin inline asm
	mov.b32 %r8040, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8041, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8042, %r7869, %r8040;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8045, %r8042, %r8041;
	// end inline asm
	// begin inline asm
	mov.b32 %r8048, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8049, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8050, %r7872, %r8048;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8053, %r8050, %r8049;
	// end inline asm
	// begin inline asm
	mov.b32 %r8056, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8057, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8058, %r7875, %r8056;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8061, %r8058, %r8057;
	// end inline asm
	// begin inline asm
	mov.b32 %r8064, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8065, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8066, %r7878, %r8064;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8069, %r8066, %r8065;
	// end inline asm
	// begin inline asm
	mov.b32 %r8072, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8073, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8074, %r7881, %r8072;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8077, %r8074, %r8073;
	// end inline asm
	// begin inline asm
	mov.b32 %r8080, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8081, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8082, %r7884, %r8080;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8085, %r8082, %r8081;
	// end inline asm
	// begin inline asm
	mov.b32 %r8088, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8089, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8090, %r7887, %r8088;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8093, %r8090, %r8089;
	// end inline asm
	// begin inline asm
	mov.b32 %r8096, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8097, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8098, %r7890, %r8096;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8101, %r8098, %r8097;
	// end inline asm
	// begin inline asm
	mov.b32 %r8104, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8105, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8106, %r7893, %r8104;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8109, %r8106, %r8105;
	// end inline asm
	// begin inline asm
	mov.b32 %r8112, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8113, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8114, %r7896, %r8112;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8117, %r8114, %r8113;
	// end inline asm
	// begin inline asm
	mov.b32 %r8120, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8121, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8122, %r7899, %r8120;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8125, %r8122, %r8121;
	// end inline asm
	// begin inline asm
	mov.b32 %r8128, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8129, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8130, %r7902, %r8128;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8133, %r8130, %r8129;
	// end inline asm
	// begin inline asm
	mov.b32 %r8136, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8137, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8138, %r7905, %r8136;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8141, %r8138, %r8137;
	// end inline asm
	// begin inline asm
	mov.b32 %r8144, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8145, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8146, %r7908, %r8144;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8149, %r8146, %r8145;
	// end inline asm
	// begin inline asm
	mov.b32 %r8152, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8153, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8154, %r7911, %r8152;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8157, %r8154, %r8153;
	// end inline asm
	// begin inline asm
	mov.b32 %r8160, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8161, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8162, %r7914, %r8160;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8165, %r8162, %r8161;
	// end inline asm
	// begin inline asm
	mov.b32 %r8168, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8169, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8170, %r7917, %r8168;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8173, %r8170, %r8169;
	// end inline asm
	// begin inline asm
	mov.b32 %r8179, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8177, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8178, %r8179, %r8177;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8181, %r7925, %r8178;
	// end inline asm
	// begin inline asm
	mov.b32 %r8184, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8185, %r8179, %r8184;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8188, %r7933, %r8185;
	// end inline asm
	// begin inline asm
	mov.b32 %r8191, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8192, %r8179, %r8191;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8195, %r7941, %r8192;
	// end inline asm
	// begin inline asm
	mov.b32 %r8198, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8199, %r8179, %r8198;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8202, %r7949, %r8199;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8205, %r8181, %r8195, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8209, %r8188, %r8202, %r4392;
	// end inline asm
	shl.b32 	%r8216, %r8209, 4;
	// begin inline asm
	lop3.b32 %r8213, %r4398, %r8205, %r8216, 202;
	// end inline asm
	xor.b32  	%r16201, %r8213, -2004318072;
	// begin inline asm
	mov.b32 %r8220, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8218, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8219, %r8220, %r8218;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8222, %r7957, %r8219;
	// end inline asm
	// begin inline asm
	mov.b32 %r8225, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8226, %r8220, %r8225;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8229, %r7965, %r8226;
	// end inline asm
	// begin inline asm
	mov.b32 %r8232, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8233, %r8220, %r8232;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8236, %r7973, %r8233;
	// end inline asm
	// begin inline asm
	mov.b32 %r8239, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8240, %r8220, %r8239;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8243, %r7981, %r8240;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8246, %r8222, %r8236, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8250, %r8229, %r8243, %r4392;
	// end inline asm
	shl.b32 	%r8257, %r8250, 4;
	// begin inline asm
	lop3.b32 %r8254, %r4398, %r8246, %r8257, 202;
	// end inline asm
	xor.b32  	%r16202, %r8254, -2004318072;
	// begin inline asm
	mov.b32 %r8261, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8259, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8260, %r8261, %r8259;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8263, %r7989, %r8260;
	// end inline asm
	// begin inline asm
	mov.b32 %r8266, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8267, %r8261, %r8266;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8270, %r7997, %r8267;
	// end inline asm
	// begin inline asm
	mov.b32 %r8273, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8274, %r8261, %r8273;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8277, %r8005, %r8274;
	// end inline asm
	// begin inline asm
	mov.b32 %r8280, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8281, %r8261, %r8280;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8284, %r8013, %r8281;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8287, %r8263, %r8277, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8291, %r8270, %r8284, %r4392;
	// end inline asm
	shl.b32 	%r8298, %r8291, 4;
	// begin inline asm
	lop3.b32 %r8295, %r4398, %r8287, %r8298, 202;
	// end inline asm
	xor.b32  	%r16203, %r8295, -2004318072;
	// begin inline asm
	mov.b32 %r8302, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8300, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8301, %r8302, %r8300;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8304, %r8021, %r8301;
	// end inline asm
	// begin inline asm
	mov.b32 %r8307, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8308, %r8302, %r8307;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8311, %r8029, %r8308;
	// end inline asm
	// begin inline asm
	mov.b32 %r8314, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8315, %r8302, %r8314;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8318, %r8037, %r8315;
	// end inline asm
	// begin inline asm
	mov.b32 %r8321, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8322, %r8302, %r8321;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8325, %r8045, %r8322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8328, %r8304, %r8318, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8332, %r8311, %r8325, %r4392;
	// end inline asm
	shl.b32 	%r8339, %r8332, 4;
	// begin inline asm
	lop3.b32 %r8336, %r4398, %r8328, %r8339, 202;
	// end inline asm
	xor.b32  	%r16204, %r8336, -2004318072;
	// begin inline asm
	mov.b32 %r8343, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8341, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8342, %r8343, %r8341;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8345, %r8053, %r8342;
	// end inline asm
	// begin inline asm
	mov.b32 %r8348, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8349, %r8343, %r8348;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8352, %r8061, %r8349;
	// end inline asm
	// begin inline asm
	mov.b32 %r8355, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8356, %r8343, %r8355;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8359, %r8069, %r8356;
	// end inline asm
	// begin inline asm
	mov.b32 %r8362, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8363, %r8343, %r8362;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8366, %r8077, %r8363;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8369, %r8345, %r8359, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8373, %r8352, %r8366, %r4392;
	// end inline asm
	shl.b32 	%r8380, %r8373, 4;
	// begin inline asm
	lop3.b32 %r8377, %r4398, %r8369, %r8380, 202;
	// end inline asm
	xor.b32  	%r16205, %r8377, -2004318072;
	// begin inline asm
	mov.b32 %r8384, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8382, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8383, %r8384, %r8382;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8386, %r8085, %r8383;
	// end inline asm
	// begin inline asm
	mov.b32 %r8389, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8390, %r8384, %r8389;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8393, %r8093, %r8390;
	// end inline asm
	// begin inline asm
	mov.b32 %r8396, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8397, %r8384, %r8396;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8400, %r8101, %r8397;
	// end inline asm
	// begin inline asm
	mov.b32 %r8403, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8404, %r8384, %r8403;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8407, %r8109, %r8404;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8410, %r8386, %r8400, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8414, %r8393, %r8407, %r4392;
	// end inline asm
	shl.b32 	%r8421, %r8414, 4;
	// begin inline asm
	lop3.b32 %r8418, %r4398, %r8410, %r8421, 202;
	// end inline asm
	xor.b32  	%r16206, %r8418, -2004318072;
	// begin inline asm
	mov.b32 %r8425, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8423, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8424, %r8425, %r8423;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8427, %r8117, %r8424;
	// end inline asm
	// begin inline asm
	mov.b32 %r8430, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8431, %r8425, %r8430;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8434, %r8125, %r8431;
	// end inline asm
	// begin inline asm
	mov.b32 %r8437, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8438, %r8425, %r8437;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8441, %r8133, %r8438;
	// end inline asm
	// begin inline asm
	mov.b32 %r8444, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8445, %r8425, %r8444;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8448, %r8141, %r8445;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8451, %r8427, %r8441, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8455, %r8434, %r8448, %r4392;
	// end inline asm
	shl.b32 	%r8462, %r8455, 4;
	// begin inline asm
	lop3.b32 %r8459, %r4398, %r8451, %r8462, 202;
	// end inline asm
	xor.b32  	%r16207, %r8459, -2004318072;
	// begin inline asm
	mov.b32 %r8466, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8464, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8465, %r8466, %r8464;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8468, %r8149, %r8465;
	// end inline asm
	// begin inline asm
	mov.b32 %r8471, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8472, %r8466, %r8471;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8475, %r8157, %r8472;
	// end inline asm
	// begin inline asm
	mov.b32 %r8478, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8479, %r8466, %r8478;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8482, %r8165, %r8479;
	// end inline asm
	// begin inline asm
	mov.b32 %r8485, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8486, %r8466, %r8485;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8489, %r8173, %r8486;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8492, %r8468, %r8482, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8496, %r8475, %r8489, %r4392;
	// end inline asm
	shl.b32 	%r8503, %r8496, 4;
	// begin inline asm
	lop3.b32 %r8500, %r4398, %r8492, %r8503, 202;
	// end inline asm
	xor.b32  	%r16208, %r8500, -2004318072;
	st.shared.u32 	[%rd93], %r16201;
	st.shared.u32 	[%rd95], %r16202;
	st.shared.u32 	[%rd97], %r16203;
	st.shared.u32 	[%rd99], %r16204;
	st.shared.u32 	[%rd101], %r16205;
	st.shared.u32 	[%rd103], %r16206;
	st.shared.u32 	[%rd105], %r16207;
	st.shared.u32 	[%rd107], %r16208;
	ld.shared.u32 	%r16332, [%rd77];
	ld.shared.u32 	%r16333, [%rd79];
	ld.shared.u32 	%r16334, [%rd81];
	ld.shared.u32 	%r16335, [%rd83];
	ld.shared.u32 	%r16344, [%rd85];
	ld.shared.u32 	%r16345, [%rd87];
	ld.shared.u32 	%r16346, [%rd89];
	ld.shared.u32 	%r16347, [%rd91];
	// begin inline asm
	mov.b32 %r8509, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8520, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r8508, %r16332, -2004318072;
	// begin inline asm
	lop3.b32 %r8506, %r875, %r8508, %r8509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8510, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8511, %r8509, %r8510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8514, %r8506, %r8511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8517, %r886, %r8508, %r8520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8521, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8522, %r8520, %r8521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8525, %r8517, %r8522;
	// end inline asm
	shr.u32 	%r8530, %r8508, 8;
	// begin inline asm
	lop3.b32 %r8528, %r875, %r8530, %r8509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8532, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8533, %r8509, %r8532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8536, %r8528, %r8533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8539, %r886, %r8530, %r8520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8543, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8544, %r8520, %r8543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8547, %r8539, %r8544;
	// end inline asm
	// begin inline asm
	mov.b32 %r8555, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8566, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r8554, %r16333, -2004318072;
	// begin inline asm
	lop3.b32 %r8552, %r875, %r8554, %r8555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8556, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8557, %r8555, %r8556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8560, %r8552, %r8557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8563, %r886, %r8554, %r8566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8567, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8568, %r8566, %r8567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8571, %r8563, %r8568;
	// end inline asm
	shr.u32 	%r8576, %r8554, 8;
	// begin inline asm
	lop3.b32 %r8574, %r875, %r8576, %r8555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8578, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8579, %r8555, %r8578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8582, %r8574, %r8579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8585, %r886, %r8576, %r8566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8589, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8590, %r8566, %r8589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8593, %r8585, %r8590;
	// end inline asm
	// begin inline asm
	mov.b32 %r8601, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8612, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r8600, %r16334, -2004318072;
	// begin inline asm
	lop3.b32 %r8598, %r875, %r8600, %r8601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8602, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8603, %r8601, %r8602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8606, %r8598, %r8603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8609, %r886, %r8600, %r8612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8613, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8614, %r8612, %r8613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8617, %r8609, %r8614;
	// end inline asm
	shr.u32 	%r8622, %r8600, 8;
	// begin inline asm
	lop3.b32 %r8620, %r875, %r8622, %r8601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8624, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8625, %r8601, %r8624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8628, %r8620, %r8625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8631, %r886, %r8622, %r8612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8635, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8636, %r8612, %r8635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8639, %r8631, %r8636;
	// end inline asm
	// begin inline asm
	mov.b32 %r8647, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8658, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r8646, %r16335, -2004318072;
	// begin inline asm
	lop3.b32 %r8644, %r875, %r8646, %r8647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8648, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8649, %r8647, %r8648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8652, %r8644, %r8649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8655, %r886, %r8646, %r8658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8659, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8660, %r8658, %r8659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8663, %r8655, %r8660;
	// end inline asm
	shr.u32 	%r8668, %r8646, 8;
	// begin inline asm
	lop3.b32 %r8666, %r875, %r8668, %r8647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8670, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8671, %r8647, %r8670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8674, %r8666, %r8671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8677, %r886, %r8668, %r8658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8681, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8682, %r8658, %r8681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8685, %r8677, %r8682;
	// end inline asm
	// begin inline asm
	mov.b32 %r8693, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8704, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r8692, %r16344, -2004318072;
	// begin inline asm
	lop3.b32 %r8690, %r875, %r8692, %r8693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8694, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8695, %r8693, %r8694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8698, %r8690, %r8695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8701, %r886, %r8692, %r8704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8705, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8706, %r8704, %r8705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8709, %r8701, %r8706;
	// end inline asm
	shr.u32 	%r8714, %r8692, 8;
	// begin inline asm
	lop3.b32 %r8712, %r875, %r8714, %r8693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8716, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8717, %r8693, %r8716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8720, %r8712, %r8717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8723, %r886, %r8714, %r8704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8727, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8728, %r8704, %r8727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8731, %r8723, %r8728;
	// end inline asm
	// begin inline asm
	mov.b32 %r8739, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8750, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r8738, %r16345, -2004318072;
	// begin inline asm
	lop3.b32 %r8736, %r875, %r8738, %r8739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8740, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8741, %r8739, %r8740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8744, %r8736, %r8741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8747, %r886, %r8738, %r8750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8751, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8752, %r8750, %r8751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8755, %r8747, %r8752;
	// end inline asm
	shr.u32 	%r8760, %r8738, 8;
	// begin inline asm
	lop3.b32 %r8758, %r875, %r8760, %r8739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8762, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8763, %r8739, %r8762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8766, %r8758, %r8763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8769, %r886, %r8760, %r8750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8773, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8774, %r8750, %r8773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8777, %r8769, %r8774;
	// end inline asm
	// begin inline asm
	mov.b32 %r8785, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8796, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r8784, %r16346, -2004318072;
	// begin inline asm
	lop3.b32 %r8782, %r875, %r8784, %r8785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8786, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8787, %r8785, %r8786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8790, %r8782, %r8787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8793, %r886, %r8784, %r8796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8797, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8798, %r8796, %r8797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8801, %r8793, %r8798;
	// end inline asm
	shr.u32 	%r8806, %r8784, 8;
	// begin inline asm
	lop3.b32 %r8804, %r875, %r8806, %r8785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8808, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8809, %r8785, %r8808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8812, %r8804, %r8809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8815, %r886, %r8806, %r8796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8819, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8820, %r8796, %r8819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8823, %r8815, %r8820;
	// end inline asm
	// begin inline asm
	mov.b32 %r8831, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8842, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r8830, %r16347, -2004318072;
	// begin inline asm
	lop3.b32 %r8828, %r875, %r8830, %r8831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8832, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8833, %r8831, %r8832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8836, %r8828, %r8833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8839, %r886, %r8830, %r8842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8843, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8844, %r8842, %r8843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8847, %r8839, %r8844;
	// end inline asm
	shr.u32 	%r8852, %r8830, 8;
	// begin inline asm
	lop3.b32 %r8850, %r875, %r8852, %r8831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8854, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8855, %r8831, %r8854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8858, %r8850, %r8855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8861, %r886, %r8852, %r8842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8865, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8866, %r8842, %r8865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8869, %r8861, %r8866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8872, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8874, %r8872, %r8514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8877, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8879, %r8877, %r8525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8882, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8884, %r8882, %r8536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8887, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8889, %r8887, %r8547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8892, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8894, %r8892, %r8560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8897, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8899, %r8897, %r8571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8902, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8904, %r8902, %r8582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8907, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8909, %r8907, %r8593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8912, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8914, %r8912, %r8606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8917, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8919, %r8917, %r8617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8922, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8924, %r8922, %r8628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8927, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8929, %r8927, %r8639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8932, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8934, %r8932, %r8652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8937, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8939, %r8937, %r8663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8942, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8944, %r8942, %r8674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8947, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8949, %r8947, %r8685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8952, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8954, %r8952, %r8698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8957, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8959, %r8957, %r8709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8962, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8964, %r8962, %r8720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8967, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8969, %r8967, %r8731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8972, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8974, %r8972, %r8744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8977, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8979, %r8977, %r8755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8982, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8984, %r8982, %r8766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8987, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8989, %r8987, %r8777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8992, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8994, %r8992, %r8790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8997, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8999, %r8997, %r8801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9002, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9004, %r9002, %r8812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9007, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9009, %r9007, %r8823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9012, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9014, %r9012, %r8836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9017, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9019, %r9017, %r8847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9022, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9024, %r9022, %r8858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9027, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9029, %r9027, %r8869;
	// end inline asm
	// begin inline asm
	mov.b32 %r9037, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9048, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9034, %r875, %r2460, %r9037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9038, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9039, %r9037, %r9038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9042, %r9034, %r9039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9045, %r886, %r2460, %r9048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9049, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9050, %r9048, %r9049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9053, %r9045, %r9050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9056, %r875, %r2482, %r9037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9060, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9061, %r9037, %r9060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9064, %r9056, %r9061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9067, %r886, %r2482, %r9048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9071, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9072, %r9048, %r9071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9075, %r9067, %r9072;
	// end inline asm
	// begin inline asm
	mov.b32 %r9083, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9094, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9080, %r875, %r2506, %r9083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9084, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9085, %r9083, %r9084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9088, %r9080, %r9085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9091, %r886, %r2506, %r9094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9095, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9096, %r9094, %r9095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9099, %r9091, %r9096;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9102, %r875, %r2528, %r9083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9106, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9107, %r9083, %r9106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9110, %r9102, %r9107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9113, %r886, %r2528, %r9094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9117, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9118, %r9094, %r9117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9121, %r9113, %r9118;
	// end inline asm
	// begin inline asm
	mov.b32 %r9129, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9140, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9126, %r875, %r2552, %r9129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9130, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9131, %r9129, %r9130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9134, %r9126, %r9131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9137, %r886, %r2552, %r9140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9141, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9142, %r9140, %r9141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9145, %r9137, %r9142;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9148, %r875, %r2574, %r9129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9152, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9153, %r9129, %r9152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9156, %r9148, %r9153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9159, %r886, %r2574, %r9140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9163, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9164, %r9140, %r9163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9167, %r9159, %r9164;
	// end inline asm
	// begin inline asm
	mov.b32 %r9175, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9186, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9172, %r875, %r2598, %r9175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9176, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9177, %r9175, %r9176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9180, %r9172, %r9177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9183, %r886, %r2598, %r9186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9187, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9188, %r9186, %r9187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9191, %r9183, %r9188;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9194, %r875, %r2620, %r9175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9198, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9199, %r9175, %r9198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9202, %r9194, %r9199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9205, %r886, %r2620, %r9186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9209, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9210, %r9186, %r9209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9213, %r9205, %r9210;
	// end inline asm
	// begin inline asm
	mov.b32 %r9221, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9232, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9218, %r875, %r2644, %r9221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9222, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9223, %r9221, %r9222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9226, %r9218, %r9223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9229, %r886, %r2644, %r9232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9233, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9234, %r9232, %r9233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9237, %r9229, %r9234;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9240, %r875, %r2666, %r9221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9244, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9245, %r9221, %r9244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9248, %r9240, %r9245;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9251, %r886, %r2666, %r9232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9255, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9256, %r9232, %r9255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9259, %r9251, %r9256;
	// end inline asm
	// begin inline asm
	mov.b32 %r9267, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9278, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9264, %r875, %r2690, %r9267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9268, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9269, %r9267, %r9268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9272, %r9264, %r9269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9275, %r886, %r2690, %r9278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9279, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9280, %r9278, %r9279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9283, %r9275, %r9280;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9286, %r875, %r2712, %r9267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9290, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9291, %r9267, %r9290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9294, %r9286, %r9291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9297, %r886, %r2712, %r9278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9301, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9302, %r9278, %r9301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9305, %r9297, %r9302;
	// end inline asm
	// begin inline asm
	mov.b32 %r9313, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9324, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9310, %r875, %r2736, %r9313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9314, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9315, %r9313, %r9314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9318, %r9310, %r9315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9321, %r886, %r2736, %r9324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9325, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9326, %r9324, %r9325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9329, %r9321, %r9326;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9332, %r875, %r2758, %r9313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9336, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9337, %r9313, %r9336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9340, %r9332, %r9337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9343, %r886, %r2758, %r9324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9347, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9348, %r9324, %r9347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9351, %r9343, %r9348;
	// end inline asm
	// begin inline asm
	mov.b32 %r9359, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9370, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9356, %r875, %r2782, %r9359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9360, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9361, %r9359, %r9360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9364, %r9356, %r9361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9367, %r886, %r2782, %r9370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9371, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9372, %r9370, %r9371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9375, %r9367, %r9372;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9378, %r875, %r2804, %r9359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9382, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9383, %r9359, %r9382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9386, %r9378, %r9383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9389, %r886, %r2804, %r9370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9393, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9394, %r9370, %r9393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9397, %r9389, %r9394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9400, %r293, %r9042, %r8874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9404, %r293, %r9053, %r8879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9408, %r293, %r9064, %r8884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9412, %r293, %r9075, %r8889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9416, %r293, %r9088, %r8894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9420, %r293, %r9099, %r8899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9424, %r293, %r9110, %r8904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9428, %r293, %r9121, %r8909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9432, %r293, %r9134, %r8914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9436, %r293, %r9145, %r8919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9440, %r293, %r9156, %r8924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9444, %r293, %r9167, %r8929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9448, %r293, %r9180, %r8934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9452, %r293, %r9191, %r8939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9456, %r293, %r9202, %r8944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9460, %r293, %r9213, %r8949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9464, %r311, %r9226, %r8954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9468, %r311, %r9237, %r8959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9472, %r311, %r9248, %r8964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9476, %r311, %r9259, %r8969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9480, %r311, %r9272, %r8974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9484, %r311, %r9283, %r8979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9488, %r311, %r9294, %r8984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9492, %r311, %r9305, %r8989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9496, %r311, %r9318, %r8994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9500, %r311, %r9329, %r8999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9504, %r311, %r9340, %r9004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9508, %r311, %r9351, %r9009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9512, %r311, %r9364, %r9014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9516, %r311, %r9375, %r9019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9520, %r311, %r9386, %r9024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9524, %r311, %r9397, %r9029;
	// end inline asm
	// begin inline asm
	mov.b32 %r9533, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9544, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9530, %r875, %r876, %r9533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9534, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9535, %r9533, %r9534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9538, %r9530, %r9535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9541, %r886, %r876, %r9544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9545, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9546, %r9544, %r9545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9549, %r9541, %r9546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9552, %r875, %r898, %r9533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9556, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9557, %r9533, %r9556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9560, %r9552, %r9557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9563, %r886, %r898, %r9544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9567, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9568, %r9544, %r9567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9571, %r9563, %r9568;
	// end inline asm
	// begin inline asm
	mov.b32 %r9579, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9590, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9576, %r875, %r922, %r9579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9580, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9581, %r9579, %r9580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9584, %r9576, %r9581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9587, %r886, %r922, %r9590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9591, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9592, %r9590, %r9591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9595, %r9587, %r9592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9598, %r875, %r944, %r9579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9602, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9603, %r9579, %r9602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9606, %r9598, %r9603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9609, %r886, %r944, %r9590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9613, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9614, %r9590, %r9613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9617, %r9609, %r9614;
	// end inline asm
	// begin inline asm
	mov.b32 %r9625, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9636, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9622, %r875, %r968, %r9625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9626, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9627, %r9625, %r9626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9630, %r9622, %r9627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9633, %r886, %r968, %r9636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9637, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9638, %r9636, %r9637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9641, %r9633, %r9638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9644, %r875, %r990, %r9625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9648, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9649, %r9625, %r9648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9652, %r9644, %r9649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9655, %r886, %r990, %r9636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9659, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9660, %r9636, %r9659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9663, %r9655, %r9660;
	// end inline asm
	// begin inline asm
	mov.b32 %r9671, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9682, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9668, %r875, %r1014, %r9671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9672, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9673, %r9671, %r9672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9676, %r9668, %r9673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9679, %r886, %r1014, %r9682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9683, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9684, %r9682, %r9683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9687, %r9679, %r9684;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9690, %r875, %r1036, %r9671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9694, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9695, %r9671, %r9694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9698, %r9690, %r9695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9701, %r886, %r1036, %r9682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9705, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9706, %r9682, %r9705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9709, %r9701, %r9706;
	// end inline asm
	// begin inline asm
	mov.b32 %r9717, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9728, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9714, %r875, %r1060, %r9717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9718, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9719, %r9717, %r9718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9722, %r9714, %r9719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9725, %r886, %r1060, %r9728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9729, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9730, %r9728, %r9729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9733, %r9725, %r9730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9736, %r875, %r1082, %r9717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9740, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9741, %r9717, %r9740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9744, %r9736, %r9741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9747, %r886, %r1082, %r9728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9751, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9752, %r9728, %r9751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9755, %r9747, %r9752;
	// end inline asm
	// begin inline asm
	mov.b32 %r9763, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9774, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9760, %r875, %r1106, %r9763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9764, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9765, %r9763, %r9764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9768, %r9760, %r9765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9771, %r886, %r1106, %r9774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9775, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9776, %r9774, %r9775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9779, %r9771, %r9776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9782, %r875, %r1128, %r9763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9786, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9787, %r9763, %r9786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9790, %r9782, %r9787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9793, %r886, %r1128, %r9774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9797, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9798, %r9774, %r9797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9801, %r9793, %r9798;
	// end inline asm
	// begin inline asm
	mov.b32 %r9809, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9820, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9806, %r875, %r1152, %r9809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9810, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9811, %r9809, %r9810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9814, %r9806, %r9811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9817, %r886, %r1152, %r9820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9821, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9822, %r9820, %r9821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9825, %r9817, %r9822;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9828, %r875, %r1174, %r9809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9832, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9833, %r9809, %r9832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9836, %r9828, %r9833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9839, %r886, %r1174, %r9820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9843, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9844, %r9820, %r9843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9847, %r9839, %r9844;
	// end inline asm
	// begin inline asm
	mov.b32 %r9855, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9866, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9852, %r875, %r1198, %r9855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9856, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9857, %r9855, %r9856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9860, %r9852, %r9857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9863, %r886, %r1198, %r9866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9867, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9868, %r9866, %r9867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9871, %r9863, %r9868;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9874, %r875, %r1220, %r9855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9878, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9879, %r9855, %r9878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9882, %r9874, %r9879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9885, %r886, %r1220, %r9866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9889, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9890, %r9866, %r9889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9893, %r9885, %r9890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9896, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9898, %r9896, %r9538, %r9400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9902, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9904, %r9902, %r9549, %r9404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9908, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9910, %r9908, %r9560, %r9408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9914, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9916, %r9914, %r9571, %r9412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9920, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9922, %r9920, %r9584, %r9416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9926, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9928, %r9926, %r9595, %r9420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9932, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9934, %r9932, %r9606, %r9424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9938, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9940, %r9938, %r9617, %r9428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9944, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9946, %r9944, %r9630, %r9432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9950, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9952, %r9950, %r9641, %r9436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9956, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9958, %r9956, %r9652, %r9440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9962, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9964, %r9962, %r9663, %r9444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9968, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9970, %r9968, %r9676, %r9448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9974, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9976, %r9974, %r9687, %r9452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9980, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9982, %r9980, %r9698, %r9456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9986, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9988, %r9986, %r9709, %r9460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9992, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9994, %r9992, %r9722, %r9464;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9998, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10000, %r9998, %r9733, %r9468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10004, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10006, %r10004, %r9744, %r9472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10010, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10012, %r10010, %r9755, %r9476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10016, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10018, %r10016, %r9768, %r9480;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10022, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10024, %r10022, %r9779, %r9484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10028, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10030, %r10028, %r9790, %r9488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10034, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10036, %r10034, %r9801, %r9492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10040, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10042, %r10040, %r9814, %r9496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10046, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10048, %r10046, %r9825, %r9500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10052, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10054, %r10052, %r9836, %r9504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10058, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10060, %r10058, %r9847, %r9508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10064, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10066, %r10064, %r9860, %r9512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10070, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10072, %r10070, %r9871, %r9516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10076, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10078, %r10076, %r9882, %r9520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10082, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10084, %r10082, %r9893, %r9524;
	// end inline asm
	// begin inline asm
	mov.b32 %r10093, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r10104, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10090, %r875, %r4692, %r10093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10094, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10095, %r10093, %r10094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10098, %r10090, %r10095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10101, %r886, %r4692, %r10104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10105, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10106, %r10104, %r10105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10109, %r10101, %r10106;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10112, %r875, %r4714, %r10093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10116, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10117, %r10093, %r10116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10120, %r10112, %r10117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10123, %r886, %r4714, %r10104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10127, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10128, %r10104, %r10127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10131, %r10123, %r10128;
	// end inline asm
	// begin inline asm
	mov.b32 %r10139, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r10150, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10136, %r875, %r4738, %r10139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10140, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10141, %r10139, %r10140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10144, %r10136, %r10141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10147, %r886, %r4738, %r10150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10151, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10152, %r10150, %r10151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10155, %r10147, %r10152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10158, %r875, %r4760, %r10139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10162, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10163, %r10139, %r10162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10166, %r10158, %r10163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10169, %r886, %r4760, %r10150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10173, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10174, %r10150, %r10173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10177, %r10169, %r10174;
	// end inline asm
	// begin inline asm
	mov.b32 %r10185, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r10196, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10182, %r875, %r4784, %r10185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10186, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10187, %r10185, %r10186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10190, %r10182, %r10187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10193, %r886, %r4784, %r10196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10197, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10198, %r10196, %r10197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10201, %r10193, %r10198;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10204, %r875, %r4806, %r10185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10208, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10209, %r10185, %r10208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10212, %r10204, %r10209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10215, %r886, %r4806, %r10196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10219, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10220, %r10196, %r10219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10223, %r10215, %r10220;
	// end inline asm
	// begin inline asm
	mov.b32 %r10231, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r10242, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10228, %r875, %r4830, %r10231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10232, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10233, %r10231, %r10232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10236, %r10228, %r10233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10239, %r886, %r4830, %r10242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10243, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10244, %r10242, %r10243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10247, %r10239, %r10244;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10250, %r875, %r4852, %r10231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10254, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10255, %r10231, %r10254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10258, %r10250, %r10255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10261, %r886, %r4852, %r10242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10265, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10266, %r10242, %r10265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10269, %r10261, %r10266;
	// end inline asm
	// begin inline asm
	mov.b32 %r10277, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r10288, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10274, %r875, %r4876, %r10277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10278, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10279, %r10277, %r10278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10282, %r10274, %r10279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10285, %r886, %r4876, %r10288, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10289, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10290, %r10288, %r10289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10293, %r10285, %r10290;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10296, %r875, %r4898, %r10277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10300, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10301, %r10277, %r10300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10304, %r10296, %r10301;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10307, %r886, %r4898, %r10288, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10311, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10312, %r10288, %r10311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10315, %r10307, %r10312;
	// end inline asm
	// begin inline asm
	mov.b32 %r10323, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r10334, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10320, %r875, %r4922, %r10323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10324, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10325, %r10323, %r10324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10328, %r10320, %r10325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10331, %r886, %r4922, %r10334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10335, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10336, %r10334, %r10335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10339, %r10331, %r10336;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10342, %r875, %r4944, %r10323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10346, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10347, %r10323, %r10346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10350, %r10342, %r10347;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10353, %r886, %r4944, %r10334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10357, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10358, %r10334, %r10357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10361, %r10353, %r10358;
	// end inline asm
	// begin inline asm
	mov.b32 %r10369, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r10380, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10366, %r875, %r4968, %r10369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10370, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10371, %r10369, %r10370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10374, %r10366, %r10371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10377, %r886, %r4968, %r10380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10381, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10382, %r10380, %r10381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10385, %r10377, %r10382;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10388, %r875, %r4990, %r10369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10392, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10393, %r10369, %r10392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10396, %r10388, %r10393;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10399, %r886, %r4990, %r10380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10403, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10404, %r10380, %r10403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10407, %r10399, %r10404;
	// end inline asm
	// begin inline asm
	mov.b32 %r10415, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r10426, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10412, %r875, %r5014, %r10415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10416, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10417, %r10415, %r10416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10420, %r10412, %r10417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10423, %r886, %r5014, %r10426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10427, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10428, %r10426, %r10427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10431, %r10423, %r10428;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10434, %r875, %r5036, %r10415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10438, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10439, %r10415, %r10438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10442, %r10434, %r10439;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10445, %r886, %r5036, %r10426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10449, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10450, %r10426, %r10449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10453, %r10445, %r10450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10591, %r365, %r10098, %r9898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10588, %r365, %r10109, %r9904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10600, %r365, %r10120, %r9910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10597, %r365, %r10131, %r9916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10609, %r365, %r10144, %r9922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10606, %r365, %r10155, %r9928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10618, %r365, %r10166, %r9934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10615, %r365, %r10177, %r9940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10627, %r365, %r10190, %r9946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10624, %r365, %r10201, %r9952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10636, %r365, %r10212, %r9958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10633, %r365, %r10223, %r9964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10645, %r365, %r10236, %r9970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10642, %r365, %r10247, %r9976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10654, %r365, %r10258, %r9982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10651, %r365, %r10269, %r9988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10663, %r383, %r10282, %r9994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10660, %r383, %r10293, %r10000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10672, %r383, %r10304, %r10006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10669, %r383, %r10315, %r10012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10681, %r383, %r10328, %r10018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10678, %r383, %r10339, %r10024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10690, %r383, %r10350, %r10030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10687, %r383, %r10361, %r10036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10699, %r383, %r10374, %r10042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10696, %r383, %r10385, %r10048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10708, %r383, %r10396, %r10054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10705, %r383, %r10407, %r10060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10717, %r383, %r10420, %r10066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10714, %r383, %r10431, %r10072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10726, %r383, %r10442, %r10078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10723, %r383, %r10453, %r10084;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10584, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10586, %r10584, %r10588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10589, %r422, %r10591, %r10586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10593, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10595, %r10593, %r10597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10598, %r422, %r10600, %r10595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10602, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10604, %r10602, %r10606;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10607, %r422, %r10609, %r10604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10611, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10613, %r10611, %r10615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10616, %r422, %r10618, %r10613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10620, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10622, %r10620, %r10624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10625, %r422, %r10627, %r10622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10629, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10631, %r10629, %r10633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10634, %r422, %r10636, %r10631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10638, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10640, %r10638, %r10642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10643, %r422, %r10645, %r10640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10647, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10649, %r10647, %r10651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10652, %r422, %r10654, %r10649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10656, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10658, %r10656, %r10660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10661, %r425, %r10663, %r10658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10665, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10667, %r10665, %r10669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10670, %r425, %r10672, %r10667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10674, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10676, %r10674, %r10678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10679, %r425, %r10681, %r10676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10683, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10685, %r10683, %r10687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10688, %r425, %r10690, %r10685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10692, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10694, %r10692, %r10696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10697, %r425, %r10699, %r10694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10701, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10703, %r10701, %r10705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10706, %r425, %r10708, %r10703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10710, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10712, %r10710, %r10714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10715, %r425, %r10717, %r10712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10719, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10721, %r10719, %r10723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10724, %r425, %r10726, %r10721;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10728, %r428, %r10591;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10731, %r422, %r10588, %r10728;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10735, %r428, %r10600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10738, %r422, %r10597, %r10735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10742, %r428, %r10609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10745, %r422, %r10606, %r10742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10749, %r428, %r10618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10752, %r422, %r10615, %r10749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10756, %r428, %r10627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10759, %r422, %r10624, %r10756;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10763, %r428, %r10636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10766, %r422, %r10633, %r10763;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10770, %r428, %r10645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10773, %r422, %r10642, %r10770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10777, %r428, %r10654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10780, %r422, %r10651, %r10777;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10784, %r431, %r10663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10787, %r425, %r10660, %r10784;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10791, %r431, %r10672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10794, %r425, %r10669, %r10791;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10798, %r431, %r10681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10801, %r425, %r10678, %r10798;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10805, %r431, %r10690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10808, %r425, %r10687, %r10805;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10812, %r431, %r10699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10815, %r425, %r10696, %r10812;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10819, %r431, %r10708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10822, %r425, %r10705, %r10819;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10826, %r431, %r10717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10829, %r425, %r10714, %r10826;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10833, %r431, %r10726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10836, %r425, %r10723, %r10833;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11007, %r11004}, {%r489, %r495, %r492, %r498}, {%r10589, %r10731}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11016, %r11013}, {%r489, %r495, %r492, %r498}, {%r10598, %r10738}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11025, %r11022}, {%r489, %r495, %r492, %r498}, {%r10607, %r10745}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11034, %r11031}, {%r489, %r495, %r492, %r498}, {%r10616, %r10752}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11043, %r11040}, {%r489, %r495, %r492, %r498}, {%r10625, %r10759}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11052, %r11049}, {%r489, %r495, %r492, %r498}, {%r10634, %r10766}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11061, %r11058}, {%r489, %r495, %r492, %r498}, {%r10643, %r10773}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11070, %r11067}, {%r489, %r495, %r492, %r498}, {%r10652, %r10780}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11079, %r11076}, {%r489, %r495, %r492, %r498}, {%r10661, %r10787}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11088, %r11085}, {%r489, %r495, %r492, %r498}, {%r10670, %r10794}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11097, %r11094}, {%r489, %r495, %r492, %r498}, {%r10679, %r10801}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11106, %r11103}, {%r489, %r495, %r492, %r498}, {%r10688, %r10808}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11115, %r11112}, {%r489, %r495, %r492, %r498}, {%r10697, %r10815}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11124, %r11121}, {%r489, %r495, %r492, %r498}, {%r10706, %r10822}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11133, %r11130}, {%r489, %r495, %r492, %r498}, {%r10715, %r10829}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11142, %r11139}, {%r489, %r495, %r492, %r498}, {%r10724, %r10836}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11000, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11002, %r11000, %r11004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11005, %r539, %r11007, %r11002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11009, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11011, %r11009, %r11013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11014, %r539, %r11016, %r11011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11018, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11020, %r11018, %r11022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11023, %r539, %r11025, %r11020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11027, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11029, %r11027, %r11031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11032, %r539, %r11034, %r11029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11036, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11038, %r11036, %r11040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11041, %r539, %r11043, %r11038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11045, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11047, %r11045, %r11049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11050, %r539, %r11052, %r11047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11054, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11056, %r11054, %r11058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11059, %r539, %r11061, %r11056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11063, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11065, %r11063, %r11067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11068, %r539, %r11070, %r11065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11072, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11074, %r11072, %r11076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11077, %r539, %r11079, %r11074;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11081, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11083, %r11081, %r11085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11086, %r539, %r11088, %r11083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11090, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11092, %r11090, %r11094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11095, %r539, %r11097, %r11092;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11099, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11101, %r11099, %r11103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11104, %r539, %r11106, %r11101;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11108, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11110, %r11108, %r11112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11113, %r539, %r11115, %r11110;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11117, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11119, %r11117, %r11121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11122, %r539, %r11124, %r11119;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11126, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11128, %r11126, %r11130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11131, %r539, %r11133, %r11128;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11135, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11137, %r11135, %r11139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11140, %r539, %r11142, %r11137;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11144, %r542, %r11007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11147, %r539, %r11004, %r11144;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11151, %r542, %r11016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11154, %r539, %r11013, %r11151;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11158, %r542, %r11025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11161, %r539, %r11022, %r11158;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11165, %r542, %r11034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11168, %r539, %r11031, %r11165;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11172, %r542, %r11043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11175, %r539, %r11040, %r11172;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11179, %r542, %r11052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11182, %r539, %r11049, %r11179;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11186, %r542, %r11061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11189, %r539, %r11058, %r11186;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11193, %r542, %r11070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11196, %r539, %r11067, %r11193;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11200, %r542, %r11079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11203, %r539, %r11076, %r11200;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11207, %r542, %r11088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11210, %r539, %r11085, %r11207;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11214, %r542, %r11097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11217, %r539, %r11094, %r11214;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11221, %r542, %r11106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11224, %r539, %r11103, %r11221;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11228, %r542, %r11115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11231, %r539, %r11112, %r11228;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11235, %r542, %r11124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11238, %r539, %r11121, %r11235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11242, %r542, %r11133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11245, %r539, %r11130, %r11242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11249, %r542, %r11142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11252, %r539, %r11139, %r11249;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11545, %r11548}, {%r577, %r583, %r580, %r586}, {%r11005, %r11147}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11551, %r11554}, {%r577, %r583, %r580, %r586}, {%r11014, %r11154}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11557, %r11560}, {%r577, %r583, %r580, %r586}, {%r11023, %r11161}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11563, %r11566}, {%r577, %r583, %r580, %r586}, {%r11032, %r11168}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11569, %r11572}, {%r577, %r583, %r580, %r586}, {%r11041, %r11175}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11575, %r11578}, {%r577, %r583, %r580, %r586}, {%r11050, %r11182}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11581, %r11584}, {%r577, %r583, %r580, %r586}, {%r11059, %r11189}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11587, %r11590}, {%r577, %r583, %r580, %r586}, {%r11068, %r11196}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11546, %r11549}, {%r577, %r583, %r580, %r586}, {%r11077, %r11203}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11552, %r11555}, {%r577, %r583, %r580, %r586}, {%r11086, %r11210}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11558, %r11561}, {%r577, %r583, %r580, %r586}, {%r11095, %r11217}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11564, %r11567}, {%r577, %r583, %r580, %r586}, {%r11104, %r11224}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11570, %r11573}, {%r577, %r583, %r580, %r586}, {%r11113, %r11231}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11576, %r11579}, {%r577, %r583, %r580, %r586}, {%r11122, %r11238}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11582, %r11585}, {%r577, %r583, %r580, %r586}, {%r11131, %r11245}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11588, %r11591}, {%r577, %r583, %r580, %r586}, {%r11140, %r11252}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11544, %r11545, %r11546;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11547, %r11548, %r11549;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11550, %r11551, %r11552;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11553, %r11554, %r11555;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11556, %r11557, %r11558;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11559, %r11560, %r11561;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11562, %r11563, %r11564;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11565, %r11566, %r11567;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11568, %r11569, %r11570;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11571, %r11572, %r11573;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11574, %r11575, %r11576;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11577, %r11578, %r11579;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11580, %r11581, %r11582;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11583, %r11584, %r11585;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11586, %r11587, %r11588;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11589, %r11590, %r11591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11592, %r11545, %r11546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11595, %r11548, %r11549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11598, %r11551, %r11552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11601, %r11554, %r11555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11604, %r11557, %r11558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11607, %r11560, %r11561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11610, %r11563, %r11564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11613, %r11566, %r11567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11616, %r11569, %r11570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11619, %r11572, %r11573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11622, %r11575, %r11576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11625, %r11578, %r11579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11628, %r11581, %r11582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11631, %r11584, %r11585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11634, %r11587, %r11588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11637, %r11590, %r11591;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11640, %r180, %r11544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11643, %r180, %r11547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11646, %r180, %r11550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11649, %r180, %r11553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11652, %r180, %r11556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11655, %r180, %r11559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11658, %r180, %r11562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11661, %r180, %r11565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11664, %r180, %r11568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11667, %r180, %r11571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11670, %r180, %r11574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11673, %r180, %r11577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11676, %r180, %r11580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11679, %r180, %r11583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11682, %r180, %r11586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11685, %r180, %r11589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11688, %r182, %r11592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11691, %r182, %r11595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11694, %r182, %r11598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11697, %r182, %r11601;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11700, %r182, %r11604;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11703, %r182, %r11607;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11706, %r182, %r11610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11709, %r182, %r11613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11712, %r182, %r11616;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11715, %r182, %r11619;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11718, %r182, %r11622;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11721, %r182, %r11625;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11724, %r182, %r11628;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11727, %r182, %r11631;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11730, %r182, %r11634;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11733, %r182, %r11637;
	// end inline asm
	// begin inline asm
	mov.b32 %r11736, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11737, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11738, %r11640, %r11736;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11741, %r11738, %r11737;
	// end inline asm
	// begin inline asm
	mov.b32 %r11744, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11745, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11746, %r11643, %r11744;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11749, %r11746, %r11745;
	// end inline asm
	// begin inline asm
	mov.b32 %r11752, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11753, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11754, %r11646, %r11752;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11757, %r11754, %r11753;
	// end inline asm
	// begin inline asm
	mov.b32 %r11760, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11761, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11762, %r11649, %r11760;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11765, %r11762, %r11761;
	// end inline asm
	// begin inline asm
	mov.b32 %r11768, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11769, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11770, %r11652, %r11768;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11773, %r11770, %r11769;
	// end inline asm
	// begin inline asm
	mov.b32 %r11776, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11777, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11778, %r11655, %r11776;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11781, %r11778, %r11777;
	// end inline asm
	// begin inline asm
	mov.b32 %r11784, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11785, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11786, %r11658, %r11784;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11789, %r11786, %r11785;
	// end inline asm
	// begin inline asm
	mov.b32 %r11792, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11793, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11794, %r11661, %r11792;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11797, %r11794, %r11793;
	// end inline asm
	// begin inline asm
	mov.b32 %r11800, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11801, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11802, %r11664, %r11800;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11805, %r11802, %r11801;
	// end inline asm
	// begin inline asm
	mov.b32 %r11808, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11809, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11810, %r11667, %r11808;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11813, %r11810, %r11809;
	// end inline asm
	// begin inline asm
	mov.b32 %r11816, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11817, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11818, %r11670, %r11816;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11821, %r11818, %r11817;
	// end inline asm
	// begin inline asm
	mov.b32 %r11824, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11825, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11826, %r11673, %r11824;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11829, %r11826, %r11825;
	// end inline asm
	// begin inline asm
	mov.b32 %r11832, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11833, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11834, %r11676, %r11832;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11837, %r11834, %r11833;
	// end inline asm
	// begin inline asm
	mov.b32 %r11840, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11841, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11842, %r11679, %r11840;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11845, %r11842, %r11841;
	// end inline asm
	// begin inline asm
	mov.b32 %r11848, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11849, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11850, %r11682, %r11848;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11853, %r11850, %r11849;
	// end inline asm
	// begin inline asm
	mov.b32 %r11856, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11857, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11858, %r11685, %r11856;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11861, %r11858, %r11857;
	// end inline asm
	// begin inline asm
	mov.b32 %r11864, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11865, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11866, %r11688, %r11864;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11869, %r11866, %r11865;
	// end inline asm
	// begin inline asm
	mov.b32 %r11872, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11873, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11874, %r11691, %r11872;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11877, %r11874, %r11873;
	// end inline asm
	// begin inline asm
	mov.b32 %r11880, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11881, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11882, %r11694, %r11880;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11885, %r11882, %r11881;
	// end inline asm
	// begin inline asm
	mov.b32 %r11888, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11889, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11890, %r11697, %r11888;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11893, %r11890, %r11889;
	// end inline asm
	// begin inline asm
	mov.b32 %r11896, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11897, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11898, %r11700, %r11896;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11901, %r11898, %r11897;
	// end inline asm
	// begin inline asm
	mov.b32 %r11904, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11905, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11906, %r11703, %r11904;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11909, %r11906, %r11905;
	// end inline asm
	// begin inline asm
	mov.b32 %r11912, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11913, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11914, %r11706, %r11912;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11917, %r11914, %r11913;
	// end inline asm
	// begin inline asm
	mov.b32 %r11920, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11921, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11922, %r11709, %r11920;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11925, %r11922, %r11921;
	// end inline asm
	// begin inline asm
	mov.b32 %r11928, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11929, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11930, %r11712, %r11928;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11933, %r11930, %r11929;
	// end inline asm
	// begin inline asm
	mov.b32 %r11936, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11937, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11938, %r11715, %r11936;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11941, %r11938, %r11937;
	// end inline asm
	// begin inline asm
	mov.b32 %r11944, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11945, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11946, %r11718, %r11944;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11949, %r11946, %r11945;
	// end inline asm
	// begin inline asm
	mov.b32 %r11952, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11953, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11954, %r11721, %r11952;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11957, %r11954, %r11953;
	// end inline asm
	// begin inline asm
	mov.b32 %r11960, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11961, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11962, %r11724, %r11960;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11965, %r11962, %r11961;
	// end inline asm
	// begin inline asm
	mov.b32 %r11968, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11969, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11970, %r11727, %r11968;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11973, %r11970, %r11969;
	// end inline asm
	// begin inline asm
	mov.b32 %r11976, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11977, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11978, %r11730, %r11976;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11981, %r11978, %r11977;
	// end inline asm
	// begin inline asm
	mov.b32 %r11984, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11985, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11986, %r11733, %r11984;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11989, %r11986, %r11985;
	// end inline asm
	// begin inline asm
	mov.b32 %r11995, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r11993, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11994, %r11995, %r11993;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11997, %r11741, %r11994;
	// end inline asm
	// begin inline asm
	mov.b32 %r12000, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12001, %r11995, %r12000;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12004, %r11749, %r12001;
	// end inline asm
	// begin inline asm
	mov.b32 %r12007, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12008, %r11995, %r12007;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12011, %r11757, %r12008;
	// end inline asm
	// begin inline asm
	mov.b32 %r12014, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12015, %r11995, %r12014;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12018, %r11765, %r12015;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12021, %r11997, %r12011, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12025, %r12004, %r12018, %r4392;
	// end inline asm
	shl.b32 	%r12032, %r12025, 4;
	// begin inline asm
	lop3.b32 %r12029, %r4398, %r12021, %r12032, 202;
	// end inline asm
	xor.b32  	%r16209, %r12029, -2004318072;
	// begin inline asm
	mov.b32 %r12036, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12034, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12035, %r12036, %r12034;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12038, %r11773, %r12035;
	// end inline asm
	// begin inline asm
	mov.b32 %r12041, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12042, %r12036, %r12041;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12045, %r11781, %r12042;
	// end inline asm
	// begin inline asm
	mov.b32 %r12048, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12049, %r12036, %r12048;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12052, %r11789, %r12049;
	// end inline asm
	// begin inline asm
	mov.b32 %r12055, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12056, %r12036, %r12055;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12059, %r11797, %r12056;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12062, %r12038, %r12052, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12066, %r12045, %r12059, %r4392;
	// end inline asm
	shl.b32 	%r12073, %r12066, 4;
	// begin inline asm
	lop3.b32 %r12070, %r4398, %r12062, %r12073, 202;
	// end inline asm
	xor.b32  	%r16210, %r12070, -2004318072;
	// begin inline asm
	mov.b32 %r12077, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12075, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12076, %r12077, %r12075;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12079, %r11805, %r12076;
	// end inline asm
	// begin inline asm
	mov.b32 %r12082, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12083, %r12077, %r12082;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12086, %r11813, %r12083;
	// end inline asm
	// begin inline asm
	mov.b32 %r12089, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12090, %r12077, %r12089;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12093, %r11821, %r12090;
	// end inline asm
	// begin inline asm
	mov.b32 %r12096, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12097, %r12077, %r12096;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12100, %r11829, %r12097;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12103, %r12079, %r12093, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12107, %r12086, %r12100, %r4392;
	// end inline asm
	shl.b32 	%r12114, %r12107, 4;
	// begin inline asm
	lop3.b32 %r12111, %r4398, %r12103, %r12114, 202;
	// end inline asm
	xor.b32  	%r16211, %r12111, -2004318072;
	// begin inline asm
	mov.b32 %r12118, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12116, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12117, %r12118, %r12116;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12120, %r11837, %r12117;
	// end inline asm
	// begin inline asm
	mov.b32 %r12123, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12124, %r12118, %r12123;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12127, %r11845, %r12124;
	// end inline asm
	// begin inline asm
	mov.b32 %r12130, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12131, %r12118, %r12130;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12134, %r11853, %r12131;
	// end inline asm
	// begin inline asm
	mov.b32 %r12137, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12138, %r12118, %r12137;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12141, %r11861, %r12138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12144, %r12120, %r12134, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12148, %r12127, %r12141, %r4392;
	// end inline asm
	shl.b32 	%r12155, %r12148, 4;
	// begin inline asm
	lop3.b32 %r12152, %r4398, %r12144, %r12155, 202;
	// end inline asm
	xor.b32  	%r16212, %r12152, -2004318072;
	// begin inline asm
	mov.b32 %r12159, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12157, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12158, %r12159, %r12157;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12161, %r11869, %r12158;
	// end inline asm
	// begin inline asm
	mov.b32 %r12164, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12165, %r12159, %r12164;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12168, %r11877, %r12165;
	// end inline asm
	// begin inline asm
	mov.b32 %r12171, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12172, %r12159, %r12171;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12175, %r11885, %r12172;
	// end inline asm
	// begin inline asm
	mov.b32 %r12178, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12179, %r12159, %r12178;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12182, %r11893, %r12179;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12185, %r12161, %r12175, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12189, %r12168, %r12182, %r4392;
	// end inline asm
	shl.b32 	%r12196, %r12189, 4;
	// begin inline asm
	lop3.b32 %r12193, %r4398, %r12185, %r12196, 202;
	// end inline asm
	xor.b32  	%r16213, %r12193, -2004318072;
	// begin inline asm
	mov.b32 %r12200, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12198, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12199, %r12200, %r12198;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12202, %r11901, %r12199;
	// end inline asm
	// begin inline asm
	mov.b32 %r12205, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12206, %r12200, %r12205;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12209, %r11909, %r12206;
	// end inline asm
	// begin inline asm
	mov.b32 %r12212, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12213, %r12200, %r12212;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12216, %r11917, %r12213;
	// end inline asm
	// begin inline asm
	mov.b32 %r12219, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12220, %r12200, %r12219;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12223, %r11925, %r12220;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12226, %r12202, %r12216, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12230, %r12209, %r12223, %r4392;
	// end inline asm
	shl.b32 	%r12237, %r12230, 4;
	// begin inline asm
	lop3.b32 %r12234, %r4398, %r12226, %r12237, 202;
	// end inline asm
	xor.b32  	%r16214, %r12234, -2004318072;
	// begin inline asm
	mov.b32 %r12241, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12239, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12240, %r12241, %r12239;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12243, %r11933, %r12240;
	// end inline asm
	// begin inline asm
	mov.b32 %r12246, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12247, %r12241, %r12246;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12250, %r11941, %r12247;
	// end inline asm
	// begin inline asm
	mov.b32 %r12253, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12254, %r12241, %r12253;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12257, %r11949, %r12254;
	// end inline asm
	// begin inline asm
	mov.b32 %r12260, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12261, %r12241, %r12260;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12264, %r11957, %r12261;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12267, %r12243, %r12257, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12271, %r12250, %r12264, %r4392;
	// end inline asm
	shl.b32 	%r12278, %r12271, 4;
	// begin inline asm
	lop3.b32 %r12275, %r4398, %r12267, %r12278, 202;
	// end inline asm
	xor.b32  	%r16215, %r12275, -2004318072;
	// begin inline asm
	mov.b32 %r12282, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12280, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12281, %r12282, %r12280;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12284, %r11965, %r12281;
	// end inline asm
	// begin inline asm
	mov.b32 %r12287, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12288, %r12282, %r12287;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12291, %r11973, %r12288;
	// end inline asm
	// begin inline asm
	mov.b32 %r12294, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12295, %r12282, %r12294;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12298, %r11981, %r12295;
	// end inline asm
	// begin inline asm
	mov.b32 %r12301, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12302, %r12282, %r12301;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12305, %r11989, %r12302;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12308, %r12284, %r12298, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12312, %r12291, %r12305, %r4392;
	// end inline asm
	shl.b32 	%r12319, %r12312, 4;
	// begin inline asm
	lop3.b32 %r12316, %r4398, %r12308, %r12319, 202;
	// end inline asm
	xor.b32  	%r16216, %r12316, -2004318072;
	st.shared.u32 	[%rd93], %r16209;
	st.shared.u32 	[%rd95], %r16210;
	st.shared.u32 	[%rd97], %r16211;
	st.shared.u32 	[%rd99], %r16212;
	st.shared.u32 	[%rd101], %r16213;
	st.shared.u32 	[%rd103], %r16214;
	st.shared.u32 	[%rd105], %r16215;
	st.shared.u32 	[%rd107], %r16216;
	ld.shared.u32 	%r16336, [%rd77];
	ld.shared.u32 	%r16337, [%rd79];
	ld.shared.u32 	%r16338, [%rd81];
	ld.shared.u32 	%r16339, [%rd83];
	ld.shared.u32 	%r16348, [%rd85];
	ld.shared.u32 	%r16349, [%rd87];
	ld.shared.u32 	%r16350, [%rd89];
	ld.shared.u32 	%r16351, [%rd91];
	// begin inline asm
	mov.b32 %r12325, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12336, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r12324, %r16336, -2004318072;
	// begin inline asm
	lop3.b32 %r12322, %r875, %r12324, %r12325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12326, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12327, %r12325, %r12326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12330, %r12322, %r12327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12333, %r886, %r12324, %r12336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12337, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12338, %r12336, %r12337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12341, %r12333, %r12338;
	// end inline asm
	shr.u32 	%r12346, %r12324, 8;
	// begin inline asm
	lop3.b32 %r12344, %r875, %r12346, %r12325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12348, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12349, %r12325, %r12348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12352, %r12344, %r12349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12355, %r886, %r12346, %r12336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12359, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12360, %r12336, %r12359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12363, %r12355, %r12360;
	// end inline asm
	// begin inline asm
	mov.b32 %r12371, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12382, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r12370, %r16337, -2004318072;
	// begin inline asm
	lop3.b32 %r12368, %r875, %r12370, %r12371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12372, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12373, %r12371, %r12372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12376, %r12368, %r12373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12379, %r886, %r12370, %r12382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12383, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12384, %r12382, %r12383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12387, %r12379, %r12384;
	// end inline asm
	shr.u32 	%r12392, %r12370, 8;
	// begin inline asm
	lop3.b32 %r12390, %r875, %r12392, %r12371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12394, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12395, %r12371, %r12394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12398, %r12390, %r12395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12401, %r886, %r12392, %r12382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12405, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12406, %r12382, %r12405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12409, %r12401, %r12406;
	// end inline asm
	// begin inline asm
	mov.b32 %r12417, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12428, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r12416, %r16338, -2004318072;
	// begin inline asm
	lop3.b32 %r12414, %r875, %r12416, %r12417, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12418, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12419, %r12417, %r12418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12422, %r12414, %r12419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12425, %r886, %r12416, %r12428, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12429, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12430, %r12428, %r12429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12433, %r12425, %r12430;
	// end inline asm
	shr.u32 	%r12438, %r12416, 8;
	// begin inline asm
	lop3.b32 %r12436, %r875, %r12438, %r12417, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12440, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12441, %r12417, %r12440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12444, %r12436, %r12441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12447, %r886, %r12438, %r12428, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12451, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12452, %r12428, %r12451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12455, %r12447, %r12452;
	// end inline asm
	// begin inline asm
	mov.b32 %r12463, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12474, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r12462, %r16339, -2004318072;
	// begin inline asm
	lop3.b32 %r12460, %r875, %r12462, %r12463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12464, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12465, %r12463, %r12464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12468, %r12460, %r12465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12471, %r886, %r12462, %r12474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12475, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12476, %r12474, %r12475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12479, %r12471, %r12476;
	// end inline asm
	shr.u32 	%r12484, %r12462, 8;
	// begin inline asm
	lop3.b32 %r12482, %r875, %r12484, %r12463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12486, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12487, %r12463, %r12486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12490, %r12482, %r12487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12493, %r886, %r12484, %r12474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12497, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12498, %r12474, %r12497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12501, %r12493, %r12498;
	// end inline asm
	// begin inline asm
	mov.b32 %r12509, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12520, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r12508, %r16348, -2004318072;
	// begin inline asm
	lop3.b32 %r12506, %r875, %r12508, %r12509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12510, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12511, %r12509, %r12510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12514, %r12506, %r12511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12517, %r886, %r12508, %r12520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12521, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12522, %r12520, %r12521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12525, %r12517, %r12522;
	// end inline asm
	shr.u32 	%r12530, %r12508, 8;
	// begin inline asm
	lop3.b32 %r12528, %r875, %r12530, %r12509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12532, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12533, %r12509, %r12532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12536, %r12528, %r12533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12539, %r886, %r12530, %r12520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12543, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12544, %r12520, %r12543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12547, %r12539, %r12544;
	// end inline asm
	// begin inline asm
	mov.b32 %r12555, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12566, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r12554, %r16349, -2004318072;
	// begin inline asm
	lop3.b32 %r12552, %r875, %r12554, %r12555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12556, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12557, %r12555, %r12556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12560, %r12552, %r12557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12563, %r886, %r12554, %r12566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12567, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12568, %r12566, %r12567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12571, %r12563, %r12568;
	// end inline asm
	shr.u32 	%r12576, %r12554, 8;
	// begin inline asm
	lop3.b32 %r12574, %r875, %r12576, %r12555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12578, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12579, %r12555, %r12578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12582, %r12574, %r12579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12585, %r886, %r12576, %r12566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12589, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12590, %r12566, %r12589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12593, %r12585, %r12590;
	// end inline asm
	// begin inline asm
	mov.b32 %r12601, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12612, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r12600, %r16350, -2004318072;
	// begin inline asm
	lop3.b32 %r12598, %r875, %r12600, %r12601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12602, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12603, %r12601, %r12602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12606, %r12598, %r12603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12609, %r886, %r12600, %r12612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12613, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12614, %r12612, %r12613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12617, %r12609, %r12614;
	// end inline asm
	shr.u32 	%r12622, %r12600, 8;
	// begin inline asm
	lop3.b32 %r12620, %r875, %r12622, %r12601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12624, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12625, %r12601, %r12624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12628, %r12620, %r12625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12631, %r886, %r12622, %r12612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12635, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12636, %r12612, %r12635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12639, %r12631, %r12636;
	// end inline asm
	// begin inline asm
	mov.b32 %r12647, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12658, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r12646, %r16351, -2004318072;
	// begin inline asm
	lop3.b32 %r12644, %r875, %r12646, %r12647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12648, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12649, %r12647, %r12648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12652, %r12644, %r12649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12655, %r886, %r12646, %r12658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12659, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12660, %r12658, %r12659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12663, %r12655, %r12660;
	// end inline asm
	shr.u32 	%r12668, %r12646, 8;
	// begin inline asm
	lop3.b32 %r12666, %r875, %r12668, %r12647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12670, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12671, %r12647, %r12670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12674, %r12666, %r12671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12677, %r886, %r12668, %r12658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12681, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12682, %r12658, %r12681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12685, %r12677, %r12682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12688, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12690, %r12688, %r12330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12693, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12695, %r12693, %r12341;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12698, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12700, %r12698, %r12352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12703, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12705, %r12703, %r12363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12708, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12710, %r12708, %r12376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12713, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12715, %r12713, %r12387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12718, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12720, %r12718, %r12398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12723, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12725, %r12723, %r12409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12728, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12730, %r12728, %r12422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12733, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12735, %r12733, %r12433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12738, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12740, %r12738, %r12444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12743, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12745, %r12743, %r12455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12748, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12750, %r12748, %r12468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12753, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12755, %r12753, %r12479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12758, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12760, %r12758, %r12490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12763, %r401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12765, %r12763, %r12501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12768, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12770, %r12768, %r12514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12773, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12775, %r12773, %r12525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12778, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12780, %r12778, %r12536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12783, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12785, %r12783, %r12547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12788, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12790, %r12788, %r12560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12793, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12795, %r12793, %r12571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12798, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12800, %r12798, %r12582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12803, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12805, %r12803, %r12593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12808, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12810, %r12808, %r12606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12813, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12815, %r12813, %r12617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12818, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12820, %r12818, %r12628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12823, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12825, %r12823, %r12639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12828, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12830, %r12828, %r12652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12833, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12835, %r12833, %r12663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12838, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12840, %r12838, %r12674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12843, %r419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12845, %r12843, %r12685;
	// end inline asm
	// begin inline asm
	mov.b32 %r12853, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12864, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12850, %r875, %r876, %r12853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12854, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12855, %r12853, %r12854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12858, %r12850, %r12855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12861, %r886, %r876, %r12864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12865, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12866, %r12864, %r12865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12869, %r12861, %r12866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12872, %r875, %r898, %r12853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12876, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12877, %r12853, %r12876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12880, %r12872, %r12877;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12883, %r886, %r898, %r12864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12887, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12888, %r12864, %r12887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12891, %r12883, %r12888;
	// end inline asm
	// begin inline asm
	mov.b32 %r12899, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12910, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12896, %r875, %r922, %r12899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12900, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12901, %r12899, %r12900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12904, %r12896, %r12901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12907, %r886, %r922, %r12910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12911, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12912, %r12910, %r12911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12915, %r12907, %r12912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12918, %r875, %r944, %r12899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12922, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12923, %r12899, %r12922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12926, %r12918, %r12923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12929, %r886, %r944, %r12910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12933, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12934, %r12910, %r12933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12937, %r12929, %r12934;
	// end inline asm
	// begin inline asm
	mov.b32 %r12945, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12956, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12942, %r875, %r968, %r12945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12946, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12947, %r12945, %r12946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12950, %r12942, %r12947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12953, %r886, %r968, %r12956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12957, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12958, %r12956, %r12957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12961, %r12953, %r12958;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12964, %r875, %r990, %r12945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12968, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12969, %r12945, %r12968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12972, %r12964, %r12969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12975, %r886, %r990, %r12956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12979, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12980, %r12956, %r12979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12983, %r12975, %r12980;
	// end inline asm
	// begin inline asm
	mov.b32 %r12991, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13002, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12988, %r875, %r1014, %r12991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12992, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12993, %r12991, %r12992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12996, %r12988, %r12993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12999, %r886, %r1014, %r13002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13003, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13004, %r13002, %r13003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13007, %r12999, %r13004;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13010, %r875, %r1036, %r12991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13014, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13015, %r12991, %r13014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13018, %r13010, %r13015;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13021, %r886, %r1036, %r13002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13025, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13026, %r13002, %r13025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13029, %r13021, %r13026;
	// end inline asm
	// begin inline asm
	mov.b32 %r13037, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13048, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13034, %r875, %r1060, %r13037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13038, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13039, %r13037, %r13038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13042, %r13034, %r13039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13045, %r886, %r1060, %r13048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13049, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13050, %r13048, %r13049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13053, %r13045, %r13050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13056, %r875, %r1082, %r13037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13060, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13061, %r13037, %r13060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13064, %r13056, %r13061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13067, %r886, %r1082, %r13048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13071, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13072, %r13048, %r13071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13075, %r13067, %r13072;
	// end inline asm
	// begin inline asm
	mov.b32 %r13083, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13094, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13080, %r875, %r1106, %r13083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13084, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13085, %r13083, %r13084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13088, %r13080, %r13085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13091, %r886, %r1106, %r13094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13095, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13096, %r13094, %r13095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13099, %r13091, %r13096;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13102, %r875, %r1128, %r13083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13106, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13107, %r13083, %r13106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13110, %r13102, %r13107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13113, %r886, %r1128, %r13094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13117, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13118, %r13094, %r13117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13121, %r13113, %r13118;
	// end inline asm
	// begin inline asm
	mov.b32 %r13129, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13140, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13126, %r875, %r1152, %r13129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13130, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13131, %r13129, %r13130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13134, %r13126, %r13131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13137, %r886, %r1152, %r13140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13141, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13142, %r13140, %r13141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13145, %r13137, %r13142;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13148, %r875, %r1174, %r13129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13152, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13153, %r13129, %r13152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13156, %r13148, %r13153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13159, %r886, %r1174, %r13140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13163, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13164, %r13140, %r13163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13167, %r13159, %r13164;
	// end inline asm
	// begin inline asm
	mov.b32 %r13175, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13186, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13172, %r875, %r1198, %r13175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13176, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13177, %r13175, %r13176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13180, %r13172, %r13177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13183, %r886, %r1198, %r13186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13187, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13188, %r13186, %r13187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13191, %r13183, %r13188;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13194, %r875, %r1220, %r13175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13198, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13199, %r13175, %r13198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13202, %r13194, %r13199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13205, %r886, %r1220, %r13186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13209, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13210, %r13186, %r13209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13213, %r13205, %r13210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13216, %r293, %r12858, %r12690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13220, %r293, %r12869, %r12695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13224, %r293, %r12880, %r12700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13228, %r293, %r12891, %r12705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13232, %r293, %r12904, %r12710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13236, %r293, %r12915, %r12715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13240, %r293, %r12926, %r12720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13244, %r293, %r12937, %r12725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13248, %r293, %r12950, %r12730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13252, %r293, %r12961, %r12735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13256, %r293, %r12972, %r12740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13260, %r293, %r12983, %r12745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13264, %r293, %r12996, %r12750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13268, %r293, %r13007, %r12755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13272, %r293, %r13018, %r12760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13276, %r293, %r13029, %r12765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13280, %r311, %r13042, %r12770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13284, %r311, %r13053, %r12775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13288, %r311, %r13064, %r12780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13292, %r311, %r13075, %r12785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13296, %r311, %r13088, %r12790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13300, %r311, %r13099, %r12795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13304, %r311, %r13110, %r12800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13308, %r311, %r13121, %r12805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13312, %r311, %r13134, %r12810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13316, %r311, %r13145, %r12815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13320, %r311, %r13156, %r12820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13324, %r311, %r13167, %r12825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13328, %r311, %r13180, %r12830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13332, %r311, %r13191, %r12835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13336, %r311, %r13202, %r12840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13340, %r311, %r13213, %r12845;
	// end inline asm
	// begin inline asm
	mov.b32 %r13349, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13360, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13346, %r875, %r4692, %r13349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13350, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13351, %r13349, %r13350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13354, %r13346, %r13351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13357, %r886, %r4692, %r13360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13361, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13362, %r13360, %r13361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13365, %r13357, %r13362;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13368, %r875, %r4714, %r13349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13372, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13373, %r13349, %r13372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13376, %r13368, %r13373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13379, %r886, %r4714, %r13360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13383, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13384, %r13360, %r13383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13387, %r13379, %r13384;
	// end inline asm
	// begin inline asm
	mov.b32 %r13395, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13406, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13392, %r875, %r4738, %r13395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13396, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13397, %r13395, %r13396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13400, %r13392, %r13397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13403, %r886, %r4738, %r13406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13407, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13408, %r13406, %r13407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13411, %r13403, %r13408;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13414, %r875, %r4760, %r13395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13418, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13419, %r13395, %r13418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13422, %r13414, %r13419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13425, %r886, %r4760, %r13406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13429, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13430, %r13406, %r13429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13433, %r13425, %r13430;
	// end inline asm
	// begin inline asm
	mov.b32 %r13441, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13452, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13438, %r875, %r4784, %r13441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13442, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13443, %r13441, %r13442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13446, %r13438, %r13443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13449, %r886, %r4784, %r13452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13453, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13454, %r13452, %r13453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13457, %r13449, %r13454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13460, %r875, %r4806, %r13441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13464, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13465, %r13441, %r13464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13468, %r13460, %r13465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13471, %r886, %r4806, %r13452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13475, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13476, %r13452, %r13475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13479, %r13471, %r13476;
	// end inline asm
	// begin inline asm
	mov.b32 %r13487, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13498, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13484, %r875, %r4830, %r13487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13488, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13489, %r13487, %r13488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13492, %r13484, %r13489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13495, %r886, %r4830, %r13498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13499, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13500, %r13498, %r13499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13503, %r13495, %r13500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13506, %r875, %r4852, %r13487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13510, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13511, %r13487, %r13510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13514, %r13506, %r13511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13517, %r886, %r4852, %r13498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13521, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13522, %r13498, %r13521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13525, %r13517, %r13522;
	// end inline asm
	// begin inline asm
	mov.b32 %r13533, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13544, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13530, %r875, %r4876, %r13533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13534, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13535, %r13533, %r13534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13538, %r13530, %r13535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13541, %r886, %r4876, %r13544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13545, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13546, %r13544, %r13545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13549, %r13541, %r13546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13552, %r875, %r4898, %r13533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13556, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13557, %r13533, %r13556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13560, %r13552, %r13557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13563, %r886, %r4898, %r13544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13567, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13568, %r13544, %r13567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13571, %r13563, %r13568;
	// end inline asm
	// begin inline asm
	mov.b32 %r13579, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13590, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13576, %r875, %r4922, %r13579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13580, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13581, %r13579, %r13580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13584, %r13576, %r13581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13587, %r886, %r4922, %r13590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13591, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13592, %r13590, %r13591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13595, %r13587, %r13592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13598, %r875, %r4944, %r13579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13602, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13603, %r13579, %r13602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13606, %r13598, %r13603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13609, %r886, %r4944, %r13590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13613, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13614, %r13590, %r13613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13617, %r13609, %r13614;
	// end inline asm
	// begin inline asm
	mov.b32 %r13625, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13636, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13622, %r875, %r4968, %r13625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13626, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13627, %r13625, %r13626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13630, %r13622, %r13627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13633, %r886, %r4968, %r13636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13637, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13638, %r13636, %r13637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13641, %r13633, %r13638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13644, %r875, %r4990, %r13625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13648, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13649, %r13625, %r13648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13652, %r13644, %r13649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13655, %r886, %r4990, %r13636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13659, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13660, %r13636, %r13659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13663, %r13655, %r13660;
	// end inline asm
	// begin inline asm
	mov.b32 %r13671, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13682, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13668, %r875, %r5014, %r13671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13672, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13673, %r13671, %r13672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13676, %r13668, %r13673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13679, %r886, %r5014, %r13682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13683, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13684, %r13682, %r13683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13687, %r13679, %r13684;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13690, %r875, %r5036, %r13671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13694, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13695, %r13671, %r13694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13698, %r13690, %r13695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13701, %r886, %r5036, %r13682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13705, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13706, %r13682, %r13705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13709, %r13701, %r13706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13712, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13714, %r13712, %r13354, %r13216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13718, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13720, %r13718, %r13365, %r13220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13724, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13726, %r13724, %r13376, %r13224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13730, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13732, %r13730, %r13387, %r13228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13736, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13738, %r13736, %r13400, %r13232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13742, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13744, %r13742, %r13411, %r13236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13748, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13750, %r13748, %r13422, %r13240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13754, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13756, %r13754, %r13433, %r13244;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13760, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13762, %r13760, %r13446, %r13248;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13766, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13768, %r13766, %r13457, %r13252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13772, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13774, %r13772, %r13468, %r13256;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13778, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13780, %r13778, %r13479, %r13260;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13784, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13786, %r13784, %r13492, %r13264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13790, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13792, %r13790, %r13503, %r13268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13796, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13798, %r13796, %r13514, %r13272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13802, %r329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13804, %r13802, %r13525, %r13276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13808, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13810, %r13808, %r13538, %r13280;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13814, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13816, %r13814, %r13549, %r13284;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13820, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13822, %r13820, %r13560, %r13288;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13826, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13828, %r13826, %r13571, %r13292;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13832, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13834, %r13832, %r13584, %r13296;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13838, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13840, %r13838, %r13595, %r13300;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13844, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13846, %r13844, %r13606, %r13304;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13850, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13852, %r13850, %r13617, %r13308;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13856, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13858, %r13856, %r13630, %r13312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13862, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13864, %r13862, %r13641, %r13316;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13868, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13870, %r13868, %r13652, %r13320;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13874, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13876, %r13874, %r13663, %r13324;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13880, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13882, %r13880, %r13676, %r13328;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13886, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13888, %r13886, %r13687, %r13332;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13892, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13894, %r13892, %r13698, %r13336;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13898, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13900, %r13898, %r13709, %r13340;
	// end inline asm
	// begin inline asm
	mov.b32 %r13909, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13920, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13906, %r875, %r8508, %r13909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13910, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13911, %r13909, %r13910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13914, %r13906, %r13911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13917, %r886, %r8508, %r13920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13921, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13922, %r13920, %r13921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13925, %r13917, %r13922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13928, %r875, %r8530, %r13909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13932, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13933, %r13909, %r13932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13936, %r13928, %r13933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13939, %r886, %r8530, %r13920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13943, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13944, %r13920, %r13943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13947, %r13939, %r13944;
	// end inline asm
	// begin inline asm
	mov.b32 %r13955, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13966, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13952, %r875, %r8554, %r13955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13956, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13957, %r13955, %r13956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13960, %r13952, %r13957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13963, %r886, %r8554, %r13966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13967, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13968, %r13966, %r13967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13971, %r13963, %r13968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13974, %r875, %r8576, %r13955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13978, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13979, %r13955, %r13978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13982, %r13974, %r13979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13985, %r886, %r8576, %r13966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13989, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13990, %r13966, %r13989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13993, %r13985, %r13990;
	// end inline asm
	// begin inline asm
	mov.b32 %r14001, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r14012, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13998, %r875, %r8600, %r14001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14002, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14003, %r14001, %r14002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14006, %r13998, %r14003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14009, %r886, %r8600, %r14012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14013, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14014, %r14012, %r14013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14017, %r14009, %r14014;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14020, %r875, %r8622, %r14001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14024, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14025, %r14001, %r14024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14028, %r14020, %r14025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14031, %r886, %r8622, %r14012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14035, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14036, %r14012, %r14035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14039, %r14031, %r14036;
	// end inline asm
	// begin inline asm
	mov.b32 %r14047, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r14058, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14044, %r875, %r8646, %r14047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14048, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14049, %r14047, %r14048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14052, %r14044, %r14049;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14055, %r886, %r8646, %r14058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14059, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14060, %r14058, %r14059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14063, %r14055, %r14060;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14066, %r875, %r8668, %r14047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14070, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14071, %r14047, %r14070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14074, %r14066, %r14071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14077, %r886, %r8668, %r14058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14081, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14082, %r14058, %r14081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14085, %r14077, %r14082;
	// end inline asm
	// begin inline asm
	mov.b32 %r14093, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r14104, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14090, %r875, %r8692, %r14093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14094, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14095, %r14093, %r14094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14098, %r14090, %r14095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14101, %r886, %r8692, %r14104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14105, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14106, %r14104, %r14105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14109, %r14101, %r14106;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14112, %r875, %r8714, %r14093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14116, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14117, %r14093, %r14116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14120, %r14112, %r14117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14123, %r886, %r8714, %r14104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14127, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14128, %r14104, %r14127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14131, %r14123, %r14128;
	// end inline asm
	// begin inline asm
	mov.b32 %r14139, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r14150, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14136, %r875, %r8738, %r14139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14140, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14141, %r14139, %r14140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14144, %r14136, %r14141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14147, %r886, %r8738, %r14150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14151, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14152, %r14150, %r14151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14155, %r14147, %r14152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14158, %r875, %r8760, %r14139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14162, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14163, %r14139, %r14162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14166, %r14158, %r14163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14169, %r886, %r8760, %r14150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14173, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14174, %r14150, %r14173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14177, %r14169, %r14174;
	// end inline asm
	// begin inline asm
	mov.b32 %r14185, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r14196, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14182, %r875, %r8784, %r14185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14186, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14187, %r14185, %r14186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14190, %r14182, %r14187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14193, %r886, %r8784, %r14196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14197, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14198, %r14196, %r14197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14201, %r14193, %r14198;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14204, %r875, %r8806, %r14185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14208, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14209, %r14185, %r14208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14212, %r14204, %r14209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14215, %r886, %r8806, %r14196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14219, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14220, %r14196, %r14219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14223, %r14215, %r14220;
	// end inline asm
	// begin inline asm
	mov.b32 %r14231, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r14242, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14228, %r875, %r8830, %r14231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14232, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14233, %r14231, %r14232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14236, %r14228, %r14233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14239, %r886, %r8830, %r14242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14243, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14244, %r14242, %r14243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14247, %r14239, %r14244;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14250, %r875, %r8852, %r14231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14254, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14255, %r14231, %r14254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14258, %r14250, %r14255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14261, %r886, %r8852, %r14242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14265, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14266, %r14242, %r14265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14269, %r14261, %r14266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14407, %r365, %r13914, %r13714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14404, %r365, %r13925, %r13720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14416, %r365, %r13936, %r13726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14413, %r365, %r13947, %r13732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14425, %r365, %r13960, %r13738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14422, %r365, %r13971, %r13744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14434, %r365, %r13982, %r13750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14431, %r365, %r13993, %r13756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14443, %r365, %r14006, %r13762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14440, %r365, %r14017, %r13768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14452, %r365, %r14028, %r13774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14449, %r365, %r14039, %r13780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14461, %r365, %r14052, %r13786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14458, %r365, %r14063, %r13792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14470, %r365, %r14074, %r13798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14467, %r365, %r14085, %r13804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14479, %r383, %r14098, %r13810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14476, %r383, %r14109, %r13816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14488, %r383, %r14120, %r13822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14485, %r383, %r14131, %r13828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14497, %r383, %r14144, %r13834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14494, %r383, %r14155, %r13840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14506, %r383, %r14166, %r13846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14503, %r383, %r14177, %r13852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14515, %r383, %r14190, %r13858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14512, %r383, %r14201, %r13864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14524, %r383, %r14212, %r13870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14521, %r383, %r14223, %r13876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14533, %r383, %r14236, %r13882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14530, %r383, %r14247, %r13888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14542, %r383, %r14258, %r13894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14539, %r383, %r14269, %r13900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14400, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14402, %r14400, %r14404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14405, %r422, %r14407, %r14402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14409, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14411, %r14409, %r14413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14414, %r422, %r14416, %r14411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14418, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14420, %r14418, %r14422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14423, %r422, %r14425, %r14420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14427, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14429, %r14427, %r14431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14432, %r422, %r14434, %r14429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14436, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14438, %r14436, %r14440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14441, %r422, %r14443, %r14438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14445, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14447, %r14445, %r14449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14450, %r422, %r14452, %r14447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14454, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14456, %r14454, %r14458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14459, %r422, %r14461, %r14456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14463, %r428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14465, %r14463, %r14467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14468, %r422, %r14470, %r14465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14472, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14474, %r14472, %r14476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14477, %r425, %r14479, %r14474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14481, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14483, %r14481, %r14485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14486, %r425, %r14488, %r14483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14490, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14492, %r14490, %r14494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14495, %r425, %r14497, %r14492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14499, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14501, %r14499, %r14503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14504, %r425, %r14506, %r14501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14508, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14510, %r14508, %r14512;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14513, %r425, %r14515, %r14510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14517, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14519, %r14517, %r14521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14522, %r425, %r14524, %r14519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14526, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14528, %r14526, %r14530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14531, %r425, %r14533, %r14528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14535, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14537, %r14535, %r14539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14540, %r425, %r14542, %r14537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14544, %r428, %r14407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14547, %r422, %r14404, %r14544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14551, %r428, %r14416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14554, %r422, %r14413, %r14551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14558, %r428, %r14425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14561, %r422, %r14422, %r14558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14565, %r428, %r14434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14568, %r422, %r14431, %r14565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14572, %r428, %r14443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14575, %r422, %r14440, %r14572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14579, %r428, %r14452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14582, %r422, %r14449, %r14579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14586, %r428, %r14461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14589, %r422, %r14458, %r14586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14593, %r428, %r14470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14596, %r422, %r14467, %r14593;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14600, %r431, %r14479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14603, %r425, %r14476, %r14600;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14607, %r431, %r14488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14610, %r425, %r14485, %r14607;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14614, %r431, %r14497;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14617, %r425, %r14494, %r14614;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14621, %r431, %r14506;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14624, %r425, %r14503, %r14621;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14628, %r431, %r14515;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14631, %r425, %r14512, %r14628;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14635, %r431, %r14524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14638, %r425, %r14521, %r14635;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14642, %r431, %r14533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14645, %r425, %r14530, %r14642;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14649, %r431, %r14542;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14652, %r425, %r14539, %r14649;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14823, %r14820}, {%r489, %r495, %r492, %r498}, {%r14405, %r14547}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14832, %r14829}, {%r489, %r495, %r492, %r498}, {%r14414, %r14554}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14841, %r14838}, {%r489, %r495, %r492, %r498}, {%r14423, %r14561}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14850, %r14847}, {%r489, %r495, %r492, %r498}, {%r14432, %r14568}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14859, %r14856}, {%r489, %r495, %r492, %r498}, {%r14441, %r14575}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14868, %r14865}, {%r489, %r495, %r492, %r498}, {%r14450, %r14582}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14877, %r14874}, {%r489, %r495, %r492, %r498}, {%r14459, %r14589}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14886, %r14883}, {%r489, %r495, %r492, %r498}, {%r14468, %r14596}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14895, %r14892}, {%r489, %r495, %r492, %r498}, {%r14477, %r14603}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14904, %r14901}, {%r489, %r495, %r492, %r498}, {%r14486, %r14610}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14913, %r14910}, {%r489, %r495, %r492, %r498}, {%r14495, %r14617}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14922, %r14919}, {%r489, %r495, %r492, %r498}, {%r14504, %r14624}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14931, %r14928}, {%r489, %r495, %r492, %r498}, {%r14513, %r14631}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14940, %r14937}, {%r489, %r495, %r492, %r498}, {%r14522, %r14638}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14949, %r14946}, {%r489, %r495, %r492, %r498}, {%r14531, %r14645}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14958, %r14955}, {%r489, %r495, %r492, %r498}, {%r14540, %r14652}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14816, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14818, %r14816, %r14820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14821, %r539, %r14823, %r14818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14825, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14827, %r14825, %r14829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14830, %r539, %r14832, %r14827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14834, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14836, %r14834, %r14838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14839, %r539, %r14841, %r14836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14843, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14845, %r14843, %r14847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14848, %r539, %r14850, %r14845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14852, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14854, %r14852, %r14856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14857, %r539, %r14859, %r14854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14861, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14863, %r14861, %r14865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14866, %r539, %r14868, %r14863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14870, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14872, %r14870, %r14874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14875, %r539, %r14877, %r14872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14879, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14881, %r14879, %r14883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14884, %r539, %r14886, %r14881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14888, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14890, %r14888, %r14892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14893, %r539, %r14895, %r14890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14897, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14899, %r14897, %r14901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14902, %r539, %r14904, %r14899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14906, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14908, %r14906, %r14910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14911, %r539, %r14913, %r14908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14915, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14917, %r14915, %r14919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14920, %r539, %r14922, %r14917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14924, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14926, %r14924, %r14928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14929, %r539, %r14931, %r14926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14933, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14935, %r14933, %r14937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14938, %r539, %r14940, %r14935;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14942, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14944, %r14942, %r14946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14947, %r539, %r14949, %r14944;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14951, %r542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14953, %r14951, %r14955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14956, %r539, %r14958, %r14953;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14960, %r542, %r14823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14963, %r539, %r14820, %r14960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14967, %r542, %r14832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14970, %r539, %r14829, %r14967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14974, %r542, %r14841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14977, %r539, %r14838, %r14974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14981, %r542, %r14850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14984, %r539, %r14847, %r14981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14988, %r542, %r14859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14991, %r539, %r14856, %r14988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14995, %r542, %r14868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14998, %r539, %r14865, %r14995;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15002, %r542, %r14877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15005, %r539, %r14874, %r15002;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15009, %r542, %r14886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15012, %r539, %r14883, %r15009;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15016, %r542, %r14895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15019, %r539, %r14892, %r15016;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15023, %r542, %r14904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15026, %r539, %r14901, %r15023;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15030, %r542, %r14913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15033, %r539, %r14910, %r15030;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15037, %r542, %r14922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15040, %r539, %r14919, %r15037;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15044, %r542, %r14931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15047, %r539, %r14928, %r15044;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15051, %r542, %r14940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15054, %r539, %r14937, %r15051;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15058, %r542, %r14949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15061, %r539, %r14946, %r15058;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15065, %r542, %r14958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15068, %r539, %r14955, %r15065;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15361, %r15364}, {%r577, %r583, %r580, %r586}, {%r14821, %r14963}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15367, %r15370}, {%r577, %r583, %r580, %r586}, {%r14830, %r14970}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15373, %r15376}, {%r577, %r583, %r580, %r586}, {%r14839, %r14977}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15379, %r15382}, {%r577, %r583, %r580, %r586}, {%r14848, %r14984}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15385, %r15388}, {%r577, %r583, %r580, %r586}, {%r14857, %r14991}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15391, %r15394}, {%r577, %r583, %r580, %r586}, {%r14866, %r14998}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15397, %r15400}, {%r577, %r583, %r580, %r586}, {%r14875, %r15005}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15403, %r15406}, {%r577, %r583, %r580, %r586}, {%r14884, %r15012}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15362, %r15365}, {%r577, %r583, %r580, %r586}, {%r14893, %r15019}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15368, %r15371}, {%r577, %r583, %r580, %r586}, {%r14902, %r15026}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15374, %r15377}, {%r577, %r583, %r580, %r586}, {%r14911, %r15033}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15380, %r15383}, {%r577, %r583, %r580, %r586}, {%r14920, %r15040}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15386, %r15389}, {%r577, %r583, %r580, %r586}, {%r14929, %r15047}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15392, %r15395}, {%r577, %r583, %r580, %r586}, {%r14938, %r15054}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15398, %r15401}, {%r577, %r583, %r580, %r586}, {%r14947, %r15061}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15404, %r15407}, {%r577, %r583, %r580, %r586}, {%r14956, %r15068}, {%r3216, %r3216};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15360, %r15361, %r15362;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15363, %r15364, %r15365;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15366, %r15367, %r15368;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15369, %r15370, %r15371;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15372, %r15373, %r15374;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15375, %r15376, %r15377;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15378, %r15379, %r15380;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15381, %r15382, %r15383;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15384, %r15385, %r15386;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15387, %r15388, %r15389;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15390, %r15391, %r15392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15393, %r15394, %r15395;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15396, %r15397, %r15398;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15399, %r15400, %r15401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15402, %r15403, %r15404;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15405, %r15406, %r15407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15408, %r15361, %r15362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15411, %r15364, %r15365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15414, %r15367, %r15368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15417, %r15370, %r15371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15420, %r15373, %r15374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15423, %r15376, %r15377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15426, %r15379, %r15380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15429, %r15382, %r15383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15432, %r15385, %r15386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15435, %r15388, %r15389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15438, %r15391, %r15392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15441, %r15394, %r15395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15444, %r15397, %r15398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15447, %r15400, %r15401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15450, %r15403, %r15404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15453, %r15406, %r15407;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15456, %r180, %r15360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15459, %r180, %r15363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15462, %r180, %r15366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15465, %r180, %r15369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15468, %r180, %r15372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15471, %r180, %r15375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15474, %r180, %r15378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15477, %r180, %r15381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15480, %r180, %r15384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15483, %r180, %r15387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15486, %r180, %r15390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15489, %r180, %r15393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15492, %r180, %r15396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15495, %r180, %r15399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15498, %r180, %r15402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15501, %r180, %r15405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15504, %r182, %r15408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15507, %r182, %r15411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15510, %r182, %r15414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15513, %r182, %r15417;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15516, %r182, %r15420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15519, %r182, %r15423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15522, %r182, %r15426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15525, %r182, %r15429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15528, %r182, %r15432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15531, %r182, %r15435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15534, %r182, %r15438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15537, %r182, %r15441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15540, %r182, %r15444;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15543, %r182, %r15447;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15546, %r182, %r15450;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15549, %r182, %r15453;
	// end inline asm
	// begin inline asm
	mov.b32 %r15552, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15553, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15554, %r15456, %r15552;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15557, %r15554, %r15553;
	// end inline asm
	// begin inline asm
	mov.b32 %r15560, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15561, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15562, %r15459, %r15560;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15565, %r15562, %r15561;
	// end inline asm
	// begin inline asm
	mov.b32 %r15568, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15569, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15570, %r15462, %r15568;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15573, %r15570, %r15569;
	// end inline asm
	// begin inline asm
	mov.b32 %r15576, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15577, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15578, %r15465, %r15576;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15581, %r15578, %r15577;
	// end inline asm
	// begin inline asm
	mov.b32 %r15584, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15585, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15586, %r15468, %r15584;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15589, %r15586, %r15585;
	// end inline asm
	// begin inline asm
	mov.b32 %r15592, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15593, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15594, %r15471, %r15592;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15597, %r15594, %r15593;
	// end inline asm
	// begin inline asm
	mov.b32 %r15600, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15601, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15602, %r15474, %r15600;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15605, %r15602, %r15601;
	// end inline asm
	// begin inline asm
	mov.b32 %r15608, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15609, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15610, %r15477, %r15608;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15613, %r15610, %r15609;
	// end inline asm
	// begin inline asm
	mov.b32 %r15616, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15617, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15618, %r15480, %r15616;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15621, %r15618, %r15617;
	// end inline asm
	// begin inline asm
	mov.b32 %r15624, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15625, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15626, %r15483, %r15624;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15629, %r15626, %r15625;
	// end inline asm
	// begin inline asm
	mov.b32 %r15632, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15633, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15634, %r15486, %r15632;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15637, %r15634, %r15633;
	// end inline asm
	// begin inline asm
	mov.b32 %r15640, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15641, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15642, %r15489, %r15640;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15645, %r15642, %r15641;
	// end inline asm
	// begin inline asm
	mov.b32 %r15648, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15649, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15650, %r15492, %r15648;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15653, %r15650, %r15649;
	// end inline asm
	// begin inline asm
	mov.b32 %r15656, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15657, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15658, %r15495, %r15656;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15661, %r15658, %r15657;
	// end inline asm
	// begin inline asm
	mov.b32 %r15664, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15665, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15666, %r15498, %r15664;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15669, %r15666, %r15665;
	// end inline asm
	// begin inline asm
	mov.b32 %r15672, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15673, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15674, %r15501, %r15672;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15677, %r15674, %r15673;
	// end inline asm
	// begin inline asm
	mov.b32 %r15680, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15681, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15682, %r15504, %r15680;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15685, %r15682, %r15681;
	// end inline asm
	// begin inline asm
	mov.b32 %r15688, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15689, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15690, %r15507, %r15688;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15693, %r15690, %r15689;
	// end inline asm
	// begin inline asm
	mov.b32 %r15696, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15697, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15698, %r15510, %r15696;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15701, %r15698, %r15697;
	// end inline asm
	// begin inline asm
	mov.b32 %r15704, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15705, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15706, %r15513, %r15704;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15709, %r15706, %r15705;
	// end inline asm
	// begin inline asm
	mov.b32 %r15712, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15713, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15714, %r15516, %r15712;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15717, %r15714, %r15713;
	// end inline asm
	// begin inline asm
	mov.b32 %r15720, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15721, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15722, %r15519, %r15720;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15725, %r15722, %r15721;
	// end inline asm
	// begin inline asm
	mov.b32 %r15728, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15729, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15730, %r15522, %r15728;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15733, %r15730, %r15729;
	// end inline asm
	// begin inline asm
	mov.b32 %r15736, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15737, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15738, %r15525, %r15736;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15741, %r15738, %r15737;
	// end inline asm
	// begin inline asm
	mov.b32 %r15744, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15745, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15746, %r15528, %r15744;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15749, %r15746, %r15745;
	// end inline asm
	// begin inline asm
	mov.b32 %r15752, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15753, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15754, %r15531, %r15752;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15757, %r15754, %r15753;
	// end inline asm
	// begin inline asm
	mov.b32 %r15760, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15761, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15762, %r15534, %r15760;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15765, %r15762, %r15761;
	// end inline asm
	// begin inline asm
	mov.b32 %r15768, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15769, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15770, %r15537, %r15768;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15773, %r15770, %r15769;
	// end inline asm
	// begin inline asm
	mov.b32 %r15776, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15777, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15778, %r15540, %r15776;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15781, %r15778, %r15777;
	// end inline asm
	// begin inline asm
	mov.b32 %r15784, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15785, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15786, %r15543, %r15784;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15789, %r15786, %r15785;
	// end inline asm
	// begin inline asm
	mov.b32 %r15792, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15793, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15794, %r15546, %r15792;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15797, %r15794, %r15793;
	// end inline asm
	// begin inline asm
	mov.b32 %r15800, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15801, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15802, %r15549, %r15800;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15805, %r15802, %r15801;
	// end inline asm
	// begin inline asm
	mov.b32 %r15811, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r15809, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15810, %r15811, %r15809;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15813, %r15557, %r15810;
	// end inline asm
	// begin inline asm
	mov.b32 %r15816, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15817, %r15811, %r15816;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15820, %r15565, %r15817;
	// end inline asm
	// begin inline asm
	mov.b32 %r15823, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15824, %r15811, %r15823;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15827, %r15573, %r15824;
	// end inline asm
	// begin inline asm
	mov.b32 %r15830, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15831, %r15811, %r15830;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15834, %r15581, %r15831;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15837, %r15813, %r15827, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15841, %r15820, %r15834, %r4392;
	// end inline asm
	shl.b32 	%r15848, %r15841, 4;
	// begin inline asm
	lop3.b32 %r15845, %r4398, %r15837, %r15848, 202;
	// end inline asm
	xor.b32  	%r16217, %r15845, -2004318072;
	// begin inline asm
	mov.b32 %r15852, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r15850, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15851, %r15852, %r15850;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15854, %r15589, %r15851;
	// end inline asm
	// begin inline asm
	mov.b32 %r15857, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15858, %r15852, %r15857;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15861, %r15597, %r15858;
	// end inline asm
	// begin inline asm
	mov.b32 %r15864, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15865, %r15852, %r15864;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15868, %r15605, %r15865;
	// end inline asm
	// begin inline asm
	mov.b32 %r15871, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15872, %r15852, %r15871;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15875, %r15613, %r15872;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15878, %r15854, %r15868, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15882, %r15861, %r15875, %r4392;
	// end inline asm
	shl.b32 	%r15889, %r15882, 4;
	// begin inline asm
	lop3.b32 %r15886, %r4398, %r15878, %r15889, 202;
	// end inline asm
	xor.b32  	%r16218, %r15886, -2004318072;
	// begin inline asm
	mov.b32 %r15893, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r15891, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15892, %r15893, %r15891;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15895, %r15621, %r15892;
	// end inline asm
	// begin inline asm
	mov.b32 %r15898, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15899, %r15893, %r15898;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15902, %r15629, %r15899;
	// end inline asm
	// begin inline asm
	mov.b32 %r15905, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15906, %r15893, %r15905;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15909, %r15637, %r15906;
	// end inline asm
	// begin inline asm
	mov.b32 %r15912, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15913, %r15893, %r15912;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15916, %r15645, %r15913;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15919, %r15895, %r15909, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15923, %r15902, %r15916, %r4392;
	// end inline asm
	shl.b32 	%r15930, %r15923, 4;
	// begin inline asm
	lop3.b32 %r15927, %r4398, %r15919, %r15930, 202;
	// end inline asm
	xor.b32  	%r16219, %r15927, -2004318072;
	// begin inline asm
	mov.b32 %r15934, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r15932, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15933, %r15934, %r15932;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15936, %r15653, %r15933;
	// end inline asm
	// begin inline asm
	mov.b32 %r15939, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15940, %r15934, %r15939;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15943, %r15661, %r15940;
	// end inline asm
	// begin inline asm
	mov.b32 %r15946, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15947, %r15934, %r15946;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15950, %r15669, %r15947;
	// end inline asm
	// begin inline asm
	mov.b32 %r15953, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15954, %r15934, %r15953;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15957, %r15677, %r15954;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15960, %r15936, %r15950, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15964, %r15943, %r15957, %r4392;
	// end inline asm
	shl.b32 	%r15971, %r15964, 4;
	// begin inline asm
	lop3.b32 %r15968, %r4398, %r15960, %r15971, 202;
	// end inline asm
	xor.b32  	%r16220, %r15968, -2004318072;
	// begin inline asm
	mov.b32 %r15975, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r15973, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15974, %r15975, %r15973;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15977, %r15685, %r15974;
	// end inline asm
	// begin inline asm
	mov.b32 %r15980, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15981, %r15975, %r15980;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15984, %r15693, %r15981;
	// end inline asm
	// begin inline asm
	mov.b32 %r15987, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15988, %r15975, %r15987;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15991, %r15701, %r15988;
	// end inline asm
	// begin inline asm
	mov.b32 %r15994, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15995, %r15975, %r15994;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15998, %r15709, %r15995;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16001, %r15977, %r15991, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16005, %r15984, %r15998, %r4392;
	// end inline asm
	shl.b32 	%r16012, %r16005, 4;
	// begin inline asm
	lop3.b32 %r16009, %r4398, %r16001, %r16012, 202;
	// end inline asm
	xor.b32  	%r16221, %r16009, -2004318072;
	// begin inline asm
	mov.b32 %r16016, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r16014, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16015, %r16016, %r16014;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16018, %r15717, %r16015;
	// end inline asm
	// begin inline asm
	mov.b32 %r16021, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16022, %r16016, %r16021;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16025, %r15725, %r16022;
	// end inline asm
	// begin inline asm
	mov.b32 %r16028, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16029, %r16016, %r16028;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16032, %r15733, %r16029;
	// end inline asm
	// begin inline asm
	mov.b32 %r16035, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16036, %r16016, %r16035;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16039, %r15741, %r16036;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16042, %r16018, %r16032, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16046, %r16025, %r16039, %r4392;
	// end inline asm
	shl.b32 	%r16053, %r16046, 4;
	// begin inline asm
	lop3.b32 %r16050, %r4398, %r16042, %r16053, 202;
	// end inline asm
	xor.b32  	%r16222, %r16050, -2004318072;
	// begin inline asm
	mov.b32 %r16057, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r16055, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16056, %r16057, %r16055;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16059, %r15749, %r16056;
	// end inline asm
	// begin inline asm
	mov.b32 %r16062, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16063, %r16057, %r16062;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16066, %r15757, %r16063;
	// end inline asm
	// begin inline asm
	mov.b32 %r16069, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16070, %r16057, %r16069;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16073, %r15765, %r16070;
	// end inline asm
	// begin inline asm
	mov.b32 %r16076, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16077, %r16057, %r16076;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16080, %r15773, %r16077;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16083, %r16059, %r16073, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16087, %r16066, %r16080, %r4392;
	// end inline asm
	shl.b32 	%r16094, %r16087, 4;
	// begin inline asm
	lop3.b32 %r16091, %r4398, %r16083, %r16094, 202;
	// end inline asm
	xor.b32  	%r16223, %r16091, -2004318072;
	// begin inline asm
	mov.b32 %r16098, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r16096, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16097, %r16098, %r16096;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16100, %r15781, %r16097;
	// end inline asm
	// begin inline asm
	mov.b32 %r16103, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16104, %r16098, %r16103;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16107, %r15789, %r16104;
	// end inline asm
	// begin inline asm
	mov.b32 %r16110, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16111, %r16098, %r16110;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16114, %r15797, %r16111;
	// end inline asm
	// begin inline asm
	mov.b32 %r16117, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16118, %r16098, %r16117;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16121, %r15805, %r16118;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16124, %r16100, %r16114, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16128, %r16107, %r16121, %r4392;
	// end inline asm
	shl.b32 	%r16135, %r16128, 4;
	// begin inline asm
	lop3.b32 %r16132, %r4398, %r16124, %r16135, 202;
	// end inline asm
	xor.b32  	%r16224, %r16132, -2004318072;
	st.shared.u32 	[%rd93], %r16217;
	st.shared.u32 	[%rd95], %r16218;
	st.shared.u32 	[%rd97], %r16219;
	st.shared.u32 	[%rd99], %r16220;
	st.shared.u32 	[%rd101], %r16221;
	st.shared.u32 	[%rd103], %r16222;
	st.shared.u32 	[%rd105], %r16223;
	st.shared.u32 	[%rd107], %r16224;
	add.s32 	%r16353, %r16353, 128;
	setp.eq.s32 	%p308, %r16353, 257;
	@%p308 bra 	$L__BB0_119;
	bra.uni 	$L__BB0_118;
$L__BB0_119:                            // %guard_exit29743
                                        //   in Loop: Header=BB0_116 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16230, [%rd5];
	ld.shared.u32 	%r16231, [%rd6+128];
	ld.shared.u32 	%r16238, [%rd6+4];
	ld.shared.u32 	%r16239, [%rd6+132];
	ld.shared.u32 	%r16246, [%rd7];
	ld.shared.u32 	%r16247, [%rd8+128];
	ld.shared.u32 	%r16254, [%rd8+4];
	ld.shared.u32 	%r16255, [%rd8+132];
	ld.shared.u32 	%r16262, [%rd5+16644];
	ld.shared.u32 	%r16263, [%rd6+16772];
	ld.shared.u32 	%r16270, [%rd6+16648];
	ld.shared.u32 	%r16271, [%rd6+16776];
	ld.shared.u32 	%r16278, [%rd7+16644];
	ld.shared.u32 	%r16279, [%rd8+16772];
	ld.shared.u32 	%r16286, [%rd8+16648];
	ld.shared.u32 	%r16287, [%rd8+16776];
	// begin inline asm
	prmt.b32 %r16225, %r16230, %r16231, %r787;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16229, %r16230, %r16231, %r791;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16233, %r16238, %r16239, %r787;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16237, %r16238, %r16239, %r791;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16241, %r16246, %r16247, %r787;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16245, %r16246, %r16247, %r791;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16249, %r16254, %r16255, %r787;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16253, %r16254, %r16255, %r791;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16257, %r16262, %r16263, %r787;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16261, %r16262, %r16263, %r791;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16265, %r16270, %r16271, %r787;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16269, %r16270, %r16271, %r791;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16273, %r16278, %r16279, %r787;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16277, %r16278, %r16279, %r791;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16281, %r16286, %r16287, %r787;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16285, %r16286, %r16287, %r791;
	// end inline asm
	selp.b32 	%r16289, %r16229, %r16225, %p294;
	shfl.sync.bfly.b32	%r234, %r16289, 8, 31, -1;
	selp.b32 	%r16290, %r16237, %r16233, %p294;
	shfl.sync.bfly.b32	%r235, %r16290, 8, 31, -1;
	selp.b32 	%r16291, %r16245, %r16241, %p294;
	shfl.sync.bfly.b32	%r236, %r16291, 8, 31, -1;
	selp.b32 	%r16292, %r16253, %r16249, %p294;
	shfl.sync.bfly.b32	%r237, %r16292, 8, 31, -1;
	selp.b32 	%r16293, %r16261, %r16257, %p294;
	shfl.sync.bfly.b32	%r16294, %r16293, 8, 31, -1;
	selp.b32 	%r16295, %r16269, %r16265, %p294;
	shfl.sync.bfly.b32	%r16296, %r16295, 8, 31, -1;
	selp.b32 	%r16297, %r16277, %r16273, %p294;
	shfl.sync.bfly.b32	%r16298, %r16297, 8, 31, -1;
	selp.b32 	%r16299, %r16285, %r16281, %p294;
	shfl.sync.bfly.b32	%r16300, %r16299, 8, 31, -1;
	setp.lt.u32 	%p310, %r16352, 512;
	@%p310 bra 	$L__BB0_121;
// %bb.120:                             // %pass28393
                                        //   in Loop: Header=BB0_116 Depth=1
	selp.b32 	%r16301, %r237, %r16253, %p294;
	selp.b32 	%r16302, %r16249, %r237, %p294;
	selp.b32 	%r16303, %r236, %r16245, %p294;
	selp.b32 	%r16304, %r16241, %r236, %p294;
	selp.b32 	%r16305, %r235, %r16237, %p294;
	selp.b32 	%r16306, %r16233, %r235, %p294;
	selp.b32 	%r16307, %r234, %r16229, %p294;
	selp.b32 	%r16308, %r16225, %r234, %p294;
	shl.b32 	%r16309, %r16352, 8;
	or.b32  	%r16310, %r16309, %r72;
	or.b32  	%r16311, %r85, %r16310;
	cvt.u64.u32 	%rd108, %r16311;
	add.s64 	%rd109, %rd108, %rd9;
	shr.u64 	%rd110, %rd109, 41;
	add.s64 	%rd111, %rd109, %rd110;
	shr.s64 	%rd112, %rd111, 23;
	setp.lt.s64 	%p312, %rd109, 0;
	and.b64  	%rd113, %rd111, -8388608;
	setp.ne.s64 	%p313, %rd113, %rd109;
	and.pred  	%p314, %p312, %p313;
	selp.u64 	%rd114, 1, 0, %p314;
	sub.s64 	%rd115, %rd114, %rd112;
	shl.b64 	%rd116, %rd115, 23;
	add.s64 	%rd117, %rd116, %rd109;
	shl.b64 	%rd118, %rd117, 2;
	add.s64 	%rd119, %rd3, %rd118;
	st.global.v4.u32 	[%rd119], {%r16308, %r16306, %r16307, %r16305};
	or.b32  	%r16312, %r86, %r16310;
	cvt.u64.u32 	%rd120, %r16312;
	add.s64 	%rd121, %rd120, %rd9;
	shr.u64 	%rd122, %rd121, 41;
	add.s64 	%rd123, %rd121, %rd122;
	shr.u64 	%rd124, %rd123, 23;
	shr.u64 	%rd125, %rd121, 63;
	sub.s64 	%rd126, %rd125, %rd124;
	shl.b64 	%rd127, %rd126, 23;
	add.s64 	%rd128, %rd127, %rd121;
	shl.b64 	%rd129, %rd128, 2;
	add.s64 	%rd130, %rd3, %rd129;
	st.global.v4.u32 	[%rd130], {%r16304, %r16302, %r16303, %r16301};
$L__BB0_121:                            // %pass28584
                                        //   in Loop: Header=BB0_116 Depth=1
	or.b32  	%r225, %r16352, 128;
	setp.lt.u32 	%p315, %r225, 384;
	@%p315 bra 	$L__BB0_122;
// %bb.164:                             // %pass28607
                                        //   in Loop: Header=BB0_116 Depth=1
	selp.b32 	%r238, %r16257, %r16294, %p294;
	selp.b32 	%r239, %r16294, %r16261, %p294;
	selp.b32 	%r240, %r16265, %r16296, %p294;
	selp.b32 	%r241, %r16296, %r16269, %p294;
	selp.b32 	%r242, %r16273, %r16298, %p294;
	selp.b32 	%r243, %r16298, %r16277, %p294;
	selp.b32 	%r244, %r16281, %r16300, %p294;
	selp.b32 	%r245, %r16300, %r16285, %p294;
	shl.b32 	%r16313, %r225, 8;
	or.b32  	%r16314, %r16313, %r72;
	or.b32  	%r16315, %r85, %r16314;
	cvt.u64.u32 	%rd131, %r16315;
	add.s64 	%rd132, %rd131, %rd9;
	shr.u64 	%rd133, %rd132, 41;
	add.s64 	%rd134, %rd132, %rd133;
	shr.s64 	%rd135, %rd134, 23;
	setp.lt.s64 	%p316, %rd132, 0;
	and.b64  	%rd136, %rd134, -8388608;
	setp.ne.s64 	%p317, %rd136, %rd132;
	and.pred  	%p318, %p316, %p317;
	selp.u64 	%rd137, 1, 0, %p318;
	sub.s64 	%rd138, %rd137, %rd135;
	shl.b64 	%rd139, %rd138, 23;
	add.s64 	%rd140, %rd139, %rd132;
	shl.b64 	%rd141, %rd140, 2;
	add.s64 	%rd142, %rd3, %rd141;
	st.global.v4.u32 	[%rd142], {%r238, %r240, %r239, %r241};
	or.b32  	%r16316, %r86, %r16314;
	cvt.u64.u32 	%rd143, %r16316;
	add.s64 	%rd144, %rd143, %rd9;
	shr.u64 	%rd145, %rd144, 41;
	add.s64 	%rd146, %rd144, %rd145;
	shr.u64 	%rd147, %rd146, 23;
	shr.u64 	%rd148, %rd144, 63;
	sub.s64 	%rd149, %rd148, %rd147;
	shl.b64 	%rd150, %rd149, 23;
	add.s64 	%rd151, %rd150, %rd144;
	shl.b64 	%rd152, %rd151, 2;
	add.s64 	%rd153, %rd3, %rd152;
	st.global.v4.u32 	[%rd153], {%r242, %r244, %r243, %r245};
	bra.uni 	$L__BB0_122;
$L__BB0_123:                            // %L70509
	mov.u32 	%r16317, 0;
	st.global.u32 	[%rd4], %r16317;
	ret;
$L__BB0_7:                              // %L167
	mov.u32 	%r16319, 2;
	st.global.u32 	[%rd4], %r16319;
	mov.u64 	%rd156, exception5808;
	cvta.global.u64 	%rd157, %rd156;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd157;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r246;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r16318, 3;
	st.global.u32 	[%rd4], %r16318;
	mov.u64 	%rd154, exception5808;
	cvta.global.u64 	%rd155, %rd154;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd155;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r246;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd27, exception1;
	cvta.global.u64 	%rd28, %rd27;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd28;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r246;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
