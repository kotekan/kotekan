// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5110[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<329>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16249>;
	.reg .f32 	%f<1394>;
	.reg .b64 	%rd<127>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r244, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd36, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r245, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r245, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd53, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd37, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r246, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r247, %r246, %r4;
	or.b32  	%r248, %r247, %r2;
	mul.wide.u32 	%rd59, %r248, 4;
	add.s64 	%rd4, %rd53, %rd59;
	mov.u32 	%r249, 1;
	st.global.u32 	[%rd4], %r249;
	ld.global.u32 	%r5, [%rd37];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L205
	ld.param.u64 	%rd41, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd41];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L215
	ld.param.u64 	%rd45, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd45];
	sub.s32 	%r250, %r6, %r5;
	and.b32  	%r251, %r250, 255;
	setp.ne.s32 	%p6, %r251, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L221
	ld.param.u64 	%rd49, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd49];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 2048;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L231
	sub.s32 	%r252, %r8, %r7;
	and.b32  	%r253, %r252, 1;
	setp.eq.b32 	%p12, %r253, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %L341
	bfe.u32 	%r19, %r4, 1, 1;
	and.b32  	%r20, %r4, 1;
	bfe.u32 	%r22, %r4, 2, 1;
	shr.u32 	%r23, %r4, 4;
	shl.b32 	%r258, %r23, 2;
	shl.b32 	%r259, %r22, 3;
	shl.b32 	%r260, %r20, 4;
	shl.b32 	%r261, %r19, 5;
	or.b32  	%r262, %r260, %r261;
	or.b32  	%r263, %r259, %r262;
	or.b32  	%r264, %r258, %r263;
	bfe.u32 	%r25, %r4, 3, 1;
	shl.b32 	%r265, %r25, 1;
	or.b32  	%r26, %r265, %r264;
	or.b32  	%r27, %r26, 64;
	mov.f32 	%f255, 0f40000000;
	mov.f32 	%f256, 0f43FF8000;
	div.approx.f32 	%f1, %f256, %f255;
	cvt.rn.f32.s32 	%f257, %r26;
	sub.f32 	%f258, %f257, %f1;
	mov.f32 	%f287, 0f43000000;
	div.approx.f32 	%f3, %f258, %f287;
	setp.eq.f32 	%p20, %f3, 0f00000000;
	mov.f32 	%f1353, 0f3F800000;
	mov.f32 	%f1338, %f1353;
	@%p20 bra 	LBB0_10;
// %bb.9:                               // %L691
	sin.approx.f32 	%f288, %f3;
	div.approx.f32 	%f1338, %f288, %f3;
LBB0_10:                                // %L694
	cvt.rn.f32.s32 	%f291, %r27;
	sub.f32 	%f292, %f291, %f1;
	div.approx.f32 	%f8, %f292, %f287;
	setp.eq.f32 	%p26, %f8, 0f00000000;
	mov.f32 	%f1339, %f1353;
	@%p26 bra 	LBB0_12;
// %bb.11:                              // %L711
	sin.approx.f32 	%f322, %f8;
	div.approx.f32 	%f1339, %f322, %f8;
LBB0_12:                                // %L714
	or.b32  	%r283, %r26, 1;
	or.b32  	%r29, %r26, 65;
	cvt.rn.f32.s32 	%f326, %r283;
	sub.f32 	%f327, %f326, %f1;
	div.approx.f32 	%f12, %f327, %f287;
	setp.eq.f32 	%p32, %f12, 0f00000000;
	mov.f32 	%f1340, %f1353;
	@%p32 bra 	LBB0_14;
// %bb.13:                              // %L793
	sin.approx.f32 	%f357, %f12;
	div.approx.f32 	%f1340, %f357, %f12;
LBB0_14:                                // %L796
	cvt.rn.f32.s32 	%f360, %r29;
	sub.f32 	%f361, %f360, %f1;
	div.approx.f32 	%f17, %f361, %f287;
	setp.eq.f32 	%p38, %f17, 0f00000000;
	mov.f32 	%f1341, %f1353;
	@%p38 bra 	LBB0_16;
// %bb.15:                              // %L813
	sin.approx.f32 	%f391, %f17;
	div.approx.f32 	%f1341, %f391, %f17;
LBB0_16:                                // %L816
	or.b32  	%r301, %r26, 128;
	or.b32  	%r31, %r26, 192;
	cvt.rn.f32.s32 	%f395, %r301;
	sub.f32 	%f396, %f395, %f1;
	div.approx.f32 	%f21, %f396, %f287;
	setp.eq.f32 	%p44, %f21, 0f00000000;
	mov.f32 	%f1342, %f1353;
	@%p44 bra 	LBB0_18;
// %bb.17:                              // %L895
	sin.approx.f32 	%f426, %f21;
	div.approx.f32 	%f1342, %f426, %f21;
LBB0_18:                                // %L898
	cvt.rn.f32.s32 	%f429, %r31;
	sub.f32 	%f430, %f429, %f1;
	div.approx.f32 	%f26, %f430, %f287;
	setp.eq.f32 	%p50, %f26, 0f00000000;
	mov.f32 	%f1343, %f1353;
	@%p50 bra 	LBB0_20;
// %bb.19:                              // %L915
	sin.approx.f32 	%f460, %f26;
	div.approx.f32 	%f1343, %f460, %f26;
LBB0_20:                                // %L918
	or.b32  	%r319, %r26, 129;
	or.b32  	%r33, %r26, 193;
	cvt.rn.f32.s32 	%f464, %r319;
	sub.f32 	%f465, %f464, %f1;
	div.approx.f32 	%f30, %f465, %f287;
	setp.eq.f32 	%p56, %f30, 0f00000000;
	mov.f32 	%f1344, %f1353;
	@%p56 bra 	LBB0_22;
// %bb.21:                              // %L997
	sin.approx.f32 	%f495, %f30;
	div.approx.f32 	%f1344, %f495, %f30;
LBB0_22:                                // %L1000
	cvt.rn.f32.s32 	%f498, %r33;
	sub.f32 	%f499, %f498, %f1;
	div.approx.f32 	%f35, %f499, %f287;
	setp.eq.f32 	%p62, %f35, 0f00000000;
	mov.f32 	%f1345, %f1353;
	@%p62 bra 	LBB0_24;
// %bb.23:                              // %L1017
	sin.approx.f32 	%f529, %f35;
	div.approx.f32 	%f1345, %f529, %f35;
LBB0_24:                                // %L1020
	or.b32  	%r337, %r26, 256;
	or.b32  	%r35, %r26, 320;
	cvt.rn.f32.s32 	%f533, %r337;
	sub.f32 	%f534, %f533, %f1;
	div.approx.f32 	%f39, %f534, %f287;
	setp.eq.f32 	%p68, %f39, 0f00000000;
	mov.f32 	%f1346, %f1353;
	@%p68 bra 	LBB0_26;
// %bb.25:                              // %L1099
	sin.approx.f32 	%f564, %f39;
	div.approx.f32 	%f1346, %f564, %f39;
LBB0_26:                                // %L1102
	cvt.rn.f32.s32 	%f567, %r35;
	sub.f32 	%f568, %f567, %f1;
	div.approx.f32 	%f44, %f568, %f287;
	setp.eq.f32 	%p74, %f44, 0f00000000;
	mov.f32 	%f1347, %f1353;
	@%p74 bra 	LBB0_28;
// %bb.27:                              // %L1119
	sin.approx.f32 	%f598, %f44;
	div.approx.f32 	%f1347, %f598, %f44;
LBB0_28:                                // %L1122
	or.b32  	%r355, %r26, 257;
	or.b32  	%r37, %r26, 321;
	cvt.rn.f32.s32 	%f602, %r355;
	sub.f32 	%f603, %f602, %f1;
	div.approx.f32 	%f48, %f603, %f287;
	setp.eq.f32 	%p80, %f48, 0f00000000;
	mov.f32 	%f1348, %f1353;
	@%p80 bra 	LBB0_30;
// %bb.29:                              // %L1201
	sin.approx.f32 	%f633, %f48;
	div.approx.f32 	%f1348, %f633, %f48;
LBB0_30:                                // %L1204
	cvt.rn.f32.s32 	%f636, %r37;
	sub.f32 	%f637, %f636, %f1;
	div.approx.f32 	%f53, %f637, %f287;
	setp.eq.f32 	%p86, %f53, 0f00000000;
	mov.f32 	%f1349, %f1353;
	@%p86 bra 	LBB0_32;
// %bb.31:                              // %L1221
	sin.approx.f32 	%f667, %f53;
	div.approx.f32 	%f1349, %f667, %f53;
LBB0_32:                                // %L1224
	or.b32  	%r373, %r26, 384;
	or.b32  	%r39, %r26, 448;
	cvt.rn.f32.s32 	%f671, %r373;
	sub.f32 	%f672, %f671, %f1;
	div.approx.f32 	%f57, %f672, %f287;
	setp.eq.f32 	%p92, %f57, 0f00000000;
	mov.f32 	%f1350, %f1353;
	@%p92 bra 	LBB0_34;
// %bb.33:                              // %L1303
	sin.approx.f32 	%f702, %f57;
	div.approx.f32 	%f1350, %f702, %f57;
LBB0_34:                                // %L1306
	cvt.rn.f32.s32 	%f705, %r39;
	sub.f32 	%f706, %f705, %f1;
	div.approx.f32 	%f62, %f706, %f287;
	setp.eq.f32 	%p98, %f62, 0f00000000;
	mov.f32 	%f1351, %f1353;
	@%p98 bra 	LBB0_36;
// %bb.35:                              // %L1323
	sin.approx.f32 	%f736, %f62;
	div.approx.f32 	%f1351, %f736, %f62;
LBB0_36:                                // %L1326
	or.b32  	%r391, %r26, 385;
	or.b32  	%r41, %r26, 449;
	cvt.rn.f32.s32 	%f740, %r391;
	sub.f32 	%f741, %f740, %f1;
	div.approx.f32 	%f66, %f741, %f287;
	setp.eq.f32 	%p104, %f66, 0f00000000;
	mov.f32 	%f1352, %f1353;
	@%p104 bra 	LBB0_38;
// %bb.37:                              // %L1405
	sin.approx.f32 	%f771, %f66;
	div.approx.f32 	%f1352, %f771, %f66;
LBB0_38:                                // %L1408
	cvt.rn.f32.s32 	%f774, %r41;
	sub.f32 	%f775, %f774, %f1;
	div.approx.f32 	%f71, %f775, %f287;
	setp.eq.f32 	%p110, %f71, 0f00000000;
	@%p110 bra 	LBB0_40;
// %bb.39:                              // %L1425
	sin.approx.f32 	%f805, %f71;
	div.approx.f32 	%f1353, %f805, %f71;
LBB0_40:                                // %L1428
	mul.lo.s32 	%r43, %r26, 127;
	cvt.rn.f32.s32 	%f808, %r43;
	div.approx.f32 	%f74, %f808, %f287;
	abs.f32 	%f1356, %f74;
	setp.lt.f32 	%p111, %f1356, 0f40000000;
	@%p111 bra 	LBB0_52;
// %bb.41:
	setp.gtu.f32 	%p112, %f1356, 0f4B800000;
	@%p112 bra 	LBB0_48;
	bra.uni 	LBB0_42;
LBB0_48:
	mov.b32 	%r45, %f1356;
	and.b32  	%r409, %r45, 8388607;
	or.b32  	%r16179, %r409, 1065353216;
	mov.b32 	%f1355, %r16179;
	add.s32 	%r410, %r45, -1073741824;
	and.b32  	%r16180, %r410, -8388608;
	setp.eq.s32 	%p118, %r16180, 0;
	@%p118 bra 	LBB0_51;
// %bb.49:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f819, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f818,%f819;
	// end inline asm
LBB0_50:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r411, %r16180, 192937984;
	add.s32 	%r412, %r411, %r16179;
	mov.b32 	%f820, %r412;
	mul.f32 	%f821, %f818, %f820;
	sub.f32 	%f822, %f820, %f821;
	fma.rn.f32 	%f823, %f822, %f818, %f821;
	sub.f32 	%f824, %f820, %f823;
	fma.rz.f32 	%f825, %f824, %f818, %f823;
	cvt.rzi.f32.f32 	%f826, %f825;
	sub.f32 	%f1355, %f820, %f826;
	sub.s32 	%r16180, %r16180, %r411;
	mov.b32 	%r16179, %f1355;
	setp.ne.s32 	%p119, %r16180, 0;
	setp.ne.s32 	%p120, %r16179, 0;
	and.pred  	%p121, %p119, %p120;
	@%p121 bra 	LBB0_50;
LBB0_51:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p122, %r45, 2139095039;
	selp.f32 	%f827, 0f7FFFFFFF, 0f4B800000, %p122;
	mul.f32 	%f828, %f1355, 0f34000000;
	mul.f32 	%f1356, %f827, %f828;
	bra.uni 	LBB0_52;
LBB0_42:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f811, %f1356, %f255;
	cvt.rzi.f32.f32 	%f1354, %f811;
	fma.rn.f32 	%f77, %f1354, 0fC0000000, %f1356;
	mov.b32 	%r44, %f77;
	setp.lt.u32 	%p113, %r44, 1073741824;
	@%p113 bra 	LBB0_47;
// %bb.43:
	setp.lt.u32 	%p114, %r44, -2147483647;
	@%p114 bra 	LBB0_45;
// %bb.44:
	add.f32 	%f816, %f1354, 0fBF800000;
	setp.lt.f32 	%p117, %f77, 0fC0000000;
	add.f32 	%f817, %f816, 0fBF800000;
	selp.f32 	%f1354, %f817, %f816, %p117;
	bra.uni 	LBB0_47;
LBB0_45:
	add.f32 	%f1354, %f1354, 0f3F800000;
	setp.ltu.f32 	%p115, %f77, 0f40800000;
	@%p115 bra 	LBB0_47;
// %bb.46:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f812, %f1354, 0f3F800000;
	fma.rn.f32 	%f814, %f255, 0fC0400000, %f77;
	setp.ge.f32 	%p116, %f814, 0f00000000;
	add.f32 	%f815, %f812, 0f3F800000;
	selp.f32 	%f1354, %f815, %f812, %p116;
LBB0_47:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1356, %f1354, 0fC0000000, %f1356;
LBB0_52:                                // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f829, %f1356;
	setp.gtu.f32 	%p123, %f829, 0f7F800000;
	@%p123 bra 	LBB0_54;
// %bb.53:
	mov.b32 	%r413, %f74;
	and.b32  	%r414, %r413, -2147483648;
	mov.b32 	%r415, %f1356;
	or.b32  	%r416, %r414, %r415;
	mov.b32 	%f1356, %r416;
LBB0_54:                                // %__nv_fmodf.exit
	add.s32 	%r425, %r43, 8128;
	cvt.rn.f32.s32 	%f860, %r425;
	div.approx.f32 	%f93, %f860, %f287;
	abs.f32 	%f1360, %f93;
	setp.lt.f32 	%p131, %f1360, 0f40000000;
	@%p131 bra 	LBB0_66;
// %bb.55:
	setp.gtu.f32 	%p132, %f1360, 0f4B800000;
	@%p132 bra 	LBB0_62;
	bra.uni 	LBB0_56;
LBB0_62:
	mov.b32 	%r53, %f1360;
	and.b32  	%r426, %r53, 8388607;
	or.b32  	%r16181, %r426, 1065353216;
	mov.b32 	%f1359, %r16181;
	add.s32 	%r427, %r53, -1073741824;
	and.b32  	%r16182, %r427, -8388608;
	setp.eq.s32 	%p138, %r16182, 0;
	@%p138 bra 	LBB0_65;
// %bb.63:                              // %__nv_fmaf_rn.exit4.i.i.i2256.preheader
	mov.f32 	%f871, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f870,%f871;
	// end inline asm
LBB0_64:                                // %__nv_fmaf_rn.exit4.i.i.i2256
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r428, %r16182, 192937984;
	add.s32 	%r429, %r428, %r16181;
	mov.b32 	%f872, %r429;
	mul.f32 	%f873, %f870, %f872;
	sub.f32 	%f874, %f872, %f873;
	fma.rn.f32 	%f875, %f874, %f870, %f873;
	sub.f32 	%f876, %f872, %f875;
	fma.rz.f32 	%f877, %f876, %f870, %f875;
	cvt.rzi.f32.f32 	%f878, %f877;
	sub.f32 	%f1359, %f872, %f878;
	sub.s32 	%r16182, %r16182, %r428;
	mov.b32 	%r16181, %f1359;
	setp.ne.s32 	%p139, %r16182, 0;
	setp.ne.s32 	%p140, %r16181, 0;
	and.pred  	%p141, %p139, %p140;
	@%p141 bra 	LBB0_64;
LBB0_65:                                // %__internal_fmodf_slowpath_mod.exit.i.i2258
	setp.gt.u32 	%p142, %r53, 2139095039;
	selp.f32 	%f879, 0f7FFFFFFF, 0f4B800000, %p142;
	mul.f32 	%f880, %f1359, 0f34000000;
	mul.f32 	%f1360, %f879, %f880;
	bra.uni 	LBB0_66;
LBB0_56:                                // %__nv_fast_fdividef.exit.i.i.i2228
	div.approx.f32 	%f863, %f1360, %f255;
	cvt.rzi.f32.f32 	%f1358, %f863;
	fma.rn.f32 	%f96, %f1358, 0fC0000000, %f1360;
	mov.b32 	%r52, %f96;
	setp.lt.u32 	%p133, %r52, 1073741824;
	@%p133 bra 	LBB0_61;
// %bb.57:
	setp.lt.u32 	%p134, %r52, -2147483647;
	@%p134 bra 	LBB0_59;
// %bb.58:
	add.f32 	%f868, %f1358, 0fBF800000;
	setp.lt.f32 	%p137, %f96, 0fC0000000;
	add.f32 	%f869, %f868, 0fBF800000;
	selp.f32 	%f1358, %f869, %f868, %p137;
	bra.uni 	LBB0_61;
LBB0_59:
	add.f32 	%f1358, %f1358, 0f3F800000;
	setp.ltu.f32 	%p135, %f96, 0f40800000;
	@%p135 bra 	LBB0_61;
// %bb.60:                              // %__nv_fmaf_rn.exit.i.i.i2233
	add.f32 	%f864, %f1358, 0f3F800000;
	fma.rn.f32 	%f866, %f255, 0fC0400000, %f96;
	setp.ge.f32 	%p136, %f866, 0f00000000;
	add.f32 	%f867, %f864, 0f3F800000;
	selp.f32 	%f1358, %f867, %f864, %p136;
LBB0_61:                                // %__internal_fmodf_fastpath_quot.exit.i.i2237
	fma.rn.f32 	%f1360, %f1358, 0fC0000000, %f1360;
LBB0_66:                                // %__internal_fmodf_kernel.exit.i2262
	shr.u32 	%r21, %r4, 2;
	abs.f32 	%f881, %f1360;
	setp.gtu.f32 	%p143, %f881, 0f7F800000;
	@%p143 bra 	LBB0_68;
// %bb.67:
	mov.b32 	%r430, %f93;
	and.b32  	%r431, %r430, -2147483648;
	mov.b32 	%r432, %f1360;
	or.b32  	%r433, %r431, %r432;
	mov.b32 	%f1360, %r433;
LBB0_68:                                // %__nv_fmodf.exit2263
	and.b32  	%r454, %r4, 3;
	mul.lo.s32 	%r455, %r454, %r21;
	shl.b32 	%r456, %r455, 1;
	neg.s32 	%r64, %r456;
	cvt.rn.f32.s32 	%f914, %r64;
	mov.f32 	%f915, 0f41000000;
	div.approx.f32 	%f110, %f914, %f915;
	abs.f32 	%f1364, %f110;
	setp.lt.f32 	%p151, %f1364, 0f40000000;
	@%p151 bra 	LBB0_80;
// %bb.69:
	setp.gtu.f32 	%p152, %f1364, 0f4B800000;
	@%p152 bra 	LBB0_76;
	bra.uni 	LBB0_70;
LBB0_76:
	mov.b32 	%r66, %f1364;
	and.b32  	%r457, %r66, 8388607;
	or.b32  	%r16183, %r457, 1065353216;
	mov.b32 	%f1363, %r16183;
	add.s32 	%r458, %r66, -1073741824;
	and.b32  	%r16184, %r458, -8388608;
	setp.eq.s32 	%p158, %r16184, 0;
	@%p158 bra 	LBB0_79;
// %bb.77:                              // %__nv_fmaf_rn.exit4.i.i.i2302.preheader
	mov.f32 	%f925, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f924,%f925;
	// end inline asm
LBB0_78:                                // %__nv_fmaf_rn.exit4.i.i.i2302
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r459, %r16184, 192937984;
	add.s32 	%r460, %r459, %r16183;
	mov.b32 	%f926, %r460;
	mul.f32 	%f927, %f924, %f926;
	sub.f32 	%f928, %f926, %f927;
	fma.rn.f32 	%f929, %f928, %f924, %f927;
	sub.f32 	%f930, %f926, %f929;
	fma.rz.f32 	%f931, %f930, %f924, %f929;
	cvt.rzi.f32.f32 	%f932, %f931;
	sub.f32 	%f1363, %f926, %f932;
	sub.s32 	%r16184, %r16184, %r459;
	mov.b32 	%r16183, %f1363;
	setp.ne.s32 	%p159, %r16184, 0;
	setp.ne.s32 	%p160, %r16183, 0;
	and.pred  	%p161, %p159, %p160;
	@%p161 bra 	LBB0_78;
LBB0_79:                                // %__internal_fmodf_slowpath_mod.exit.i.i2304
	setp.gt.u32 	%p162, %r66, 2139095039;
	selp.f32 	%f933, 0f7FFFFFFF, 0f4B800000, %p162;
	mul.f32 	%f934, %f1363, 0f34000000;
	mul.f32 	%f1364, %f933, %f934;
	bra.uni 	LBB0_80;
LBB0_70:                                // %__nv_fast_fdividef.exit.i.i.i2274
	div.approx.f32 	%f917, %f1364, %f255;
	cvt.rzi.f32.f32 	%f1362, %f917;
	fma.rn.f32 	%f113, %f1362, 0fC0000000, %f1364;
	mov.b32 	%r65, %f113;
	setp.lt.u32 	%p153, %r65, 1073741824;
	@%p153 bra 	LBB0_75;
// %bb.71:
	setp.lt.u32 	%p154, %r65, -2147483647;
	@%p154 bra 	LBB0_73;
// %bb.72:
	add.f32 	%f922, %f1362, 0fBF800000;
	setp.lt.f32 	%p157, %f113, 0fC0000000;
	add.f32 	%f923, %f922, 0fBF800000;
	selp.f32 	%f1362, %f923, %f922, %p157;
	bra.uni 	LBB0_75;
LBB0_73:
	add.f32 	%f1362, %f1362, 0f3F800000;
	setp.ltu.f32 	%p155, %f113, 0f40800000;
	@%p155 bra 	LBB0_75;
// %bb.74:                              // %__nv_fmaf_rn.exit.i.i.i2279
	add.f32 	%f918, %f1362, 0f3F800000;
	fma.rn.f32 	%f920, %f255, 0fC0400000, %f113;
	setp.ge.f32 	%p156, %f920, 0f00000000;
	add.f32 	%f921, %f918, 0f3F800000;
	selp.f32 	%f1362, %f921, %f918, %p156;
LBB0_75:                                // %__internal_fmodf_fastpath_quot.exit.i.i2283
	fma.rn.f32 	%f1364, %f1362, 0fC0000000, %f1364;
LBB0_80:                                // %__internal_fmodf_kernel.exit.i2308
	abs.f32 	%f935, %f1364;
	setp.gtu.f32 	%p163, %f935, 0f7F800000;
	@%p163 bra 	LBB0_82;
// %bb.81:
	mov.b32 	%r461, %f110;
	and.b32  	%r462, %r461, -2147483648;
	mov.b32 	%r463, %f1364;
	or.b32  	%r464, %r462, %r463;
	mov.b32 	%f1364, %r464;
LBB0_82:                                // %__nv_fmodf.exit2309
	shl.b32 	%r73, %r21, 3;
	sub.s32 	%r473, %r64, %r73;
	cvt.rn.f32.s32 	%f966, %r473;
	div.approx.f32 	%f129, %f966, %f915;
	abs.f32 	%f1368, %f129;
	setp.lt.f32 	%p171, %f1368, 0f40000000;
	@%p171 bra 	LBB0_94;
// %bb.83:
	setp.gtu.f32 	%p172, %f1368, 0f4B800000;
	@%p172 bra 	LBB0_90;
	bra.uni 	LBB0_84;
LBB0_90:
	mov.b32 	%r75, %f1368;
	and.b32  	%r474, %r75, 8388607;
	or.b32  	%r16185, %r474, 1065353216;
	mov.b32 	%f1367, %r16185;
	add.s32 	%r475, %r75, -1073741824;
	and.b32  	%r16186, %r475, -8388608;
	setp.eq.s32 	%p178, %r16186, 0;
	@%p178 bra 	LBB0_93;
// %bb.91:                              // %__nv_fmaf_rn.exit4.i.i.i2348.preheader
	mov.f32 	%f977, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f976,%f977;
	// end inline asm
LBB0_92:                                // %__nv_fmaf_rn.exit4.i.i.i2348
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r476, %r16186, 192937984;
	add.s32 	%r477, %r476, %r16185;
	mov.b32 	%f978, %r477;
	mul.f32 	%f979, %f976, %f978;
	sub.f32 	%f980, %f978, %f979;
	fma.rn.f32 	%f981, %f980, %f976, %f979;
	sub.f32 	%f982, %f978, %f981;
	fma.rz.f32 	%f983, %f982, %f976, %f981;
	cvt.rzi.f32.f32 	%f984, %f983;
	sub.f32 	%f1367, %f978, %f984;
	sub.s32 	%r16186, %r16186, %r476;
	mov.b32 	%r16185, %f1367;
	setp.ne.s32 	%p179, %r16186, 0;
	setp.ne.s32 	%p180, %r16185, 0;
	and.pred  	%p181, %p179, %p180;
	@%p181 bra 	LBB0_92;
LBB0_93:                                // %__internal_fmodf_slowpath_mod.exit.i.i2350
	setp.gt.u32 	%p182, %r75, 2139095039;
	selp.f32 	%f985, 0f7FFFFFFF, 0f4B800000, %p182;
	mul.f32 	%f986, %f1367, 0f34000000;
	mul.f32 	%f1368, %f985, %f986;
	bra.uni 	LBB0_94;
LBB0_84:                                // %__nv_fast_fdividef.exit.i.i.i2320
	div.approx.f32 	%f969, %f1368, %f255;
	cvt.rzi.f32.f32 	%f1366, %f969;
	fma.rn.f32 	%f132, %f1366, 0fC0000000, %f1368;
	mov.b32 	%r74, %f132;
	setp.lt.u32 	%p173, %r74, 1073741824;
	@%p173 bra 	LBB0_89;
// %bb.85:
	setp.lt.u32 	%p174, %r74, -2147483647;
	@%p174 bra 	LBB0_87;
// %bb.86:
	add.f32 	%f974, %f1366, 0fBF800000;
	setp.lt.f32 	%p177, %f132, 0fC0000000;
	add.f32 	%f975, %f974, 0fBF800000;
	selp.f32 	%f1366, %f975, %f974, %p177;
	bra.uni 	LBB0_89;
LBB0_87:
	add.f32 	%f1366, %f1366, 0f3F800000;
	setp.ltu.f32 	%p175, %f132, 0f40800000;
	@%p175 bra 	LBB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i2325
	add.f32 	%f970, %f1366, 0f3F800000;
	fma.rn.f32 	%f972, %f255, 0fC0400000, %f132;
	setp.ge.f32 	%p176, %f972, 0f00000000;
	add.f32 	%f973, %f970, 0f3F800000;
	selp.f32 	%f1366, %f973, %f970, %p176;
LBB0_89:                                // %__internal_fmodf_fastpath_quot.exit.i.i2329
	fma.rn.f32 	%f1368, %f1366, 0fC0000000, %f1368;
LBB0_94:                                // %__internal_fmodf_kernel.exit.i2354
	shl.b32 	%r13, %r4, 1;
	abs.f32 	%f987, %f1368;
	setp.gtu.f32 	%p183, %f987, 0f7F800000;
	@%p183 bra 	LBB0_96;
// %bb.95:
	mov.b32 	%r478, %f129;
	and.b32  	%r479, %r478, -2147483648;
	mov.b32 	%r480, %f1368;
	or.b32  	%r481, %r479, %r480;
	mov.b32 	%f1368, %r481;
LBB0_96:                                // %__nv_fmodf.exit2355
	and.b32  	%r502, %r13, 6;
	shl.b32 	%r503, %r502, 1;
	neg.s32 	%r86, %r503;
	mul.lo.s32 	%r87, %r86, %r21;
	cvt.rn.f32.s32 	%f1020, %r87;
	div.approx.f32 	%f146, %f1020, %f287;
	abs.f32 	%f1372, %f146;
	setp.lt.f32 	%p191, %f1372, 0f40000000;
	@%p191 bra 	LBB0_108;
// %bb.97:
	setp.gtu.f32 	%p192, %f1372, 0f4B800000;
	@%p192 bra 	LBB0_104;
	bra.uni 	LBB0_98;
LBB0_104:
	mov.b32 	%r89, %f1372;
	and.b32  	%r504, %r89, 8388607;
	or.b32  	%r16187, %r504, 1065353216;
	mov.b32 	%f1371, %r16187;
	add.s32 	%r505, %r89, -1073741824;
	and.b32  	%r16188, %r505, -8388608;
	setp.eq.s32 	%p198, %r16188, 0;
	@%p198 bra 	LBB0_107;
// %bb.105:                             // %__nv_fmaf_rn.exit4.i.i.i2394.preheader
	mov.f32 	%f1031, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1030,%f1031;
	// end inline asm
LBB0_106:                               // %__nv_fmaf_rn.exit4.i.i.i2394
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r506, %r16188, 192937984;
	add.s32 	%r507, %r506, %r16187;
	mov.b32 	%f1032, %r507;
	mul.f32 	%f1033, %f1030, %f1032;
	sub.f32 	%f1034, %f1032, %f1033;
	fma.rn.f32 	%f1035, %f1034, %f1030, %f1033;
	sub.f32 	%f1036, %f1032, %f1035;
	fma.rz.f32 	%f1037, %f1036, %f1030, %f1035;
	cvt.rzi.f32.f32 	%f1038, %f1037;
	sub.f32 	%f1371, %f1032, %f1038;
	sub.s32 	%r16188, %r16188, %r506;
	mov.b32 	%r16187, %f1371;
	setp.ne.s32 	%p199, %r16188, 0;
	setp.ne.s32 	%p200, %r16187, 0;
	and.pred  	%p201, %p199, %p200;
	@%p201 bra 	LBB0_106;
LBB0_107:                               // %__internal_fmodf_slowpath_mod.exit.i.i2396
	setp.gt.u32 	%p202, %r89, 2139095039;
	selp.f32 	%f1039, 0f7FFFFFFF, 0f4B800000, %p202;
	mul.f32 	%f1040, %f1371, 0f34000000;
	mul.f32 	%f1372, %f1039, %f1040;
	bra.uni 	LBB0_108;
LBB0_98:                                // %__nv_fast_fdividef.exit.i.i.i2366
	div.approx.f32 	%f1023, %f1372, %f255;
	cvt.rzi.f32.f32 	%f1370, %f1023;
	fma.rn.f32 	%f149, %f1370, 0fC0000000, %f1372;
	mov.b32 	%r88, %f149;
	setp.lt.u32 	%p193, %r88, 1073741824;
	@%p193 bra 	LBB0_103;
// %bb.99:
	setp.lt.u32 	%p194, %r88, -2147483647;
	@%p194 bra 	LBB0_101;
// %bb.100:
	add.f32 	%f1028, %f1370, 0fBF800000;
	setp.lt.f32 	%p197, %f149, 0fC0000000;
	add.f32 	%f1029, %f1028, 0fBF800000;
	selp.f32 	%f1370, %f1029, %f1028, %p197;
	bra.uni 	LBB0_103;
LBB0_101:
	add.f32 	%f1370, %f1370, 0f3F800000;
	setp.ltu.f32 	%p195, %f149, 0f40800000;
	@%p195 bra 	LBB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i2371
	add.f32 	%f1024, %f1370, 0f3F800000;
	fma.rn.f32 	%f1026, %f255, 0fC0400000, %f149;
	setp.ge.f32 	%p196, %f1026, 0f00000000;
	add.f32 	%f1027, %f1024, 0f3F800000;
	selp.f32 	%f1370, %f1027, %f1024, %p196;
LBB0_103:                               // %__internal_fmodf_fastpath_quot.exit.i.i2375
	fma.rn.f32 	%f1372, %f1370, 0fC0000000, %f1372;
LBB0_108:                               // %__internal_fmodf_kernel.exit.i2400
	abs.f32 	%f1041, %f1372;
	setp.gtu.f32 	%p203, %f1041, 0f7F800000;
	@%p203 bra 	LBB0_110;
// %bb.109:
	mov.b32 	%r508, %f146;
	and.b32  	%r509, %r508, -2147483648;
	mov.b32 	%r510, %f1372;
	or.b32  	%r511, %r509, %r510;
	mov.b32 	%f1372, %r511;
LBB0_110:                               // %__nv_fmodf.exit2401
	sub.s32 	%r520, %r87, %r73;
	cvt.rn.f32.s32 	%f1072, %r520;
	div.approx.f32 	%f165, %f1072, %f287;
	abs.f32 	%f1376, %f165;
	setp.lt.f32 	%p211, %f1376, 0f40000000;
	@%p211 bra 	LBB0_122;
// %bb.111:
	setp.gtu.f32 	%p212, %f1376, 0f4B800000;
	@%p212 bra 	LBB0_118;
	bra.uni 	LBB0_112;
LBB0_118:
	mov.b32 	%r97, %f1376;
	and.b32  	%r521, %r97, 8388607;
	or.b32  	%r16189, %r521, 1065353216;
	mov.b32 	%f1375, %r16189;
	add.s32 	%r522, %r97, -1073741824;
	and.b32  	%r16190, %r522, -8388608;
	setp.eq.s32 	%p218, %r16190, 0;
	@%p218 bra 	LBB0_121;
// %bb.119:                             // %__nv_fmaf_rn.exit4.i.i.i2440.preheader
	mov.f32 	%f1083, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1082,%f1083;
	// end inline asm
LBB0_120:                               // %__nv_fmaf_rn.exit4.i.i.i2440
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r523, %r16190, 192937984;
	add.s32 	%r524, %r523, %r16189;
	mov.b32 	%f1084, %r524;
	mul.f32 	%f1085, %f1082, %f1084;
	sub.f32 	%f1086, %f1084, %f1085;
	fma.rn.f32 	%f1087, %f1086, %f1082, %f1085;
	sub.f32 	%f1088, %f1084, %f1087;
	fma.rz.f32 	%f1089, %f1088, %f1082, %f1087;
	cvt.rzi.f32.f32 	%f1090, %f1089;
	sub.f32 	%f1375, %f1084, %f1090;
	sub.s32 	%r16190, %r16190, %r523;
	mov.b32 	%r16189, %f1375;
	setp.ne.s32 	%p219, %r16190, 0;
	setp.ne.s32 	%p220, %r16189, 0;
	and.pred  	%p221, %p219, %p220;
	@%p221 bra 	LBB0_120;
LBB0_121:                               // %__internal_fmodf_slowpath_mod.exit.i.i2442
	setp.gt.u32 	%p222, %r97, 2139095039;
	selp.f32 	%f1091, 0f7FFFFFFF, 0f4B800000, %p222;
	mul.f32 	%f1092, %f1375, 0f34000000;
	mul.f32 	%f1376, %f1091, %f1092;
	bra.uni 	LBB0_122;
LBB0_112:                               // %__nv_fast_fdividef.exit.i.i.i2412
	div.approx.f32 	%f1075, %f1376, %f255;
	cvt.rzi.f32.f32 	%f1374, %f1075;
	fma.rn.f32 	%f168, %f1374, 0fC0000000, %f1376;
	mov.b32 	%r96, %f168;
	setp.lt.u32 	%p213, %r96, 1073741824;
	@%p213 bra 	LBB0_117;
// %bb.113:
	setp.lt.u32 	%p214, %r96, -2147483647;
	@%p214 bra 	LBB0_115;
// %bb.114:
	add.f32 	%f1080, %f1374, 0fBF800000;
	setp.lt.f32 	%p217, %f168, 0fC0000000;
	add.f32 	%f1081, %f1080, 0fBF800000;
	selp.f32 	%f1374, %f1081, %f1080, %p217;
	bra.uni 	LBB0_117;
LBB0_115:
	add.f32 	%f1374, %f1374, 0f3F800000;
	setp.ltu.f32 	%p215, %f168, 0f40800000;
	@%p215 bra 	LBB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i2417
	add.f32 	%f1076, %f1374, 0f3F800000;
	fma.rn.f32 	%f1078, %f255, 0fC0400000, %f168;
	setp.ge.f32 	%p216, %f1078, 0f00000000;
	add.f32 	%f1079, %f1076, 0f3F800000;
	selp.f32 	%f1374, %f1079, %f1076, %p216;
LBB0_117:                               // %__internal_fmodf_fastpath_quot.exit.i.i2421
	fma.rn.f32 	%f1376, %f1374, 0fC0000000, %f1376;
LBB0_122:                               // %__internal_fmodf_kernel.exit.i2446
	shr.u32 	%r18, %r4, 1;
	shr.u32 	%r24, %r4, 3;
	abs.f32 	%f1093, %f1376;
	setp.gtu.f32 	%p223, %f1093, 0f7F800000;
	@%p223 bra 	LBB0_124;
// %bb.123:
	mov.b32 	%r525, %f165;
	and.b32  	%r526, %r525, -2147483648;
	mov.b32 	%r527, %f1376;
	or.b32  	%r528, %r526, %r527;
	mov.b32 	%f1376, %r528;
LBB0_124:                               // %__nv_fmodf.exit2447
	and.b32  	%r543, %r24, 2;
	and.b32  	%r544, %r18, 4;
	or.b32  	%r545, %r22, %r543;
	or.b32  	%r106, %r545, %r544;
	mul.lo.s32 	%r107, %r86, %r106;
	cvt.rn.f32.s32 	%f1126, %r107;
	mov.f32 	%f1127, 0f41800000;
	div.approx.f32 	%f182, %f1126, %f1127;
	abs.f32 	%f1380, %f182;
	setp.lt.f32 	%p231, %f1380, 0f40000000;
	@%p231 bra 	LBB0_136;
// %bb.125:
	setp.gtu.f32 	%p232, %f1380, 0f4B800000;
	@%p232 bra 	LBB0_132;
	bra.uni 	LBB0_126;
LBB0_132:
	mov.b32 	%r109, %f1380;
	and.b32  	%r546, %r109, 8388607;
	or.b32  	%r16191, %r546, 1065353216;
	mov.b32 	%f1379, %r16191;
	add.s32 	%r547, %r109, -1073741824;
	and.b32  	%r16192, %r547, -8388608;
	setp.eq.s32 	%p238, %r16192, 0;
	@%p238 bra 	LBB0_135;
// %bb.133:                             // %__nv_fmaf_rn.exit4.i.i.i2486.preheader
	mov.f32 	%f1137, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1136,%f1137;
	// end inline asm
LBB0_134:                               // %__nv_fmaf_rn.exit4.i.i.i2486
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r548, %r16192, 192937984;
	add.s32 	%r549, %r548, %r16191;
	mov.b32 	%f1138, %r549;
	mul.f32 	%f1139, %f1136, %f1138;
	sub.f32 	%f1140, %f1138, %f1139;
	fma.rn.f32 	%f1141, %f1140, %f1136, %f1139;
	sub.f32 	%f1142, %f1138, %f1141;
	fma.rz.f32 	%f1143, %f1142, %f1136, %f1141;
	cvt.rzi.f32.f32 	%f1144, %f1143;
	sub.f32 	%f1379, %f1138, %f1144;
	sub.s32 	%r16192, %r16192, %r548;
	mov.b32 	%r16191, %f1379;
	setp.ne.s32 	%p239, %r16192, 0;
	setp.ne.s32 	%p240, %r16191, 0;
	and.pred  	%p241, %p239, %p240;
	@%p241 bra 	LBB0_134;
LBB0_135:                               // %__internal_fmodf_slowpath_mod.exit.i.i2488
	setp.gt.u32 	%p242, %r109, 2139095039;
	selp.f32 	%f1145, 0f7FFFFFFF, 0f4B800000, %p242;
	mul.f32 	%f1146, %f1379, 0f34000000;
	mul.f32 	%f1380, %f1145, %f1146;
	bra.uni 	LBB0_136;
LBB0_126:                               // %__nv_fast_fdividef.exit.i.i.i2458
	div.approx.f32 	%f1129, %f1380, %f255;
	cvt.rzi.f32.f32 	%f1378, %f1129;
	fma.rn.f32 	%f185, %f1378, 0fC0000000, %f1380;
	mov.b32 	%r108, %f185;
	setp.lt.u32 	%p233, %r108, 1073741824;
	@%p233 bra 	LBB0_131;
// %bb.127:
	setp.lt.u32 	%p234, %r108, -2147483647;
	@%p234 bra 	LBB0_129;
// %bb.128:
	add.f32 	%f1134, %f1378, 0fBF800000;
	setp.lt.f32 	%p237, %f185, 0fC0000000;
	add.f32 	%f1135, %f1134, 0fBF800000;
	selp.f32 	%f1378, %f1135, %f1134, %p237;
	bra.uni 	LBB0_131;
LBB0_129:
	add.f32 	%f1378, %f1378, 0f3F800000;
	setp.ltu.f32 	%p235, %f185, 0f40800000;
	@%p235 bra 	LBB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i2463
	add.f32 	%f1130, %f1378, 0f3F800000;
	fma.rn.f32 	%f1132, %f255, 0fC0400000, %f185;
	setp.ge.f32 	%p236, %f1132, 0f00000000;
	add.f32 	%f1133, %f1130, 0f3F800000;
	selp.f32 	%f1378, %f1133, %f1130, %p236;
LBB0_131:                               // %__internal_fmodf_fastpath_quot.exit.i.i2467
	fma.rn.f32 	%f1380, %f1378, 0fC0000000, %f1380;
LBB0_136:                               // %__internal_fmodf_kernel.exit.i2492
	abs.f32 	%f1147, %f1380;
	setp.gtu.f32 	%p243, %f1147, 0f7F800000;
	@%p243 bra 	LBB0_138;
// %bb.137:
	mov.b32 	%r550, %f182;
	and.b32  	%r551, %r550, -2147483648;
	mov.b32 	%r552, %f1380;
	or.b32  	%r553, %r551, %r552;
	mov.b32 	%f1380, %r553;
LBB0_138:                               // %__nv_fmodf.exit2493
	shl.b32 	%r562, %r106, 3;
	sub.s32 	%r563, %r107, %r562;
	cvt.rn.f32.s32 	%f1178, %r563;
	div.approx.f32 	%f201, %f1178, %f1127;
	abs.f32 	%f1384, %f201;
	setp.lt.f32 	%p251, %f1384, 0f40000000;
	@%p251 bra 	LBB0_150;
// %bb.139:
	setp.gtu.f32 	%p252, %f1384, 0f4B800000;
	@%p252 bra 	LBB0_146;
	bra.uni 	LBB0_140;
LBB0_146:
	mov.b32 	%r117, %f1384;
	and.b32  	%r564, %r117, 8388607;
	or.b32  	%r16193, %r564, 1065353216;
	mov.b32 	%f1383, %r16193;
	add.s32 	%r565, %r117, -1073741824;
	and.b32  	%r16194, %r565, -8388608;
	setp.eq.s32 	%p258, %r16194, 0;
	@%p258 bra 	LBB0_149;
// %bb.147:                             // %__nv_fmaf_rn.exit4.i.i.i2532.preheader
	mov.f32 	%f1189, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1188,%f1189;
	// end inline asm
LBB0_148:                               // %__nv_fmaf_rn.exit4.i.i.i2532
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r566, %r16194, 192937984;
	add.s32 	%r567, %r566, %r16193;
	mov.b32 	%f1190, %r567;
	mul.f32 	%f1191, %f1188, %f1190;
	sub.f32 	%f1192, %f1190, %f1191;
	fma.rn.f32 	%f1193, %f1192, %f1188, %f1191;
	sub.f32 	%f1194, %f1190, %f1193;
	fma.rz.f32 	%f1195, %f1194, %f1188, %f1193;
	cvt.rzi.f32.f32 	%f1196, %f1195;
	sub.f32 	%f1383, %f1190, %f1196;
	sub.s32 	%r16194, %r16194, %r566;
	mov.b32 	%r16193, %f1383;
	setp.ne.s32 	%p259, %r16194, 0;
	setp.ne.s32 	%p260, %r16193, 0;
	and.pred  	%p261, %p259, %p260;
	@%p261 bra 	LBB0_148;
LBB0_149:                               // %__internal_fmodf_slowpath_mod.exit.i.i2534
	setp.gt.u32 	%p262, %r117, 2139095039;
	selp.f32 	%f1197, 0f7FFFFFFF, 0f4B800000, %p262;
	mul.f32 	%f1198, %f1383, 0f34000000;
	mul.f32 	%f1384, %f1197, %f1198;
	bra.uni 	LBB0_150;
LBB0_140:                               // %__nv_fast_fdividef.exit.i.i.i2504
	div.approx.f32 	%f1181, %f1384, %f255;
	cvt.rzi.f32.f32 	%f1382, %f1181;
	fma.rn.f32 	%f204, %f1382, 0fC0000000, %f1384;
	mov.b32 	%r116, %f204;
	setp.lt.u32 	%p253, %r116, 1073741824;
	@%p253 bra 	LBB0_145;
// %bb.141:
	setp.lt.u32 	%p254, %r116, -2147483647;
	@%p254 bra 	LBB0_143;
// %bb.142:
	add.f32 	%f1186, %f1382, 0fBF800000;
	setp.lt.f32 	%p257, %f204, 0fC0000000;
	add.f32 	%f1187, %f1186, 0fBF800000;
	selp.f32 	%f1382, %f1187, %f1186, %p257;
	bra.uni 	LBB0_145;
LBB0_143:
	add.f32 	%f1382, %f1382, 0f3F800000;
	setp.ltu.f32 	%p255, %f204, 0f40800000;
	@%p255 bra 	LBB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i2509
	add.f32 	%f1182, %f1382, 0f3F800000;
	fma.rn.f32 	%f1184, %f255, 0fC0400000, %f204;
	setp.ge.f32 	%p256, %f1184, 0f00000000;
	add.f32 	%f1185, %f1182, 0f3F800000;
	selp.f32 	%f1382, %f1185, %f1182, %p256;
LBB0_145:                               // %__internal_fmodf_fastpath_quot.exit.i.i2513
	fma.rn.f32 	%f1384, %f1382, 0fC0000000, %f1384;
LBB0_150:                               // %__internal_fmodf_kernel.exit.i2538
	and.b32  	%r9, %r4, 16;
	abs.f32 	%f1199, %f1384;
	setp.gtu.f32 	%p263, %f1199, 0f7F800000;
	@%p263 bra 	LBB0_152;
// %bb.151:
	mov.b32 	%r568, %f201;
	and.b32  	%r569, %r568, -2147483648;
	mov.b32 	%r570, %f1384;
	or.b32  	%r571, %r569, %r570;
	mov.b32 	%f1384, %r571;
LBB0_152:                               // %__nv_fmodf.exit2539
	cvt.u16.u32 	%rs1, %r4;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	add.s32 	%r593, %r259, %r9;
	neg.s32 	%r594, %r593;
	mad.lo.s32 	%r595, %r25, -32, %r594;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r596, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r597, %rs21;
	sub.s32 	%r598, %r595, %r597;
	shl.b32 	%r599, %r598, 1;
	cvt.rn.f32.s32 	%f1232, %r599;
	div.approx.f32 	%f218, %f1232, %f287;
	abs.f32 	%f1388, %f218;
	setp.lt.f32 	%p271, %f1388, 0f40000000;
	@%p271 bra 	LBB0_164;
// %bb.153:
	setp.gtu.f32 	%p272, %f1388, 0f4B800000;
	@%p272 bra 	LBB0_160;
	bra.uni 	LBB0_154;
LBB0_160:
	mov.b32 	%r130, %f1388;
	and.b32  	%r600, %r130, 8388607;
	or.b32  	%r16195, %r600, 1065353216;
	mov.b32 	%f1387, %r16195;
	add.s32 	%r601, %r130, -1073741824;
	and.b32  	%r16196, %r601, -8388608;
	setp.eq.s32 	%p278, %r16196, 0;
	@%p278 bra 	LBB0_163;
// %bb.161:                             // %__nv_fmaf_rn.exit4.i.i.i2578.preheader
	mov.f32 	%f1243, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1242,%f1243;
	// end inline asm
LBB0_162:                               // %__nv_fmaf_rn.exit4.i.i.i2578
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r602, %r16196, 192937984;
	add.s32 	%r603, %r602, %r16195;
	mov.b32 	%f1244, %r603;
	mul.f32 	%f1245, %f1242, %f1244;
	sub.f32 	%f1246, %f1244, %f1245;
	fma.rn.f32 	%f1247, %f1246, %f1242, %f1245;
	sub.f32 	%f1248, %f1244, %f1247;
	fma.rz.f32 	%f1249, %f1248, %f1242, %f1247;
	cvt.rzi.f32.f32 	%f1250, %f1249;
	sub.f32 	%f1387, %f1244, %f1250;
	sub.s32 	%r16196, %r16196, %r602;
	mov.b32 	%r16195, %f1387;
	setp.ne.s32 	%p279, %r16196, 0;
	setp.ne.s32 	%p280, %r16195, 0;
	and.pred  	%p281, %p279, %p280;
	@%p281 bra 	LBB0_162;
LBB0_163:                               // %__internal_fmodf_slowpath_mod.exit.i.i2580
	setp.gt.u32 	%p282, %r130, 2139095039;
	selp.f32 	%f1251, 0f7FFFFFFF, 0f4B800000, %p282;
	mul.f32 	%f1252, %f1387, 0f34000000;
	mul.f32 	%f1388, %f1251, %f1252;
	bra.uni 	LBB0_164;
LBB0_154:                               // %__nv_fast_fdividef.exit.i.i.i2550
	div.approx.f32 	%f1235, %f1388, %f255;
	cvt.rzi.f32.f32 	%f1386, %f1235;
	fma.rn.f32 	%f221, %f1386, 0fC0000000, %f1388;
	mov.b32 	%r129, %f221;
	setp.lt.u32 	%p273, %r129, 1073741824;
	@%p273 bra 	LBB0_159;
// %bb.155:
	setp.lt.u32 	%p274, %r129, -2147483647;
	@%p274 bra 	LBB0_157;
// %bb.156:
	add.f32 	%f1240, %f1386, 0fBF800000;
	setp.lt.f32 	%p277, %f221, 0fC0000000;
	add.f32 	%f1241, %f1240, 0fBF800000;
	selp.f32 	%f1386, %f1241, %f1240, %p277;
	bra.uni 	LBB0_159;
LBB0_157:
	add.f32 	%f1386, %f1386, 0f3F800000;
	setp.ltu.f32 	%p275, %f221, 0f40800000;
	@%p275 bra 	LBB0_159;
// %bb.158:                             // %__nv_fmaf_rn.exit.i.i.i2555
	add.f32 	%f1236, %f1386, 0f3F800000;
	fma.rn.f32 	%f1238, %f255, 0fC0400000, %f221;
	setp.ge.f32 	%p276, %f1238, 0f00000000;
	add.f32 	%f1239, %f1236, 0f3F800000;
	selp.f32 	%f1386, %f1239, %f1236, %p276;
LBB0_159:                               // %__internal_fmodf_fastpath_quot.exit.i.i2559
	fma.rn.f32 	%f1388, %f1386, 0fC0000000, %f1388;
LBB0_164:                               // %__internal_fmodf_kernel.exit.i2584
	sub.s32 	%r128, %r595, %r596;
	abs.f32 	%f1253, %f1388;
	setp.gtu.f32 	%p283, %f1253, 0f7F800000;
	@%p283 bra 	LBB0_166;
// %bb.165:
	mov.b32 	%r604, %f218;
	and.b32  	%r605, %r604, -2147483648;
	mov.b32 	%r606, %f1388;
	or.b32  	%r607, %r605, %r606;
	mov.b32 	%f1388, %r607;
LBB0_166:                               // %__nv_fmodf.exit2585
	shl.b32 	%r616, %r128, 1;
	cvt.rn.f32.s32 	%f1284, %r616;
	div.approx.f32 	%f237, %f1284, %f287;
	abs.f32 	%f1392, %f237;
	setp.lt.f32 	%p291, %f1392, 0f40000000;
	@%p291 bra 	LBB0_178;
// %bb.167:
	setp.gtu.f32 	%p292, %f1392, 0f4B800000;
	@%p292 bra 	LBB0_174;
	bra.uni 	LBB0_168;
LBB0_174:
	mov.b32 	%r138, %f1392;
	and.b32  	%r617, %r138, 8388607;
	or.b32  	%r16197, %r617, 1065353216;
	mov.b32 	%f1391, %r16197;
	add.s32 	%r618, %r138, -1073741824;
	and.b32  	%r16198, %r618, -8388608;
	setp.eq.s32 	%p298, %r16198, 0;
	@%p298 bra 	LBB0_177;
// %bb.175:                             // %__nv_fmaf_rn.exit4.i.i.i2624.preheader
	mov.f32 	%f1295, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1294,%f1295;
	// end inline asm
LBB0_176:                               // %__nv_fmaf_rn.exit4.i.i.i2624
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r619, %r16198, 192937984;
	add.s32 	%r620, %r619, %r16197;
	mov.b32 	%f1296, %r620;
	mul.f32 	%f1297, %f1294, %f1296;
	sub.f32 	%f1298, %f1296, %f1297;
	fma.rn.f32 	%f1299, %f1298, %f1294, %f1297;
	sub.f32 	%f1300, %f1296, %f1299;
	fma.rz.f32 	%f1301, %f1300, %f1294, %f1299;
	cvt.rzi.f32.f32 	%f1302, %f1301;
	sub.f32 	%f1391, %f1296, %f1302;
	sub.s32 	%r16198, %r16198, %r619;
	mov.b32 	%r16197, %f1391;
	setp.ne.s32 	%p299, %r16198, 0;
	setp.ne.s32 	%p300, %r16197, 0;
	and.pred  	%p301, %p299, %p300;
	@%p301 bra 	LBB0_176;
LBB0_177:                               // %__internal_fmodf_slowpath_mod.exit.i.i2626
	setp.gt.u32 	%p302, %r138, 2139095039;
	selp.f32 	%f1303, 0f7FFFFFFF, 0f4B800000, %p302;
	mul.f32 	%f1304, %f1391, 0f34000000;
	mul.f32 	%f1392, %f1303, %f1304;
	bra.uni 	LBB0_178;
LBB0_168:                               // %__nv_fast_fdividef.exit.i.i.i2596
	div.approx.f32 	%f1287, %f1392, %f255;
	cvt.rzi.f32.f32 	%f1390, %f1287;
	fma.rn.f32 	%f240, %f1390, 0fC0000000, %f1392;
	mov.b32 	%r137, %f240;
	setp.lt.u32 	%p293, %r137, 1073741824;
	@%p293 bra 	LBB0_173;
// %bb.169:
	setp.lt.u32 	%p294, %r137, -2147483647;
	@%p294 bra 	LBB0_171;
// %bb.170:
	add.f32 	%f1292, %f1390, 0fBF800000;
	setp.lt.f32 	%p297, %f240, 0fC0000000;
	add.f32 	%f1293, %f1292, 0fBF800000;
	selp.f32 	%f1390, %f1293, %f1292, %p297;
	bra.uni 	LBB0_173;
LBB0_171:
	add.f32 	%f1390, %f1390, 0f3F800000;
	setp.ltu.f32 	%p295, %f240, 0f40800000;
	@%p295 bra 	LBB0_173;
// %bb.172:                             // %__nv_fmaf_rn.exit.i.i.i2601
	add.f32 	%f1288, %f1390, 0f3F800000;
	fma.rn.f32 	%f1290, %f255, 0fC0400000, %f240;
	setp.ge.f32 	%p296, %f1290, 0f00000000;
	add.f32 	%f1291, %f1288, 0f3F800000;
	selp.f32 	%f1390, %f1291, %f1288, %p296;
LBB0_173:                               // %__internal_fmodf_fastpath_quot.exit.i.i2605
	fma.rn.f32 	%f1392, %f1390, 0fC0000000, %f1392;
LBB0_178:                               // %__internal_fmodf_kernel.exit.i2630
	abs.f32 	%f1305, %f1392;
	setp.gtu.f32 	%p303, %f1305, 0f7F800000;
	@%p303 bra 	LBB0_180;
// %bb.179:
	mov.b32 	%r621, %f237;
	and.b32  	%r622, %r621, -2147483648;
	mov.b32 	%r623, %f1392;
	or.b32  	%r624, %r622, %r623;
	mov.b32 	%f1392, %r624;
LBB0_180:                               // %__nv_fmodf.exit2631
	setp.le.s32 	%p311, %r6, %r5;
	mov.u32 	%r16178, 0;
	@%p311 bra 	LBB0_187;
// %bb.181:                             // %L2193.lr.ph
	mov.f32 	%f259, 0f44004000;
	div.approx.f32 	%f260, %f258, %f259;
	div.approx.f32 	%f294, %f292, %f259;
	div.approx.f32 	%f329, %f327, %f259;
	div.approx.f32 	%f363, %f361, %f259;
	div.approx.f32 	%f398, %f396, %f259;
	div.approx.f32 	%f432, %f430, %f259;
	div.approx.f32 	%f467, %f465, %f259;
	div.approx.f32 	%f501, %f499, %f259;
	div.approx.f32 	%f536, %f534, %f259;
	div.approx.f32 	%f570, %f568, %f259;
	div.approx.f32 	%f605, %f603, %f259;
	div.approx.f32 	%f639, %f637, %f259;
	div.approx.f32 	%f674, %f672, %f259;
	div.approx.f32 	%f708, %f706, %f259;
	div.approx.f32 	%f743, %f741, %f259;
	div.approx.f32 	%f777, %f775, %f259;
	abs.f32 	%f261, %f260;
	abs.f32 	%f295, %f294;
	abs.f32 	%f330, %f329;
	abs.f32 	%f364, %f363;
	abs.f32 	%f399, %f398;
	abs.f32 	%f433, %f432;
	abs.f32 	%f468, %f467;
	abs.f32 	%f502, %f501;
	abs.f32 	%f537, %f536;
	abs.f32 	%f571, %f570;
	abs.f32 	%f606, %f605;
	abs.f32 	%f640, %f639;
	abs.f32 	%f675, %f674;
	abs.f32 	%f709, %f708;
	abs.f32 	%f744, %f743;
	abs.f32 	%f778, %f777;
	setp.gt.f32 	%p15, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p21, %f295, 0f4B800000;
	mul.f32 	%f296, %f294, 0f00000000;
	setp.gt.f32 	%p27, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p33, %f364, 0f4B800000;
	mul.f32 	%f365, %f363, 0f00000000;
	setp.gt.f32 	%p39, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p45, %f433, 0f4B800000;
	mul.f32 	%f434, %f432, 0f00000000;
	setp.gt.f32 	%p51, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	setp.gt.f32 	%p57, %f502, 0f4B800000;
	mul.f32 	%f503, %f501, 0f00000000;
	setp.gt.f32 	%p63, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	setp.gt.f32 	%p69, %f571, 0f4B800000;
	mul.f32 	%f572, %f570, 0f00000000;
	setp.gt.f32 	%p75, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	setp.gt.f32 	%p81, %f640, 0f4B800000;
	mul.f32 	%f641, %f639, 0f00000000;
	setp.gt.f32 	%p87, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	setp.gt.f32 	%p93, %f709, 0f4B800000;
	mul.f32 	%f710, %f708, 0f00000000;
	setp.gt.f32 	%p99, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	setp.gt.f32 	%p105, %f778, 0f4B800000;
	mul.f32 	%f779, %f777, 0f00000000;
	selp.f32 	%f263, %f262, %f260, %p15;
	selp.f32 	%f297, %f296, %f294, %p21;
	selp.f32 	%f332, %f331, %f329, %p27;
	selp.f32 	%f366, %f365, %f363, %p33;
	selp.f32 	%f401, %f400, %f398, %p39;
	selp.f32 	%f435, %f434, %f432, %p45;
	selp.f32 	%f470, %f469, %f467, %p51;
	selp.f32 	%f504, %f503, %f501, %p57;
	selp.f32 	%f539, %f538, %f536, %p63;
	selp.f32 	%f573, %f572, %f570, %p69;
	selp.f32 	%f608, %f607, %f605, %p75;
	selp.f32 	%f642, %f641, %f639, %p81;
	selp.f32 	%f677, %f676, %f674, %p87;
	selp.f32 	%f711, %f710, %f708, %p93;
	selp.f32 	%f746, %f745, %f743, %p99;
	selp.f32 	%f780, %f779, %f777, %p105;
	add.f32 	%f830, %f1356, %f1356;
	add.f32 	%f882, %f1360, %f1360;
	add.f32 	%f936, %f1364, %f1364;
	add.f32 	%f988, %f1368, %f1368;
	add.f32 	%f1148, %f1380, %f1380;
	add.f32 	%f1200, %f1384, %f1384;
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f298, %f297, %f297;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f367, %f366, %f366;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f436, %f435, %f435;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f505, %f504, %f504;
	add.f32 	%f540, %f539, %f539;
	add.f32 	%f574, %f573, %f573;
	add.f32 	%f609, %f608, %f608;
	add.f32 	%f643, %f642, %f642;
	add.f32 	%f678, %f677, %f677;
	add.f32 	%f712, %f711, %f711;
	add.f32 	%f747, %f746, %f746;
	add.f32 	%f781, %f780, %f780;
	mov.b32 	%r417, %f830;
	mov.b32 	%r446, %f882;
	mov.b32 	%r465, %f936;
	mov.b32 	%r494, %f988;
	add.f32 	%f1042, %f1372, %f1372;
	add.f32 	%f1094, %f1376, %f1376;
	mov.b32 	%r554, %f1148;
	mov.b32 	%r584, %f1200;
	mov.b32 	%r266, %f264;
	mov.b32 	%r273, %f298;
	mov.b32 	%r284, %f333;
	mov.b32 	%r291, %f367;
	mov.b32 	%r302, %f402;
	mov.b32 	%r309, %f436;
	mov.b32 	%r320, %f471;
	mov.b32 	%r327, %f505;
	mov.b32 	%r338, %f540;
	mov.b32 	%r345, %f574;
	mov.b32 	%r356, %f609;
	mov.b32 	%r363, %f643;
	mov.b32 	%r374, %f678;
	mov.b32 	%r381, %f712;
	mov.b32 	%r392, %f747;
	mov.b32 	%r399, %f781;
	and.b32  	%r418, %r417, -2147483648;
	and.b32  	%r447, %r446, -2147483648;
	and.b32  	%r466, %r465, -2147483648;
	and.b32  	%r495, %r494, -2147483648;
	mov.b32 	%r512, %f1042;
	mov.b32 	%r535, %f1094;
	and.b32  	%r555, %r554, -2147483648;
	and.b32  	%r585, %r584, -2147483648;
	add.f32 	%f1254, %f1388, %f1388;
	and.b32  	%r267, %r266, -2147483648;
	and.b32  	%r274, %r273, -2147483648;
	and.b32  	%r285, %r284, -2147483648;
	and.b32  	%r292, %r291, -2147483648;
	and.b32  	%r303, %r302, -2147483648;
	and.b32  	%r310, %r309, -2147483648;
	and.b32  	%r321, %r320, -2147483648;
	and.b32  	%r328, %r327, -2147483648;
	and.b32  	%r339, %r338, -2147483648;
	and.b32  	%r346, %r345, -2147483648;
	and.b32  	%r357, %r356, -2147483648;
	and.b32  	%r364, %r363, -2147483648;
	and.b32  	%r375, %r374, -2147483648;
	and.b32  	%r382, %r381, -2147483648;
	and.b32  	%r393, %r392, -2147483648;
	and.b32  	%r400, %r399, -2147483648;
	or.b32  	%r419, %r418, 1056964608;
	or.b32  	%r448, %r447, 1056964608;
	or.b32  	%r467, %r466, 1056964608;
	or.b32  	%r496, %r495, 1056964608;
	and.b32  	%r513, %r512, -2147483648;
	and.b32  	%r536, %r535, -2147483648;
	or.b32  	%r556, %r555, 1056964608;
	or.b32  	%r586, %r585, 1056964608;
	mov.b32 	%r608, %f1254;
	or.b32  	%r268, %r267, 1056964608;
	or.b32  	%r275, %r274, 1056964608;
	or.b32  	%r286, %r285, 1056964608;
	or.b32  	%r293, %r292, 1056964608;
	or.b32  	%r304, %r303, 1056964608;
	or.b32  	%r311, %r310, 1056964608;
	or.b32  	%r322, %r321, 1056964608;
	or.b32  	%r329, %r328, 1056964608;
	or.b32  	%r340, %r339, 1056964608;
	or.b32  	%r347, %r346, 1056964608;
	or.b32  	%r358, %r357, 1056964608;
	or.b32  	%r365, %r364, 1056964608;
	or.b32  	%r376, %r375, 1056964608;
	or.b32  	%r383, %r382, 1056964608;
	or.b32  	%r394, %r393, 1056964608;
	or.b32  	%r401, %r400, 1056964608;
	mov.b32 	%f831, %r419;
	mov.b32 	%f883, %r448;
	mov.b32 	%f937, %r467;
	mov.b32 	%f989, %r496;
	or.b32  	%r514, %r513, 1056964608;
	or.b32  	%r537, %r536, 1056964608;
	mov.b32 	%f1149, %r556;
	mov.b32 	%f1201, %r586;
	and.b32  	%r609, %r608, -2147483648;
	mov.b32 	%f265, %r268;
	mov.b32 	%f299, %r275;
	mov.b32 	%f334, %r286;
	mov.b32 	%f368, %r293;
	mov.b32 	%f403, %r304;
	mov.b32 	%f437, %r311;
	mov.b32 	%f472, %r322;
	mov.b32 	%f506, %r329;
	mov.b32 	%f541, %r340;
	mov.b32 	%f575, %r347;
	mov.b32 	%f610, %r358;
	mov.b32 	%f644, %r365;
	mov.b32 	%f679, %r376;
	mov.b32 	%f713, %r383;
	mov.b32 	%f748, %r394;
	mov.b32 	%f782, %r401;
	add.f32 	%f832, %f830, %f831;
	abs.f32 	%f834, %f830;
	add.f32 	%f884, %f882, %f883;
	abs.f32 	%f886, %f882;
	add.f32 	%f938, %f936, %f937;
	abs.f32 	%f940, %f936;
	add.f32 	%f990, %f988, %f989;
	abs.f32 	%f992, %f988;
	mov.b32 	%f1043, %r514;
	mov.b32 	%f1095, %r537;
	add.f32 	%f1150, %f1148, %f1149;
	abs.f32 	%f1152, %f1148;
	add.f32 	%f1202, %f1200, %f1201;
	abs.f32 	%f1204, %f1200;
	or.b32  	%r610, %r609, 1056964608;
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f300, %f298, %f299;
	abs.f32 	%f302, %f298;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f369, %f367, %f368;
	abs.f32 	%f371, %f367;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f438, %f436, %f437;
	abs.f32 	%f440, %f436;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f507, %f505, %f506;
	abs.f32 	%f509, %f505;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f576, %f574, %f575;
	abs.f32 	%f578, %f574;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f714, %f712, %f713;
	abs.f32 	%f716, %f712;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	add.f32 	%f783, %f781, %f782;
	abs.f32 	%f785, %f781;
	cvt.rzi.f32.f32 	%f833, %f832;
	setp.gt.f32 	%p124, %f834, 0f4B000000;
	cvt.rzi.f32.f32 	%f885, %f884;
	setp.gt.f32 	%p144, %f886, 0f4B000000;
	cvt.rzi.f32.f32 	%f939, %f938;
	setp.gt.f32 	%p164, %f940, 0f4B000000;
	cvt.rzi.f32.f32 	%f991, %f990;
	setp.gt.f32 	%p184, %f992, 0f4B000000;
	add.f32 	%f1044, %f1042, %f1043;
	abs.f32 	%f1046, %f1042;
	add.f32 	%f1096, %f1094, %f1095;
	abs.f32 	%f1098, %f1094;
	cvt.rzi.f32.f32 	%f1151, %f1150;
	setp.gt.f32 	%p244, %f1152, 0f4B000000;
	cvt.rzi.f32.f32 	%f1203, %f1202;
	setp.gt.f32 	%p264, %f1204, 0f4B000000;
	mov.b32 	%f1255, %r610;
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p16, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f301, %f300;
	setp.gt.f32 	%p22, %f302, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p28, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f370, %f369;
	setp.gt.f32 	%p34, %f371, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p40, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f439, %f438;
	setp.gt.f32 	%p46, %f440, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p52, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f508, %f507;
	setp.gt.f32 	%p58, %f509, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p64, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f577, %f576;
	setp.gt.f32 	%p70, %f578, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p76, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p82, %f647, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p88, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f715, %f714;
	setp.gt.f32 	%p94, %f716, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p100, %f751, 0f4B000000;
	cvt.rzi.f32.f32 	%f784, %f783;
	setp.gt.f32 	%p106, %f785, 0f4B000000;
	selp.f32 	%f835, %f830, %f833, %p124;
	cvt.rzi.f32.f32 	%f836, %f830;
	setp.lt.f32 	%p125, %f834, 0f3F000000;
	selp.f32 	%f887, %f882, %f885, %p144;
	cvt.rzi.f32.f32 	%f888, %f882;
	setp.lt.f32 	%p145, %f886, 0f3F000000;
	selp.f32 	%f941, %f936, %f939, %p164;
	cvt.rzi.f32.f32 	%f942, %f936;
	setp.lt.f32 	%p165, %f940, 0f3F000000;
	selp.f32 	%f993, %f988, %f991, %p184;
	cvt.rzi.f32.f32 	%f994, %f988;
	setp.lt.f32 	%p185, %f992, 0f3F000000;
	cvt.rzi.f32.f32 	%f1045, %f1044;
	setp.gt.f32 	%p204, %f1046, 0f4B000000;
	cvt.rzi.f32.f32 	%f1097, %f1096;
	setp.gt.f32 	%p224, %f1098, 0f4B000000;
	selp.f32 	%f1153, %f1148, %f1151, %p244;
	cvt.rzi.f32.f32 	%f1154, %f1148;
	setp.lt.f32 	%p245, %f1152, 0f3F000000;
	selp.f32 	%f1205, %f1200, %f1203, %p264;
	cvt.rzi.f32.f32 	%f1206, %f1200;
	setp.lt.f32 	%p265, %f1204, 0f3F000000;
	add.f32 	%f1256, %f1254, %f1255;
	abs.f32 	%f1258, %f1254;
	selp.f32 	%f269, %f264, %f267, %p16;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p17, %f268, 0f3F000000;
	selp.f32 	%f303, %f298, %f301, %p22;
	cvt.rzi.f32.f32 	%f304, %f298;
	setp.lt.f32 	%p23, %f302, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p28;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p29, %f337, 0f3F000000;
	selp.f32 	%f372, %f367, %f370, %p34;
	cvt.rzi.f32.f32 	%f373, %f367;
	setp.lt.f32 	%p35, %f371, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p40;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p41, %f406, 0f3F000000;
	selp.f32 	%f441, %f436, %f439, %p46;
	cvt.rzi.f32.f32 	%f442, %f436;
	setp.lt.f32 	%p47, %f440, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p52;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p53, %f475, 0f3F000000;
	selp.f32 	%f510, %f505, %f508, %p58;
	cvt.rzi.f32.f32 	%f511, %f505;
	setp.lt.f32 	%p59, %f509, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p64;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p65, %f544, 0f3F000000;
	selp.f32 	%f579, %f574, %f577, %p70;
	cvt.rzi.f32.f32 	%f580, %f574;
	setp.lt.f32 	%p71, %f578, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p76;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p77, %f613, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p82;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p83, %f647, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p88;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p89, %f682, 0f3F000000;
	selp.f32 	%f717, %f712, %f715, %p94;
	cvt.rzi.f32.f32 	%f718, %f712;
	setp.lt.f32 	%p95, %f716, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p100;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p101, %f751, 0f3F000000;
	selp.f32 	%f786, %f781, %f784, %p106;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p107, %f785, 0f3F000000;
	selp.f32 	%f837, %f836, %f835, %p125;
	selp.f32 	%f889, %f888, %f887, %p145;
	selp.f32 	%f943, %f942, %f941, %p165;
	selp.f32 	%f995, %f994, %f993, %p185;
	selp.f32 	%f1047, %f1042, %f1045, %p204;
	cvt.rzi.f32.f32 	%f1048, %f1042;
	setp.lt.f32 	%p205, %f1046, 0f3F000000;
	selp.f32 	%f1099, %f1094, %f1097, %p224;
	cvt.rzi.f32.f32 	%f1100, %f1094;
	setp.lt.f32 	%p225, %f1098, 0f3F000000;
	selp.f32 	%f1155, %f1154, %f1153, %p245;
	selp.f32 	%f1207, %f1206, %f1205, %p265;
	cvt.rzi.f32.f32 	%f1257, %f1256;
	setp.gt.f32 	%p284, %f1258, 0f4B000000;
	selp.f32 	%f271, %f270, %f269, %p17;
	selp.f32 	%f305, %f304, %f303, %p23;
	selp.f32 	%f340, %f339, %f338, %p29;
	selp.f32 	%f374, %f373, %f372, %p35;
	selp.f32 	%f409, %f408, %f407, %p41;
	selp.f32 	%f443, %f442, %f441, %p47;
	selp.f32 	%f478, %f477, %f476, %p53;
	selp.f32 	%f512, %f511, %f510, %p59;
	selp.f32 	%f547, %f546, %f545, %p65;
	selp.f32 	%f581, %f580, %f579, %p71;
	selp.f32 	%f616, %f615, %f614, %p77;
	selp.f32 	%f650, %f649, %f648, %p83;
	selp.f32 	%f685, %f684, %f683, %p89;
	selp.f32 	%f719, %f718, %f717, %p95;
	selp.f32 	%f754, %f753, %f752, %p101;
	selp.f32 	%f788, %f787, %f786, %p107;
	fma.rn.f32 	%f838, %f837, 0fBF000000, %f1356;
	fma.rn.f32 	%f890, %f889, 0fBF000000, %f1360;
	fma.rn.f32 	%f944, %f943, 0fBF000000, %f1364;
	fma.rn.f32 	%f996, %f995, 0fBF000000, %f1368;
	selp.f32 	%f1049, %f1048, %f1047, %p205;
	selp.f32 	%f1101, %f1100, %f1099, %p225;
	fma.rn.f32 	%f1156, %f1155, 0fBF000000, %f1380;
	fma.rn.f32 	%f1208, %f1207, 0fBF000000, %f1384;
	selp.f32 	%f1259, %f1254, %f1257, %p284;
	cvt.rzi.f32.f32 	%f1260, %f1254;
	setp.lt.f32 	%p285, %f1258, 0f3F000000;
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f306, %f305, 0fBF000000, %f297;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f375, %f374, 0fBF000000, %f366;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f444, %f443, 0fBF000000, %f435;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f513, %f512, 0fBF000000, %f504;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f582, %f581, 0fBF000000, %f573;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f642;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f720, %f719, 0fBF000000, %f711;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f780;
	mul.f32 	%f839, %f838, %f838;
	mul.f32 	%f891, %f890, %f890;
	mul.f32 	%f945, %f944, %f944;
	mul.f32 	%f997, %f996, %f996;
	fma.rn.f32 	%f1050, %f1049, 0fBF000000, %f1372;
	fma.rn.f32 	%f1102, %f1101, 0fBF000000, %f1376;
	mul.f32 	%f1157, %f1156, %f1156;
	mul.f32 	%f1209, %f1208, %f1208;
	selp.f32 	%f1261, %f1260, %f1259, %p285;
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f307, %f306, %f306;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f376, %f375, %f375;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f445, %f444, %f444;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f514, %f513, %f513;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f583, %f582, %f582;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f652, %f651, %f651;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f721, %f720, %f720;
	mul.f32 	%f756, %f755, %f755;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f840, %f839, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f841, %f839, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f892, %f891, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f893, %f891, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f946, %f945, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f947, %f945, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f998, %f997, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f999, %f997, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f1051, %f1050, %f1050;
	mul.f32 	%f1103, %f1102, %f1102;
	fma.rn.f32 	%f1158, %f1157, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1159, %f1157, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1210, %f1209, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1211, %f1209, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1262, %f1261, 0fBF000000, %f1388;
	cvt.rzi.s32.f32 	%r269, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r276, %f305;
	fma.rn.f32 	%f308, %f307, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f309, %f307, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r287, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r294, %f374;
	fma.rn.f32 	%f377, %f376, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f378, %f376, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r305, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r312, %f443;
	fma.rn.f32 	%f446, %f445, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f447, %f445, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r323, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r330, %f512;
	fma.rn.f32 	%f515, %f514, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f516, %f514, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r341, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r348, %f581;
	fma.rn.f32 	%f584, %f583, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f585, %f583, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r359, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r366, %f650;
	fma.rn.f32 	%f653, %f652, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f654, %f652, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r377, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r384, %f719;
	fma.rn.f32 	%f722, %f721, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f723, %f721, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r395, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r402, %f788;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r420, %f837;
	fma.rn.f32 	%f842, %f840, %f839, 0fC0A55DF6;
	fma.rn.f32 	%f843, %f841, %f839, 0f4081E0CF;
	fma.rn.f32 	%f844, %f839, %f838, 0f00000000;
	cvt.rzi.s32.f32 	%r449, %f889;
	fma.rn.f32 	%f894, %f892, %f891, 0fC0A55DF6;
	fma.rn.f32 	%f895, %f893, %f891, 0f4081E0CF;
	fma.rn.f32 	%f896, %f891, %f890, 0f00000000;
	cvt.rzi.s32.f32 	%r468, %f943;
	fma.rn.f32 	%f948, %f946, %f945, 0fC0A55DF6;
	fma.rn.f32 	%f949, %f947, %f945, 0f4081E0CF;
	fma.rn.f32 	%f950, %f945, %f944, 0f00000000;
	cvt.rzi.s32.f32 	%r497, %f995;
	fma.rn.f32 	%f1000, %f998, %f997, 0fC0A55DF6;
	fma.rn.f32 	%f1001, %f999, %f997, 0f4081E0CF;
	fma.rn.f32 	%f1002, %f997, %f996, 0f00000000;
	fma.rn.f32 	%f1052, %f1051, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1053, %f1051, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1104, %f1103, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1105, %f1103, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r557, %f1155;
	fma.rn.f32 	%f1160, %f1158, %f1157, 0fC0A55DF6;
	fma.rn.f32 	%f1161, %f1159, %f1157, 0f4081E0CF;
	fma.rn.f32 	%f1162, %f1157, %f1156, 0f00000000;
	cvt.rzi.s32.f32 	%r587, %f1207;
	fma.rn.f32 	%f1212, %f1210, %f1209, 0fC0A55DF6;
	fma.rn.f32 	%f1213, %f1211, %f1209, 0f4081E0CF;
	fma.rn.f32 	%f1214, %f1209, %f1208, 0f00000000;
	mul.f32 	%f1263, %f1262, %f1262;
	add.s32 	%r270, %r269, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r277, %r276, 1;
	fma.rn.f32 	%f310, %f308, %f307, 0fC0A55DF6;
	fma.rn.f32 	%f311, %f309, %f307, 0f4081E0CF;
	fma.rn.f32 	%f312, %f307, %f306, 0f00000000;
	add.s32 	%r288, %r287, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r295, %r294, 1;
	fma.rn.f32 	%f379, %f377, %f376, 0fC0A55DF6;
	fma.rn.f32 	%f380, %f378, %f376, 0f4081E0CF;
	fma.rn.f32 	%f381, %f376, %f375, 0f00000000;
	add.s32 	%r306, %r305, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r313, %r312, 1;
	fma.rn.f32 	%f448, %f446, %f445, 0fC0A55DF6;
	fma.rn.f32 	%f449, %f447, %f445, 0f4081E0CF;
	fma.rn.f32 	%f450, %f445, %f444, 0f00000000;
	add.s32 	%r324, %r323, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r331, %r330, 1;
	fma.rn.f32 	%f517, %f515, %f514, 0fC0A55DF6;
	fma.rn.f32 	%f518, %f516, %f514, 0f4081E0CF;
	fma.rn.f32 	%f519, %f514, %f513, 0f00000000;
	add.s32 	%r342, %r341, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r349, %r348, 1;
	fma.rn.f32 	%f586, %f584, %f583, 0fC0A55DF6;
	fma.rn.f32 	%f587, %f585, %f583, 0f4081E0CF;
	fma.rn.f32 	%f588, %f583, %f582, 0f00000000;
	add.s32 	%r360, %r359, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r367, %r366, 1;
	fma.rn.f32 	%f655, %f653, %f652, 0fC0A55DF6;
	fma.rn.f32 	%f656, %f654, %f652, 0f4081E0CF;
	fma.rn.f32 	%f657, %f652, %f651, 0f00000000;
	add.s32 	%r378, %r377, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r385, %r384, 1;
	fma.rn.f32 	%f724, %f722, %f721, 0fC0A55DF6;
	fma.rn.f32 	%f725, %f723, %f721, 0f4081E0CF;
	fma.rn.f32 	%f726, %f721, %f720, 0f00000000;
	add.s32 	%r396, %r395, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	add.s32 	%r403, %r402, 1;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f845, %f843, %f839, 0fC09DE9E6;
	fma.rn.f32 	%f846, %f842, %f844, 0f00000000;
	and.b32  	%r421, %r420, 1;
	fma.rn.f32 	%f897, %f895, %f891, 0fC09DE9E6;
	fma.rn.f32 	%f898, %f894, %f896, 0f00000000;
	and.b32  	%r450, %r449, 1;
	fma.rn.f32 	%f951, %f949, %f945, 0fC09DE9E6;
	fma.rn.f32 	%f952, %f948, %f950, 0f00000000;
	and.b32  	%r469, %r468, 1;
	fma.rn.f32 	%f1003, %f1001, %f997, 0fC09DE9E6;
	fma.rn.f32 	%f1004, %f1000, %f1002, 0f00000000;
	and.b32  	%r498, %r497, 1;
	cvt.rzi.s32.f32 	%r515, %f1049;
	fma.rn.f32 	%f1054, %f1052, %f1051, 0fC0A55DF6;
	fma.rn.f32 	%f1055, %f1053, %f1051, 0f4081E0CF;
	fma.rn.f32 	%f1056, %f1051, %f1050, 0f00000000;
	cvt.rzi.s32.f32 	%r538, %f1101;
	fma.rn.f32 	%f1106, %f1104, %f1103, 0fC0A55DF6;
	fma.rn.f32 	%f1107, %f1105, %f1103, 0f4081E0CF;
	fma.rn.f32 	%f1108, %f1103, %f1102, 0f00000000;
	fma.rn.f32 	%f1163, %f1161, %f1157, 0fC09DE9E6;
	fma.rn.f32 	%f1164, %f1160, %f1162, 0f00000000;
	and.b32  	%r558, %r557, 1;
	fma.rn.f32 	%f1215, %f1213, %f1209, 0fC09DE9E6;
	fma.rn.f32 	%f1216, %f1212, %f1214, 0f00000000;
	and.b32  	%r588, %r587, 1;
	fma.rn.f32 	%f1264, %f1263, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1265, %f1263, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r271, %r270, 1;
	fma.rn.f32 	%f313, %f311, %f307, 0fC09DE9E6;
	fma.rn.f32 	%f314, %f310, %f312, 0f00000000;
	and.b32  	%r278, %r277, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r289, %r288, 1;
	fma.rn.f32 	%f382, %f380, %f376, 0fC09DE9E6;
	fma.rn.f32 	%f383, %f379, %f381, 0f00000000;
	and.b32  	%r296, %r295, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r307, %r306, 1;
	fma.rn.f32 	%f451, %f449, %f445, 0fC09DE9E6;
	fma.rn.f32 	%f452, %f448, %f450, 0f00000000;
	and.b32  	%r314, %r313, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r325, %r324, 1;
	fma.rn.f32 	%f520, %f518, %f514, 0fC09DE9E6;
	fma.rn.f32 	%f521, %f517, %f519, 0f00000000;
	and.b32  	%r332, %r331, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r343, %r342, 1;
	fma.rn.f32 	%f589, %f587, %f583, 0fC09DE9E6;
	fma.rn.f32 	%f590, %f586, %f588, 0f00000000;
	and.b32  	%r350, %r349, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r361, %r360, 1;
	fma.rn.f32 	%f658, %f656, %f652, 0fC09DE9E6;
	fma.rn.f32 	%f659, %f655, %f657, 0f00000000;
	and.b32  	%r368, %r367, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r379, %r378, 1;
	fma.rn.f32 	%f727, %f725, %f721, 0fC09DE9E6;
	fma.rn.f32 	%f728, %f724, %f726, 0f00000000;
	and.b32  	%r386, %r385, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r397, %r396, 1;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	and.b32  	%r404, %r403, 1;
	fma.rn.f32 	%f847, %f845, %f839, 0f3F800000;
	fma.rn.f32 	%f848, %f838, 0f40490FDB, %f846;
	setp.eq.b32 	%p126, %r421, 1;
	fma.rn.f32 	%f899, %f897, %f891, 0f3F800000;
	fma.rn.f32 	%f900, %f890, 0f40490FDB, %f898;
	setp.eq.b32 	%p146, %r450, 1;
	fma.rn.f32 	%f953, %f951, %f945, 0f3F800000;
	fma.rn.f32 	%f954, %f944, 0f40490FDB, %f952;
	setp.eq.b32 	%p166, %r469, 1;
	fma.rn.f32 	%f1005, %f1003, %f997, 0f3F800000;
	fma.rn.f32 	%f1006, %f996, 0f40490FDB, %f1004;
	setp.eq.b32 	%p186, %r498, 1;
	fma.rn.f32 	%f1057, %f1055, %f1051, 0fC09DE9E6;
	fma.rn.f32 	%f1058, %f1054, %f1056, 0f00000000;
	and.b32  	%r516, %r515, 1;
	fma.rn.f32 	%f1109, %f1107, %f1103, 0fC09DE9E6;
	fma.rn.f32 	%f1110, %f1106, %f1108, 0f00000000;
	and.b32  	%r539, %r538, 1;
	fma.rn.f32 	%f1165, %f1163, %f1157, 0f3F800000;
	fma.rn.f32 	%f1166, %f1156, 0f40490FDB, %f1164;
	setp.eq.b32 	%p246, %r558, 1;
	fma.rn.f32 	%f1217, %f1215, %f1209, 0f3F800000;
	fma.rn.f32 	%f1218, %f1208, 0f40490FDB, %f1216;
	setp.eq.b32 	%p266, %r588, 1;
	cvt.rzi.s32.f32 	%r611, %f1261;
	fma.rn.f32 	%f1266, %f1264, %f1263, 0fC0A55DF6;
	fma.rn.f32 	%f1267, %f1265, %f1263, 0f4081E0CF;
	fma.rn.f32 	%f1268, %f1263, %f1262, 0f00000000;
	shl.b32 	%r10, %r4, 2;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p18, %r271, 1;
	fma.rn.f32 	%f315, %f313, %f307, 0f3F800000;
	fma.rn.f32 	%f316, %f306, 0f40490FDB, %f314;
	setp.eq.b32 	%p24, %r278, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p30, %r289, 1;
	fma.rn.f32 	%f384, %f382, %f376, 0f3F800000;
	fma.rn.f32 	%f385, %f375, 0f40490FDB, %f383;
	setp.eq.b32 	%p36, %r296, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p42, %r307, 1;
	fma.rn.f32 	%f453, %f451, %f445, 0f3F800000;
	fma.rn.f32 	%f454, %f444, 0f40490FDB, %f452;
	setp.eq.b32 	%p48, %r314, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p54, %r325, 1;
	fma.rn.f32 	%f522, %f520, %f514, 0f3F800000;
	fma.rn.f32 	%f523, %f513, 0f40490FDB, %f521;
	setp.eq.b32 	%p60, %r332, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p66, %r343, 1;
	fma.rn.f32 	%f591, %f589, %f583, 0f3F800000;
	fma.rn.f32 	%f592, %f582, 0f40490FDB, %f590;
	setp.eq.b32 	%p72, %r350, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p78, %r361, 1;
	fma.rn.f32 	%f660, %f658, %f652, 0f3F800000;
	fma.rn.f32 	%f661, %f651, 0f40490FDB, %f659;
	setp.eq.b32 	%p84, %r368, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p90, %r379, 1;
	fma.rn.f32 	%f729, %f727, %f721, 0f3F800000;
	fma.rn.f32 	%f730, %f720, 0f40490FDB, %f728;
	setp.eq.b32 	%p96, %r386, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p102, %r397, 1;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	setp.eq.b32 	%p108, %r404, 1;
	selp.f32 	%f849, %f847, %f848, %p126;
	and.b32  	%r422, %r420, 2;
	selp.f32 	%f901, %f899, %f900, %p146;
	and.b32  	%r451, %r449, 2;
	selp.f32 	%f955, %f953, %f954, %p166;
	and.b32  	%r470, %r468, 2;
	selp.f32 	%f1007, %f1005, %f1006, %p186;
	and.b32  	%r499, %r497, 2;
	fma.rn.f32 	%f1059, %f1057, %f1051, 0f3F800000;
	fma.rn.f32 	%f1060, %f1050, 0f40490FDB, %f1058;
	setp.eq.b32 	%p206, %r516, 1;
	fma.rn.f32 	%f1111, %f1109, %f1103, 0f3F800000;
	fma.rn.f32 	%f1112, %f1102, 0f40490FDB, %f1110;
	setp.eq.b32 	%p226, %r539, 1;
	selp.f32 	%f1167, %f1165, %f1166, %p246;
	and.b32  	%r559, %r557, 2;
	selp.f32 	%f1219, %f1217, %f1218, %p266;
	and.b32  	%r589, %r587, 2;
	fma.rn.f32 	%f1269, %f1267, %f1263, 0fC09DE9E6;
	fma.rn.f32 	%f1270, %f1266, %f1268, 0f00000000;
	and.b32  	%r612, %r611, 1;
	and.b32  	%r11, %r10, 32;
	and.b32  	%r15, %r4, 18;
	selp.f32 	%f283, %f281, %f282, %p18;
	and.b32  	%r272, %r270, 2;
	mov.f32 	%f284, 0f00000000;
	selp.f32 	%f317, %f315, %f316, %p24;
	and.b32  	%r279, %r277, 2;
	selp.f32 	%f352, %f350, %f351, %p30;
	and.b32  	%r290, %r288, 2;
	selp.f32 	%f386, %f384, %f385, %p36;
	and.b32  	%r297, %r295, 2;
	selp.f32 	%f421, %f419, %f420, %p42;
	and.b32  	%r308, %r306, 2;
	selp.f32 	%f455, %f453, %f454, %p48;
	and.b32  	%r315, %r313, 2;
	selp.f32 	%f490, %f488, %f489, %p54;
	and.b32  	%r326, %r324, 2;
	selp.f32 	%f524, %f522, %f523, %p60;
	and.b32  	%r333, %r331, 2;
	selp.f32 	%f559, %f557, %f558, %p66;
	and.b32  	%r344, %r342, 2;
	selp.f32 	%f593, %f591, %f592, %p72;
	and.b32  	%r351, %r349, 2;
	selp.f32 	%f628, %f626, %f627, %p78;
	and.b32  	%r362, %r360, 2;
	selp.f32 	%f662, %f660, %f661, %p84;
	and.b32  	%r369, %r367, 2;
	selp.f32 	%f697, %f695, %f696, %p90;
	and.b32  	%r380, %r378, 2;
	selp.f32 	%f731, %f729, %f730, %p96;
	and.b32  	%r387, %r385, 2;
	selp.f32 	%f766, %f764, %f765, %p102;
	and.b32  	%r398, %r396, 2;
	selp.f32 	%f800, %f798, %f799, %p108;
	and.b32  	%r405, %r403, 2;
	setp.eq.s32 	%p127, %r422, 0;
	neg.f32 	%f851, %f849;
	add.s32 	%r423, %r420, 1;
	cvt.rzi.f32.f32 	%f856, %f1356;
	setp.eq.s32 	%p147, %r451, 0;
	neg.f32 	%f903, %f901;
	add.s32 	%r452, %r449, 1;
	cvt.rzi.f32.f32 	%f908, %f1360;
	setp.eq.s32 	%p167, %r470, 0;
	neg.f32 	%f957, %f955;
	add.s32 	%r471, %r468, 1;
	cvt.rzi.f32.f32 	%f962, %f1364;
	setp.eq.s32 	%p187, %r499, 0;
	neg.f32 	%f1009, %f1007;
	add.s32 	%r500, %r497, 1;
	cvt.rzi.f32.f32 	%f1014, %f1368;
	selp.f32 	%f1061, %f1059, %f1060, %p206;
	and.b32  	%r517, %r515, 2;
	selp.f32 	%f1113, %f1111, %f1112, %p226;
	and.b32  	%r540, %r538, 2;
	setp.eq.s32 	%p247, %r559, 0;
	neg.f32 	%f1169, %f1167;
	add.s32 	%r560, %r557, 1;
	cvt.rzi.f32.f32 	%f1174, %f1380;
	setp.eq.s32 	%p267, %r589, 0;
	neg.f32 	%f1221, %f1219;
	add.s32 	%r590, %r587, 1;
	cvt.rzi.f32.f32 	%f1226, %f1384;
	fma.rn.f32 	%f1271, %f1269, %f1263, 0f3F800000;
	fma.rn.f32 	%f1272, %f1262, 0f40490FDB, %f1270;
	setp.eq.b32 	%p286, %r612, 1;
	and.b32  	%r12, %r10, 4;
	or.b32  	%r254, %r15, %r11;
	setp.eq.s32 	%p19, %r272, 0;
	sub.f32 	%f285, %f284, %f283;
	setp.eq.s32 	%p25, %r279, 0;
	sub.f32 	%f319, %f284, %f317;
	setp.eq.s32 	%p31, %r290, 0;
	sub.f32 	%f354, %f284, %f352;
	setp.eq.s32 	%p37, %r297, 0;
	sub.f32 	%f388, %f284, %f386;
	setp.eq.s32 	%p43, %r308, 0;
	sub.f32 	%f423, %f284, %f421;
	setp.eq.s32 	%p49, %r315, 0;
	sub.f32 	%f457, %f284, %f455;
	setp.eq.s32 	%p55, %r326, 0;
	sub.f32 	%f492, %f284, %f490;
	setp.eq.s32 	%p61, %r333, 0;
	sub.f32 	%f526, %f284, %f524;
	setp.eq.s32 	%p67, %r344, 0;
	sub.f32 	%f561, %f284, %f559;
	setp.eq.s32 	%p73, %r351, 0;
	sub.f32 	%f595, %f284, %f593;
	setp.eq.s32 	%p79, %r362, 0;
	sub.f32 	%f630, %f284, %f628;
	setp.eq.s32 	%p85, %r369, 0;
	sub.f32 	%f664, %f284, %f662;
	setp.eq.s32 	%p91, %r380, 0;
	sub.f32 	%f699, %f284, %f697;
	setp.eq.s32 	%p97, %r387, 0;
	sub.f32 	%f733, %f284, %f731;
	setp.eq.s32 	%p103, %r398, 0;
	sub.f32 	%f768, %f284, %f766;
	setp.eq.s32 	%p109, %r405, 0;
	sub.f32 	%f802, %f284, %f800;
	selp.f32 	%f850, %f848, %f847, %p126;
	selp.f32 	%f852, %f849, %f851, %p127;
	and.b32  	%r424, %r423, 2;
	setp.eq.f32 	%p129, %f856, %f1356;
	mul.f32 	%f857, %f1356, 0f00000000;
	selp.f32 	%f902, %f900, %f899, %p146;
	selp.f32 	%f904, %f901, %f903, %p147;
	and.b32  	%r453, %r452, 2;
	setp.eq.f32 	%p149, %f908, %f1360;
	mul.f32 	%f909, %f1360, 0f00000000;
	selp.f32 	%f956, %f954, %f953, %p166;
	selp.f32 	%f958, %f955, %f957, %p167;
	and.b32  	%r472, %r471, 2;
	setp.eq.f32 	%p169, %f962, %f1364;
	mul.f32 	%f963, %f1364, 0f00000000;
	selp.f32 	%f1008, %f1006, %f1005, %p186;
	selp.f32 	%f1010, %f1007, %f1009, %p187;
	and.b32  	%r501, %r500, 2;
	setp.eq.f32 	%p189, %f1014, %f1368;
	mul.f32 	%f1015, %f1368, 0f00000000;
	setp.eq.s32 	%p207, %r517, 0;
	neg.f32 	%f1063, %f1061;
	add.s32 	%r518, %r515, 1;
	cvt.rzi.f32.f32 	%f1068, %f1372;
	setp.eq.s32 	%p227, %r540, 0;
	neg.f32 	%f1115, %f1113;
	add.s32 	%r541, %r538, 1;
	cvt.rzi.f32.f32 	%f1120, %f1376;
	selp.f32 	%f1168, %f1166, %f1165, %p246;
	selp.f32 	%f1170, %f1167, %f1169, %p247;
	and.b32  	%r561, %r560, 2;
	setp.eq.f32 	%p249, %f1174, %f1380;
	mul.f32 	%f1175, %f1380, 0f00000000;
	selp.f32 	%f1220, %f1218, %f1217, %p266;
	selp.f32 	%f1222, %f1219, %f1221, %p267;
	and.b32  	%r591, %r590, 2;
	setp.eq.f32 	%p269, %f1226, %f1384;
	mul.f32 	%f1227, %f1384, 0f00000000;
	selp.f32 	%f1273, %f1271, %f1272, %p286;
	and.b32  	%r613, %r611, 2;
	and.b32  	%r14, %r13, 8;
	or.b32  	%r255, %r254, %r12;
	selp.f32 	%f286, %f283, %f285, %p19;
	selp.f32 	%f320, %f317, %f319, %p25;
	selp.f32 	%f355, %f352, %f354, %p31;
	selp.f32 	%f389, %f386, %f388, %p37;
	selp.f32 	%f424, %f421, %f423, %p43;
	selp.f32 	%f458, %f455, %f457, %p49;
	selp.f32 	%f493, %f490, %f492, %p55;
	selp.f32 	%f527, %f524, %f526, %p61;
	selp.f32 	%f562, %f559, %f561, %p67;
	selp.f32 	%f596, %f593, %f595, %p73;
	selp.f32 	%f631, %f628, %f630, %p79;
	selp.f32 	%f665, %f662, %f664, %p85;
	selp.f32 	%f700, %f697, %f699, %p91;
	selp.f32 	%f734, %f731, %f733, %p97;
	selp.f32 	%f769, %f766, %f768, %p103;
	selp.f32 	%f803, %f800, %f802, %p109;
	setp.eq.s32 	%p128, %r424, 0;
	sub.f32 	%f854, %f284, %f850;
	selp.f32 	%f91, %f857, %f852, %p129;
	abs.f32 	%f858, %f1356;
	setp.eq.s32 	%p148, %r453, 0;
	sub.f32 	%f906, %f284, %f902;
	selp.f32 	%f910, %f909, %f904, %p149;
	abs.f32 	%f911, %f1360;
	setp.eq.s32 	%p168, %r472, 0;
	sub.f32 	%f960, %f284, %f956;
	selp.f32 	%f127, %f963, %f958, %p169;
	abs.f32 	%f964, %f1364;
	setp.eq.s32 	%p188, %r501, 0;
	sub.f32 	%f1012, %f284, %f1008;
	selp.f32 	%f1016, %f1015, %f1010, %p189;
	abs.f32 	%f1017, %f1368;
	selp.f32 	%f1062, %f1060, %f1059, %p206;
	selp.f32 	%f1064, %f1061, %f1063, %p207;
	and.b32  	%r519, %r518, 2;
	setp.eq.f32 	%p209, %f1068, %f1372;
	mul.f32 	%f1069, %f1372, 0f00000000;
	selp.f32 	%f1114, %f1112, %f1111, %p226;
	selp.f32 	%f1116, %f1113, %f1115, %p227;
	and.b32  	%r542, %r541, 2;
	setp.eq.f32 	%p229, %f1120, %f1376;
	mul.f32 	%f1121, %f1376, 0f00000000;
	setp.eq.s32 	%p248, %r561, 0;
	sub.f32 	%f1172, %f284, %f1168;
	selp.f32 	%f199, %f1175, %f1170, %p249;
	abs.f32 	%f1176, %f1380;
	setp.eq.s32 	%p268, %r591, 0;
	sub.f32 	%f1224, %f284, %f1220;
	selp.f32 	%f1228, %f1227, %f1222, %p269;
	abs.f32 	%f1229, %f1384;
	setp.eq.s32 	%p287, %r613, 0;
	neg.f32 	%f1275, %f1273;
	add.s32 	%r614, %r611, 1;
	cvt.rzi.f32.f32 	%f1280, %f1388;
	or.b32  	%r256, %r255, %r14;
	mul.f32 	%f2, %f286, %f286;
	mul.f32 	%f7, %f320, %f320;
	mul.f32 	%f11, %f355, %f355;
	mul.f32 	%f16, %f389, %f389;
	mul.f32 	%f20, %f424, %f424;
	mul.f32 	%f25, %f458, %f458;
	mul.f32 	%f29, %f493, %f493;
	mul.f32 	%f34, %f527, %f527;
	mul.f32 	%f38, %f562, %f562;
	mul.f32 	%f43, %f596, %f596;
	mul.f32 	%f47, %f631, %f631;
	mul.f32 	%f52, %f665, %f665;
	mul.f32 	%f56, %f700, %f700;
	mul.f32 	%f61, %f734, %f734;
	mul.f32 	%f65, %f769, %f769;
	mul.f32 	%f70, %f803, %f803;
	selp.f32 	%f855, %f850, %f854, %p128;
	setp.gt.f32 	%p130, %f858, 0f4B800000;
	add.f32 	%f859, %f91, 0f3F800000;
	selp.f32 	%f907, %f902, %f906, %p148;
	setp.gt.f32 	%p150, %f911, 0f4B800000;
	add.f32 	%f912, %f910, 0f3F800000;
	selp.f32 	%f961, %f956, %f960, %p168;
	setp.gt.f32 	%p170, %f964, 0f4B800000;
	add.f32 	%f965, %f127, 0f3F800000;
	selp.f32 	%f1013, %f1008, %f1012, %p188;
	setp.gt.f32 	%p190, %f1017, 0f4B800000;
	add.f32 	%f1018, %f1016, 0f3F800000;
	setp.eq.s32 	%p208, %r519, 0;
	sub.f32 	%f1066, %f284, %f1062;
	selp.f32 	%f163, %f1069, %f1064, %p209;
	abs.f32 	%f1070, %f1372;
	setp.eq.s32 	%p228, %r542, 0;
	sub.f32 	%f1118, %f284, %f1114;
	selp.f32 	%f1122, %f1121, %f1116, %p229;
	abs.f32 	%f1123, %f1376;
	selp.f32 	%f1173, %f1168, %f1172, %p248;
	setp.gt.f32 	%p250, %f1176, 0f4B800000;
	add.f32 	%f1177, %f199, 0f3F800000;
	selp.f32 	%f1225, %f1220, %f1224, %p268;
	setp.gt.f32 	%p270, %f1229, 0f4B800000;
	add.f32 	%f1230, %f1228, 0f3F800000;
	selp.f32 	%f1274, %f1272, %f1271, %p286;
	selp.f32 	%f1276, %f1273, %f1275, %p287;
	and.b32  	%r615, %r614, 2;
	setp.eq.f32 	%p289, %f1280, %f1388;
	mul.f32 	%f1281, %f1388, 0f00000000;
	shr.u32 	%r257, %r256, 1;
	mul.f32 	%f290, %f2, 0f3B8B2FF9;
	mul.f32 	%f324, %f7, 0f3B8B2FF9;
	mul.f32 	%f359, %f11, 0f3B8B2FF9;
	mul.f32 	%f393, %f16, 0f3B8B2FF9;
	mul.f32 	%f428, %f20, 0f3B8B2FF9;
	mul.f32 	%f462, %f25, 0f3B8B2FF9;
	mul.f32 	%f497, %f29, 0f3B8B2FF9;
	mul.f32 	%f531, %f34, 0f3B8B2FF9;
	mul.f32 	%f566, %f38, 0f3B8B2FF9;
	mul.f32 	%f600, %f43, 0f3B8B2FF9;
	mul.f32 	%f635, %f47, 0f3B8B2FF9;
	mul.f32 	%f669, %f52, 0f3B8B2FF9;
	mul.f32 	%f704, %f56, 0f3B8B2FF9;
	mul.f32 	%f738, %f61, 0f3B8B2FF9;
	mul.f32 	%f773, %f65, 0f3B8B2FF9;
	mul.f32 	%f806, %f70, 0f3B8B2FF9;
	selp.f32 	%f92, %f859, %f855, %p130;
	selp.f32 	%f913, %f912, %f907, %p150;
	selp.f32 	%f128, %f965, %f961, %p170;
	selp.f32 	%f1019, %f1018, %f1013, %p190;
	selp.f32 	%f1067, %f1062, %f1066, %p208;
	setp.gt.f32 	%p210, %f1070, 0f4B800000;
	add.f32 	%f1071, %f163, 0f3F800000;
	selp.f32 	%f1119, %f1114, %f1118, %p228;
	setp.gt.f32 	%p230, %f1123, 0f4B800000;
	add.f32 	%f1124, %f1122, 0f3F800000;
	selp.f32 	%f200, %f1177, %f1173, %p250;
	selp.f32 	%f1231, %f1230, %f1225, %p270;
	setp.eq.s32 	%p288, %r615, 0;
	sub.f32 	%f1278, %f284, %f1274;
	selp.f32 	%f235, %f1281, %f1276, %p289;
	abs.f32 	%f1282, %f1388;
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd60, %r257, 4;
	mul.f32 	%f6, %f290, %f1338;
	mul.f32 	%f325, %f324, %f1339;
	mul.f32 	%f15, %f359, %f1340;
	mul.f32 	%f394, %f393, %f1341;
	mul.f32 	%f24, %f428, %f1342;
	mul.f32 	%f463, %f462, %f1343;
	mul.f32 	%f33, %f497, %f1344;
	mul.f32 	%f532, %f531, %f1345;
	mul.f32 	%f42, %f566, %f1346;
	mul.f32 	%f601, %f600, %f1347;
	mul.f32 	%f51, %f635, %f1348;
	mul.f32 	%f670, %f669, %f1349;
	mul.f32 	%f60, %f704, %f1350;
	mul.f32 	%f739, %f738, %f1351;
	mul.f32 	%f69, %f773, %f1352;
	mul.f32 	%f807, %f806, %f1353;
	mov.b32 	%r436, %f913;
	mov.b32 	%r435, %f92;
	mov.b32 	%r442, %f910;
	mov.b32 	%r441, %f91;
	mov.b32 	%r484, %f1019;
	mov.b32 	%r483, %f128;
	mov.b32 	%r490, %f1016;
	mov.b32 	%r489, %f127;
	selp.f32 	%f164, %f1071, %f1067, %p210;
	selp.f32 	%f1125, %f1124, %f1119, %p230;
	mov.b32 	%r574, %f1231;
	mov.b32 	%r573, %f200;
	mov.b32 	%r580, %f1228;
	mov.b32 	%r579, %f199;
	selp.f32 	%f1279, %f1274, %f1278, %p288;
	setp.gt.f32 	%p290, %f1282, 0f4B800000;
	add.f32 	%f1283, %f235, 0f3F800000;
	add.s64 	%rd61, %rd1, %rd60;
	mov.b32 	%r282, %f325;
	mov.b32 	%r281, %f6;
	mov.b32 	%r300, %f394;
	mov.b32 	%r299, %f15;
	mov.b32 	%r318, %f463;
	mov.b32 	%r317, %f24;
	mov.b32 	%r336, %f532;
	mov.b32 	%r335, %f33;
	mov.b32 	%r354, %f601;
	mov.b32 	%r353, %f42;
	mov.b32 	%r372, %f670;
	mov.b32 	%r371, %f51;
	mov.b32 	%r390, %f739;
	mov.b32 	%r389, %f60;
	mov.b32 	%r408, %f807;
	mov.b32 	%r407, %f69;
	xor.b32  	%r487, %r490, -2147483648;
	xor.b32  	%r486, %r489, -2147483648;
	mov.b32 	%r531, %f1125;
	mov.b32 	%r530, %f164;
	mov.b32 	%r534, %f1122;
	mov.b32 	%r533, %f163;
	xor.b32  	%r577, %r580, -2147483648;
	xor.b32  	%r576, %r579, -2147483648;
	selp.f32 	%f236, %f1283, %f1279, %p290;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	ld.global.u32 	%r16, [%rd61];
	ld.global.u32 	%r17, [%rd61+128];
	// begin inline asm
	cvt.rn.f16x2.f32 %r280, %r282, %r281;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r298, %r300, %r299;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r316, %r318, %r317;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r334, %r336, %r335;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r352, %r354, %r353;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r370, %r372, %r371;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r388, %r390, %r389;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r406, %r408, %r407;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r434, %r436, %r435;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r437, %r436, %r435;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r440, %r442, %r441;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r443, %r442, %r441;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r482, %r484, %r483;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r485, %r487, %r486;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r488, %r490, %r489;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r491, %r484, %r483;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r529, %r531, %r530;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r532, %r534, %r533;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r572, %r574, %r573;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r575, %r577, %r576;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r578, %r580, %r579;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r581, %r574, %r573;
	// end inline asm
	add.f32 	%f1306, %f1392, %f1392;
	mov.b32 	%r631, %f1306;
	and.b32  	%r632, %r631, -2147483648;
	or.b32  	%r633, %r632, 1056964608;
	mov.b32 	%f1307, %r633;
	add.f32 	%f1308, %f1306, %f1307;
	cvt.rzi.f32.f32 	%f1309, %f1308;
	abs.f32 	%f1310, %f1306;
	setp.gt.f32 	%p304, %f1310, 0f4B000000;
	selp.f32 	%f1311, %f1306, %f1309, %p304;
	cvt.rzi.f32.f32 	%f1312, %f1306;
	setp.lt.f32 	%p305, %f1310, 0f3F000000;
	selp.f32 	%f1313, %f1312, %f1311, %p305;
	cvt.rzi.s32.f32 	%r634, %f1313;
	fma.rn.f32 	%f1314, %f1313, 0fBF000000, %f1392;
	mul.f32 	%f1315, %f1314, %f1314;
	fma.rn.f32 	%f1316, %f1315, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1317, %f1315, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1318, %f1316, %f1315, 0fC0A55DF6;
	fma.rn.f32 	%f1319, %f1317, %f1315, 0f4081E0CF;
	fma.rn.f32 	%f1320, %f1315, %f1314, 0f00000000;
	fma.rn.f32 	%f1321, %f1319, %f1315, 0fC09DE9E6;
	fma.rn.f32 	%f1322, %f1318, %f1320, 0f00000000;
	fma.rn.f32 	%f1323, %f1321, %f1315, 0f3F800000;
	fma.rn.f32 	%f1324, %f1314, 0f40490FDB, %f1322;
	and.b32  	%r635, %r634, 1;
	setp.eq.b32 	%p306, %r635, 1;
	selp.f32 	%f1325, %f1323, %f1324, %p306;
	selp.f32 	%f1326, %f1324, %f1323, %p306;
	and.b32  	%r636, %r634, 2;
	setp.eq.s32 	%p307, %r636, 0;
	neg.f32 	%f1327, %f1325;
	selp.f32 	%f1328, %f1325, %f1327, %p307;
	add.s32 	%r637, %r634, 1;
	and.b32  	%r638, %r637, 2;
	setp.eq.s32 	%p308, %r638, 0;
	sub.f32 	%f1330, %f284, %f1326;
	selp.f32 	%f1331, %f1326, %f1330, %p308;
	cvt.rzi.f32.f32 	%f1332, %f1392;
	setp.eq.f32 	%p309, %f1332, %f1392;
	mul.f32 	%f1333, %f1392, 0f00000000;
	selp.f32 	%f1334, %f1333, %f1328, %p309;
	abs.f32 	%f1335, %f1392;
	setp.gt.f32 	%p310, %f1335, 0f4B800000;
	add.f32 	%f1336, %f1334, 0f3F800000;
	selp.f32 	%f1337, %f1336, %f1331, %p310;
	mov.b32 	%r627, %f1337;
	mov.b32 	%r626, %f236;
	// begin inline asm
	cvt.rn.f16x2.f32 %r625, %r627, %r626;
	// end inline asm
	mov.b32 	%r630, %f1334;
	mov.b32 	%r629, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r628, %r630, %r629;
	// end inline asm
	shl.b32 	%r147, %r5, 12;
	and.b32  	%r640, %r10, 28;
	shl.b32 	%r641, %r3, 5;
	and.b32  	%r642, %r641, 96;
	or.b32  	%r148, %r640, %r642;
	and.b32  	%r149, %r641, 128;
	shl.b32 	%r643, %r4, 3;
	and.b32  	%r644, %r643, 64;
	and.b32  	%r645, %r13, 32;
	or.b32  	%r646, %r645, %r1;
	or.b32  	%r150, %r646, %r644;
	or.b32  	%r151, %r148, %r149;
	or.b32  	%r152, %r151, %r147;
	and.b32  	%r153, %r4, 8;
	and.b32  	%r647, %r1, 1;
	mul.lo.s32 	%r648, %r647, 2080;
	shr.u32 	%r649, %r1, 1;
	bfe.u32 	%r650, %r1, 1, 1;
	bfe.u32 	%r651, %r1, 2, 1;
	shr.u32 	%r652, %r1, 3;
	shl.b32 	%r653, %r4, 4;
	or.b32  	%r654, %r153, %r653;
	shr.u32 	%r655, %r654, 2;
	and.b32  	%r656, %r655, 30;
	mad.lo.s32 	%r657, %r23, 65, %r648;
	mad.lo.s32 	%r658, %r652, 260, %r657;
	mad.lo.s32 	%r659, %r650, 1040, %r658;
	mad.lo.s32 	%r660, %r651, 520, %r659;
	add.s32 	%r661, %r660, %r656;
	mul.wide.u32 	%rd62, %r661, 4;
	mov.u64 	%rd63, shmem;
	add.s64 	%rd5, %rd63, %rd62;
	add.s32 	%r662, %r661, 32;
	mul.wide.u32 	%rd64, %r662, 4;
	add.s64 	%rd6, %rd63, %rd64;
	add.s32 	%r663, %r661, 1;
	mul.wide.u32 	%rd65, %r663, 4;
	add.s64 	%rd7, %rd63, %rd65;
	add.s32 	%r664, %r661, 33;
	mul.wide.u32 	%rd66, %r664, 4;
	add.s64 	%rd8, %rd63, %rd66;
	add.s32 	%r665, %r661, 130;
	mul.wide.u32 	%rd67, %r665, 4;
	add.s64 	%rd9, %rd63, %rd67;
	add.s32 	%r666, %r661, 162;
	mul.wide.u32 	%rd68, %r666, 4;
	add.s64 	%rd10, %rd63, %rd68;
	add.s32 	%r667, %r661, 131;
	mul.wide.u32 	%rd69, %r667, 4;
	add.s64 	%rd11, %rd63, %rd69;
	add.s32 	%r668, %r661, 163;
	mul.wide.u32 	%rd70, %r668, 4;
	add.s64 	%rd12, %rd63, %rd70;
	and.b32  	%r669, %r2, 32;
	mul.lo.s32 	%r670, %r20, 130;
	mul.lo.s32 	%r671, %r19, 65;
	mul.lo.s32 	%r672, %r25, 1040;
	mul.lo.s32 	%r673, %r23, 520;
	mul.lo.s32 	%r674, %r22, 260;
	add.s32 	%r675, %r670, %r649;
	add.s32 	%r676, %r675, %r669;
	add.s32 	%r677, %r676, %r673;
	add.s32 	%r678, %r677, %r671;
	add.s32 	%r679, %r678, %r672;
	add.s32 	%r680, %r679, %r674;
	or.b32  	%r681, %r649, 8;
	add.s32 	%r682, %r669, %r670;
	add.s32 	%r683, %r682, %r673;
	add.s32 	%r684, %r683, %r681;
	add.s32 	%r685, %r684, %r671;
	add.s32 	%r686, %r685, %r672;
	add.s32 	%r687, %r686, %r674;
	or.b32  	%r688, %r649, 16;
	add.s32 	%r689, %r683, %r688;
	add.s32 	%r690, %r689, %r671;
	add.s32 	%r691, %r690, %r672;
	add.s32 	%r692, %r691, %r674;
	or.b32  	%r693, %r649, 24;
	add.s32 	%r694, %r683, %r693;
	add.s32 	%r695, %r694, %r671;
	add.s32 	%r696, %r695, %r672;
	add.s32 	%r697, %r696, %r674;
	or.b32  	%r698, %r649, 2080;
	add.s32 	%r699, %r683, %r698;
	add.s32 	%r700, %r699, %r671;
	add.s32 	%r701, %r700, %r672;
	add.s32 	%r702, %r701, %r674;
	add.s32 	%r703, %r683, 2080;
	add.s32 	%r704, %r703, %r681;
	add.s32 	%r705, %r704, %r671;
	add.s32 	%r706, %r705, %r672;
	add.s32 	%r707, %r706, %r674;
	add.s32 	%r708, %r703, %r688;
	add.s32 	%r709, %r708, %r671;
	add.s32 	%r710, %r709, %r672;
	add.s32 	%r711, %r710, %r674;
	add.s32 	%r712, %r703, %r693;
	add.s32 	%r713, %r712, %r671;
	add.s32 	%r714, %r713, %r672;
	add.s32 	%r715, %r714, %r674;
	or.b32  	%r716, %r15, %r14;
	or.b32  	%r717, %r716, %r12;
	or.b32  	%r718, %r717, %r11;
	shr.u32 	%r719, %r718, 1;
	mul.lo.s32 	%r720, %r719, 65;
	or.b32  	%r721, %r669, %r649;
	add.s32 	%r722, %r721, %r720;
	or.b32  	%r723, %r681, %r669;
	add.s32 	%r724, %r723, %r720;
	or.b32  	%r725, %r688, %r669;
	add.s32 	%r726, %r725, %r720;
	or.b32  	%r727, %r693, %r669;
	add.s32 	%r728, %r727, %r720;
	shl.b32 	%r729, %r3, 4;
	and.b32  	%r730, %r729, 1920;
	add.s32 	%r731, %r720, 2080;
	add.s32 	%r732, %r721, %r731;
	add.s32 	%r733, %r723, %r731;
	add.s32 	%r734, %r725, %r731;
	add.s32 	%r735, %r727, %r731;
	shl.b32 	%r736, %r1, 1;
	or.b32  	%r737, %r23, %r736;
	mul.lo.s32 	%r738, %r737, 65;
	add.s32 	%r739, %r656, %r738;
	mul.wide.u32 	%rd71, %r739, 4;
	add.s64 	%rd13, %rd63, %rd71;
	cvt.u64.u32 	%rd72, %r656;
	cvt.u64.u32 	%rd73, %r738;
	add.s64 	%rd74, %rd73, %rd72;
	shl.b64 	%rd75, %rd74, 2;
	add.s64 	%rd14, %rd63, %rd75;
	or.b32  	%r740, %r737, 32;
	mul.lo.s32 	%r741, %r740, 65;
	add.s32 	%r742, %r741, %r656;
	mul.wide.u32 	%rd76, %r742, 4;
	add.s64 	%rd15, %rd63, %rd76;
	cvt.u64.u32 	%rd77, %r741;
	add.s64 	%rd78, %rd77, %rd72;
	shl.b64 	%rd79, %rd78, 2;
	add.s64 	%rd16, %rd63, %rd79;
	shl.b32 	%r743, %r7, 19;
	add.s32 	%r744, %r743, -1572864;
	shl.b32 	%r745, %r1, 10;
	cvt.s64.s32 	%rd17, %r744;
	or.b32  	%r746, %r730, %r24;
	shl.b32 	%r747, %r746, 8;
	or.b32  	%r154, %r745, %r747;
	or.b32  	%r155, %r154, 16384;
	mul.wide.u32 	%rd18, %r735, 4;
	mul.wide.u32 	%rd19, %r734, 4;
	mul.wide.u32 	%rd20, %r733, 4;
	mul.wide.u32 	%rd21, %r732, 4;
	mul.wide.u32 	%rd22, %r728, 4;
	mul.wide.u32 	%rd23, %r726, 4;
	mul.wide.u32 	%rd24, %r724, 4;
	mul.wide.u32 	%rd25, %r722, 4;
	mul.wide.u32 	%rd26, %r715, 4;
	mul.wide.u32 	%rd27, %r711, 4;
	mul.wide.u32 	%rd28, %r707, 4;
	mul.wide.u32 	%rd29, %r702, 4;
	mul.wide.u32 	%rd30, %r697, 4;
	mul.wide.u32 	%rd31, %r692, 4;
	mul.wide.u32 	%rd32, %r687, 4;
	mul.wide.u32 	%rd33, %r680, 4;
	setp.eq.s32 	%p312, %r153, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16199, %r16178;
	mov.u32 	%r16248, %r16178;
	mov.u32 	%r16247, %r16178;
	mov.u32 	%r16246, %r16178;
	mov.u32 	%r16245, %r16178;
	mov.u32 	%r16244, %r16178;
	mov.u32 	%r16243, %r16178;
	mov.u32 	%r16242, %r16178;
	mov.u32 	%r16241, %r16178;
	mov.u32 	%r16240, %r16178;
	mov.u32 	%r16239, %r16178;
	mov.u32 	%r16238, %r16178;
	mov.u32 	%r16237, %r16178;
	mov.u32 	%r16236, %r16178;
	mov.u32 	%r16235, %r16178;
	mov.u32 	%r16234, %r16178;
	mov.u32 	%r16233, %r16178;
	mov.u32 	%r16232, %r16178;
	mov.u32 	%r16231, %r16178;
	mov.u32 	%r16230, %r16178;
	mov.u32 	%r16229, %r16178;
	mov.u32 	%r16228, %r16178;
	mov.u32 	%r16227, %r16178;
	mov.u32 	%r16226, %r16178;
	mov.u32 	%r16225, %r16178;
	bra.uni 	LBB0_182;
LBB0_186:                               // %L63833
                                        //   in Loop: Header=BB0_182 Depth=1
	setp.ne.s32 	%p326, %r16199, 130816;
	add.s32 	%r16199, %r16199, 256;
	add.s32 	%r16175, %r16199, %r5;
	setp.gt.s32 	%p327, %r6, %r16175;
	and.pred  	%p328, %p326, %p327;
	@%p328 bra 	LBB0_182;
	bra.uni 	LBB0_187;
LBB0_182:                               // %L2193
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_183 Depth 2
	or.b32  	%r781, %r150, %r16199;
	shl.b32 	%r782, %r781, 12;
	add.s32 	%r783, %r152, %r782;
	shr.s32 	%r784, %r783, 31;
	shr.u32 	%r785, %r784, 3;
	add.s32 	%r786, %r783, %r785;
	shr.s32 	%r787, %r786, 29;
	setp.lt.s32 	%p313, %r783, 0;
	and.b32  	%r788, %r786, -536870912;
	setp.ne.s32 	%p314, %r788, %r783;
	and.pred  	%p315, %p313, %p314;
	selp.u32 	%r789, 1, 0, %p315;
	sub.s32 	%r790, %r789, %r787;
	shl.b32 	%r791, %r790, 29;
	add.s32 	%r792, %r791, %r783;
	mul.wide.s32 	%rd81, %r792, 4;
	add.s64 	%rd82, %rd2, %rd81;
	ld.global.v4.u32 	{%r793, %r794, %r795, %r796}, [%rd82];
	or.b32  	%r797, %r151, %r782;
	or.b32  	%r798, %r797, 65536;
	add.s32 	%r799, %r798, %r147;
	shr.s32 	%r800, %r799, 31;
	shr.u32 	%r801, %r800, 3;
	add.s32 	%r802, %r799, %r801;
	shr.s32 	%r803, %r802, 29;
	setp.lt.s32 	%p316, %r799, 0;
	and.b32  	%r804, %r802, -536870912;
	setp.ne.s32 	%p317, %r804, %r799;
	and.pred  	%p318, %p316, %p317;
	selp.u32 	%r805, 1, 0, %p318;
	sub.s32 	%r806, %r805, %r803;
	shl.b32 	%r807, %r806, 29;
	add.s32 	%r808, %r807, %r799;
	mul.wide.s32 	%rd83, %r808, 4;
	add.s64 	%rd84, %rd2, %rd83;
	ld.global.v4.u32 	{%r809, %r810, %r811, %r812}, [%rd84];
	selp.b32 	%r813, %r795, %r793, %p312;
	shfl.sync.bfly.b32	%r814, %r813, 8, 31, -1;
	selp.b32 	%r749, %r793, %r814, %p312;
	selp.b32 	%r750, %r814, %r795, %p312;
	selp.b32 	%r815, %r796, %r794, %p312;
	shfl.sync.bfly.b32	%r816, %r815, 8, 31, -1;
	selp.b32 	%r757, %r794, %r816, %p312;
	selp.b32 	%r758, %r816, %r796, %p312;
	selp.b32 	%r817, %r811, %r809, %p312;
	shfl.sync.bfly.b32	%r818, %r817, 8, 31, -1;
	selp.b32 	%r765, %r809, %r818, %p312;
	selp.b32 	%r766, %r818, %r811, %p312;
	selp.b32 	%r819, %r812, %r810, %p312;
	shfl.sync.bfly.b32	%r820, %r819, 8, 31, -1;
	selp.b32 	%r773, %r810, %r820, %p312;
	selp.b32 	%r774, %r820, %r812, %p312;
	mov.u32 	%r775, 21520;
	// begin inline asm
	prmt.b32 %r748, %r749, %r750, %r775;
	// end inline asm
	mov.u32 	%r779, 30258;
	// begin inline asm
	prmt.b32 %r752, %r749, %r750, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r756, %r757, %r758, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r760, %r757, %r758, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r764, %r765, %r766, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r768, %r765, %r766, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r772, %r773, %r774, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r776, %r773, %r774, %r779;
	// end inline asm
	st.shared.u32 	[%rd5], %r748;
	st.shared.u32 	[%rd6], %r752;
	st.shared.u32 	[%rd7], %r756;
	st.shared.u32 	[%rd8], %r760;
	st.shared.u32 	[%rd9], %r764;
	st.shared.u32 	[%rd10], %r768;
	st.shared.u32 	[%rd11], %r772;
	st.shared.u32 	[%rd12], %r776;
	bar.sync 	0;
	mov.u32 	%r16224, 256;
	mov.u64 	%rd126, %rd63;
LBB0_183:                               // %L9213
                                        //   Parent Loop BB0_182 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd85, %rd126, %rd33;
	ld.shared.u32 	%r16085, [%rd85];
	add.s64 	%rd86, %rd126, %rd32;
	ld.shared.u32 	%r16086, [%rd86];
	add.s64 	%rd87, %rd126, %rd31;
	ld.shared.u32 	%r16087, [%rd87];
	add.s64 	%rd88, %rd126, %rd30;
	ld.shared.u32 	%r16088, [%rd88];
	add.s64 	%rd89, %rd126, %rd29;
	ld.shared.u32 	%r16089, [%rd89];
	add.s64 	%rd90, %rd126, %rd28;
	ld.shared.u32 	%r16090, [%rd90];
	add.s64 	%rd91, %rd126, %rd27;
	ld.shared.u32 	%r16091, [%rd91];
	add.s64 	%rd92, %rd126, %rd26;
	ld.shared.u32 	%r16092, [%rd92];
	// begin inline asm
	mov.b32 %r826, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r837, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r825, %r16085, -2004318072;
	mov.u32 	%r824, 983055;
	// begin inline asm
	lop3.b32 %r823, %r824, %r825, %r826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r828, %r826, %r827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r831, %r823, %r828;
	// end inline asm
	mov.u32 	%r835, 15728880;
	// begin inline asm
	lop3.b32 %r834, %r835, %r825, %r837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r839, %r837, %r838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r842, %r834, %r839;
	// end inline asm
	shr.u32 	%r847, %r825, 8;
	// begin inline asm
	lop3.b32 %r845, %r824, %r847, %r826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r849, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r850, %r826, %r849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r853, %r845, %r850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r856, %r835, %r847, %r837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r860, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r861, %r837, %r860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r864, %r856, %r861;
	// end inline asm
	// begin inline asm
	mov.b32 %r872, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r883, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r871, %r16086, -2004318072;
	// begin inline asm
	lop3.b32 %r869, %r824, %r871, %r872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r874, %r872, %r873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r877, %r869, %r874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r880, %r835, %r871, %r883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r885, %r883, %r884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r888, %r880, %r885;
	// end inline asm
	shr.u32 	%r893, %r871, 8;
	// begin inline asm
	lop3.b32 %r891, %r824, %r893, %r872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r895, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r896, %r872, %r895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r899, %r891, %r896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r902, %r835, %r893, %r883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r907, %r883, %r906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r910, %r902, %r907;
	// end inline asm
	// begin inline asm
	mov.b32 %r918, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r929, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r917, %r16087, -2004318072;
	// begin inline asm
	lop3.b32 %r915, %r824, %r917, %r918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r920, %r918, %r919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r923, %r915, %r920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r926, %r835, %r917, %r929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r931, %r929, %r930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r934, %r926, %r931;
	// end inline asm
	shr.u32 	%r939, %r917, 8;
	// begin inline asm
	lop3.b32 %r937, %r824, %r939, %r918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r941, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r942, %r918, %r941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r945, %r937, %r942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r948, %r835, %r939, %r929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r953, %r929, %r952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r956, %r948, %r953;
	// end inline asm
	// begin inline asm
	mov.b32 %r964, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r975, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r963, %r16088, -2004318072;
	// begin inline asm
	lop3.b32 %r961, %r824, %r963, %r964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r966, %r964, %r965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r969, %r961, %r966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r972, %r835, %r963, %r975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r977, %r975, %r976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r980, %r972, %r977;
	// end inline asm
	shr.u32 	%r985, %r963, 8;
	// begin inline asm
	lop3.b32 %r983, %r824, %r985, %r964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r988, %r964, %r987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r991, %r983, %r988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r994, %r835, %r985, %r975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r999, %r975, %r998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1002, %r994, %r999;
	// end inline asm
	// begin inline asm
	mov.b32 %r1010, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1021, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1009, %r16089, -2004318072;
	// begin inline asm
	lop3.b32 %r1007, %r824, %r1009, %r1010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1012, %r1010, %r1011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1015, %r1007, %r1012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1018, %r835, %r1009, %r1021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1023, %r1021, %r1022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1026, %r1018, %r1023;
	// end inline asm
	shr.u32 	%r1031, %r1009, 8;
	// begin inline asm
	lop3.b32 %r1029, %r824, %r1031, %r1010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1034, %r1010, %r1033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1037, %r1029, %r1034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1040, %r835, %r1031, %r1021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1045, %r1021, %r1044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1048, %r1040, %r1045;
	// end inline asm
	// begin inline asm
	mov.b32 %r1056, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1067, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1055, %r16090, -2004318072;
	// begin inline asm
	lop3.b32 %r1053, %r824, %r1055, %r1056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1058, %r1056, %r1057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1061, %r1053, %r1058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1064, %r835, %r1055, %r1067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1068, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1069, %r1067, %r1068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1072, %r1064, %r1069;
	// end inline asm
	shr.u32 	%r1077, %r1055, 8;
	// begin inline asm
	lop3.b32 %r1075, %r824, %r1077, %r1056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1080, %r1056, %r1079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1083, %r1075, %r1080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1086, %r835, %r1077, %r1067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1090, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1091, %r1067, %r1090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1094, %r1086, %r1091;
	// end inline asm
	// begin inline asm
	mov.b32 %r1102, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1113, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1101, %r16091, -2004318072;
	// begin inline asm
	lop3.b32 %r1099, %r824, %r1101, %r1102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1104, %r1102, %r1103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1107, %r1099, %r1104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1110, %r835, %r1101, %r1113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1115, %r1113, %r1114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1118, %r1110, %r1115;
	// end inline asm
	shr.u32 	%r1123, %r1101, 8;
	// begin inline asm
	lop3.b32 %r1121, %r824, %r1123, %r1102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1125, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1126, %r1102, %r1125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1129, %r1121, %r1126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1132, %r835, %r1123, %r1113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1136, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1137, %r1113, %r1136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1140, %r1132, %r1137;
	// end inline asm
	// begin inline asm
	mov.b32 %r1148, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1159, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1147, %r16092, -2004318072;
	// begin inline asm
	lop3.b32 %r1145, %r824, %r1147, %r1148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1150, %r1148, %r1149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1153, %r1145, %r1150;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1156, %r835, %r1147, %r1159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1160, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1161, %r1159, %r1160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1164, %r1156, %r1161;
	// end inline asm
	shr.u32 	%r1169, %r1147, 8;
	// begin inline asm
	lop3.b32 %r1167, %r824, %r1169, %r1148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1171, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1172, %r1148, %r1171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1175, %r1167, %r1172;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1178, %r835, %r1169, %r1159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1182, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1183, %r1159, %r1182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1186, %r1178, %r1183;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1189, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1191, %r1189, %r831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1194, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1196, %r1194, %r842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1199, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1201, %r1199, %r853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1204, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1206, %r1204, %r864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1209, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1211, %r1209, %r877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1214, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1216, %r1214, %r888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1219, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1221, %r1219, %r899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1224, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1226, %r1224, %r910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1229, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1231, %r1229, %r923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1234, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1236, %r1234, %r934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1239, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1241, %r1239, %r945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1244, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1246, %r1244, %r956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1249, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1251, %r1249, %r969;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1254, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1256, %r1254, %r980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1259, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1261, %r1259, %r991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1264, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1266, %r1264, %r1002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1269, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1271, %r1269, %r1015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1274, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1276, %r1274, %r1026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1279, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1281, %r1279, %r1037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1284, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1286, %r1284, %r1048;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1289, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1291, %r1289, %r1061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1294, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1296, %r1294, %r1072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1299, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1301, %r1299, %r1083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1304, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1306, %r1304, %r1094;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1309, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1311, %r1309, %r1107;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1314, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1316, %r1314, %r1118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1319, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1321, %r1319, %r1129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1324, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1326, %r1324, %r1140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1329, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1331, %r1329, %r1153;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1334, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1336, %r1334, %r1164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1339, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1341, %r1339, %r1175;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1344, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1346, %r1344, %r1186;
	// end inline asm
	// begin inline asm
	mov.b32 %r1354, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1365, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1353, %r16225, -2004318072;
	// begin inline asm
	lop3.b32 %r1351, %r824, %r1353, %r1354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1355, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1356, %r1354, %r1355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1359, %r1351, %r1356;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1362, %r835, %r1353, %r1365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1367, %r1365, %r1366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1370, %r1362, %r1367;
	// end inline asm
	shr.u32 	%r1375, %r1353, 8;
	// begin inline asm
	lop3.b32 %r1373, %r824, %r1375, %r1354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1377, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1378, %r1354, %r1377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1381, %r1373, %r1378;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1384, %r835, %r1375, %r1365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1389, %r1365, %r1388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1392, %r1384, %r1389;
	// end inline asm
	// begin inline asm
	mov.b32 %r1400, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1411, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1399, %r16226, -2004318072;
	// begin inline asm
	lop3.b32 %r1397, %r824, %r1399, %r1400, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1402, %r1400, %r1401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1405, %r1397, %r1402;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1408, %r835, %r1399, %r1411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1413, %r1411, %r1412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1416, %r1408, %r1413;
	// end inline asm
	shr.u32 	%r1421, %r1399, 8;
	// begin inline asm
	lop3.b32 %r1419, %r824, %r1421, %r1400, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1423, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1424, %r1400, %r1423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1427, %r1419, %r1424;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1430, %r835, %r1421, %r1411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1435, %r1411, %r1434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1438, %r1430, %r1435;
	// end inline asm
	// begin inline asm
	mov.b32 %r1446, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1457, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1445, %r16227, -2004318072;
	// begin inline asm
	lop3.b32 %r1443, %r824, %r1445, %r1446, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1447, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1448, %r1446, %r1447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1451, %r1443, %r1448;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1454, %r835, %r1445, %r1457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1459, %r1457, %r1458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1462, %r1454, %r1459;
	// end inline asm
	shr.u32 	%r1467, %r1445, 8;
	// begin inline asm
	lop3.b32 %r1465, %r824, %r1467, %r1446, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1470, %r1446, %r1469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1473, %r1465, %r1470;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1476, %r835, %r1467, %r1457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1481, %r1457, %r1480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1484, %r1476, %r1481;
	// end inline asm
	// begin inline asm
	mov.b32 %r1492, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1503, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1491, %r16228, -2004318072;
	// begin inline asm
	lop3.b32 %r1489, %r824, %r1491, %r1492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1493, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1494, %r1492, %r1493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1497, %r1489, %r1494;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1500, %r835, %r1491, %r1503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1505, %r1503, %r1504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1508, %r1500, %r1505;
	// end inline asm
	shr.u32 	%r1513, %r1491, 8;
	// begin inline asm
	lop3.b32 %r1511, %r824, %r1513, %r1492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1515, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1516, %r1492, %r1515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1519, %r1511, %r1516;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1522, %r835, %r1513, %r1503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1526, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1527, %r1503, %r1526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1530, %r1522, %r1527;
	// end inline asm
	// begin inline asm
	mov.b32 %r1538, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1549, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1537, %r16237, -2004318072;
	// begin inline asm
	lop3.b32 %r1535, %r824, %r1537, %r1538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1539, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1540, %r1538, %r1539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1543, %r1535, %r1540;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1546, %r835, %r1537, %r1549, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1550, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1551, %r1549, %r1550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1554, %r1546, %r1551;
	// end inline asm
	shr.u32 	%r1559, %r1537, 8;
	// begin inline asm
	lop3.b32 %r1557, %r824, %r1559, %r1538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1561, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1562, %r1538, %r1561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1565, %r1557, %r1562;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1568, %r835, %r1559, %r1549, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1572, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1573, %r1549, %r1572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1576, %r1568, %r1573;
	// end inline asm
	// begin inline asm
	mov.b32 %r1584, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1595, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1583, %r16238, -2004318072;
	// begin inline asm
	lop3.b32 %r1581, %r824, %r1583, %r1584, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1586, %r1584, %r1585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1589, %r1581, %r1586;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1592, %r835, %r1583, %r1595, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1596, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1597, %r1595, %r1596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1600, %r1592, %r1597;
	// end inline asm
	shr.u32 	%r1605, %r1583, 8;
	// begin inline asm
	lop3.b32 %r1603, %r824, %r1605, %r1584, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1607, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1608, %r1584, %r1607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1611, %r1603, %r1608;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1614, %r835, %r1605, %r1595, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1618, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1619, %r1595, %r1618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1622, %r1614, %r1619;
	// end inline asm
	// begin inline asm
	mov.b32 %r1630, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1641, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1629, %r16239, -2004318072;
	// begin inline asm
	lop3.b32 %r1627, %r824, %r1629, %r1630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1631, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1632, %r1630, %r1631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1635, %r1627, %r1632;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1638, %r835, %r1629, %r1641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1642, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1643, %r1641, %r1642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1646, %r1638, %r1643;
	// end inline asm
	shr.u32 	%r1651, %r1629, 8;
	// begin inline asm
	lop3.b32 %r1649, %r824, %r1651, %r1630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1653, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1654, %r1630, %r1653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1657, %r1649, %r1654;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1660, %r835, %r1651, %r1641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1664, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1665, %r1641, %r1664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1668, %r1660, %r1665;
	// end inline asm
	// begin inline asm
	mov.b32 %r1676, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1687, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1675, %r16240, -2004318072;
	// begin inline asm
	lop3.b32 %r1673, %r824, %r1675, %r1676, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1677, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1678, %r1676, %r1677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1681, %r1673, %r1678;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1684, %r835, %r1675, %r1687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1688, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1689, %r1687, %r1688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1692, %r1684, %r1689;
	// end inline asm
	shr.u32 	%r1697, %r1675, 8;
	// begin inline asm
	lop3.b32 %r1695, %r824, %r1697, %r1676, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1699, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1700, %r1676, %r1699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1703, %r1695, %r1700;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1706, %r835, %r1697, %r1687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1710, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1711, %r1687, %r1710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1714, %r1706, %r1711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1717, %r280, %r1359, %r1191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1721, %r280, %r1370, %r1196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1725, %r280, %r1381, %r1201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1729, %r280, %r1392, %r1206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1733, %r280, %r1405, %r1211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1737, %r280, %r1416, %r1216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1741, %r280, %r1427, %r1221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1745, %r280, %r1438, %r1226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1749, %r280, %r1451, %r1231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1753, %r280, %r1462, %r1236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1757, %r280, %r1473, %r1241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1761, %r280, %r1484, %r1246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1765, %r280, %r1497, %r1251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1769, %r280, %r1508, %r1256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1773, %r280, %r1519, %r1261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1777, %r280, %r1530, %r1266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1781, %r298, %r1543, %r1271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1785, %r298, %r1554, %r1276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1789, %r298, %r1565, %r1281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1793, %r298, %r1576, %r1286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1797, %r298, %r1589, %r1291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1801, %r298, %r1600, %r1296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1805, %r298, %r1611, %r1301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1809, %r298, %r1622, %r1306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1813, %r298, %r1635, %r1311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1817, %r298, %r1646, %r1316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1821, %r298, %r1657, %r1321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1825, %r298, %r1668, %r1326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1829, %r298, %r1681, %r1331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1833, %r298, %r1692, %r1336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1837, %r298, %r1703, %r1341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1841, %r298, %r1714, %r1346;
	// end inline asm
	// begin inline asm
	mov.b32 %r1850, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1861, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1849, %r16229, -2004318072;
	// begin inline asm
	lop3.b32 %r1847, %r824, %r1849, %r1850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1852, %r1850, %r1851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1855, %r1847, %r1852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1858, %r835, %r1849, %r1861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1863, %r1861, %r1862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1866, %r1858, %r1863;
	// end inline asm
	shr.u32 	%r1871, %r1849, 8;
	// begin inline asm
	lop3.b32 %r1869, %r824, %r1871, %r1850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1874, %r1850, %r1873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1877, %r1869, %r1874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1880, %r835, %r1871, %r1861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1885, %r1861, %r1884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1888, %r1880, %r1885;
	// end inline asm
	// begin inline asm
	mov.b32 %r1896, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1907, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1895, %r16230, -2004318072;
	// begin inline asm
	lop3.b32 %r1893, %r824, %r1895, %r1896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1898, %r1896, %r1897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1901, %r1893, %r1898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1904, %r835, %r1895, %r1907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1909, %r1907, %r1908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1912, %r1904, %r1909;
	// end inline asm
	shr.u32 	%r1917, %r1895, 8;
	// begin inline asm
	lop3.b32 %r1915, %r824, %r1917, %r1896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1920, %r1896, %r1919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1923, %r1915, %r1920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1926, %r835, %r1917, %r1907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1931, %r1907, %r1930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1934, %r1926, %r1931;
	// end inline asm
	// begin inline asm
	mov.b32 %r1942, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1953, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1941, %r16231, -2004318072;
	// begin inline asm
	lop3.b32 %r1939, %r824, %r1941, %r1942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1944, %r1942, %r1943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1947, %r1939, %r1944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1950, %r835, %r1941, %r1953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1955, %r1953, %r1954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1958, %r1950, %r1955;
	// end inline asm
	shr.u32 	%r1963, %r1941, 8;
	// begin inline asm
	lop3.b32 %r1961, %r824, %r1963, %r1942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1966, %r1942, %r1965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1969, %r1961, %r1966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1972, %r835, %r1963, %r1953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1977, %r1953, %r1976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1980, %r1972, %r1977;
	// end inline asm
	// begin inline asm
	mov.b32 %r1988, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1999, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1987, %r16232, -2004318072;
	// begin inline asm
	lop3.b32 %r1985, %r824, %r1987, %r1988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1990, %r1988, %r1989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1993, %r1985, %r1990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1996, %r835, %r1987, %r1999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2001, %r1999, %r2000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2004, %r1996, %r2001;
	// end inline asm
	shr.u32 	%r2009, %r1987, 8;
	// begin inline asm
	lop3.b32 %r2007, %r824, %r2009, %r1988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2012, %r1988, %r2011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2015, %r2007, %r2012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2018, %r835, %r2009, %r1999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2023, %r1999, %r2022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2026, %r2018, %r2023;
	// end inline asm
	// begin inline asm
	mov.b32 %r2034, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2045, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2033, %r16241, -2004318072;
	// begin inline asm
	lop3.b32 %r2031, %r824, %r2033, %r2034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2036, %r2034, %r2035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2039, %r2031, %r2036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2042, %r835, %r2033, %r2045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2047, %r2045, %r2046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2050, %r2042, %r2047;
	// end inline asm
	shr.u32 	%r2055, %r2033, 8;
	// begin inline asm
	lop3.b32 %r2053, %r824, %r2055, %r2034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2058, %r2034, %r2057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2061, %r2053, %r2058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2064, %r835, %r2055, %r2045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2068, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2069, %r2045, %r2068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2072, %r2064, %r2069;
	// end inline asm
	// begin inline asm
	mov.b32 %r2080, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2091, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2079, %r16242, -2004318072;
	// begin inline asm
	lop3.b32 %r2077, %r824, %r2079, %r2080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2082, %r2080, %r2081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2085, %r2077, %r2082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2088, %r835, %r2079, %r2091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2093, %r2091, %r2092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2096, %r2088, %r2093;
	// end inline asm
	shr.u32 	%r2101, %r2079, 8;
	// begin inline asm
	lop3.b32 %r2099, %r824, %r2101, %r2080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2104, %r2080, %r2103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2107, %r2099, %r2104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2110, %r835, %r2101, %r2091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2115, %r2091, %r2114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2118, %r2110, %r2115;
	// end inline asm
	// begin inline asm
	mov.b32 %r2126, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2137, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2125, %r16243, -2004318072;
	// begin inline asm
	lop3.b32 %r2123, %r824, %r2125, %r2126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2128, %r2126, %r2127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2131, %r2123, %r2128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2134, %r835, %r2125, %r2137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2139, %r2137, %r2138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2142, %r2134, %r2139;
	// end inline asm
	shr.u32 	%r2147, %r2125, 8;
	// begin inline asm
	lop3.b32 %r2145, %r824, %r2147, %r2126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2150, %r2126, %r2149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2153, %r2145, %r2150;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2156, %r835, %r2147, %r2137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2160, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2161, %r2137, %r2160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2164, %r2156, %r2161;
	// end inline asm
	// begin inline asm
	mov.b32 %r2172, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2183, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2171, %r16244, -2004318072;
	// begin inline asm
	lop3.b32 %r2169, %r824, %r2171, %r2172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2174, %r2172, %r2173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2177, %r2169, %r2174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2180, %r835, %r2171, %r2183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2185, %r2183, %r2184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2188, %r2180, %r2185;
	// end inline asm
	shr.u32 	%r2193, %r2171, 8;
	// begin inline asm
	lop3.b32 %r2191, %r824, %r2193, %r2172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2196, %r2172, %r2195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2199, %r2191, %r2196;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2202, %r835, %r2193, %r2183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2206, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2207, %r2183, %r2206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2210, %r2202, %r2207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2213, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2215, %r2213, %r1855, %r1717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2219, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2221, %r2219, %r1866, %r1721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2225, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2227, %r2225, %r1877, %r1725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2231, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2233, %r2231, %r1888, %r1729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2237, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2239, %r2237, %r1901, %r1733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2243, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2245, %r2243, %r1912, %r1737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2249, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2251, %r2249, %r1923, %r1741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2255, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2257, %r2255, %r1934, %r1745;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2261, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2263, %r2261, %r1947, %r1749;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2267, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2269, %r2267, %r1958, %r1753;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2273, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2275, %r2273, %r1969, %r1757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2279, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2281, %r2279, %r1980, %r1761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2285, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2287, %r2285, %r1993, %r1765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2291, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2293, %r2291, %r2004, %r1769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2297, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2299, %r2297, %r2015, %r1773;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2303, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2305, %r2303, %r2026, %r1777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2309, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2311, %r2309, %r2039, %r1781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2315, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2317, %r2315, %r2050, %r1785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2321, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2323, %r2321, %r2061, %r1789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2327, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2329, %r2327, %r2072, %r1793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2333, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2335, %r2333, %r2085, %r1797;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2339, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2341, %r2339, %r2096, %r1801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2345, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2347, %r2345, %r2107, %r1805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2351, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2353, %r2351, %r2118, %r1809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2357, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2359, %r2357, %r2131, %r1813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2363, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2365, %r2363, %r2142, %r1817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2369, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2371, %r2369, %r2153, %r1821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2375, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2377, %r2375, %r2164, %r1825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2381, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2383, %r2381, %r2177, %r1829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2387, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2389, %r2387, %r2188, %r1833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2393, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2395, %r2393, %r2199, %r1837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2399, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2401, %r2399, %r2210, %r1841;
	// end inline asm
	// begin inline asm
	mov.b32 %r2410, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2421, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2409, %r16233, -2004318072;
	// begin inline asm
	lop3.b32 %r2407, %r824, %r2409, %r2410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2412, %r2410, %r2411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2415, %r2407, %r2412;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2418, %r835, %r2409, %r2421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2423, %r2421, %r2422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2426, %r2418, %r2423;
	// end inline asm
	shr.u32 	%r2431, %r2409, 8;
	// begin inline asm
	lop3.b32 %r2429, %r824, %r2431, %r2410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2434, %r2410, %r2433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2437, %r2429, %r2434;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2440, %r835, %r2431, %r2421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2445, %r2421, %r2444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2448, %r2440, %r2445;
	// end inline asm
	// begin inline asm
	mov.b32 %r2456, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2467, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2455, %r16234, -2004318072;
	// begin inline asm
	lop3.b32 %r2453, %r824, %r2455, %r2456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2458, %r2456, %r2457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2461, %r2453, %r2458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2464, %r835, %r2455, %r2467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2469, %r2467, %r2468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2472, %r2464, %r2469;
	// end inline asm
	shr.u32 	%r2477, %r2455, 8;
	// begin inline asm
	lop3.b32 %r2475, %r824, %r2477, %r2456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2480, %r2456, %r2479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2483, %r2475, %r2480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2486, %r835, %r2477, %r2467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2491, %r2467, %r2490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2494, %r2486, %r2491;
	// end inline asm
	// begin inline asm
	mov.b32 %r2502, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2513, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2501, %r16235, -2004318072;
	// begin inline asm
	lop3.b32 %r2499, %r824, %r2501, %r2502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2504, %r2502, %r2503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2507, %r2499, %r2504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2510, %r835, %r2501, %r2513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2515, %r2513, %r2514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2518, %r2510, %r2515;
	// end inline asm
	shr.u32 	%r2523, %r2501, 8;
	// begin inline asm
	lop3.b32 %r2521, %r824, %r2523, %r2502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2526, %r2502, %r2525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2529, %r2521, %r2526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2532, %r835, %r2523, %r2513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2537, %r2513, %r2536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2540, %r2532, %r2537;
	// end inline asm
	// begin inline asm
	mov.b32 %r2548, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2559, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2547, %r16236, -2004318072;
	// begin inline asm
	lop3.b32 %r2545, %r824, %r2547, %r2548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2550, %r2548, %r2549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2553, %r2545, %r2550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2556, %r835, %r2547, %r2559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2561, %r2559, %r2560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2564, %r2556, %r2561;
	// end inline asm
	shr.u32 	%r2569, %r2547, 8;
	// begin inline asm
	lop3.b32 %r2567, %r824, %r2569, %r2548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2572, %r2548, %r2571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2575, %r2567, %r2572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2578, %r835, %r2569, %r2559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2583, %r2559, %r2582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2586, %r2578, %r2583;
	// end inline asm
	// begin inline asm
	mov.b32 %r2594, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2605, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2593, %r16245, -2004318072;
	// begin inline asm
	lop3.b32 %r2591, %r824, %r2593, %r2594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2596, %r2594, %r2595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2599, %r2591, %r2596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2602, %r835, %r2593, %r2605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2607, %r2605, %r2606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2610, %r2602, %r2607;
	// end inline asm
	shr.u32 	%r2615, %r2593, 8;
	// begin inline asm
	lop3.b32 %r2613, %r824, %r2615, %r2594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2618, %r2594, %r2617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2621, %r2613, %r2618;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2624, %r835, %r2615, %r2605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2628, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2629, %r2605, %r2628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2632, %r2624, %r2629;
	// end inline asm
	// begin inline asm
	mov.b32 %r2640, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2651, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2639, %r16246, -2004318072;
	// begin inline asm
	lop3.b32 %r2637, %r824, %r2639, %r2640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2641, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2642, %r2640, %r2641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2645, %r2637, %r2642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2648, %r835, %r2639, %r2651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2653, %r2651, %r2652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2656, %r2648, %r2653;
	// end inline asm
	shr.u32 	%r2661, %r2639, 8;
	// begin inline asm
	lop3.b32 %r2659, %r824, %r2661, %r2640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2664, %r2640, %r2663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2667, %r2659, %r2664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2670, %r835, %r2661, %r2651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2675, %r2651, %r2674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2678, %r2670, %r2675;
	// end inline asm
	// begin inline asm
	mov.b32 %r2686, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2697, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2685, %r16247, -2004318072;
	// begin inline asm
	lop3.b32 %r2683, %r824, %r2685, %r2686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2687, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2688, %r2686, %r2687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2691, %r2683, %r2688;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2694, %r835, %r2685, %r2697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2698, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2699, %r2697, %r2698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2702, %r2694, %r2699;
	// end inline asm
	shr.u32 	%r2707, %r2685, 8;
	// begin inline asm
	lop3.b32 %r2705, %r824, %r2707, %r2686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2709, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2710, %r2686, %r2709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2713, %r2705, %r2710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2716, %r835, %r2707, %r2697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2720, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2721, %r2697, %r2720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2724, %r2716, %r2721;
	// end inline asm
	// begin inline asm
	mov.b32 %r2732, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2743, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2731, %r16248, -2004318072;
	// begin inline asm
	lop3.b32 %r2729, %r824, %r2731, %r2732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2733, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2734, %r2732, %r2733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2737, %r2729, %r2734;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2740, %r835, %r2731, %r2743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2744, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2745, %r2743, %r2744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2748, %r2740, %r2745;
	// end inline asm
	shr.u32 	%r2753, %r2731, 8;
	// begin inline asm
	lop3.b32 %r2751, %r824, %r2753, %r2732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2755, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2756, %r2732, %r2755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2759, %r2751, %r2756;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2762, %r835, %r2753, %r2743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2766, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2767, %r2743, %r2766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2770, %r2762, %r2767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2908, %r352, %r2415, %r2215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2905, %r352, %r2426, %r2221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2917, %r352, %r2437, %r2227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2914, %r352, %r2448, %r2233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2926, %r352, %r2461, %r2239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2923, %r352, %r2472, %r2245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2935, %r352, %r2483, %r2251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2932, %r352, %r2494, %r2257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2944, %r352, %r2507, %r2263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2941, %r352, %r2518, %r2269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2953, %r352, %r2529, %r2275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2950, %r352, %r2540, %r2281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2962, %r352, %r2553, %r2287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2959, %r352, %r2564, %r2293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2971, %r352, %r2575, %r2299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2968, %r352, %r2586, %r2305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2980, %r370, %r2599, %r2311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2977, %r370, %r2610, %r2317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2989, %r370, %r2621, %r2323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2986, %r370, %r2632, %r2329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2998, %r370, %r2645, %r2335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2995, %r370, %r2656, %r2341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3007, %r370, %r2667, %r2347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3004, %r370, %r2678, %r2353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3016, %r370, %r2691, %r2359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3013, %r370, %r2702, %r2365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3025, %r370, %r2713, %r2371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3022, %r370, %r2724, %r2377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3034, %r370, %r2737, %r2383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3031, %r370, %r2748, %r2389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3043, %r370, %r2759, %r2395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3040, %r370, %r2770, %r2401;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2901, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2903, %r2901, %r2905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2906, %r434, %r2908, %r2903;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2910, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2912, %r2910, %r2914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2915, %r434, %r2917, %r2912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2919, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2921, %r2919, %r2923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2924, %r434, %r2926, %r2921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2928, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2930, %r2928, %r2932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2933, %r434, %r2935, %r2930;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2937, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2939, %r2937, %r2941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2942, %r434, %r2944, %r2939;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2946, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2948, %r2946, %r2950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2951, %r434, %r2953, %r2948;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2955, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2957, %r2955, %r2959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2960, %r434, %r2962, %r2957;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2964, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2966, %r2964, %r2968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2969, %r434, %r2971, %r2966;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2973, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2975, %r2973, %r2977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2978, %r437, %r2980, %r2975;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2982, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2984, %r2982, %r2986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2987, %r437, %r2989, %r2984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2991, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2993, %r2991, %r2995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2996, %r437, %r2998, %r2993;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3000, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3002, %r3000, %r3004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3005, %r437, %r3007, %r3002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3009, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3011, %r3009, %r3013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3014, %r437, %r3016, %r3011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3018, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3020, %r3018, %r3022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3023, %r437, %r3025, %r3020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3027, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3029, %r3027, %r3031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3032, %r437, %r3034, %r3029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3036, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3038, %r3036, %r3040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3041, %r437, %r3043, %r3038;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3045, %r440, %r2908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3048, %r434, %r2905, %r3045;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3052, %r440, %r2917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3055, %r434, %r2914, %r3052;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3059, %r440, %r2926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3062, %r434, %r2923, %r3059;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3066, %r440, %r2935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3069, %r434, %r2932, %r3066;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3073, %r440, %r2944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3076, %r434, %r2941, %r3073;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3080, %r440, %r2953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3083, %r434, %r2950, %r3080;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3087, %r440, %r2962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3090, %r434, %r2959, %r3087;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3094, %r440, %r2971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3097, %r434, %r2968, %r3094;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3101, %r443, %r2980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3104, %r437, %r2977, %r3101;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3108, %r443, %r2989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3111, %r437, %r2986, %r3108;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3115, %r443, %r2998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3118, %r437, %r2995, %r3115;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3122, %r443, %r3007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3125, %r437, %r3004, %r3122;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3129, %r443, %r3016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3132, %r437, %r3013, %r3129;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3136, %r443, %r3025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3139, %r437, %r3022, %r3136;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3143, %r443, %r3034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3146, %r437, %r3031, %r3143;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3150, %r443, %r3043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3153, %r437, %r3040, %r3150;
	// end inline asm
	mov.u32 	%r3165, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3324, %r3321}, {%r482, %r488, %r485, %r491}, {%r2906, %r3048}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3333, %r3330}, {%r482, %r488, %r485, %r491}, {%r2915, %r3055}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3342, %r3339}, {%r482, %r488, %r485, %r491}, {%r2924, %r3062}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3351, %r3348}, {%r482, %r488, %r485, %r491}, {%r2933, %r3069}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3360, %r3357}, {%r482, %r488, %r485, %r491}, {%r2942, %r3076}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3369, %r3366}, {%r482, %r488, %r485, %r491}, {%r2951, %r3083}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3378, %r3375}, {%r482, %r488, %r485, %r491}, {%r2960, %r3090}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3387, %r3384}, {%r482, %r488, %r485, %r491}, {%r2969, %r3097}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3396, %r3393}, {%r482, %r488, %r485, %r491}, {%r2978, %r3104}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3405, %r3402}, {%r482, %r488, %r485, %r491}, {%r2987, %r3111}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3414, %r3411}, {%r482, %r488, %r485, %r491}, {%r2996, %r3118}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3423, %r3420}, {%r482, %r488, %r485, %r491}, {%r3005, %r3125}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3432, %r3429}, {%r482, %r488, %r485, %r491}, {%r3014, %r3132}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3441, %r3438}, {%r482, %r488, %r485, %r491}, {%r3023, %r3139}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3450, %r3447}, {%r482, %r488, %r485, %r491}, {%r3032, %r3146}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3459, %r3456}, {%r482, %r488, %r485, %r491}, {%r3041, %r3153}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3317, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3319, %r3317, %r3321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3322, %r529, %r3324, %r3319;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3326, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3328, %r3326, %r3330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3331, %r529, %r3333, %r3328;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3335, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3337, %r3335, %r3339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3340, %r529, %r3342, %r3337;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3344, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3346, %r3344, %r3348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3349, %r529, %r3351, %r3346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3353, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3355, %r3353, %r3357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3358, %r529, %r3360, %r3355;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3362, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3364, %r3362, %r3366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3367, %r529, %r3369, %r3364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3371, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3373, %r3371, %r3375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3376, %r529, %r3378, %r3373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3380, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3382, %r3380, %r3384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3385, %r529, %r3387, %r3382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3389, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3391, %r3389, %r3393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3394, %r529, %r3396, %r3391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3398, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3400, %r3398, %r3402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3403, %r529, %r3405, %r3400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3407, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3409, %r3407, %r3411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3412, %r529, %r3414, %r3409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3416, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3418, %r3416, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3421, %r529, %r3423, %r3418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3425, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3427, %r3425, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3430, %r529, %r3432, %r3427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3434, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3436, %r3434, %r3438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3439, %r529, %r3441, %r3436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3443, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3445, %r3443, %r3447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3448, %r529, %r3450, %r3445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3452, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3454, %r3452, %r3456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3457, %r529, %r3459, %r3454;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3461, %r532, %r3324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3464, %r529, %r3321, %r3461;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3468, %r532, %r3333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3471, %r529, %r3330, %r3468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3475, %r532, %r3342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3478, %r529, %r3339, %r3475;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3482, %r532, %r3351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3485, %r529, %r3348, %r3482;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3489, %r532, %r3360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3492, %r529, %r3357, %r3489;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3496, %r532, %r3369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3499, %r529, %r3366, %r3496;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3503, %r532, %r3378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3506, %r529, %r3375, %r3503;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3510, %r532, %r3387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3513, %r529, %r3384, %r3510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3517, %r532, %r3396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3520, %r529, %r3393, %r3517;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3524, %r532, %r3405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3527, %r529, %r3402, %r3524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3531, %r532, %r3414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3534, %r529, %r3411, %r3531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3538, %r532, %r3423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3541, %r529, %r3420, %r3538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3545, %r532, %r3432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3548, %r529, %r3429, %r3545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3552, %r532, %r3441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3555, %r529, %r3438, %r3552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3559, %r532, %r3450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3562, %r529, %r3447, %r3559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3566, %r532, %r3459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3569, %r529, %r3456, %r3566;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3862, %r3865}, {%r572, %r578, %r575, %r581}, {%r3322, %r3464}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3868, %r3871}, {%r572, %r578, %r575, %r581}, {%r3331, %r3471}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3874, %r3877}, {%r572, %r578, %r575, %r581}, {%r3340, %r3478}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3880, %r3883}, {%r572, %r578, %r575, %r581}, {%r3349, %r3485}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3886, %r3889}, {%r572, %r578, %r575, %r581}, {%r3358, %r3492}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3892, %r3895}, {%r572, %r578, %r575, %r581}, {%r3367, %r3499}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3898, %r3901}, {%r572, %r578, %r575, %r581}, {%r3376, %r3506}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3904, %r3907}, {%r572, %r578, %r575, %r581}, {%r3385, %r3513}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3863, %r3866}, {%r572, %r578, %r575, %r581}, {%r3394, %r3520}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3869, %r3872}, {%r572, %r578, %r575, %r581}, {%r3403, %r3527}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3875, %r3878}, {%r572, %r578, %r575, %r581}, {%r3412, %r3534}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3881, %r3884}, {%r572, %r578, %r575, %r581}, {%r3421, %r3541}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3887, %r3890}, {%r572, %r578, %r575, %r581}, {%r3430, %r3548}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3893, %r3896}, {%r572, %r578, %r575, %r581}, {%r3439, %r3555}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3899, %r3902}, {%r572, %r578, %r575, %r581}, {%r3448, %r3562}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3905, %r3908}, {%r572, %r578, %r575, %r581}, {%r3457, %r3569}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3861, %r3862, %r3863;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3864, %r3865, %r3866;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3867, %r3868, %r3869;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3870, %r3871, %r3872;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3873, %r3874, %r3875;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3876, %r3877, %r3878;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3879, %r3880, %r3881;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3882, %r3883, %r3884;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3885, %r3886, %r3887;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3888, %r3889, %r3890;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3891, %r3892, %r3893;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3894, %r3895, %r3896;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3897, %r3898, %r3899;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3900, %r3901, %r3902;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3903, %r3904, %r3905;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3906, %r3907, %r3908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3909, %r3862, %r3863;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3912, %r3865, %r3866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3915, %r3868, %r3869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3918, %r3871, %r3872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3921, %r3874, %r3875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3924, %r3877, %r3878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3927, %r3880, %r3881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3930, %r3883, %r3884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3933, %r3886, %r3887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3936, %r3889, %r3890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3939, %r3892, %r3893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3942, %r3895, %r3896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3945, %r3898, %r3899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3948, %r3901, %r3902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3951, %r3904, %r3905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3954, %r3907, %r3908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3957, %r16, %r3861;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3960, %r16, %r3864;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3963, %r16, %r3867;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3966, %r16, %r3870;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3969, %r16, %r3873;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3972, %r16, %r3876;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3975, %r16, %r3879;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3978, %r16, %r3882;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3981, %r16, %r3885;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3984, %r16, %r3888;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3987, %r16, %r3891;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3990, %r16, %r3894;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3993, %r16, %r3897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3996, %r16, %r3900;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3999, %r16, %r3903;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4002, %r16, %r3906;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4005, %r17, %r3909;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4008, %r17, %r3912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4011, %r17, %r3915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4014, %r17, %r3918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4017, %r17, %r3921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4020, %r17, %r3924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4023, %r17, %r3927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4026, %r17, %r3930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4029, %r17, %r3933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4032, %r17, %r3936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4035, %r17, %r3939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4038, %r17, %r3942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4041, %r17, %r3945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4044, %r17, %r3948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4047, %r17, %r3951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4050, %r17, %r3954;
	// end inline asm
	// begin inline asm
	mov.b32 %r4053, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4054, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4055, %r3957, %r4053;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4058, %r4055, %r4054;
	// end inline asm
	// begin inline asm
	mov.b32 %r4061, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4062, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4063, %r3960, %r4061;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4066, %r4063, %r4062;
	// end inline asm
	// begin inline asm
	mov.b32 %r4069, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4070, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4071, %r3963, %r4069;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4074, %r4071, %r4070;
	// end inline asm
	// begin inline asm
	mov.b32 %r4077, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4078, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4079, %r3966, %r4077;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4082, %r4079, %r4078;
	// end inline asm
	// begin inline asm
	mov.b32 %r4085, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4086, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4087, %r3969, %r4085;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4090, %r4087, %r4086;
	// end inline asm
	// begin inline asm
	mov.b32 %r4093, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4094, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4095, %r3972, %r4093;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4098, %r4095, %r4094;
	// end inline asm
	// begin inline asm
	mov.b32 %r4101, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4102, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4103, %r3975, %r4101;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4106, %r4103, %r4102;
	// end inline asm
	// begin inline asm
	mov.b32 %r4109, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4110, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4111, %r3978, %r4109;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4114, %r4111, %r4110;
	// end inline asm
	// begin inline asm
	mov.b32 %r4117, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4118, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4119, %r3981, %r4117;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4122, %r4119, %r4118;
	// end inline asm
	// begin inline asm
	mov.b32 %r4125, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4126, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4127, %r3984, %r4125;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4130, %r4127, %r4126;
	// end inline asm
	// begin inline asm
	mov.b32 %r4133, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4134, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4135, %r3987, %r4133;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4138, %r4135, %r4134;
	// end inline asm
	// begin inline asm
	mov.b32 %r4141, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4142, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4143, %r3990, %r4141;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4146, %r4143, %r4142;
	// end inline asm
	// begin inline asm
	mov.b32 %r4149, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4150, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4151, %r3993, %r4149;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4154, %r4151, %r4150;
	// end inline asm
	// begin inline asm
	mov.b32 %r4157, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4158, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4159, %r3996, %r4157;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4162, %r4159, %r4158;
	// end inline asm
	// begin inline asm
	mov.b32 %r4165, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4166, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4167, %r3999, %r4165;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4170, %r4167, %r4166;
	// end inline asm
	// begin inline asm
	mov.b32 %r4173, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4174, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4175, %r4002, %r4173;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4178, %r4175, %r4174;
	// end inline asm
	// begin inline asm
	mov.b32 %r4181, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4182, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4183, %r4005, %r4181;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4186, %r4183, %r4182;
	// end inline asm
	// begin inline asm
	mov.b32 %r4189, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4190, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4191, %r4008, %r4189;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4194, %r4191, %r4190;
	// end inline asm
	// begin inline asm
	mov.b32 %r4197, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4198, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4199, %r4011, %r4197;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4202, %r4199, %r4198;
	// end inline asm
	// begin inline asm
	mov.b32 %r4205, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4206, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4207, %r4014, %r4205;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4210, %r4207, %r4206;
	// end inline asm
	// begin inline asm
	mov.b32 %r4213, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4214, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4215, %r4017, %r4213;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4218, %r4215, %r4214;
	// end inline asm
	// begin inline asm
	mov.b32 %r4221, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4222, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4223, %r4020, %r4221;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4226, %r4223, %r4222;
	// end inline asm
	// begin inline asm
	mov.b32 %r4229, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4230, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4231, %r4023, %r4229;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4234, %r4231, %r4230;
	// end inline asm
	// begin inline asm
	mov.b32 %r4237, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4238, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4239, %r4026, %r4237;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4242, %r4239, %r4238;
	// end inline asm
	// begin inline asm
	mov.b32 %r4245, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4246, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4247, %r4029, %r4245;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4250, %r4247, %r4246;
	// end inline asm
	// begin inline asm
	mov.b32 %r4253, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4254, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4255, %r4032, %r4253;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4258, %r4255, %r4254;
	// end inline asm
	// begin inline asm
	mov.b32 %r4261, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4262, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4263, %r4035, %r4261;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4266, %r4263, %r4262;
	// end inline asm
	// begin inline asm
	mov.b32 %r4269, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4270, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4271, %r4038, %r4269;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4274, %r4271, %r4270;
	// end inline asm
	// begin inline asm
	mov.b32 %r4277, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4278, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4279, %r4041, %r4277;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4282, %r4279, %r4278;
	// end inline asm
	// begin inline asm
	mov.b32 %r4285, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4286, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4287, %r4044, %r4285;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4290, %r4287, %r4286;
	// end inline asm
	// begin inline asm
	mov.b32 %r4293, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4294, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4295, %r4047, %r4293;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4298, %r4295, %r4294;
	// end inline asm
	// begin inline asm
	mov.b32 %r4301, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4302, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4303, %r4050, %r4301;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4306, %r4303, %r4302;
	// end inline asm
	// begin inline asm
	mov.b32 %r4312, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4310, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4311, %r4312, %r4310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4314, %r4058, %r4311;
	// end inline asm
	// begin inline asm
	mov.b32 %r4317, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4318, %r4312, %r4317;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4321, %r4066, %r4318;
	// end inline asm
	// begin inline asm
	mov.b32 %r4324, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4325, %r4312, %r4324;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4328, %r4074, %r4325;
	// end inline asm
	// begin inline asm
	mov.b32 %r4331, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4332, %r4312, %r4331;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4335, %r4082, %r4332;
	// end inline asm
	mov.u32 	%r4341, 25152;
	// begin inline asm
	prmt.b32 %r4338, %r4314, %r4328, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4342, %r4321, %r4335, %r4341;
	// end inline asm
	shl.b32 	%r4349, %r4342, 4;
	mov.u32 	%r4347, 252645135;
	// begin inline asm
	lop3.b32 %r4346, %r4347, %r4338, %r4349, 202;
	// end inline asm
	xor.b32  	%r16093, %r4346, -2004318072;
	// begin inline asm
	mov.b32 %r4353, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4352, %r4353, %r4351;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4355, %r4090, %r4352;
	// end inline asm
	// begin inline asm
	mov.b32 %r4358, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4359, %r4353, %r4358;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4362, %r4098, %r4359;
	// end inline asm
	// begin inline asm
	mov.b32 %r4365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4366, %r4353, %r4365;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4369, %r4106, %r4366;
	// end inline asm
	// begin inline asm
	mov.b32 %r4372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4373, %r4353, %r4372;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4376, %r4114, %r4373;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4379, %r4355, %r4369, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4383, %r4362, %r4376, %r4341;
	// end inline asm
	shl.b32 	%r4390, %r4383, 4;
	// begin inline asm
	lop3.b32 %r4387, %r4347, %r4379, %r4390, 202;
	// end inline asm
	xor.b32  	%r16094, %r4387, -2004318072;
	// begin inline asm
	mov.b32 %r4394, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4392, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4393, %r4394, %r4392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4396, %r4122, %r4393;
	// end inline asm
	// begin inline asm
	mov.b32 %r4399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4400, %r4394, %r4399;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4403, %r4130, %r4400;
	// end inline asm
	// begin inline asm
	mov.b32 %r4406, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4407, %r4394, %r4406;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4410, %r4138, %r4407;
	// end inline asm
	// begin inline asm
	mov.b32 %r4413, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4414, %r4394, %r4413;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4417, %r4146, %r4414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4420, %r4396, %r4410, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4424, %r4403, %r4417, %r4341;
	// end inline asm
	shl.b32 	%r4431, %r4424, 4;
	// begin inline asm
	lop3.b32 %r4428, %r4347, %r4420, %r4431, 202;
	// end inline asm
	xor.b32  	%r16095, %r4428, -2004318072;
	// begin inline asm
	mov.b32 %r4435, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4434, %r4435, %r4433;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4437, %r4154, %r4434;
	// end inline asm
	// begin inline asm
	mov.b32 %r4440, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4441, %r4435, %r4440;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4444, %r4162, %r4441;
	// end inline asm
	// begin inline asm
	mov.b32 %r4447, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4448, %r4435, %r4447;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4451, %r4170, %r4448;
	// end inline asm
	// begin inline asm
	mov.b32 %r4454, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4455, %r4435, %r4454;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4458, %r4178, %r4455;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4461, %r4437, %r4451, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4465, %r4444, %r4458, %r4341;
	// end inline asm
	shl.b32 	%r4472, %r4465, 4;
	// begin inline asm
	lop3.b32 %r4469, %r4347, %r4461, %r4472, 202;
	// end inline asm
	xor.b32  	%r16096, %r4469, -2004318072;
	// begin inline asm
	mov.b32 %r4476, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4475, %r4476, %r4474;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4478, %r4186, %r4475;
	// end inline asm
	// begin inline asm
	mov.b32 %r4481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4482, %r4476, %r4481;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4485, %r4194, %r4482;
	// end inline asm
	// begin inline asm
	mov.b32 %r4488, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4489, %r4476, %r4488;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4492, %r4202, %r4489;
	// end inline asm
	// begin inline asm
	mov.b32 %r4495, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4496, %r4476, %r4495;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4499, %r4210, %r4496;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4502, %r4478, %r4492, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4506, %r4485, %r4499, %r4341;
	// end inline asm
	shl.b32 	%r4513, %r4506, 4;
	// begin inline asm
	lop3.b32 %r4510, %r4347, %r4502, %r4513, 202;
	// end inline asm
	xor.b32  	%r16097, %r4510, -2004318072;
	// begin inline asm
	mov.b32 %r4517, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4515, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4516, %r4517, %r4515;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4519, %r4218, %r4516;
	// end inline asm
	// begin inline asm
	mov.b32 %r4522, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4523, %r4517, %r4522;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4526, %r4226, %r4523;
	// end inline asm
	// begin inline asm
	mov.b32 %r4529, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4530, %r4517, %r4529;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4533, %r4234, %r4530;
	// end inline asm
	// begin inline asm
	mov.b32 %r4536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4537, %r4517, %r4536;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4540, %r4242, %r4537;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4543, %r4519, %r4533, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4547, %r4526, %r4540, %r4341;
	// end inline asm
	shl.b32 	%r4554, %r4547, 4;
	// begin inline asm
	lop3.b32 %r4551, %r4347, %r4543, %r4554, 202;
	// end inline asm
	xor.b32  	%r16098, %r4551, -2004318072;
	// begin inline asm
	mov.b32 %r4558, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4557, %r4558, %r4556;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4560, %r4250, %r4557;
	// end inline asm
	// begin inline asm
	mov.b32 %r4563, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4564, %r4558, %r4563;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4567, %r4258, %r4564;
	// end inline asm
	// begin inline asm
	mov.b32 %r4570, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4571, %r4558, %r4570;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4574, %r4266, %r4571;
	// end inline asm
	// begin inline asm
	mov.b32 %r4577, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4578, %r4558, %r4577;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4581, %r4274, %r4578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4584, %r4560, %r4574, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4588, %r4567, %r4581, %r4341;
	// end inline asm
	shl.b32 	%r4595, %r4588, 4;
	// begin inline asm
	lop3.b32 %r4592, %r4347, %r4584, %r4595, 202;
	// end inline asm
	xor.b32  	%r16099, %r4592, -2004318072;
	// begin inline asm
	mov.b32 %r4599, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4598, %r4599, %r4597;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4601, %r4282, %r4598;
	// end inline asm
	// begin inline asm
	mov.b32 %r4604, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4605, %r4599, %r4604;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4608, %r4290, %r4605;
	// end inline asm
	// begin inline asm
	mov.b32 %r4611, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4612, %r4599, %r4611;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4615, %r4298, %r4612;
	// end inline asm
	// begin inline asm
	mov.b32 %r4618, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4619, %r4599, %r4618;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4622, %r4306, %r4619;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4625, %r4601, %r4615, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4629, %r4608, %r4622, %r4341;
	// end inline asm
	shl.b32 	%r4636, %r4629, 4;
	// begin inline asm
	lop3.b32 %r4633, %r4347, %r4625, %r4636, 202;
	// end inline asm
	xor.b32  	%r16100, %r4633, -2004318072;
	add.s64 	%rd93, %rd126, %rd25;
	st.shared.u32 	[%rd93], %r16093;
	add.s64 	%rd94, %rd126, %rd24;
	st.shared.u32 	[%rd94], %r16094;
	add.s64 	%rd95, %rd126, %rd23;
	st.shared.u32 	[%rd95], %r16095;
	add.s64 	%rd96, %rd126, %rd22;
	st.shared.u32 	[%rd96], %r16096;
	add.s64 	%rd97, %rd126, %rd21;
	st.shared.u32 	[%rd97], %r16097;
	add.s64 	%rd98, %rd126, %rd20;
	st.shared.u32 	[%rd98], %r16098;
	add.s64 	%rd99, %rd126, %rd19;
	st.shared.u32 	[%rd99], %r16099;
	add.s64 	%rd100, %rd126, %rd18;
	st.shared.u32 	[%rd100], %r16100;
	ld.shared.u32 	%r16225, [%rd85];
	ld.shared.u32 	%r16226, [%rd86];
	ld.shared.u32 	%r16227, [%rd87];
	ld.shared.u32 	%r16228, [%rd88];
	ld.shared.u32 	%r16237, [%rd89];
	ld.shared.u32 	%r16238, [%rd90];
	ld.shared.u32 	%r16239, [%rd91];
	ld.shared.u32 	%r16240, [%rd92];
	// begin inline asm
	mov.b32 %r4642, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4653, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4641, %r16225, -2004318072;
	// begin inline asm
	lop3.b32 %r4639, %r824, %r4641, %r4642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4644, %r4642, %r4643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4647, %r4639, %r4644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4650, %r835, %r4641, %r4653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4655, %r4653, %r4654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4658, %r4650, %r4655;
	// end inline asm
	shr.u32 	%r4663, %r4641, 8;
	// begin inline asm
	lop3.b32 %r4661, %r824, %r4663, %r4642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4666, %r4642, %r4665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4669, %r4661, %r4666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4672, %r835, %r4663, %r4653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4676, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4677, %r4653, %r4676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4680, %r4672, %r4677;
	// end inline asm
	// begin inline asm
	mov.b32 %r4688, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4699, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4687, %r16226, -2004318072;
	// begin inline asm
	lop3.b32 %r4685, %r824, %r4687, %r4688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4690, %r4688, %r4689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4693, %r4685, %r4690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4696, %r835, %r4687, %r4699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4701, %r4699, %r4700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4704, %r4696, %r4701;
	// end inline asm
	shr.u32 	%r4709, %r4687, 8;
	// begin inline asm
	lop3.b32 %r4707, %r824, %r4709, %r4688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4711, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4712, %r4688, %r4711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4715, %r4707, %r4712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4718, %r835, %r4709, %r4699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4722, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4723, %r4699, %r4722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4726, %r4718, %r4723;
	// end inline asm
	// begin inline asm
	mov.b32 %r4734, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4745, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4733, %r16227, -2004318072;
	// begin inline asm
	lop3.b32 %r4731, %r824, %r4733, %r4734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4736, %r4734, %r4735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4739, %r4731, %r4736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4742, %r835, %r4733, %r4745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4747, %r4745, %r4746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4750, %r4742, %r4747;
	// end inline asm
	shr.u32 	%r4755, %r4733, 8;
	// begin inline asm
	lop3.b32 %r4753, %r824, %r4755, %r4734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4757, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4758, %r4734, %r4757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4761, %r4753, %r4758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4764, %r835, %r4755, %r4745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4768, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4769, %r4745, %r4768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4772, %r4764, %r4769;
	// end inline asm
	// begin inline asm
	mov.b32 %r4780, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4791, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4779, %r16228, -2004318072;
	// begin inline asm
	lop3.b32 %r4777, %r824, %r4779, %r4780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4782, %r4780, %r4781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4785, %r4777, %r4782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4788, %r835, %r4779, %r4791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4792, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4793, %r4791, %r4792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4796, %r4788, %r4793;
	// end inline asm
	shr.u32 	%r4801, %r4779, 8;
	// begin inline asm
	lop3.b32 %r4799, %r824, %r4801, %r4780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4803, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4804, %r4780, %r4803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4807, %r4799, %r4804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4810, %r835, %r4801, %r4791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4814, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4815, %r4791, %r4814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4818, %r4810, %r4815;
	// end inline asm
	// begin inline asm
	mov.b32 %r4826, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4837, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4825, %r16237, -2004318072;
	// begin inline asm
	lop3.b32 %r4823, %r824, %r4825, %r4826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4828, %r4826, %r4827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4831, %r4823, %r4828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4834, %r835, %r4825, %r4837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4839, %r4837, %r4838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4842, %r4834, %r4839;
	// end inline asm
	shr.u32 	%r4847, %r4825, 8;
	// begin inline asm
	lop3.b32 %r4845, %r824, %r4847, %r4826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4849, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4850, %r4826, %r4849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4853, %r4845, %r4850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4856, %r835, %r4847, %r4837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4860, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4861, %r4837, %r4860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4864, %r4856, %r4861;
	// end inline asm
	// begin inline asm
	mov.b32 %r4872, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4883, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4871, %r16238, -2004318072;
	// begin inline asm
	lop3.b32 %r4869, %r824, %r4871, %r4872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4874, %r4872, %r4873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4877, %r4869, %r4874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4880, %r835, %r4871, %r4883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4885, %r4883, %r4884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4888, %r4880, %r4885;
	// end inline asm
	shr.u32 	%r4893, %r4871, 8;
	// begin inline asm
	lop3.b32 %r4891, %r824, %r4893, %r4872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4895, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4896, %r4872, %r4895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4899, %r4891, %r4896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4902, %r835, %r4893, %r4883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4906, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4907, %r4883, %r4906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4910, %r4902, %r4907;
	// end inline asm
	// begin inline asm
	mov.b32 %r4918, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4929, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4917, %r16239, -2004318072;
	// begin inline asm
	lop3.b32 %r4915, %r824, %r4917, %r4918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4920, %r4918, %r4919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4923, %r4915, %r4920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4926, %r835, %r4917, %r4929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4931, %r4929, %r4930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4934, %r4926, %r4931;
	// end inline asm
	shr.u32 	%r4939, %r4917, 8;
	// begin inline asm
	lop3.b32 %r4937, %r824, %r4939, %r4918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4941, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4942, %r4918, %r4941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4945, %r4937, %r4942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4948, %r835, %r4939, %r4929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4952, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4953, %r4929, %r4952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4956, %r4948, %r4953;
	// end inline asm
	// begin inline asm
	mov.b32 %r4964, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4975, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4963, %r16240, -2004318072;
	// begin inline asm
	lop3.b32 %r4961, %r824, %r4963, %r4964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4966, %r4964, %r4965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4969, %r4961, %r4966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4972, %r835, %r4963, %r4975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4977, %r4975, %r4976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4980, %r4972, %r4977;
	// end inline asm
	shr.u32 	%r4985, %r4963, 8;
	// begin inline asm
	lop3.b32 %r4983, %r824, %r4985, %r4964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4988, %r4964, %r4987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4991, %r4983, %r4988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4994, %r835, %r4985, %r4975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4999, %r4975, %r4998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5002, %r4994, %r4999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5005, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5007, %r5005, %r4647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5010, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5012, %r5010, %r4658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5015, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5017, %r5015, %r4669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5020, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5022, %r5020, %r4680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5025, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5027, %r5025, %r4693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5030, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5032, %r5030, %r4704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5035, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5037, %r5035, %r4715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5040, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5042, %r5040, %r4726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5045, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5047, %r5045, %r4739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5050, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5052, %r5050, %r4750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5055, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5057, %r5055, %r4761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5060, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5062, %r5060, %r4772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5065, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5067, %r5065, %r4785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5070, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5072, %r5070, %r4796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5075, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5077, %r5075, %r4807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5080, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5082, %r5080, %r4818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5085, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5087, %r5085, %r4831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5090, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5092, %r5090, %r4842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5095, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5097, %r5095, %r4853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5100, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5102, %r5100, %r4864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5105, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5107, %r5105, %r4877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5110, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5112, %r5110, %r4888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5115, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5117, %r5115, %r4899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5120, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5122, %r5120, %r4910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5125, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5127, %r5125, %r4923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5130, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5132, %r5130, %r4934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5135, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5137, %r5135, %r4945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5140, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5142, %r5140, %r4956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5145, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5147, %r5145, %r4969;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5150, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5152, %r5150, %r4980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5155, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5157, %r5155, %r4991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5160, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5162, %r5160, %r5002;
	// end inline asm
	// begin inline asm
	mov.b32 %r5170, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5181, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5167, %r824, %r1849, %r5170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5171, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5172, %r5170, %r5171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5175, %r5167, %r5172;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5178, %r835, %r1849, %r5181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5182, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5183, %r5181, %r5182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5186, %r5178, %r5183;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5189, %r824, %r1871, %r5170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5193, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5194, %r5170, %r5193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5197, %r5189, %r5194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5200, %r835, %r1871, %r5181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5204, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5205, %r5181, %r5204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5208, %r5200, %r5205;
	// end inline asm
	// begin inline asm
	mov.b32 %r5216, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5227, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5213, %r824, %r1895, %r5216, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5217, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5218, %r5216, %r5217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5221, %r5213, %r5218;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5224, %r835, %r1895, %r5227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5228, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5229, %r5227, %r5228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5232, %r5224, %r5229;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5235, %r824, %r1917, %r5216, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5239, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5240, %r5216, %r5239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5243, %r5235, %r5240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5246, %r835, %r1917, %r5227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5251, %r5227, %r5250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5254, %r5246, %r5251;
	// end inline asm
	// begin inline asm
	mov.b32 %r5262, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5273, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5259, %r824, %r1941, %r5262, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5263, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5264, %r5262, %r5263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5267, %r5259, %r5264;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5270, %r835, %r1941, %r5273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5274, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5275, %r5273, %r5274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5278, %r5270, %r5275;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5281, %r824, %r1963, %r5262, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5286, %r5262, %r5285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5289, %r5281, %r5286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5292, %r835, %r1963, %r5273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5296, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5297, %r5273, %r5296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5300, %r5292, %r5297;
	// end inline asm
	// begin inline asm
	mov.b32 %r5308, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5319, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5305, %r824, %r1987, %r5308, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5309, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5310, %r5308, %r5309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5313, %r5305, %r5310;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5316, %r835, %r1987, %r5319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5320, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5321, %r5319, %r5320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5324, %r5316, %r5321;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5327, %r824, %r2009, %r5308, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5331, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5332, %r5308, %r5331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5335, %r5327, %r5332;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5338, %r835, %r2009, %r5319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5343, %r5319, %r5342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5346, %r5338, %r5343;
	// end inline asm
	// begin inline asm
	mov.b32 %r5354, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5365, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5351, %r824, %r2033, %r5354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5355, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5356, %r5354, %r5355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5359, %r5351, %r5356;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5362, %r835, %r2033, %r5365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5367, %r5365, %r5366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5370, %r5362, %r5367;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5373, %r824, %r2055, %r5354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5377, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5378, %r5354, %r5377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5381, %r5373, %r5378;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5384, %r835, %r2055, %r5365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5389, %r5365, %r5388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5392, %r5384, %r5389;
	// end inline asm
	// begin inline asm
	mov.b32 %r5400, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5411, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5397, %r824, %r2079, %r5400, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5402, %r5400, %r5401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5405, %r5397, %r5402;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5408, %r835, %r2079, %r5411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5413, %r5411, %r5412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5416, %r5408, %r5413;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5419, %r824, %r2101, %r5400, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5423, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5424, %r5400, %r5423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5427, %r5419, %r5424;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5430, %r835, %r2101, %r5411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5435, %r5411, %r5434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5438, %r5430, %r5435;
	// end inline asm
	// begin inline asm
	mov.b32 %r5446, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5457, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5443, %r824, %r2125, %r5446, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5447, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5448, %r5446, %r5447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5451, %r5443, %r5448;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5454, %r835, %r2125, %r5457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5459, %r5457, %r5458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5462, %r5454, %r5459;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5465, %r824, %r2147, %r5446, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5470, %r5446, %r5469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5473, %r5465, %r5470;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5476, %r835, %r2147, %r5457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5481, %r5457, %r5480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5484, %r5476, %r5481;
	// end inline asm
	// begin inline asm
	mov.b32 %r5492, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5503, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5489, %r824, %r2171, %r5492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5493, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5494, %r5492, %r5493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5497, %r5489, %r5494;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5500, %r835, %r2171, %r5503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5505, %r5503, %r5504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5508, %r5500, %r5505;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5511, %r824, %r2193, %r5492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5515, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5516, %r5492, %r5515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5519, %r5511, %r5516;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5522, %r835, %r2193, %r5503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5526, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5527, %r5503, %r5526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5530, %r5522, %r5527;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5533, %r280, %r5175, %r5007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5537, %r280, %r5186, %r5012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5541, %r280, %r5197, %r5017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5545, %r280, %r5208, %r5022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5549, %r280, %r5221, %r5027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5553, %r280, %r5232, %r5032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5557, %r280, %r5243, %r5037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5561, %r280, %r5254, %r5042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5565, %r280, %r5267, %r5047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5569, %r280, %r5278, %r5052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5573, %r280, %r5289, %r5057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5577, %r280, %r5300, %r5062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5581, %r280, %r5313, %r5067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5585, %r280, %r5324, %r5072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5589, %r280, %r5335, %r5077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5593, %r280, %r5346, %r5082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5597, %r298, %r5359, %r5087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5601, %r298, %r5370, %r5092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5605, %r298, %r5381, %r5097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5609, %r298, %r5392, %r5102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5613, %r298, %r5405, %r5107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5617, %r298, %r5416, %r5112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5621, %r298, %r5427, %r5117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5625, %r298, %r5438, %r5122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5629, %r298, %r5451, %r5127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5633, %r298, %r5462, %r5132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5637, %r298, %r5473, %r5137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5641, %r298, %r5484, %r5142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5645, %r298, %r5497, %r5147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5649, %r298, %r5508, %r5152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5653, %r298, %r5519, %r5157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5657, %r298, %r5530, %r5162;
	// end inline asm
	// begin inline asm
	mov.b32 %r5666, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5677, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5663, %r824, %r2409, %r5666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5667, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5668, %r5666, %r5667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5671, %r5663, %r5668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5674, %r835, %r2409, %r5677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5679, %r5677, %r5678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5682, %r5674, %r5679;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5685, %r824, %r2431, %r5666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5690, %r5666, %r5689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5693, %r5685, %r5690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5696, %r835, %r2431, %r5677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5701, %r5677, %r5700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5704, %r5696, %r5701;
	// end inline asm
	// begin inline asm
	mov.b32 %r5712, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5723, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5709, %r824, %r2455, %r5712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5713, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5714, %r5712, %r5713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5717, %r5709, %r5714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5720, %r835, %r2455, %r5723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5724, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5725, %r5723, %r5724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5728, %r5720, %r5725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5731, %r824, %r2477, %r5712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5736, %r5712, %r5735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5739, %r5731, %r5736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5742, %r835, %r2477, %r5723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5747, %r5723, %r5746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5750, %r5742, %r5747;
	// end inline asm
	// begin inline asm
	mov.b32 %r5758, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5769, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5755, %r824, %r2501, %r5758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5759, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5760, %r5758, %r5759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5763, %r5755, %r5760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5766, %r835, %r2501, %r5769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5770, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5771, %r5769, %r5770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5774, %r5766, %r5771;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5777, %r824, %r2523, %r5758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5782, %r5758, %r5781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5785, %r5777, %r5782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5788, %r835, %r2523, %r5769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5792, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5793, %r5769, %r5792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5796, %r5788, %r5793;
	// end inline asm
	// begin inline asm
	mov.b32 %r5804, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5815, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5801, %r824, %r2547, %r5804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5805, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5806, %r5804, %r5805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5809, %r5801, %r5806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5812, %r835, %r2547, %r5815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5817, %r5815, %r5816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5820, %r5812, %r5817;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5823, %r824, %r2569, %r5804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5828, %r5804, %r5827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5831, %r5823, %r5828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5834, %r835, %r2569, %r5815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5839, %r5815, %r5838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5842, %r5834, %r5839;
	// end inline asm
	// begin inline asm
	mov.b32 %r5850, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5861, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5847, %r824, %r2593, %r5850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5852, %r5850, %r5851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5855, %r5847, %r5852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5858, %r835, %r2593, %r5861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5863, %r5861, %r5862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5866, %r5858, %r5863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5869, %r824, %r2615, %r5850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5874, %r5850, %r5873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5877, %r5869, %r5874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5880, %r835, %r2615, %r5861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5885, %r5861, %r5884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5888, %r5880, %r5885;
	// end inline asm
	// begin inline asm
	mov.b32 %r5896, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5907, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5893, %r824, %r2639, %r5896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5898, %r5896, %r5897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5901, %r5893, %r5898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5904, %r835, %r2639, %r5907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5909, %r5907, %r5908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5912, %r5904, %r5909;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5915, %r824, %r2661, %r5896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5920, %r5896, %r5919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5923, %r5915, %r5920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5926, %r835, %r2661, %r5907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5931, %r5907, %r5930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5934, %r5926, %r5931;
	// end inline asm
	// begin inline asm
	mov.b32 %r5942, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5953, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5939, %r824, %r2685, %r5942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5944, %r5942, %r5943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5947, %r5939, %r5944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5950, %r835, %r2685, %r5953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5955, %r5953, %r5954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5958, %r5950, %r5955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5961, %r824, %r2707, %r5942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5966, %r5942, %r5965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5969, %r5961, %r5966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5972, %r835, %r2707, %r5953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5977, %r5953, %r5976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5980, %r5972, %r5977;
	// end inline asm
	// begin inline asm
	mov.b32 %r5988, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5999, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5985, %r824, %r2731, %r5988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5990, %r5988, %r5989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5993, %r5985, %r5990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5996, %r835, %r2731, %r5999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6001, %r5999, %r6000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6004, %r5996, %r6001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6007, %r824, %r2753, %r5988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6012, %r5988, %r6011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6015, %r6007, %r6012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6018, %r835, %r2753, %r5999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6023, %r5999, %r6022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6026, %r6018, %r6023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6029, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6031, %r6029, %r5671, %r5533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6035, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6037, %r6035, %r5682, %r5537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6041, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6043, %r6041, %r5693, %r5541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6047, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6049, %r6047, %r5704, %r5545;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6053, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6055, %r6053, %r5717, %r5549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6059, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6061, %r6059, %r5728, %r5553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6065, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6067, %r6065, %r5739, %r5557;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6071, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6073, %r6071, %r5750, %r5561;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6077, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6079, %r6077, %r5763, %r5565;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6083, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6085, %r6083, %r5774, %r5569;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6089, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6091, %r6089, %r5785, %r5573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6095, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6097, %r6095, %r5796, %r5577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6101, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6103, %r6101, %r5809, %r5581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6107, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6109, %r6107, %r5820, %r5585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6113, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6115, %r6113, %r5831, %r5589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6119, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6121, %r6119, %r5842, %r5593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6125, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6127, %r6125, %r5855, %r5597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6131, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6133, %r6131, %r5866, %r5601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6137, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6139, %r6137, %r5877, %r5605;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6143, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6145, %r6143, %r5888, %r5609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6149, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6151, %r6149, %r5901, %r5613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6155, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6157, %r6155, %r5912, %r5617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6161, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6163, %r6161, %r5923, %r5621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6167, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6169, %r6167, %r5934, %r5625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6173, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6175, %r6173, %r5947, %r5629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6179, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6181, %r6179, %r5958, %r5633;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6185, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6187, %r6185, %r5969, %r5637;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6191, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6193, %r6191, %r5980, %r5641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6197, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6199, %r6197, %r5993, %r5645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6203, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6205, %r6203, %r6004, %r5649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6209, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6211, %r6209, %r6015, %r5653;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6215, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6217, %r6215, %r6026, %r5657;
	// end inline asm
	// begin inline asm
	mov.b32 %r6226, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6237, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6223, %r824, %r825, %r6226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6228, %r6226, %r6227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6231, %r6223, %r6228;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6234, %r835, %r825, %r6237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6239, %r6237, %r6238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6242, %r6234, %r6239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6245, %r824, %r847, %r6226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6250, %r6226, %r6249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6253, %r6245, %r6250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6256, %r835, %r847, %r6237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6260, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6261, %r6237, %r6260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6264, %r6256, %r6261;
	// end inline asm
	// begin inline asm
	mov.b32 %r6272, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6283, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6269, %r824, %r871, %r6272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6274, %r6272, %r6273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6277, %r6269, %r6274;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6280, %r835, %r871, %r6283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6285, %r6283, %r6284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6288, %r6280, %r6285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6291, %r824, %r893, %r6272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6296, %r6272, %r6295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6299, %r6291, %r6296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6302, %r835, %r893, %r6283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6307, %r6283, %r6306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6310, %r6302, %r6307;
	// end inline asm
	// begin inline asm
	mov.b32 %r6318, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6329, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6315, %r824, %r917, %r6318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6320, %r6318, %r6319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6323, %r6315, %r6320;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6326, %r835, %r917, %r6329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6331, %r6329, %r6330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6334, %r6326, %r6331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6337, %r824, %r939, %r6318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6342, %r6318, %r6341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6345, %r6337, %r6342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6348, %r835, %r939, %r6329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6352, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6353, %r6329, %r6352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6356, %r6348, %r6353;
	// end inline asm
	// begin inline asm
	mov.b32 %r6364, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6375, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6361, %r824, %r963, %r6364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6366, %r6364, %r6365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6369, %r6361, %r6366;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6372, %r835, %r963, %r6375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6377, %r6375, %r6376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6380, %r6372, %r6377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6383, %r824, %r985, %r6364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6388, %r6364, %r6387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6391, %r6383, %r6388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6394, %r835, %r985, %r6375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6399, %r6375, %r6398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6402, %r6394, %r6399;
	// end inline asm
	// begin inline asm
	mov.b32 %r6410, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6421, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6407, %r824, %r1009, %r6410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6412, %r6410, %r6411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6415, %r6407, %r6412;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6418, %r835, %r1009, %r6421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6423, %r6421, %r6422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6426, %r6418, %r6423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6429, %r824, %r1031, %r6410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6434, %r6410, %r6433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6437, %r6429, %r6434;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6440, %r835, %r1031, %r6421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6445, %r6421, %r6444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6448, %r6440, %r6445;
	// end inline asm
	// begin inline asm
	mov.b32 %r6456, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6467, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6453, %r824, %r1055, %r6456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6458, %r6456, %r6457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6461, %r6453, %r6458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6464, %r835, %r1055, %r6467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6469, %r6467, %r6468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6472, %r6464, %r6469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6475, %r824, %r1077, %r6456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6480, %r6456, %r6479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6483, %r6475, %r6480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6486, %r835, %r1077, %r6467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6491, %r6467, %r6490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6494, %r6486, %r6491;
	// end inline asm
	// begin inline asm
	mov.b32 %r6502, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6513, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6499, %r824, %r1101, %r6502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6504, %r6502, %r6503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6507, %r6499, %r6504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6510, %r835, %r1101, %r6513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6515, %r6513, %r6514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6518, %r6510, %r6515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6521, %r824, %r1123, %r6502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6526, %r6502, %r6525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6529, %r6521, %r6526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6532, %r835, %r1123, %r6513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6537, %r6513, %r6536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6540, %r6532, %r6537;
	// end inline asm
	// begin inline asm
	mov.b32 %r6548, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6559, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6545, %r824, %r1147, %r6548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6550, %r6548, %r6549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6553, %r6545, %r6550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6556, %r835, %r1147, %r6559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6561, %r6559, %r6560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6564, %r6556, %r6561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6567, %r824, %r1169, %r6548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6572, %r6548, %r6571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6575, %r6567, %r6572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6578, %r835, %r1169, %r6559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6583, %r6559, %r6582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6586, %r6578, %r6583;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6724, %r352, %r6231, %r6031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6721, %r352, %r6242, %r6037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6733, %r352, %r6253, %r6043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6730, %r352, %r6264, %r6049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6742, %r352, %r6277, %r6055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6739, %r352, %r6288, %r6061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6751, %r352, %r6299, %r6067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6748, %r352, %r6310, %r6073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6760, %r352, %r6323, %r6079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6757, %r352, %r6334, %r6085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6769, %r352, %r6345, %r6091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6766, %r352, %r6356, %r6097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6778, %r352, %r6369, %r6103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6775, %r352, %r6380, %r6109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6787, %r352, %r6391, %r6115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6784, %r352, %r6402, %r6121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6796, %r370, %r6415, %r6127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6793, %r370, %r6426, %r6133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6805, %r370, %r6437, %r6139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6802, %r370, %r6448, %r6145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6814, %r370, %r6461, %r6151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6811, %r370, %r6472, %r6157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6823, %r370, %r6483, %r6163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6820, %r370, %r6494, %r6169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6832, %r370, %r6507, %r6175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6829, %r370, %r6518, %r6181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6841, %r370, %r6529, %r6187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6838, %r370, %r6540, %r6193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6850, %r370, %r6553, %r6199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6847, %r370, %r6564, %r6205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6859, %r370, %r6575, %r6211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6856, %r370, %r6586, %r6217;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6717, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6719, %r6717, %r6721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6722, %r434, %r6724, %r6719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6726, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6728, %r6726, %r6730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6731, %r434, %r6733, %r6728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6735, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6737, %r6735, %r6739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6740, %r434, %r6742, %r6737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6744, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6746, %r6744, %r6748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6749, %r434, %r6751, %r6746;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6753, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6755, %r6753, %r6757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6758, %r434, %r6760, %r6755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6762, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6764, %r6762, %r6766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6767, %r434, %r6769, %r6764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6771, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6773, %r6771, %r6775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6776, %r434, %r6778, %r6773;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6780, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6782, %r6780, %r6784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6785, %r434, %r6787, %r6782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6789, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6791, %r6789, %r6793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6794, %r437, %r6796, %r6791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6798, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6800, %r6798, %r6802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6803, %r437, %r6805, %r6800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6807, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6809, %r6807, %r6811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6812, %r437, %r6814, %r6809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6816, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6818, %r6816, %r6820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6821, %r437, %r6823, %r6818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6825, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6827, %r6825, %r6829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6830, %r437, %r6832, %r6827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6834, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6836, %r6834, %r6838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6839, %r437, %r6841, %r6836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6843, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6845, %r6843, %r6847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6848, %r437, %r6850, %r6845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6852, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6854, %r6852, %r6856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6857, %r437, %r6859, %r6854;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6861, %r440, %r6724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6864, %r434, %r6721, %r6861;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6868, %r440, %r6733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6871, %r434, %r6730, %r6868;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6875, %r440, %r6742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6878, %r434, %r6739, %r6875;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6882, %r440, %r6751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6885, %r434, %r6748, %r6882;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6889, %r440, %r6760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6892, %r434, %r6757, %r6889;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6896, %r440, %r6769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6899, %r434, %r6766, %r6896;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6903, %r440, %r6778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6906, %r434, %r6775, %r6903;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6910, %r440, %r6787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6913, %r434, %r6784, %r6910;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6917, %r443, %r6796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6920, %r437, %r6793, %r6917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6924, %r443, %r6805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6927, %r437, %r6802, %r6924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6931, %r443, %r6814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6934, %r437, %r6811, %r6931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6938, %r443, %r6823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6941, %r437, %r6820, %r6938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6945, %r443, %r6832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6948, %r437, %r6829, %r6945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6952, %r443, %r6841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6955, %r437, %r6838, %r6952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6959, %r443, %r6850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6962, %r437, %r6847, %r6959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6966, %r443, %r6859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6969, %r437, %r6856, %r6966;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7140, %r7137}, {%r482, %r488, %r485, %r491}, {%r6722, %r6864}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7149, %r7146}, {%r482, %r488, %r485, %r491}, {%r6731, %r6871}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7158, %r7155}, {%r482, %r488, %r485, %r491}, {%r6740, %r6878}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7167, %r7164}, {%r482, %r488, %r485, %r491}, {%r6749, %r6885}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7176, %r7173}, {%r482, %r488, %r485, %r491}, {%r6758, %r6892}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7185, %r7182}, {%r482, %r488, %r485, %r491}, {%r6767, %r6899}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7194, %r7191}, {%r482, %r488, %r485, %r491}, {%r6776, %r6906}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7203, %r7200}, {%r482, %r488, %r485, %r491}, {%r6785, %r6913}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7212, %r7209}, {%r482, %r488, %r485, %r491}, {%r6794, %r6920}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7221, %r7218}, {%r482, %r488, %r485, %r491}, {%r6803, %r6927}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7230, %r7227}, {%r482, %r488, %r485, %r491}, {%r6812, %r6934}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7239, %r7236}, {%r482, %r488, %r485, %r491}, {%r6821, %r6941}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7248, %r7245}, {%r482, %r488, %r485, %r491}, {%r6830, %r6948}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7257, %r7254}, {%r482, %r488, %r485, %r491}, {%r6839, %r6955}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7266, %r7263}, {%r482, %r488, %r485, %r491}, {%r6848, %r6962}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7275, %r7272}, {%r482, %r488, %r485, %r491}, {%r6857, %r6969}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7133, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7135, %r7133, %r7137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7138, %r529, %r7140, %r7135;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7142, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7144, %r7142, %r7146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7147, %r529, %r7149, %r7144;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7151, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7153, %r7151, %r7155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7156, %r529, %r7158, %r7153;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7160, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7162, %r7160, %r7164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7165, %r529, %r7167, %r7162;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7169, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7171, %r7169, %r7173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7174, %r529, %r7176, %r7171;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7178, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7180, %r7178, %r7182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7183, %r529, %r7185, %r7180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7187, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7189, %r7187, %r7191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7192, %r529, %r7194, %r7189;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7196, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7198, %r7196, %r7200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7201, %r529, %r7203, %r7198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7205, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7207, %r7205, %r7209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7210, %r529, %r7212, %r7207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7214, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7216, %r7214, %r7218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7219, %r529, %r7221, %r7216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7223, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7225, %r7223, %r7227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7228, %r529, %r7230, %r7225;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7232, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7234, %r7232, %r7236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7237, %r529, %r7239, %r7234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7241, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7243, %r7241, %r7245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7246, %r529, %r7248, %r7243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7250, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7252, %r7250, %r7254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7255, %r529, %r7257, %r7252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7259, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7261, %r7259, %r7263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7264, %r529, %r7266, %r7261;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7268, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7270, %r7268, %r7272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7273, %r529, %r7275, %r7270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7277, %r532, %r7140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7280, %r529, %r7137, %r7277;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7284, %r532, %r7149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7287, %r529, %r7146, %r7284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7291, %r532, %r7158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7294, %r529, %r7155, %r7291;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7298, %r532, %r7167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7301, %r529, %r7164, %r7298;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7305, %r532, %r7176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7308, %r529, %r7173, %r7305;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7312, %r532, %r7185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7315, %r529, %r7182, %r7312;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7319, %r532, %r7194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7322, %r529, %r7191, %r7319;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7326, %r532, %r7203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7329, %r529, %r7200, %r7326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7333, %r532, %r7212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7336, %r529, %r7209, %r7333;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7340, %r532, %r7221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7343, %r529, %r7218, %r7340;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7347, %r532, %r7230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7350, %r529, %r7227, %r7347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7354, %r532, %r7239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7357, %r529, %r7236, %r7354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7361, %r532, %r7248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7364, %r529, %r7245, %r7361;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7368, %r532, %r7257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7371, %r529, %r7254, %r7368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7375, %r532, %r7266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7378, %r529, %r7263, %r7375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7382, %r532, %r7275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7385, %r529, %r7272, %r7382;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7678, %r7681}, {%r572, %r578, %r575, %r581}, {%r7138, %r7280}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7684, %r7687}, {%r572, %r578, %r575, %r581}, {%r7147, %r7287}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7690, %r7693}, {%r572, %r578, %r575, %r581}, {%r7156, %r7294}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7696, %r7699}, {%r572, %r578, %r575, %r581}, {%r7165, %r7301}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7702, %r7705}, {%r572, %r578, %r575, %r581}, {%r7174, %r7308}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7708, %r7711}, {%r572, %r578, %r575, %r581}, {%r7183, %r7315}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7714, %r7717}, {%r572, %r578, %r575, %r581}, {%r7192, %r7322}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7720, %r7723}, {%r572, %r578, %r575, %r581}, {%r7201, %r7329}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7679, %r7682}, {%r572, %r578, %r575, %r581}, {%r7210, %r7336}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7685, %r7688}, {%r572, %r578, %r575, %r581}, {%r7219, %r7343}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7691, %r7694}, {%r572, %r578, %r575, %r581}, {%r7228, %r7350}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7697, %r7700}, {%r572, %r578, %r575, %r581}, {%r7237, %r7357}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7703, %r7706}, {%r572, %r578, %r575, %r581}, {%r7246, %r7364}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7709, %r7712}, {%r572, %r578, %r575, %r581}, {%r7255, %r7371}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7715, %r7718}, {%r572, %r578, %r575, %r581}, {%r7264, %r7378}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7721, %r7724}, {%r572, %r578, %r575, %r581}, {%r7273, %r7385}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7677, %r7678, %r7679;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7680, %r7681, %r7682;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7683, %r7684, %r7685;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7686, %r7687, %r7688;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7689, %r7690, %r7691;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7692, %r7693, %r7694;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7695, %r7696, %r7697;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7698, %r7699, %r7700;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7701, %r7702, %r7703;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7704, %r7705, %r7706;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7707, %r7708, %r7709;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7710, %r7711, %r7712;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7713, %r7714, %r7715;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7716, %r7717, %r7718;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7719, %r7720, %r7721;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7722, %r7723, %r7724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7725, %r7678, %r7679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7728, %r7681, %r7682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7731, %r7684, %r7685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7734, %r7687, %r7688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7737, %r7690, %r7691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7740, %r7693, %r7694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7743, %r7696, %r7697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7746, %r7699, %r7700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7749, %r7702, %r7703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7752, %r7705, %r7706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7755, %r7708, %r7709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7758, %r7711, %r7712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7761, %r7714, %r7715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7764, %r7717, %r7718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7767, %r7720, %r7721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7770, %r7723, %r7724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7773, %r16, %r7677;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7776, %r16, %r7680;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7779, %r16, %r7683;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7782, %r16, %r7686;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7785, %r16, %r7689;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7788, %r16, %r7692;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7791, %r16, %r7695;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7794, %r16, %r7698;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7797, %r16, %r7701;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7800, %r16, %r7704;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7803, %r16, %r7707;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7806, %r16, %r7710;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7809, %r16, %r7713;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7812, %r16, %r7716;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7815, %r16, %r7719;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7818, %r16, %r7722;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7821, %r17, %r7725;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7824, %r17, %r7728;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7827, %r17, %r7731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7830, %r17, %r7734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7833, %r17, %r7737;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7836, %r17, %r7740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7839, %r17, %r7743;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7842, %r17, %r7746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7845, %r17, %r7749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7848, %r17, %r7752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7851, %r17, %r7755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7854, %r17, %r7758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7857, %r17, %r7761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7860, %r17, %r7764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7863, %r17, %r7767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7866, %r17, %r7770;
	// end inline asm
	// begin inline asm
	mov.b32 %r7869, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7870, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7871, %r7773, %r7869;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7874, %r7871, %r7870;
	// end inline asm
	// begin inline asm
	mov.b32 %r7877, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7878, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7879, %r7776, %r7877;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7882, %r7879, %r7878;
	// end inline asm
	// begin inline asm
	mov.b32 %r7885, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7886, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7887, %r7779, %r7885;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7890, %r7887, %r7886;
	// end inline asm
	// begin inline asm
	mov.b32 %r7893, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7894, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7895, %r7782, %r7893;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7898, %r7895, %r7894;
	// end inline asm
	// begin inline asm
	mov.b32 %r7901, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7902, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7903, %r7785, %r7901;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7906, %r7903, %r7902;
	// end inline asm
	// begin inline asm
	mov.b32 %r7909, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7910, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7911, %r7788, %r7909;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7914, %r7911, %r7910;
	// end inline asm
	// begin inline asm
	mov.b32 %r7917, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7918, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7919, %r7791, %r7917;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7922, %r7919, %r7918;
	// end inline asm
	// begin inline asm
	mov.b32 %r7925, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7926, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7927, %r7794, %r7925;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7930, %r7927, %r7926;
	// end inline asm
	// begin inline asm
	mov.b32 %r7933, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7934, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7935, %r7797, %r7933;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7938, %r7935, %r7934;
	// end inline asm
	// begin inline asm
	mov.b32 %r7941, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7942, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7943, %r7800, %r7941;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7946, %r7943, %r7942;
	// end inline asm
	// begin inline asm
	mov.b32 %r7949, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7950, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7951, %r7803, %r7949;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7954, %r7951, %r7950;
	// end inline asm
	// begin inline asm
	mov.b32 %r7957, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7958, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7959, %r7806, %r7957;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7962, %r7959, %r7958;
	// end inline asm
	// begin inline asm
	mov.b32 %r7965, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7966, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7967, %r7809, %r7965;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7970, %r7967, %r7966;
	// end inline asm
	// begin inline asm
	mov.b32 %r7973, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7974, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7975, %r7812, %r7973;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7978, %r7975, %r7974;
	// end inline asm
	// begin inline asm
	mov.b32 %r7981, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7982, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7983, %r7815, %r7981;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7986, %r7983, %r7982;
	// end inline asm
	// begin inline asm
	mov.b32 %r7989, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7990, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7991, %r7818, %r7989;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7994, %r7991, %r7990;
	// end inline asm
	// begin inline asm
	mov.b32 %r7997, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7998, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7999, %r7821, %r7997;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8002, %r7999, %r7998;
	// end inline asm
	// begin inline asm
	mov.b32 %r8005, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8006, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8007, %r7824, %r8005;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8010, %r8007, %r8006;
	// end inline asm
	// begin inline asm
	mov.b32 %r8013, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8014, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8015, %r7827, %r8013;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8018, %r8015, %r8014;
	// end inline asm
	// begin inline asm
	mov.b32 %r8021, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8022, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8023, %r7830, %r8021;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8026, %r8023, %r8022;
	// end inline asm
	// begin inline asm
	mov.b32 %r8029, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8030, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8031, %r7833, %r8029;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8034, %r8031, %r8030;
	// end inline asm
	// begin inline asm
	mov.b32 %r8037, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8038, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8039, %r7836, %r8037;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8042, %r8039, %r8038;
	// end inline asm
	// begin inline asm
	mov.b32 %r8045, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8046, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8047, %r7839, %r8045;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8050, %r8047, %r8046;
	// end inline asm
	// begin inline asm
	mov.b32 %r8053, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8054, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8055, %r7842, %r8053;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8058, %r8055, %r8054;
	// end inline asm
	// begin inline asm
	mov.b32 %r8061, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8062, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8063, %r7845, %r8061;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8066, %r8063, %r8062;
	// end inline asm
	// begin inline asm
	mov.b32 %r8069, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8070, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8071, %r7848, %r8069;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8074, %r8071, %r8070;
	// end inline asm
	// begin inline asm
	mov.b32 %r8077, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8078, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8079, %r7851, %r8077;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8082, %r8079, %r8078;
	// end inline asm
	// begin inline asm
	mov.b32 %r8085, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8086, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8087, %r7854, %r8085;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8090, %r8087, %r8086;
	// end inline asm
	// begin inline asm
	mov.b32 %r8093, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8094, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8095, %r7857, %r8093;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8098, %r8095, %r8094;
	// end inline asm
	// begin inline asm
	mov.b32 %r8101, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8102, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8103, %r7860, %r8101;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8106, %r8103, %r8102;
	// end inline asm
	// begin inline asm
	mov.b32 %r8109, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8110, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8111, %r7863, %r8109;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8114, %r8111, %r8110;
	// end inline asm
	// begin inline asm
	mov.b32 %r8117, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8118, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8119, %r7866, %r8117;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8122, %r8119, %r8118;
	// end inline asm
	// begin inline asm
	mov.b32 %r8128, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8126, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8127, %r8128, %r8126;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8130, %r7874, %r8127;
	// end inline asm
	// begin inline asm
	mov.b32 %r8133, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8134, %r8128, %r8133;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8137, %r7882, %r8134;
	// end inline asm
	// begin inline asm
	mov.b32 %r8140, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8141, %r8128, %r8140;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8144, %r7890, %r8141;
	// end inline asm
	// begin inline asm
	mov.b32 %r8147, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8148, %r8128, %r8147;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8151, %r7898, %r8148;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8154, %r8130, %r8144, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8158, %r8137, %r8151, %r4341;
	// end inline asm
	shl.b32 	%r8165, %r8158, 4;
	// begin inline asm
	lop3.b32 %r8162, %r4347, %r8154, %r8165, 202;
	// end inline asm
	xor.b32  	%r16101, %r8162, -2004318072;
	// begin inline asm
	mov.b32 %r8169, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8168, %r8169, %r8167;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8171, %r7906, %r8168;
	// end inline asm
	// begin inline asm
	mov.b32 %r8174, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8175, %r8169, %r8174;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8178, %r7914, %r8175;
	// end inline asm
	// begin inline asm
	mov.b32 %r8181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8182, %r8169, %r8181;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8185, %r7922, %r8182;
	// end inline asm
	// begin inline asm
	mov.b32 %r8188, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8189, %r8169, %r8188;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8192, %r7930, %r8189;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8195, %r8171, %r8185, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8199, %r8178, %r8192, %r4341;
	// end inline asm
	shl.b32 	%r8206, %r8199, 4;
	// begin inline asm
	lop3.b32 %r8203, %r4347, %r8195, %r8206, 202;
	// end inline asm
	xor.b32  	%r16102, %r8203, -2004318072;
	// begin inline asm
	mov.b32 %r8210, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8209, %r8210, %r8208;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8212, %r7938, %r8209;
	// end inline asm
	// begin inline asm
	mov.b32 %r8215, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8216, %r8210, %r8215;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8219, %r7946, %r8216;
	// end inline asm
	// begin inline asm
	mov.b32 %r8222, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8223, %r8210, %r8222;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8226, %r7954, %r8223;
	// end inline asm
	// begin inline asm
	mov.b32 %r8229, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8230, %r8210, %r8229;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8233, %r7962, %r8230;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8236, %r8212, %r8226, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8240, %r8219, %r8233, %r4341;
	// end inline asm
	shl.b32 	%r8247, %r8240, 4;
	// begin inline asm
	lop3.b32 %r8244, %r4347, %r8236, %r8247, 202;
	// end inline asm
	xor.b32  	%r16103, %r8244, -2004318072;
	// begin inline asm
	mov.b32 %r8251, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8250, %r8251, %r8249;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8253, %r7970, %r8250;
	// end inline asm
	// begin inline asm
	mov.b32 %r8256, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8257, %r8251, %r8256;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8260, %r7978, %r8257;
	// end inline asm
	// begin inline asm
	mov.b32 %r8263, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8264, %r8251, %r8263;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8267, %r7986, %r8264;
	// end inline asm
	// begin inline asm
	mov.b32 %r8270, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8271, %r8251, %r8270;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8274, %r7994, %r8271;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8277, %r8253, %r8267, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8281, %r8260, %r8274, %r4341;
	// end inline asm
	shl.b32 	%r8288, %r8281, 4;
	// begin inline asm
	lop3.b32 %r8285, %r4347, %r8277, %r8288, 202;
	// end inline asm
	xor.b32  	%r16104, %r8285, -2004318072;
	// begin inline asm
	mov.b32 %r8292, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8291, %r8292, %r8290;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8294, %r8002, %r8291;
	// end inline asm
	// begin inline asm
	mov.b32 %r8297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8298, %r8292, %r8297;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8301, %r8010, %r8298;
	// end inline asm
	// begin inline asm
	mov.b32 %r8304, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8305, %r8292, %r8304;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8308, %r8018, %r8305;
	// end inline asm
	// begin inline asm
	mov.b32 %r8311, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8312, %r8292, %r8311;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8315, %r8026, %r8312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8318, %r8294, %r8308, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8322, %r8301, %r8315, %r4341;
	// end inline asm
	shl.b32 	%r8329, %r8322, 4;
	// begin inline asm
	lop3.b32 %r8326, %r4347, %r8318, %r8329, 202;
	// end inline asm
	xor.b32  	%r16105, %r8326, -2004318072;
	// begin inline asm
	mov.b32 %r8333, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8331, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8332, %r8333, %r8331;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8335, %r8034, %r8332;
	// end inline asm
	// begin inline asm
	mov.b32 %r8338, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8339, %r8333, %r8338;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8342, %r8042, %r8339;
	// end inline asm
	// begin inline asm
	mov.b32 %r8345, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8346, %r8333, %r8345;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8349, %r8050, %r8346;
	// end inline asm
	// begin inline asm
	mov.b32 %r8352, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8353, %r8333, %r8352;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8356, %r8058, %r8353;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8359, %r8335, %r8349, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8363, %r8342, %r8356, %r4341;
	// end inline asm
	shl.b32 	%r8370, %r8363, 4;
	// begin inline asm
	lop3.b32 %r8367, %r4347, %r8359, %r8370, 202;
	// end inline asm
	xor.b32  	%r16106, %r8367, -2004318072;
	// begin inline asm
	mov.b32 %r8374, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8373, %r8374, %r8372;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8376, %r8066, %r8373;
	// end inline asm
	// begin inline asm
	mov.b32 %r8379, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8380, %r8374, %r8379;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8383, %r8074, %r8380;
	// end inline asm
	// begin inline asm
	mov.b32 %r8386, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8387, %r8374, %r8386;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8390, %r8082, %r8387;
	// end inline asm
	// begin inline asm
	mov.b32 %r8393, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8394, %r8374, %r8393;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8397, %r8090, %r8394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8400, %r8376, %r8390, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8404, %r8383, %r8397, %r4341;
	// end inline asm
	shl.b32 	%r8411, %r8404, 4;
	// begin inline asm
	lop3.b32 %r8408, %r4347, %r8400, %r8411, 202;
	// end inline asm
	xor.b32  	%r16107, %r8408, -2004318072;
	// begin inline asm
	mov.b32 %r8415, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8413, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8414, %r8415, %r8413;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8417, %r8098, %r8414;
	// end inline asm
	// begin inline asm
	mov.b32 %r8420, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8421, %r8415, %r8420;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8424, %r8106, %r8421;
	// end inline asm
	// begin inline asm
	mov.b32 %r8427, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8428, %r8415, %r8427;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8431, %r8114, %r8428;
	// end inline asm
	// begin inline asm
	mov.b32 %r8434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8435, %r8415, %r8434;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8438, %r8122, %r8435;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8441, %r8417, %r8431, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8445, %r8424, %r8438, %r4341;
	// end inline asm
	shl.b32 	%r8452, %r8445, 4;
	// begin inline asm
	lop3.b32 %r8449, %r4347, %r8441, %r8452, 202;
	// end inline asm
	xor.b32  	%r16108, %r8449, -2004318072;
	st.shared.u32 	[%rd93], %r16101;
	st.shared.u32 	[%rd94], %r16102;
	st.shared.u32 	[%rd95], %r16103;
	st.shared.u32 	[%rd96], %r16104;
	st.shared.u32 	[%rd97], %r16105;
	st.shared.u32 	[%rd98], %r16106;
	st.shared.u32 	[%rd99], %r16107;
	st.shared.u32 	[%rd100], %r16108;
	ld.shared.u32 	%r16229, [%rd85];
	ld.shared.u32 	%r16230, [%rd86];
	ld.shared.u32 	%r16231, [%rd87];
	ld.shared.u32 	%r16232, [%rd88];
	ld.shared.u32 	%r16241, [%rd89];
	ld.shared.u32 	%r16242, [%rd90];
	ld.shared.u32 	%r16243, [%rd91];
	ld.shared.u32 	%r16244, [%rd92];
	// begin inline asm
	mov.b32 %r8458, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8469, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8457, %r16229, -2004318072;
	// begin inline asm
	lop3.b32 %r8455, %r824, %r8457, %r8458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8460, %r8458, %r8459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8463, %r8455, %r8460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8466, %r835, %r8457, %r8469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8471, %r8469, %r8470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8474, %r8466, %r8471;
	// end inline asm
	shr.u32 	%r8479, %r8457, 8;
	// begin inline asm
	lop3.b32 %r8477, %r824, %r8479, %r8458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8482, %r8458, %r8481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8485, %r8477, %r8482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8488, %r835, %r8479, %r8469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8493, %r8469, %r8492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8496, %r8488, %r8493;
	// end inline asm
	// begin inline asm
	mov.b32 %r8504, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8515, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8503, %r16230, -2004318072;
	// begin inline asm
	lop3.b32 %r8501, %r824, %r8503, %r8504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8506, %r8504, %r8505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8509, %r8501, %r8506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8512, %r835, %r8503, %r8515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8517, %r8515, %r8516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8520, %r8512, %r8517;
	// end inline asm
	shr.u32 	%r8525, %r8503, 8;
	// begin inline asm
	lop3.b32 %r8523, %r824, %r8525, %r8504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8528, %r8504, %r8527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8531, %r8523, %r8528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8534, %r835, %r8525, %r8515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8539, %r8515, %r8538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8542, %r8534, %r8539;
	// end inline asm
	// begin inline asm
	mov.b32 %r8550, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8561, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8549, %r16231, -2004318072;
	// begin inline asm
	lop3.b32 %r8547, %r824, %r8549, %r8550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8552, %r8550, %r8551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8555, %r8547, %r8552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8558, %r835, %r8549, %r8561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8563, %r8561, %r8562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8566, %r8558, %r8563;
	// end inline asm
	shr.u32 	%r8571, %r8549, 8;
	// begin inline asm
	lop3.b32 %r8569, %r824, %r8571, %r8550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8574, %r8550, %r8573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8577, %r8569, %r8574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8580, %r835, %r8571, %r8561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8585, %r8561, %r8584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8588, %r8580, %r8585;
	// end inline asm
	// begin inline asm
	mov.b32 %r8596, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8607, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8595, %r16232, -2004318072;
	// begin inline asm
	lop3.b32 %r8593, %r824, %r8595, %r8596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8598, %r8596, %r8597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8601, %r8593, %r8598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8604, %r835, %r8595, %r8607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8609, %r8607, %r8608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8612, %r8604, %r8609;
	// end inline asm
	shr.u32 	%r8617, %r8595, 8;
	// begin inline asm
	lop3.b32 %r8615, %r824, %r8617, %r8596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8620, %r8596, %r8619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8623, %r8615, %r8620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8626, %r835, %r8617, %r8607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8630, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8631, %r8607, %r8630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8634, %r8626, %r8631;
	// end inline asm
	// begin inline asm
	mov.b32 %r8642, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8653, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8641, %r16241, -2004318072;
	// begin inline asm
	lop3.b32 %r8639, %r824, %r8641, %r8642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8644, %r8642, %r8643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8647, %r8639, %r8644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8650, %r835, %r8641, %r8653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8655, %r8653, %r8654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8658, %r8650, %r8655;
	// end inline asm
	shr.u32 	%r8663, %r8641, 8;
	// begin inline asm
	lop3.b32 %r8661, %r824, %r8663, %r8642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8666, %r8642, %r8665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8669, %r8661, %r8666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8672, %r835, %r8663, %r8653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8676, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8677, %r8653, %r8676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8680, %r8672, %r8677;
	// end inline asm
	// begin inline asm
	mov.b32 %r8688, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8699, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8687, %r16242, -2004318072;
	// begin inline asm
	lop3.b32 %r8685, %r824, %r8687, %r8688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8690, %r8688, %r8689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8693, %r8685, %r8690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8696, %r835, %r8687, %r8699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8701, %r8699, %r8700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8704, %r8696, %r8701;
	// end inline asm
	shr.u32 	%r8709, %r8687, 8;
	// begin inline asm
	lop3.b32 %r8707, %r824, %r8709, %r8688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8711, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8712, %r8688, %r8711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8715, %r8707, %r8712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8718, %r835, %r8709, %r8699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8722, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8723, %r8699, %r8722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8726, %r8718, %r8723;
	// end inline asm
	// begin inline asm
	mov.b32 %r8734, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8745, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8733, %r16243, -2004318072;
	// begin inline asm
	lop3.b32 %r8731, %r824, %r8733, %r8734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8736, %r8734, %r8735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8739, %r8731, %r8736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8742, %r835, %r8733, %r8745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8747, %r8745, %r8746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8750, %r8742, %r8747;
	// end inline asm
	shr.u32 	%r8755, %r8733, 8;
	// begin inline asm
	lop3.b32 %r8753, %r824, %r8755, %r8734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8757, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8758, %r8734, %r8757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8761, %r8753, %r8758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8764, %r835, %r8755, %r8745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8768, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8769, %r8745, %r8768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8772, %r8764, %r8769;
	// end inline asm
	// begin inline asm
	mov.b32 %r8780, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8791, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8779, %r16244, -2004318072;
	// begin inline asm
	lop3.b32 %r8777, %r824, %r8779, %r8780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8782, %r8780, %r8781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8785, %r8777, %r8782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8788, %r835, %r8779, %r8791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8792, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8793, %r8791, %r8792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8796, %r8788, %r8793;
	// end inline asm
	shr.u32 	%r8801, %r8779, 8;
	// begin inline asm
	lop3.b32 %r8799, %r824, %r8801, %r8780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8803, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8804, %r8780, %r8803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8807, %r8799, %r8804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8810, %r835, %r8801, %r8791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8814, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8815, %r8791, %r8814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8818, %r8810, %r8815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8821, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8823, %r8821, %r8463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8826, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8828, %r8826, %r8474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8831, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8833, %r8831, %r8485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8836, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8838, %r8836, %r8496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8841, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8843, %r8841, %r8509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8846, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8848, %r8846, %r8520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8851, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8853, %r8851, %r8531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8856, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8858, %r8856, %r8542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8861, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8863, %r8861, %r8555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8866, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8868, %r8866, %r8566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8871, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8873, %r8871, %r8577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8876, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8878, %r8876, %r8588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8881, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8883, %r8881, %r8601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8886, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8888, %r8886, %r8612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8891, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8893, %r8891, %r8623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8896, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8898, %r8896, %r8634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8901, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8903, %r8901, %r8647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8906, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8908, %r8906, %r8658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8911, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8913, %r8911, %r8669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8916, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8918, %r8916, %r8680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8921, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8923, %r8921, %r8693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8926, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8928, %r8926, %r8704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8931, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8933, %r8931, %r8715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8936, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8938, %r8936, %r8726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8941, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8943, %r8941, %r8739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8946, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8948, %r8946, %r8750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8951, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8953, %r8951, %r8761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8956, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8958, %r8956, %r8772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8961, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8963, %r8961, %r8785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8966, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8968, %r8966, %r8796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8971, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8973, %r8971, %r8807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8976, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8978, %r8976, %r8818;
	// end inline asm
	// begin inline asm
	mov.b32 %r8986, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8997, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8983, %r824, %r2409, %r8986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8988, %r8986, %r8987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8991, %r8983, %r8988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8994, %r835, %r2409, %r8997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8999, %r8997, %r8998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9002, %r8994, %r8999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9005, %r824, %r2431, %r8986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9009, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9010, %r8986, %r9009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9013, %r9005, %r9010;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9016, %r835, %r2431, %r8997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9021, %r8997, %r9020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9024, %r9016, %r9021;
	// end inline asm
	// begin inline asm
	mov.b32 %r9032, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9043, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9029, %r824, %r2455, %r9032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9034, %r9032, %r9033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9037, %r9029, %r9034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9040, %r835, %r2455, %r9043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9045, %r9043, %r9044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9048, %r9040, %r9045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9051, %r824, %r2477, %r9032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9055, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9056, %r9032, %r9055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9059, %r9051, %r9056;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9062, %r835, %r2477, %r9043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9067, %r9043, %r9066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9070, %r9062, %r9067;
	// end inline asm
	// begin inline asm
	mov.b32 %r9078, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9089, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9075, %r824, %r2501, %r9078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9080, %r9078, %r9079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9083, %r9075, %r9080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9086, %r835, %r2501, %r9089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9090, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9091, %r9089, %r9090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9094, %r9086, %r9091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9097, %r824, %r2523, %r9078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9102, %r9078, %r9101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9105, %r9097, %r9102;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9108, %r835, %r2523, %r9089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9113, %r9089, %r9112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9116, %r9108, %r9113;
	// end inline asm
	// begin inline asm
	mov.b32 %r9124, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9135, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9121, %r824, %r2547, %r9124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9125, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9126, %r9124, %r9125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9129, %r9121, %r9126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9132, %r835, %r2547, %r9135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9136, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9137, %r9135, %r9136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9140, %r9132, %r9137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9143, %r824, %r2569, %r9124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9147, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9148, %r9124, %r9147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9151, %r9143, %r9148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9154, %r835, %r2569, %r9135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9159, %r9135, %r9158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9162, %r9154, %r9159;
	// end inline asm
	// begin inline asm
	mov.b32 %r9170, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9181, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9167, %r824, %r2593, %r9170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9171, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9172, %r9170, %r9171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9175, %r9167, %r9172;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9178, %r835, %r2593, %r9181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9182, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9183, %r9181, %r9182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9186, %r9178, %r9183;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9189, %r824, %r2615, %r9170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9193, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9194, %r9170, %r9193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9197, %r9189, %r9194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9200, %r835, %r2615, %r9181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9204, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9205, %r9181, %r9204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9208, %r9200, %r9205;
	// end inline asm
	// begin inline asm
	mov.b32 %r9216, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9227, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9213, %r824, %r2639, %r9216, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9217, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9218, %r9216, %r9217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9221, %r9213, %r9218;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9224, %r835, %r2639, %r9227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9228, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9229, %r9227, %r9228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9232, %r9224, %r9229;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9235, %r824, %r2661, %r9216, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9239, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9240, %r9216, %r9239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9243, %r9235, %r9240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9246, %r835, %r2661, %r9227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9251, %r9227, %r9250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9254, %r9246, %r9251;
	// end inline asm
	// begin inline asm
	mov.b32 %r9262, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9273, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9259, %r824, %r2685, %r9262, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9263, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9264, %r9262, %r9263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9267, %r9259, %r9264;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9270, %r835, %r2685, %r9273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9274, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9275, %r9273, %r9274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9278, %r9270, %r9275;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9281, %r824, %r2707, %r9262, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9286, %r9262, %r9285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9289, %r9281, %r9286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9292, %r835, %r2707, %r9273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9296, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9297, %r9273, %r9296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9300, %r9292, %r9297;
	// end inline asm
	// begin inline asm
	mov.b32 %r9308, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9319, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9305, %r824, %r2731, %r9308, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9309, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9310, %r9308, %r9309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9313, %r9305, %r9310;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9316, %r835, %r2731, %r9319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9320, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9321, %r9319, %r9320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9324, %r9316, %r9321;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9327, %r824, %r2753, %r9308, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9331, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9332, %r9308, %r9331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9335, %r9327, %r9332;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9338, %r835, %r2753, %r9319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9343, %r9319, %r9342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9346, %r9338, %r9343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9349, %r280, %r8991, %r8823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9353, %r280, %r9002, %r8828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9357, %r280, %r9013, %r8833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9361, %r280, %r9024, %r8838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9365, %r280, %r9037, %r8843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9369, %r280, %r9048, %r8848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9373, %r280, %r9059, %r8853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9377, %r280, %r9070, %r8858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9381, %r280, %r9083, %r8863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9385, %r280, %r9094, %r8868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9389, %r280, %r9105, %r8873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9393, %r280, %r9116, %r8878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9397, %r280, %r9129, %r8883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9401, %r280, %r9140, %r8888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9405, %r280, %r9151, %r8893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9409, %r280, %r9162, %r8898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9413, %r298, %r9175, %r8903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9417, %r298, %r9186, %r8908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9421, %r298, %r9197, %r8913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9425, %r298, %r9208, %r8918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9429, %r298, %r9221, %r8923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9433, %r298, %r9232, %r8928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9437, %r298, %r9243, %r8933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9441, %r298, %r9254, %r8938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9445, %r298, %r9267, %r8943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9449, %r298, %r9278, %r8948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9453, %r298, %r9289, %r8953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9457, %r298, %r9300, %r8958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9461, %r298, %r9313, %r8963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9465, %r298, %r9324, %r8968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9469, %r298, %r9335, %r8973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9473, %r298, %r9346, %r8978;
	// end inline asm
	// begin inline asm
	mov.b32 %r9482, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9493, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9479, %r824, %r825, %r9482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9483, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9484, %r9482, %r9483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9487, %r9479, %r9484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9490, %r835, %r825, %r9493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9495, %r9493, %r9494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9498, %r9490, %r9495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9501, %r824, %r847, %r9482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9506, %r9482, %r9505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9509, %r9501, %r9506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9512, %r835, %r847, %r9493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9517, %r9493, %r9516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9520, %r9512, %r9517;
	// end inline asm
	// begin inline asm
	mov.b32 %r9528, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9539, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9525, %r824, %r871, %r9528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9529, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9530, %r9528, %r9529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9533, %r9525, %r9530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9536, %r835, %r871, %r9539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9541, %r9539, %r9540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9544, %r9536, %r9541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9547, %r824, %r893, %r9528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9552, %r9528, %r9551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9555, %r9547, %r9552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9558, %r835, %r893, %r9539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9563, %r9539, %r9562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9566, %r9558, %r9563;
	// end inline asm
	// begin inline asm
	mov.b32 %r9574, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9585, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9571, %r824, %r917, %r9574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9575, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9576, %r9574, %r9575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9579, %r9571, %r9576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9582, %r835, %r917, %r9585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9587, %r9585, %r9586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9590, %r9582, %r9587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9593, %r824, %r939, %r9574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9598, %r9574, %r9597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9601, %r9593, %r9598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9604, %r835, %r939, %r9585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9609, %r9585, %r9608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9612, %r9604, %r9609;
	// end inline asm
	// begin inline asm
	mov.b32 %r9620, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9631, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9617, %r824, %r963, %r9620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9621, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9622, %r9620, %r9621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9625, %r9617, %r9622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9628, %r835, %r963, %r9631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9633, %r9631, %r9632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9636, %r9628, %r9633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9639, %r824, %r985, %r9620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9644, %r9620, %r9643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9647, %r9639, %r9644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9650, %r835, %r985, %r9631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9655, %r9631, %r9654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9658, %r9650, %r9655;
	// end inline asm
	// begin inline asm
	mov.b32 %r9666, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9677, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9663, %r824, %r1009, %r9666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9667, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9668, %r9666, %r9667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9671, %r9663, %r9668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9674, %r835, %r1009, %r9677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9679, %r9677, %r9678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9682, %r9674, %r9679;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9685, %r824, %r1031, %r9666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9690, %r9666, %r9689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9693, %r9685, %r9690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9696, %r835, %r1031, %r9677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9701, %r9677, %r9700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9704, %r9696, %r9701;
	// end inline asm
	// begin inline asm
	mov.b32 %r9712, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9723, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9709, %r824, %r1055, %r9712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9713, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9714, %r9712, %r9713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9717, %r9709, %r9714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9720, %r835, %r1055, %r9723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9724, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9725, %r9723, %r9724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9728, %r9720, %r9725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9731, %r824, %r1077, %r9712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9736, %r9712, %r9735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9739, %r9731, %r9736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9742, %r835, %r1077, %r9723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9747, %r9723, %r9746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9750, %r9742, %r9747;
	// end inline asm
	// begin inline asm
	mov.b32 %r9758, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9769, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9755, %r824, %r1101, %r9758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9759, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9760, %r9758, %r9759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9763, %r9755, %r9760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9766, %r835, %r1101, %r9769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9770, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9771, %r9769, %r9770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9774, %r9766, %r9771;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9777, %r824, %r1123, %r9758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9782, %r9758, %r9781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9785, %r9777, %r9782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9788, %r835, %r1123, %r9769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9792, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9793, %r9769, %r9792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9796, %r9788, %r9793;
	// end inline asm
	// begin inline asm
	mov.b32 %r9804, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9815, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9801, %r824, %r1147, %r9804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9805, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9806, %r9804, %r9805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9809, %r9801, %r9806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9812, %r835, %r1147, %r9815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9817, %r9815, %r9816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9820, %r9812, %r9817;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9823, %r824, %r1169, %r9804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9828, %r9804, %r9827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9831, %r9823, %r9828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9834, %r835, %r1169, %r9815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9839, %r9815, %r9838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9842, %r9834, %r9839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9845, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9847, %r9845, %r9487, %r9349;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9851, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9853, %r9851, %r9498, %r9353;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9857, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9859, %r9857, %r9509, %r9357;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9863, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9865, %r9863, %r9520, %r9361;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9869, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9871, %r9869, %r9533, %r9365;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9875, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9877, %r9875, %r9544, %r9369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9881, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9883, %r9881, %r9555, %r9373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9887, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9889, %r9887, %r9566, %r9377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9893, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9895, %r9893, %r9579, %r9381;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9899, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9901, %r9899, %r9590, %r9385;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9905, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9907, %r9905, %r9601, %r9389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9911, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9913, %r9911, %r9612, %r9393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9917, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9919, %r9917, %r9625, %r9397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9923, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9925, %r9923, %r9636, %r9401;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9929, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9931, %r9929, %r9647, %r9405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9935, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9937, %r9935, %r9658, %r9409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9941, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9943, %r9941, %r9671, %r9413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9947, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9949, %r9947, %r9682, %r9417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9953, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9955, %r9953, %r9693, %r9421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9959, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9961, %r9959, %r9704, %r9425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9965, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9967, %r9965, %r9717, %r9429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9971, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9973, %r9971, %r9728, %r9433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9977, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9979, %r9977, %r9739, %r9437;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9983, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9985, %r9983, %r9750, %r9441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9989, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9991, %r9989, %r9763, %r9445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9995, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9997, %r9995, %r9774, %r9449;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10001, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10003, %r10001, %r9785, %r9453;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10007, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10009, %r10007, %r9796, %r9457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10013, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10015, %r10013, %r9809, %r9461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10019, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10021, %r10019, %r9820, %r9465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10025, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10027, %r10025, %r9831, %r9469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10031, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10033, %r10031, %r9842, %r9473;
	// end inline asm
	// begin inline asm
	mov.b32 %r10042, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10053, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10039, %r824, %r4641, %r10042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10044, %r10042, %r10043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10047, %r10039, %r10044;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10050, %r835, %r4641, %r10053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10055, %r10053, %r10054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10058, %r10050, %r10055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10061, %r824, %r4663, %r10042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10066, %r10042, %r10065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10069, %r10061, %r10066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10072, %r835, %r4663, %r10053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10077, %r10053, %r10076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10080, %r10072, %r10077;
	// end inline asm
	// begin inline asm
	mov.b32 %r10088, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10099, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10085, %r824, %r4687, %r10088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10090, %r10088, %r10089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10093, %r10085, %r10090;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10096, %r835, %r4687, %r10099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10101, %r10099, %r10100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10104, %r10096, %r10101;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10107, %r824, %r4709, %r10088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10111, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10112, %r10088, %r10111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10115, %r10107, %r10112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10118, %r835, %r4709, %r10099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10123, %r10099, %r10122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10126, %r10118, %r10123;
	// end inline asm
	// begin inline asm
	mov.b32 %r10134, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10145, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10131, %r824, %r4733, %r10134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10136, %r10134, %r10135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10139, %r10131, %r10136;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10142, %r835, %r4733, %r10145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10147, %r10145, %r10146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10150, %r10142, %r10147;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10153, %r824, %r4755, %r10134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10157, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10158, %r10134, %r10157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10161, %r10153, %r10158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10164, %r835, %r4755, %r10145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10168, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10169, %r10145, %r10168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10172, %r10164, %r10169;
	// end inline asm
	// begin inline asm
	mov.b32 %r10180, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10191, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10177, %r824, %r4779, %r10180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10182, %r10180, %r10181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10185, %r10177, %r10182;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10188, %r835, %r4779, %r10191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10193, %r10191, %r10192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10196, %r10188, %r10193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10199, %r824, %r4801, %r10180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10204, %r10180, %r10203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10207, %r10199, %r10204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10210, %r835, %r4801, %r10191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10214, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10215, %r10191, %r10214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10218, %r10210, %r10215;
	// end inline asm
	// begin inline asm
	mov.b32 %r10226, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10237, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10223, %r824, %r4825, %r10226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10228, %r10226, %r10227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10231, %r10223, %r10228;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10234, %r835, %r4825, %r10237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10239, %r10237, %r10238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10242, %r10234, %r10239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10245, %r824, %r4847, %r10226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10250, %r10226, %r10249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10253, %r10245, %r10250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10256, %r835, %r4847, %r10237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10260, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10261, %r10237, %r10260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10264, %r10256, %r10261;
	// end inline asm
	// begin inline asm
	mov.b32 %r10272, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10283, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10269, %r824, %r4871, %r10272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10274, %r10272, %r10273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10277, %r10269, %r10274;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10280, %r835, %r4871, %r10283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10285, %r10283, %r10284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10288, %r10280, %r10285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10291, %r824, %r4893, %r10272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10296, %r10272, %r10295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10299, %r10291, %r10296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10302, %r835, %r4893, %r10283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10307, %r10283, %r10306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10310, %r10302, %r10307;
	// end inline asm
	// begin inline asm
	mov.b32 %r10318, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10329, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10315, %r824, %r4917, %r10318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10320, %r10318, %r10319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10323, %r10315, %r10320;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10326, %r835, %r4917, %r10329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10331, %r10329, %r10330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10334, %r10326, %r10331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10337, %r824, %r4939, %r10318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10342, %r10318, %r10341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10345, %r10337, %r10342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10348, %r835, %r4939, %r10329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10352, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10353, %r10329, %r10352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10356, %r10348, %r10353;
	// end inline asm
	// begin inline asm
	mov.b32 %r10364, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10375, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10361, %r824, %r4963, %r10364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10366, %r10364, %r10365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10369, %r10361, %r10366;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10372, %r835, %r4963, %r10375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10377, %r10375, %r10376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10380, %r10372, %r10377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10383, %r824, %r4985, %r10364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10388, %r10364, %r10387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10391, %r10383, %r10388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10394, %r835, %r4985, %r10375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10399, %r10375, %r10398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10402, %r10394, %r10399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10540, %r352, %r10047, %r9847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10537, %r352, %r10058, %r9853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10549, %r352, %r10069, %r9859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10546, %r352, %r10080, %r9865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10558, %r352, %r10093, %r9871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10555, %r352, %r10104, %r9877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10567, %r352, %r10115, %r9883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10564, %r352, %r10126, %r9889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10576, %r352, %r10139, %r9895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10573, %r352, %r10150, %r9901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10585, %r352, %r10161, %r9907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10582, %r352, %r10172, %r9913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10594, %r352, %r10185, %r9919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10591, %r352, %r10196, %r9925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10603, %r352, %r10207, %r9931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10600, %r352, %r10218, %r9937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10612, %r370, %r10231, %r9943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10609, %r370, %r10242, %r9949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10621, %r370, %r10253, %r9955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10618, %r370, %r10264, %r9961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10630, %r370, %r10277, %r9967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10627, %r370, %r10288, %r9973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10639, %r370, %r10299, %r9979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10636, %r370, %r10310, %r9985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10648, %r370, %r10323, %r9991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10645, %r370, %r10334, %r9997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10657, %r370, %r10345, %r10003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10654, %r370, %r10356, %r10009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10666, %r370, %r10369, %r10015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10663, %r370, %r10380, %r10021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10675, %r370, %r10391, %r10027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10672, %r370, %r10402, %r10033;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10533, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10535, %r10533, %r10537;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10538, %r434, %r10540, %r10535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10542, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10544, %r10542, %r10546;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10547, %r434, %r10549, %r10544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10551, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10553, %r10551, %r10555;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10556, %r434, %r10558, %r10553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10560, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10562, %r10560, %r10564;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10565, %r434, %r10567, %r10562;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10569, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10571, %r10569, %r10573;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10574, %r434, %r10576, %r10571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10578, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10580, %r10578, %r10582;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10583, %r434, %r10585, %r10580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10587, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10589, %r10587, %r10591;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10592, %r434, %r10594, %r10589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10596, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10598, %r10596, %r10600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10601, %r434, %r10603, %r10598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10605, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10607, %r10605, %r10609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10610, %r437, %r10612, %r10607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10614, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10616, %r10614, %r10618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10619, %r437, %r10621, %r10616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10623, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10625, %r10623, %r10627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10628, %r437, %r10630, %r10625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10632, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10634, %r10632, %r10636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10637, %r437, %r10639, %r10634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10641, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10643, %r10641, %r10645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10646, %r437, %r10648, %r10643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10650, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10652, %r10650, %r10654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10655, %r437, %r10657, %r10652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10659, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10661, %r10659, %r10663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10664, %r437, %r10666, %r10661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10668, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10670, %r10668, %r10672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10673, %r437, %r10675, %r10670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10677, %r440, %r10540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10680, %r434, %r10537, %r10677;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10684, %r440, %r10549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10687, %r434, %r10546, %r10684;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10691, %r440, %r10558;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10694, %r434, %r10555, %r10691;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10698, %r440, %r10567;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10701, %r434, %r10564, %r10698;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10705, %r440, %r10576;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10708, %r434, %r10573, %r10705;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10712, %r440, %r10585;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10715, %r434, %r10582, %r10712;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10719, %r440, %r10594;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10722, %r434, %r10591, %r10719;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10726, %r440, %r10603;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10729, %r434, %r10600, %r10726;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10733, %r443, %r10612;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10736, %r437, %r10609, %r10733;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10740, %r443, %r10621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10743, %r437, %r10618, %r10740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10747, %r443, %r10630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10750, %r437, %r10627, %r10747;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10754, %r443, %r10639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10757, %r437, %r10636, %r10754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10761, %r443, %r10648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10764, %r437, %r10645, %r10761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10768, %r443, %r10657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10771, %r437, %r10654, %r10768;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10775, %r443, %r10666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10778, %r437, %r10663, %r10775;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10782, %r443, %r10675;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10785, %r437, %r10672, %r10782;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10956, %r10953}, {%r482, %r488, %r485, %r491}, {%r10538, %r10680}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10965, %r10962}, {%r482, %r488, %r485, %r491}, {%r10547, %r10687}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10974, %r10971}, {%r482, %r488, %r485, %r491}, {%r10556, %r10694}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10983, %r10980}, {%r482, %r488, %r485, %r491}, {%r10565, %r10701}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10992, %r10989}, {%r482, %r488, %r485, %r491}, {%r10574, %r10708}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11001, %r10998}, {%r482, %r488, %r485, %r491}, {%r10583, %r10715}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11010, %r11007}, {%r482, %r488, %r485, %r491}, {%r10592, %r10722}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11019, %r11016}, {%r482, %r488, %r485, %r491}, {%r10601, %r10729}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11028, %r11025}, {%r482, %r488, %r485, %r491}, {%r10610, %r10736}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11037, %r11034}, {%r482, %r488, %r485, %r491}, {%r10619, %r10743}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11046, %r11043}, {%r482, %r488, %r485, %r491}, {%r10628, %r10750}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11055, %r11052}, {%r482, %r488, %r485, %r491}, {%r10637, %r10757}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11064, %r11061}, {%r482, %r488, %r485, %r491}, {%r10646, %r10764}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11073, %r11070}, {%r482, %r488, %r485, %r491}, {%r10655, %r10771}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11082, %r11079}, {%r482, %r488, %r485, %r491}, {%r10664, %r10778}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11091, %r11088}, {%r482, %r488, %r485, %r491}, {%r10673, %r10785}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10949, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10951, %r10949, %r10953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10954, %r529, %r10956, %r10951;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10958, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10960, %r10958, %r10962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10963, %r529, %r10965, %r10960;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10967, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10969, %r10967, %r10971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10972, %r529, %r10974, %r10969;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10976, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10978, %r10976, %r10980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10981, %r529, %r10983, %r10978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10985, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10987, %r10985, %r10989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10990, %r529, %r10992, %r10987;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10994, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10996, %r10994, %r10998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10999, %r529, %r11001, %r10996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11003, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11005, %r11003, %r11007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11008, %r529, %r11010, %r11005;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11012, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11014, %r11012, %r11016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11017, %r529, %r11019, %r11014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11021, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11023, %r11021, %r11025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11026, %r529, %r11028, %r11023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11030, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11032, %r11030, %r11034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11035, %r529, %r11037, %r11032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11039, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11041, %r11039, %r11043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11044, %r529, %r11046, %r11041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11048, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11050, %r11048, %r11052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11053, %r529, %r11055, %r11050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11057, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11059, %r11057, %r11061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11062, %r529, %r11064, %r11059;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11066, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11068, %r11066, %r11070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11071, %r529, %r11073, %r11068;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11075, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11077, %r11075, %r11079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11080, %r529, %r11082, %r11077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11084, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11086, %r11084, %r11088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11089, %r529, %r11091, %r11086;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11093, %r532, %r10956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11096, %r529, %r10953, %r11093;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11100, %r532, %r10965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11103, %r529, %r10962, %r11100;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11107, %r532, %r10974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11110, %r529, %r10971, %r11107;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11114, %r532, %r10983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11117, %r529, %r10980, %r11114;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11121, %r532, %r10992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11124, %r529, %r10989, %r11121;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11128, %r532, %r11001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11131, %r529, %r10998, %r11128;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11135, %r532, %r11010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11138, %r529, %r11007, %r11135;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11142, %r532, %r11019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11145, %r529, %r11016, %r11142;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11149, %r532, %r11028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11152, %r529, %r11025, %r11149;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11156, %r532, %r11037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11159, %r529, %r11034, %r11156;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11163, %r532, %r11046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11166, %r529, %r11043, %r11163;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11170, %r532, %r11055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11173, %r529, %r11052, %r11170;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11177, %r532, %r11064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11180, %r529, %r11061, %r11177;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11184, %r532, %r11073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11187, %r529, %r11070, %r11184;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11191, %r532, %r11082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11194, %r529, %r11079, %r11191;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11198, %r532, %r11091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11201, %r529, %r11088, %r11198;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11494, %r11497}, {%r572, %r578, %r575, %r581}, {%r10954, %r11096}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11500, %r11503}, {%r572, %r578, %r575, %r581}, {%r10963, %r11103}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11506, %r11509}, {%r572, %r578, %r575, %r581}, {%r10972, %r11110}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11512, %r11515}, {%r572, %r578, %r575, %r581}, {%r10981, %r11117}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11518, %r11521}, {%r572, %r578, %r575, %r581}, {%r10990, %r11124}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11524, %r11527}, {%r572, %r578, %r575, %r581}, {%r10999, %r11131}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11530, %r11533}, {%r572, %r578, %r575, %r581}, {%r11008, %r11138}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11536, %r11539}, {%r572, %r578, %r575, %r581}, {%r11017, %r11145}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11495, %r11498}, {%r572, %r578, %r575, %r581}, {%r11026, %r11152}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11501, %r11504}, {%r572, %r578, %r575, %r581}, {%r11035, %r11159}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11507, %r11510}, {%r572, %r578, %r575, %r581}, {%r11044, %r11166}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11513, %r11516}, {%r572, %r578, %r575, %r581}, {%r11053, %r11173}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11519, %r11522}, {%r572, %r578, %r575, %r581}, {%r11062, %r11180}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11525, %r11528}, {%r572, %r578, %r575, %r581}, {%r11071, %r11187}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11531, %r11534}, {%r572, %r578, %r575, %r581}, {%r11080, %r11194}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11537, %r11540}, {%r572, %r578, %r575, %r581}, {%r11089, %r11201}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11493, %r11494, %r11495;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11496, %r11497, %r11498;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11499, %r11500, %r11501;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11502, %r11503, %r11504;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11505, %r11506, %r11507;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11508, %r11509, %r11510;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11511, %r11512, %r11513;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11514, %r11515, %r11516;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11517, %r11518, %r11519;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11520, %r11521, %r11522;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11523, %r11524, %r11525;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11526, %r11527, %r11528;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11529, %r11530, %r11531;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11532, %r11533, %r11534;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11535, %r11536, %r11537;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11538, %r11539, %r11540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11541, %r11494, %r11495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11544, %r11497, %r11498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11547, %r11500, %r11501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11550, %r11503, %r11504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11553, %r11506, %r11507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11556, %r11509, %r11510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11559, %r11512, %r11513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11562, %r11515, %r11516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11565, %r11518, %r11519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11568, %r11521, %r11522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11571, %r11524, %r11525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11574, %r11527, %r11528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11577, %r11530, %r11531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11580, %r11533, %r11534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11583, %r11536, %r11537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11586, %r11539, %r11540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11589, %r16, %r11493;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11592, %r16, %r11496;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11595, %r16, %r11499;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11598, %r16, %r11502;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11601, %r16, %r11505;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11604, %r16, %r11508;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11607, %r16, %r11511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11610, %r16, %r11514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11613, %r16, %r11517;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11616, %r16, %r11520;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11619, %r16, %r11523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11622, %r16, %r11526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11625, %r16, %r11529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11628, %r16, %r11532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11631, %r16, %r11535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11634, %r16, %r11538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11637, %r17, %r11541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11640, %r17, %r11544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11643, %r17, %r11547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11646, %r17, %r11550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11649, %r17, %r11553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11652, %r17, %r11556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11655, %r17, %r11559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11658, %r17, %r11562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11661, %r17, %r11565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11664, %r17, %r11568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11667, %r17, %r11571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11670, %r17, %r11574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11673, %r17, %r11577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11676, %r17, %r11580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11679, %r17, %r11583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11682, %r17, %r11586;
	// end inline asm
	// begin inline asm
	mov.b32 %r11685, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11686, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11687, %r11589, %r11685;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11690, %r11687, %r11686;
	// end inline asm
	// begin inline asm
	mov.b32 %r11693, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11694, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11695, %r11592, %r11693;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11698, %r11695, %r11694;
	// end inline asm
	// begin inline asm
	mov.b32 %r11701, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11702, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11703, %r11595, %r11701;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11706, %r11703, %r11702;
	// end inline asm
	// begin inline asm
	mov.b32 %r11709, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11710, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11711, %r11598, %r11709;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11714, %r11711, %r11710;
	// end inline asm
	// begin inline asm
	mov.b32 %r11717, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11718, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11719, %r11601, %r11717;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11722, %r11719, %r11718;
	// end inline asm
	// begin inline asm
	mov.b32 %r11725, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11726, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11727, %r11604, %r11725;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11730, %r11727, %r11726;
	// end inline asm
	// begin inline asm
	mov.b32 %r11733, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11734, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11735, %r11607, %r11733;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11738, %r11735, %r11734;
	// end inline asm
	// begin inline asm
	mov.b32 %r11741, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11742, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11743, %r11610, %r11741;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11746, %r11743, %r11742;
	// end inline asm
	// begin inline asm
	mov.b32 %r11749, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11750, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11751, %r11613, %r11749;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11754, %r11751, %r11750;
	// end inline asm
	// begin inline asm
	mov.b32 %r11757, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11758, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11759, %r11616, %r11757;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11762, %r11759, %r11758;
	// end inline asm
	// begin inline asm
	mov.b32 %r11765, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11766, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11767, %r11619, %r11765;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11770, %r11767, %r11766;
	// end inline asm
	// begin inline asm
	mov.b32 %r11773, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11774, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11775, %r11622, %r11773;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11778, %r11775, %r11774;
	// end inline asm
	// begin inline asm
	mov.b32 %r11781, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11782, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11783, %r11625, %r11781;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11786, %r11783, %r11782;
	// end inline asm
	// begin inline asm
	mov.b32 %r11789, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11790, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11791, %r11628, %r11789;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11794, %r11791, %r11790;
	// end inline asm
	// begin inline asm
	mov.b32 %r11797, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11798, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11799, %r11631, %r11797;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11802, %r11799, %r11798;
	// end inline asm
	// begin inline asm
	mov.b32 %r11805, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11806, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11807, %r11634, %r11805;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11810, %r11807, %r11806;
	// end inline asm
	// begin inline asm
	mov.b32 %r11813, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11814, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11815, %r11637, %r11813;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11818, %r11815, %r11814;
	// end inline asm
	// begin inline asm
	mov.b32 %r11821, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11822, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11823, %r11640, %r11821;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11826, %r11823, %r11822;
	// end inline asm
	// begin inline asm
	mov.b32 %r11829, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11830, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11831, %r11643, %r11829;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11834, %r11831, %r11830;
	// end inline asm
	// begin inline asm
	mov.b32 %r11837, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11838, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11839, %r11646, %r11837;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11842, %r11839, %r11838;
	// end inline asm
	// begin inline asm
	mov.b32 %r11845, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11846, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11847, %r11649, %r11845;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11850, %r11847, %r11846;
	// end inline asm
	// begin inline asm
	mov.b32 %r11853, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11854, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11855, %r11652, %r11853;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11858, %r11855, %r11854;
	// end inline asm
	// begin inline asm
	mov.b32 %r11861, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11862, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11863, %r11655, %r11861;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11866, %r11863, %r11862;
	// end inline asm
	// begin inline asm
	mov.b32 %r11869, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11870, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11871, %r11658, %r11869;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11874, %r11871, %r11870;
	// end inline asm
	// begin inline asm
	mov.b32 %r11877, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11878, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11879, %r11661, %r11877;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11882, %r11879, %r11878;
	// end inline asm
	// begin inline asm
	mov.b32 %r11885, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11886, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11887, %r11664, %r11885;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11890, %r11887, %r11886;
	// end inline asm
	// begin inline asm
	mov.b32 %r11893, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11894, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11895, %r11667, %r11893;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11898, %r11895, %r11894;
	// end inline asm
	// begin inline asm
	mov.b32 %r11901, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11902, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11903, %r11670, %r11901;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11906, %r11903, %r11902;
	// end inline asm
	// begin inline asm
	mov.b32 %r11909, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11910, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11911, %r11673, %r11909;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11914, %r11911, %r11910;
	// end inline asm
	// begin inline asm
	mov.b32 %r11917, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11918, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11919, %r11676, %r11917;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11922, %r11919, %r11918;
	// end inline asm
	// begin inline asm
	mov.b32 %r11925, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11926, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11927, %r11679, %r11925;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11930, %r11927, %r11926;
	// end inline asm
	// begin inline asm
	mov.b32 %r11933, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11934, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11935, %r11682, %r11933;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11938, %r11935, %r11934;
	// end inline asm
	// begin inline asm
	mov.b32 %r11944, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11943, %r11944, %r11942;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11946, %r11690, %r11943;
	// end inline asm
	// begin inline asm
	mov.b32 %r11949, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11950, %r11944, %r11949;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11953, %r11698, %r11950;
	// end inline asm
	// begin inline asm
	mov.b32 %r11956, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11957, %r11944, %r11956;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11960, %r11706, %r11957;
	// end inline asm
	// begin inline asm
	mov.b32 %r11963, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11964, %r11944, %r11963;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11967, %r11714, %r11964;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11970, %r11946, %r11960, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11974, %r11953, %r11967, %r4341;
	// end inline asm
	shl.b32 	%r11981, %r11974, 4;
	// begin inline asm
	lop3.b32 %r11978, %r4347, %r11970, %r11981, 202;
	// end inline asm
	xor.b32  	%r16109, %r11978, -2004318072;
	// begin inline asm
	mov.b32 %r11985, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11984, %r11985, %r11983;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11987, %r11722, %r11984;
	// end inline asm
	// begin inline asm
	mov.b32 %r11990, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11991, %r11985, %r11990;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11994, %r11730, %r11991;
	// end inline asm
	// begin inline asm
	mov.b32 %r11997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11998, %r11985, %r11997;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12001, %r11738, %r11998;
	// end inline asm
	// begin inline asm
	mov.b32 %r12004, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12005, %r11985, %r12004;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12008, %r11746, %r12005;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12011, %r11987, %r12001, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12015, %r11994, %r12008, %r4341;
	// end inline asm
	shl.b32 	%r12022, %r12015, 4;
	// begin inline asm
	lop3.b32 %r12019, %r4347, %r12011, %r12022, 202;
	// end inline asm
	xor.b32  	%r16110, %r12019, -2004318072;
	// begin inline asm
	mov.b32 %r12026, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12025, %r12026, %r12024;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12028, %r11754, %r12025;
	// end inline asm
	// begin inline asm
	mov.b32 %r12031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12032, %r12026, %r12031;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12035, %r11762, %r12032;
	// end inline asm
	// begin inline asm
	mov.b32 %r12038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12039, %r12026, %r12038;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12042, %r11770, %r12039;
	// end inline asm
	// begin inline asm
	mov.b32 %r12045, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12046, %r12026, %r12045;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12049, %r11778, %r12046;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12052, %r12028, %r12042, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12056, %r12035, %r12049, %r4341;
	// end inline asm
	shl.b32 	%r12063, %r12056, 4;
	// begin inline asm
	lop3.b32 %r12060, %r4347, %r12052, %r12063, 202;
	// end inline asm
	xor.b32  	%r16111, %r12060, -2004318072;
	// begin inline asm
	mov.b32 %r12067, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12066, %r12067, %r12065;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12069, %r11786, %r12066;
	// end inline asm
	// begin inline asm
	mov.b32 %r12072, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12073, %r12067, %r12072;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12076, %r11794, %r12073;
	// end inline asm
	// begin inline asm
	mov.b32 %r12079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12080, %r12067, %r12079;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12083, %r11802, %r12080;
	// end inline asm
	// begin inline asm
	mov.b32 %r12086, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12087, %r12067, %r12086;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12090, %r11810, %r12087;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12093, %r12069, %r12083, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12097, %r12076, %r12090, %r4341;
	// end inline asm
	shl.b32 	%r12104, %r12097, 4;
	// begin inline asm
	lop3.b32 %r12101, %r4347, %r12093, %r12104, 202;
	// end inline asm
	xor.b32  	%r16112, %r12101, -2004318072;
	// begin inline asm
	mov.b32 %r12108, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12107, %r12108, %r12106;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12110, %r11818, %r12107;
	// end inline asm
	// begin inline asm
	mov.b32 %r12113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12114, %r12108, %r12113;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12117, %r11826, %r12114;
	// end inline asm
	// begin inline asm
	mov.b32 %r12120, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12121, %r12108, %r12120;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12124, %r11834, %r12121;
	// end inline asm
	// begin inline asm
	mov.b32 %r12127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12128, %r12108, %r12127;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12131, %r11842, %r12128;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12134, %r12110, %r12124, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12138, %r12117, %r12131, %r4341;
	// end inline asm
	shl.b32 	%r12145, %r12138, 4;
	// begin inline asm
	lop3.b32 %r12142, %r4347, %r12134, %r12145, 202;
	// end inline asm
	xor.b32  	%r16113, %r12142, -2004318072;
	// begin inline asm
	mov.b32 %r12149, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12147, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12148, %r12149, %r12147;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12151, %r11850, %r12148;
	// end inline asm
	// begin inline asm
	mov.b32 %r12154, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12155, %r12149, %r12154;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12158, %r11858, %r12155;
	// end inline asm
	// begin inline asm
	mov.b32 %r12161, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12162, %r12149, %r12161;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12165, %r11866, %r12162;
	// end inline asm
	// begin inline asm
	mov.b32 %r12168, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12169, %r12149, %r12168;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12172, %r11874, %r12169;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12175, %r12151, %r12165, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12179, %r12158, %r12172, %r4341;
	// end inline asm
	shl.b32 	%r12186, %r12179, 4;
	// begin inline asm
	lop3.b32 %r12183, %r4347, %r12175, %r12186, 202;
	// end inline asm
	xor.b32  	%r16114, %r12183, -2004318072;
	// begin inline asm
	mov.b32 %r12190, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12188, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12189, %r12190, %r12188;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12192, %r11882, %r12189;
	// end inline asm
	// begin inline asm
	mov.b32 %r12195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12196, %r12190, %r12195;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12199, %r11890, %r12196;
	// end inline asm
	// begin inline asm
	mov.b32 %r12202, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12203, %r12190, %r12202;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12206, %r11898, %r12203;
	// end inline asm
	// begin inline asm
	mov.b32 %r12209, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12210, %r12190, %r12209;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12213, %r11906, %r12210;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12216, %r12192, %r12206, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12220, %r12199, %r12213, %r4341;
	// end inline asm
	shl.b32 	%r12227, %r12220, 4;
	// begin inline asm
	lop3.b32 %r12224, %r4347, %r12216, %r12227, 202;
	// end inline asm
	xor.b32  	%r16115, %r12224, -2004318072;
	// begin inline asm
	mov.b32 %r12231, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12229, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12230, %r12231, %r12229;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12233, %r11914, %r12230;
	// end inline asm
	// begin inline asm
	mov.b32 %r12236, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12237, %r12231, %r12236;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12240, %r11922, %r12237;
	// end inline asm
	// begin inline asm
	mov.b32 %r12243, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12244, %r12231, %r12243;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12247, %r11930, %r12244;
	// end inline asm
	// begin inline asm
	mov.b32 %r12250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12251, %r12231, %r12250;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12254, %r11938, %r12251;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12257, %r12233, %r12247, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12261, %r12240, %r12254, %r4341;
	// end inline asm
	shl.b32 	%r12268, %r12261, 4;
	// begin inline asm
	lop3.b32 %r12265, %r4347, %r12257, %r12268, 202;
	// end inline asm
	xor.b32  	%r16116, %r12265, -2004318072;
	st.shared.u32 	[%rd93], %r16109;
	st.shared.u32 	[%rd94], %r16110;
	st.shared.u32 	[%rd95], %r16111;
	st.shared.u32 	[%rd96], %r16112;
	st.shared.u32 	[%rd97], %r16113;
	st.shared.u32 	[%rd98], %r16114;
	st.shared.u32 	[%rd99], %r16115;
	st.shared.u32 	[%rd100], %r16116;
	ld.shared.u32 	%r16233, [%rd85];
	ld.shared.u32 	%r16234, [%rd86];
	ld.shared.u32 	%r16235, [%rd87];
	ld.shared.u32 	%r16236, [%rd88];
	ld.shared.u32 	%r16245, [%rd89];
	ld.shared.u32 	%r16246, [%rd90];
	ld.shared.u32 	%r16247, [%rd91];
	ld.shared.u32 	%r16248, [%rd92];
	// begin inline asm
	mov.b32 %r12274, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12285, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12273, %r16233, -2004318072;
	// begin inline asm
	lop3.b32 %r12271, %r824, %r12273, %r12274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12275, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12276, %r12274, %r12275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12279, %r12271, %r12276;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12282, %r835, %r12273, %r12285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12286, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12287, %r12285, %r12286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12290, %r12282, %r12287;
	// end inline asm
	shr.u32 	%r12295, %r12273, 8;
	// begin inline asm
	lop3.b32 %r12293, %r824, %r12295, %r12274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12298, %r12274, %r12297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12301, %r12293, %r12298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12304, %r835, %r12295, %r12285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12309, %r12285, %r12308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12312, %r12304, %r12309;
	// end inline asm
	// begin inline asm
	mov.b32 %r12320, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12331, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12319, %r16234, -2004318072;
	// begin inline asm
	lop3.b32 %r12317, %r824, %r12319, %r12320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12321, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12322, %r12320, %r12321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12325, %r12317, %r12322;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12328, %r835, %r12319, %r12331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12333, %r12331, %r12332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12336, %r12328, %r12333;
	// end inline asm
	shr.u32 	%r12341, %r12319, 8;
	// begin inline asm
	lop3.b32 %r12339, %r824, %r12341, %r12320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12344, %r12320, %r12343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12347, %r12339, %r12344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12350, %r835, %r12341, %r12331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12354, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12355, %r12331, %r12354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12358, %r12350, %r12355;
	// end inline asm
	// begin inline asm
	mov.b32 %r12366, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12377, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12365, %r16235, -2004318072;
	// begin inline asm
	lop3.b32 %r12363, %r824, %r12365, %r12366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12368, %r12366, %r12367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12371, %r12363, %r12368;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12374, %r835, %r12365, %r12377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12379, %r12377, %r12378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12382, %r12374, %r12379;
	// end inline asm
	shr.u32 	%r12387, %r12365, 8;
	// begin inline asm
	lop3.b32 %r12385, %r824, %r12387, %r12366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12390, %r12366, %r12389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12393, %r12385, %r12390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12396, %r835, %r12387, %r12377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12401, %r12377, %r12400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12404, %r12396, %r12401;
	// end inline asm
	// begin inline asm
	mov.b32 %r12412, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12423, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12411, %r16236, -2004318072;
	// begin inline asm
	lop3.b32 %r12409, %r824, %r12411, %r12412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12413, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12414, %r12412, %r12413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12417, %r12409, %r12414;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12420, %r835, %r12411, %r12423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12425, %r12423, %r12424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12428, %r12420, %r12425;
	// end inline asm
	shr.u32 	%r12433, %r12411, 8;
	// begin inline asm
	lop3.b32 %r12431, %r824, %r12433, %r12412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12436, %r12412, %r12435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12439, %r12431, %r12436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12442, %r835, %r12433, %r12423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12447, %r12423, %r12446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12450, %r12442, %r12447;
	// end inline asm
	// begin inline asm
	mov.b32 %r12458, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12469, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12457, %r16245, -2004318072;
	// begin inline asm
	lop3.b32 %r12455, %r824, %r12457, %r12458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12460, %r12458, %r12459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12463, %r12455, %r12460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12466, %r835, %r12457, %r12469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12471, %r12469, %r12470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12474, %r12466, %r12471;
	// end inline asm
	shr.u32 	%r12479, %r12457, 8;
	// begin inline asm
	lop3.b32 %r12477, %r824, %r12479, %r12458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12482, %r12458, %r12481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12485, %r12477, %r12482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12488, %r835, %r12479, %r12469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12493, %r12469, %r12492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12496, %r12488, %r12493;
	// end inline asm
	// begin inline asm
	mov.b32 %r12504, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12515, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12503, %r16246, -2004318072;
	// begin inline asm
	lop3.b32 %r12501, %r824, %r12503, %r12504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12506, %r12504, %r12505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12509, %r12501, %r12506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12512, %r835, %r12503, %r12515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12517, %r12515, %r12516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12520, %r12512, %r12517;
	// end inline asm
	shr.u32 	%r12525, %r12503, 8;
	// begin inline asm
	lop3.b32 %r12523, %r824, %r12525, %r12504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12528, %r12504, %r12527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12531, %r12523, %r12528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12534, %r835, %r12525, %r12515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12539, %r12515, %r12538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12542, %r12534, %r12539;
	// end inline asm
	// begin inline asm
	mov.b32 %r12550, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12561, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12549, %r16247, -2004318072;
	// begin inline asm
	lop3.b32 %r12547, %r824, %r12549, %r12550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12552, %r12550, %r12551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12555, %r12547, %r12552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12558, %r835, %r12549, %r12561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12563, %r12561, %r12562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12566, %r12558, %r12563;
	// end inline asm
	shr.u32 	%r12571, %r12549, 8;
	// begin inline asm
	lop3.b32 %r12569, %r824, %r12571, %r12550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12574, %r12550, %r12573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12577, %r12569, %r12574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12580, %r835, %r12571, %r12561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12585, %r12561, %r12584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12588, %r12580, %r12585;
	// end inline asm
	// begin inline asm
	mov.b32 %r12596, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12607, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12595, %r16248, -2004318072;
	// begin inline asm
	lop3.b32 %r12593, %r824, %r12595, %r12596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12598, %r12596, %r12597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12601, %r12593, %r12598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12604, %r835, %r12595, %r12607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12609, %r12607, %r12608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12612, %r12604, %r12609;
	// end inline asm
	shr.u32 	%r12617, %r12595, 8;
	// begin inline asm
	lop3.b32 %r12615, %r824, %r12617, %r12596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12620, %r12596, %r12619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12623, %r12615, %r12620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12626, %r835, %r12617, %r12607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12630, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12631, %r12607, %r12630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12634, %r12626, %r12631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12637, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12639, %r12637, %r12279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12642, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12644, %r12642, %r12290;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12647, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12649, %r12647, %r12301;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12652, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12654, %r12652, %r12312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12657, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12659, %r12657, %r12325;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12662, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12664, %r12662, %r12336;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12667, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12669, %r12667, %r12347;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12672, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12674, %r12672, %r12358;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12677, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12679, %r12677, %r12371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12682, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12684, %r12682, %r12382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12687, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12689, %r12687, %r12393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12692, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12694, %r12692, %r12404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12697, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12699, %r12697, %r12417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12702, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12704, %r12702, %r12428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12707, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12709, %r12707, %r12439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12712, %r388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12714, %r12712, %r12450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12717, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12719, %r12717, %r12463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12722, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12724, %r12722, %r12474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12727, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12729, %r12727, %r12485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12732, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12734, %r12732, %r12496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12737, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12739, %r12737, %r12509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12742, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12744, %r12742, %r12520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12747, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12749, %r12747, %r12531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12752, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12754, %r12752, %r12542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12757, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12759, %r12757, %r12555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12762, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12764, %r12762, %r12566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12767, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12769, %r12767, %r12577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12772, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12774, %r12772, %r12588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12777, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12779, %r12777, %r12601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12782, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12784, %r12782, %r12612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12787, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12789, %r12787, %r12623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12792, %r406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12794, %r12792, %r12634;
	// end inline asm
	// begin inline asm
	mov.b32 %r12802, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12813, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12799, %r824, %r825, %r12802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12803, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12804, %r12802, %r12803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12807, %r12799, %r12804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12810, %r835, %r825, %r12813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12814, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12815, %r12813, %r12814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12818, %r12810, %r12815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12821, %r824, %r847, %r12802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12825, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12826, %r12802, %r12825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12829, %r12821, %r12826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12832, %r835, %r847, %r12813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12836, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12837, %r12813, %r12836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12840, %r12832, %r12837;
	// end inline asm
	// begin inline asm
	mov.b32 %r12848, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12859, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12845, %r824, %r871, %r12848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12849, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12850, %r12848, %r12849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12853, %r12845, %r12850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12856, %r835, %r871, %r12859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12860, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12861, %r12859, %r12860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12864, %r12856, %r12861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12867, %r824, %r893, %r12848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12871, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12872, %r12848, %r12871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12875, %r12867, %r12872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12878, %r835, %r893, %r12859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12882, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12883, %r12859, %r12882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12886, %r12878, %r12883;
	// end inline asm
	// begin inline asm
	mov.b32 %r12894, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12905, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12891, %r824, %r917, %r12894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12895, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12896, %r12894, %r12895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12899, %r12891, %r12896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12902, %r835, %r917, %r12905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12906, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12907, %r12905, %r12906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12910, %r12902, %r12907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12913, %r824, %r939, %r12894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12918, %r12894, %r12917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12921, %r12913, %r12918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12924, %r835, %r939, %r12905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12929, %r12905, %r12928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12932, %r12924, %r12929;
	// end inline asm
	// begin inline asm
	mov.b32 %r12940, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12951, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12937, %r824, %r963, %r12940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12941, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12942, %r12940, %r12941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12945, %r12937, %r12942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12948, %r835, %r963, %r12951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12952, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12953, %r12951, %r12952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12956, %r12948, %r12953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12959, %r824, %r985, %r12940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12963, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12964, %r12940, %r12963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12967, %r12959, %r12964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12970, %r835, %r985, %r12951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12975, %r12951, %r12974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12978, %r12970, %r12975;
	// end inline asm
	// begin inline asm
	mov.b32 %r12986, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12997, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12983, %r824, %r1009, %r12986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12988, %r12986, %r12987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12991, %r12983, %r12988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12994, %r835, %r1009, %r12997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12999, %r12997, %r12998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13002, %r12994, %r12999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13005, %r824, %r1031, %r12986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13009, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13010, %r12986, %r13009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13013, %r13005, %r13010;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13016, %r835, %r1031, %r12997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13021, %r12997, %r13020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13024, %r13016, %r13021;
	// end inline asm
	// begin inline asm
	mov.b32 %r13032, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13043, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13029, %r824, %r1055, %r13032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13034, %r13032, %r13033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13037, %r13029, %r13034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13040, %r835, %r1055, %r13043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13045, %r13043, %r13044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13048, %r13040, %r13045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13051, %r824, %r1077, %r13032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13055, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13056, %r13032, %r13055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13059, %r13051, %r13056;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13062, %r835, %r1077, %r13043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13067, %r13043, %r13066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13070, %r13062, %r13067;
	// end inline asm
	// begin inline asm
	mov.b32 %r13078, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13089, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13075, %r824, %r1101, %r13078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13080, %r13078, %r13079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13083, %r13075, %r13080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13086, %r835, %r1101, %r13089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13090, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13091, %r13089, %r13090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13094, %r13086, %r13091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13097, %r824, %r1123, %r13078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13102, %r13078, %r13101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13105, %r13097, %r13102;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13108, %r835, %r1123, %r13089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13113, %r13089, %r13112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13116, %r13108, %r13113;
	// end inline asm
	// begin inline asm
	mov.b32 %r13124, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13135, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13121, %r824, %r1147, %r13124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13125, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13126, %r13124, %r13125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13129, %r13121, %r13126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13132, %r835, %r1147, %r13135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13136, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13137, %r13135, %r13136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13140, %r13132, %r13137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13143, %r824, %r1169, %r13124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13147, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13148, %r13124, %r13147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13151, %r13143, %r13148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13154, %r835, %r1169, %r13135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13159, %r13135, %r13158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13162, %r13154, %r13159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13165, %r280, %r12807, %r12639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13169, %r280, %r12818, %r12644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13173, %r280, %r12829, %r12649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13177, %r280, %r12840, %r12654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13181, %r280, %r12853, %r12659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13185, %r280, %r12864, %r12664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13189, %r280, %r12875, %r12669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13193, %r280, %r12886, %r12674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13197, %r280, %r12899, %r12679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13201, %r280, %r12910, %r12684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13205, %r280, %r12921, %r12689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13209, %r280, %r12932, %r12694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13213, %r280, %r12945, %r12699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13217, %r280, %r12956, %r12704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13221, %r280, %r12967, %r12709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13225, %r280, %r12978, %r12714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13229, %r298, %r12991, %r12719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13233, %r298, %r13002, %r12724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13237, %r298, %r13013, %r12729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13241, %r298, %r13024, %r12734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13245, %r298, %r13037, %r12739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13249, %r298, %r13048, %r12744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13253, %r298, %r13059, %r12749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13257, %r298, %r13070, %r12754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13261, %r298, %r13083, %r12759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13265, %r298, %r13094, %r12764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13269, %r298, %r13105, %r12769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13273, %r298, %r13116, %r12774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13277, %r298, %r13129, %r12779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13281, %r298, %r13140, %r12784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13285, %r298, %r13151, %r12789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13289, %r298, %r13162, %r12794;
	// end inline asm
	// begin inline asm
	mov.b32 %r13298, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13309, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13295, %r824, %r4641, %r13298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13299, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13300, %r13298, %r13299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13303, %r13295, %r13300;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13306, %r835, %r4641, %r13309, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13310, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13311, %r13309, %r13310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13314, %r13306, %r13311;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13317, %r824, %r4663, %r13298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13321, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13322, %r13298, %r13321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13325, %r13317, %r13322;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13328, %r835, %r4663, %r13309, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13333, %r13309, %r13332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13336, %r13328, %r13333;
	// end inline asm
	// begin inline asm
	mov.b32 %r13344, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13355, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13341, %r824, %r4687, %r13344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13345, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13346, %r13344, %r13345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13349, %r13341, %r13346;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13352, %r835, %r4687, %r13355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13356, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13357, %r13355, %r13356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13360, %r13352, %r13357;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13363, %r824, %r4709, %r13344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13368, %r13344, %r13367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13371, %r13363, %r13368;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13374, %r835, %r4709, %r13355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13379, %r13355, %r13378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13382, %r13374, %r13379;
	// end inline asm
	// begin inline asm
	mov.b32 %r13390, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13401, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13387, %r824, %r4733, %r13390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13391, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13392, %r13390, %r13391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13395, %r13387, %r13392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13398, %r835, %r4733, %r13401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13402, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13403, %r13401, %r13402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13406, %r13398, %r13403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13409, %r824, %r4755, %r13390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13413, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13414, %r13390, %r13413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13417, %r13409, %r13414;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13420, %r835, %r4755, %r13401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13425, %r13401, %r13424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13428, %r13420, %r13425;
	// end inline asm
	// begin inline asm
	mov.b32 %r13436, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13447, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13433, %r824, %r4779, %r13436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13437, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13438, %r13436, %r13437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13441, %r13433, %r13438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13444, %r835, %r4779, %r13447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13448, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13449, %r13447, %r13448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13452, %r13444, %r13449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13455, %r824, %r4801, %r13436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13460, %r13436, %r13459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13463, %r13455, %r13460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13466, %r835, %r4801, %r13447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13471, %r13447, %r13470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13474, %r13466, %r13471;
	// end inline asm
	// begin inline asm
	mov.b32 %r13482, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13493, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13479, %r824, %r4825, %r13482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13483, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13484, %r13482, %r13483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13487, %r13479, %r13484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13490, %r835, %r4825, %r13493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13495, %r13493, %r13494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13498, %r13490, %r13495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13501, %r824, %r4847, %r13482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13506, %r13482, %r13505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13509, %r13501, %r13506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13512, %r835, %r4847, %r13493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13517, %r13493, %r13516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13520, %r13512, %r13517;
	// end inline asm
	// begin inline asm
	mov.b32 %r13528, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13539, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13525, %r824, %r4871, %r13528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13529, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13530, %r13528, %r13529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13533, %r13525, %r13530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13536, %r835, %r4871, %r13539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13541, %r13539, %r13540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13544, %r13536, %r13541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13547, %r824, %r4893, %r13528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13552, %r13528, %r13551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13555, %r13547, %r13552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13558, %r835, %r4893, %r13539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13563, %r13539, %r13562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13566, %r13558, %r13563;
	// end inline asm
	// begin inline asm
	mov.b32 %r13574, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13585, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13571, %r824, %r4917, %r13574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13575, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13576, %r13574, %r13575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13579, %r13571, %r13576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13582, %r835, %r4917, %r13585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13587, %r13585, %r13586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13590, %r13582, %r13587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13593, %r824, %r4939, %r13574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13598, %r13574, %r13597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13601, %r13593, %r13598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13604, %r835, %r4939, %r13585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13609, %r13585, %r13608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13612, %r13604, %r13609;
	// end inline asm
	// begin inline asm
	mov.b32 %r13620, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13631, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13617, %r824, %r4963, %r13620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13621, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13622, %r13620, %r13621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13625, %r13617, %r13622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13628, %r835, %r4963, %r13631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13633, %r13631, %r13632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13636, %r13628, %r13633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13639, %r824, %r4985, %r13620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13644, %r13620, %r13643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13647, %r13639, %r13644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13650, %r835, %r4985, %r13631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13655, %r13631, %r13654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13658, %r13650, %r13655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13661, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13663, %r13661, %r13303, %r13165;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13667, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13669, %r13667, %r13314, %r13169;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13673, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13675, %r13673, %r13325, %r13173;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13679, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13681, %r13679, %r13336, %r13177;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13685, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13687, %r13685, %r13349, %r13181;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13691, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13693, %r13691, %r13360, %r13185;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13697, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13699, %r13697, %r13371, %r13189;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13703, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13705, %r13703, %r13382, %r13193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13709, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13711, %r13709, %r13395, %r13197;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13715, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13717, %r13715, %r13406, %r13201;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13721, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13723, %r13721, %r13417, %r13205;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13727, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13729, %r13727, %r13428, %r13209;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13733, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13735, %r13733, %r13441, %r13213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13739, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13741, %r13739, %r13452, %r13217;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13745, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13747, %r13745, %r13463, %r13221;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13751, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13753, %r13751, %r13474, %r13225;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13757, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13759, %r13757, %r13487, %r13229;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13763, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13765, %r13763, %r13498, %r13233;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13769, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13771, %r13769, %r13509, %r13237;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13775, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13777, %r13775, %r13520, %r13241;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13781, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13783, %r13781, %r13533, %r13245;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13787, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13789, %r13787, %r13544, %r13249;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13793, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13795, %r13793, %r13555, %r13253;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13799, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13801, %r13799, %r13566, %r13257;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13805, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13807, %r13805, %r13579, %r13261;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13811, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13813, %r13811, %r13590, %r13265;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13817, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13819, %r13817, %r13601, %r13269;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13823, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13825, %r13823, %r13612, %r13273;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13829, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13831, %r13829, %r13625, %r13277;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13835, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13837, %r13835, %r13636, %r13281;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13841, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13843, %r13841, %r13647, %r13285;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13847, %r334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13849, %r13847, %r13658, %r13289;
	// end inline asm
	// begin inline asm
	mov.b32 %r13858, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13869, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13855, %r824, %r8457, %r13858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13859, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13860, %r13858, %r13859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13863, %r13855, %r13860;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13866, %r835, %r8457, %r13869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13870, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13871, %r13869, %r13870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13874, %r13866, %r13871;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13877, %r824, %r8479, %r13858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13881, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13882, %r13858, %r13881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13885, %r13877, %r13882;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13888, %r835, %r8479, %r13869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13892, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13893, %r13869, %r13892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13896, %r13888, %r13893;
	// end inline asm
	// begin inline asm
	mov.b32 %r13904, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13915, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13901, %r824, %r8503, %r13904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13905, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13906, %r13904, %r13905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13909, %r13901, %r13906;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13912, %r835, %r8503, %r13915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13916, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13917, %r13915, %r13916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13920, %r13912, %r13917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13923, %r824, %r8525, %r13904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13927, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13928, %r13904, %r13927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13931, %r13923, %r13928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13934, %r835, %r8525, %r13915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13938, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13939, %r13915, %r13938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13942, %r13934, %r13939;
	// end inline asm
	// begin inline asm
	mov.b32 %r13950, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13961, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13947, %r824, %r8549, %r13950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13952, %r13950, %r13951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13955, %r13947, %r13952;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13958, %r835, %r8549, %r13961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13963, %r13961, %r13962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13966, %r13958, %r13963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13969, %r824, %r8571, %r13950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13973, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13974, %r13950, %r13973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13977, %r13969, %r13974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13980, %r835, %r8571, %r13961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13984, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13985, %r13961, %r13984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13988, %r13980, %r13985;
	// end inline asm
	// begin inline asm
	mov.b32 %r13996, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14007, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13993, %r824, %r8595, %r13996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13998, %r13996, %r13997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14001, %r13993, %r13998;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14004, %r835, %r8595, %r14007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14008, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14009, %r14007, %r14008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14012, %r14004, %r14009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14015, %r824, %r8617, %r13996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14020, %r13996, %r14019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14023, %r14015, %r14020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14026, %r835, %r8617, %r14007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14030, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14031, %r14007, %r14030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14034, %r14026, %r14031;
	// end inline asm
	// begin inline asm
	mov.b32 %r14042, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14053, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14039, %r824, %r8641, %r14042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14044, %r14042, %r14043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14047, %r14039, %r14044;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14050, %r835, %r8641, %r14053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14055, %r14053, %r14054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14058, %r14050, %r14055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14061, %r824, %r8663, %r14042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14066, %r14042, %r14065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14069, %r14061, %r14066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14072, %r835, %r8663, %r14053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14077, %r14053, %r14076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14080, %r14072, %r14077;
	// end inline asm
	// begin inline asm
	mov.b32 %r14088, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14099, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14085, %r824, %r8687, %r14088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14090, %r14088, %r14089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14093, %r14085, %r14090;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14096, %r835, %r8687, %r14099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14101, %r14099, %r14100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14104, %r14096, %r14101;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14107, %r824, %r8709, %r14088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14111, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14112, %r14088, %r14111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14115, %r14107, %r14112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14118, %r835, %r8709, %r14099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14123, %r14099, %r14122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14126, %r14118, %r14123;
	// end inline asm
	// begin inline asm
	mov.b32 %r14134, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14145, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14131, %r824, %r8733, %r14134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14136, %r14134, %r14135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14139, %r14131, %r14136;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14142, %r835, %r8733, %r14145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14147, %r14145, %r14146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14150, %r14142, %r14147;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14153, %r824, %r8755, %r14134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14157, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14158, %r14134, %r14157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14161, %r14153, %r14158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14164, %r835, %r8755, %r14145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14168, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14169, %r14145, %r14168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14172, %r14164, %r14169;
	// end inline asm
	// begin inline asm
	mov.b32 %r14180, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14191, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14177, %r824, %r8779, %r14180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14182, %r14180, %r14181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14185, %r14177, %r14182;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14188, %r835, %r8779, %r14191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14193, %r14191, %r14192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14196, %r14188, %r14193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14199, %r824, %r8801, %r14180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14204, %r14180, %r14203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14207, %r14199, %r14204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14210, %r835, %r8801, %r14191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14214, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14215, %r14191, %r14214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14218, %r14210, %r14215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14356, %r352, %r13863, %r13663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14353, %r352, %r13874, %r13669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14365, %r352, %r13885, %r13675;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14362, %r352, %r13896, %r13681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14374, %r352, %r13909, %r13687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14371, %r352, %r13920, %r13693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14383, %r352, %r13931, %r13699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14380, %r352, %r13942, %r13705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14392, %r352, %r13955, %r13711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14389, %r352, %r13966, %r13717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14401, %r352, %r13977, %r13723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14398, %r352, %r13988, %r13729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14410, %r352, %r14001, %r13735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14407, %r352, %r14012, %r13741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14419, %r352, %r14023, %r13747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14416, %r352, %r14034, %r13753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14428, %r370, %r14047, %r13759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14425, %r370, %r14058, %r13765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14437, %r370, %r14069, %r13771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14434, %r370, %r14080, %r13777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14446, %r370, %r14093, %r13783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14443, %r370, %r14104, %r13789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14455, %r370, %r14115, %r13795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14452, %r370, %r14126, %r13801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14464, %r370, %r14139, %r13807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14461, %r370, %r14150, %r13813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14473, %r370, %r14161, %r13819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14470, %r370, %r14172, %r13825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14482, %r370, %r14185, %r13831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14479, %r370, %r14196, %r13837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14491, %r370, %r14207, %r13843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14488, %r370, %r14218, %r13849;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14349, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14351, %r14349, %r14353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14354, %r434, %r14356, %r14351;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14358, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14360, %r14358, %r14362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14363, %r434, %r14365, %r14360;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14367, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14369, %r14367, %r14371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14372, %r434, %r14374, %r14369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14376, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14378, %r14376, %r14380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14381, %r434, %r14383, %r14378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14385, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14387, %r14385, %r14389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14390, %r434, %r14392, %r14387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14394, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14396, %r14394, %r14398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14399, %r434, %r14401, %r14396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14403, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14405, %r14403, %r14407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14408, %r434, %r14410, %r14405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14412, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14414, %r14412, %r14416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14417, %r434, %r14419, %r14414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14421, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14423, %r14421, %r14425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14426, %r437, %r14428, %r14423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14430, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14432, %r14430, %r14434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14435, %r437, %r14437, %r14432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14439, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14441, %r14439, %r14443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14444, %r437, %r14446, %r14441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14448, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14450, %r14448, %r14452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14453, %r437, %r14455, %r14450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14457, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14459, %r14457, %r14461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14462, %r437, %r14464, %r14459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14466, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14468, %r14466, %r14470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14471, %r437, %r14473, %r14468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14475, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14477, %r14475, %r14479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14480, %r437, %r14482, %r14477;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14484, %r443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14486, %r14484, %r14488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14489, %r437, %r14491, %r14486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14493, %r440, %r14356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14496, %r434, %r14353, %r14493;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14500, %r440, %r14365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14503, %r434, %r14362, %r14500;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14507, %r440, %r14374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14510, %r434, %r14371, %r14507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14514, %r440, %r14383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14517, %r434, %r14380, %r14514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14521, %r440, %r14392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14524, %r434, %r14389, %r14521;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14528, %r440, %r14401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14531, %r434, %r14398, %r14528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14535, %r440, %r14410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14538, %r434, %r14407, %r14535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14542, %r440, %r14419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14545, %r434, %r14416, %r14542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14549, %r443, %r14428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14552, %r437, %r14425, %r14549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14556, %r443, %r14437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14559, %r437, %r14434, %r14556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14563, %r443, %r14446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14566, %r437, %r14443, %r14563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14570, %r443, %r14455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14573, %r437, %r14452, %r14570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14577, %r443, %r14464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14580, %r437, %r14461, %r14577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14584, %r443, %r14473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14587, %r437, %r14470, %r14584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14591, %r443, %r14482;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14594, %r437, %r14479, %r14591;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14598, %r443, %r14491;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14601, %r437, %r14488, %r14598;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14772, %r14769}, {%r482, %r488, %r485, %r491}, {%r14354, %r14496}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14781, %r14778}, {%r482, %r488, %r485, %r491}, {%r14363, %r14503}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14790, %r14787}, {%r482, %r488, %r485, %r491}, {%r14372, %r14510}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14799, %r14796}, {%r482, %r488, %r485, %r491}, {%r14381, %r14517}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14808, %r14805}, {%r482, %r488, %r485, %r491}, {%r14390, %r14524}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14817, %r14814}, {%r482, %r488, %r485, %r491}, {%r14399, %r14531}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14826, %r14823}, {%r482, %r488, %r485, %r491}, {%r14408, %r14538}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14835, %r14832}, {%r482, %r488, %r485, %r491}, {%r14417, %r14545}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14844, %r14841}, {%r482, %r488, %r485, %r491}, {%r14426, %r14552}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14853, %r14850}, {%r482, %r488, %r485, %r491}, {%r14435, %r14559}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14862, %r14859}, {%r482, %r488, %r485, %r491}, {%r14444, %r14566}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14871, %r14868}, {%r482, %r488, %r485, %r491}, {%r14453, %r14573}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14880, %r14877}, {%r482, %r488, %r485, %r491}, {%r14462, %r14580}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14889, %r14886}, {%r482, %r488, %r485, %r491}, {%r14471, %r14587}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14898, %r14895}, {%r482, %r488, %r485, %r491}, {%r14480, %r14594}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14907, %r14904}, {%r482, %r488, %r485, %r491}, {%r14489, %r14601}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14765, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14767, %r14765, %r14769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14770, %r529, %r14772, %r14767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14774, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14776, %r14774, %r14778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14779, %r529, %r14781, %r14776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14783, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14785, %r14783, %r14787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14788, %r529, %r14790, %r14785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14792, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14794, %r14792, %r14796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14797, %r529, %r14799, %r14794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14801, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14803, %r14801, %r14805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14806, %r529, %r14808, %r14803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14810, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14812, %r14810, %r14814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14815, %r529, %r14817, %r14812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14819, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14821, %r14819, %r14823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14824, %r529, %r14826, %r14821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14828, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14830, %r14828, %r14832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14833, %r529, %r14835, %r14830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14837, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14839, %r14837, %r14841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14842, %r529, %r14844, %r14839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14846, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14848, %r14846, %r14850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14851, %r529, %r14853, %r14848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14855, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14857, %r14855, %r14859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14860, %r529, %r14862, %r14857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14864, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14866, %r14864, %r14868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14869, %r529, %r14871, %r14866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14873, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14875, %r14873, %r14877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14878, %r529, %r14880, %r14875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14882, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14884, %r14882, %r14886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14887, %r529, %r14889, %r14884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14891, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14893, %r14891, %r14895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14896, %r529, %r14898, %r14893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14900, %r532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14902, %r14900, %r14904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14905, %r529, %r14907, %r14902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14909, %r532, %r14772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14912, %r529, %r14769, %r14909;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14916, %r532, %r14781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14919, %r529, %r14778, %r14916;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14923, %r532, %r14790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14926, %r529, %r14787, %r14923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14930, %r532, %r14799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14933, %r529, %r14796, %r14930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14937, %r532, %r14808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14940, %r529, %r14805, %r14937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14944, %r532, %r14817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14947, %r529, %r14814, %r14944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14951, %r532, %r14826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14954, %r529, %r14823, %r14951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14958, %r532, %r14835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14961, %r529, %r14832, %r14958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14965, %r532, %r14844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14968, %r529, %r14841, %r14965;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14972, %r532, %r14853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14975, %r529, %r14850, %r14972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14979, %r532, %r14862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14982, %r529, %r14859, %r14979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14986, %r532, %r14871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14989, %r529, %r14868, %r14986;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14993, %r532, %r14880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14996, %r529, %r14877, %r14993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15000, %r532, %r14889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15003, %r529, %r14886, %r15000;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15007, %r532, %r14898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15010, %r529, %r14895, %r15007;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15014, %r532, %r14907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15017, %r529, %r14904, %r15014;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15310, %r15313}, {%r572, %r578, %r575, %r581}, {%r14770, %r14912}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15316, %r15319}, {%r572, %r578, %r575, %r581}, {%r14779, %r14919}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15322, %r15325}, {%r572, %r578, %r575, %r581}, {%r14788, %r14926}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15328, %r15331}, {%r572, %r578, %r575, %r581}, {%r14797, %r14933}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15334, %r15337}, {%r572, %r578, %r575, %r581}, {%r14806, %r14940}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15340, %r15343}, {%r572, %r578, %r575, %r581}, {%r14815, %r14947}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15346, %r15349}, {%r572, %r578, %r575, %r581}, {%r14824, %r14954}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15352, %r15355}, {%r572, %r578, %r575, %r581}, {%r14833, %r14961}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15311, %r15314}, {%r572, %r578, %r575, %r581}, {%r14842, %r14968}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15317, %r15320}, {%r572, %r578, %r575, %r581}, {%r14851, %r14975}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15323, %r15326}, {%r572, %r578, %r575, %r581}, {%r14860, %r14982}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15329, %r15332}, {%r572, %r578, %r575, %r581}, {%r14869, %r14989}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15335, %r15338}, {%r572, %r578, %r575, %r581}, {%r14878, %r14996}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15341, %r15344}, {%r572, %r578, %r575, %r581}, {%r14887, %r15003}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15347, %r15350}, {%r572, %r578, %r575, %r581}, {%r14896, %r15010}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15353, %r15356}, {%r572, %r578, %r575, %r581}, {%r14905, %r15017}, {%r3165, %r3165};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15309, %r15310, %r15311;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15312, %r15313, %r15314;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15315, %r15316, %r15317;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15318, %r15319, %r15320;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15321, %r15322, %r15323;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15324, %r15325, %r15326;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15327, %r15328, %r15329;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15330, %r15331, %r15332;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15333, %r15334, %r15335;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15336, %r15337, %r15338;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15339, %r15340, %r15341;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15342, %r15343, %r15344;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15345, %r15346, %r15347;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15348, %r15349, %r15350;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15351, %r15352, %r15353;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15354, %r15355, %r15356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15357, %r15310, %r15311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15360, %r15313, %r15314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15363, %r15316, %r15317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15366, %r15319, %r15320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15369, %r15322, %r15323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15372, %r15325, %r15326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15375, %r15328, %r15329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15378, %r15331, %r15332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15381, %r15334, %r15335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15384, %r15337, %r15338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15387, %r15340, %r15341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15390, %r15343, %r15344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15393, %r15346, %r15347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15396, %r15349, %r15350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15399, %r15352, %r15353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15402, %r15355, %r15356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15405, %r16, %r15309;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15408, %r16, %r15312;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15411, %r16, %r15315;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15414, %r16, %r15318;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15417, %r16, %r15321;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15420, %r16, %r15324;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15423, %r16, %r15327;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15426, %r16, %r15330;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15429, %r16, %r15333;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15432, %r16, %r15336;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15435, %r16, %r15339;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15438, %r16, %r15342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15441, %r16, %r15345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15444, %r16, %r15348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15447, %r16, %r15351;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15450, %r16, %r15354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15453, %r17, %r15357;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15456, %r17, %r15360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15459, %r17, %r15363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15462, %r17, %r15366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15465, %r17, %r15369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15468, %r17, %r15372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15471, %r17, %r15375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15474, %r17, %r15378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15477, %r17, %r15381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15480, %r17, %r15384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15483, %r17, %r15387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15486, %r17, %r15390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15489, %r17, %r15393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15492, %r17, %r15396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15495, %r17, %r15399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15498, %r17, %r15402;
	// end inline asm
	// begin inline asm
	mov.b32 %r15501, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15502, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15503, %r15405, %r15501;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15506, %r15503, %r15502;
	// end inline asm
	// begin inline asm
	mov.b32 %r15509, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15510, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15511, %r15408, %r15509;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15514, %r15511, %r15510;
	// end inline asm
	// begin inline asm
	mov.b32 %r15517, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15518, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15519, %r15411, %r15517;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15522, %r15519, %r15518;
	// end inline asm
	// begin inline asm
	mov.b32 %r15525, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15526, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15527, %r15414, %r15525;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15530, %r15527, %r15526;
	// end inline asm
	// begin inline asm
	mov.b32 %r15533, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15534, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15535, %r15417, %r15533;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15538, %r15535, %r15534;
	// end inline asm
	// begin inline asm
	mov.b32 %r15541, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15542, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15543, %r15420, %r15541;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15546, %r15543, %r15542;
	// end inline asm
	// begin inline asm
	mov.b32 %r15549, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15550, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15551, %r15423, %r15549;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15554, %r15551, %r15550;
	// end inline asm
	// begin inline asm
	mov.b32 %r15557, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15558, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15559, %r15426, %r15557;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15562, %r15559, %r15558;
	// end inline asm
	// begin inline asm
	mov.b32 %r15565, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15566, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15567, %r15429, %r15565;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15570, %r15567, %r15566;
	// end inline asm
	// begin inline asm
	mov.b32 %r15573, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15574, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15575, %r15432, %r15573;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15578, %r15575, %r15574;
	// end inline asm
	// begin inline asm
	mov.b32 %r15581, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15582, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15583, %r15435, %r15581;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15586, %r15583, %r15582;
	// end inline asm
	// begin inline asm
	mov.b32 %r15589, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15590, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15591, %r15438, %r15589;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15594, %r15591, %r15590;
	// end inline asm
	// begin inline asm
	mov.b32 %r15597, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15598, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15599, %r15441, %r15597;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15602, %r15599, %r15598;
	// end inline asm
	// begin inline asm
	mov.b32 %r15605, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15606, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15607, %r15444, %r15605;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15610, %r15607, %r15606;
	// end inline asm
	// begin inline asm
	mov.b32 %r15613, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15614, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15615, %r15447, %r15613;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15618, %r15615, %r15614;
	// end inline asm
	// begin inline asm
	mov.b32 %r15621, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15622, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15623, %r15450, %r15621;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15626, %r15623, %r15622;
	// end inline asm
	// begin inline asm
	mov.b32 %r15629, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15630, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15631, %r15453, %r15629;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15634, %r15631, %r15630;
	// end inline asm
	// begin inline asm
	mov.b32 %r15637, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15638, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15639, %r15456, %r15637;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15642, %r15639, %r15638;
	// end inline asm
	// begin inline asm
	mov.b32 %r15645, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15646, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15647, %r15459, %r15645;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15650, %r15647, %r15646;
	// end inline asm
	// begin inline asm
	mov.b32 %r15653, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15654, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15655, %r15462, %r15653;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15658, %r15655, %r15654;
	// end inline asm
	// begin inline asm
	mov.b32 %r15661, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15662, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15663, %r15465, %r15661;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15666, %r15663, %r15662;
	// end inline asm
	// begin inline asm
	mov.b32 %r15669, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15670, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15671, %r15468, %r15669;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15674, %r15671, %r15670;
	// end inline asm
	// begin inline asm
	mov.b32 %r15677, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15678, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15679, %r15471, %r15677;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15682, %r15679, %r15678;
	// end inline asm
	// begin inline asm
	mov.b32 %r15685, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15686, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15687, %r15474, %r15685;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15690, %r15687, %r15686;
	// end inline asm
	// begin inline asm
	mov.b32 %r15693, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15694, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15695, %r15477, %r15693;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15698, %r15695, %r15694;
	// end inline asm
	// begin inline asm
	mov.b32 %r15701, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15702, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15703, %r15480, %r15701;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15706, %r15703, %r15702;
	// end inline asm
	// begin inline asm
	mov.b32 %r15709, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15710, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15711, %r15483, %r15709;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15714, %r15711, %r15710;
	// end inline asm
	// begin inline asm
	mov.b32 %r15717, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15718, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15719, %r15486, %r15717;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15722, %r15719, %r15718;
	// end inline asm
	// begin inline asm
	mov.b32 %r15725, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15726, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15727, %r15489, %r15725;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15730, %r15727, %r15726;
	// end inline asm
	// begin inline asm
	mov.b32 %r15733, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15734, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15735, %r15492, %r15733;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15738, %r15735, %r15734;
	// end inline asm
	// begin inline asm
	mov.b32 %r15741, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15742, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15743, %r15495, %r15741;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15746, %r15743, %r15742;
	// end inline asm
	// begin inline asm
	mov.b32 %r15749, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15750, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15751, %r15498, %r15749;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15754, %r15751, %r15750;
	// end inline asm
	// begin inline asm
	mov.b32 %r15760, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15758, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15759, %r15760, %r15758;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15762, %r15506, %r15759;
	// end inline asm
	// begin inline asm
	mov.b32 %r15765, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15766, %r15760, %r15765;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15769, %r15514, %r15766;
	// end inline asm
	// begin inline asm
	mov.b32 %r15772, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15773, %r15760, %r15772;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15776, %r15522, %r15773;
	// end inline asm
	// begin inline asm
	mov.b32 %r15779, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15780, %r15760, %r15779;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15783, %r15530, %r15780;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15786, %r15762, %r15776, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15790, %r15769, %r15783, %r4341;
	// end inline asm
	shl.b32 	%r15797, %r15790, 4;
	// begin inline asm
	lop3.b32 %r15794, %r4347, %r15786, %r15797, 202;
	// end inline asm
	xor.b32  	%r16117, %r15794, -2004318072;
	// begin inline asm
	mov.b32 %r15801, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15799, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15800, %r15801, %r15799;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15803, %r15538, %r15800;
	// end inline asm
	// begin inline asm
	mov.b32 %r15806, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15807, %r15801, %r15806;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15810, %r15546, %r15807;
	// end inline asm
	// begin inline asm
	mov.b32 %r15813, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15814, %r15801, %r15813;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15817, %r15554, %r15814;
	// end inline asm
	// begin inline asm
	mov.b32 %r15820, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15821, %r15801, %r15820;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15824, %r15562, %r15821;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15827, %r15803, %r15817, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15831, %r15810, %r15824, %r4341;
	// end inline asm
	shl.b32 	%r15838, %r15831, 4;
	// begin inline asm
	lop3.b32 %r15835, %r4347, %r15827, %r15838, 202;
	// end inline asm
	xor.b32  	%r16118, %r15835, -2004318072;
	// begin inline asm
	mov.b32 %r15842, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15840, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15841, %r15842, %r15840;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15844, %r15570, %r15841;
	// end inline asm
	// begin inline asm
	mov.b32 %r15847, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15848, %r15842, %r15847;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15851, %r15578, %r15848;
	// end inline asm
	// begin inline asm
	mov.b32 %r15854, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15855, %r15842, %r15854;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15858, %r15586, %r15855;
	// end inline asm
	// begin inline asm
	mov.b32 %r15861, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15862, %r15842, %r15861;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15865, %r15594, %r15862;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15868, %r15844, %r15858, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15872, %r15851, %r15865, %r4341;
	// end inline asm
	shl.b32 	%r15879, %r15872, 4;
	// begin inline asm
	lop3.b32 %r15876, %r4347, %r15868, %r15879, 202;
	// end inline asm
	xor.b32  	%r16119, %r15876, -2004318072;
	// begin inline asm
	mov.b32 %r15883, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15881, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15882, %r15883, %r15881;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15885, %r15602, %r15882;
	// end inline asm
	// begin inline asm
	mov.b32 %r15888, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15889, %r15883, %r15888;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15892, %r15610, %r15889;
	// end inline asm
	// begin inline asm
	mov.b32 %r15895, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15896, %r15883, %r15895;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15899, %r15618, %r15896;
	// end inline asm
	// begin inline asm
	mov.b32 %r15902, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15903, %r15883, %r15902;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15906, %r15626, %r15903;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15909, %r15885, %r15899, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15913, %r15892, %r15906, %r4341;
	// end inline asm
	shl.b32 	%r15920, %r15913, 4;
	// begin inline asm
	lop3.b32 %r15917, %r4347, %r15909, %r15920, 202;
	// end inline asm
	xor.b32  	%r16120, %r15917, -2004318072;
	// begin inline asm
	mov.b32 %r15924, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15922, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15923, %r15924, %r15922;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15926, %r15634, %r15923;
	// end inline asm
	// begin inline asm
	mov.b32 %r15929, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15930, %r15924, %r15929;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15933, %r15642, %r15930;
	// end inline asm
	// begin inline asm
	mov.b32 %r15936, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15937, %r15924, %r15936;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15940, %r15650, %r15937;
	// end inline asm
	// begin inline asm
	mov.b32 %r15943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15944, %r15924, %r15943;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15947, %r15658, %r15944;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15950, %r15926, %r15940, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15954, %r15933, %r15947, %r4341;
	// end inline asm
	shl.b32 	%r15961, %r15954, 4;
	// begin inline asm
	lop3.b32 %r15958, %r4347, %r15950, %r15961, 202;
	// end inline asm
	xor.b32  	%r16121, %r15958, -2004318072;
	// begin inline asm
	mov.b32 %r15965, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15963, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15964, %r15965, %r15963;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15967, %r15666, %r15964;
	// end inline asm
	// begin inline asm
	mov.b32 %r15970, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15971, %r15965, %r15970;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15974, %r15674, %r15971;
	// end inline asm
	// begin inline asm
	mov.b32 %r15977, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15978, %r15965, %r15977;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15981, %r15682, %r15978;
	// end inline asm
	// begin inline asm
	mov.b32 %r15984, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15985, %r15965, %r15984;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15988, %r15690, %r15985;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15991, %r15967, %r15981, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15995, %r15974, %r15988, %r4341;
	// end inline asm
	shl.b32 	%r16002, %r15995, 4;
	// begin inline asm
	lop3.b32 %r15999, %r4347, %r15991, %r16002, 202;
	// end inline asm
	xor.b32  	%r16122, %r15999, -2004318072;
	// begin inline asm
	mov.b32 %r16006, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16004, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16005, %r16006, %r16004;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16008, %r15698, %r16005;
	// end inline asm
	// begin inline asm
	mov.b32 %r16011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16012, %r16006, %r16011;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16015, %r15706, %r16012;
	// end inline asm
	// begin inline asm
	mov.b32 %r16018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16019, %r16006, %r16018;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16022, %r15714, %r16019;
	// end inline asm
	// begin inline asm
	mov.b32 %r16025, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16026, %r16006, %r16025;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16029, %r15722, %r16026;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16032, %r16008, %r16022, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16036, %r16015, %r16029, %r4341;
	// end inline asm
	shl.b32 	%r16043, %r16036, 4;
	// begin inline asm
	lop3.b32 %r16040, %r4347, %r16032, %r16043, 202;
	// end inline asm
	xor.b32  	%r16123, %r16040, -2004318072;
	// begin inline asm
	mov.b32 %r16047, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16045, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16046, %r16047, %r16045;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16049, %r15730, %r16046;
	// end inline asm
	// begin inline asm
	mov.b32 %r16052, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16053, %r16047, %r16052;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16056, %r15738, %r16053;
	// end inline asm
	// begin inline asm
	mov.b32 %r16059, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16060, %r16047, %r16059;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16063, %r15746, %r16060;
	// end inline asm
	// begin inline asm
	mov.b32 %r16066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16067, %r16047, %r16066;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16070, %r15754, %r16067;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16073, %r16049, %r16063, %r4341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16077, %r16056, %r16070, %r4341;
	// end inline asm
	shl.b32 	%r16084, %r16077, 4;
	// begin inline asm
	lop3.b32 %r16081, %r4347, %r16073, %r16084, 202;
	// end inline asm
	xor.b32  	%r16124, %r16081, -2004318072;
	st.shared.u32 	[%rd93], %r16117;
	st.shared.u32 	[%rd94], %r16118;
	st.shared.u32 	[%rd95], %r16119;
	st.shared.u32 	[%rd96], %r16120;
	st.shared.u32 	[%rd97], %r16121;
	st.shared.u32 	[%rd98], %r16122;
	st.shared.u32 	[%rd99], %r16123;
	st.shared.u32 	[%rd100], %r16124;
	add.s32 	%r16224, %r16224, -128;
	add.s64 	%rd126, %rd126, 16644;
	setp.eq.s32 	%p319, %r16224, 0;
	@%p319 bra 	LBB0_184;
	bra.uni 	LBB0_183;
LBB0_184:                               // %guard_pass23043
                                        //   in Loop: Header=BB0_182 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16130, [%rd13];
	ld.shared.u32 	%r16131, [%rd14+128];
	ld.shared.u32 	%r16138, [%rd14+4];
	ld.shared.u32 	%r16139, [%rd14+132];
	ld.shared.u32 	%r16146, [%rd15];
	ld.shared.u32 	%r16147, [%rd16+128];
	ld.shared.u32 	%r16154, [%rd16+4];
	ld.shared.u32 	%r16155, [%rd16+132];
	// begin inline asm
	prmt.b32 %r16125, %r16130, %r16131, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16129, %r16130, %r16131, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16133, %r16138, %r16139, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16137, %r16138, %r16139, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16141, %r16146, %r16147, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16145, %r16146, %r16147, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16149, %r16154, %r16155, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16153, %r16154, %r16155, %r779;
	// end inline asm
	selp.b32 	%r16157, %r16129, %r16125, %p312;
	shfl.sync.bfly.b32	%r240, %r16157, 8, 31, -1;
	selp.b32 	%r16158, %r16137, %r16133, %p312;
	shfl.sync.bfly.b32	%r241, %r16158, 8, 31, -1;
	selp.b32 	%r16159, %r16145, %r16141, %p312;
	shfl.sync.bfly.b32	%r242, %r16159, 8, 31, -1;
	selp.b32 	%r16160, %r16153, %r16149, %p312;
	shfl.sync.bfly.b32	%r243, %r16160, 8, 31, -1;
	and.b32  	%r16161, %r16199, 768;
	setp.lt.u32 	%p321, %r16161, 384;
	@%p321 bra 	LBB0_186;
// %bb.185:                             // %L63372
                                        //   in Loop: Header=BB0_182 Depth=1
	selp.b32 	%r16162, %r243, %r16153, %p312;
	selp.b32 	%r16163, %r16149, %r243, %p312;
	selp.b32 	%r16164, %r242, %r16145, %p312;
	selp.b32 	%r16165, %r16141, %r242, %p312;
	selp.b32 	%r16166, %r241, %r16137, %p312;
	selp.b32 	%r16167, %r16133, %r241, %p312;
	selp.b32 	%r16168, %r240, %r16129, %p312;
	selp.b32 	%r16169, %r16125, %r240, %p312;
	shl.b32 	%r16170, %r16199, 12;
	or.b32  	%r16171, %r16170, %r148;
	or.b32  	%r16172, %r16171, %r149;
	or.b32  	%r16173, %r16172, %r154;
	cvt.u64.u32 	%rd101, %r16173;
	add.s64 	%rd102, %rd101, %rd17;
	shr.u64 	%rd103, %rd102, 35;
	add.s64 	%rd104, %rd102, %rd103;
	shr.s64 	%rd105, %rd104, 29;
	setp.lt.s64 	%p323, %rd102, 0;
	and.b64  	%rd106, %rd104, -536870912;
	setp.ne.s64 	%p324, %rd106, %rd102;
	and.pred  	%p325, %p323, %p324;
	selp.u64 	%rd107, 1, 0, %p325;
	sub.s64 	%rd108, %rd107, %rd105;
	shl.b64 	%rd109, %rd108, 29;
	add.s64 	%rd110, %rd109, %rd102;
	shl.b64 	%rd111, %rd110, 2;
	add.s64 	%rd112, %rd3, %rd111;
	st.global.v4.u32 	[%rd112], {%r16169, %r16167, %r16168, %r16166};
	or.b32  	%r16174, %r16172, %r155;
	cvt.u64.u32 	%rd113, %r16174;
	add.s64 	%rd114, %rd113, %rd17;
	shr.u64 	%rd115, %rd114, 35;
	add.s64 	%rd116, %rd114, %rd115;
	shr.u64 	%rd117, %rd116, 29;
	shr.u64 	%rd118, %rd114, 63;
	sub.s64 	%rd119, %rd118, %rd117;
	shl.b64 	%rd120, %rd119, 29;
	add.s64 	%rd121, %rd120, %rd114;
	shl.b64 	%rd122, %rd121, 2;
	add.s64 	%rd123, %rd3, %rd122;
	st.global.v4.u32 	[%rd123], {%r16165, %r16163, %r16164, %r16162};
	bra.uni 	LBB0_186;
LBB0_187:                               // %L63844
	st.global.u32 	[%rd4], %r16178;
	ret;
LBB0_7:                                 // %L247
	mov.u32 	%r16177, 2;
	st.global.u32 	[%rd4], %r16177;
	mov.u64 	%rd124, exception5110;
	cvta.global.u64 	%rd125, %rd124;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd125;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r244;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L8
	mov.u64 	%rd57, exception1;
	cvta.global.u64 	%rd58, %rd57;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd58;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r244;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
