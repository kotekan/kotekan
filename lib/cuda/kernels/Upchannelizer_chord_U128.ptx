// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5808[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<341>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16430>;
	.reg .f32 	%f<1392>;
	.reg .b64 	%rd<179>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r270, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd24, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r271, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r271, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	ld.param.u64 	%rd41, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd25, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r272, %r4, 9;
	or.b32  	%r273, %r3, %r1;
	or.b32  	%r274, %r273, %r272;
	mul.wide.u32 	%rd47, %r274, 4;
	add.s64 	%rd4, %rd41, %rd47;
	mov.u32 	%r275, 1;
	st.global.u32 	[%rd4], %r275;
	ld.global.u32 	%r5, [%rd25];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L204
	ld.param.u64 	%rd29, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd29];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 16384;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L214
	ld.param.u64 	%rd33, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd33];
	sub.s32 	%r276, %r6, %r5;
	and.b32  	%r277, %r276, 255;
	setp.ne.s32 	%p6, %r277, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L220
	ld.param.u64 	%rd37, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd37];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 128;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L230
	sub.s32 	%r278, %r8, %r7;
	and.b32  	%r279, %r278, 1;
	setp.eq.b32 	%p12, %r279, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass170
	bfe.u32 	%r189, %r1, 1, 1;
	and.b32  	%r190, %r1, 1;
	bfe.u32 	%r192, %r1, 2, 1;
	shr.u32 	%r193, %r1, 4;
	shl.b32 	%r286, %r193, 2;
	shl.b32 	%r287, %r192, 3;
	shl.b32 	%r288, %r190, 4;
	shl.b32 	%r289, %r189, 5;
	or.b32  	%r290, %r288, %r289;
	or.b32  	%r291, %r287, %r290;
	or.b32  	%r292, %r286, %r291;
	bfe.u32 	%r195, %r1, 3, 1;
	shl.b32 	%r293, %r195, 1;
	or.b32  	%r196, %r293, %r292;
	or.b32  	%r197, %r196, 64;
	mov.f32 	%f257, 0f40000000;
	mov.f32 	%f258, 0f43FF8000;
	div.approx.f32 	%f253, %f258, %f257;
	cvt.rn.f32.s32 	%f259, %r196;
	sub.f32 	%f260, %f259, %f253;
	mov.f32 	%f289, 0f43000000;
	div.approx.f32 	%f255, %f260, %f289;
	setp.ne.f32 	%p20, %f255, 0f00000000;
	mov.f32 	%f1351, 0f3F800000;
	mov.f32 	%f1336, %f1351;
	@%p20 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L735
	sin.approx.f32 	%f290, %f255;
	div.approx.f32 	%f1336, %f290, %f255;
$L__BB0_10:                             // %L738
	cvt.rn.f32.s32 	%f293, %r197;
	sub.f32 	%f294, %f293, %f253;
	div.approx.f32 	%f5, %f294, %f289;
	setp.eq.f32 	%p26, %f5, 0f00000000;
	mov.f32 	%f1337, %f1351;
	@%p26 bra 	$L__BB0_12;
// %bb.11:                              // %L755
	sin.approx.f32 	%f324, %f5;
	div.approx.f32 	%f1337, %f324, %f5;
$L__BB0_12:                             // %L758
	or.b32  	%r311, %r196, 1;
	or.b32  	%r10, %r196, 65;
	cvt.rn.f32.s32 	%f328, %r311;
	sub.f32 	%f329, %f328, %f253;
	div.approx.f32 	%f9, %f329, %f289;
	setp.eq.f32 	%p32, %f9, 0f00000000;
	mov.f32 	%f1338, %f1351;
	@%p32 bra 	$L__BB0_14;
// %bb.13:                              // %L837
	sin.approx.f32 	%f359, %f9;
	div.approx.f32 	%f1338, %f359, %f9;
$L__BB0_14:                             // %L840
	cvt.rn.f32.s32 	%f362, %r10;
	sub.f32 	%f363, %f362, %f253;
	div.approx.f32 	%f14, %f363, %f289;
	setp.eq.f32 	%p38, %f14, 0f00000000;
	mov.f32 	%f1339, %f1351;
	@%p38 bra 	$L__BB0_16;
// %bb.15:                              // %L857
	sin.approx.f32 	%f393, %f14;
	div.approx.f32 	%f1339, %f393, %f14;
$L__BB0_16:                             // %L860
	or.b32  	%r329, %r196, 128;
	or.b32  	%r12, %r196, 192;
	cvt.rn.f32.s32 	%f397, %r329;
	sub.f32 	%f398, %f397, %f253;
	div.approx.f32 	%f18, %f398, %f289;
	setp.eq.f32 	%p44, %f18, 0f00000000;
	mov.f32 	%f1340, %f1351;
	@%p44 bra 	$L__BB0_18;
// %bb.17:                              // %L939
	sin.approx.f32 	%f428, %f18;
	div.approx.f32 	%f1340, %f428, %f18;
$L__BB0_18:                             // %L942
	cvt.rn.f32.s32 	%f431, %r12;
	sub.f32 	%f432, %f431, %f253;
	div.approx.f32 	%f23, %f432, %f289;
	setp.eq.f32 	%p50, %f23, 0f00000000;
	mov.f32 	%f1341, %f1351;
	@%p50 bra 	$L__BB0_20;
// %bb.19:                              // %L959
	sin.approx.f32 	%f462, %f23;
	div.approx.f32 	%f1341, %f462, %f23;
$L__BB0_20:                             // %L962
	or.b32  	%r347, %r196, 129;
	or.b32  	%r14, %r196, 193;
	cvt.rn.f32.s32 	%f466, %r347;
	sub.f32 	%f467, %f466, %f253;
	div.approx.f32 	%f27, %f467, %f289;
	setp.eq.f32 	%p56, %f27, 0f00000000;
	mov.f32 	%f1342, %f1351;
	@%p56 bra 	$L__BB0_22;
// %bb.21:                              // %L1041
	sin.approx.f32 	%f497, %f27;
	div.approx.f32 	%f1342, %f497, %f27;
$L__BB0_22:                             // %L1044
	cvt.rn.f32.s32 	%f500, %r14;
	sub.f32 	%f501, %f500, %f253;
	div.approx.f32 	%f32, %f501, %f289;
	setp.eq.f32 	%p62, %f32, 0f00000000;
	mov.f32 	%f1343, %f1351;
	@%p62 bra 	$L__BB0_24;
// %bb.23:                              // %L1061
	sin.approx.f32 	%f531, %f32;
	div.approx.f32 	%f1343, %f531, %f32;
$L__BB0_24:                             // %L1064
	or.b32  	%r365, %r196, 256;
	or.b32  	%r16, %r196, 320;
	cvt.rn.f32.s32 	%f535, %r365;
	sub.f32 	%f536, %f535, %f253;
	div.approx.f32 	%f36, %f536, %f289;
	setp.eq.f32 	%p68, %f36, 0f00000000;
	mov.f32 	%f1344, %f1351;
	@%p68 bra 	$L__BB0_26;
// %bb.25:                              // %L1143
	sin.approx.f32 	%f566, %f36;
	div.approx.f32 	%f1344, %f566, %f36;
$L__BB0_26:                             // %L1146
	mov.f32 	%f261, 0f44004000;
	cvt.rn.f32.s32 	%f569, %r16;
	sub.f32 	%f570, %f569, %f253;
	div.approx.f32 	%f41, %f570, %f289;
	setp.eq.f32 	%p74, %f41, 0f00000000;
	mov.f32 	%f1345, %f1351;
	@%p74 bra 	$L__BB0_28;
// %bb.27:                              // %L1163
	sin.approx.f32 	%f600, %f41;
	div.approx.f32 	%f1345, %f600, %f41;
$L__BB0_28:                             // %L1166
	div.approx.f32 	%f262, %f260, %f261;
	div.approx.f32 	%f296, %f294, %f261;
	div.approx.f32 	%f331, %f329, %f261;
	div.approx.f32 	%f365, %f363, %f261;
	div.approx.f32 	%f400, %f398, %f261;
	div.approx.f32 	%f434, %f432, %f261;
	div.approx.f32 	%f469, %f467, %f261;
	div.approx.f32 	%f503, %f501, %f261;
	div.approx.f32 	%f538, %f536, %f261;
	div.approx.f32 	%f572, %f570, %f261;
	or.b32  	%r383, %r196, 257;
	or.b32  	%r18, %r196, 321;
	cvt.rn.f32.s32 	%f604, %r383;
	sub.f32 	%f605, %f604, %f253;
	div.approx.f32 	%f607, %f605, %f261;
	div.approx.f32 	%f45, %f605, %f289;
	setp.eq.f32 	%p80, %f45, 0f00000000;
	mov.f32 	%f1346, %f1351;
	@%p80 bra 	$L__BB0_30;
// %bb.29:                              // %L1245
	sin.approx.f32 	%f635, %f45;
	div.approx.f32 	%f1346, %f635, %f45;
$L__BB0_30:                             // %L1248
	abs.f32 	%f263, %f262;
	abs.f32 	%f297, %f296;
	abs.f32 	%f332, %f331;
	abs.f32 	%f366, %f365;
	abs.f32 	%f401, %f400;
	abs.f32 	%f435, %f434;
	abs.f32 	%f470, %f469;
	abs.f32 	%f504, %f503;
	abs.f32 	%f539, %f538;
	abs.f32 	%f573, %f572;
	abs.f32 	%f608, %f607;
	cvt.rn.f32.s32 	%f638, %r18;
	sub.f32 	%f639, %f638, %f253;
	div.approx.f32 	%f641, %f639, %f261;
	abs.f32 	%f642, %f641;
	div.approx.f32 	%f50, %f639, %f289;
	setp.eq.f32 	%p86, %f50, 0f00000000;
	mov.f32 	%f1347, %f1351;
	@%p86 bra 	$L__BB0_32;
// %bb.31:                              // %L1265
	sin.approx.f32 	%f669, %f50;
	div.approx.f32 	%f1347, %f669, %f50;
$L__BB0_32:                             // %L1268
	setp.gt.f32 	%p15, %f263, 0f4B800000;
	mul.f32 	%f264, %f262, 0f00000000;
	setp.gt.f32 	%p21, %f297, 0f4B800000;
	mul.f32 	%f298, %f296, 0f00000000;
	setp.gt.f32 	%p27, %f332, 0f4B800000;
	mul.f32 	%f333, %f331, 0f00000000;
	setp.gt.f32 	%p33, %f366, 0f4B800000;
	mul.f32 	%f367, %f365, 0f00000000;
	setp.gt.f32 	%p39, %f401, 0f4B800000;
	mul.f32 	%f402, %f400, 0f00000000;
	setp.gt.f32 	%p45, %f435, 0f4B800000;
	mul.f32 	%f436, %f434, 0f00000000;
	setp.gt.f32 	%p51, %f470, 0f4B800000;
	mul.f32 	%f471, %f469, 0f00000000;
	setp.gt.f32 	%p57, %f504, 0f4B800000;
	mul.f32 	%f505, %f503, 0f00000000;
	setp.gt.f32 	%p63, %f539, 0f4B800000;
	mul.f32 	%f540, %f538, 0f00000000;
	setp.gt.f32 	%p69, %f573, 0f4B800000;
	mul.f32 	%f574, %f572, 0f00000000;
	setp.gt.f32 	%p75, %f608, 0f4B800000;
	mul.f32 	%f609, %f607, 0f00000000;
	setp.gt.f32 	%p81, %f642, 0f4B800000;
	mul.f32 	%f643, %f641, 0f00000000;
	or.b32  	%r401, %r196, 384;
	or.b32  	%r20, %r196, 448;
	cvt.rn.f32.s32 	%f673, %r401;
	sub.f32 	%f674, %f673, %f253;
	div.approx.f32 	%f676, %f674, %f261;
	abs.f32 	%f677, %f676;
	setp.gt.f32 	%p87, %f677, 0f4B800000;
	mul.f32 	%f678, %f676, 0f00000000;
	div.approx.f32 	%f54, %f674, %f289;
	setp.eq.f32 	%p92, %f54, 0f00000000;
	mov.f32 	%f1348, %f1351;
	@%p92 bra 	$L__BB0_34;
// %bb.33:                              // %L1347
	sin.approx.f32 	%f704, %f54;
	div.approx.f32 	%f1348, %f704, %f54;
$L__BB0_34:                             // %L1350
	selp.f32 	%f265, %f264, %f262, %p15;
	selp.f32 	%f299, %f298, %f296, %p21;
	selp.f32 	%f334, %f333, %f331, %p27;
	selp.f32 	%f368, %f367, %f365, %p33;
	selp.f32 	%f403, %f402, %f400, %p39;
	selp.f32 	%f437, %f436, %f434, %p45;
	selp.f32 	%f472, %f471, %f469, %p51;
	selp.f32 	%f506, %f505, %f503, %p57;
	selp.f32 	%f541, %f540, %f538, %p63;
	selp.f32 	%f575, %f574, %f572, %p69;
	selp.f32 	%f610, %f609, %f607, %p75;
	selp.f32 	%f644, %f643, %f641, %p81;
	selp.f32 	%f679, %f678, %f676, %p87;
	cvt.rn.f32.s32 	%f707, %r20;
	sub.f32 	%f708, %f707, %f253;
	div.approx.f32 	%f710, %f708, %f261;
	abs.f32 	%f711, %f710;
	setp.gt.f32 	%p93, %f711, 0f4B800000;
	mul.f32 	%f712, %f710, 0f00000000;
	selp.f32 	%f713, %f712, %f710, %p93;
	div.approx.f32 	%f59, %f708, %f289;
	setp.eq.f32 	%p98, %f59, 0f00000000;
	mov.f32 	%f1349, %f1351;
	@%p98 bra 	$L__BB0_36;
// %bb.35:                              // %L1367
	sin.approx.f32 	%f738, %f59;
	div.approx.f32 	%f1349, %f738, %f59;
$L__BB0_36:                             // %L1370
	add.f32 	%f266, %f265, %f265;
	add.f32 	%f300, %f299, %f299;
	add.f32 	%f335, %f334, %f334;
	add.f32 	%f369, %f368, %f368;
	add.f32 	%f404, %f403, %f403;
	add.f32 	%f438, %f437, %f437;
	add.f32 	%f473, %f472, %f472;
	add.f32 	%f507, %f506, %f506;
	add.f32 	%f542, %f541, %f541;
	add.f32 	%f576, %f575, %f575;
	add.f32 	%f611, %f610, %f610;
	add.f32 	%f645, %f644, %f644;
	add.f32 	%f680, %f679, %f679;
	add.f32 	%f714, %f713, %f713;
	or.b32  	%r419, %r196, 385;
	or.b32  	%r22, %r196, 449;
	cvt.rn.f32.s32 	%f742, %r419;
	sub.f32 	%f743, %f742, %f253;
	div.approx.f32 	%f745, %f743, %f261;
	abs.f32 	%f746, %f745;
	setp.gt.f32 	%p99, %f746, 0f4B800000;
	mul.f32 	%f747, %f745, 0f00000000;
	selp.f32 	%f748, %f747, %f745, %p99;
	add.f32 	%f749, %f748, %f748;
	div.approx.f32 	%f63, %f743, %f289;
	setp.eq.f32 	%p104, %f63, 0f00000000;
	mov.f32 	%f1350, %f1351;
	@%p104 bra 	$L__BB0_38;
// %bb.37:                              // %L1449
	sin.approx.f32 	%f773, %f63;
	div.approx.f32 	%f1350, %f773, %f63;
$L__BB0_38:                             // %L1452
	mov.b32 	%r294, %f266;
	mov.b32 	%r301, %f300;
	mov.b32 	%r312, %f335;
	mov.b32 	%r319, %f369;
	mov.b32 	%r330, %f404;
	mov.b32 	%r337, %f438;
	mov.b32 	%r348, %f473;
	mov.b32 	%r355, %f507;
	mov.b32 	%r366, %f542;
	mov.b32 	%r373, %f576;
	mov.b32 	%r384, %f611;
	mov.b32 	%r391, %f645;
	mov.b32 	%r402, %f680;
	mov.b32 	%r409, %f714;
	mov.b32 	%r420, %f749;
	cvt.rn.f32.s32 	%f776, %r22;
	sub.f32 	%f777, %f776, %f253;
	div.approx.f32 	%f779, %f777, %f261;
	abs.f32 	%f780, %f779;
	setp.gt.f32 	%p105, %f780, 0f4B800000;
	mul.f32 	%f781, %f779, 0f00000000;
	selp.f32 	%f782, %f781, %f779, %p105;
	add.f32 	%f783, %f782, %f782;
	mov.b32 	%r427, %f783;
	div.approx.f32 	%f68, %f777, %f289;
	setp.eq.f32 	%p110, %f68, 0f00000000;
	@%p110 bra 	$L__BB0_40;
// %bb.39:                              // %L1469
	sin.approx.f32 	%f807, %f68;
	div.approx.f32 	%f1351, %f807, %f68;
$L__BB0_40:                             // %L1472
	and.b32  	%r295, %r294, -2147483648;
	and.b32  	%r302, %r301, -2147483648;
	and.b32  	%r313, %r312, -2147483648;
	and.b32  	%r320, %r319, -2147483648;
	and.b32  	%r331, %r330, -2147483648;
	and.b32  	%r338, %r337, -2147483648;
	and.b32  	%r349, %r348, -2147483648;
	and.b32  	%r356, %r355, -2147483648;
	and.b32  	%r367, %r366, -2147483648;
	and.b32  	%r374, %r373, -2147483648;
	and.b32  	%r385, %r384, -2147483648;
	and.b32  	%r392, %r391, -2147483648;
	and.b32  	%r403, %r402, -2147483648;
	and.b32  	%r410, %r409, -2147483648;
	and.b32  	%r421, %r420, -2147483648;
	and.b32  	%r428, %r427, -2147483648;
	mul.lo.s32 	%r24, %r196, 127;
	cvt.rn.f32.s32 	%f810, %r24;
	div.approx.f32 	%f71, %f810, %f289;
	abs.f32 	%f1354, %f71;
	setp.lt.f32 	%p111, %f1354, 0f40000000;
	@%p111 bra 	$L__BB0_52;
// %bb.41:
	setp.gtu.f32 	%p112, %f1354, 0f4B800000;
	@%p112 bra 	$L__BB0_48;
	bra.uni 	$L__BB0_42;
$L__BB0_48:
	mov.b32 	%r26, %f1354;
	and.b32  	%r437, %r26, 8388607;
	or.b32  	%r16360, %r437, 1065353216;
	mov.b32 	%f1353, %r16360;
	add.s32 	%r438, %r26, -1073741824;
	and.b32  	%r16361, %r438, -8388608;
	setp.eq.s32 	%p118, %r16361, 0;
	@%p118 bra 	$L__BB0_51;
// %bb.49:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f821, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f820,%f821;
	// end inline asm
$L__BB0_50:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r439, %r16361, 192937984;
	add.s32 	%r440, %r16360, %r439;
	mov.b32 	%f822, %r440;
	mul.f32 	%f823, %f820, %f822;
	sub.f32 	%f824, %f822, %f823;
	fma.rn.f32 	%f825, %f824, %f820, %f823;
	sub.f32 	%f826, %f822, %f825;
	fma.rz.f32 	%f827, %f826, %f820, %f825;
	cvt.rzi.f32.f32 	%f828, %f827;
	sub.f32 	%f1353, %f822, %f828;
	sub.s32 	%r16361, %r16361, %r439;
	mov.b32 	%r16360, %f1353;
	setp.ne.s32 	%p119, %r16361, 0;
	setp.ne.s32 	%p120, %r16360, 0;
	and.pred  	%p121, %p119, %p120;
	@%p121 bra 	$L__BB0_50;
$L__BB0_51:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p122, %r26, 2139095039;
	selp.f32 	%f829, 0f7FFFFFFF, 0f4B800000, %p122;
	mul.f32 	%f830, %f1353, 0f34000000;
	mul.f32 	%f1354, %f829, %f830;
	bra.uni 	$L__BB0_52;
$L__BB0_42:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f813, %f1354, %f257;
	cvt.rzi.f32.f32 	%f1352, %f813;
	fma.rn.f32 	%f74, %f1352, 0fC0000000, %f1354;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p113, %r25, 1073741824;
	@%p113 bra 	$L__BB0_47;
// %bb.43:
	setp.lt.u32 	%p114, %r25, -2147483647;
	@%p114 bra 	$L__BB0_45;
// %bb.44:
	add.f32 	%f818, %f1352, 0fBF800000;
	setp.lt.f32 	%p117, %f74, 0fC0000000;
	add.f32 	%f819, %f818, 0fBF800000;
	selp.f32 	%f1352, %f819, %f818, %p117;
	bra.uni 	$L__BB0_47;
$L__BB0_45:
	add.f32 	%f1352, %f1352, 0f3F800000;
	setp.ltu.f32 	%p115, %f74, 0f40800000;
	@%p115 bra 	$L__BB0_47;
// %bb.46:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f814, %f1352, 0f3F800000;
	fma.rn.f32 	%f816, %f257, 0fC0400000, %f74;
	setp.ge.f32 	%p116, %f816, 0f00000000;
	add.f32 	%f817, %f814, 0f3F800000;
	selp.f32 	%f1352, %f817, %f814, %p116;
$L__BB0_47:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1354, %f1352, 0fC0000000, %f1354;
$L__BB0_52:                             // %__internal_fmodf_kernel.exit.i
	or.b32  	%r296, %r295, 1056964608;
	or.b32  	%r303, %r302, 1056964608;
	or.b32  	%r314, %r313, 1056964608;
	or.b32  	%r321, %r320, 1056964608;
	or.b32  	%r332, %r331, 1056964608;
	or.b32  	%r339, %r338, 1056964608;
	or.b32  	%r350, %r349, 1056964608;
	or.b32  	%r357, %r356, 1056964608;
	or.b32  	%r368, %r367, 1056964608;
	or.b32  	%r375, %r374, 1056964608;
	or.b32  	%r386, %r385, 1056964608;
	or.b32  	%r393, %r392, 1056964608;
	or.b32  	%r404, %r403, 1056964608;
	or.b32  	%r411, %r410, 1056964608;
	or.b32  	%r422, %r421, 1056964608;
	or.b32  	%r429, %r428, 1056964608;
	abs.f32 	%f831, %f1354;
	setp.gtu.f32 	%p123, %f831, 0f7F800000;
	@%p123 bra 	$L__BB0_54;
// %bb.53:
	mov.b32 	%r441, %f71;
	and.b32  	%r442, %r441, -2147483648;
	mov.b32 	%r443, %f1354;
	or.b32  	%r444, %r442, %r443;
	mov.b32 	%f1354, %r444;
$L__BB0_54:                             // %__nv_fmodf.exit
	mov.b32 	%f267, %r296;
	mov.b32 	%f301, %r303;
	mov.b32 	%f336, %r314;
	mov.b32 	%f370, %r321;
	mov.b32 	%f405, %r332;
	mov.b32 	%f439, %r339;
	mov.b32 	%f474, %r350;
	mov.b32 	%f508, %r357;
	mov.b32 	%f543, %r368;
	mov.b32 	%f577, %r375;
	mov.b32 	%f612, %r386;
	mov.b32 	%f646, %r393;
	mov.b32 	%f681, %r404;
	mov.b32 	%f715, %r411;
	mov.b32 	%f750, %r422;
	mov.b32 	%f784, %r429;
	add.f32 	%f832, %f1354, %f1354;
	mov.b32 	%r445, %f832;
	and.b32  	%r446, %r445, -2147483648;
	or.b32  	%r447, %r446, 1056964608;
	mov.b32 	%f833, %r447;
	add.f32 	%f834, %f832, %f833;
	abs.f32 	%f836, %f832;
	add.s32 	%r453, %r24, 8128;
	cvt.rn.f32.s32 	%f862, %r453;
	div.approx.f32 	%f90, %f862, %f289;
	abs.f32 	%f1358, %f90;
	setp.lt.f32 	%p131, %f1358, 0f40000000;
	@%p131 bra 	$L__BB0_66;
// %bb.55:
	setp.gtu.f32 	%p132, %f1358, 0f4B800000;
	@%p132 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_56;
$L__BB0_62:
	mov.b32 	%r34, %f1358;
	and.b32  	%r454, %r34, 8388607;
	or.b32  	%r16362, %r454, 1065353216;
	mov.b32 	%f1357, %r16362;
	add.s32 	%r455, %r34, -1073741824;
	and.b32  	%r16363, %r455, -8388608;
	setp.eq.s32 	%p138, %r16363, 0;
	@%p138 bra 	$L__BB0_65;
// %bb.63:                              // %__nv_fmaf_rn.exit4.i.i.i1655.preheader
	mov.f32 	%f873, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f872,%f873;
	// end inline asm
$L__BB0_64:                             // %__nv_fmaf_rn.exit4.i.i.i1655
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r456, %r16363, 192937984;
	add.s32 	%r457, %r16362, %r456;
	mov.b32 	%f874, %r457;
	mul.f32 	%f875, %f872, %f874;
	sub.f32 	%f876, %f874, %f875;
	fma.rn.f32 	%f877, %f876, %f872, %f875;
	sub.f32 	%f878, %f874, %f877;
	fma.rz.f32 	%f879, %f878, %f872, %f877;
	cvt.rzi.f32.f32 	%f880, %f879;
	sub.f32 	%f1357, %f874, %f880;
	sub.s32 	%r16363, %r16363, %r456;
	mov.b32 	%r16362, %f1357;
	setp.ne.s32 	%p139, %r16363, 0;
	setp.ne.s32 	%p140, %r16362, 0;
	and.pred  	%p141, %p139, %p140;
	@%p141 bra 	$L__BB0_64;
$L__BB0_65:                             // %__internal_fmodf_slowpath_mod.exit.i.i1657
	setp.gt.u32 	%p142, %r34, 2139095039;
	selp.f32 	%f881, 0f7FFFFFFF, 0f4B800000, %p142;
	mul.f32 	%f882, %f1357, 0f34000000;
	mul.f32 	%f1358, %f881, %f882;
	bra.uni 	$L__BB0_66;
$L__BB0_56:                             // %__nv_fast_fdividef.exit.i.i.i1634
	div.approx.f32 	%f865, %f1358, %f257;
	cvt.rzi.f32.f32 	%f1356, %f865;
	fma.rn.f32 	%f93, %f1356, 0fC0000000, %f1358;
	mov.b32 	%r33, %f93;
	setp.lt.u32 	%p133, %r33, 1073741824;
	@%p133 bra 	$L__BB0_61;
// %bb.57:
	setp.lt.u32 	%p134, %r33, -2147483647;
	@%p134 bra 	$L__BB0_59;
// %bb.58:
	add.f32 	%f870, %f1356, 0fBF800000;
	setp.lt.f32 	%p137, %f93, 0fC0000000;
	add.f32 	%f871, %f870, 0fBF800000;
	selp.f32 	%f1356, %f871, %f870, %p137;
	bra.uni 	$L__BB0_61;
$L__BB0_59:
	add.f32 	%f1356, %f1356, 0f3F800000;
	setp.ltu.f32 	%p135, %f93, 0f40800000;
	@%p135 bra 	$L__BB0_61;
// %bb.60:                              // %__nv_fmaf_rn.exit.i.i.i1638
	add.f32 	%f866, %f1356, 0f3F800000;
	fma.rn.f32 	%f868, %f257, 0fC0400000, %f93;
	setp.ge.f32 	%p136, %f868, 0f00000000;
	add.f32 	%f869, %f866, 0f3F800000;
	selp.f32 	%f1356, %f869, %f866, %p136;
$L__BB0_61:                             // %__internal_fmodf_fastpath_quot.exit.i.i1641
	fma.rn.f32 	%f1358, %f1356, 0fC0000000, %f1358;
$L__BB0_66:                             // %__internal_fmodf_kernel.exit.i1660
	add.f32 	%f268, %f266, %f267;
	abs.f32 	%f270, %f266;
	add.f32 	%f302, %f300, %f301;
	abs.f32 	%f304, %f300;
	add.f32 	%f337, %f335, %f336;
	abs.f32 	%f339, %f335;
	add.f32 	%f371, %f369, %f370;
	abs.f32 	%f373, %f369;
	add.f32 	%f406, %f404, %f405;
	abs.f32 	%f408, %f404;
	add.f32 	%f440, %f438, %f439;
	abs.f32 	%f442, %f438;
	add.f32 	%f475, %f473, %f474;
	abs.f32 	%f477, %f473;
	add.f32 	%f509, %f507, %f508;
	abs.f32 	%f511, %f507;
	add.f32 	%f544, %f542, %f543;
	abs.f32 	%f546, %f542;
	add.f32 	%f578, %f576, %f577;
	abs.f32 	%f580, %f576;
	add.f32 	%f613, %f611, %f612;
	abs.f32 	%f615, %f611;
	add.f32 	%f647, %f645, %f646;
	abs.f32 	%f649, %f645;
	add.f32 	%f682, %f680, %f681;
	abs.f32 	%f684, %f680;
	add.f32 	%f716, %f714, %f715;
	abs.f32 	%f718, %f714;
	add.f32 	%f751, %f749, %f750;
	abs.f32 	%f753, %f749;
	add.f32 	%f785, %f783, %f784;
	abs.f32 	%f787, %f783;
	cvt.rzi.f32.f32 	%f835, %f834;
	setp.gt.f32 	%p124, %f836, 0f4B000000;
	shr.u32 	%r188, %r1, 1;
	shr.u32 	%r194, %r1, 3;
	abs.f32 	%f883, %f1358;
	setp.gtu.f32 	%p143, %f883, 0f7F800000;
	@%p143 bra 	$L__BB0_68;
// %bb.67:
	mov.b32 	%r458, %f90;
	and.b32  	%r459, %r458, -2147483648;
	mov.b32 	%r460, %f1358;
	or.b32  	%r461, %r459, %r460;
	mov.b32 	%f1358, %r461;
$L__BB0_68:                             // %__nv_fmodf.exit1661
	cvt.rzi.f32.f32 	%f269, %f268;
	setp.gt.f32 	%p16, %f270, 0f4B000000;
	cvt.rzi.f32.f32 	%f303, %f302;
	setp.gt.f32 	%p22, %f304, 0f4B000000;
	cvt.rzi.f32.f32 	%f338, %f337;
	setp.gt.f32 	%p28, %f339, 0f4B000000;
	cvt.rzi.f32.f32 	%f372, %f371;
	setp.gt.f32 	%p34, %f373, 0f4B000000;
	cvt.rzi.f32.f32 	%f407, %f406;
	setp.gt.f32 	%p40, %f408, 0f4B000000;
	cvt.rzi.f32.f32 	%f441, %f440;
	setp.gt.f32 	%p46, %f442, 0f4B000000;
	cvt.rzi.f32.f32 	%f476, %f475;
	setp.gt.f32 	%p52, %f477, 0f4B000000;
	cvt.rzi.f32.f32 	%f510, %f509;
	setp.gt.f32 	%p58, %f511, 0f4B000000;
	cvt.rzi.f32.f32 	%f545, %f544;
	setp.gt.f32 	%p64, %f546, 0f4B000000;
	cvt.rzi.f32.f32 	%f579, %f578;
	setp.gt.f32 	%p70, %f580, 0f4B000000;
	cvt.rzi.f32.f32 	%f614, %f613;
	setp.gt.f32 	%p76, %f615, 0f4B000000;
	cvt.rzi.f32.f32 	%f648, %f647;
	setp.gt.f32 	%p82, %f649, 0f4B000000;
	cvt.rzi.f32.f32 	%f683, %f682;
	setp.gt.f32 	%p88, %f684, 0f4B000000;
	cvt.rzi.f32.f32 	%f717, %f716;
	setp.gt.f32 	%p94, %f718, 0f4B000000;
	cvt.rzi.f32.f32 	%f752, %f751;
	setp.gt.f32 	%p100, %f753, 0f4B000000;
	cvt.rzi.f32.f32 	%f786, %f785;
	setp.gt.f32 	%p106, %f787, 0f4B000000;
	selp.f32 	%f837, %f832, %f835, %p124;
	cvt.rzi.f32.f32 	%f838, %f832;
	setp.lt.f32 	%p125, %f836, 0f3F000000;
	add.f32 	%f884, %f1358, %f1358;
	mov.b32 	%r474, %f884;
	and.b32  	%r475, %r474, -2147483648;
	or.b32  	%r476, %r475, 1056964608;
	mov.b32 	%f885, %r476;
	add.f32 	%f886, %f884, %f885;
	cvt.rzi.f32.f32 	%f887, %f886;
	abs.f32 	%f888, %f884;
	setp.gt.f32 	%p144, %f888, 0f4B000000;
	selp.f32 	%f889, %f884, %f887, %p144;
	cvt.rzi.f32.f32 	%f890, %f884;
	setp.lt.f32 	%p145, %f888, 0f3F000000;
	and.b32  	%r482, %r194, 2;
	or.b32  	%r483, %r192, %r482;
	and.b32  	%r484, %r188, 4;
	or.b32  	%r45, %r483, %r484;
	and.b32  	%r485, %r1, 3;
	mul.lo.s32 	%r486, %r485, %r45;
	shl.b32 	%r487, %r486, 1;
	neg.s32 	%r488, %r487;
	cvt.rn.f32.s32 	%f916, %r488;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f107, %f916, %f917;
	abs.f32 	%f1362, %f107;
	setp.lt.f32 	%p151, %f1362, 0f40000000;
	@%p151 bra 	$L__BB0_80;
// %bb.69:
	setp.gtu.f32 	%p152, %f1362, 0f4B800000;
	@%p152 bra 	$L__BB0_76;
	bra.uni 	$L__BB0_70;
$L__BB0_76:
	mov.b32 	%r47, %f1362;
	and.b32  	%r489, %r47, 8388607;
	or.b32  	%r16364, %r489, 1065353216;
	mov.b32 	%f1361, %r16364;
	add.s32 	%r490, %r47, -1073741824;
	and.b32  	%r16365, %r490, -8388608;
	setp.eq.s32 	%p158, %r16365, 0;
	@%p158 bra 	$L__BB0_79;
// %bb.77:                              // %__nv_fmaf_rn.exit4.i.i.i1686.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
$L__BB0_78:                             // %__nv_fmaf_rn.exit4.i.i.i1686
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r491, %r16365, 192937984;
	add.s32 	%r492, %r16364, %r491;
	mov.b32 	%f928, %r492;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1361, %f928, %f934;
	sub.s32 	%r16365, %r16365, %r491;
	mov.b32 	%r16364, %f1361;
	setp.ne.s32 	%p159, %r16365, 0;
	setp.ne.s32 	%p160, %r16364, 0;
	and.pred  	%p161, %p159, %p160;
	@%p161 bra 	$L__BB0_78;
$L__BB0_79:                             // %__internal_fmodf_slowpath_mod.exit.i.i1688
	setp.gt.u32 	%p162, %r47, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p162;
	mul.f32 	%f936, %f1361, 0f34000000;
	mul.f32 	%f1362, %f935, %f936;
	bra.uni 	$L__BB0_80;
$L__BB0_70:                             // %__nv_fast_fdividef.exit.i.i.i1665
	div.approx.f32 	%f919, %f1362, %f257;
	cvt.rzi.f32.f32 	%f1360, %f919;
	fma.rn.f32 	%f110, %f1360, 0fC0000000, %f1362;
	mov.b32 	%r46, %f110;
	setp.lt.u32 	%p153, %r46, 1073741824;
	@%p153 bra 	$L__BB0_75;
// %bb.71:
	setp.lt.u32 	%p154, %r46, -2147483647;
	@%p154 bra 	$L__BB0_73;
// %bb.72:
	add.f32 	%f924, %f1360, 0fBF800000;
	setp.lt.f32 	%p157, %f110, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1360, %f925, %f924, %p157;
	bra.uni 	$L__BB0_75;
$L__BB0_73:
	add.f32 	%f1360, %f1360, 0f3F800000;
	setp.ltu.f32 	%p155, %f110, 0f40800000;
	@%p155 bra 	$L__BB0_75;
// %bb.74:                              // %__nv_fmaf_rn.exit.i.i.i1669
	add.f32 	%f920, %f1360, 0f3F800000;
	fma.rn.f32 	%f922, %f257, 0fC0400000, %f110;
	setp.ge.f32 	%p156, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1360, %f923, %f920, %p156;
$L__BB0_75:                             // %__internal_fmodf_fastpath_quot.exit.i.i1672
	fma.rn.f32 	%f1362, %f1360, 0fC0000000, %f1362;
$L__BB0_80:                             // %__internal_fmodf_kernel.exit.i1691
	selp.f32 	%f271, %f266, %f269, %p16;
	cvt.rzi.f32.f32 	%f272, %f266;
	setp.lt.f32 	%p17, %f270, 0f3F000000;
	selp.f32 	%f305, %f300, %f303, %p22;
	cvt.rzi.f32.f32 	%f306, %f300;
	setp.lt.f32 	%p23, %f304, 0f3F000000;
	selp.f32 	%f340, %f335, %f338, %p28;
	cvt.rzi.f32.f32 	%f341, %f335;
	setp.lt.f32 	%p29, %f339, 0f3F000000;
	selp.f32 	%f374, %f369, %f372, %p34;
	cvt.rzi.f32.f32 	%f375, %f369;
	setp.lt.f32 	%p35, %f373, 0f3F000000;
	selp.f32 	%f409, %f404, %f407, %p40;
	cvt.rzi.f32.f32 	%f410, %f404;
	setp.lt.f32 	%p41, %f408, 0f3F000000;
	selp.f32 	%f443, %f438, %f441, %p46;
	cvt.rzi.f32.f32 	%f444, %f438;
	setp.lt.f32 	%p47, %f442, 0f3F000000;
	selp.f32 	%f478, %f473, %f476, %p52;
	cvt.rzi.f32.f32 	%f479, %f473;
	setp.lt.f32 	%p53, %f477, 0f3F000000;
	selp.f32 	%f512, %f507, %f510, %p58;
	cvt.rzi.f32.f32 	%f513, %f507;
	setp.lt.f32 	%p59, %f511, 0f3F000000;
	selp.f32 	%f547, %f542, %f545, %p64;
	cvt.rzi.f32.f32 	%f548, %f542;
	setp.lt.f32 	%p65, %f546, 0f3F000000;
	selp.f32 	%f581, %f576, %f579, %p70;
	cvt.rzi.f32.f32 	%f582, %f576;
	setp.lt.f32 	%p71, %f580, 0f3F000000;
	selp.f32 	%f616, %f611, %f614, %p76;
	cvt.rzi.f32.f32 	%f617, %f611;
	setp.lt.f32 	%p77, %f615, 0f3F000000;
	selp.f32 	%f650, %f645, %f648, %p82;
	cvt.rzi.f32.f32 	%f651, %f645;
	setp.lt.f32 	%p83, %f649, 0f3F000000;
	selp.f32 	%f685, %f680, %f683, %p88;
	cvt.rzi.f32.f32 	%f686, %f680;
	setp.lt.f32 	%p89, %f684, 0f3F000000;
	selp.f32 	%f719, %f714, %f717, %p94;
	cvt.rzi.f32.f32 	%f720, %f714;
	setp.lt.f32 	%p95, %f718, 0f3F000000;
	selp.f32 	%f754, %f749, %f752, %p100;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p101, %f753, 0f3F000000;
	selp.f32 	%f788, %f783, %f786, %p106;
	cvt.rzi.f32.f32 	%f789, %f783;
	setp.lt.f32 	%p107, %f787, 0f3F000000;
	selp.f32 	%f839, %f838, %f837, %p125;
	selp.f32 	%f891, %f890, %f889, %p145;
	shl.b32 	%r179, %r1, 1;
	abs.f32 	%f937, %f1362;
	setp.gtu.f32 	%p163, %f937, 0f7F800000;
	@%p163 bra 	$L__BB0_82;
// %bb.81:
	mov.b32 	%r493, %f107;
	and.b32  	%r494, %r493, -2147483648;
	mov.b32 	%r495, %f1362;
	or.b32  	%r496, %r494, %r495;
	mov.b32 	%f1362, %r496;
$L__BB0_82:                             // %__nv_fmodf.exit1692
	selp.f32 	%f273, %f272, %f271, %p17;
	selp.f32 	%f307, %f306, %f305, %p23;
	selp.f32 	%f342, %f341, %f340, %p29;
	selp.f32 	%f376, %f375, %f374, %p35;
	selp.f32 	%f411, %f410, %f409, %p41;
	selp.f32 	%f445, %f444, %f443, %p47;
	selp.f32 	%f480, %f479, %f478, %p53;
	selp.f32 	%f514, %f513, %f512, %p59;
	selp.f32 	%f549, %f548, %f547, %p65;
	selp.f32 	%f583, %f582, %f581, %p71;
	selp.f32 	%f618, %f617, %f616, %p77;
	selp.f32 	%f652, %f651, %f650, %p83;
	selp.f32 	%f687, %f686, %f685, %p89;
	selp.f32 	%f721, %f720, %f719, %p95;
	selp.f32 	%f756, %f755, %f754, %p101;
	selp.f32 	%f790, %f789, %f788, %p107;
	fma.rn.f32 	%f840, %f839, 0fBF000000, %f1354;
	fma.rn.f32 	%f892, %f891, 0fBF000000, %f1358;
	add.f32 	%f938, %f1362, %f1362;
	mov.b32 	%r497, %f938;
	and.b32  	%r498, %r497, -2147483648;
	or.b32  	%r499, %r498, 1056964608;
	mov.b32 	%f939, %r499;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p164, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p164;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p165, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p165;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1362;
	and.b32  	%r505, %r179, 6;
	mov.u32 	%r506, -8;
	sub.s32 	%r507, %r506, %r505;
	mul.lo.s32 	%r508, %r45, %r507;
	cvt.rn.f32.s32 	%f968, %r508;
	div.approx.f32 	%f126, %f968, %f917;
	abs.f32 	%f1366, %f126;
	setp.lt.f32 	%p171, %f1366, 0f40000000;
	@%p171 bra 	$L__BB0_94;
// %bb.83:
	setp.gtu.f32 	%p172, %f1366, 0f4B800000;
	@%p172 bra 	$L__BB0_90;
	bra.uni 	$L__BB0_84;
$L__BB0_90:
	mov.b32 	%r55, %f1366;
	and.b32  	%r509, %r55, 8388607;
	or.b32  	%r16366, %r509, 1065353216;
	mov.b32 	%f1365, %r16366;
	add.s32 	%r510, %r55, -1073741824;
	and.b32  	%r16367, %r510, -8388608;
	setp.eq.s32 	%p178, %r16367, 0;
	@%p178 bra 	$L__BB0_93;
// %bb.91:                              // %__nv_fmaf_rn.exit4.i.i.i1717.preheader
	mov.f32 	%f979, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f978,%f979;
	// end inline asm
$L__BB0_92:                             // %__nv_fmaf_rn.exit4.i.i.i1717
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r511, %r16367, 192937984;
	add.s32 	%r512, %r16366, %r511;
	mov.b32 	%f980, %r512;
	mul.f32 	%f981, %f978, %f980;
	sub.f32 	%f982, %f980, %f981;
	fma.rn.f32 	%f983, %f982, %f978, %f981;
	sub.f32 	%f984, %f980, %f983;
	fma.rz.f32 	%f985, %f984, %f978, %f983;
	cvt.rzi.f32.f32 	%f986, %f985;
	sub.f32 	%f1365, %f980, %f986;
	sub.s32 	%r16367, %r16367, %r511;
	mov.b32 	%r16366, %f1365;
	setp.ne.s32 	%p179, %r16367, 0;
	setp.ne.s32 	%p180, %r16366, 0;
	and.pred  	%p181, %p179, %p180;
	@%p181 bra 	$L__BB0_92;
$L__BB0_93:                             // %__internal_fmodf_slowpath_mod.exit.i.i1719
	setp.gt.u32 	%p182, %r55, 2139095039;
	selp.f32 	%f987, 0f7FFFFFFF, 0f4B800000, %p182;
	mul.f32 	%f988, %f1365, 0f34000000;
	mul.f32 	%f1366, %f987, %f988;
	bra.uni 	$L__BB0_94;
$L__BB0_84:                             // %__nv_fast_fdividef.exit.i.i.i1696
	div.approx.f32 	%f971, %f1366, %f257;
	cvt.rzi.f32.f32 	%f1364, %f971;
	fma.rn.f32 	%f129, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r54, %f129;
	setp.lt.u32 	%p173, %r54, 1073741824;
	@%p173 bra 	$L__BB0_89;
// %bb.85:
	setp.lt.u32 	%p174, %r54, -2147483647;
	@%p174 bra 	$L__BB0_87;
// %bb.86:
	add.f32 	%f976, %f1364, 0fBF800000;
	setp.lt.f32 	%p177, %f129, 0fC0000000;
	add.f32 	%f977, %f976, 0fBF800000;
	selp.f32 	%f1364, %f977, %f976, %p177;
	bra.uni 	$L__BB0_89;
$L__BB0_87:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p175, %f129, 0f40800000;
	@%p175 bra 	$L__BB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i1700
	add.f32 	%f972, %f1364, 0f3F800000;
	fma.rn.f32 	%f974, %f257, 0fC0400000, %f129;
	setp.ge.f32 	%p176, %f974, 0f00000000;
	add.f32 	%f975, %f972, 0f3F800000;
	selp.f32 	%f1364, %f975, %f972, %p176;
$L__BB0_89:                             // %__internal_fmodf_fastpath_quot.exit.i.i1703
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
$L__BB0_94:                             // %__internal_fmodf_kernel.exit.i1722
	fma.rn.f32 	%f274, %f273, 0fBF000000, %f265;
	fma.rn.f32 	%f308, %f307, 0fBF000000, %f299;
	fma.rn.f32 	%f343, %f342, 0fBF000000, %f334;
	fma.rn.f32 	%f377, %f376, 0fBF000000, %f368;
	fma.rn.f32 	%f412, %f411, 0fBF000000, %f403;
	fma.rn.f32 	%f446, %f445, 0fBF000000, %f437;
	fma.rn.f32 	%f481, %f480, 0fBF000000, %f472;
	fma.rn.f32 	%f515, %f514, 0fBF000000, %f506;
	fma.rn.f32 	%f550, %f549, 0fBF000000, %f541;
	fma.rn.f32 	%f584, %f583, 0fBF000000, %f575;
	fma.rn.f32 	%f619, %f618, 0fBF000000, %f610;
	fma.rn.f32 	%f653, %f652, 0fBF000000, %f644;
	fma.rn.f32 	%f688, %f687, 0fBF000000, %f679;
	fma.rn.f32 	%f722, %f721, 0fBF000000, %f713;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f748;
	fma.rn.f32 	%f791, %f790, 0fBF000000, %f782;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f893, %f892, %f892;
	mul.f32 	%f947, %f946, %f946;
	abs.f32 	%f989, %f1366;
	setp.gtu.f32 	%p183, %f989, 0f7F800000;
	@%p183 bra 	$L__BB0_96;
// %bb.95:
	mov.b32 	%r513, %f126;
	and.b32  	%r514, %r513, -2147483648;
	mov.b32 	%r515, %f1366;
	or.b32  	%r516, %r514, %r515;
	mov.b32 	%f1366, %r516;
$L__BB0_96:                             // %__nv_fmodf.exit1723
	mul.f32 	%f275, %f274, %f274;
	mul.f32 	%f309, %f308, %f308;
	mul.f32 	%f344, %f343, %f343;
	mul.f32 	%f378, %f377, %f377;
	mul.f32 	%f413, %f412, %f412;
	mul.f32 	%f447, %f446, %f446;
	mul.f32 	%f482, %f481, %f481;
	mul.f32 	%f516, %f515, %f515;
	mul.f32 	%f551, %f550, %f550;
	mul.f32 	%f585, %f584, %f584;
	mul.f32 	%f620, %f619, %f619;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f689, %f688, %f688;
	mul.f32 	%f723, %f722, %f722;
	mul.f32 	%f758, %f757, %f757;
	mul.f32 	%f792, %f791, %f791;
	fma.rn.f32 	%f842, %f841, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f843, %f841, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f894, %f893, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f895, %f893, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f948, %f947, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f949, %f947, 0f3E684E12, 0fBFAAD2E0;
	add.f32 	%f990, %f1366, %f1366;
	mov.b32 	%r529, %f990;
	and.b32  	%r530, %r529, -2147483648;
	or.b32  	%r531, %r530, 1056964608;
	mov.b32 	%f991, %r531;
	add.f32 	%f992, %f990, %f991;
	cvt.rzi.f32.f32 	%f993, %f992;
	abs.f32 	%f994, %f990;
	setp.gt.f32 	%p184, %f994, 0f4B000000;
	selp.f32 	%f995, %f990, %f993, %p184;
	cvt.rzi.f32.f32 	%f996, %f990;
	setp.lt.f32 	%p185, %f994, 0f3F000000;
	selp.f32 	%f997, %f996, %f995, %p185;
	fma.rn.f32 	%f998, %f997, 0fBF000000, %f1366;
	mul.f32 	%f999, %f998, %f998;
	fma.rn.f32 	%f1000, %f999, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1001, %f999, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r537, %r190, 2147483646;
	shl.b32 	%r538, %r189, 2;
	sub.s32 	%r539, %r537, %r538;
	mul.lo.s32 	%r540, %r539, %r45;
	shl.b32 	%r66, %r540, 1;
	cvt.rn.f32.s32 	%f143, %r66;
	div.approx.f32 	%f144, %f143, %f289;
	abs.f32 	%f1370, %f144;
	setp.lt.f32 	%p191, %f1370, 0f40000000;
	@%p191 bra 	$L__BB0_108;
// %bb.97:
	setp.gtu.f32 	%p192, %f1370, 0f4B800000;
	@%p192 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_98;
$L__BB0_104:
	mov.b32 	%r68, %f1370;
	and.b32  	%r541, %r68, 8388607;
	or.b32  	%r16368, %r541, 1065353216;
	mov.b32 	%f1369, %r16368;
	add.s32 	%r542, %r68, -1073741824;
	and.b32  	%r16369, %r542, -8388608;
	setp.eq.s32 	%p198, %r16369, 0;
	@%p198 bra 	$L__BB0_107;
// %bb.105:                             // %__nv_fmaf_rn.exit4.i.i.i1748.preheader
	mov.f32 	%f1032, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1031,%f1032;
	// end inline asm
$L__BB0_106:                            // %__nv_fmaf_rn.exit4.i.i.i1748
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r543, %r16369, 192937984;
	add.s32 	%r544, %r16368, %r543;
	mov.b32 	%f1033, %r544;
	mul.f32 	%f1034, %f1031, %f1033;
	sub.f32 	%f1035, %f1033, %f1034;
	fma.rn.f32 	%f1036, %f1035, %f1031, %f1034;
	sub.f32 	%f1037, %f1033, %f1036;
	fma.rz.f32 	%f1038, %f1037, %f1031, %f1036;
	cvt.rzi.f32.f32 	%f1039, %f1038;
	sub.f32 	%f1369, %f1033, %f1039;
	sub.s32 	%r16369, %r16369, %r543;
	mov.b32 	%r16368, %f1369;
	setp.ne.s32 	%p199, %r16369, 0;
	setp.ne.s32 	%p200, %r16368, 0;
	and.pred  	%p201, %p199, %p200;
	@%p201 bra 	$L__BB0_106;
$L__BB0_107:                            // %__internal_fmodf_slowpath_mod.exit.i.i1750
	setp.gt.u32 	%p202, %r68, 2139095039;
	selp.f32 	%f1040, 0f7FFFFFFF, 0f4B800000, %p202;
	mul.f32 	%f1041, %f1369, 0f34000000;
	mul.f32 	%f1370, %f1040, %f1041;
	bra.uni 	$L__BB0_108;
$L__BB0_98:                             // %__nv_fast_fdividef.exit.i.i.i1727
	div.approx.f32 	%f1024, %f1370, %f257;
	cvt.rzi.f32.f32 	%f1368, %f1024;
	fma.rn.f32 	%f147, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r67, %f147;
	setp.lt.u32 	%p193, %r67, 1073741824;
	@%p193 bra 	$L__BB0_103;
// %bb.99:
	setp.lt.u32 	%p194, %r67, -2147483647;
	@%p194 bra 	$L__BB0_101;
// %bb.100:
	add.f32 	%f1029, %f1368, 0fBF800000;
	setp.lt.f32 	%p197, %f147, 0fC0000000;
	add.f32 	%f1030, %f1029, 0fBF800000;
	selp.f32 	%f1368, %f1030, %f1029, %p197;
	bra.uni 	$L__BB0_103;
$L__BB0_101:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p195, %f147, 0f40800000;
	@%p195 bra 	$L__BB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i1731
	add.f32 	%f1025, %f1368, 0f3F800000;
	fma.rn.f32 	%f1027, %f257, 0fC0400000, %f147;
	setp.ge.f32 	%p196, %f1027, 0f00000000;
	add.f32 	%f1028, %f1025, 0f3F800000;
	selp.f32 	%f1368, %f1028, %f1025, %p196;
$L__BB0_103:                            // %__internal_fmodf_fastpath_quot.exit.i.i1734
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
$L__BB0_108:                            // %__internal_fmodf_kernel.exit.i1753
	cvt.rzi.s32.f32 	%r297, %f273;
	fma.rn.f32 	%f276, %f275, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f277, %f275, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r304, %f307;
	fma.rn.f32 	%f310, %f309, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f311, %f309, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r315, %f342;
	fma.rn.f32 	%f345, %f344, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f346, %f344, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r322, %f376;
	fma.rn.f32 	%f379, %f378, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f380, %f378, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r333, %f411;
	fma.rn.f32 	%f414, %f413, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f415, %f413, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r340, %f445;
	fma.rn.f32 	%f448, %f447, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f449, %f447, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r351, %f480;
	fma.rn.f32 	%f483, %f482, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f484, %f482, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r358, %f514;
	fma.rn.f32 	%f517, %f516, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f518, %f516, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r369, %f549;
	fma.rn.f32 	%f552, %f551, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f553, %f551, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r376, %f583;
	fma.rn.f32 	%f586, %f585, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f587, %f585, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r387, %f618;
	fma.rn.f32 	%f621, %f620, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f622, %f620, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r394, %f652;
	fma.rn.f32 	%f655, %f654, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f656, %f654, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r405, %f687;
	fma.rn.f32 	%f690, %f689, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f691, %f689, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r412, %f721;
	fma.rn.f32 	%f724, %f723, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f725, %f723, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r423, %f756;
	fma.rn.f32 	%f759, %f758, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f760, %f758, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r430, %f790;
	fma.rn.f32 	%f793, %f792, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f794, %f792, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r448, %f839;
	fma.rn.f32 	%f844, %f842, %f841, 0fC0A55DF6;
	fma.rn.f32 	%f845, %f843, %f841, 0f4081E0CF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	cvt.rzi.s32.f32 	%r477, %f891;
	fma.rn.f32 	%f896, %f894, %f893, 0fC0A55DF6;
	fma.rn.f32 	%f897, %f895, %f893, 0f4081E0CF;
	fma.rn.f32 	%f898, %f893, %f892, 0f00000000;
	cvt.rzi.s32.f32 	%r500, %f945;
	fma.rn.f32 	%f950, %f948, %f947, 0fC0A55DF6;
	fma.rn.f32 	%f951, %f949, %f947, 0f4081E0CF;
	fma.rn.f32 	%f952, %f947, %f946, 0f00000000;
	cvt.rzi.s32.f32 	%r532, %f997;
	fma.rn.f32 	%f1002, %f1000, %f999, 0fC0A55DF6;
	fma.rn.f32 	%f1003, %f1001, %f999, 0f4081E0CF;
	fma.rn.f32 	%f1004, %f999, %f998, 0f00000000;
	abs.f32 	%f1042, %f1370;
	setp.gtu.f32 	%p203, %f1042, 0f7F800000;
	@%p203 bra 	$L__BB0_110;
// %bb.109:
	mov.b32 	%r545, %f144;
	and.b32  	%r546, %r545, -2147483648;
	mov.b32 	%r547, %f1370;
	or.b32  	%r548, %r546, %r547;
	mov.b32 	%f1370, %r548;
$L__BB0_110:                            // %__nv_fmodf.exit1754
	add.s32 	%r298, %r297, 1;
	fma.rn.f32 	%f278, %f276, %f275, 0fC0A55DF6;
	fma.rn.f32 	%f279, %f277, %f275, 0f4081E0CF;
	fma.rn.f32 	%f280, %f275, %f274, 0f00000000;
	add.s32 	%r305, %r304, 1;
	fma.rn.f32 	%f312, %f310, %f309, 0fC0A55DF6;
	fma.rn.f32 	%f313, %f311, %f309, 0f4081E0CF;
	fma.rn.f32 	%f314, %f309, %f308, 0f00000000;
	add.s32 	%r316, %r315, 1;
	fma.rn.f32 	%f347, %f345, %f344, 0fC0A55DF6;
	fma.rn.f32 	%f348, %f346, %f344, 0f4081E0CF;
	fma.rn.f32 	%f349, %f344, %f343, 0f00000000;
	add.s32 	%r323, %r322, 1;
	fma.rn.f32 	%f381, %f379, %f378, 0fC0A55DF6;
	fma.rn.f32 	%f382, %f380, %f378, 0f4081E0CF;
	fma.rn.f32 	%f383, %f378, %f377, 0f00000000;
	add.s32 	%r334, %r333, 1;
	fma.rn.f32 	%f416, %f414, %f413, 0fC0A55DF6;
	fma.rn.f32 	%f417, %f415, %f413, 0f4081E0CF;
	fma.rn.f32 	%f418, %f413, %f412, 0f00000000;
	add.s32 	%r341, %r340, 1;
	fma.rn.f32 	%f450, %f448, %f447, 0fC0A55DF6;
	fma.rn.f32 	%f451, %f449, %f447, 0f4081E0CF;
	fma.rn.f32 	%f452, %f447, %f446, 0f00000000;
	add.s32 	%r352, %r351, 1;
	fma.rn.f32 	%f485, %f483, %f482, 0fC0A55DF6;
	fma.rn.f32 	%f486, %f484, %f482, 0f4081E0CF;
	fma.rn.f32 	%f487, %f482, %f481, 0f00000000;
	add.s32 	%r359, %r358, 1;
	fma.rn.f32 	%f519, %f517, %f516, 0fC0A55DF6;
	fma.rn.f32 	%f520, %f518, %f516, 0f4081E0CF;
	fma.rn.f32 	%f521, %f516, %f515, 0f00000000;
	add.s32 	%r370, %r369, 1;
	fma.rn.f32 	%f554, %f552, %f551, 0fC0A55DF6;
	fma.rn.f32 	%f555, %f553, %f551, 0f4081E0CF;
	fma.rn.f32 	%f556, %f551, %f550, 0f00000000;
	add.s32 	%r377, %r376, 1;
	fma.rn.f32 	%f588, %f586, %f585, 0fC0A55DF6;
	fma.rn.f32 	%f589, %f587, %f585, 0f4081E0CF;
	fma.rn.f32 	%f590, %f585, %f584, 0f00000000;
	add.s32 	%r388, %r387, 1;
	fma.rn.f32 	%f623, %f621, %f620, 0fC0A55DF6;
	fma.rn.f32 	%f624, %f622, %f620, 0f4081E0CF;
	fma.rn.f32 	%f625, %f620, %f619, 0f00000000;
	add.s32 	%r395, %r394, 1;
	fma.rn.f32 	%f657, %f655, %f654, 0fC0A55DF6;
	fma.rn.f32 	%f658, %f656, %f654, 0f4081E0CF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	add.s32 	%r406, %r405, 1;
	fma.rn.f32 	%f692, %f690, %f689, 0fC0A55DF6;
	fma.rn.f32 	%f693, %f691, %f689, 0f4081E0CF;
	fma.rn.f32 	%f694, %f689, %f688, 0f00000000;
	add.s32 	%r413, %r412, 1;
	fma.rn.f32 	%f726, %f724, %f723, 0fC0A55DF6;
	fma.rn.f32 	%f727, %f725, %f723, 0f4081E0CF;
	fma.rn.f32 	%f728, %f723, %f722, 0f00000000;
	add.s32 	%r424, %r423, 1;
	fma.rn.f32 	%f761, %f759, %f758, 0fC0A55DF6;
	fma.rn.f32 	%f762, %f760, %f758, 0f4081E0CF;
	fma.rn.f32 	%f763, %f758, %f757, 0f00000000;
	add.s32 	%r431, %r430, 1;
	fma.rn.f32 	%f795, %f793, %f792, 0fC0A55DF6;
	fma.rn.f32 	%f796, %f794, %f792, 0f4081E0CF;
	fma.rn.f32 	%f797, %f792, %f791, 0f00000000;
	fma.rn.f32 	%f847, %f845, %f841, 0fC09DE9E6;
	fma.rn.f32 	%f848, %f844, %f846, 0f00000000;
	and.b32  	%r449, %r448, 1;
	fma.rn.f32 	%f899, %f897, %f893, 0fC09DE9E6;
	fma.rn.f32 	%f900, %f896, %f898, 0f00000000;
	and.b32  	%r478, %r477, 1;
	fma.rn.f32 	%f953, %f951, %f947, 0fC09DE9E6;
	fma.rn.f32 	%f954, %f950, %f952, 0f00000000;
	and.b32  	%r501, %r500, 1;
	fma.rn.f32 	%f1005, %f1003, %f999, 0fC09DE9E6;
	fma.rn.f32 	%f1006, %f1002, %f1004, 0f00000000;
	and.b32  	%r533, %r532, 1;
	add.f32 	%f1043, %f1370, %f1370;
	mov.b32 	%r549, %f1043;
	and.b32  	%r550, %r549, -2147483648;
	or.b32  	%r551, %r550, 1056964608;
	mov.b32 	%f1044, %r551;
	add.f32 	%f1045, %f1043, %f1044;
	cvt.rzi.f32.f32 	%f1046, %f1045;
	abs.f32 	%f1047, %f1043;
	setp.gt.f32 	%p204, %f1047, 0f4B000000;
	selp.f32 	%f1048, %f1043, %f1046, %p204;
	cvt.rzi.f32.f32 	%f1049, %f1043;
	setp.lt.f32 	%p205, %f1047, 0f3F000000;
	selp.f32 	%f1050, %f1049, %f1048, %p205;
	cvt.rzi.s32.f32 	%r552, %f1050;
	fma.rn.f32 	%f1051, %f1050, 0fBF000000, %f1370;
	mul.f32 	%f1052, %f1051, %f1051;
	fma.rn.f32 	%f1053, %f1052, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1054, %f1052, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1055, %f1053, %f1052, 0fC0A55DF6;
	fma.rn.f32 	%f1056, %f1054, %f1052, 0f4081E0CF;
	fma.rn.f32 	%f1057, %f1052, %f1051, 0f00000000;
	shl.b32 	%r557, %r45, 4;
	sub.s32 	%r558, %r66, %r557;
	cvt.rn.f32.s32 	%f163, %r558;
	div.approx.f32 	%f164, %f163, %f289;
	abs.f32 	%f1374, %f164;
	setp.lt.f32 	%p211, %f1374, 0f40000000;
	@%p211 bra 	$L__BB0_122;
// %bb.111:
	setp.gtu.f32 	%p212, %f1374, 0f4B800000;
	@%p212 bra 	$L__BB0_118;
	bra.uni 	$L__BB0_112;
$L__BB0_118:
	mov.b32 	%r76, %f1374;
	and.b32  	%r559, %r76, 8388607;
	or.b32  	%r16370, %r559, 1065353216;
	mov.b32 	%f1373, %r16370;
	add.s32 	%r560, %r76, -1073741824;
	and.b32  	%r16371, %r560, -8388608;
	setp.eq.s32 	%p218, %r16371, 0;
	@%p218 bra 	$L__BB0_121;
// %bb.119:                             // %__nv_fmaf_rn.exit4.i.i.i1779.preheader
	mov.f32 	%f1083, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1082,%f1083;
	// end inline asm
$L__BB0_120:                            // %__nv_fmaf_rn.exit4.i.i.i1779
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r561, %r16371, 192937984;
	add.s32 	%r562, %r16370, %r561;
	mov.b32 	%f1084, %r562;
	mul.f32 	%f1085, %f1082, %f1084;
	sub.f32 	%f1086, %f1084, %f1085;
	fma.rn.f32 	%f1087, %f1086, %f1082, %f1085;
	sub.f32 	%f1088, %f1084, %f1087;
	fma.rz.f32 	%f1089, %f1088, %f1082, %f1087;
	cvt.rzi.f32.f32 	%f1090, %f1089;
	sub.f32 	%f1373, %f1084, %f1090;
	sub.s32 	%r16371, %r16371, %r561;
	mov.b32 	%r16370, %f1373;
	setp.ne.s32 	%p219, %r16371, 0;
	setp.ne.s32 	%p220, %r16370, 0;
	and.pred  	%p221, %p219, %p220;
	@%p221 bra 	$L__BB0_120;
$L__BB0_121:                            // %__internal_fmodf_slowpath_mod.exit.i.i1781
	setp.gt.u32 	%p222, %r76, 2139095039;
	selp.f32 	%f1091, 0f7FFFFFFF, 0f4B800000, %p222;
	mul.f32 	%f1092, %f1373, 0f34000000;
	mul.f32 	%f1374, %f1091, %f1092;
	bra.uni 	$L__BB0_122;
$L__BB0_112:                            // %__nv_fast_fdividef.exit.i.i.i1758
	div.approx.f32 	%f1075, %f1374, %f257;
	cvt.rzi.f32.f32 	%f1372, %f1075;
	fma.rn.f32 	%f167, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r75, %f167;
	setp.lt.u32 	%p213, %r75, 1073741824;
	@%p213 bra 	$L__BB0_117;
// %bb.113:
	setp.lt.u32 	%p214, %r75, -2147483647;
	@%p214 bra 	$L__BB0_115;
// %bb.114:
	add.f32 	%f1080, %f1372, 0fBF800000;
	setp.lt.f32 	%p217, %f167, 0fC0000000;
	add.f32 	%f1081, %f1080, 0fBF800000;
	selp.f32 	%f1372, %f1081, %f1080, %p217;
	bra.uni 	$L__BB0_117;
$L__BB0_115:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p215, %f167, 0f40800000;
	@%p215 bra 	$L__BB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i1762
	add.f32 	%f1076, %f1372, 0f3F800000;
	fma.rn.f32 	%f1078, %f257, 0fC0400000, %f167;
	setp.ge.f32 	%p216, %f1078, 0f00000000;
	add.f32 	%f1079, %f1076, 0f3F800000;
	selp.f32 	%f1372, %f1079, %f1076, %p216;
$L__BB0_117:                            // %__internal_fmodf_fastpath_quot.exit.i.i1765
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
$L__BB0_122:                            // %__internal_fmodf_kernel.exit.i1784
	fma.rn.f32 	%f281, %f279, %f275, 0fC09DE9E6;
	fma.rn.f32 	%f282, %f278, %f280, 0f00000000;
	and.b32  	%r299, %r298, 1;
	fma.rn.f32 	%f315, %f313, %f309, 0fC09DE9E6;
	fma.rn.f32 	%f316, %f312, %f314, 0f00000000;
	and.b32  	%r306, %r305, 1;
	fma.rn.f32 	%f350, %f348, %f344, 0fC09DE9E6;
	fma.rn.f32 	%f351, %f347, %f349, 0f00000000;
	and.b32  	%r317, %r316, 1;
	fma.rn.f32 	%f384, %f382, %f378, 0fC09DE9E6;
	fma.rn.f32 	%f385, %f381, %f383, 0f00000000;
	and.b32  	%r324, %r323, 1;
	fma.rn.f32 	%f419, %f417, %f413, 0fC09DE9E6;
	fma.rn.f32 	%f420, %f416, %f418, 0f00000000;
	and.b32  	%r335, %r334, 1;
	fma.rn.f32 	%f453, %f451, %f447, 0fC09DE9E6;
	fma.rn.f32 	%f454, %f450, %f452, 0f00000000;
	and.b32  	%r342, %r341, 1;
	fma.rn.f32 	%f488, %f486, %f482, 0fC09DE9E6;
	fma.rn.f32 	%f489, %f485, %f487, 0f00000000;
	and.b32  	%r353, %r352, 1;
	fma.rn.f32 	%f522, %f520, %f516, 0fC09DE9E6;
	fma.rn.f32 	%f523, %f519, %f521, 0f00000000;
	and.b32  	%r360, %r359, 1;
	fma.rn.f32 	%f557, %f555, %f551, 0fC09DE9E6;
	fma.rn.f32 	%f558, %f554, %f556, 0f00000000;
	and.b32  	%r371, %r370, 1;
	fma.rn.f32 	%f591, %f589, %f585, 0fC09DE9E6;
	fma.rn.f32 	%f592, %f588, %f590, 0f00000000;
	and.b32  	%r378, %r377, 1;
	fma.rn.f32 	%f626, %f624, %f620, 0fC09DE9E6;
	fma.rn.f32 	%f627, %f623, %f625, 0f00000000;
	and.b32  	%r389, %r388, 1;
	fma.rn.f32 	%f660, %f658, %f654, 0fC09DE9E6;
	fma.rn.f32 	%f661, %f657, %f659, 0f00000000;
	and.b32  	%r396, %r395, 1;
	fma.rn.f32 	%f695, %f693, %f689, 0fC09DE9E6;
	fma.rn.f32 	%f696, %f692, %f694, 0f00000000;
	and.b32  	%r407, %r406, 1;
	fma.rn.f32 	%f729, %f727, %f723, 0fC09DE9E6;
	fma.rn.f32 	%f730, %f726, %f728, 0f00000000;
	and.b32  	%r414, %r413, 1;
	fma.rn.f32 	%f764, %f762, %f758, 0fC09DE9E6;
	fma.rn.f32 	%f765, %f761, %f763, 0f00000000;
	and.b32  	%r425, %r424, 1;
	fma.rn.f32 	%f798, %f796, %f792, 0fC09DE9E6;
	fma.rn.f32 	%f799, %f795, %f797, 0f00000000;
	and.b32  	%r432, %r431, 1;
	fma.rn.f32 	%f849, %f847, %f841, 0f3F800000;
	fma.rn.f32 	%f850, %f840, 0f40490FDB, %f848;
	setp.eq.b32 	%p126, %r449, 1;
	fma.rn.f32 	%f901, %f899, %f893, 0f3F800000;
	fma.rn.f32 	%f902, %f892, 0f40490FDB, %f900;
	setp.eq.b32 	%p146, %r478, 1;
	fma.rn.f32 	%f955, %f953, %f947, 0f3F800000;
	fma.rn.f32 	%f956, %f946, 0f40490FDB, %f954;
	setp.eq.b32 	%p166, %r501, 1;
	fma.rn.f32 	%f1007, %f1005, %f999, 0f3F800000;
	fma.rn.f32 	%f1008, %f998, 0f40490FDB, %f1006;
	setp.eq.b32 	%p186, %r533, 1;
	fma.rn.f32 	%f1058, %f1056, %f1052, 0fC09DE9E6;
	fma.rn.f32 	%f1059, %f1055, %f1057, 0f00000000;
	and.b32  	%r553, %r552, 1;
	abs.f32 	%f1093, %f1374;
	setp.gtu.f32 	%p223, %f1093, 0f7F800000;
	@%p223 bra 	$L__BB0_124;
// %bb.123:
	mov.b32 	%r563, %f164;
	and.b32  	%r564, %r563, -2147483648;
	mov.b32 	%r565, %f1374;
	or.b32  	%r566, %r564, %r565;
	mov.b32 	%f1374, %r566;
$L__BB0_124:                            // %__nv_fmodf.exit1785
	and.b32  	%r180, %r179, 8;
	shl.b32 	%r280, %r4, 4;
	and.b32  	%r185, %r1, 18;
	fma.rn.f32 	%f283, %f281, %f275, 0f3F800000;
	fma.rn.f32 	%f284, %f274, 0f40490FDB, %f282;
	setp.eq.b32 	%p18, %r299, 1;
	fma.rn.f32 	%f317, %f315, %f309, 0f3F800000;
	fma.rn.f32 	%f318, %f308, 0f40490FDB, %f316;
	setp.eq.b32 	%p24, %r306, 1;
	fma.rn.f32 	%f352, %f350, %f344, 0f3F800000;
	fma.rn.f32 	%f353, %f343, 0f40490FDB, %f351;
	setp.eq.b32 	%p30, %r317, 1;
	fma.rn.f32 	%f386, %f384, %f378, 0f3F800000;
	fma.rn.f32 	%f387, %f377, 0f40490FDB, %f385;
	setp.eq.b32 	%p36, %r324, 1;
	fma.rn.f32 	%f421, %f419, %f413, 0f3F800000;
	fma.rn.f32 	%f422, %f412, 0f40490FDB, %f420;
	setp.eq.b32 	%p42, %r335, 1;
	fma.rn.f32 	%f455, %f453, %f447, 0f3F800000;
	fma.rn.f32 	%f456, %f446, 0f40490FDB, %f454;
	setp.eq.b32 	%p48, %r342, 1;
	fma.rn.f32 	%f490, %f488, %f482, 0f3F800000;
	fma.rn.f32 	%f491, %f481, 0f40490FDB, %f489;
	setp.eq.b32 	%p54, %r353, 1;
	fma.rn.f32 	%f524, %f522, %f516, 0f3F800000;
	fma.rn.f32 	%f525, %f515, 0f40490FDB, %f523;
	setp.eq.b32 	%p60, %r360, 1;
	fma.rn.f32 	%f559, %f557, %f551, 0f3F800000;
	fma.rn.f32 	%f560, %f550, 0f40490FDB, %f558;
	setp.eq.b32 	%p66, %r371, 1;
	fma.rn.f32 	%f593, %f591, %f585, 0f3F800000;
	fma.rn.f32 	%f594, %f584, 0f40490FDB, %f592;
	setp.eq.b32 	%p72, %r378, 1;
	fma.rn.f32 	%f628, %f626, %f620, 0f3F800000;
	fma.rn.f32 	%f629, %f619, 0f40490FDB, %f627;
	setp.eq.b32 	%p78, %r389, 1;
	fma.rn.f32 	%f662, %f660, %f654, 0f3F800000;
	fma.rn.f32 	%f663, %f653, 0f40490FDB, %f661;
	setp.eq.b32 	%p84, %r396, 1;
	fma.rn.f32 	%f697, %f695, %f689, 0f3F800000;
	fma.rn.f32 	%f698, %f688, 0f40490FDB, %f696;
	setp.eq.b32 	%p90, %r407, 1;
	fma.rn.f32 	%f731, %f729, %f723, 0f3F800000;
	fma.rn.f32 	%f732, %f722, 0f40490FDB, %f730;
	setp.eq.b32 	%p96, %r414, 1;
	fma.rn.f32 	%f766, %f764, %f758, 0f3F800000;
	fma.rn.f32 	%f767, %f757, 0f40490FDB, %f765;
	setp.eq.b32 	%p102, %r425, 1;
	fma.rn.f32 	%f800, %f798, %f792, 0f3F800000;
	fma.rn.f32 	%f801, %f791, 0f40490FDB, %f799;
	setp.eq.b32 	%p108, %r432, 1;
	selp.f32 	%f851, %f849, %f850, %p126;
	and.b32  	%r450, %r448, 2;
	selp.f32 	%f903, %f901, %f902, %p146;
	and.b32  	%r479, %r477, 2;
	selp.f32 	%f957, %f955, %f956, %p166;
	and.b32  	%r502, %r500, 2;
	selp.f32 	%f1009, %f1007, %f1008, %p186;
	and.b32  	%r534, %r532, 2;
	fma.rn.f32 	%f1060, %f1058, %f1052, 0f3F800000;
	fma.rn.f32 	%f1061, %f1051, 0f40490FDB, %f1059;
	setp.eq.b32 	%p206, %r553, 1;
	add.f32 	%f1094, %f1374, %f1374;
	mov.b32 	%r573, %f1094;
	and.b32  	%r574, %r573, -2147483648;
	or.b32  	%r575, %r574, 1056964608;
	mov.b32 	%f1095, %r575;
	add.f32 	%f1096, %f1094, %f1095;
	cvt.rzi.f32.f32 	%f1097, %f1096;
	abs.f32 	%f1098, %f1094;
	setp.gt.f32 	%p224, %f1098, 0f4B000000;
	selp.f32 	%f1099, %f1094, %f1097, %p224;
	cvt.rzi.f32.f32 	%f1100, %f1094;
	setp.lt.f32 	%p225, %f1098, 0f3F000000;
	selp.f32 	%f1101, %f1100, %f1099, %p225;
	cvt.rzi.s32.f32 	%r576, %f1101;
	fma.rn.f32 	%f1102, %f1101, 0fBF000000, %f1374;
	mul.f32 	%f1103, %f1102, %f1102;
	fma.rn.f32 	%f1104, %f1103, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1105, %f1103, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1106, %f1104, %f1103, 0fC0A55DF6;
	fma.rn.f32 	%f1107, %f1105, %f1103, 0f4081E0CF;
	fma.rn.f32 	%f1108, %f1103, %f1102, 0f00000000;
	fma.rn.f32 	%f1109, %f1107, %f1103, 0fC09DE9E6;
	fma.rn.f32 	%f1110, %f1106, %f1108, 0f00000000;
	fma.rn.f32 	%f1111, %f1109, %f1103, 0f3F800000;
	fma.rn.f32 	%f1112, %f1102, 0f40490FDB, %f1110;
	and.b32  	%r577, %r576, 1;
	setp.eq.b32 	%p226, %r577, 1;
	mov.f32 	%f1126, 0f41800000;
	div.approx.f32 	%f181, %f143, %f1126;
	abs.f32 	%f1378, %f181;
	setp.lt.f32 	%p231, %f1378, 0f40000000;
	@%p231 bra 	$L__BB0_136;
// %bb.125:
	setp.gtu.f32 	%p232, %f1378, 0f4B800000;
	@%p232 bra 	$L__BB0_132;
	bra.uni 	$L__BB0_126;
$L__BB0_132:
	mov.b32 	%r86, %f1378;
	and.b32  	%r581, %r86, 8388607;
	or.b32  	%r16372, %r581, 1065353216;
	mov.b32 	%f1377, %r16372;
	add.s32 	%r582, %r86, -1073741824;
	and.b32  	%r16373, %r582, -8388608;
	setp.eq.s32 	%p238, %r16373, 0;
	@%p238 bra 	$L__BB0_135;
// %bb.133:                             // %__nv_fmaf_rn.exit4.i.i.i1810.preheader
	mov.f32 	%f1136, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1135,%f1136;
	// end inline asm
$L__BB0_134:                            // %__nv_fmaf_rn.exit4.i.i.i1810
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r583, %r16373, 192937984;
	add.s32 	%r584, %r16372, %r583;
	mov.b32 	%f1137, %r584;
	mul.f32 	%f1138, %f1135, %f1137;
	sub.f32 	%f1139, %f1137, %f1138;
	fma.rn.f32 	%f1140, %f1139, %f1135, %f1138;
	sub.f32 	%f1141, %f1137, %f1140;
	fma.rz.f32 	%f1142, %f1141, %f1135, %f1140;
	cvt.rzi.f32.f32 	%f1143, %f1142;
	sub.f32 	%f1377, %f1137, %f1143;
	sub.s32 	%r16373, %r16373, %r583;
	mov.b32 	%r16372, %f1377;
	setp.ne.s32 	%p239, %r16373, 0;
	setp.ne.s32 	%p240, %r16372, 0;
	and.pred  	%p241, %p239, %p240;
	@%p241 bra 	$L__BB0_134;
$L__BB0_135:                            // %__internal_fmodf_slowpath_mod.exit.i.i1812
	setp.gt.u32 	%p242, %r86, 2139095039;
	selp.f32 	%f1144, 0f7FFFFFFF, 0f4B800000, %p242;
	mul.f32 	%f1145, %f1377, 0f34000000;
	mul.f32 	%f1378, %f1144, %f1145;
	bra.uni 	$L__BB0_136;
$L__BB0_126:                            // %__nv_fast_fdividef.exit.i.i.i1789
	div.approx.f32 	%f1128, %f1378, %f257;
	cvt.rzi.f32.f32 	%f1376, %f1128;
	fma.rn.f32 	%f184, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r85, %f184;
	setp.lt.u32 	%p233, %r85, 1073741824;
	@%p233 bra 	$L__BB0_131;
// %bb.127:
	setp.lt.u32 	%p234, %r85, -2147483647;
	@%p234 bra 	$L__BB0_129;
// %bb.128:
	add.f32 	%f1133, %f1376, 0fBF800000;
	setp.lt.f32 	%p237, %f184, 0fC0000000;
	add.f32 	%f1134, %f1133, 0fBF800000;
	selp.f32 	%f1376, %f1134, %f1133, %p237;
	bra.uni 	$L__BB0_131;
$L__BB0_129:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p235, %f184, 0f40800000;
	@%p235 bra 	$L__BB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i1793
	add.f32 	%f1129, %f1376, 0f3F800000;
	fma.rn.f32 	%f1131, %f257, 0fC0400000, %f184;
	setp.ge.f32 	%p236, %f1131, 0f00000000;
	add.f32 	%f1132, %f1129, 0f3F800000;
	selp.f32 	%f1376, %f1132, %f1129, %p236;
$L__BB0_131:                            // %__internal_fmodf_fastpath_quot.exit.i.i1796
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
$L__BB0_136:                            // %__internal_fmodf_kernel.exit.i1815
	and.b32  	%r181, %r280, 1920;
	shl.b32 	%r182, %r1, 2;
	or.b32  	%r281, %r185, %r180;
	selp.f32 	%f285, %f283, %f284, %p18;
	and.b32  	%r300, %r298, 2;
	mov.f32 	%f286, 0f00000000;
	selp.f32 	%f319, %f317, %f318, %p24;
	and.b32  	%r307, %r305, 2;
	selp.f32 	%f354, %f352, %f353, %p30;
	and.b32  	%r318, %r316, 2;
	selp.f32 	%f388, %f386, %f387, %p36;
	and.b32  	%r325, %r323, 2;
	selp.f32 	%f423, %f421, %f422, %p42;
	and.b32  	%r336, %r334, 2;
	selp.f32 	%f457, %f455, %f456, %p48;
	and.b32  	%r343, %r341, 2;
	selp.f32 	%f492, %f490, %f491, %p54;
	and.b32  	%r354, %r352, 2;
	selp.f32 	%f526, %f524, %f525, %p60;
	and.b32  	%r361, %r359, 2;
	selp.f32 	%f561, %f559, %f560, %p66;
	and.b32  	%r372, %r370, 2;
	selp.f32 	%f595, %f593, %f594, %p72;
	and.b32  	%r379, %r377, 2;
	selp.f32 	%f630, %f628, %f629, %p78;
	and.b32  	%r390, %r388, 2;
	selp.f32 	%f664, %f662, %f663, %p84;
	and.b32  	%r397, %r395, 2;
	selp.f32 	%f699, %f697, %f698, %p90;
	and.b32  	%r408, %r406, 2;
	selp.f32 	%f733, %f731, %f732, %p96;
	and.b32  	%r415, %r413, 2;
	selp.f32 	%f768, %f766, %f767, %p102;
	and.b32  	%r426, %r424, 2;
	selp.f32 	%f802, %f800, %f801, %p108;
	and.b32  	%r433, %r431, 2;
	setp.eq.s32 	%p127, %r450, 0;
	neg.f32 	%f853, %f851;
	add.s32 	%r451, %r448, 1;
	cvt.rzi.f32.f32 	%f858, %f1354;
	setp.eq.s32 	%p147, %r479, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r480, %r477, 1;
	cvt.rzi.f32.f32 	%f910, %f1358;
	setp.eq.s32 	%p167, %r502, 0;
	neg.f32 	%f959, %f957;
	add.s32 	%r503, %r500, 1;
	cvt.rzi.f32.f32 	%f964, %f1362;
	setp.eq.s32 	%p187, %r534, 0;
	neg.f32 	%f1011, %f1009;
	add.s32 	%r535, %r532, 1;
	cvt.rzi.f32.f32 	%f1016, %f1366;
	selp.f32 	%f1062, %f1060, %f1061, %p206;
	and.b32  	%r554, %r552, 2;
	selp.f32 	%f1113, %f1111, %f1112, %p226;
	and.b32  	%r578, %r576, 2;
	abs.f32 	%f1146, %f1378;
	setp.gtu.f32 	%p243, %f1146, 0f7F800000;
	@%p243 bra 	$L__BB0_138;
// %bb.137:
	mov.b32 	%r585, %f181;
	and.b32  	%r586, %r585, -2147483648;
	mov.b32 	%r587, %f1378;
	or.b32  	%r588, %r586, %r587;
	mov.b32 	%f1378, %r588;
$L__BB0_138:                            // %__nv_fmodf.exit1816
	and.b32  	%r183, %r182, 32;
	or.b32  	%r282, %r281, %r181;
	setp.eq.s32 	%p19, %r300, 0;
	sub.f32 	%f287, %f286, %f285;
	setp.eq.s32 	%p25, %r307, 0;
	sub.f32 	%f321, %f286, %f319;
	setp.eq.s32 	%p31, %r318, 0;
	sub.f32 	%f356, %f286, %f354;
	setp.eq.s32 	%p37, %r325, 0;
	sub.f32 	%f390, %f286, %f388;
	setp.eq.s32 	%p43, %r336, 0;
	sub.f32 	%f425, %f286, %f423;
	setp.eq.s32 	%p49, %r343, 0;
	sub.f32 	%f459, %f286, %f457;
	setp.eq.s32 	%p55, %r354, 0;
	sub.f32 	%f494, %f286, %f492;
	setp.eq.s32 	%p61, %r361, 0;
	sub.f32 	%f528, %f286, %f526;
	setp.eq.s32 	%p67, %r372, 0;
	sub.f32 	%f563, %f286, %f561;
	setp.eq.s32 	%p73, %r379, 0;
	sub.f32 	%f597, %f286, %f595;
	setp.eq.s32 	%p79, %r390, 0;
	sub.f32 	%f632, %f286, %f630;
	setp.eq.s32 	%p85, %r397, 0;
	sub.f32 	%f666, %f286, %f664;
	setp.eq.s32 	%p91, %r408, 0;
	sub.f32 	%f701, %f286, %f699;
	setp.eq.s32 	%p97, %r415, 0;
	sub.f32 	%f735, %f286, %f733;
	setp.eq.s32 	%p103, %r426, 0;
	sub.f32 	%f770, %f286, %f768;
	setp.eq.s32 	%p109, %r433, 0;
	sub.f32 	%f804, %f286, %f802;
	selp.f32 	%f852, %f850, %f849, %p126;
	selp.f32 	%f854, %f851, %f853, %p127;
	and.b32  	%r452, %r451, 2;
	setp.eq.f32 	%p129, %f858, %f1354;
	mul.f32 	%f859, %f1354, 0f00000000;
	selp.f32 	%f904, %f902, %f901, %p146;
	selp.f32 	%f906, %f903, %f905, %p147;
	and.b32  	%r481, %r480, 2;
	setp.eq.f32 	%p149, %f910, %f1358;
	mul.f32 	%f911, %f1358, 0f00000000;
	selp.f32 	%f958, %f956, %f955, %p166;
	selp.f32 	%f960, %f957, %f959, %p167;
	and.b32  	%r504, %r503, 2;
	setp.eq.f32 	%p169, %f964, %f1362;
	mul.f32 	%f965, %f1362, 0f00000000;
	selp.f32 	%f1010, %f1008, %f1007, %p186;
	selp.f32 	%f1012, %f1009, %f1011, %p187;
	and.b32  	%r536, %r535, 2;
	setp.eq.f32 	%p189, %f1016, %f1366;
	mul.f32 	%f1017, %f1366, 0f00000000;
	setp.eq.s32 	%p207, %r554, 0;
	neg.f32 	%f1064, %f1062;
	add.s32 	%r555, %r552, 1;
	cvt.rzi.f32.f32 	%f1069, %f1370;
	setp.eq.s32 	%p227, %r578, 0;
	neg.f32 	%f1115, %f1113;
	add.s32 	%r579, %r576, 1;
	cvt.rzi.f32.f32 	%f1120, %f1374;
	add.f32 	%f1147, %f1378, %f1378;
	mov.b32 	%r589, %f1147;
	and.b32  	%r590, %r589, -2147483648;
	or.b32  	%r591, %r590, 1056964608;
	mov.b32 	%f1148, %r591;
	add.f32 	%f1149, %f1147, %f1148;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	abs.f32 	%f1151, %f1147;
	setp.gt.f32 	%p244, %f1151, 0f4B000000;
	selp.f32 	%f1152, %f1147, %f1150, %p244;
	cvt.rzi.f32.f32 	%f1153, %f1147;
	setp.lt.f32 	%p245, %f1151, 0f3F000000;
	selp.f32 	%f1154, %f1153, %f1152, %p245;
	cvt.rzi.s32.f32 	%r592, %f1154;
	fma.rn.f32 	%f1155, %f1154, 0fBF000000, %f1378;
	mul.f32 	%f1156, %f1155, %f1155;
	fma.rn.f32 	%f1157, %f1156, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1158, %f1156, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1159, %f1157, %f1156, 0fC0A55DF6;
	fma.rn.f32 	%f1160, %f1158, %f1156, 0f4081E0CF;
	fma.rn.f32 	%f1161, %f1156, %f1155, 0f00000000;
	fma.rn.f32 	%f1162, %f1160, %f1156, 0fC09DE9E6;
	fma.rn.f32 	%f1163, %f1159, %f1161, 0f00000000;
	fma.rn.f32 	%f1164, %f1162, %f1156, 0f3F800000;
	fma.rn.f32 	%f1165, %f1155, 0f40490FDB, %f1163;
	and.b32  	%r593, %r592, 1;
	setp.eq.b32 	%p246, %r593, 1;
	selp.f32 	%f1166, %f1164, %f1165, %p246;
	selp.f32 	%f1167, %f1165, %f1164, %p246;
	and.b32  	%r594, %r592, 2;
	setp.eq.s32 	%p247, %r594, 0;
	neg.f32 	%f1168, %f1166;
	selp.f32 	%f1169, %f1166, %f1168, %p247;
	add.s32 	%r595, %r592, 1;
	and.b32  	%r596, %r595, 2;
	cvt.rzi.f32.f32 	%f1173, %f1378;
	setp.eq.f32 	%p249, %f1173, %f1378;
	mul.f32 	%f1174, %f1378, 0f00000000;
	div.approx.f32 	%f200, %f163, %f1126;
	abs.f32 	%f1382, %f200;
	setp.lt.f32 	%p251, %f1382, 0f40000000;
	@%p251 bra 	$L__BB0_150;
// %bb.139:
	setp.gtu.f32 	%p252, %f1382, 0f4B800000;
	@%p252 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_140;
$L__BB0_146:
	mov.b32 	%r94, %f1382;
	and.b32  	%r597, %r94, 8388607;
	or.b32  	%r16374, %r597, 1065353216;
	mov.b32 	%f1381, %r16374;
	add.s32 	%r598, %r94, -1073741824;
	and.b32  	%r16375, %r598, -8388608;
	setp.eq.s32 	%p258, %r16375, 0;
	@%p258 bra 	$L__BB0_149;
// %bb.147:                             // %__nv_fmaf_rn.exit4.i.i.i1841.preheader
	mov.f32 	%f1187, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1186,%f1187;
	// end inline asm
$L__BB0_148:                            // %__nv_fmaf_rn.exit4.i.i.i1841
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r599, %r16375, 192937984;
	add.s32 	%r600, %r16374, %r599;
	mov.b32 	%f1188, %r600;
	mul.f32 	%f1189, %f1186, %f1188;
	sub.f32 	%f1190, %f1188, %f1189;
	fma.rn.f32 	%f1191, %f1190, %f1186, %f1189;
	sub.f32 	%f1192, %f1188, %f1191;
	fma.rz.f32 	%f1193, %f1192, %f1186, %f1191;
	cvt.rzi.f32.f32 	%f1194, %f1193;
	sub.f32 	%f1381, %f1188, %f1194;
	sub.s32 	%r16375, %r16375, %r599;
	mov.b32 	%r16374, %f1381;
	setp.ne.s32 	%p259, %r16375, 0;
	setp.ne.s32 	%p260, %r16374, 0;
	and.pred  	%p261, %p259, %p260;
	@%p261 bra 	$L__BB0_148;
$L__BB0_149:                            // %__internal_fmodf_slowpath_mod.exit.i.i1843
	setp.gt.u32 	%p262, %r94, 2139095039;
	selp.f32 	%f1195, 0f7FFFFFFF, 0f4B800000, %p262;
	mul.f32 	%f1196, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1195, %f1196;
	bra.uni 	$L__BB0_150;
$L__BB0_140:                            // %__nv_fast_fdividef.exit.i.i.i1820
	div.approx.f32 	%f1179, %f1382, %f257;
	cvt.rzi.f32.f32 	%f1380, %f1179;
	fma.rn.f32 	%f203, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r93, %f203;
	setp.lt.u32 	%p253, %r93, 1073741824;
	@%p253 bra 	$L__BB0_145;
// %bb.141:
	setp.lt.u32 	%p254, %r93, -2147483647;
	@%p254 bra 	$L__BB0_143;
// %bb.142:
	add.f32 	%f1184, %f1380, 0fBF800000;
	setp.lt.f32 	%p257, %f203, 0fC0000000;
	add.f32 	%f1185, %f1184, 0fBF800000;
	selp.f32 	%f1380, %f1185, %f1184, %p257;
	bra.uni 	$L__BB0_145;
$L__BB0_143:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p255, %f203, 0f40800000;
	@%p255 bra 	$L__BB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i1824
	add.f32 	%f1180, %f1380, 0f3F800000;
	fma.rn.f32 	%f1182, %f257, 0fC0400000, %f203;
	setp.ge.f32 	%p256, %f1182, 0f00000000;
	add.f32 	%f1183, %f1180, 0f3F800000;
	selp.f32 	%f1380, %f1183, %f1180, %p256;
$L__BB0_145:                            // %__internal_fmodf_fastpath_quot.exit.i.i1827
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
$L__BB0_150:                            // %__internal_fmodf_kernel.exit.i1846
	and.b32  	%r184, %r182, 4;
	or.b32  	%r283, %r282, %r183;
	selp.f32 	%f288, %f285, %f287, %p19;
	selp.f32 	%f322, %f319, %f321, %p25;
	selp.f32 	%f357, %f354, %f356, %p31;
	selp.f32 	%f391, %f388, %f390, %p37;
	selp.f32 	%f426, %f423, %f425, %p43;
	selp.f32 	%f460, %f457, %f459, %p49;
	selp.f32 	%f495, %f492, %f494, %p55;
	selp.f32 	%f529, %f526, %f528, %p61;
	selp.f32 	%f564, %f561, %f563, %p67;
	selp.f32 	%f598, %f595, %f597, %p73;
	selp.f32 	%f633, %f630, %f632, %p79;
	selp.f32 	%f667, %f664, %f666, %p85;
	selp.f32 	%f702, %f699, %f701, %p91;
	selp.f32 	%f736, %f733, %f735, %p97;
	selp.f32 	%f771, %f768, %f770, %p103;
	selp.f32 	%f805, %f802, %f804, %p109;
	setp.eq.s32 	%p128, %r452, 0;
	sub.f32 	%f856, %f286, %f852;
	selp.f32 	%f88, %f859, %f854, %p129;
	abs.f32 	%f860, %f1354;
	setp.eq.s32 	%p148, %r481, 0;
	sub.f32 	%f908, %f286, %f904;
	selp.f32 	%f912, %f911, %f906, %p149;
	abs.f32 	%f913, %f1358;
	setp.eq.s32 	%p168, %r504, 0;
	sub.f32 	%f962, %f286, %f958;
	selp.f32 	%f124, %f965, %f960, %p169;
	abs.f32 	%f966, %f1362;
	setp.eq.s32 	%p188, %r536, 0;
	sub.f32 	%f1014, %f286, %f1010;
	selp.f32 	%f1018, %f1017, %f1012, %p189;
	abs.f32 	%f1019, %f1366;
	selp.f32 	%f1063, %f1061, %f1060, %p206;
	selp.f32 	%f1065, %f1062, %f1064, %p207;
	and.b32  	%r556, %r555, 2;
	setp.eq.f32 	%p209, %f1069, %f1370;
	mul.f32 	%f1070, %f1370, 0f00000000;
	selp.f32 	%f1114, %f1112, %f1111, %p226;
	selp.f32 	%f1116, %f1113, %f1115, %p227;
	and.b32  	%r580, %r579, 2;
	setp.eq.f32 	%p229, %f1120, %f1374;
	mul.f32 	%f1121, %f1374, 0f00000000;
	setp.eq.s32 	%p248, %r596, 0;
	sub.f32 	%f1171, %f286, %f1167;
	selp.f32 	%f198, %f1174, %f1169, %p249;
	abs.f32 	%f1175, %f1378;
	and.b32  	%r178, %r1, 16;
	abs.f32 	%f1197, %f1382;
	setp.gtu.f32 	%p263, %f1197, 0f7F800000;
	@%p263 bra 	$L__BB0_152;
// %bb.151:
	mov.b32 	%r601, %f200;
	and.b32  	%r602, %r601, -2147483648;
	mov.b32 	%r603, %f1382;
	or.b32  	%r604, %r602, %r603;
	mov.b32 	%f1382, %r604;
$L__BB0_152:                            // %__nv_fmodf.exit1847
	or.b32  	%r284, %r283, %r184;
	mul.f32 	%f254, %f288, %f288;
	mul.f32 	%f4, %f322, %f322;
	mul.f32 	%f8, %f357, %f357;
	mul.f32 	%f13, %f391, %f391;
	mul.f32 	%f17, %f426, %f426;
	mul.f32 	%f22, %f460, %f460;
	mul.f32 	%f26, %f495, %f495;
	mul.f32 	%f31, %f529, %f529;
	mul.f32 	%f35, %f564, %f564;
	mul.f32 	%f40, %f598, %f598;
	mul.f32 	%f44, %f633, %f633;
	mul.f32 	%f49, %f667, %f667;
	mul.f32 	%f53, %f702, %f702;
	mul.f32 	%f58, %f736, %f736;
	mul.f32 	%f62, %f771, %f771;
	mul.f32 	%f67, %f805, %f805;
	selp.f32 	%f857, %f852, %f856, %p128;
	setp.gt.f32 	%p130, %f860, 0f4B800000;
	add.f32 	%f861, %f88, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p148;
	setp.gt.f32 	%p150, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f963, %f958, %f962, %p168;
	setp.gt.f32 	%p170, %f966, 0f4B800000;
	add.f32 	%f967, %f124, 0f3F800000;
	selp.f32 	%f1015, %f1010, %f1014, %p188;
	setp.gt.f32 	%p190, %f1019, 0f4B800000;
	add.f32 	%f1020, %f1018, 0f3F800000;
	setp.eq.s32 	%p208, %r556, 0;
	sub.f32 	%f1067, %f286, %f1063;
	selp.f32 	%f161, %f1070, %f1065, %p209;
	abs.f32 	%f1071, %f1370;
	setp.eq.s32 	%p228, %r580, 0;
	sub.f32 	%f1118, %f286, %f1114;
	selp.f32 	%f1122, %f1121, %f1116, %p229;
	abs.f32 	%f1123, %f1374;
	selp.f32 	%f1172, %f1167, %f1171, %p248;
	setp.gt.f32 	%p250, %f1175, 0f4B800000;
	add.f32 	%f1176, %f198, 0f3F800000;
	add.f32 	%f1198, %f1382, %f1382;
	mov.b32 	%r617, %f1198;
	and.b32  	%r618, %r617, -2147483648;
	or.b32  	%r619, %r618, 1056964608;
	mov.b32 	%f1199, %r619;
	add.f32 	%f1200, %f1198, %f1199;
	cvt.rzi.f32.f32 	%f1201, %f1200;
	abs.f32 	%f1202, %f1198;
	setp.gt.f32 	%p264, %f1202, 0f4B000000;
	selp.f32 	%f1203, %f1198, %f1201, %p264;
	cvt.rzi.f32.f32 	%f1204, %f1198;
	setp.lt.f32 	%p265, %f1202, 0f3F000000;
	selp.f32 	%f1205, %f1204, %f1203, %p265;
	cvt.rzi.s32.f32 	%r620, %f1205;
	fma.rn.f32 	%f1206, %f1205, 0fBF000000, %f1382;
	mul.f32 	%f1207, %f1206, %f1206;
	fma.rn.f32 	%f1208, %f1207, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1209, %f1207, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1210, %f1208, %f1207, 0fC0A55DF6;
	fma.rn.f32 	%f1211, %f1209, %f1207, 0f4081E0CF;
	fma.rn.f32 	%f1212, %f1207, %f1206, 0f00000000;
	fma.rn.f32 	%f1213, %f1211, %f1207, 0fC09DE9E6;
	fma.rn.f32 	%f1214, %f1210, %f1212, 0f00000000;
	fma.rn.f32 	%f1215, %f1213, %f1207, 0f3F800000;
	fma.rn.f32 	%f1216, %f1206, 0f40490FDB, %f1214;
	and.b32  	%r621, %r620, 1;
	setp.eq.b32 	%p266, %r621, 1;
	selp.f32 	%f1217, %f1215, %f1216, %p266;
	selp.f32 	%f1218, %f1216, %f1215, %p266;
	and.b32  	%r622, %r620, 2;
	setp.eq.s32 	%p267, %r622, 0;
	neg.f32 	%f1219, %f1217;
	selp.f32 	%f1220, %f1217, %f1219, %p267;
	add.s32 	%r623, %r620, 1;
	and.b32  	%r624, %r623, 2;
	setp.eq.s32 	%p268, %r624, 0;
	sub.f32 	%f1222, %f286, %f1218;
	selp.f32 	%f1223, %f1218, %f1222, %p268;
	cvt.rzi.f32.f32 	%f1224, %f1382;
	setp.eq.f32 	%p269, %f1224, %f1382;
	mul.f32 	%f1225, %f1382, 0f00000000;
	selp.f32 	%f1226, %f1225, %f1220, %p269;
	abs.f32 	%f1227, %f1382;
	setp.gt.f32 	%p270, %f1227, 0f4B800000;
	add.f32 	%f1228, %f1226, 0f3F800000;
	mul.lo.s32 	%r625, %r192, 2147483640;
	cvt.u16.u32 	%rs1, %r1;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	sub.s32 	%r626, %r625, %r178;
	mad.lo.s32 	%r627, %r195, 2147483616, %r626;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r628, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r629, %rs21;
	sub.s32 	%r630, %r627, %r629;
	shl.b32 	%r631, %r630, 1;
	cvt.rn.f32.s32 	%f1230, %r631;
	div.approx.f32 	%f217, %f1230, %f289;
	abs.f32 	%f1386, %f217;
	setp.lt.f32 	%p271, %f1386, 0f40000000;
	@%p271 bra 	$L__BB0_164;
// %bb.153:
	setp.gtu.f32 	%p272, %f1386, 0f4B800000;
	@%p272 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_154;
$L__BB0_160:
	mov.b32 	%r107, %f1386;
	and.b32  	%r632, %r107, 8388607;
	or.b32  	%r16376, %r632, 1065353216;
	mov.b32 	%f1385, %r16376;
	add.s32 	%r633, %r107, -1073741824;
	and.b32  	%r16377, %r633, -8388608;
	setp.eq.s32 	%p278, %r16377, 0;
	@%p278 bra 	$L__BB0_163;
// %bb.161:                             // %__nv_fmaf_rn.exit4.i.i.i1872.preheader
	mov.f32 	%f1241, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1240,%f1241;
	// end inline asm
$L__BB0_162:                            // %__nv_fmaf_rn.exit4.i.i.i1872
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r634, %r16377, 192937984;
	add.s32 	%r635, %r16376, %r634;
	mov.b32 	%f1242, %r635;
	mul.f32 	%f1243, %f1240, %f1242;
	sub.f32 	%f1244, %f1242, %f1243;
	fma.rn.f32 	%f1245, %f1244, %f1240, %f1243;
	sub.f32 	%f1246, %f1242, %f1245;
	fma.rz.f32 	%f1247, %f1246, %f1240, %f1245;
	cvt.rzi.f32.f32 	%f1248, %f1247;
	sub.f32 	%f1385, %f1242, %f1248;
	sub.s32 	%r16377, %r16377, %r634;
	mov.b32 	%r16376, %f1385;
	setp.ne.s32 	%p279, %r16377, 0;
	setp.ne.s32 	%p280, %r16376, 0;
	and.pred  	%p281, %p279, %p280;
	@%p281 bra 	$L__BB0_162;
$L__BB0_163:                            // %__internal_fmodf_slowpath_mod.exit.i.i1874
	setp.gt.u32 	%p282, %r107, 2139095039;
	selp.f32 	%f1249, 0f7FFFFFFF, 0f4B800000, %p282;
	mul.f32 	%f1250, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1249, %f1250;
	bra.uni 	$L__BB0_164;
$L__BB0_154:                            // %__nv_fast_fdividef.exit.i.i.i1851
	div.approx.f32 	%f1233, %f1386, %f257;
	cvt.rzi.f32.f32 	%f1384, %f1233;
	fma.rn.f32 	%f220, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r106, %f220;
	setp.lt.u32 	%p273, %r106, 1073741824;
	@%p273 bra 	$L__BB0_159;
// %bb.155:
	setp.lt.u32 	%p274, %r106, -2147483647;
	@%p274 bra 	$L__BB0_157;
// %bb.156:
	add.f32 	%f1238, %f1384, 0fBF800000;
	setp.lt.f32 	%p277, %f220, 0fC0000000;
	add.f32 	%f1239, %f1238, 0fBF800000;
	selp.f32 	%f1384, %f1239, %f1238, %p277;
	bra.uni 	$L__BB0_159;
$L__BB0_157:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p275, %f220, 0f40800000;
	@%p275 bra 	$L__BB0_159;
// %bb.158:                             // %__nv_fmaf_rn.exit.i.i.i1855
	add.f32 	%f1234, %f1384, 0f3F800000;
	fma.rn.f32 	%f1236, %f257, 0fC0400000, %f220;
	setp.ge.f32 	%p276, %f1236, 0f00000000;
	add.f32 	%f1237, %f1234, 0f3F800000;
	selp.f32 	%f1384, %f1237, %f1234, %p276;
$L__BB0_159:                            // %__internal_fmodf_fastpath_quot.exit.i.i1858
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
$L__BB0_164:                            // %__internal_fmodf_kernel.exit.i1877
	shr.u32 	%r285, %r284, 1;
	mul.f32 	%f292, %f254, 0f3B8B2FF9;
	mul.f32 	%f326, %f4, 0f3B8B2FF9;
	mul.f32 	%f361, %f8, 0f3B8B2FF9;
	mul.f32 	%f395, %f13, 0f3B8B2FF9;
	mul.f32 	%f430, %f17, 0f3B8B2FF9;
	mul.f32 	%f464, %f22, 0f3B8B2FF9;
	mul.f32 	%f499, %f26, 0f3B8B2FF9;
	mul.f32 	%f533, %f31, 0f3B8B2FF9;
	mul.f32 	%f568, %f35, 0f3B8B2FF9;
	mul.f32 	%f602, %f40, 0f3B8B2FF9;
	mul.f32 	%f637, %f44, 0f3B8B2FF9;
	mul.f32 	%f671, %f49, 0f3B8B2FF9;
	mul.f32 	%f706, %f53, 0f3B8B2FF9;
	mul.f32 	%f740, %f58, 0f3B8B2FF9;
	mul.f32 	%f775, %f62, 0f3B8B2FF9;
	mul.f32 	%f808, %f67, 0f3B8B2FF9;
	selp.f32 	%f89, %f861, %f857, %p130;
	selp.f32 	%f915, %f914, %f909, %p150;
	selp.f32 	%f125, %f967, %f963, %p170;
	selp.f32 	%f1021, %f1020, %f1015, %p190;
	selp.f32 	%f1068, %f1063, %f1067, %p208;
	setp.gt.f32 	%p210, %f1071, 0f4B800000;
	add.f32 	%f1072, %f161, 0f3F800000;
	selp.f32 	%f1119, %f1114, %f1118, %p228;
	setp.gt.f32 	%p230, %f1123, 0f4B800000;
	add.f32 	%f1124, %f1122, 0f3F800000;
	selp.f32 	%f199, %f1176, %f1172, %p250;
	selp.f32 	%f1229, %f1228, %f1223, %p270;
	sub.s32 	%r105, %r627, %r628;
	abs.f32 	%f1251, %f1386;
	setp.gtu.f32 	%p283, %f1251, 0f7F800000;
	@%p283 bra 	$L__BB0_166;
// %bb.165:
	mov.b32 	%r636, %f217;
	and.b32  	%r637, %r636, -2147483648;
	mov.b32 	%r638, %f1386;
	or.b32  	%r639, %r637, %r638;
	mov.b32 	%f1386, %r639;
$L__BB0_166:                            // %__nv_fmodf.exit1878
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd48, %r285, 4;
	mul.f32 	%f3, %f292, %f1336;
	mul.f32 	%f327, %f326, %f1337;
	mul.f32 	%f12, %f361, %f1338;
	mul.f32 	%f396, %f395, %f1339;
	mul.f32 	%f21, %f430, %f1340;
	mul.f32 	%f465, %f464, %f1341;
	mul.f32 	%f30, %f499, %f1342;
	mul.f32 	%f534, %f533, %f1343;
	mul.f32 	%f39, %f568, %f1344;
	mul.f32 	%f603, %f602, %f1345;
	mul.f32 	%f48, %f637, %f1346;
	mul.f32 	%f672, %f671, %f1347;
	mul.f32 	%f57, %f706, %f1348;
	mul.f32 	%f741, %f740, %f1349;
	mul.f32 	%f66, %f775, %f1350;
	mul.f32 	%f809, %f808, %f1351;
	mov.b32 	%r464, %f915;
	mov.b32 	%r463, %f89;
	mov.b32 	%r470, %f912;
	mov.b32 	%r469, %f88;
	mov.b32 	%r519, %f1021;
	mov.b32 	%r518, %f125;
	mov.b32 	%r525, %f1018;
	mov.b32 	%r524, %f124;
	selp.f32 	%f162, %f1072, %f1068, %p210;
	selp.f32 	%f1125, %f1124, %f1119, %p230;
	mov.b32 	%r607, %f1229;
	mov.b32 	%r606, %f199;
	mov.b32 	%r613, %f1226;
	mov.b32 	%r612, %f198;
	add.f32 	%f1252, %f1386, %f1386;
	mov.b32 	%r640, %f1252;
	and.b32  	%r641, %r640, -2147483648;
	or.b32  	%r642, %r641, 1056964608;
	mov.b32 	%f1253, %r642;
	add.f32 	%f1254, %f1252, %f1253;
	cvt.rzi.f32.f32 	%f1255, %f1254;
	abs.f32 	%f1256, %f1252;
	setp.gt.f32 	%p284, %f1256, 0f4B000000;
	selp.f32 	%f1257, %f1252, %f1255, %p284;
	cvt.rzi.f32.f32 	%f1258, %f1252;
	setp.lt.f32 	%p285, %f1256, 0f3F000000;
	selp.f32 	%f1259, %f1258, %f1257, %p285;
	cvt.rzi.s32.f32 	%r643, %f1259;
	fma.rn.f32 	%f1260, %f1259, 0fBF000000, %f1386;
	mul.f32 	%f1261, %f1260, %f1260;
	fma.rn.f32 	%f1262, %f1261, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1263, %f1261, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1264, %f1262, %f1261, 0fC0A55DF6;
	fma.rn.f32 	%f1265, %f1263, %f1261, 0f4081E0CF;
	fma.rn.f32 	%f1266, %f1261, %f1260, 0f00000000;
	fma.rn.f32 	%f1267, %f1265, %f1261, 0fC09DE9E6;
	fma.rn.f32 	%f1268, %f1264, %f1266, 0f00000000;
	fma.rn.f32 	%f1269, %f1267, %f1261, 0f3F800000;
	fma.rn.f32 	%f1270, %f1260, 0f40490FDB, %f1268;
	and.b32  	%r644, %r643, 1;
	setp.eq.b32 	%p286, %r644, 1;
	selp.f32 	%f1271, %f1269, %f1270, %p286;
	selp.f32 	%f1272, %f1270, %f1269, %p286;
	and.b32  	%r645, %r643, 2;
	setp.eq.s32 	%p287, %r645, 0;
	neg.f32 	%f1273, %f1271;
	selp.f32 	%f1274, %f1271, %f1273, %p287;
	add.s32 	%r646, %r643, 1;
	and.b32  	%r647, %r646, 2;
	setp.eq.s32 	%p288, %r647, 0;
	sub.f32 	%f1276, %f286, %f1272;
	selp.f32 	%f1277, %f1272, %f1276, %p288;
	cvt.rzi.f32.f32 	%f1278, %f1386;
	setp.eq.f32 	%p289, %f1278, %f1386;
	mul.f32 	%f1279, %f1386, 0f00000000;
	selp.f32 	%f234, %f1279, %f1274, %p289;
	abs.f32 	%f1280, %f1386;
	setp.gt.f32 	%p290, %f1280, 0f4B800000;
	add.f32 	%f1281, %f234, 0f3F800000;
	shl.b32 	%r648, %r105, 1;
	cvt.rn.f32.s32 	%f1282, %r648;
	div.approx.f32 	%f236, %f1282, %f289;
	abs.f32 	%f1390, %f236;
	setp.lt.f32 	%p291, %f1390, 0f40000000;
	@%p291 bra 	$L__BB0_178;
// %bb.167:
	setp.gtu.f32 	%p292, %f1390, 0f4B800000;
	@%p292 bra 	$L__BB0_174;
	bra.uni 	$L__BB0_168;
$L__BB0_174:
	mov.b32 	%r115, %f1390;
	and.b32  	%r649, %r115, 8388607;
	or.b32  	%r16378, %r649, 1065353216;
	mov.b32 	%f1389, %r16378;
	add.s32 	%r650, %r115, -1073741824;
	and.b32  	%r16379, %r650, -8388608;
	setp.eq.s32 	%p298, %r16379, 0;
	@%p298 bra 	$L__BB0_177;
// %bb.175:                             // %__nv_fmaf_rn.exit4.i.i.i1903.preheader
	mov.f32 	%f1293, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1292,%f1293;
	// end inline asm
$L__BB0_176:                            // %__nv_fmaf_rn.exit4.i.i.i1903
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r651, %r16379, 192937984;
	add.s32 	%r652, %r16378, %r651;
	mov.b32 	%f1294, %r652;
	mul.f32 	%f1295, %f1292, %f1294;
	sub.f32 	%f1296, %f1294, %f1295;
	fma.rn.f32 	%f1297, %f1296, %f1292, %f1295;
	sub.f32 	%f1298, %f1294, %f1297;
	fma.rz.f32 	%f1299, %f1298, %f1292, %f1297;
	cvt.rzi.f32.f32 	%f1300, %f1299;
	sub.f32 	%f1389, %f1294, %f1300;
	sub.s32 	%r16379, %r16379, %r651;
	mov.b32 	%r16378, %f1389;
	setp.ne.s32 	%p299, %r16379, 0;
	setp.ne.s32 	%p300, %r16378, 0;
	and.pred  	%p301, %p299, %p300;
	@%p301 bra 	$L__BB0_176;
$L__BB0_177:                            // %__internal_fmodf_slowpath_mod.exit.i.i1905
	setp.gt.u32 	%p302, %r115, 2139095039;
	selp.f32 	%f1301, 0f7FFFFFFF, 0f4B800000, %p302;
	mul.f32 	%f1302, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1301, %f1302;
	bra.uni 	$L__BB0_178;
$L__BB0_168:                            // %__nv_fast_fdividef.exit.i.i.i1882
	div.approx.f32 	%f1285, %f1390, %f257;
	cvt.rzi.f32.f32 	%f1388, %f1285;
	fma.rn.f32 	%f239, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r114, %f239;
	setp.lt.u32 	%p293, %r114, 1073741824;
	@%p293 bra 	$L__BB0_173;
// %bb.169:
	setp.lt.u32 	%p294, %r114, -2147483647;
	@%p294 bra 	$L__BB0_171;
// %bb.170:
	add.f32 	%f1290, %f1388, 0fBF800000;
	setp.lt.f32 	%p297, %f239, 0fC0000000;
	add.f32 	%f1291, %f1290, 0fBF800000;
	selp.f32 	%f1388, %f1291, %f1290, %p297;
	bra.uni 	$L__BB0_173;
$L__BB0_171:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p295, %f239, 0f40800000;
	@%p295 bra 	$L__BB0_173;
// %bb.172:                             // %__nv_fmaf_rn.exit.i.i.i1886
	add.f32 	%f1286, %f1388, 0f3F800000;
	fma.rn.f32 	%f1288, %f257, 0fC0400000, %f239;
	setp.ge.f32 	%p296, %f1288, 0f00000000;
	add.f32 	%f1289, %f1286, 0f3F800000;
	selp.f32 	%f1388, %f1289, %f1286, %p296;
$L__BB0_173:                            // %__internal_fmodf_fastpath_quot.exit.i.i1889
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
$L__BB0_178:                            // %__internal_fmodf_kernel.exit.i1908
	add.s64 	%rd49, %rd1, %rd48;
	shr.u32 	%r191, %r1, 2;
	mov.b32 	%r310, %f327;
	mov.b32 	%r309, %f3;
	mov.b32 	%r328, %f396;
	mov.b32 	%r327, %f12;
	mov.b32 	%r346, %f465;
	mov.b32 	%r345, %f21;
	mov.b32 	%r364, %f534;
	mov.b32 	%r363, %f30;
	mov.b32 	%r382, %f603;
	mov.b32 	%r381, %f39;
	mov.b32 	%r400, %f672;
	mov.b32 	%r399, %f48;
	mov.b32 	%r418, %f741;
	mov.b32 	%r417, %f57;
	mov.b32 	%r436, %f809;
	mov.b32 	%r435, %f66;
	xor.b32  	%r522, %r525, -2147483648;
	xor.b32  	%r521, %r524, -2147483648;
	mov.b32 	%r569, %f1125;
	mov.b32 	%r568, %f162;
	mov.b32 	%r572, %f1122;
	mov.b32 	%r571, %f161;
	xor.b32  	%r610, %r613, -2147483648;
	xor.b32  	%r609, %r612, -2147483648;
	selp.f32 	%f235, %f1281, %f1277, %p290;
	abs.f32 	%f1303, %f1390;
	setp.gtu.f32 	%p303, %f1303, 0f7F800000;
	@%p303 bra 	$L__BB0_180;
// %bb.179:
	mov.b32 	%r653, %f236;
	and.b32  	%r654, %r653, -2147483648;
	mov.b32 	%r655, %f1390;
	or.b32  	%r656, %r654, %r655;
	mov.b32 	%f1390, %r656;
$L__BB0_180:                            // %__nv_fmodf.exit1909
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	ld.global.u32 	%r186, [%rd49];
	ld.global.u32 	%r187, [%rd49+128];
	// begin inline asm
	cvt.rn.f16x2.f32 %r308, %r310, %r309;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r326, %r328, %r327;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r344, %r346, %r345;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r362, %r364, %r363;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r380, %r382, %r381;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r398, %r400, %r399;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r416, %r418, %r417;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r434, %r436, %r435;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r462, %r464, %r463;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r465, %r464, %r463;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r468, %r470, %r469;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r471, %r470, %r469;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r517, %r519, %r518;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r520, %r522, %r521;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r523, %r525, %r524;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r526, %r519, %r518;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r567, %r569, %r568;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r570, %r572, %r571;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r605, %r607, %r606;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r608, %r610, %r609;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r611, %r613, %r612;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r614, %r607, %r606;
	// end inline asm
	add.f32 	%f1304, %f1390, %f1390;
	mov.b32 	%r664, %f1304;
	and.b32  	%r665, %r664, -2147483648;
	or.b32  	%r666, %r665, 1056964608;
	mov.b32 	%f1305, %r666;
	add.f32 	%f1306, %f1304, %f1305;
	cvt.rzi.f32.f32 	%f1307, %f1306;
	abs.f32 	%f1308, %f1304;
	setp.gt.f32 	%p304, %f1308, 0f4B000000;
	selp.f32 	%f1309, %f1304, %f1307, %p304;
	cvt.rzi.f32.f32 	%f1310, %f1304;
	setp.lt.f32 	%p305, %f1308, 0f3F000000;
	selp.f32 	%f1311, %f1310, %f1309, %p305;
	cvt.rzi.s32.f32 	%r667, %f1311;
	fma.rn.f32 	%f1312, %f1311, 0fBF000000, %f1390;
	mul.f32 	%f1313, %f1312, %f1312;
	fma.rn.f32 	%f1314, %f1313, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1315, %f1313, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1316, %f1314, %f1313, 0fC0A55DF6;
	fma.rn.f32 	%f1317, %f1315, %f1313, 0f4081E0CF;
	fma.rn.f32 	%f1318, %f1313, %f1312, 0f00000000;
	fma.rn.f32 	%f1319, %f1317, %f1313, 0fC09DE9E6;
	fma.rn.f32 	%f1320, %f1316, %f1318, 0f00000000;
	fma.rn.f32 	%f1321, %f1319, %f1313, 0f3F800000;
	fma.rn.f32 	%f1322, %f1312, 0f40490FDB, %f1320;
	and.b32  	%r668, %r667, 1;
	setp.eq.b32 	%p306, %r668, 1;
	selp.f32 	%f1323, %f1321, %f1322, %p306;
	selp.f32 	%f1324, %f1322, %f1321, %p306;
	and.b32  	%r669, %r667, 2;
	setp.eq.s32 	%p307, %r669, 0;
	neg.f32 	%f1325, %f1323;
	selp.f32 	%f1326, %f1323, %f1325, %p307;
	add.s32 	%r670, %r667, 1;
	and.b32  	%r671, %r670, 2;
	setp.eq.s32 	%p308, %r671, 0;
	sub.f32 	%f1328, %f286, %f1324;
	selp.f32 	%f1329, %f1324, %f1328, %p308;
	cvt.rzi.f32.f32 	%f1330, %f1390;
	setp.eq.f32 	%p309, %f1330, %f1390;
	mul.f32 	%f1331, %f1390, 0f00000000;
	selp.f32 	%f1332, %f1331, %f1326, %p309;
	abs.f32 	%f1333, %f1390;
	setp.gt.f32 	%p310, %f1333, 0f4B800000;
	add.f32 	%f1334, %f1332, 0f3F800000;
	selp.f32 	%f1335, %f1334, %f1329, %p310;
	mov.b32 	%r659, %f1335;
	mov.b32 	%r658, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r657, %r659, %r658;
	// end inline asm
	mov.b32 	%r662, %f1332;
	mov.b32 	%r661, %f234;
	// begin inline asm
	cvt.rn.f16x2.f32 %r660, %r662, %r661;
	// end inline asm
	shl.b32 	%r672, %r5, 12;
	and.b32  	%r673, %r179, 32;
	shl.b32 	%r674, %r1, 3;
	and.b32  	%r675, %r674, 64;
	or.b32  	%r676, %r673, %r2;
	or.b32  	%r124, %r676, %r675;
	and.b32  	%r677, %r182, 28;
	shl.b32 	%r678, %r4, 5;
	and.b32  	%r679, %r678, 96;
	or.b32  	%r125, %r677, %r679;
	and.b32  	%r126, %r678, 128;
	or.b32  	%r680, %r125, %r126;
	or.b32  	%r127, %r680, %r672;
	and.b32  	%r128, %r1, 8;
	shl.b32 	%r681, %r1, 4;
	or.b32  	%r682, %r128, %r681;
	shr.u32 	%r683, %r682, 2;
	and.b32  	%r684, %r683, 30;
	and.b32  	%r685, %r3, 32;
	shr.u32 	%r686, %r2, 1;
	and.b32  	%r129, %r191, 6;
	and.b32  	%r687, %r681, 48;
	or.b32  	%r130, %r685, %r686;
	or.b32  	%r131, %r130, 8;
	or.b32  	%r132, %r130, 16;
	or.b32  	%r133, %r130, 24;
	or.b32  	%r134, %r180, %r687;
	or.b32  	%r688, %r185, %r184;
	or.b32  	%r689, %r688, %r180;
	or.b32  	%r690, %r689, %r183;
	shr.u32 	%r691, %r690, 1;
	mul.lo.s32 	%r692, %r691, 65;
	add.s32 	%r135, %r692, %r130;
	add.s32 	%r136, %r692, %r131;
	add.s32 	%r137, %r692, %r132;
	add.s32 	%r138, %r692, %r133;
	add.s32 	%r693, %r692, 2080;
	add.s32 	%r139, %r693, %r130;
	add.s32 	%r140, %r693, %r131;
	add.s32 	%r141, %r693, %r132;
	add.s32 	%r142, %r693, %r133;
	shl.b32 	%r694, %r2, 1;
	or.b32  	%r695, %r694, %r193;
	mul.lo.s32 	%r696, %r695, 65;
	add.s32 	%r697, %r684, %r696;
	mul.wide.u32 	%rd50, %r697, 4;
	mov.u64 	%rd51, shmem;
	add.s64 	%rd5, %rd51, %rd50;
	cvt.u64.u32 	%rd52, %r684;
	cvt.u64.u32 	%rd53, %r696;
	add.s64 	%rd54, %rd53, %rd52;
	shl.b64 	%rd55, %rd54, 2;
	add.s64 	%rd6, %rd51, %rd55;
	or.b32  	%r698, %r695, 32;
	mul.lo.s32 	%r699, %r698, 65;
	add.s32 	%r700, %r684, %r699;
	mul.wide.u32 	%rd56, %r700, 4;
	add.s64 	%rd7, %rd51, %rd56;
	cvt.u64.u32 	%rd57, %r699;
	add.s64 	%rd58, %rd52, %rd57;
	shl.b64 	%rd59, %rd58, 2;
	add.s64 	%rd8, %rd51, %rd59;
	shl.b32 	%r701, %r7, 19;
	add.s32 	%r702, %r701, -1572864;
	shl.b32 	%r703, %r2, 2;
	or.b32  	%r704, %r194, %r703;
	or.b32  	%r705, %r704, %r181;
	shl.b32 	%r143, %r705, 8;
	cvt.s64.s32 	%rd9, %r702;
	or.b32  	%r144, %r680, %r143;
	bfe.u32 	%r706, %r681, 5, 1;
	bfe.s32 	%r707, %r2, 1, 1;
	and.b32  	%r708, %r2, 2;
	setp.eq.s32 	%p311, %r708, 0;
	and.b32  	%r709, %r707, 1040;
	bfe.s32 	%r710, %r2, 2, 1;
	and.b32  	%r711, %r2, 4;
	setp.eq.s32 	%p312, %r711, 0;
	and.b32  	%r712, %r710, 520;
	and.b32  	%r713, %r2, 1;
	neg.s32 	%r714, %r713;
	and.b32  	%r715, %r714, 2080;
	mul.lo.s32 	%r716, %r193, 65;
	shr.u32 	%r717, %r2, 3;
	mul.lo.s32 	%r718, %r717, 260;
	or.b32  	%r719, %r715, %r684;
	add.s32 	%r720, %r719, %r709;
	add.s32 	%r721, %r720, %r712;
	add.s32 	%r722, %r721, %r716;
	add.s32 	%r723, %r722, %r718;
	mul.wide.u32 	%rd60, %r723, 4;
	add.s64 	%rd10, %rd51, %rd60;
	cvt.u64.u32 	%rd61, %r718;
	cvt.u64.u32 	%rd62, %r716;
	selp.b64 	%rd63, 0, 520, %p312;
	selp.b64 	%rd64, 0, 1040, %p311;
	cvt.u64.u32 	%rd65, %r719;
	add.s64 	%rd66, %rd65, %rd64;
	add.s64 	%rd67, %rd66, %rd63;
	add.s64 	%rd68, %rd67, %rd62;
	add.s64 	%rd69, %rd68, %rd61;
	shl.b64 	%rd70, %rd69, 2;
	add.s64 	%rd11, %rd51, %rd70;
	cvt.u64.u32 	%rd71, %r720;
	add.s64 	%rd72, %rd71, %rd63;
	add.s64 	%rd73, %rd72, %rd62;
	add.s64 	%rd74, %rd73, %rd61;
	shl.b64 	%rd75, %rd74, 2;
	add.s64 	%rd12, %rd51, %rd75;
	add.s32 	%r724, %r723, 162;
	mul.wide.u32 	%rd76, %r724, 4;
	add.s64 	%rd13, %rd51, %rd76;
	add.s32 	%r725, %r723, 131;
	mul.wide.u32 	%rd77, %r725, 4;
	add.s64 	%rd14, %rd51, %rd77;
	add.s32 	%r726, %r723, 163;
	mul.wide.u32 	%rd78, %r726, 4;
	add.s64 	%rd15, %rd51, %rd78;
	cvt.u64.u32 	%rd79, %r721;
	add.s64 	%rd80, %rd79, %rd62;
	add.s64 	%rd81, %rd80, %rd61;
	shl.b64 	%rd82, %rd81, 2;
	add.s64 	%rd16, %rd51, %rd82;
	add.s32 	%r727, %r723, 4193;
	mul.wide.u32 	%rd83, %r727, 4;
	add.s64 	%rd17, %rd51, %rd83;
	add.s32 	%r728, %r723, 4162;
	mul.wide.u32 	%rd84, %r728, 4;
	add.s64 	%rd18, %rd51, %rd84;
	add.s32 	%r729, %r723, 4194;
	mul.wide.u32 	%rd85, %r729, 4;
	add.s64 	%rd19, %rd51, %rd85;
	add.s32 	%r730, %r723, 4291;
	mul.wide.u32 	%rd86, %r730, 4;
	add.s64 	%rd20, %rd51, %rd86;
	add.s32 	%r731, %r723, 4323;
	mul.wide.u32 	%rd87, %r731, 4;
	add.s64 	%rd21, %rd51, %rd87;
	add.s32 	%r732, %r723, 4292;
	mul.wide.u32 	%rd88, %r732, 4;
	add.s64 	%rd22, %rd51, %rd88;
	add.s32 	%r733, %r723, 4324;
	mul.wide.u32 	%rd89, %r733, 4;
	add.s64 	%rd23, %rd51, %rd89;
	setp.eq.s32 	%p313, %r190, 0;
	selp.b32 	%r145, 0, 130, %p313;
	mul.lo.s32 	%r146, %r706, 65;
	bfe.s32 	%r734, %r1, 2, 1;
	and.b32  	%r147, %r734, 260;
	add.s32 	%r148, %r130, 2080;
	add.s32 	%r149, %r130, 2088;
	add.s32 	%r150, %r130, 2096;
	add.s32 	%r151, %r130, 2104;
	mov.u32 	%r16380, 0;
	setp.eq.s32 	%p315, %r128, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16381, %r16380;
	mov.u32 	%r16382, %r16380;
	mov.u32 	%r16383, %r16380;
	mov.u32 	%r16384, %r16380;
	mov.u32 	%r16385, %r16380;
	mov.u32 	%r16386, %r16380;
	mov.u32 	%r16387, %r16380;
	mov.u32 	%r16388, %r16380;
	mov.u32 	%r16389, %r16380;
	mov.u32 	%r16390, %r16380;
	mov.u32 	%r16391, %r16380;
	mov.u32 	%r16392, %r16380;
	mov.u32 	%r16393, %r16380;
	mov.u32 	%r16394, %r16380;
	mov.u32 	%r16395, %r16380;
	mov.u32 	%r16396, %r16380;
	mov.u32 	%r16397, %r16380;
	mov.u32 	%r16398, %r16380;
	mov.u32 	%r16399, %r16380;
	mov.u32 	%r16400, %r16380;
	mov.u32 	%r16401, %r16380;
	mov.u32 	%r16402, %r16380;
	mov.u32 	%r16403, %r16380;
	mov.u32 	%r16404, %r16380;
	bra.uni 	$L__BB0_181;
$L__BB0_187:                            // %L70753
                                        //   in Loop: Header=BB0_181 Depth=1
	add.s32 	%r177, %r16404, 256;
	setp.ne.s32 	%p340, %r16404, 7936;
	mov.u32 	%r16404, %r177;
	@%p340 bra 	$L__BB0_181;
	bra.uni 	$L__BB0_188;
$L__BB0_181:                            // %L2417
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_183 Depth 2
	add.s32 	%r735, %r16404, %r5;
	setp.gt.s32 	%p314, %r6, %r735;
	@%p314 bra 	$L__BB0_182;
	bra.uni 	$L__BB0_188;
$L__BB0_182:                            // %pass839
                                        //   in Loop: Header=BB0_181 Depth=1
	and.b32  	%r801, %r16404, 7936;
	or.b32  	%r802, %r124, %r801;
	shl.b32 	%r803, %r802, 12;
	add.s32 	%r804, %r127, %r803;
	shr.s32 	%r805, %r804, 31;
	shr.u32 	%r806, %r805, 7;
	add.s32 	%r807, %r804, %r806;
	shr.s32 	%r808, %r807, 25;
	setp.lt.s32 	%p316, %r804, 0;
	and.b32  	%r809, %r807, -33554432;
	setp.ne.s32 	%p317, %r809, %r804;
	and.pred  	%p318, %p316, %p317;
	selp.u32 	%r810, 1, 0, %p318;
	sub.s32 	%r811, %r810, %r808;
	shl.b32 	%r812, %r811, 25;
	add.s32 	%r813, %r812, %r804;
	mul.wide.s32 	%rd90, %r813, 4;
	add.s64 	%rd91, %rd2, %rd90;
	ld.global.v4.u32 	{%r814, %r815, %r816, %r817}, [%rd91];
	or.b32  	%r818, %r803, 65536;
	add.s32 	%r819, %r127, %r818;
	shr.s32 	%r820, %r819, 31;
	shr.u32 	%r821, %r820, 7;
	add.s32 	%r822, %r819, %r821;
	shr.s32 	%r823, %r822, 25;
	setp.lt.s32 	%p319, %r819, 0;
	and.b32  	%r824, %r822, -33554432;
	setp.ne.s32 	%p320, %r824, %r819;
	and.pred  	%p321, %p319, %p320;
	selp.u32 	%r825, 1, 0, %p321;
	sub.s32 	%r826, %r825, %r823;
	shl.b32 	%r827, %r826, 25;
	add.s32 	%r828, %r827, %r819;
	mul.wide.s32 	%rd92, %r828, 4;
	add.s64 	%rd93, %rd2, %rd92;
	ld.global.v4.u32 	{%r829, %r830, %r831, %r832}, [%rd93];
	or.b32  	%r833, %r803, 524288;
	add.s32 	%r834, %r127, %r833;
	shr.s32 	%r835, %r834, 31;
	shr.u32 	%r836, %r835, 7;
	add.s32 	%r837, %r834, %r836;
	shr.s32 	%r838, %r837, 25;
	setp.lt.s32 	%p322, %r834, 0;
	and.b32  	%r839, %r837, -33554432;
	setp.ne.s32 	%p323, %r839, %r834;
	and.pred  	%p324, %p322, %p323;
	selp.u32 	%r840, 1, 0, %p324;
	sub.s32 	%r841, %r840, %r838;
	shl.b32 	%r842, %r841, 25;
	add.s32 	%r843, %r842, %r834;
	mul.wide.s32 	%rd94, %r843, 4;
	add.s64 	%rd95, %rd2, %rd94;
	ld.global.v4.u32 	{%r844, %r845, %r846, %r847}, [%rd95];
	or.b32  	%r848, %r803, 589824;
	add.s32 	%r849, %r127, %r848;
	shr.s32 	%r850, %r849, 31;
	shr.u32 	%r851, %r850, 7;
	add.s32 	%r852, %r849, %r851;
	shr.s32 	%r853, %r852, 25;
	setp.lt.s32 	%p325, %r849, 0;
	and.b32  	%r854, %r852, -33554432;
	setp.ne.s32 	%p326, %r854, %r849;
	and.pred  	%p327, %p325, %p326;
	selp.u32 	%r855, 1, 0, %p327;
	sub.s32 	%r856, %r855, %r853;
	shl.b32 	%r857, %r856, 25;
	add.s32 	%r858, %r857, %r849;
	mul.wide.s32 	%rd96, %r858, 4;
	add.s64 	%rd97, %rd2, %rd96;
	ld.global.v4.u32 	{%r859, %r860, %r861, %r862}, [%rd97];
	selp.b32 	%r863, %r816, %r814, %p315;
	shfl.sync.bfly.b32	%r864, %r863, 8, 31, -1;
	selp.b32 	%r737, %r814, %r864, %p315;
	selp.b32 	%r738, %r864, %r816, %p315;
	selp.b32 	%r865, %r817, %r815, %p315;
	shfl.sync.bfly.b32	%r866, %r865, 8, 31, -1;
	selp.b32 	%r745, %r815, %r866, %p315;
	selp.b32 	%r746, %r866, %r817, %p315;
	selp.b32 	%r867, %r831, %r829, %p315;
	shfl.sync.bfly.b32	%r868, %r867, 8, 31, -1;
	selp.b32 	%r753, %r829, %r868, %p315;
	selp.b32 	%r754, %r868, %r831, %p315;
	selp.b32 	%r869, %r832, %r830, %p315;
	shfl.sync.bfly.b32	%r870, %r869, 8, 31, -1;
	selp.b32 	%r761, %r830, %r870, %p315;
	selp.b32 	%r762, %r870, %r832, %p315;
	selp.b32 	%r871, %r846, %r844, %p315;
	shfl.sync.bfly.b32	%r872, %r871, 8, 31, -1;
	selp.b32 	%r769, %r844, %r872, %p315;
	selp.b32 	%r770, %r872, %r846, %p315;
	selp.b32 	%r873, %r847, %r845, %p315;
	shfl.sync.bfly.b32	%r874, %r873, 8, 31, -1;
	selp.b32 	%r777, %r845, %r874, %p315;
	selp.b32 	%r778, %r874, %r847, %p315;
	selp.b32 	%r875, %r861, %r859, %p315;
	shfl.sync.bfly.b32	%r876, %r875, 8, 31, -1;
	selp.b32 	%r785, %r859, %r876, %p315;
	selp.b32 	%r786, %r876, %r861, %p315;
	selp.b32 	%r877, %r862, %r860, %p315;
	shfl.sync.bfly.b32	%r878, %r877, 8, 31, -1;
	selp.b32 	%r793, %r860, %r878, %p315;
	selp.b32 	%r794, %r878, %r862, %p315;
	mov.u32 	%r795, 21520;
	// begin inline asm
	prmt.b32 %r736, %r737, %r738, %r795;
	// end inline asm
	mov.u32 	%r799, 30258;
	// begin inline asm
	prmt.b32 %r740, %r737, %r738, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r744, %r745, %r746, %r795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r748, %r745, %r746, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r752, %r753, %r754, %r795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r756, %r753, %r754, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r760, %r761, %r762, %r795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r764, %r761, %r762, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r768, %r769, %r770, %r795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r772, %r769, %r770, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r776, %r777, %r778, %r795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r780, %r777, %r778, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r784, %r785, %r786, %r795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r788, %r785, %r786, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r792, %r793, %r794, %r795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r796, %r793, %r794, %r799;
	// end inline asm
	st.shared.u32 	[%rd10], %r736;
	st.shared.u32 	[%rd11+128], %r740;
	st.shared.u32 	[%rd11+4], %r744;
	st.shared.u32 	[%rd11+132], %r748;
	st.shared.u32 	[%rd12+520], %r752;
	st.shared.u32 	[%rd13], %r756;
	st.shared.u32 	[%rd14], %r760;
	st.shared.u32 	[%rd15], %r764;
	st.shared.u32 	[%rd16+16644], %r768;
	st.shared.u32 	[%rd17], %r772;
	st.shared.u32 	[%rd18], %r776;
	st.shared.u32 	[%rd19], %r780;
	st.shared.u32 	[%rd20], %r784;
	st.shared.u32 	[%rd21], %r788;
	st.shared.u32 	[%rd22], %r792;
	st.shared.u32 	[%rd23], %r796;
	bar.sync 	0;
	or.b32  	%r198, %r16404, %r129;
	mov.u32 	%r3223, 0;
	mov.u32 	%r16405, %r3223;
$L__BB0_183:                            // %pass6440
                                        //   Parent Loop BB0_181 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r16143, %r198, %r16405;
	bfe.s32 	%r16144, %r16143, 1, 1;
	and.b32  	%r16145, %r16144, 1040;
	bfe.s32 	%r16146, %r16143, 2, 1;
	and.b32  	%r16147, %r16146, 520;
	bfe.s32 	%r16148, %r16143, 7, 1;
	and.b32  	%r16149, %r16148, 4161;
	or.b32  	%r16150, %r16145, %r130;
	add.s32 	%r16151, %r16150, %r145;
	add.s32 	%r16152, %r16151, %r16147;
	add.s32 	%r16153, %r16152, %r16149;
	add.s32 	%r16154, %r16153, %r146;
	add.s32 	%r16155, %r16154, %r147;
	mul.wide.u32 	%rd98, %r16155, 4;
	add.s64 	%rd100, %rd51, %rd98;
	ld.shared.u32 	%r16156, [%rd100];
	or.b32  	%r16157, %r16145, %r131;
	add.s32 	%r16158, %r16157, %r145;
	add.s32 	%r16159, %r16158, %r16147;
	add.s32 	%r16160, %r16159, %r16149;
	add.s32 	%r16161, %r16160, %r146;
	add.s32 	%r16162, %r16161, %r147;
	mul.wide.u32 	%rd101, %r16162, 4;
	add.s64 	%rd102, %rd51, %rd101;
	ld.shared.u32 	%r16163, [%rd102];
	add.s32 	%r16164, %r16145, %r132;
	add.s32 	%r16165, %r16164, %r145;
	add.s32 	%r16166, %r16165, %r16147;
	add.s32 	%r16167, %r16166, %r16149;
	add.s32 	%r16168, %r16167, %r146;
	add.s32 	%r16169, %r16168, %r147;
	mul.wide.u32 	%rd103, %r16169, 4;
	add.s64 	%rd104, %rd51, %rd103;
	ld.shared.u32 	%r16170, [%rd104];
	add.s32 	%r16171, %r16145, %r133;
	add.s32 	%r16172, %r16171, %r145;
	add.s32 	%r16173, %r16172, %r16147;
	add.s32 	%r16174, %r16173, %r16149;
	add.s32 	%r16175, %r16174, %r146;
	add.s32 	%r16176, %r16175, %r147;
	mul.wide.u32 	%rd105, %r16176, 4;
	add.s64 	%rd106, %rd51, %rd105;
	ld.shared.u32 	%r16177, [%rd106];
	or.b32  	%r16178, %r191, %r16405;
	or.b32  	%r16179, %r16178, 1;
	add.s32 	%r16180, %r16179, %r16404;
	or.b32  	%r16181, %r134, %r16180;
	bfe.s32 	%r16182, %r16180, 1, 1;
	and.b32  	%r16183, %r16182, 1040;
	bfe.s32 	%r16184, %r16181, 4, 1;
	and.b32  	%r16185, %r16184, 130;
	bfe.s32 	%r16186, %r16180, 2, 1;
	and.b32  	%r16187, %r16186, 520;
	bfe.s32 	%r16188, %r16180, 7, 1;
	and.b32  	%r16189, %r16188, 4161;
	bfe.s32 	%r16190, %r16181, 5, 1;
	and.b32  	%r16191, %r16190, 65;
	bfe.s32 	%r16192, %r16181, 3, 1;
	and.b32  	%r16193, %r16192, 260;
	or.b32  	%r16194, %r148, %r16183;
	add.s32 	%r16195, %r16194, %r16185;
	add.s32 	%r16196, %r16195, %r16187;
	add.s32 	%r16197, %r16196, %r16189;
	add.s32 	%r16198, %r16197, %r16191;
	add.s32 	%r16199, %r16198, %r16193;
	mul.wide.u32 	%rd107, %r16199, 4;
	add.s64 	%rd108, %rd51, %rd107;
	ld.shared.u32 	%r16200, [%rd108];
	or.b32  	%r16201, %r149, %r16183;
	add.s32 	%r16202, %r16201, %r16185;
	add.s32 	%r16203, %r16202, %r16187;
	add.s32 	%r16204, %r16203, %r16189;
	add.s32 	%r16205, %r16204, %r16191;
	add.s32 	%r16206, %r16205, %r16193;
	mul.wide.u32 	%rd109, %r16206, 4;
	add.s64 	%rd110, %rd51, %rd109;
	ld.shared.u32 	%r16207, [%rd110];
	add.s32 	%r16208, %r150, %r16183;
	add.s32 	%r16209, %r16208, %r16185;
	add.s32 	%r16210, %r16209, %r16187;
	add.s32 	%r16211, %r16210, %r16189;
	add.s32 	%r16212, %r16211, %r16191;
	add.s32 	%r16213, %r16212, %r16193;
	mul.wide.u32 	%rd111, %r16213, 4;
	add.s64 	%rd112, %rd51, %rd111;
	ld.shared.u32 	%r16214, [%rd112];
	add.s32 	%r16215, %r151, %r16183;
	add.s32 	%r16216, %r16215, %r16185;
	add.s32 	%r16217, %r16216, %r16187;
	add.s32 	%r16218, %r16217, %r16189;
	add.s32 	%r16219, %r16218, %r16191;
	add.s32 	%r16220, %r16219, %r16193;
	mul.wide.u32 	%rd113, %r16220, 4;
	add.s64 	%rd114, %rd51, %rd113;
	ld.shared.u32 	%r16221, [%rd114];
	// begin inline asm
	mov.b32 %r884, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r895, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r883, %r16156, -2004318072;
	mov.u32 	%r882, 983055;
	// begin inline asm
	lop3.b32 %r881, %r882, %r883, %r884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r885, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r886, %r884, %r885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r889, %r881, %r886;
	// end inline asm
	mov.u32 	%r893, 15728880;
	// begin inline asm
	lop3.b32 %r892, %r893, %r883, %r895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r896, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r897, %r895, %r896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r900, %r892, %r897;
	// end inline asm
	shr.u32 	%r905, %r883, 8;
	// begin inline asm
	lop3.b32 %r903, %r882, %r905, %r884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r907, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r908, %r884, %r907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r911, %r903, %r908;
	// end inline asm
	// begin inline asm
	lop3.b32 %r914, %r893, %r905, %r895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r918, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r919, %r895, %r918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r922, %r914, %r919;
	// end inline asm
	// begin inline asm
	mov.b32 %r930, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r941, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r929, %r16163, -2004318072;
	// begin inline asm
	lop3.b32 %r927, %r882, %r929, %r930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r931, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r932, %r930, %r931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r935, %r927, %r932;
	// end inline asm
	// begin inline asm
	lop3.b32 %r938, %r893, %r929, %r941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r943, %r941, %r942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r946, %r938, %r943;
	// end inline asm
	shr.u32 	%r951, %r929, 8;
	// begin inline asm
	lop3.b32 %r949, %r882, %r951, %r930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r953, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r954, %r930, %r953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r957, %r949, %r954;
	// end inline asm
	// begin inline asm
	lop3.b32 %r960, %r893, %r951, %r941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r965, %r941, %r964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r968, %r960, %r965;
	// end inline asm
	// begin inline asm
	mov.b32 %r976, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r987, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r975, %r16170, -2004318072;
	// begin inline asm
	lop3.b32 %r973, %r882, %r975, %r976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r977, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r978, %r976, %r977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r981, %r973, %r978;
	// end inline asm
	// begin inline asm
	lop3.b32 %r984, %r893, %r975, %r987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r988, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r989, %r987, %r988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r992, %r984, %r989;
	// end inline asm
	shr.u32 	%r997, %r975, 8;
	// begin inline asm
	lop3.b32 %r995, %r882, %r997, %r976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1000, %r976, %r999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1003, %r995, %r1000;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1006, %r893, %r997, %r987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1010, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1011, %r987, %r1010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1014, %r1006, %r1011;
	// end inline asm
	// begin inline asm
	mov.b32 %r1022, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1033, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1021, %r16177, -2004318072;
	// begin inline asm
	lop3.b32 %r1019, %r882, %r1021, %r1022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1023, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1024, %r1022, %r1023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1027, %r1019, %r1024;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1030, %r893, %r1021, %r1033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1034, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1035, %r1033, %r1034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1038, %r1030, %r1035;
	// end inline asm
	shr.u32 	%r1043, %r1021, 8;
	// begin inline asm
	lop3.b32 %r1041, %r882, %r1043, %r1022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1045, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1046, %r1022, %r1045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1049, %r1041, %r1046;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1052, %r893, %r1043, %r1033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1057, %r1033, %r1056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1060, %r1052, %r1057;
	// end inline asm
	// begin inline asm
	mov.b32 %r1068, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1079, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1067, %r16200, -2004318072;
	// begin inline asm
	lop3.b32 %r1065, %r882, %r1067, %r1068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1069, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1070, %r1068, %r1069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1073, %r1065, %r1070;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1076, %r893, %r1067, %r1079, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1080, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1081, %r1079, %r1080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1084, %r1076, %r1081;
	// end inline asm
	shr.u32 	%r1089, %r1067, 8;
	// begin inline asm
	lop3.b32 %r1087, %r882, %r1089, %r1068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1091, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1092, %r1068, %r1091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1095, %r1087, %r1092;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1098, %r893, %r1089, %r1079, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1102, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1103, %r1079, %r1102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1106, %r1098, %r1103;
	// end inline asm
	// begin inline asm
	mov.b32 %r1114, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1125, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1113, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r1111, %r882, %r1113, %r1114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1115, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1116, %r1114, %r1115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1119, %r1111, %r1116;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1122, %r893, %r1113, %r1125, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1126, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1127, %r1125, %r1126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1130, %r1122, %r1127;
	// end inline asm
	shr.u32 	%r1135, %r1113, 8;
	// begin inline asm
	lop3.b32 %r1133, %r882, %r1135, %r1114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1137, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1138, %r1114, %r1137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1141, %r1133, %r1138;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1144, %r893, %r1135, %r1125, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1148, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1149, %r1125, %r1148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1152, %r1144, %r1149;
	// end inline asm
	// begin inline asm
	mov.b32 %r1160, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1171, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1159, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r1157, %r882, %r1159, %r1160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1161, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1162, %r1160, %r1161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1165, %r1157, %r1162;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1168, %r893, %r1159, %r1171, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1172, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1173, %r1171, %r1172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1176, %r1168, %r1173;
	// end inline asm
	shr.u32 	%r1181, %r1159, 8;
	// begin inline asm
	lop3.b32 %r1179, %r882, %r1181, %r1160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1183, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1184, %r1160, %r1183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1187, %r1179, %r1184;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1190, %r893, %r1181, %r1171, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1194, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1195, %r1171, %r1194;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1198, %r1190, %r1195;
	// end inline asm
	// begin inline asm
	mov.b32 %r1206, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1217, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1205, %r16221, -2004318072;
	// begin inline asm
	lop3.b32 %r1203, %r882, %r1205, %r1206, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1207, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1208, %r1206, %r1207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1211, %r1203, %r1208;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1214, %r893, %r1205, %r1217, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1218, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1219, %r1217, %r1218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1222, %r1214, %r1219;
	// end inline asm
	shr.u32 	%r1227, %r1205, 8;
	// begin inline asm
	lop3.b32 %r1225, %r882, %r1227, %r1206, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1229, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1230, %r1206, %r1229;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1233, %r1225, %r1230;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1236, %r893, %r1227, %r1217, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1240, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1241, %r1217, %r1240;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1244, %r1236, %r1241;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1247, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1249, %r1247, %r889;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1252, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1254, %r1252, %r900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1257, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1259, %r1257, %r911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1262, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1264, %r1262, %r922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1267, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1269, %r1267, %r935;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1272, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1274, %r1272, %r946;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1277, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1279, %r1277, %r957;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1282, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1284, %r1282, %r968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1287, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1289, %r1287, %r981;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1292, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1294, %r1292, %r992;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1297, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1299, %r1297, %r1003;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1302, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1304, %r1302, %r1014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1307, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1309, %r1307, %r1027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1312, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1314, %r1312, %r1038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1317, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1319, %r1317, %r1049;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1322, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1324, %r1322, %r1060;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1327, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1329, %r1327, %r1073;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1332, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1334, %r1332, %r1084;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1337, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1339, %r1337, %r1095;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1342, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1344, %r1342, %r1106;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1347, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1349, %r1347, %r1119;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1352, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1354, %r1352, %r1130;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1357, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1359, %r1357, %r1141;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1362, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1364, %r1362, %r1152;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1367, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1369, %r1367, %r1165;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1372, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1374, %r1372, %r1176;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1377, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1379, %r1377, %r1187;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1382, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1384, %r1382, %r1198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1387, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1389, %r1387, %r1211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1392, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1394, %r1392, %r1222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1397, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1399, %r1397, %r1233;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1402, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1404, %r1402, %r1244;
	// end inline asm
	// begin inline asm
	mov.b32 %r1412, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1423, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1411, %r16380, -2004318072;
	// begin inline asm
	lop3.b32 %r1409, %r882, %r1411, %r1412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1413, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1414, %r1412, %r1413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1417, %r1409, %r1414;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1420, %r893, %r1411, %r1423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1425, %r1423, %r1424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1428, %r1420, %r1425;
	// end inline asm
	shr.u32 	%r1433, %r1411, 8;
	// begin inline asm
	lop3.b32 %r1431, %r882, %r1433, %r1412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1436, %r1412, %r1435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1439, %r1431, %r1436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1442, %r893, %r1433, %r1423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1447, %r1423, %r1446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1450, %r1442, %r1447;
	// end inline asm
	// begin inline asm
	mov.b32 %r1458, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1469, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1457, %r16381, -2004318072;
	// begin inline asm
	lop3.b32 %r1455, %r882, %r1457, %r1458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1460, %r1458, %r1459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1463, %r1455, %r1460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1466, %r893, %r1457, %r1469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1471, %r1469, %r1470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1474, %r1466, %r1471;
	// end inline asm
	shr.u32 	%r1479, %r1457, 8;
	// begin inline asm
	lop3.b32 %r1477, %r882, %r1479, %r1458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1482, %r1458, %r1481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1485, %r1477, %r1482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1488, %r893, %r1479, %r1469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1493, %r1469, %r1492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1496, %r1488, %r1493;
	// end inline asm
	// begin inline asm
	mov.b32 %r1504, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1515, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1503, %r16382, -2004318072;
	// begin inline asm
	lop3.b32 %r1501, %r882, %r1503, %r1504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1506, %r1504, %r1505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1509, %r1501, %r1506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1512, %r893, %r1503, %r1515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1517, %r1515, %r1516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1520, %r1512, %r1517;
	// end inline asm
	shr.u32 	%r1525, %r1503, 8;
	// begin inline asm
	lop3.b32 %r1523, %r882, %r1525, %r1504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1528, %r1504, %r1527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1531, %r1523, %r1528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1534, %r893, %r1525, %r1515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1539, %r1515, %r1538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1542, %r1534, %r1539;
	// end inline asm
	// begin inline asm
	mov.b32 %r1550, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1561, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1549, %r16383, -2004318072;
	// begin inline asm
	lop3.b32 %r1547, %r882, %r1549, %r1550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1552, %r1550, %r1551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1555, %r1547, %r1552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1558, %r893, %r1549, %r1561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1563, %r1561, %r1562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1566, %r1558, %r1563;
	// end inline asm
	shr.u32 	%r1571, %r1549, 8;
	// begin inline asm
	lop3.b32 %r1569, %r882, %r1571, %r1550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1574, %r1550, %r1573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1577, %r1569, %r1574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1580, %r893, %r1571, %r1561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1585, %r1561, %r1584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1588, %r1580, %r1585;
	// end inline asm
	// begin inline asm
	mov.b32 %r1596, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1607, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1595, %r16392, -2004318072;
	// begin inline asm
	lop3.b32 %r1593, %r882, %r1595, %r1596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1598, %r1596, %r1597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1601, %r1593, %r1598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1604, %r893, %r1595, %r1607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1609, %r1607, %r1608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1612, %r1604, %r1609;
	// end inline asm
	shr.u32 	%r1617, %r1595, 8;
	// begin inline asm
	lop3.b32 %r1615, %r882, %r1617, %r1596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1620, %r1596, %r1619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1623, %r1615, %r1620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1626, %r893, %r1617, %r1607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1630, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1631, %r1607, %r1630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1634, %r1626, %r1631;
	// end inline asm
	// begin inline asm
	mov.b32 %r1642, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1653, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1641, %r16393, -2004318072;
	// begin inline asm
	lop3.b32 %r1639, %r882, %r1641, %r1642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1644, %r1642, %r1643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1647, %r1639, %r1644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1650, %r893, %r1641, %r1653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1655, %r1653, %r1654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1658, %r1650, %r1655;
	// end inline asm
	shr.u32 	%r1663, %r1641, 8;
	// begin inline asm
	lop3.b32 %r1661, %r882, %r1663, %r1642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1666, %r1642, %r1665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1669, %r1661, %r1666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1672, %r893, %r1663, %r1653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1676, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1677, %r1653, %r1676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1680, %r1672, %r1677;
	// end inline asm
	// begin inline asm
	mov.b32 %r1688, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1699, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1687, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r1685, %r882, %r1687, %r1688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1690, %r1688, %r1689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1693, %r1685, %r1690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1696, %r893, %r1687, %r1699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1701, %r1699, %r1700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1704, %r1696, %r1701;
	// end inline asm
	shr.u32 	%r1709, %r1687, 8;
	// begin inline asm
	lop3.b32 %r1707, %r882, %r1709, %r1688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1711, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1712, %r1688, %r1711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1715, %r1707, %r1712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1718, %r893, %r1709, %r1699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1722, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1723, %r1699, %r1722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1726, %r1718, %r1723;
	// end inline asm
	// begin inline asm
	mov.b32 %r1734, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1745, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1733, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r1731, %r882, %r1733, %r1734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1736, %r1734, %r1735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1739, %r1731, %r1736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1742, %r893, %r1733, %r1745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1747, %r1745, %r1746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1750, %r1742, %r1747;
	// end inline asm
	shr.u32 	%r1755, %r1733, 8;
	// begin inline asm
	lop3.b32 %r1753, %r882, %r1755, %r1734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1757, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1758, %r1734, %r1757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1761, %r1753, %r1758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1764, %r893, %r1755, %r1745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1768, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1769, %r1745, %r1768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1772, %r1764, %r1769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1775, %r308, %r1417, %r1249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r308, %r1428, %r1254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1783, %r308, %r1439, %r1259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r308, %r1450, %r1264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r308, %r1463, %r1269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r308, %r1474, %r1274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1799, %r308, %r1485, %r1279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r308, %r1496, %r1284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1807, %r308, %r1509, %r1289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1811, %r308, %r1520, %r1294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1815, %r308, %r1531, %r1299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1819, %r308, %r1542, %r1304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1823, %r308, %r1555, %r1309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1827, %r308, %r1566, %r1314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1831, %r308, %r1577, %r1319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1835, %r308, %r1588, %r1324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1839, %r326, %r1601, %r1329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1843, %r326, %r1612, %r1334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1847, %r326, %r1623, %r1339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1851, %r326, %r1634, %r1344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1855, %r326, %r1647, %r1349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1859, %r326, %r1658, %r1354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1863, %r326, %r1669, %r1359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1867, %r326, %r1680, %r1364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1871, %r326, %r1693, %r1369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1875, %r326, %r1704, %r1374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1879, %r326, %r1715, %r1379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1883, %r326, %r1726, %r1384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1887, %r326, %r1739, %r1389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1891, %r326, %r1750, %r1394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1895, %r326, %r1761, %r1399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1899, %r326, %r1772, %r1404;
	// end inline asm
	// begin inline asm
	mov.b32 %r1908, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1919, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1907, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r1905, %r882, %r1907, %r1908, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1909, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1910, %r1908, %r1909;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1913, %r1905, %r1910;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1916, %r893, %r1907, %r1919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1920, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1921, %r1919, %r1920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1924, %r1916, %r1921;
	// end inline asm
	shr.u32 	%r1929, %r1907, 8;
	// begin inline asm
	lop3.b32 %r1927, %r882, %r1929, %r1908, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1931, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1932, %r1908, %r1931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1935, %r1927, %r1932;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1938, %r893, %r1929, %r1919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1943, %r1919, %r1942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1946, %r1938, %r1943;
	// end inline asm
	// begin inline asm
	mov.b32 %r1954, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1965, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1953, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r1951, %r882, %r1953, %r1954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1955, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1956, %r1954, %r1955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1959, %r1951, %r1956;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1962, %r893, %r1953, %r1965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1966, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1967, %r1965, %r1966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1970, %r1962, %r1967;
	// end inline asm
	shr.u32 	%r1975, %r1953, 8;
	// begin inline asm
	lop3.b32 %r1973, %r882, %r1975, %r1954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1977, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1978, %r1954, %r1977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1981, %r1973, %r1978;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1984, %r893, %r1975, %r1965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1988, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1989, %r1965, %r1988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1992, %r1984, %r1989;
	// end inline asm
	// begin inline asm
	mov.b32 %r2000, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2011, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1999, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r1997, %r882, %r1999, %r2000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2001, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2002, %r2000, %r2001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2005, %r1997, %r2002;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2008, %r893, %r1999, %r2011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2012, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2013, %r2011, %r2012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2016, %r2008, %r2013;
	// end inline asm
	shr.u32 	%r2021, %r1999, 8;
	// begin inline asm
	lop3.b32 %r2019, %r882, %r2021, %r2000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2023, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2024, %r2000, %r2023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2027, %r2019, %r2024;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2030, %r893, %r2021, %r2011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2034, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2035, %r2011, %r2034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2038, %r2030, %r2035;
	// end inline asm
	// begin inline asm
	mov.b32 %r2046, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2057, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2045, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r2043, %r882, %r2045, %r2046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2047, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2048, %r2046, %r2047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2051, %r2043, %r2048;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2054, %r893, %r2045, %r2057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2058, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2059, %r2057, %r2058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2062, %r2054, %r2059;
	// end inline asm
	shr.u32 	%r2067, %r2045, 8;
	// begin inline asm
	lop3.b32 %r2065, %r882, %r2067, %r2046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2069, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2070, %r2046, %r2069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2073, %r2065, %r2070;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2076, %r893, %r2067, %r2057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2080, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2081, %r2057, %r2080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2084, %r2076, %r2081;
	// end inline asm
	// begin inline asm
	mov.b32 %r2092, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2103, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2091, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r2089, %r882, %r2091, %r2092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2093, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2094, %r2092, %r2093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2097, %r2089, %r2094;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2100, %r893, %r2091, %r2103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2104, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2105, %r2103, %r2104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2108, %r2100, %r2105;
	// end inline asm
	shr.u32 	%r2113, %r2091, 8;
	// begin inline asm
	lop3.b32 %r2111, %r882, %r2113, %r2092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2115, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2116, %r2092, %r2115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2119, %r2111, %r2116;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2122, %r893, %r2113, %r2103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2126, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2127, %r2103, %r2126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2130, %r2122, %r2127;
	// end inline asm
	// begin inline asm
	mov.b32 %r2138, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2149, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2137, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r2135, %r882, %r2137, %r2138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2139, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2140, %r2138, %r2139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2143, %r2135, %r2140;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2146, %r893, %r2137, %r2149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2150, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2151, %r2149, %r2150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2154, %r2146, %r2151;
	// end inline asm
	shr.u32 	%r2159, %r2137, 8;
	// begin inline asm
	lop3.b32 %r2157, %r882, %r2159, %r2138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2161, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2162, %r2138, %r2161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2165, %r2157, %r2162;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2168, %r893, %r2159, %r2149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2172, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2173, %r2149, %r2172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2176, %r2168, %r2173;
	// end inline asm
	// begin inline asm
	mov.b32 %r2184, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2195, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2183, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r2181, %r882, %r2183, %r2184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2185, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2186, %r2184, %r2185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2189, %r2181, %r2186;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2192, %r893, %r2183, %r2195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2196, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2197, %r2195, %r2196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2200, %r2192, %r2197;
	// end inline asm
	shr.u32 	%r2205, %r2183, 8;
	// begin inline asm
	lop3.b32 %r2203, %r882, %r2205, %r2184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2207, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2208, %r2184, %r2207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2211, %r2203, %r2208;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2214, %r893, %r2205, %r2195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2218, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2219, %r2195, %r2218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2222, %r2214, %r2219;
	// end inline asm
	// begin inline asm
	mov.b32 %r2230, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2241, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2229, %r16399, -2004318072;
	// begin inline asm
	lop3.b32 %r2227, %r882, %r2229, %r2230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2231, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2232, %r2230, %r2231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2235, %r2227, %r2232;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2238, %r893, %r2229, %r2241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2242, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2243, %r2241, %r2242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2246, %r2238, %r2243;
	// end inline asm
	shr.u32 	%r2251, %r2229, 8;
	// begin inline asm
	lop3.b32 %r2249, %r882, %r2251, %r2230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2253, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2254, %r2230, %r2253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2257, %r2249, %r2254;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2260, %r893, %r2251, %r2241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2264, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2265, %r2241, %r2264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2268, %r2260, %r2265;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2271, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2273, %r2271, %r1913, %r1775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2277, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2279, %r2277, %r1924, %r1779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2283, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2285, %r2283, %r1935, %r1783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2289, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2291, %r2289, %r1946, %r1787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2295, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2297, %r2295, %r1959, %r1791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2301, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2303, %r2301, %r1970, %r1795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2307, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2309, %r2307, %r1981, %r1799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2313, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2315, %r2313, %r1992, %r1803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2319, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2321, %r2319, %r2005, %r1807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2325, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2327, %r2325, %r2016, %r1811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2331, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2333, %r2331, %r2027, %r1815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2337, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2339, %r2337, %r2038, %r1819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2343, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2345, %r2343, %r2051, %r1823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2349, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2351, %r2349, %r2062, %r1827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2355, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2357, %r2355, %r2073, %r1831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2361, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2363, %r2361, %r2084, %r1835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2367, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2369, %r2367, %r2097, %r1839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2373, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2375, %r2373, %r2108, %r1843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2379, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2381, %r2379, %r2119, %r1847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2385, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2387, %r2385, %r2130, %r1851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2391, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2393, %r2391, %r2143, %r1855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2397, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2399, %r2397, %r2154, %r1859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2403, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2405, %r2403, %r2165, %r1863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2409, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2411, %r2409, %r2176, %r1867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2415, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2417, %r2415, %r2189, %r1871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2421, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2423, %r2421, %r2200, %r1875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2427, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2429, %r2427, %r2211, %r1879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2433, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2435, %r2433, %r2222, %r1883;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2439, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2441, %r2439, %r2235, %r1887;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2445, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2447, %r2445, %r2246, %r1891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2451, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2453, %r2451, %r2257, %r1895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2457, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2459, %r2457, %r2268, %r1899;
	// end inline asm
	// begin inline asm
	mov.b32 %r2468, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2479, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2467, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r2465, %r882, %r2467, %r2468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2470, %r2468, %r2469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2473, %r2465, %r2470;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2476, %r893, %r2467, %r2479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2481, %r2479, %r2480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2484, %r2476, %r2481;
	// end inline asm
	shr.u32 	%r2489, %r2467, 8;
	// begin inline asm
	lop3.b32 %r2487, %r882, %r2489, %r2468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2492, %r2468, %r2491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2495, %r2487, %r2492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2498, %r893, %r2489, %r2479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2502, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2503, %r2479, %r2502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2506, %r2498, %r2503;
	// end inline asm
	// begin inline asm
	mov.b32 %r2514, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2525, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2513, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r2511, %r882, %r2513, %r2514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2515, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2516, %r2514, %r2515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2519, %r2511, %r2516;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2522, %r893, %r2513, %r2525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2526, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2527, %r2525, %r2526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2530, %r2522, %r2527;
	// end inline asm
	shr.u32 	%r2535, %r2513, 8;
	// begin inline asm
	lop3.b32 %r2533, %r882, %r2535, %r2514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2538, %r2514, %r2537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2541, %r2533, %r2538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2544, %r893, %r2535, %r2525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2548, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2549, %r2525, %r2548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2552, %r2544, %r2549;
	// end inline asm
	// begin inline asm
	mov.b32 %r2560, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2571, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2559, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r2557, %r882, %r2559, %r2560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2561, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2562, %r2560, %r2561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2565, %r2557, %r2562;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2568, %r893, %r2559, %r2571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2572, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2573, %r2571, %r2572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2576, %r2568, %r2573;
	// end inline asm
	shr.u32 	%r2581, %r2559, 8;
	// begin inline asm
	lop3.b32 %r2579, %r882, %r2581, %r2560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2584, %r2560, %r2583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2587, %r2579, %r2584;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2590, %r893, %r2581, %r2571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2594, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2595, %r2571, %r2594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2598, %r2590, %r2595;
	// end inline asm
	// begin inline asm
	mov.b32 %r2606, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2617, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2605, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r2603, %r882, %r2605, %r2606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2607, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2608, %r2606, %r2607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2611, %r2603, %r2608;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2614, %r893, %r2605, %r2617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2618, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2619, %r2617, %r2618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2622, %r2614, %r2619;
	// end inline asm
	shr.u32 	%r2627, %r2605, 8;
	// begin inline asm
	lop3.b32 %r2625, %r882, %r2627, %r2606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2630, %r2606, %r2629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2633, %r2625, %r2630;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2636, %r893, %r2627, %r2617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2640, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2641, %r2617, %r2640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2644, %r2636, %r2641;
	// end inline asm
	// begin inline asm
	mov.b32 %r2652, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2663, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2651, %r16400, -2004318072;
	// begin inline asm
	lop3.b32 %r2649, %r882, %r2651, %r2652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2653, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2654, %r2652, %r2653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2657, %r2649, %r2654;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2660, %r893, %r2651, %r2663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2664, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2665, %r2663, %r2664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2668, %r2660, %r2665;
	// end inline asm
	shr.u32 	%r2673, %r2651, 8;
	// begin inline asm
	lop3.b32 %r2671, %r882, %r2673, %r2652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2675, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2676, %r2652, %r2675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2679, %r2671, %r2676;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2682, %r893, %r2673, %r2663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2686, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2687, %r2663, %r2686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2690, %r2682, %r2687;
	// end inline asm
	// begin inline asm
	mov.b32 %r2698, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2709, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2697, %r16401, -2004318072;
	// begin inline asm
	lop3.b32 %r2695, %r882, %r2697, %r2698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2699, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2700, %r2698, %r2699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2703, %r2695, %r2700;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2706, %r893, %r2697, %r2709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2710, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2711, %r2709, %r2710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2714, %r2706, %r2711;
	// end inline asm
	shr.u32 	%r2719, %r2697, 8;
	// begin inline asm
	lop3.b32 %r2717, %r882, %r2719, %r2698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2721, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2722, %r2698, %r2721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2725, %r2717, %r2722;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2728, %r893, %r2719, %r2709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2732, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2733, %r2709, %r2732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2736, %r2728, %r2733;
	// end inline asm
	// begin inline asm
	mov.b32 %r2744, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2755, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2743, %r16402, -2004318072;
	// begin inline asm
	lop3.b32 %r2741, %r882, %r2743, %r2744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2745, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2746, %r2744, %r2745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2749, %r2741, %r2746;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2752, %r893, %r2743, %r2755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2756, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2757, %r2755, %r2756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2760, %r2752, %r2757;
	// end inline asm
	shr.u32 	%r2765, %r2743, 8;
	// begin inline asm
	lop3.b32 %r2763, %r882, %r2765, %r2744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2767, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2768, %r2744, %r2767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2771, %r2763, %r2768;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2774, %r893, %r2765, %r2755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2778, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2779, %r2755, %r2778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2782, %r2774, %r2779;
	// end inline asm
	// begin inline asm
	mov.b32 %r2790, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2801, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2789, %r16403, -2004318072;
	// begin inline asm
	lop3.b32 %r2787, %r882, %r2789, %r2790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2791, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2792, %r2790, %r2791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2795, %r2787, %r2792;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2798, %r893, %r2789, %r2801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2802, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2803, %r2801, %r2802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2806, %r2798, %r2803;
	// end inline asm
	shr.u32 	%r2811, %r2789, 8;
	// begin inline asm
	lop3.b32 %r2809, %r882, %r2811, %r2790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2813, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2814, %r2790, %r2813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2817, %r2809, %r2814;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2820, %r893, %r2811, %r2801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2824, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2825, %r2801, %r2824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2828, %r2820, %r2825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2966, %r380, %r2473, %r2273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2963, %r380, %r2484, %r2279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2975, %r380, %r2495, %r2285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2972, %r380, %r2506, %r2291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2984, %r380, %r2519, %r2297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2981, %r380, %r2530, %r2303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2993, %r380, %r2541, %r2309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2990, %r380, %r2552, %r2315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3002, %r380, %r2565, %r2321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2999, %r380, %r2576, %r2327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3011, %r380, %r2587, %r2333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3008, %r380, %r2598, %r2339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3020, %r380, %r2611, %r2345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3017, %r380, %r2622, %r2351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r380, %r2633, %r2357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3026, %r380, %r2644, %r2363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r398, %r2657, %r2369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3035, %r398, %r2668, %r2375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3047, %r398, %r2679, %r2381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3044, %r398, %r2690, %r2387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3056, %r398, %r2703, %r2393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3053, %r398, %r2714, %r2399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3065, %r398, %r2725, %r2405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3062, %r398, %r2736, %r2411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r398, %r2749, %r2417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3071, %r398, %r2760, %r2423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3083, %r398, %r2771, %r2429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3080, %r398, %r2782, %r2435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3092, %r398, %r2795, %r2441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3089, %r398, %r2806, %r2447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3101, %r398, %r2817, %r2453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3098, %r398, %r2828, %r2459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2959, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2961, %r2959, %r2963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2964, %r462, %r2966, %r2961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2968, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2970, %r2968, %r2972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2973, %r462, %r2975, %r2970;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2977, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2979, %r2977, %r2981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2982, %r462, %r2984, %r2979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2986, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2988, %r2986, %r2990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2991, %r462, %r2993, %r2988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2995, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2997, %r2995, %r2999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3000, %r462, %r3002, %r2997;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3004, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3006, %r3004, %r3008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3009, %r462, %r3011, %r3006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3013, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3015, %r3013, %r3017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3018, %r462, %r3020, %r3015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3022, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3024, %r3022, %r3026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3027, %r462, %r3029, %r3024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3031, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3033, %r3031, %r3035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3036, %r465, %r3038, %r3033;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3040, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3042, %r3040, %r3044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3045, %r465, %r3047, %r3042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3049, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3051, %r3049, %r3053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3054, %r465, %r3056, %r3051;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3058, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3060, %r3058, %r3062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3063, %r465, %r3065, %r3060;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3067, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3069, %r3067, %r3071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3072, %r465, %r3074, %r3069;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3076, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3078, %r3076, %r3080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3081, %r465, %r3083, %r3078;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3085, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3087, %r3085, %r3089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3090, %r465, %r3092, %r3087;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3094, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3096, %r3094, %r3098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3099, %r465, %r3101, %r3096;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3103, %r468, %r2966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3106, %r462, %r2963, %r3103;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3110, %r468, %r2975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3113, %r462, %r2972, %r3110;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3117, %r468, %r2984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3120, %r462, %r2981, %r3117;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3124, %r468, %r2993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3127, %r462, %r2990, %r3124;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3131, %r468, %r3002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3134, %r462, %r2999, %r3131;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3138, %r468, %r3011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3141, %r462, %r3008, %r3138;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3145, %r468, %r3020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3148, %r462, %r3017, %r3145;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3152, %r468, %r3029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3155, %r462, %r3026, %r3152;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3159, %r471, %r3038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3162, %r465, %r3035, %r3159;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3166, %r471, %r3047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3169, %r465, %r3044, %r3166;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3173, %r471, %r3056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3176, %r465, %r3053, %r3173;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3180, %r471, %r3065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3183, %r465, %r3062, %r3180;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3187, %r471, %r3074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3190, %r465, %r3071, %r3187;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3194, %r471, %r3083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3197, %r465, %r3080, %r3194;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3201, %r471, %r3092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3204, %r465, %r3089, %r3201;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3208, %r471, %r3101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3211, %r465, %r3098, %r3208;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3382, %r3379}, {%r517, %r523, %r520, %r526}, {%r2964, %r3106}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3391, %r3388}, {%r517, %r523, %r520, %r526}, {%r2973, %r3113}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3400, %r3397}, {%r517, %r523, %r520, %r526}, {%r2982, %r3120}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3409, %r3406}, {%r517, %r523, %r520, %r526}, {%r2991, %r3127}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3418, %r3415}, {%r517, %r523, %r520, %r526}, {%r3000, %r3134}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3427, %r3424}, {%r517, %r523, %r520, %r526}, {%r3009, %r3141}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3436, %r3433}, {%r517, %r523, %r520, %r526}, {%r3018, %r3148}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3445, %r3442}, {%r517, %r523, %r520, %r526}, {%r3027, %r3155}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3454, %r3451}, {%r517, %r523, %r520, %r526}, {%r3036, %r3162}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3463, %r3460}, {%r517, %r523, %r520, %r526}, {%r3045, %r3169}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3472, %r3469}, {%r517, %r523, %r520, %r526}, {%r3054, %r3176}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3481, %r3478}, {%r517, %r523, %r520, %r526}, {%r3063, %r3183}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3490, %r3487}, {%r517, %r523, %r520, %r526}, {%r3072, %r3190}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3499, %r3496}, {%r517, %r523, %r520, %r526}, {%r3081, %r3197}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3508, %r3505}, {%r517, %r523, %r520, %r526}, {%r3090, %r3204}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3517, %r3514}, {%r517, %r523, %r520, %r526}, {%r3099, %r3211}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3375, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3377, %r3375, %r3379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3380, %r567, %r3382, %r3377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3384, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3386, %r3384, %r3388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3389, %r567, %r3391, %r3386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3393, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3395, %r3393, %r3397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3398, %r567, %r3400, %r3395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3402, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3404, %r3402, %r3406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3407, %r567, %r3409, %r3404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3411, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3413, %r3411, %r3415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3416, %r567, %r3418, %r3413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3420, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3422, %r3420, %r3424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3425, %r567, %r3427, %r3422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3429, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3431, %r3429, %r3433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3434, %r567, %r3436, %r3431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3438, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3440, %r3438, %r3442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3443, %r567, %r3445, %r3440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3447, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3449, %r3447, %r3451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3452, %r567, %r3454, %r3449;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3456, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3458, %r3456, %r3460;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3461, %r567, %r3463, %r3458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3465, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3467, %r3465, %r3469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3470, %r567, %r3472, %r3467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3474, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3476, %r3474, %r3478;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3479, %r567, %r3481, %r3476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3483, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3485, %r3483, %r3487;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3488, %r567, %r3490, %r3485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3492, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3494, %r3492, %r3496;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3497, %r567, %r3499, %r3494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3501, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3503, %r3501, %r3505;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3506, %r567, %r3508, %r3503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3510, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3512, %r3510, %r3514;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3515, %r567, %r3517, %r3512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3519, %r570, %r3382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3522, %r567, %r3379, %r3519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3526, %r570, %r3391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3529, %r567, %r3388, %r3526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3533, %r570, %r3400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3536, %r567, %r3397, %r3533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3540, %r570, %r3409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3543, %r567, %r3406, %r3540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3547, %r570, %r3418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3550, %r567, %r3415, %r3547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3554, %r570, %r3427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3557, %r567, %r3424, %r3554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3561, %r570, %r3436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3564, %r567, %r3433, %r3561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3568, %r570, %r3445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3571, %r567, %r3442, %r3568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3575, %r570, %r3454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3578, %r567, %r3451, %r3575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3582, %r570, %r3463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3585, %r567, %r3460, %r3582;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3589, %r570, %r3472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3592, %r567, %r3469, %r3589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3596, %r570, %r3481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3599, %r567, %r3478, %r3596;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3603, %r570, %r3490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3606, %r567, %r3487, %r3603;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3610, %r570, %r3499;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3613, %r567, %r3496, %r3610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3617, %r570, %r3508;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3620, %r567, %r3505, %r3617;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3624, %r570, %r3517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3627, %r567, %r3514, %r3624;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3920, %r3923}, {%r605, %r611, %r608, %r614}, {%r3380, %r3522}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3926, %r3929}, {%r605, %r611, %r608, %r614}, {%r3389, %r3529}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3932, %r3935}, {%r605, %r611, %r608, %r614}, {%r3398, %r3536}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3938, %r3941}, {%r605, %r611, %r608, %r614}, {%r3407, %r3543}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3944, %r3947}, {%r605, %r611, %r608, %r614}, {%r3416, %r3550}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3950, %r3953}, {%r605, %r611, %r608, %r614}, {%r3425, %r3557}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3956, %r3959}, {%r605, %r611, %r608, %r614}, {%r3434, %r3564}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3962, %r3965}, {%r605, %r611, %r608, %r614}, {%r3443, %r3571}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3921, %r3924}, {%r605, %r611, %r608, %r614}, {%r3452, %r3578}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3927, %r3930}, {%r605, %r611, %r608, %r614}, {%r3461, %r3585}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3933, %r3936}, {%r605, %r611, %r608, %r614}, {%r3470, %r3592}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3939, %r3942}, {%r605, %r611, %r608, %r614}, {%r3479, %r3599}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3945, %r3948}, {%r605, %r611, %r608, %r614}, {%r3488, %r3606}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3951, %r3954}, {%r605, %r611, %r608, %r614}, {%r3497, %r3613}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3957, %r3960}, {%r605, %r611, %r608, %r614}, {%r3506, %r3620}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3963, %r3966}, {%r605, %r611, %r608, %r614}, {%r3515, %r3627}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3919, %r3920, %r3921;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3922, %r3923, %r3924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3925, %r3926, %r3927;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3928, %r3929, %r3930;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3931, %r3932, %r3933;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3934, %r3935, %r3936;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3937, %r3938, %r3939;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3940, %r3941, %r3942;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3943, %r3944, %r3945;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3946, %r3947, %r3948;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3949, %r3950, %r3951;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3952, %r3953, %r3954;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3955, %r3956, %r3957;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3958, %r3959, %r3960;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3961, %r3962, %r3963;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3964, %r3965, %r3966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3967, %r3920, %r3921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3970, %r3923, %r3924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3973, %r3926, %r3927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3976, %r3929, %r3930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3979, %r3932, %r3933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3982, %r3935, %r3936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3985, %r3938, %r3939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3988, %r3941, %r3942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3991, %r3944, %r3945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3994, %r3947, %r3948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3997, %r3950, %r3951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4000, %r3953, %r3954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4003, %r3956, %r3957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4006, %r3959, %r3960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4009, %r3962, %r3963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4012, %r3965, %r3966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4015, %r186, %r3919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4018, %r186, %r3922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4021, %r186, %r3925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4024, %r186, %r3928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4027, %r186, %r3931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4030, %r186, %r3934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4033, %r186, %r3937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4036, %r186, %r3940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4039, %r186, %r3943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4042, %r186, %r3946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4045, %r186, %r3949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4048, %r186, %r3952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4051, %r186, %r3955;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4054, %r186, %r3958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4057, %r186, %r3961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4060, %r186, %r3964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4063, %r187, %r3967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4066, %r187, %r3970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4069, %r187, %r3973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4072, %r187, %r3976;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4075, %r187, %r3979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4078, %r187, %r3982;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4081, %r187, %r3985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4084, %r187, %r3988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4087, %r187, %r3991;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4090, %r187, %r3994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4093, %r187, %r3997;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4096, %r187, %r4000;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4099, %r187, %r4003;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4102, %r187, %r4006;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4105, %r187, %r4009;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4108, %r187, %r4012;
	// end inline asm
	// begin inline asm
	mov.b32 %r4111, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4112, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4113, %r4015, %r4111;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4116, %r4113, %r4112;
	// end inline asm
	// begin inline asm
	mov.b32 %r4119, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4120, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4121, %r4018, %r4119;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4124, %r4121, %r4120;
	// end inline asm
	// begin inline asm
	mov.b32 %r4127, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4128, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4129, %r4021, %r4127;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4132, %r4129, %r4128;
	// end inline asm
	// begin inline asm
	mov.b32 %r4135, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4136, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4137, %r4024, %r4135;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4140, %r4137, %r4136;
	// end inline asm
	// begin inline asm
	mov.b32 %r4143, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4144, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4145, %r4027, %r4143;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4148, %r4145, %r4144;
	// end inline asm
	// begin inline asm
	mov.b32 %r4151, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4152, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4153, %r4030, %r4151;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4156, %r4153, %r4152;
	// end inline asm
	// begin inline asm
	mov.b32 %r4159, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4160, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4161, %r4033, %r4159;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4164, %r4161, %r4160;
	// end inline asm
	// begin inline asm
	mov.b32 %r4167, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4168, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4169, %r4036, %r4167;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4172, %r4169, %r4168;
	// end inline asm
	// begin inline asm
	mov.b32 %r4175, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4176, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4177, %r4039, %r4175;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4180, %r4177, %r4176;
	// end inline asm
	// begin inline asm
	mov.b32 %r4183, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4184, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4185, %r4042, %r4183;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4188, %r4185, %r4184;
	// end inline asm
	// begin inline asm
	mov.b32 %r4191, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4192, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4193, %r4045, %r4191;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4196, %r4193, %r4192;
	// end inline asm
	// begin inline asm
	mov.b32 %r4199, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4200, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4201, %r4048, %r4199;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4204, %r4201, %r4200;
	// end inline asm
	// begin inline asm
	mov.b32 %r4207, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4208, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4209, %r4051, %r4207;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4212, %r4209, %r4208;
	// end inline asm
	// begin inline asm
	mov.b32 %r4215, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4216, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4217, %r4054, %r4215;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4220, %r4217, %r4216;
	// end inline asm
	// begin inline asm
	mov.b32 %r4223, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4225, %r4057, %r4223;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4228, %r4225, %r4224;
	// end inline asm
	// begin inline asm
	mov.b32 %r4231, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4232, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4233, %r4060, %r4231;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4236, %r4233, %r4232;
	// end inline asm
	// begin inline asm
	mov.b32 %r4239, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4240, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4241, %r4063, %r4239;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4244, %r4241, %r4240;
	// end inline asm
	// begin inline asm
	mov.b32 %r4247, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4248, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4249, %r4066, %r4247;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4252, %r4249, %r4248;
	// end inline asm
	// begin inline asm
	mov.b32 %r4255, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4256, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4257, %r4069, %r4255;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4260, %r4257, %r4256;
	// end inline asm
	// begin inline asm
	mov.b32 %r4263, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4264, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4265, %r4072, %r4263;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4268, %r4265, %r4264;
	// end inline asm
	// begin inline asm
	mov.b32 %r4271, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4272, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4273, %r4075, %r4271;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4276, %r4273, %r4272;
	// end inline asm
	// begin inline asm
	mov.b32 %r4279, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4280, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4281, %r4078, %r4279;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4284, %r4281, %r4280;
	// end inline asm
	// begin inline asm
	mov.b32 %r4287, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4288, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4289, %r4081, %r4287;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4292, %r4289, %r4288;
	// end inline asm
	// begin inline asm
	mov.b32 %r4295, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4296, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4297, %r4084, %r4295;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4300, %r4297, %r4296;
	// end inline asm
	// begin inline asm
	mov.b32 %r4303, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4304, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4305, %r4087, %r4303;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4308, %r4305, %r4304;
	// end inline asm
	// begin inline asm
	mov.b32 %r4311, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4312, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4313, %r4090, %r4311;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4316, %r4313, %r4312;
	// end inline asm
	// begin inline asm
	mov.b32 %r4319, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4320, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4321, %r4093, %r4319;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4324, %r4321, %r4320;
	// end inline asm
	// begin inline asm
	mov.b32 %r4327, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4328, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4329, %r4096, %r4327;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4332, %r4329, %r4328;
	// end inline asm
	// begin inline asm
	mov.b32 %r4335, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4336, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4337, %r4099, %r4335;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4340, %r4337, %r4336;
	// end inline asm
	// begin inline asm
	mov.b32 %r4343, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4344, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4345, %r4102, %r4343;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4348, %r4345, %r4344;
	// end inline asm
	// begin inline asm
	mov.b32 %r4351, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4352, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4353, %r4105, %r4351;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4356, %r4353, %r4352;
	// end inline asm
	// begin inline asm
	mov.b32 %r4359, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4360, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4361, %r4108, %r4359;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4364, %r4361, %r4360;
	// end inline asm
	// begin inline asm
	mov.b32 %r4370, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4368, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4369, %r4370, %r4368;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4372, %r4116, %r4369;
	// end inline asm
	// begin inline asm
	mov.b32 %r4375, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4376, %r4370, %r4375;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4379, %r4124, %r4376;
	// end inline asm
	// begin inline asm
	mov.b32 %r4382, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4383, %r4370, %r4382;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4386, %r4132, %r4383;
	// end inline asm
	// begin inline asm
	mov.b32 %r4389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4390, %r4370, %r4389;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4393, %r4140, %r4390;
	// end inline asm
	mov.u32 	%r4399, 25152;
	// begin inline asm
	prmt.b32 %r4396, %r4372, %r4386, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4400, %r4379, %r4393, %r4399;
	// end inline asm
	shl.b32 	%r4407, %r4400, 4;
	mov.u32 	%r4405, 252645135;
	// begin inline asm
	lop3.b32 %r4404, %r4405, %r4396, %r4407, 202;
	// end inline asm
	xor.b32  	%r16222, %r4404, -2004318072;
	// begin inline asm
	mov.b32 %r4411, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4410, %r4411, %r4409;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4413, %r4148, %r4410;
	// end inline asm
	// begin inline asm
	mov.b32 %r4416, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4417, %r4411, %r4416;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4420, %r4156, %r4417;
	// end inline asm
	// begin inline asm
	mov.b32 %r4423, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4424, %r4411, %r4423;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4427, %r4164, %r4424;
	// end inline asm
	// begin inline asm
	mov.b32 %r4430, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4431, %r4411, %r4430;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4434, %r4172, %r4431;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4437, %r4413, %r4427, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4441, %r4420, %r4434, %r4399;
	// end inline asm
	shl.b32 	%r4448, %r4441, 4;
	// begin inline asm
	lop3.b32 %r4445, %r4405, %r4437, %r4448, 202;
	// end inline asm
	xor.b32  	%r16223, %r4445, -2004318072;
	// begin inline asm
	mov.b32 %r4452, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4450, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4451, %r4452, %r4450;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4454, %r4180, %r4451;
	// end inline asm
	// begin inline asm
	mov.b32 %r4457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4458, %r4452, %r4457;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4461, %r4188, %r4458;
	// end inline asm
	// begin inline asm
	mov.b32 %r4464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4465, %r4452, %r4464;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4468, %r4196, %r4465;
	// end inline asm
	// begin inline asm
	mov.b32 %r4471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4472, %r4452, %r4471;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4475, %r4204, %r4472;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4478, %r4454, %r4468, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4482, %r4461, %r4475, %r4399;
	// end inline asm
	shl.b32 	%r4489, %r4482, 4;
	// begin inline asm
	lop3.b32 %r4486, %r4405, %r4478, %r4489, 202;
	// end inline asm
	xor.b32  	%r16224, %r4486, -2004318072;
	// begin inline asm
	mov.b32 %r4493, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4492, %r4493, %r4491;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4495, %r4212, %r4492;
	// end inline asm
	// begin inline asm
	mov.b32 %r4498, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4499, %r4493, %r4498;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4502, %r4220, %r4499;
	// end inline asm
	// begin inline asm
	mov.b32 %r4505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4506, %r4493, %r4505;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4509, %r4228, %r4506;
	// end inline asm
	// begin inline asm
	mov.b32 %r4512, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4513, %r4493, %r4512;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4516, %r4236, %r4513;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4519, %r4495, %r4509, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4523, %r4502, %r4516, %r4399;
	// end inline asm
	shl.b32 	%r4530, %r4523, 4;
	// begin inline asm
	lop3.b32 %r4527, %r4405, %r4519, %r4530, 202;
	// end inline asm
	xor.b32  	%r16225, %r4527, -2004318072;
	// begin inline asm
	mov.b32 %r4534, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4533, %r4534, %r4532;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4536, %r4244, %r4533;
	// end inline asm
	// begin inline asm
	mov.b32 %r4539, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4540, %r4534, %r4539;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4543, %r4252, %r4540;
	// end inline asm
	// begin inline asm
	mov.b32 %r4546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4547, %r4534, %r4546;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4550, %r4260, %r4547;
	// end inline asm
	// begin inline asm
	mov.b32 %r4553, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4554, %r4534, %r4553;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4557, %r4268, %r4554;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4560, %r4536, %r4550, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4564, %r4543, %r4557, %r4399;
	// end inline asm
	shl.b32 	%r4571, %r4564, 4;
	// begin inline asm
	lop3.b32 %r4568, %r4405, %r4560, %r4571, 202;
	// end inline asm
	xor.b32  	%r16226, %r4568, -2004318072;
	// begin inline asm
	mov.b32 %r4575, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4574, %r4575, %r4573;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4577, %r4276, %r4574;
	// end inline asm
	// begin inline asm
	mov.b32 %r4580, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4581, %r4575, %r4580;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4584, %r4284, %r4581;
	// end inline asm
	// begin inline asm
	mov.b32 %r4587, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4588, %r4575, %r4587;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4591, %r4292, %r4588;
	// end inline asm
	// begin inline asm
	mov.b32 %r4594, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4595, %r4575, %r4594;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4598, %r4300, %r4595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4601, %r4577, %r4591, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4605, %r4584, %r4598, %r4399;
	// end inline asm
	shl.b32 	%r4612, %r4605, 4;
	// begin inline asm
	lop3.b32 %r4609, %r4405, %r4601, %r4612, 202;
	// end inline asm
	xor.b32  	%r16227, %r4609, -2004318072;
	// begin inline asm
	mov.b32 %r4616, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4614, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4615, %r4616, %r4614;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4618, %r4308, %r4615;
	// end inline asm
	// begin inline asm
	mov.b32 %r4621, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4622, %r4616, %r4621;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4625, %r4316, %r4622;
	// end inline asm
	// begin inline asm
	mov.b32 %r4628, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4629, %r4616, %r4628;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4632, %r4324, %r4629;
	// end inline asm
	// begin inline asm
	mov.b32 %r4635, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4636, %r4616, %r4635;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4639, %r4332, %r4636;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4642, %r4618, %r4632, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4646, %r4625, %r4639, %r4399;
	// end inline asm
	shl.b32 	%r4653, %r4646, 4;
	// begin inline asm
	lop3.b32 %r4650, %r4405, %r4642, %r4653, 202;
	// end inline asm
	xor.b32  	%r16228, %r4650, -2004318072;
	// begin inline asm
	mov.b32 %r4657, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4655, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4656, %r4657, %r4655;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4659, %r4340, %r4656;
	// end inline asm
	// begin inline asm
	mov.b32 %r4662, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4663, %r4657, %r4662;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4666, %r4348, %r4663;
	// end inline asm
	// begin inline asm
	mov.b32 %r4669, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4670, %r4657, %r4669;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4673, %r4356, %r4670;
	// end inline asm
	// begin inline asm
	mov.b32 %r4676, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4677, %r4657, %r4676;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4680, %r4364, %r4677;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4683, %r4659, %r4673, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4687, %r4666, %r4680, %r4399;
	// end inline asm
	shl.b32 	%r4694, %r4687, 4;
	// begin inline asm
	lop3.b32 %r4691, %r4405, %r4683, %r4694, 202;
	// end inline asm
	xor.b32  	%r16229, %r4691, -2004318072;
	setp.eq.s32 	%p328, %r16405, 0;
	selp.b32 	%r16230, 0, 4161, %p328;
	add.s32 	%r16231, %r135, %r16230;
	mul.wide.u32 	%rd115, %r16231, 4;
	add.s64 	%rd116, %rd51, %rd115;
	st.shared.u32 	[%rd116], %r16222;
	add.s32 	%r16232, %r136, %r16230;
	mul.wide.u32 	%rd117, %r16232, 4;
	add.s64 	%rd118, %rd51, %rd117;
	st.shared.u32 	[%rd118], %r16223;
	add.s32 	%r16233, %r137, %r16230;
	mul.wide.u32 	%rd119, %r16233, 4;
	add.s64 	%rd120, %rd51, %rd119;
	st.shared.u32 	[%rd120], %r16224;
	add.s32 	%r16234, %r138, %r16230;
	mul.wide.u32 	%rd121, %r16234, 4;
	add.s64 	%rd122, %rd51, %rd121;
	st.shared.u32 	[%rd122], %r16225;
	add.s32 	%r16235, %r139, %r16230;
	mul.wide.u32 	%rd123, %r16235, 4;
	add.s64 	%rd124, %rd51, %rd123;
	st.shared.u32 	[%rd124], %r16226;
	add.s32 	%r16236, %r140, %r16230;
	mul.wide.u32 	%rd125, %r16236, 4;
	add.s64 	%rd126, %rd51, %rd125;
	st.shared.u32 	[%rd126], %r16227;
	add.s32 	%r16237, %r141, %r16230;
	mul.wide.u32 	%rd127, %r16237, 4;
	add.s64 	%rd128, %rd51, %rd127;
	st.shared.u32 	[%rd128], %r16228;
	add.s32 	%r16238, %r142, %r16230;
	mul.wide.u32 	%rd129, %r16238, 4;
	add.s64 	%rd130, %rd51, %rd129;
	st.shared.u32 	[%rd130], %r16229;
	ld.shared.u32 	%r16380, [%rd100];
	ld.shared.u32 	%r16381, [%rd102];
	ld.shared.u32 	%r16382, [%rd104];
	ld.shared.u32 	%r16383, [%rd106];
	ld.shared.u32 	%r16392, [%rd108];
	ld.shared.u32 	%r16393, [%rd110];
	ld.shared.u32 	%r16394, [%rd112];
	ld.shared.u32 	%r16395, [%rd114];
	// begin inline asm
	mov.b32 %r4700, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4711, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4699, %r16380, -2004318072;
	// begin inline asm
	lop3.b32 %r4697, %r882, %r4699, %r4700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4701, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4702, %r4700, %r4701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4705, %r4697, %r4702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4708, %r893, %r4699, %r4711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4712, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4713, %r4711, %r4712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4716, %r4708, %r4713;
	// end inline asm
	shr.u32 	%r4721, %r4699, 8;
	// begin inline asm
	lop3.b32 %r4719, %r882, %r4721, %r4700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4723, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4724, %r4700, %r4723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4727, %r4719, %r4724;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4730, %r893, %r4721, %r4711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4734, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4735, %r4711, %r4734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4738, %r4730, %r4735;
	// end inline asm
	// begin inline asm
	mov.b32 %r4746, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4757, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4745, %r16381, -2004318072;
	// begin inline asm
	lop3.b32 %r4743, %r882, %r4745, %r4746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4747, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4748, %r4746, %r4747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4751, %r4743, %r4748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4754, %r893, %r4745, %r4757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4758, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4759, %r4757, %r4758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4762, %r4754, %r4759;
	// end inline asm
	shr.u32 	%r4767, %r4745, 8;
	// begin inline asm
	lop3.b32 %r4765, %r882, %r4767, %r4746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4769, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4770, %r4746, %r4769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4773, %r4765, %r4770;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4776, %r893, %r4767, %r4757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4780, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4781, %r4757, %r4780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4784, %r4776, %r4781;
	// end inline asm
	// begin inline asm
	mov.b32 %r4792, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4803, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4791, %r16382, -2004318072;
	// begin inline asm
	lop3.b32 %r4789, %r882, %r4791, %r4792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4793, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4794, %r4792, %r4793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4797, %r4789, %r4794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4800, %r893, %r4791, %r4803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4804, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4805, %r4803, %r4804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4808, %r4800, %r4805;
	// end inline asm
	shr.u32 	%r4813, %r4791, 8;
	// begin inline asm
	lop3.b32 %r4811, %r882, %r4813, %r4792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4815, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4816, %r4792, %r4815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4819, %r4811, %r4816;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4822, %r893, %r4813, %r4803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4826, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4827, %r4803, %r4826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4830, %r4822, %r4827;
	// end inline asm
	// begin inline asm
	mov.b32 %r4838, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4849, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4837, %r16383, -2004318072;
	// begin inline asm
	lop3.b32 %r4835, %r882, %r4837, %r4838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4839, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4840, %r4838, %r4839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4843, %r4835, %r4840;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4846, %r893, %r4837, %r4849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4850, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4851, %r4849, %r4850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4854, %r4846, %r4851;
	// end inline asm
	shr.u32 	%r4859, %r4837, 8;
	// begin inline asm
	lop3.b32 %r4857, %r882, %r4859, %r4838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4861, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4862, %r4838, %r4861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4865, %r4857, %r4862;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4868, %r893, %r4859, %r4849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4872, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4873, %r4849, %r4872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4876, %r4868, %r4873;
	// end inline asm
	// begin inline asm
	mov.b32 %r4884, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4895, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4883, %r16392, -2004318072;
	// begin inline asm
	lop3.b32 %r4881, %r882, %r4883, %r4884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4885, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4886, %r4884, %r4885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4889, %r4881, %r4886;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4892, %r893, %r4883, %r4895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4896, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4897, %r4895, %r4896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4900, %r4892, %r4897;
	// end inline asm
	shr.u32 	%r4905, %r4883, 8;
	// begin inline asm
	lop3.b32 %r4903, %r882, %r4905, %r4884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4907, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4908, %r4884, %r4907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4911, %r4903, %r4908;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4914, %r893, %r4905, %r4895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4918, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4919, %r4895, %r4918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4922, %r4914, %r4919;
	// end inline asm
	// begin inline asm
	mov.b32 %r4930, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4941, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4929, %r16393, -2004318072;
	// begin inline asm
	lop3.b32 %r4927, %r882, %r4929, %r4930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4931, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4932, %r4930, %r4931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4935, %r4927, %r4932;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4938, %r893, %r4929, %r4941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4943, %r4941, %r4942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4946, %r4938, %r4943;
	// end inline asm
	shr.u32 	%r4951, %r4929, 8;
	// begin inline asm
	lop3.b32 %r4949, %r882, %r4951, %r4930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4953, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4954, %r4930, %r4953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4957, %r4949, %r4954;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4960, %r893, %r4951, %r4941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4965, %r4941, %r4964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4968, %r4960, %r4965;
	// end inline asm
	// begin inline asm
	mov.b32 %r4976, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4987, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4975, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r4973, %r882, %r4975, %r4976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4977, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4978, %r4976, %r4977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4981, %r4973, %r4978;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4984, %r893, %r4975, %r4987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4988, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4989, %r4987, %r4988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4992, %r4984, %r4989;
	// end inline asm
	shr.u32 	%r4997, %r4975, 8;
	// begin inline asm
	lop3.b32 %r4995, %r882, %r4997, %r4976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5000, %r4976, %r4999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5003, %r4995, %r5000;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5006, %r893, %r4997, %r4987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5010, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5011, %r4987, %r5010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5014, %r5006, %r5011;
	// end inline asm
	// begin inline asm
	mov.b32 %r5022, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5033, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r5021, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r5019, %r882, %r5021, %r5022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5023, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5024, %r5022, %r5023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5027, %r5019, %r5024;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5030, %r893, %r5021, %r5033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5034, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5035, %r5033, %r5034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5038, %r5030, %r5035;
	// end inline asm
	shr.u32 	%r5043, %r5021, 8;
	// begin inline asm
	lop3.b32 %r5041, %r882, %r5043, %r5022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5045, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5046, %r5022, %r5045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5049, %r5041, %r5046;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5052, %r893, %r5043, %r5033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5057, %r5033, %r5056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5060, %r5052, %r5057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5063, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5065, %r5063, %r4705;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5068, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5070, %r5068, %r4716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5073, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5075, %r5073, %r4727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5078, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5080, %r5078, %r4738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5083, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5085, %r5083, %r4751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5088, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5090, %r5088, %r4762;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5093, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5095, %r5093, %r4773;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5098, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5100, %r5098, %r4784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5103, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5105, %r5103, %r4797;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5108, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5110, %r5108, %r4808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5113, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5115, %r5113, %r4819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5118, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5120, %r5118, %r4830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5123, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5125, %r5123, %r4843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5128, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5130, %r5128, %r4854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5133, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5135, %r5133, %r4865;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5138, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5140, %r5138, %r4876;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5143, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5145, %r5143, %r4889;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5148, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5150, %r5148, %r4900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5153, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5155, %r5153, %r4911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5158, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5160, %r5158, %r4922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5163, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5165, %r5163, %r4935;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5168, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5170, %r5168, %r4946;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5173, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5175, %r5173, %r4957;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5178, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5180, %r5178, %r4968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5183, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5185, %r5183, %r4981;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5188, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5190, %r5188, %r4992;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5193, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5195, %r5193, %r5003;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5198, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5200, %r5198, %r5014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5203, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5205, %r5203, %r5027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5208, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5210, %r5208, %r5038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5213, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5215, %r5213, %r5049;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5218, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5220, %r5218, %r5060;
	// end inline asm
	// begin inline asm
	mov.b32 %r5228, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5239, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5225, %r882, %r1907, %r5228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5229, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5230, %r5228, %r5229;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5233, %r5225, %r5230;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5236, %r893, %r1907, %r5239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5240, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5241, %r5239, %r5240;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5244, %r5236, %r5241;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5247, %r882, %r1929, %r5228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5252, %r5228, %r5251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5255, %r5247, %r5252;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5258, %r893, %r1929, %r5239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5263, %r5239, %r5262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5266, %r5258, %r5263;
	// end inline asm
	// begin inline asm
	mov.b32 %r5274, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5285, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5271, %r882, %r1953, %r5274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5275, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5276, %r5274, %r5275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5279, %r5271, %r5276;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5282, %r893, %r1953, %r5285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5286, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5287, %r5285, %r5286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5290, %r5282, %r5287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5293, %r882, %r1975, %r5274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5298, %r5274, %r5297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5301, %r5293, %r5298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5304, %r893, %r1975, %r5285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5309, %r5285, %r5308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5312, %r5304, %r5309;
	// end inline asm
	// begin inline asm
	mov.b32 %r5320, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5331, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5317, %r882, %r1999, %r5320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5321, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5322, %r5320, %r5321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5325, %r5317, %r5322;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5328, %r893, %r1999, %r5331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5333, %r5331, %r5332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5336, %r5328, %r5333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5339, %r882, %r2021, %r5320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5344, %r5320, %r5343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5347, %r5339, %r5344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5350, %r893, %r2021, %r5331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5354, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5355, %r5331, %r5354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5358, %r5350, %r5355;
	// end inline asm
	// begin inline asm
	mov.b32 %r5366, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5377, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5363, %r882, %r2045, %r5366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5368, %r5366, %r5367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5371, %r5363, %r5368;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5374, %r893, %r2045, %r5377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5379, %r5377, %r5378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5382, %r5374, %r5379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5385, %r882, %r2067, %r5366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5390, %r5366, %r5389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5393, %r5385, %r5390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5396, %r893, %r2067, %r5377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5401, %r5377, %r5400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5404, %r5396, %r5401;
	// end inline asm
	// begin inline asm
	mov.b32 %r5412, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5423, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5409, %r882, %r2091, %r5412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5413, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5414, %r5412, %r5413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5417, %r5409, %r5414;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5420, %r893, %r2091, %r5423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5425, %r5423, %r5424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5428, %r5420, %r5425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5431, %r882, %r2113, %r5412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5436, %r5412, %r5435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5439, %r5431, %r5436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5442, %r893, %r2113, %r5423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5447, %r5423, %r5446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5450, %r5442, %r5447;
	// end inline asm
	// begin inline asm
	mov.b32 %r5458, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5469, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5455, %r882, %r2137, %r5458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5460, %r5458, %r5459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5463, %r5455, %r5460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5466, %r893, %r2137, %r5469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5471, %r5469, %r5470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5474, %r5466, %r5471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5477, %r882, %r2159, %r5458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5482, %r5458, %r5481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5485, %r5477, %r5482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5488, %r893, %r2159, %r5469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5493, %r5469, %r5492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5496, %r5488, %r5493;
	// end inline asm
	// begin inline asm
	mov.b32 %r5504, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5515, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5501, %r882, %r2183, %r5504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5506, %r5504, %r5505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5509, %r5501, %r5506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5512, %r893, %r2183, %r5515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5517, %r5515, %r5516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5520, %r5512, %r5517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5523, %r882, %r2205, %r5504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5528, %r5504, %r5527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5531, %r5523, %r5528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5534, %r893, %r2205, %r5515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5539, %r5515, %r5538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5542, %r5534, %r5539;
	// end inline asm
	// begin inline asm
	mov.b32 %r5550, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5561, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5547, %r882, %r2229, %r5550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5552, %r5550, %r5551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5555, %r5547, %r5552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5558, %r893, %r2229, %r5561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5563, %r5561, %r5562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5566, %r5558, %r5563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5569, %r882, %r2251, %r5550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5574, %r5550, %r5573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5577, %r5569, %r5574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5580, %r893, %r2251, %r5561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5585, %r5561, %r5584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5588, %r5580, %r5585;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5591, %r308, %r5233, %r5065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5595, %r308, %r5244, %r5070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5599, %r308, %r5255, %r5075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5603, %r308, %r5266, %r5080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5607, %r308, %r5279, %r5085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5611, %r308, %r5290, %r5090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5615, %r308, %r5301, %r5095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5619, %r308, %r5312, %r5100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5623, %r308, %r5325, %r5105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5627, %r308, %r5336, %r5110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5631, %r308, %r5347, %r5115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5635, %r308, %r5358, %r5120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5639, %r308, %r5371, %r5125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5643, %r308, %r5382, %r5130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5647, %r308, %r5393, %r5135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5651, %r308, %r5404, %r5140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5655, %r326, %r5417, %r5145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5659, %r326, %r5428, %r5150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5663, %r326, %r5439, %r5155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5667, %r326, %r5450, %r5160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5671, %r326, %r5463, %r5165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5675, %r326, %r5474, %r5170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5679, %r326, %r5485, %r5175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5683, %r326, %r5496, %r5180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5687, %r326, %r5509, %r5185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5691, %r326, %r5520, %r5190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5695, %r326, %r5531, %r5195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5699, %r326, %r5542, %r5200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5703, %r326, %r5555, %r5205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5707, %r326, %r5566, %r5210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5711, %r326, %r5577, %r5215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5715, %r326, %r5588, %r5220;
	// end inline asm
	// begin inline asm
	mov.b32 %r5724, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5735, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5721, %r882, %r2467, %r5724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5725, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5726, %r5724, %r5725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5729, %r5721, %r5726;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5732, %r893, %r2467, %r5735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5736, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5737, %r5735, %r5736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5740, %r5732, %r5737;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5743, %r882, %r2489, %r5724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5747, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5748, %r5724, %r5747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5751, %r5743, %r5748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5754, %r893, %r2489, %r5735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5758, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5759, %r5735, %r5758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5762, %r5754, %r5759;
	// end inline asm
	// begin inline asm
	mov.b32 %r5770, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5781, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5767, %r882, %r2513, %r5770, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5771, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5772, %r5770, %r5771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5775, %r5767, %r5772;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5778, %r893, %r2513, %r5781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5782, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5783, %r5781, %r5782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5786, %r5778, %r5783;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5789, %r882, %r2535, %r5770, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5793, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5794, %r5770, %r5793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5797, %r5789, %r5794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5800, %r893, %r2535, %r5781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5804, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5805, %r5781, %r5804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5808, %r5800, %r5805;
	// end inline asm
	// begin inline asm
	mov.b32 %r5816, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5827, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5813, %r882, %r2559, %r5816, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5817, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5818, %r5816, %r5817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5821, %r5813, %r5818;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5824, %r893, %r2559, %r5827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5828, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5829, %r5827, %r5828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5832, %r5824, %r5829;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5835, %r882, %r2581, %r5816, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5839, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5840, %r5816, %r5839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5843, %r5835, %r5840;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5846, %r893, %r2581, %r5827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5850, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5851, %r5827, %r5850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5854, %r5846, %r5851;
	// end inline asm
	// begin inline asm
	mov.b32 %r5862, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5873, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5859, %r882, %r2605, %r5862, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5863, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5864, %r5862, %r5863;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5867, %r5859, %r5864;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5870, %r893, %r2605, %r5873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5874, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5875, %r5873, %r5874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5878, %r5870, %r5875;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5881, %r882, %r2627, %r5862, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5885, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5886, %r5862, %r5885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5889, %r5881, %r5886;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5892, %r893, %r2627, %r5873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5896, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5897, %r5873, %r5896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5900, %r5892, %r5897;
	// end inline asm
	// begin inline asm
	mov.b32 %r5908, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5919, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5905, %r882, %r2651, %r5908, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5909, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5910, %r5908, %r5909;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5913, %r5905, %r5910;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5916, %r893, %r2651, %r5919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5920, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5921, %r5919, %r5920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5924, %r5916, %r5921;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5927, %r882, %r2673, %r5908, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5931, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5932, %r5908, %r5931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5935, %r5927, %r5932;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5938, %r893, %r2673, %r5919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5943, %r5919, %r5942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5946, %r5938, %r5943;
	// end inline asm
	// begin inline asm
	mov.b32 %r5954, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5965, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5951, %r882, %r2697, %r5954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5955, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5956, %r5954, %r5955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5959, %r5951, %r5956;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5962, %r893, %r2697, %r5965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5966, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5967, %r5965, %r5966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5970, %r5962, %r5967;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5973, %r882, %r2719, %r5954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5977, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5978, %r5954, %r5977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5981, %r5973, %r5978;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5984, %r893, %r2719, %r5965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5988, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5989, %r5965, %r5988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5992, %r5984, %r5989;
	// end inline asm
	// begin inline asm
	mov.b32 %r6000, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6011, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5997, %r882, %r2743, %r6000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6001, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6002, %r6000, %r6001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6005, %r5997, %r6002;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6008, %r893, %r2743, %r6011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6012, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6013, %r6011, %r6012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6016, %r6008, %r6013;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6019, %r882, %r2765, %r6000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6023, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6024, %r6000, %r6023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6027, %r6019, %r6024;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6030, %r893, %r2765, %r6011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6034, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6035, %r6011, %r6034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6038, %r6030, %r6035;
	// end inline asm
	// begin inline asm
	mov.b32 %r6046, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6057, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6043, %r882, %r2789, %r6046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6047, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6048, %r6046, %r6047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6051, %r6043, %r6048;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6054, %r893, %r2789, %r6057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6058, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6059, %r6057, %r6058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6062, %r6054, %r6059;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6065, %r882, %r2811, %r6046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6069, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6070, %r6046, %r6069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6073, %r6065, %r6070;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6076, %r893, %r2811, %r6057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6080, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6081, %r6057, %r6080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6084, %r6076, %r6081;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6087, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6089, %r6087, %r5729, %r5591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6093, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6095, %r6093, %r5740, %r5595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6099, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6101, %r6099, %r5751, %r5599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6105, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6107, %r6105, %r5762, %r5603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6111, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6113, %r6111, %r5775, %r5607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6117, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6119, %r6117, %r5786, %r5611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6123, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6125, %r6123, %r5797, %r5615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6129, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6131, %r6129, %r5808, %r5619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6135, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6137, %r6135, %r5821, %r5623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6141, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6143, %r6141, %r5832, %r5627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6147, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6149, %r6147, %r5843, %r5631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6153, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6155, %r6153, %r5854, %r5635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6159, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6161, %r6159, %r5867, %r5639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6165, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6167, %r6165, %r5878, %r5643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6171, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6173, %r6171, %r5889, %r5647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6177, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6179, %r6177, %r5900, %r5651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6183, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6185, %r6183, %r5913, %r5655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6189, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6191, %r6189, %r5924, %r5659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6195, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6197, %r6195, %r5935, %r5663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6201, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6203, %r6201, %r5946, %r5667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6207, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6209, %r6207, %r5959, %r5671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6213, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6215, %r6213, %r5970, %r5675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6219, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6221, %r6219, %r5981, %r5679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6225, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6227, %r6225, %r5992, %r5683;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6231, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6233, %r6231, %r6005, %r5687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6237, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6239, %r6237, %r6016, %r5691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6243, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6245, %r6243, %r6027, %r5695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6249, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6251, %r6249, %r6038, %r5699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6255, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6257, %r6255, %r6051, %r5703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6261, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6263, %r6261, %r6062, %r5707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6267, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6269, %r6267, %r6073, %r5711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6273, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6275, %r6273, %r6084, %r5715;
	// end inline asm
	// begin inline asm
	mov.b32 %r6284, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6295, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6281, %r882, %r883, %r6284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6286, %r6284, %r6285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6289, %r6281, %r6286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6292, %r893, %r883, %r6295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6296, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6297, %r6295, %r6296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6300, %r6292, %r6297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6303, %r882, %r905, %r6284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6307, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6308, %r6284, %r6307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6311, %r6303, %r6308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6314, %r893, %r905, %r6295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6318, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6319, %r6295, %r6318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6322, %r6314, %r6319;
	// end inline asm
	// begin inline asm
	mov.b32 %r6330, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6341, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6327, %r882, %r929, %r6330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6331, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6332, %r6330, %r6331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6335, %r6327, %r6332;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6338, %r893, %r929, %r6341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6343, %r6341, %r6342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6346, %r6338, %r6343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6349, %r882, %r951, %r6330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6354, %r6330, %r6353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6357, %r6349, %r6354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6360, %r893, %r951, %r6341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6364, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6365, %r6341, %r6364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6368, %r6360, %r6365;
	// end inline asm
	// begin inline asm
	mov.b32 %r6376, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6387, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6373, %r882, %r975, %r6376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6377, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6378, %r6376, %r6377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6381, %r6373, %r6378;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6384, %r893, %r975, %r6387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6389, %r6387, %r6388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6392, %r6384, %r6389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6395, %r882, %r997, %r6376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6400, %r6376, %r6399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6403, %r6395, %r6400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6406, %r893, %r997, %r6387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6411, %r6387, %r6410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6414, %r6406, %r6411;
	// end inline asm
	// begin inline asm
	mov.b32 %r6422, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6433, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6419, %r882, %r1021, %r6422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6423, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6424, %r6422, %r6423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6427, %r6419, %r6424;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6430, %r893, %r1021, %r6433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6435, %r6433, %r6434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6438, %r6430, %r6435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6441, %r882, %r1043, %r6422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6446, %r6422, %r6445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6449, %r6441, %r6446;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6452, %r893, %r1043, %r6433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6456, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6457, %r6433, %r6456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6460, %r6452, %r6457;
	// end inline asm
	// begin inline asm
	mov.b32 %r6468, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6479, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6465, %r882, %r1067, %r6468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6470, %r6468, %r6469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6473, %r6465, %r6470;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6476, %r893, %r1067, %r6479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6481, %r6479, %r6480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6484, %r6476, %r6481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6487, %r882, %r1089, %r6468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6492, %r6468, %r6491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6495, %r6487, %r6492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6498, %r893, %r1089, %r6479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6502, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6503, %r6479, %r6502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6506, %r6498, %r6503;
	// end inline asm
	// begin inline asm
	mov.b32 %r6514, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6525, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6511, %r882, %r1113, %r6514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6515, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6516, %r6514, %r6515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6519, %r6511, %r6516;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6522, %r893, %r1113, %r6525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6526, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6527, %r6525, %r6526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6530, %r6522, %r6527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6533, %r882, %r1135, %r6514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6538, %r6514, %r6537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6541, %r6533, %r6538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6544, %r893, %r1135, %r6525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6548, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6549, %r6525, %r6548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6552, %r6544, %r6549;
	// end inline asm
	// begin inline asm
	mov.b32 %r6560, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6571, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6557, %r882, %r1159, %r6560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6561, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6562, %r6560, %r6561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6565, %r6557, %r6562;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6568, %r893, %r1159, %r6571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6572, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6573, %r6571, %r6572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6576, %r6568, %r6573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6579, %r882, %r1181, %r6560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6584, %r6560, %r6583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6587, %r6579, %r6584;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6590, %r893, %r1181, %r6571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6594, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6595, %r6571, %r6594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6598, %r6590, %r6595;
	// end inline asm
	// begin inline asm
	mov.b32 %r6606, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6617, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6603, %r882, %r1205, %r6606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6607, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6608, %r6606, %r6607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6611, %r6603, %r6608;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6614, %r893, %r1205, %r6617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6618, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6619, %r6617, %r6618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6622, %r6614, %r6619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6625, %r882, %r1227, %r6606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6630, %r6606, %r6629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6633, %r6625, %r6630;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6636, %r893, %r1227, %r6617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6640, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6641, %r6617, %r6640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6644, %r6636, %r6641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6782, %r380, %r6289, %r6089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6779, %r380, %r6300, %r6095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6791, %r380, %r6311, %r6101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6788, %r380, %r6322, %r6107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6800, %r380, %r6335, %r6113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6797, %r380, %r6346, %r6119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6809, %r380, %r6357, %r6125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6806, %r380, %r6368, %r6131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6818, %r380, %r6381, %r6137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6815, %r380, %r6392, %r6143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r380, %r6403, %r6149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6824, %r380, %r6414, %r6155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6836, %r380, %r6427, %r6161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6833, %r380, %r6438, %r6167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r380, %r6449, %r6173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6842, %r380, %r6460, %r6179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6854, %r398, %r6473, %r6185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6851, %r398, %r6484, %r6191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6863, %r398, %r6495, %r6197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6860, %r398, %r6506, %r6203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6872, %r398, %r6519, %r6209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6869, %r398, %r6530, %r6215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6881, %r398, %r6541, %r6221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6878, %r398, %r6552, %r6227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6890, %r398, %r6565, %r6233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6887, %r398, %r6576, %r6239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6899, %r398, %r6587, %r6245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6896, %r398, %r6598, %r6251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6908, %r398, %r6611, %r6257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6905, %r398, %r6622, %r6263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6917, %r398, %r6633, %r6269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6914, %r398, %r6644, %r6275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6775, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6777, %r6775, %r6779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6780, %r462, %r6782, %r6777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6784, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6786, %r6784, %r6788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6789, %r462, %r6791, %r6786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6793, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6795, %r6793, %r6797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6798, %r462, %r6800, %r6795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6802, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6804, %r6802, %r6806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6807, %r462, %r6809, %r6804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6811, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6813, %r6811, %r6815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6816, %r462, %r6818, %r6813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6820, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6822, %r6820, %r6824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6825, %r462, %r6827, %r6822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6829, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6831, %r6829, %r6833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6834, %r462, %r6836, %r6831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6838, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6840, %r6838, %r6842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6843, %r462, %r6845, %r6840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6847, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6849, %r6847, %r6851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6852, %r465, %r6854, %r6849;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6856, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6858, %r6856, %r6860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6861, %r465, %r6863, %r6858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6865, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6867, %r6865, %r6869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6870, %r465, %r6872, %r6867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6874, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6876, %r6874, %r6878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6879, %r465, %r6881, %r6876;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6883, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6885, %r6883, %r6887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6888, %r465, %r6890, %r6885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6892, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6894, %r6892, %r6896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6897, %r465, %r6899, %r6894;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6901, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6903, %r6901, %r6905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6906, %r465, %r6908, %r6903;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6910, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6912, %r6910, %r6914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6915, %r465, %r6917, %r6912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6919, %r468, %r6782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6922, %r462, %r6779, %r6919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6926, %r468, %r6791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6929, %r462, %r6788, %r6926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6933, %r468, %r6800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6936, %r462, %r6797, %r6933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6940, %r468, %r6809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6943, %r462, %r6806, %r6940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6947, %r468, %r6818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6950, %r462, %r6815, %r6947;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6954, %r468, %r6827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6957, %r462, %r6824, %r6954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6961, %r468, %r6836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6964, %r462, %r6833, %r6961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6968, %r468, %r6845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6971, %r462, %r6842, %r6968;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6975, %r471, %r6854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6978, %r465, %r6851, %r6975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6982, %r471, %r6863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6985, %r465, %r6860, %r6982;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6989, %r471, %r6872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6992, %r465, %r6869, %r6989;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6996, %r471, %r6881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6999, %r465, %r6878, %r6996;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7003, %r471, %r6890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7006, %r465, %r6887, %r7003;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7010, %r471, %r6899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7013, %r465, %r6896, %r7010;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7017, %r471, %r6908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7020, %r465, %r6905, %r7017;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7024, %r471, %r6917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7027, %r465, %r6914, %r7024;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7198, %r7195}, {%r517, %r523, %r520, %r526}, {%r6780, %r6922}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7207, %r7204}, {%r517, %r523, %r520, %r526}, {%r6789, %r6929}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7216, %r7213}, {%r517, %r523, %r520, %r526}, {%r6798, %r6936}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7225, %r7222}, {%r517, %r523, %r520, %r526}, {%r6807, %r6943}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7234, %r7231}, {%r517, %r523, %r520, %r526}, {%r6816, %r6950}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7243, %r7240}, {%r517, %r523, %r520, %r526}, {%r6825, %r6957}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7252, %r7249}, {%r517, %r523, %r520, %r526}, {%r6834, %r6964}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7261, %r7258}, {%r517, %r523, %r520, %r526}, {%r6843, %r6971}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7270, %r7267}, {%r517, %r523, %r520, %r526}, {%r6852, %r6978}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7279, %r7276}, {%r517, %r523, %r520, %r526}, {%r6861, %r6985}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7288, %r7285}, {%r517, %r523, %r520, %r526}, {%r6870, %r6992}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7297, %r7294}, {%r517, %r523, %r520, %r526}, {%r6879, %r6999}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7306, %r7303}, {%r517, %r523, %r520, %r526}, {%r6888, %r7006}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7315, %r7312}, {%r517, %r523, %r520, %r526}, {%r6897, %r7013}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7324, %r7321}, {%r517, %r523, %r520, %r526}, {%r6906, %r7020}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7333, %r7330}, {%r517, %r523, %r520, %r526}, {%r6915, %r7027}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7191, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7193, %r7191, %r7195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7196, %r567, %r7198, %r7193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7200, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7202, %r7200, %r7204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7205, %r567, %r7207, %r7202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7209, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7211, %r7209, %r7213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7214, %r567, %r7216, %r7211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7218, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7220, %r7218, %r7222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7223, %r567, %r7225, %r7220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7227, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7229, %r7227, %r7231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7232, %r567, %r7234, %r7229;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7236, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7238, %r7236, %r7240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7241, %r567, %r7243, %r7238;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7245, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7247, %r7245, %r7249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7250, %r567, %r7252, %r7247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7254, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7256, %r7254, %r7258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7259, %r567, %r7261, %r7256;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7263, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7265, %r7263, %r7267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7268, %r567, %r7270, %r7265;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7272, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7274, %r7272, %r7276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7277, %r567, %r7279, %r7274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7281, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7283, %r7281, %r7285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7286, %r567, %r7288, %r7283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7290, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7292, %r7290, %r7294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7295, %r567, %r7297, %r7292;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7299, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7301, %r7299, %r7303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7304, %r567, %r7306, %r7301;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7308, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7310, %r7308, %r7312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7313, %r567, %r7315, %r7310;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7317, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7319, %r7317, %r7321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7322, %r567, %r7324, %r7319;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7326, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7328, %r7326, %r7330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7331, %r567, %r7333, %r7328;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7335, %r570, %r7198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7338, %r567, %r7195, %r7335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7342, %r570, %r7207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7345, %r567, %r7204, %r7342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7349, %r570, %r7216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7352, %r567, %r7213, %r7349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7356, %r570, %r7225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7359, %r567, %r7222, %r7356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7363, %r570, %r7234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7366, %r567, %r7231, %r7363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7370, %r570, %r7243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7373, %r567, %r7240, %r7370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7377, %r570, %r7252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7380, %r567, %r7249, %r7377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7384, %r570, %r7261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7387, %r567, %r7258, %r7384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7391, %r570, %r7270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7394, %r567, %r7267, %r7391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7398, %r570, %r7279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7401, %r567, %r7276, %r7398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7405, %r570, %r7288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7408, %r567, %r7285, %r7405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7412, %r570, %r7297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7415, %r567, %r7294, %r7412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7419, %r570, %r7306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7422, %r567, %r7303, %r7419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7426, %r570, %r7315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7429, %r567, %r7312, %r7426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7433, %r570, %r7324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7436, %r567, %r7321, %r7433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7440, %r570, %r7333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7443, %r567, %r7330, %r7440;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7736, %r7739}, {%r605, %r611, %r608, %r614}, {%r7196, %r7338}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7742, %r7745}, {%r605, %r611, %r608, %r614}, {%r7205, %r7345}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7748, %r7751}, {%r605, %r611, %r608, %r614}, {%r7214, %r7352}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7754, %r7757}, {%r605, %r611, %r608, %r614}, {%r7223, %r7359}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7760, %r7763}, {%r605, %r611, %r608, %r614}, {%r7232, %r7366}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7766, %r7769}, {%r605, %r611, %r608, %r614}, {%r7241, %r7373}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7772, %r7775}, {%r605, %r611, %r608, %r614}, {%r7250, %r7380}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7778, %r7781}, {%r605, %r611, %r608, %r614}, {%r7259, %r7387}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7737, %r7740}, {%r605, %r611, %r608, %r614}, {%r7268, %r7394}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7743, %r7746}, {%r605, %r611, %r608, %r614}, {%r7277, %r7401}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7749, %r7752}, {%r605, %r611, %r608, %r614}, {%r7286, %r7408}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7755, %r7758}, {%r605, %r611, %r608, %r614}, {%r7295, %r7415}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7761, %r7764}, {%r605, %r611, %r608, %r614}, {%r7304, %r7422}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7767, %r7770}, {%r605, %r611, %r608, %r614}, {%r7313, %r7429}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7773, %r7776}, {%r605, %r611, %r608, %r614}, {%r7322, %r7436}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7779, %r7782}, {%r605, %r611, %r608, %r614}, {%r7331, %r7443}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7735, %r7736, %r7737;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7738, %r7739, %r7740;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7741, %r7742, %r7743;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7744, %r7745, %r7746;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7747, %r7748, %r7749;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7750, %r7751, %r7752;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7753, %r7754, %r7755;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7756, %r7757, %r7758;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7759, %r7760, %r7761;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7762, %r7763, %r7764;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7765, %r7766, %r7767;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7768, %r7769, %r7770;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7771, %r7772, %r7773;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7774, %r7775, %r7776;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7777, %r7778, %r7779;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7780, %r7781, %r7782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7783, %r7736, %r7737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7786, %r7739, %r7740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7789, %r7742, %r7743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7792, %r7745, %r7746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7795, %r7748, %r7749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7798, %r7751, %r7752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7801, %r7754, %r7755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7804, %r7757, %r7758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7807, %r7760, %r7761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7810, %r7763, %r7764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7813, %r7766, %r7767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7816, %r7769, %r7770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7819, %r7772, %r7773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7822, %r7775, %r7776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7825, %r7778, %r7779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7828, %r7781, %r7782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7831, %r186, %r7735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7834, %r186, %r7738;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7837, %r186, %r7741;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7840, %r186, %r7744;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7843, %r186, %r7747;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7846, %r186, %r7750;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7849, %r186, %r7753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7852, %r186, %r7756;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7855, %r186, %r7759;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7858, %r186, %r7762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7861, %r186, %r7765;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7864, %r186, %r7768;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7867, %r186, %r7771;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7870, %r186, %r7774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7873, %r186, %r7777;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7876, %r186, %r7780;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7879, %r187, %r7783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7882, %r187, %r7786;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7885, %r187, %r7789;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7888, %r187, %r7792;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7891, %r187, %r7795;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7894, %r187, %r7798;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7897, %r187, %r7801;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7900, %r187, %r7804;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7903, %r187, %r7807;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7906, %r187, %r7810;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7909, %r187, %r7813;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7912, %r187, %r7816;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7915, %r187, %r7819;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7918, %r187, %r7822;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7921, %r187, %r7825;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7924, %r187, %r7828;
	// end inline asm
	// begin inline asm
	mov.b32 %r7927, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7928, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7929, %r7831, %r7927;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7932, %r7929, %r7928;
	// end inline asm
	// begin inline asm
	mov.b32 %r7935, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7936, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7937, %r7834, %r7935;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7940, %r7937, %r7936;
	// end inline asm
	// begin inline asm
	mov.b32 %r7943, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7944, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7945, %r7837, %r7943;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7948, %r7945, %r7944;
	// end inline asm
	// begin inline asm
	mov.b32 %r7951, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7952, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7953, %r7840, %r7951;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7956, %r7953, %r7952;
	// end inline asm
	// begin inline asm
	mov.b32 %r7959, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7960, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7961, %r7843, %r7959;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7964, %r7961, %r7960;
	// end inline asm
	// begin inline asm
	mov.b32 %r7967, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7968, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7969, %r7846, %r7967;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7972, %r7969, %r7968;
	// end inline asm
	// begin inline asm
	mov.b32 %r7975, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7976, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7977, %r7849, %r7975;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7980, %r7977, %r7976;
	// end inline asm
	// begin inline asm
	mov.b32 %r7983, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7984, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7985, %r7852, %r7983;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7988, %r7985, %r7984;
	// end inline asm
	// begin inline asm
	mov.b32 %r7991, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7992, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7993, %r7855, %r7991;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7996, %r7993, %r7992;
	// end inline asm
	// begin inline asm
	mov.b32 %r7999, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8000, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8001, %r7858, %r7999;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8004, %r8001, %r8000;
	// end inline asm
	// begin inline asm
	mov.b32 %r8007, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8008, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8009, %r7861, %r8007;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8012, %r8009, %r8008;
	// end inline asm
	// begin inline asm
	mov.b32 %r8015, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8016, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8017, %r7864, %r8015;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8020, %r8017, %r8016;
	// end inline asm
	// begin inline asm
	mov.b32 %r8023, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8024, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8025, %r7867, %r8023;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8028, %r8025, %r8024;
	// end inline asm
	// begin inline asm
	mov.b32 %r8031, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8032, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8033, %r7870, %r8031;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8036, %r8033, %r8032;
	// end inline asm
	// begin inline asm
	mov.b32 %r8039, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8040, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8041, %r7873, %r8039;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8044, %r8041, %r8040;
	// end inline asm
	// begin inline asm
	mov.b32 %r8047, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8048, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8049, %r7876, %r8047;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8052, %r8049, %r8048;
	// end inline asm
	// begin inline asm
	mov.b32 %r8055, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8056, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8057, %r7879, %r8055;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8060, %r8057, %r8056;
	// end inline asm
	// begin inline asm
	mov.b32 %r8063, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8064, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8065, %r7882, %r8063;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8068, %r8065, %r8064;
	// end inline asm
	// begin inline asm
	mov.b32 %r8071, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8072, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8073, %r7885, %r8071;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8076, %r8073, %r8072;
	// end inline asm
	// begin inline asm
	mov.b32 %r8079, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8080, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8081, %r7888, %r8079;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8084, %r8081, %r8080;
	// end inline asm
	// begin inline asm
	mov.b32 %r8087, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8088, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8089, %r7891, %r8087;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8092, %r8089, %r8088;
	// end inline asm
	// begin inline asm
	mov.b32 %r8095, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8096, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8097, %r7894, %r8095;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8100, %r8097, %r8096;
	// end inline asm
	// begin inline asm
	mov.b32 %r8103, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8104, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8105, %r7897, %r8103;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8108, %r8105, %r8104;
	// end inline asm
	// begin inline asm
	mov.b32 %r8111, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8112, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8113, %r7900, %r8111;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8116, %r8113, %r8112;
	// end inline asm
	// begin inline asm
	mov.b32 %r8119, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8120, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8121, %r7903, %r8119;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8124, %r8121, %r8120;
	// end inline asm
	// begin inline asm
	mov.b32 %r8127, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8128, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8129, %r7906, %r8127;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8132, %r8129, %r8128;
	// end inline asm
	// begin inline asm
	mov.b32 %r8135, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8136, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8137, %r7909, %r8135;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8140, %r8137, %r8136;
	// end inline asm
	// begin inline asm
	mov.b32 %r8143, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8144, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8145, %r7912, %r8143;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8148, %r8145, %r8144;
	// end inline asm
	// begin inline asm
	mov.b32 %r8151, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8152, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8153, %r7915, %r8151;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8156, %r8153, %r8152;
	// end inline asm
	// begin inline asm
	mov.b32 %r8159, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8160, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8161, %r7918, %r8159;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8164, %r8161, %r8160;
	// end inline asm
	// begin inline asm
	mov.b32 %r8167, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8168, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8169, %r7921, %r8167;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8172, %r8169, %r8168;
	// end inline asm
	// begin inline asm
	mov.b32 %r8175, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8176, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8177, %r7924, %r8175;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8180, %r8177, %r8176;
	// end inline asm
	// begin inline asm
	mov.b32 %r8186, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8185, %r8186, %r8184;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8188, %r7932, %r8185;
	// end inline asm
	// begin inline asm
	mov.b32 %r8191, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8192, %r8186, %r8191;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8195, %r7940, %r8192;
	// end inline asm
	// begin inline asm
	mov.b32 %r8198, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8199, %r8186, %r8198;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8202, %r7948, %r8199;
	// end inline asm
	// begin inline asm
	mov.b32 %r8205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8206, %r8186, %r8205;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8209, %r7956, %r8206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8212, %r8188, %r8202, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8216, %r8195, %r8209, %r4399;
	// end inline asm
	shl.b32 	%r8223, %r8216, 4;
	// begin inline asm
	lop3.b32 %r8220, %r4405, %r8212, %r8223, 202;
	// end inline asm
	xor.b32  	%r16239, %r8220, -2004318072;
	// begin inline asm
	mov.b32 %r8227, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8225, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8226, %r8227, %r8225;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8229, %r7964, %r8226;
	// end inline asm
	// begin inline asm
	mov.b32 %r8232, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8233, %r8227, %r8232;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8236, %r7972, %r8233;
	// end inline asm
	// begin inline asm
	mov.b32 %r8239, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8240, %r8227, %r8239;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8243, %r7980, %r8240;
	// end inline asm
	// begin inline asm
	mov.b32 %r8246, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8247, %r8227, %r8246;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8250, %r7988, %r8247;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8253, %r8229, %r8243, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8257, %r8236, %r8250, %r4399;
	// end inline asm
	shl.b32 	%r8264, %r8257, 4;
	// begin inline asm
	lop3.b32 %r8261, %r4405, %r8253, %r8264, 202;
	// end inline asm
	xor.b32  	%r16240, %r8261, -2004318072;
	// begin inline asm
	mov.b32 %r8268, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8266, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8267, %r8268, %r8266;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8270, %r7996, %r8267;
	// end inline asm
	// begin inline asm
	mov.b32 %r8273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8274, %r8268, %r8273;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8277, %r8004, %r8274;
	// end inline asm
	// begin inline asm
	mov.b32 %r8280, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8281, %r8268, %r8280;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8284, %r8012, %r8281;
	// end inline asm
	// begin inline asm
	mov.b32 %r8287, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8288, %r8268, %r8287;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8291, %r8020, %r8288;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8294, %r8270, %r8284, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8298, %r8277, %r8291, %r4399;
	// end inline asm
	shl.b32 	%r8305, %r8298, 4;
	// begin inline asm
	lop3.b32 %r8302, %r4405, %r8294, %r8305, 202;
	// end inline asm
	xor.b32  	%r16241, %r8302, -2004318072;
	// begin inline asm
	mov.b32 %r8309, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8307, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8308, %r8309, %r8307;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8311, %r8028, %r8308;
	// end inline asm
	// begin inline asm
	mov.b32 %r8314, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8315, %r8309, %r8314;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8318, %r8036, %r8315;
	// end inline asm
	// begin inline asm
	mov.b32 %r8321, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8322, %r8309, %r8321;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8325, %r8044, %r8322;
	// end inline asm
	// begin inline asm
	mov.b32 %r8328, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8329, %r8309, %r8328;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8332, %r8052, %r8329;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8335, %r8311, %r8325, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8339, %r8318, %r8332, %r4399;
	// end inline asm
	shl.b32 	%r8346, %r8339, 4;
	// begin inline asm
	lop3.b32 %r8343, %r4405, %r8335, %r8346, 202;
	// end inline asm
	xor.b32  	%r16242, %r8343, -2004318072;
	// begin inline asm
	mov.b32 %r8350, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8348, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8349, %r8350, %r8348;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8352, %r8060, %r8349;
	// end inline asm
	// begin inline asm
	mov.b32 %r8355, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8356, %r8350, %r8355;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8359, %r8068, %r8356;
	// end inline asm
	// begin inline asm
	mov.b32 %r8362, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8363, %r8350, %r8362;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8366, %r8076, %r8363;
	// end inline asm
	// begin inline asm
	mov.b32 %r8369, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8370, %r8350, %r8369;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8373, %r8084, %r8370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8376, %r8352, %r8366, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8380, %r8359, %r8373, %r4399;
	// end inline asm
	shl.b32 	%r8387, %r8380, 4;
	// begin inline asm
	lop3.b32 %r8384, %r4405, %r8376, %r8387, 202;
	// end inline asm
	xor.b32  	%r16243, %r8384, -2004318072;
	// begin inline asm
	mov.b32 %r8391, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8390, %r8391, %r8389;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8393, %r8092, %r8390;
	// end inline asm
	// begin inline asm
	mov.b32 %r8396, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8397, %r8391, %r8396;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8400, %r8100, %r8397;
	// end inline asm
	// begin inline asm
	mov.b32 %r8403, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8404, %r8391, %r8403;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8407, %r8108, %r8404;
	// end inline asm
	// begin inline asm
	mov.b32 %r8410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8411, %r8391, %r8410;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8414, %r8116, %r8411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8417, %r8393, %r8407, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8421, %r8400, %r8414, %r4399;
	// end inline asm
	shl.b32 	%r8428, %r8421, 4;
	// begin inline asm
	lop3.b32 %r8425, %r4405, %r8417, %r8428, 202;
	// end inline asm
	xor.b32  	%r16244, %r8425, -2004318072;
	// begin inline asm
	mov.b32 %r8432, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8430, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8431, %r8432, %r8430;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8434, %r8124, %r8431;
	// end inline asm
	// begin inline asm
	mov.b32 %r8437, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8438, %r8432, %r8437;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8441, %r8132, %r8438;
	// end inline asm
	// begin inline asm
	mov.b32 %r8444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8445, %r8432, %r8444;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8448, %r8140, %r8445;
	// end inline asm
	// begin inline asm
	mov.b32 %r8451, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8452, %r8432, %r8451;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8455, %r8148, %r8452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8458, %r8434, %r8448, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8462, %r8441, %r8455, %r4399;
	// end inline asm
	shl.b32 	%r8469, %r8462, 4;
	// begin inline asm
	lop3.b32 %r8466, %r4405, %r8458, %r8469, 202;
	// end inline asm
	xor.b32  	%r16245, %r8466, -2004318072;
	// begin inline asm
	mov.b32 %r8473, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8472, %r8473, %r8471;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8475, %r8156, %r8472;
	// end inline asm
	// begin inline asm
	mov.b32 %r8478, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8479, %r8473, %r8478;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8482, %r8164, %r8479;
	// end inline asm
	// begin inline asm
	mov.b32 %r8485, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8486, %r8473, %r8485;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8489, %r8172, %r8486;
	// end inline asm
	// begin inline asm
	mov.b32 %r8492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8493, %r8473, %r8492;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8496, %r8180, %r8493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8499, %r8475, %r8489, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8503, %r8482, %r8496, %r4399;
	// end inline asm
	shl.b32 	%r8510, %r8503, 4;
	// begin inline asm
	lop3.b32 %r8507, %r4405, %r8499, %r8510, 202;
	// end inline asm
	xor.b32  	%r16246, %r8507, -2004318072;
	st.shared.u32 	[%rd116], %r16239;
	st.shared.u32 	[%rd118], %r16240;
	st.shared.u32 	[%rd120], %r16241;
	st.shared.u32 	[%rd122], %r16242;
	st.shared.u32 	[%rd124], %r16243;
	st.shared.u32 	[%rd126], %r16244;
	st.shared.u32 	[%rd128], %r16245;
	st.shared.u32 	[%rd130], %r16246;
	ld.shared.u32 	%r16384, [%rd100];
	ld.shared.u32 	%r16385, [%rd102];
	ld.shared.u32 	%r16386, [%rd104];
	ld.shared.u32 	%r16387, [%rd106];
	ld.shared.u32 	%r16396, [%rd108];
	ld.shared.u32 	%r16397, [%rd110];
	ld.shared.u32 	%r16398, [%rd112];
	ld.shared.u32 	%r16399, [%rd114];
	// begin inline asm
	mov.b32 %r8516, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8527, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8515, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r8513, %r882, %r8515, %r8516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8518, %r8516, %r8517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8521, %r8513, %r8518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8524, %r893, %r8515, %r8527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8529, %r8527, %r8528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8532, %r8524, %r8529;
	// end inline asm
	shr.u32 	%r8537, %r8515, 8;
	// begin inline asm
	lop3.b32 %r8535, %r882, %r8537, %r8516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8539, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8540, %r8516, %r8539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8543, %r8535, %r8540;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8546, %r893, %r8537, %r8527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8550, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8551, %r8527, %r8550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8554, %r8546, %r8551;
	// end inline asm
	// begin inline asm
	mov.b32 %r8562, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8573, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8561, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r8559, %r882, %r8561, %r8562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8563, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8564, %r8562, %r8563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8567, %r8559, %r8564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8570, %r893, %r8561, %r8573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8575, %r8573, %r8574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8578, %r8570, %r8575;
	// end inline asm
	shr.u32 	%r8583, %r8561, 8;
	// begin inline asm
	lop3.b32 %r8581, %r882, %r8583, %r8562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8586, %r8562, %r8585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8589, %r8581, %r8586;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8592, %r893, %r8583, %r8573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8596, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8597, %r8573, %r8596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8600, %r8592, %r8597;
	// end inline asm
	// begin inline asm
	mov.b32 %r8608, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8619, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8607, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r8605, %r882, %r8607, %r8608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8609, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8610, %r8608, %r8609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8613, %r8605, %r8610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8616, %r893, %r8607, %r8619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8620, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8621, %r8619, %r8620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8624, %r8616, %r8621;
	// end inline asm
	shr.u32 	%r8629, %r8607, 8;
	// begin inline asm
	lop3.b32 %r8627, %r882, %r8629, %r8608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8631, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8632, %r8608, %r8631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8635, %r8627, %r8632;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8638, %r893, %r8629, %r8619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8642, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8643, %r8619, %r8642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8646, %r8638, %r8643;
	// end inline asm
	// begin inline asm
	mov.b32 %r8654, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8665, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8653, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r8651, %r882, %r8653, %r8654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8655, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8656, %r8654, %r8655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8659, %r8651, %r8656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8662, %r893, %r8653, %r8665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8666, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8667, %r8665, %r8666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8670, %r8662, %r8667;
	// end inline asm
	shr.u32 	%r8675, %r8653, 8;
	// begin inline asm
	lop3.b32 %r8673, %r882, %r8675, %r8654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8677, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8678, %r8654, %r8677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8681, %r8673, %r8678;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8684, %r893, %r8675, %r8665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8688, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8689, %r8665, %r8688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8692, %r8684, %r8689;
	// end inline asm
	// begin inline asm
	mov.b32 %r8700, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8711, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8699, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r8697, %r882, %r8699, %r8700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8701, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8702, %r8700, %r8701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8705, %r8697, %r8702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8708, %r893, %r8699, %r8711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8712, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8713, %r8711, %r8712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8716, %r8708, %r8713;
	// end inline asm
	shr.u32 	%r8721, %r8699, 8;
	// begin inline asm
	lop3.b32 %r8719, %r882, %r8721, %r8700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8723, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8724, %r8700, %r8723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8727, %r8719, %r8724;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8730, %r893, %r8721, %r8711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8734, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8735, %r8711, %r8734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8738, %r8730, %r8735;
	// end inline asm
	// begin inline asm
	mov.b32 %r8746, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8757, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8745, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r8743, %r882, %r8745, %r8746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8747, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8748, %r8746, %r8747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8751, %r8743, %r8748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8754, %r893, %r8745, %r8757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8758, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8759, %r8757, %r8758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8762, %r8754, %r8759;
	// end inline asm
	shr.u32 	%r8767, %r8745, 8;
	// begin inline asm
	lop3.b32 %r8765, %r882, %r8767, %r8746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8769, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8770, %r8746, %r8769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8773, %r8765, %r8770;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8776, %r893, %r8767, %r8757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8780, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8781, %r8757, %r8780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8784, %r8776, %r8781;
	// end inline asm
	// begin inline asm
	mov.b32 %r8792, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8803, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8791, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r8789, %r882, %r8791, %r8792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8793, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8794, %r8792, %r8793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8797, %r8789, %r8794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8800, %r893, %r8791, %r8803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8804, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8805, %r8803, %r8804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8808, %r8800, %r8805;
	// end inline asm
	shr.u32 	%r8813, %r8791, 8;
	// begin inline asm
	lop3.b32 %r8811, %r882, %r8813, %r8792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8815, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8816, %r8792, %r8815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8819, %r8811, %r8816;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8822, %r893, %r8813, %r8803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8826, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8827, %r8803, %r8826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8830, %r8822, %r8827;
	// end inline asm
	// begin inline asm
	mov.b32 %r8838, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8849, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8837, %r16399, -2004318072;
	// begin inline asm
	lop3.b32 %r8835, %r882, %r8837, %r8838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8839, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8840, %r8838, %r8839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8843, %r8835, %r8840;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8846, %r893, %r8837, %r8849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8850, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8851, %r8849, %r8850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8854, %r8846, %r8851;
	// end inline asm
	shr.u32 	%r8859, %r8837, 8;
	// begin inline asm
	lop3.b32 %r8857, %r882, %r8859, %r8838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8861, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8862, %r8838, %r8861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8865, %r8857, %r8862;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8868, %r893, %r8859, %r8849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8872, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8873, %r8849, %r8872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8876, %r8868, %r8873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8879, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8881, %r8879, %r8521;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8884, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8886, %r8884, %r8532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8889, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8891, %r8889, %r8543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8894, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8896, %r8894, %r8554;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8899, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8901, %r8899, %r8567;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8904, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8906, %r8904, %r8578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8909, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8911, %r8909, %r8589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8914, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8916, %r8914, %r8600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8919, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8921, %r8919, %r8613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8924, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8926, %r8924, %r8624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8929, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8931, %r8929, %r8635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8934, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8936, %r8934, %r8646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8939, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8941, %r8939, %r8659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8944, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8946, %r8944, %r8670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8949, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8951, %r8949, %r8681;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8954, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8956, %r8954, %r8692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8959, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8961, %r8959, %r8705;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8964, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8966, %r8964, %r8716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8969, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8971, %r8969, %r8727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8974, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8976, %r8974, %r8738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8979, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8981, %r8979, %r8751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8984, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8986, %r8984, %r8762;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8989, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8991, %r8989, %r8773;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8994, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8996, %r8994, %r8784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8999, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9001, %r8999, %r8797;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9004, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9006, %r9004, %r8808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9009, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9011, %r9009, %r8819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9014, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9016, %r9014, %r8830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9019, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9021, %r9019, %r8843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9024, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9026, %r9024, %r8854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9029, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9031, %r9029, %r8865;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9034, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9036, %r9034, %r8876;
	// end inline asm
	// begin inline asm
	mov.b32 %r9044, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9055, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9041, %r882, %r2467, %r9044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9045, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9046, %r9044, %r9045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9049, %r9041, %r9046;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9052, %r893, %r2467, %r9055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9057, %r9055, %r9056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9060, %r9052, %r9057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9063, %r882, %r2489, %r9044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9068, %r9044, %r9067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9071, %r9063, %r9068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9074, %r893, %r2489, %r9055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9078, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9079, %r9055, %r9078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9082, %r9074, %r9079;
	// end inline asm
	// begin inline asm
	mov.b32 %r9090, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9101, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9087, %r882, %r2513, %r9090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9091, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9092, %r9090, %r9091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9095, %r9087, %r9092;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9098, %r893, %r2513, %r9101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9102, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9103, %r9101, %r9102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9106, %r9098, %r9103;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9109, %r882, %r2535, %r9090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9114, %r9090, %r9113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9117, %r9109, %r9114;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9120, %r893, %r2535, %r9101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9125, %r9101, %r9124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9128, %r9120, %r9125;
	// end inline asm
	// begin inline asm
	mov.b32 %r9136, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9147, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9133, %r882, %r2559, %r9136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9137, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9138, %r9136, %r9137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9141, %r9133, %r9138;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9144, %r893, %r2559, %r9147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9148, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9149, %r9147, %r9148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9152, %r9144, %r9149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9155, %r882, %r2581, %r9136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9160, %r9136, %r9159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9163, %r9155, %r9160;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9166, %r893, %r2581, %r9147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9170, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9171, %r9147, %r9170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9174, %r9166, %r9171;
	// end inline asm
	// begin inline asm
	mov.b32 %r9182, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9193, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9179, %r882, %r2605, %r9182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9183, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9184, %r9182, %r9183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9187, %r9179, %r9184;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9190, %r893, %r2605, %r9193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9194, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9195, %r9193, %r9194;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9198, %r9190, %r9195;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9201, %r882, %r2627, %r9182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9206, %r9182, %r9205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9209, %r9201, %r9206;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9212, %r893, %r2627, %r9193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9216, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9217, %r9193, %r9216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9220, %r9212, %r9217;
	// end inline asm
	// begin inline asm
	mov.b32 %r9228, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9239, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9225, %r882, %r2651, %r9228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9229, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9230, %r9228, %r9229;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9233, %r9225, %r9230;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9236, %r893, %r2651, %r9239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9240, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9241, %r9239, %r9240;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9244, %r9236, %r9241;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9247, %r882, %r2673, %r9228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9252, %r9228, %r9251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9255, %r9247, %r9252;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9258, %r893, %r2673, %r9239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9263, %r9239, %r9262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9266, %r9258, %r9263;
	// end inline asm
	// begin inline asm
	mov.b32 %r9274, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9285, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9271, %r882, %r2697, %r9274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9275, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9276, %r9274, %r9275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9279, %r9271, %r9276;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9282, %r893, %r2697, %r9285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9286, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9287, %r9285, %r9286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9290, %r9282, %r9287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9293, %r882, %r2719, %r9274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9298, %r9274, %r9297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9301, %r9293, %r9298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9304, %r893, %r2719, %r9285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9309, %r9285, %r9308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9312, %r9304, %r9309;
	// end inline asm
	// begin inline asm
	mov.b32 %r9320, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9331, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9317, %r882, %r2743, %r9320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9321, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9322, %r9320, %r9321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9325, %r9317, %r9322;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9328, %r893, %r2743, %r9331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9333, %r9331, %r9332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9336, %r9328, %r9333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9339, %r882, %r2765, %r9320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9344, %r9320, %r9343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9347, %r9339, %r9344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9350, %r893, %r2765, %r9331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9354, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9355, %r9331, %r9354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9358, %r9350, %r9355;
	// end inline asm
	// begin inline asm
	mov.b32 %r9366, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9377, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9363, %r882, %r2789, %r9366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9368, %r9366, %r9367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9371, %r9363, %r9368;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9374, %r893, %r2789, %r9377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9379, %r9377, %r9378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9382, %r9374, %r9379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9385, %r882, %r2811, %r9366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9390, %r9366, %r9389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9393, %r9385, %r9390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9396, %r893, %r2811, %r9377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9401, %r9377, %r9400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9404, %r9396, %r9401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9407, %r308, %r9049, %r8881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9411, %r308, %r9060, %r8886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9415, %r308, %r9071, %r8891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9419, %r308, %r9082, %r8896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9423, %r308, %r9095, %r8901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9427, %r308, %r9106, %r8906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9431, %r308, %r9117, %r8911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9435, %r308, %r9128, %r8916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9439, %r308, %r9141, %r8921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9443, %r308, %r9152, %r8926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9447, %r308, %r9163, %r8931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9451, %r308, %r9174, %r8936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9455, %r308, %r9187, %r8941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9459, %r308, %r9198, %r8946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9463, %r308, %r9209, %r8951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9467, %r308, %r9220, %r8956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9471, %r326, %r9233, %r8961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9475, %r326, %r9244, %r8966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9479, %r326, %r9255, %r8971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9483, %r326, %r9266, %r8976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9487, %r326, %r9279, %r8981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9491, %r326, %r9290, %r8986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9495, %r326, %r9301, %r8991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9499, %r326, %r9312, %r8996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9503, %r326, %r9325, %r9001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9507, %r326, %r9336, %r9006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9511, %r326, %r9347, %r9011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9515, %r326, %r9358, %r9016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9519, %r326, %r9371, %r9021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9523, %r326, %r9382, %r9026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9527, %r326, %r9393, %r9031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9531, %r326, %r9404, %r9036;
	// end inline asm
	// begin inline asm
	mov.b32 %r9540, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9551, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9537, %r882, %r883, %r9540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9541, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9542, %r9540, %r9541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9545, %r9537, %r9542;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9548, %r893, %r883, %r9551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9552, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9553, %r9551, %r9552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9556, %r9548, %r9553;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9559, %r882, %r905, %r9540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9563, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9564, %r9540, %r9563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9567, %r9559, %r9564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9570, %r893, %r905, %r9551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9575, %r9551, %r9574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9578, %r9570, %r9575;
	// end inline asm
	// begin inline asm
	mov.b32 %r9586, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9597, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9583, %r882, %r929, %r9586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9587, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9588, %r9586, %r9587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9591, %r9583, %r9588;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9594, %r893, %r929, %r9597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9598, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9599, %r9597, %r9598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9602, %r9594, %r9599;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9605, %r882, %r951, %r9586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9609, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9610, %r9586, %r9609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9613, %r9605, %r9610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9616, %r893, %r951, %r9597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9620, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9621, %r9597, %r9620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9624, %r9616, %r9621;
	// end inline asm
	// begin inline asm
	mov.b32 %r9632, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9643, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9629, %r882, %r975, %r9632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9633, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9634, %r9632, %r9633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9637, %r9629, %r9634;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9640, %r893, %r975, %r9643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9644, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9645, %r9643, %r9644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9648, %r9640, %r9645;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9651, %r882, %r997, %r9632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9655, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9656, %r9632, %r9655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9659, %r9651, %r9656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9662, %r893, %r997, %r9643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9666, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9667, %r9643, %r9666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9670, %r9662, %r9667;
	// end inline asm
	// begin inline asm
	mov.b32 %r9678, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9689, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9675, %r882, %r1021, %r9678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9679, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9680, %r9678, %r9679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9683, %r9675, %r9680;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9686, %r893, %r1021, %r9689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9690, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9691, %r9689, %r9690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9694, %r9686, %r9691;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9697, %r882, %r1043, %r9678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9701, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9702, %r9678, %r9701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9705, %r9697, %r9702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9708, %r893, %r1043, %r9689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9712, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9713, %r9689, %r9712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9716, %r9708, %r9713;
	// end inline asm
	// begin inline asm
	mov.b32 %r9724, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9735, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9721, %r882, %r1067, %r9724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9725, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9726, %r9724, %r9725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9729, %r9721, %r9726;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9732, %r893, %r1067, %r9735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9736, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9737, %r9735, %r9736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9740, %r9732, %r9737;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9743, %r882, %r1089, %r9724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9747, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9748, %r9724, %r9747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9751, %r9743, %r9748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9754, %r893, %r1089, %r9735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9758, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9759, %r9735, %r9758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9762, %r9754, %r9759;
	// end inline asm
	// begin inline asm
	mov.b32 %r9770, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9781, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9767, %r882, %r1113, %r9770, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9771, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9772, %r9770, %r9771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9775, %r9767, %r9772;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9778, %r893, %r1113, %r9781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9782, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9783, %r9781, %r9782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9786, %r9778, %r9783;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9789, %r882, %r1135, %r9770, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9793, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9794, %r9770, %r9793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9797, %r9789, %r9794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9800, %r893, %r1135, %r9781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9804, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9805, %r9781, %r9804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9808, %r9800, %r9805;
	// end inline asm
	// begin inline asm
	mov.b32 %r9816, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9827, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9813, %r882, %r1159, %r9816, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9817, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9818, %r9816, %r9817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9821, %r9813, %r9818;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9824, %r893, %r1159, %r9827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9828, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9829, %r9827, %r9828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9832, %r9824, %r9829;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9835, %r882, %r1181, %r9816, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9839, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9840, %r9816, %r9839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9843, %r9835, %r9840;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9846, %r893, %r1181, %r9827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9850, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9851, %r9827, %r9850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9854, %r9846, %r9851;
	// end inline asm
	// begin inline asm
	mov.b32 %r9862, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9873, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9859, %r882, %r1205, %r9862, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9863, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9864, %r9862, %r9863;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9867, %r9859, %r9864;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9870, %r893, %r1205, %r9873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9874, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9875, %r9873, %r9874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9878, %r9870, %r9875;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9881, %r882, %r1227, %r9862, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9885, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9886, %r9862, %r9885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9889, %r9881, %r9886;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9892, %r893, %r1227, %r9873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9896, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9897, %r9873, %r9896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9900, %r9892, %r9897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9903, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9905, %r9903, %r9545, %r9407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9909, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9911, %r9909, %r9556, %r9411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9915, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9917, %r9915, %r9567, %r9415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9921, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9923, %r9921, %r9578, %r9419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9927, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9929, %r9927, %r9591, %r9423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9933, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9935, %r9933, %r9602, %r9427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9939, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9941, %r9939, %r9613, %r9431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9945, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9947, %r9945, %r9624, %r9435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9951, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9953, %r9951, %r9637, %r9439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9957, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9959, %r9957, %r9648, %r9443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9963, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9965, %r9963, %r9659, %r9447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9969, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9971, %r9969, %r9670, %r9451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9975, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9977, %r9975, %r9683, %r9455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9981, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9983, %r9981, %r9694, %r9459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9987, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9989, %r9987, %r9705, %r9463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9993, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9995, %r9993, %r9716, %r9467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9999, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10001, %r9999, %r9729, %r9471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10005, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10007, %r10005, %r9740, %r9475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10011, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10013, %r10011, %r9751, %r9479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10017, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10019, %r10017, %r9762, %r9483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10023, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10025, %r10023, %r9775, %r9487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10029, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10031, %r10029, %r9786, %r9491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10035, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10037, %r10035, %r9797, %r9495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10041, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10043, %r10041, %r9808, %r9499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10047, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10049, %r10047, %r9821, %r9503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10053, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10055, %r10053, %r9832, %r9507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10059, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10061, %r10059, %r9843, %r9511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10065, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10067, %r10065, %r9854, %r9515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10071, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10073, %r10071, %r9867, %r9519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10077, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10079, %r10077, %r9878, %r9523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10083, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10085, %r10083, %r9889, %r9527;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10089, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10091, %r10089, %r9900, %r9531;
	// end inline asm
	// begin inline asm
	mov.b32 %r10100, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10111, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10097, %r882, %r4699, %r10100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10102, %r10100, %r10101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10105, %r10097, %r10102;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10108, %r893, %r4699, %r10111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10113, %r10111, %r10112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10116, %r10108, %r10113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10119, %r882, %r4721, %r10100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10124, %r10100, %r10123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10127, %r10119, %r10124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10130, %r893, %r4721, %r10111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10135, %r10111, %r10134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10138, %r10130, %r10135;
	// end inline asm
	// begin inline asm
	mov.b32 %r10146, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10157, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10143, %r882, %r4745, %r10146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10147, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10148, %r10146, %r10147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10151, %r10143, %r10148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10154, %r893, %r4745, %r10157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10159, %r10157, %r10158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10162, %r10154, %r10159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10165, %r882, %r4767, %r10146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10170, %r10146, %r10169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10173, %r10165, %r10170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10176, %r893, %r4767, %r10157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10180, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10181, %r10157, %r10180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10184, %r10176, %r10181;
	// end inline asm
	// begin inline asm
	mov.b32 %r10192, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10203, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10189, %r882, %r4791, %r10192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10193, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10194, %r10192, %r10193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10197, %r10189, %r10194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10200, %r893, %r4791, %r10203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10204, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10205, %r10203, %r10204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10208, %r10200, %r10205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10211, %r882, %r4813, %r10192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10215, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10216, %r10192, %r10215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10219, %r10211, %r10216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10222, %r893, %r4813, %r10203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10226, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10227, %r10203, %r10226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10230, %r10222, %r10227;
	// end inline asm
	// begin inline asm
	mov.b32 %r10238, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10249, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10235, %r882, %r4837, %r10238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10239, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10240, %r10238, %r10239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10243, %r10235, %r10240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10246, %r893, %r4837, %r10249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10251, %r10249, %r10250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10254, %r10246, %r10251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10257, %r882, %r4859, %r10238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10261, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10262, %r10238, %r10261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10265, %r10257, %r10262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10268, %r893, %r4859, %r10249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10272, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10273, %r10249, %r10272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10276, %r10268, %r10273;
	// end inline asm
	// begin inline asm
	mov.b32 %r10284, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10295, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10281, %r882, %r4883, %r10284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10286, %r10284, %r10285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10289, %r10281, %r10286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10292, %r893, %r4883, %r10295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10296, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10297, %r10295, %r10296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10300, %r10292, %r10297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10303, %r882, %r4905, %r10284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10307, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10308, %r10284, %r10307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10311, %r10303, %r10308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10314, %r893, %r4905, %r10295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10318, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10319, %r10295, %r10318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10322, %r10314, %r10319;
	// end inline asm
	// begin inline asm
	mov.b32 %r10330, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10341, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10327, %r882, %r4929, %r10330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10331, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10332, %r10330, %r10331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10335, %r10327, %r10332;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10338, %r893, %r4929, %r10341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10343, %r10341, %r10342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10346, %r10338, %r10343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10349, %r882, %r4951, %r10330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10354, %r10330, %r10353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10357, %r10349, %r10354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10360, %r893, %r4951, %r10341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10364, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10365, %r10341, %r10364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10368, %r10360, %r10365;
	// end inline asm
	// begin inline asm
	mov.b32 %r10376, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10387, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10373, %r882, %r4975, %r10376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10377, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10378, %r10376, %r10377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10381, %r10373, %r10378;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10384, %r893, %r4975, %r10387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10389, %r10387, %r10388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10392, %r10384, %r10389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10395, %r882, %r4997, %r10376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10400, %r10376, %r10399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10403, %r10395, %r10400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10406, %r893, %r4997, %r10387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10411, %r10387, %r10410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10414, %r10406, %r10411;
	// end inline asm
	// begin inline asm
	mov.b32 %r10422, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10433, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10419, %r882, %r5021, %r10422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10423, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10424, %r10422, %r10423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10427, %r10419, %r10424;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10430, %r893, %r5021, %r10433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10435, %r10433, %r10434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10438, %r10430, %r10435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10441, %r882, %r5043, %r10422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10446, %r10422, %r10445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10449, %r10441, %r10446;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10452, %r893, %r5043, %r10433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10456, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10457, %r10433, %r10456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10460, %r10452, %r10457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10598, %r380, %r10105, %r9905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10595, %r380, %r10116, %r9911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10607, %r380, %r10127, %r9917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10604, %r380, %r10138, %r9923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10616, %r380, %r10151, %r9929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10613, %r380, %r10162, %r9935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10625, %r380, %r10173, %r9941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10622, %r380, %r10184, %r9947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10634, %r380, %r10197, %r9953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10631, %r380, %r10208, %r9959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10643, %r380, %r10219, %r9965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10640, %r380, %r10230, %r9971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10652, %r380, %r10243, %r9977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10649, %r380, %r10254, %r9983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10661, %r380, %r10265, %r9989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10658, %r380, %r10276, %r9995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10670, %r398, %r10289, %r10001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10667, %r398, %r10300, %r10007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10679, %r398, %r10311, %r10013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10676, %r398, %r10322, %r10019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10688, %r398, %r10335, %r10025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10685, %r398, %r10346, %r10031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10697, %r398, %r10357, %r10037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10694, %r398, %r10368, %r10043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10706, %r398, %r10381, %r10049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10703, %r398, %r10392, %r10055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10715, %r398, %r10403, %r10061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10712, %r398, %r10414, %r10067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10724, %r398, %r10427, %r10073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10721, %r398, %r10438, %r10079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10733, %r398, %r10449, %r10085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10730, %r398, %r10460, %r10091;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10591, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10593, %r10591, %r10595;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10596, %r462, %r10598, %r10593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10600, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10602, %r10600, %r10604;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10605, %r462, %r10607, %r10602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10609, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10611, %r10609, %r10613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10614, %r462, %r10616, %r10611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10618, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10620, %r10618, %r10622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10623, %r462, %r10625, %r10620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10627, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10629, %r10627, %r10631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10632, %r462, %r10634, %r10629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10636, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10638, %r10636, %r10640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10641, %r462, %r10643, %r10638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10645, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10647, %r10645, %r10649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10650, %r462, %r10652, %r10647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10654, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10656, %r10654, %r10658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10659, %r462, %r10661, %r10656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10663, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10665, %r10663, %r10667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10668, %r465, %r10670, %r10665;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10672, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10674, %r10672, %r10676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10677, %r465, %r10679, %r10674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10681, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10683, %r10681, %r10685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10686, %r465, %r10688, %r10683;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10690, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10692, %r10690, %r10694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10695, %r465, %r10697, %r10692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10699, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10701, %r10699, %r10703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10704, %r465, %r10706, %r10701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10708, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10710, %r10708, %r10712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10713, %r465, %r10715, %r10710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10717, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10719, %r10717, %r10721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10722, %r465, %r10724, %r10719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10726, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10728, %r10726, %r10730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10731, %r465, %r10733, %r10728;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10735, %r468, %r10598;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10738, %r462, %r10595, %r10735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10742, %r468, %r10607;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10745, %r462, %r10604, %r10742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10749, %r468, %r10616;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10752, %r462, %r10613, %r10749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10756, %r468, %r10625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10759, %r462, %r10622, %r10756;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10763, %r468, %r10634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10766, %r462, %r10631, %r10763;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10770, %r468, %r10643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10773, %r462, %r10640, %r10770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10777, %r468, %r10652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10780, %r462, %r10649, %r10777;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10784, %r468, %r10661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10787, %r462, %r10658, %r10784;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10791, %r471, %r10670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10794, %r465, %r10667, %r10791;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10798, %r471, %r10679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10801, %r465, %r10676, %r10798;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10805, %r471, %r10688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10808, %r465, %r10685, %r10805;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10812, %r471, %r10697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10815, %r465, %r10694, %r10812;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10819, %r471, %r10706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10822, %r465, %r10703, %r10819;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10826, %r471, %r10715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10829, %r465, %r10712, %r10826;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10833, %r471, %r10724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10836, %r465, %r10721, %r10833;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10840, %r471, %r10733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10843, %r465, %r10730, %r10840;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11014, %r11011}, {%r517, %r523, %r520, %r526}, {%r10596, %r10738}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11023, %r11020}, {%r517, %r523, %r520, %r526}, {%r10605, %r10745}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11032, %r11029}, {%r517, %r523, %r520, %r526}, {%r10614, %r10752}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11041, %r11038}, {%r517, %r523, %r520, %r526}, {%r10623, %r10759}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11050, %r11047}, {%r517, %r523, %r520, %r526}, {%r10632, %r10766}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11059, %r11056}, {%r517, %r523, %r520, %r526}, {%r10641, %r10773}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11068, %r11065}, {%r517, %r523, %r520, %r526}, {%r10650, %r10780}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11077, %r11074}, {%r517, %r523, %r520, %r526}, {%r10659, %r10787}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11086, %r11083}, {%r517, %r523, %r520, %r526}, {%r10668, %r10794}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11095, %r11092}, {%r517, %r523, %r520, %r526}, {%r10677, %r10801}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11104, %r11101}, {%r517, %r523, %r520, %r526}, {%r10686, %r10808}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11113, %r11110}, {%r517, %r523, %r520, %r526}, {%r10695, %r10815}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11122, %r11119}, {%r517, %r523, %r520, %r526}, {%r10704, %r10822}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11131, %r11128}, {%r517, %r523, %r520, %r526}, {%r10713, %r10829}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11140, %r11137}, {%r517, %r523, %r520, %r526}, {%r10722, %r10836}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11149, %r11146}, {%r517, %r523, %r520, %r526}, {%r10731, %r10843}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11007, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11009, %r11007, %r11011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11012, %r567, %r11014, %r11009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11016, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11018, %r11016, %r11020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11021, %r567, %r11023, %r11018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11025, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11027, %r11025, %r11029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11030, %r567, %r11032, %r11027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11034, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11036, %r11034, %r11038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11039, %r567, %r11041, %r11036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11043, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11045, %r11043, %r11047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11048, %r567, %r11050, %r11045;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11052, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11054, %r11052, %r11056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11057, %r567, %r11059, %r11054;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11061, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11063, %r11061, %r11065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11066, %r567, %r11068, %r11063;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11070, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11072, %r11070, %r11074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11075, %r567, %r11077, %r11072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11079, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11081, %r11079, %r11083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11084, %r567, %r11086, %r11081;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11088, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11090, %r11088, %r11092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11093, %r567, %r11095, %r11090;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11097, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11099, %r11097, %r11101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11102, %r567, %r11104, %r11099;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11106, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11108, %r11106, %r11110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11111, %r567, %r11113, %r11108;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11115, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11117, %r11115, %r11119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11120, %r567, %r11122, %r11117;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11124, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11126, %r11124, %r11128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11129, %r567, %r11131, %r11126;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11133, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11135, %r11133, %r11137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11138, %r567, %r11140, %r11135;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11142, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11144, %r11142, %r11146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11147, %r567, %r11149, %r11144;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11151, %r570, %r11014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11154, %r567, %r11011, %r11151;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11158, %r570, %r11023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11161, %r567, %r11020, %r11158;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11165, %r570, %r11032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11168, %r567, %r11029, %r11165;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11172, %r570, %r11041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11175, %r567, %r11038, %r11172;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11179, %r570, %r11050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11182, %r567, %r11047, %r11179;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11186, %r570, %r11059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11189, %r567, %r11056, %r11186;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11193, %r570, %r11068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11196, %r567, %r11065, %r11193;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11200, %r570, %r11077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11203, %r567, %r11074, %r11200;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11207, %r570, %r11086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11210, %r567, %r11083, %r11207;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11214, %r570, %r11095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11217, %r567, %r11092, %r11214;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11221, %r570, %r11104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11224, %r567, %r11101, %r11221;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11228, %r570, %r11113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11231, %r567, %r11110, %r11228;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11235, %r570, %r11122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11238, %r567, %r11119, %r11235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11242, %r570, %r11131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11245, %r567, %r11128, %r11242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11249, %r570, %r11140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11252, %r567, %r11137, %r11249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11256, %r570, %r11149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11259, %r567, %r11146, %r11256;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11552, %r11555}, {%r605, %r611, %r608, %r614}, {%r11012, %r11154}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11558, %r11561}, {%r605, %r611, %r608, %r614}, {%r11021, %r11161}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11564, %r11567}, {%r605, %r611, %r608, %r614}, {%r11030, %r11168}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11570, %r11573}, {%r605, %r611, %r608, %r614}, {%r11039, %r11175}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11576, %r11579}, {%r605, %r611, %r608, %r614}, {%r11048, %r11182}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11582, %r11585}, {%r605, %r611, %r608, %r614}, {%r11057, %r11189}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11588, %r11591}, {%r605, %r611, %r608, %r614}, {%r11066, %r11196}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11594, %r11597}, {%r605, %r611, %r608, %r614}, {%r11075, %r11203}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11553, %r11556}, {%r605, %r611, %r608, %r614}, {%r11084, %r11210}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11559, %r11562}, {%r605, %r611, %r608, %r614}, {%r11093, %r11217}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11565, %r11568}, {%r605, %r611, %r608, %r614}, {%r11102, %r11224}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11571, %r11574}, {%r605, %r611, %r608, %r614}, {%r11111, %r11231}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11577, %r11580}, {%r605, %r611, %r608, %r614}, {%r11120, %r11238}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11583, %r11586}, {%r605, %r611, %r608, %r614}, {%r11129, %r11245}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11589, %r11592}, {%r605, %r611, %r608, %r614}, {%r11138, %r11252}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11595, %r11598}, {%r605, %r611, %r608, %r614}, {%r11147, %r11259}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11551, %r11552, %r11553;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11554, %r11555, %r11556;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11557, %r11558, %r11559;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11560, %r11561, %r11562;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11563, %r11564, %r11565;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11566, %r11567, %r11568;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11569, %r11570, %r11571;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11572, %r11573, %r11574;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11575, %r11576, %r11577;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11578, %r11579, %r11580;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11581, %r11582, %r11583;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11584, %r11585, %r11586;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11587, %r11588, %r11589;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11590, %r11591, %r11592;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11593, %r11594, %r11595;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11596, %r11597, %r11598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11599, %r11552, %r11553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11602, %r11555, %r11556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11605, %r11558, %r11559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11608, %r11561, %r11562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11611, %r11564, %r11565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11614, %r11567, %r11568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11617, %r11570, %r11571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11620, %r11573, %r11574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11623, %r11576, %r11577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11626, %r11579, %r11580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11629, %r11582, %r11583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11632, %r11585, %r11586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11635, %r11588, %r11589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11638, %r11591, %r11592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11641, %r11594, %r11595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11644, %r11597, %r11598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11647, %r186, %r11551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11650, %r186, %r11554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11653, %r186, %r11557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11656, %r186, %r11560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11659, %r186, %r11563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11662, %r186, %r11566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11665, %r186, %r11569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11668, %r186, %r11572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11671, %r186, %r11575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11674, %r186, %r11578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11677, %r186, %r11581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11680, %r186, %r11584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11683, %r186, %r11587;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11686, %r186, %r11590;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11689, %r186, %r11593;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11692, %r186, %r11596;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11695, %r187, %r11599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11698, %r187, %r11602;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11701, %r187, %r11605;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11704, %r187, %r11608;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11707, %r187, %r11611;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11710, %r187, %r11614;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11713, %r187, %r11617;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11716, %r187, %r11620;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11719, %r187, %r11623;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11722, %r187, %r11626;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11725, %r187, %r11629;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11728, %r187, %r11632;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11731, %r187, %r11635;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11734, %r187, %r11638;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11737, %r187, %r11641;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11740, %r187, %r11644;
	// end inline asm
	// begin inline asm
	mov.b32 %r11743, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11744, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11745, %r11647, %r11743;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11748, %r11745, %r11744;
	// end inline asm
	// begin inline asm
	mov.b32 %r11751, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11752, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11753, %r11650, %r11751;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11756, %r11753, %r11752;
	// end inline asm
	// begin inline asm
	mov.b32 %r11759, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11760, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11761, %r11653, %r11759;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11764, %r11761, %r11760;
	// end inline asm
	// begin inline asm
	mov.b32 %r11767, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11768, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11769, %r11656, %r11767;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11772, %r11769, %r11768;
	// end inline asm
	// begin inline asm
	mov.b32 %r11775, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11776, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11777, %r11659, %r11775;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11780, %r11777, %r11776;
	// end inline asm
	// begin inline asm
	mov.b32 %r11783, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11784, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11785, %r11662, %r11783;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11788, %r11785, %r11784;
	// end inline asm
	// begin inline asm
	mov.b32 %r11791, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11792, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11793, %r11665, %r11791;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11796, %r11793, %r11792;
	// end inline asm
	// begin inline asm
	mov.b32 %r11799, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11800, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11801, %r11668, %r11799;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11804, %r11801, %r11800;
	// end inline asm
	// begin inline asm
	mov.b32 %r11807, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11808, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11809, %r11671, %r11807;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11812, %r11809, %r11808;
	// end inline asm
	// begin inline asm
	mov.b32 %r11815, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11816, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11817, %r11674, %r11815;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11820, %r11817, %r11816;
	// end inline asm
	// begin inline asm
	mov.b32 %r11823, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11824, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11825, %r11677, %r11823;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11828, %r11825, %r11824;
	// end inline asm
	// begin inline asm
	mov.b32 %r11831, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11832, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11833, %r11680, %r11831;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11836, %r11833, %r11832;
	// end inline asm
	// begin inline asm
	mov.b32 %r11839, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11840, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11841, %r11683, %r11839;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11844, %r11841, %r11840;
	// end inline asm
	// begin inline asm
	mov.b32 %r11847, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11848, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11849, %r11686, %r11847;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11852, %r11849, %r11848;
	// end inline asm
	// begin inline asm
	mov.b32 %r11855, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11856, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11857, %r11689, %r11855;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11860, %r11857, %r11856;
	// end inline asm
	// begin inline asm
	mov.b32 %r11863, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11864, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11865, %r11692, %r11863;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11868, %r11865, %r11864;
	// end inline asm
	// begin inline asm
	mov.b32 %r11871, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11872, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11873, %r11695, %r11871;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11876, %r11873, %r11872;
	// end inline asm
	// begin inline asm
	mov.b32 %r11879, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11880, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11881, %r11698, %r11879;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11884, %r11881, %r11880;
	// end inline asm
	// begin inline asm
	mov.b32 %r11887, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11888, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11889, %r11701, %r11887;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11892, %r11889, %r11888;
	// end inline asm
	// begin inline asm
	mov.b32 %r11895, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11896, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11897, %r11704, %r11895;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11900, %r11897, %r11896;
	// end inline asm
	// begin inline asm
	mov.b32 %r11903, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11904, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11905, %r11707, %r11903;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11908, %r11905, %r11904;
	// end inline asm
	// begin inline asm
	mov.b32 %r11911, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11912, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11913, %r11710, %r11911;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11916, %r11913, %r11912;
	// end inline asm
	// begin inline asm
	mov.b32 %r11919, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11920, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11921, %r11713, %r11919;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11924, %r11921, %r11920;
	// end inline asm
	// begin inline asm
	mov.b32 %r11927, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11928, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11929, %r11716, %r11927;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11932, %r11929, %r11928;
	// end inline asm
	// begin inline asm
	mov.b32 %r11935, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11936, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11937, %r11719, %r11935;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11940, %r11937, %r11936;
	// end inline asm
	// begin inline asm
	mov.b32 %r11943, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11944, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11945, %r11722, %r11943;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11948, %r11945, %r11944;
	// end inline asm
	// begin inline asm
	mov.b32 %r11951, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11952, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11953, %r11725, %r11951;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11956, %r11953, %r11952;
	// end inline asm
	// begin inline asm
	mov.b32 %r11959, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11960, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11961, %r11728, %r11959;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11964, %r11961, %r11960;
	// end inline asm
	// begin inline asm
	mov.b32 %r11967, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11968, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11969, %r11731, %r11967;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11972, %r11969, %r11968;
	// end inline asm
	// begin inline asm
	mov.b32 %r11975, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11976, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11977, %r11734, %r11975;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11980, %r11977, %r11976;
	// end inline asm
	// begin inline asm
	mov.b32 %r11983, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11984, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11985, %r11737, %r11983;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11988, %r11985, %r11984;
	// end inline asm
	// begin inline asm
	mov.b32 %r11991, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11992, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11993, %r11740, %r11991;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11996, %r11993, %r11992;
	// end inline asm
	// begin inline asm
	mov.b32 %r12002, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12001, %r12002, %r12000;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12004, %r11748, %r12001;
	// end inline asm
	// begin inline asm
	mov.b32 %r12007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12008, %r12002, %r12007;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12011, %r11756, %r12008;
	// end inline asm
	// begin inline asm
	mov.b32 %r12014, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12015, %r12002, %r12014;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12018, %r11764, %r12015;
	// end inline asm
	// begin inline asm
	mov.b32 %r12021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12022, %r12002, %r12021;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12025, %r11772, %r12022;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12028, %r12004, %r12018, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12032, %r12011, %r12025, %r4399;
	// end inline asm
	shl.b32 	%r12039, %r12032, 4;
	// begin inline asm
	lop3.b32 %r12036, %r4405, %r12028, %r12039, 202;
	// end inline asm
	xor.b32  	%r16247, %r12036, -2004318072;
	// begin inline asm
	mov.b32 %r12043, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12041, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12042, %r12043, %r12041;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12045, %r11780, %r12042;
	// end inline asm
	// begin inline asm
	mov.b32 %r12048, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12049, %r12043, %r12048;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12052, %r11788, %r12049;
	// end inline asm
	// begin inline asm
	mov.b32 %r12055, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12056, %r12043, %r12055;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12059, %r11796, %r12056;
	// end inline asm
	// begin inline asm
	mov.b32 %r12062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12063, %r12043, %r12062;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12066, %r11804, %r12063;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12069, %r12045, %r12059, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12073, %r12052, %r12066, %r4399;
	// end inline asm
	shl.b32 	%r12080, %r12073, 4;
	// begin inline asm
	lop3.b32 %r12077, %r4405, %r12069, %r12080, 202;
	// end inline asm
	xor.b32  	%r16248, %r12077, -2004318072;
	// begin inline asm
	mov.b32 %r12084, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12082, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12083, %r12084, %r12082;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12086, %r11812, %r12083;
	// end inline asm
	// begin inline asm
	mov.b32 %r12089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12090, %r12084, %r12089;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12093, %r11820, %r12090;
	// end inline asm
	// begin inline asm
	mov.b32 %r12096, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12097, %r12084, %r12096;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12100, %r11828, %r12097;
	// end inline asm
	// begin inline asm
	mov.b32 %r12103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12104, %r12084, %r12103;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12107, %r11836, %r12104;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12110, %r12086, %r12100, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12114, %r12093, %r12107, %r4399;
	// end inline asm
	shl.b32 	%r12121, %r12114, 4;
	// begin inline asm
	lop3.b32 %r12118, %r4405, %r12110, %r12121, 202;
	// end inline asm
	xor.b32  	%r16249, %r12118, -2004318072;
	// begin inline asm
	mov.b32 %r12125, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12124, %r12125, %r12123;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12127, %r11844, %r12124;
	// end inline asm
	// begin inline asm
	mov.b32 %r12130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12131, %r12125, %r12130;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12134, %r11852, %r12131;
	// end inline asm
	// begin inline asm
	mov.b32 %r12137, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12138, %r12125, %r12137;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12141, %r11860, %r12138;
	// end inline asm
	// begin inline asm
	mov.b32 %r12144, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12145, %r12125, %r12144;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12148, %r11868, %r12145;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12151, %r12127, %r12141, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12155, %r12134, %r12148, %r4399;
	// end inline asm
	shl.b32 	%r12162, %r12155, 4;
	// begin inline asm
	lop3.b32 %r12159, %r4405, %r12151, %r12162, 202;
	// end inline asm
	xor.b32  	%r16250, %r12159, -2004318072;
	// begin inline asm
	mov.b32 %r12166, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12164, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12165, %r12166, %r12164;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12168, %r11876, %r12165;
	// end inline asm
	// begin inline asm
	mov.b32 %r12171, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12172, %r12166, %r12171;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12175, %r11884, %r12172;
	// end inline asm
	// begin inline asm
	mov.b32 %r12178, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12179, %r12166, %r12178;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12182, %r11892, %r12179;
	// end inline asm
	// begin inline asm
	mov.b32 %r12185, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12186, %r12166, %r12185;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12189, %r11900, %r12186;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12192, %r12168, %r12182, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12196, %r12175, %r12189, %r4399;
	// end inline asm
	shl.b32 	%r12203, %r12196, 4;
	// begin inline asm
	lop3.b32 %r12200, %r4405, %r12192, %r12203, 202;
	// end inline asm
	xor.b32  	%r16251, %r12200, -2004318072;
	// begin inline asm
	mov.b32 %r12207, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12206, %r12207, %r12205;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12209, %r11908, %r12206;
	// end inline asm
	// begin inline asm
	mov.b32 %r12212, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12213, %r12207, %r12212;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12216, %r11916, %r12213;
	// end inline asm
	// begin inline asm
	mov.b32 %r12219, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12220, %r12207, %r12219;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12223, %r11924, %r12220;
	// end inline asm
	// begin inline asm
	mov.b32 %r12226, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12227, %r12207, %r12226;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12230, %r11932, %r12227;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12233, %r12209, %r12223, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12237, %r12216, %r12230, %r4399;
	// end inline asm
	shl.b32 	%r12244, %r12237, 4;
	// begin inline asm
	lop3.b32 %r12241, %r4405, %r12233, %r12244, 202;
	// end inline asm
	xor.b32  	%r16252, %r12241, -2004318072;
	// begin inline asm
	mov.b32 %r12248, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12246, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12247, %r12248, %r12246;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12250, %r11940, %r12247;
	// end inline asm
	// begin inline asm
	mov.b32 %r12253, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12254, %r12248, %r12253;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12257, %r11948, %r12254;
	// end inline asm
	// begin inline asm
	mov.b32 %r12260, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12261, %r12248, %r12260;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12264, %r11956, %r12261;
	// end inline asm
	// begin inline asm
	mov.b32 %r12267, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12268, %r12248, %r12267;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12271, %r11964, %r12268;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12274, %r12250, %r12264, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12278, %r12257, %r12271, %r4399;
	// end inline asm
	shl.b32 	%r12285, %r12278, 4;
	// begin inline asm
	lop3.b32 %r12282, %r4405, %r12274, %r12285, 202;
	// end inline asm
	xor.b32  	%r16253, %r12282, -2004318072;
	// begin inline asm
	mov.b32 %r12289, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12287, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12288, %r12289, %r12287;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12291, %r11972, %r12288;
	// end inline asm
	// begin inline asm
	mov.b32 %r12294, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12295, %r12289, %r12294;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12298, %r11980, %r12295;
	// end inline asm
	// begin inline asm
	mov.b32 %r12301, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12302, %r12289, %r12301;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12305, %r11988, %r12302;
	// end inline asm
	// begin inline asm
	mov.b32 %r12308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12309, %r12289, %r12308;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12312, %r11996, %r12309;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12315, %r12291, %r12305, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12319, %r12298, %r12312, %r4399;
	// end inline asm
	shl.b32 	%r12326, %r12319, 4;
	// begin inline asm
	lop3.b32 %r12323, %r4405, %r12315, %r12326, 202;
	// end inline asm
	xor.b32  	%r16254, %r12323, -2004318072;
	st.shared.u32 	[%rd116], %r16247;
	st.shared.u32 	[%rd118], %r16248;
	st.shared.u32 	[%rd120], %r16249;
	st.shared.u32 	[%rd122], %r16250;
	st.shared.u32 	[%rd124], %r16251;
	st.shared.u32 	[%rd126], %r16252;
	st.shared.u32 	[%rd128], %r16253;
	st.shared.u32 	[%rd130], %r16254;
	ld.shared.u32 	%r16388, [%rd100];
	ld.shared.u32 	%r16389, [%rd102];
	ld.shared.u32 	%r16390, [%rd104];
	ld.shared.u32 	%r16391, [%rd106];
	ld.shared.u32 	%r16400, [%rd108];
	ld.shared.u32 	%r16401, [%rd110];
	ld.shared.u32 	%r16402, [%rd112];
	ld.shared.u32 	%r16403, [%rd114];
	// begin inline asm
	mov.b32 %r12332, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12343, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12331, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r12329, %r882, %r12331, %r12332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12333, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12334, %r12332, %r12333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12337, %r12329, %r12334;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12340, %r893, %r12331, %r12343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12344, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12345, %r12343, %r12344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12348, %r12340, %r12345;
	// end inline asm
	shr.u32 	%r12353, %r12331, 8;
	// begin inline asm
	lop3.b32 %r12351, %r882, %r12353, %r12332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12355, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12356, %r12332, %r12355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12359, %r12351, %r12356;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12362, %r893, %r12353, %r12343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12367, %r12343, %r12366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12370, %r12362, %r12367;
	// end inline asm
	// begin inline asm
	mov.b32 %r12378, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12389, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12377, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r12375, %r882, %r12377, %r12378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12379, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12380, %r12378, %r12379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12383, %r12375, %r12380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12386, %r893, %r12377, %r12389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12390, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12391, %r12389, %r12390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12394, %r12386, %r12391;
	// end inline asm
	shr.u32 	%r12399, %r12377, 8;
	// begin inline asm
	lop3.b32 %r12397, %r882, %r12399, %r12378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12402, %r12378, %r12401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12405, %r12397, %r12402;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12408, %r893, %r12399, %r12389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12413, %r12389, %r12412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12416, %r12408, %r12413;
	// end inline asm
	// begin inline asm
	mov.b32 %r12424, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12435, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12423, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r12421, %r882, %r12423, %r12424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12425, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12426, %r12424, %r12425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12429, %r12421, %r12426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12432, %r893, %r12423, %r12435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12436, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12437, %r12435, %r12436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12440, %r12432, %r12437;
	// end inline asm
	shr.u32 	%r12445, %r12423, 8;
	// begin inline asm
	lop3.b32 %r12443, %r882, %r12445, %r12424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12447, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12448, %r12424, %r12447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12451, %r12443, %r12448;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12454, %r893, %r12445, %r12435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12459, %r12435, %r12458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12462, %r12454, %r12459;
	// end inline asm
	// begin inline asm
	mov.b32 %r12470, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12481, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12469, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r12467, %r882, %r12469, %r12470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12472, %r12470, %r12471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12475, %r12467, %r12472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12478, %r893, %r12469, %r12481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12482, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12483, %r12481, %r12482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12486, %r12478, %r12483;
	// end inline asm
	shr.u32 	%r12491, %r12469, 8;
	// begin inline asm
	lop3.b32 %r12489, %r882, %r12491, %r12470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12493, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12494, %r12470, %r12493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12497, %r12489, %r12494;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12500, %r893, %r12491, %r12481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12505, %r12481, %r12504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12508, %r12500, %r12505;
	// end inline asm
	// begin inline asm
	mov.b32 %r12516, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12527, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12515, %r16400, -2004318072;
	// begin inline asm
	lop3.b32 %r12513, %r882, %r12515, %r12516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12518, %r12516, %r12517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12521, %r12513, %r12518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12524, %r893, %r12515, %r12527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12529, %r12527, %r12528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12532, %r12524, %r12529;
	// end inline asm
	shr.u32 	%r12537, %r12515, 8;
	// begin inline asm
	lop3.b32 %r12535, %r882, %r12537, %r12516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12539, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12540, %r12516, %r12539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12543, %r12535, %r12540;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12546, %r893, %r12537, %r12527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12550, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12551, %r12527, %r12550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12554, %r12546, %r12551;
	// end inline asm
	// begin inline asm
	mov.b32 %r12562, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12573, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12561, %r16401, -2004318072;
	// begin inline asm
	lop3.b32 %r12559, %r882, %r12561, %r12562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12563, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12564, %r12562, %r12563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12567, %r12559, %r12564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12570, %r893, %r12561, %r12573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12575, %r12573, %r12574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12578, %r12570, %r12575;
	// end inline asm
	shr.u32 	%r12583, %r12561, 8;
	// begin inline asm
	lop3.b32 %r12581, %r882, %r12583, %r12562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12586, %r12562, %r12585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12589, %r12581, %r12586;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12592, %r893, %r12583, %r12573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12596, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12597, %r12573, %r12596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12600, %r12592, %r12597;
	// end inline asm
	// begin inline asm
	mov.b32 %r12608, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12619, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12607, %r16402, -2004318072;
	// begin inline asm
	lop3.b32 %r12605, %r882, %r12607, %r12608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12609, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12610, %r12608, %r12609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12613, %r12605, %r12610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12616, %r893, %r12607, %r12619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12620, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12621, %r12619, %r12620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12624, %r12616, %r12621;
	// end inline asm
	shr.u32 	%r12629, %r12607, 8;
	// begin inline asm
	lop3.b32 %r12627, %r882, %r12629, %r12608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12631, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12632, %r12608, %r12631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12635, %r12627, %r12632;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12638, %r893, %r12629, %r12619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12642, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12643, %r12619, %r12642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12646, %r12638, %r12643;
	// end inline asm
	// begin inline asm
	mov.b32 %r12654, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12665, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12653, %r16403, -2004318072;
	// begin inline asm
	lop3.b32 %r12651, %r882, %r12653, %r12654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12655, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12656, %r12654, %r12655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12659, %r12651, %r12656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12662, %r893, %r12653, %r12665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12666, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12667, %r12665, %r12666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12670, %r12662, %r12667;
	// end inline asm
	shr.u32 	%r12675, %r12653, 8;
	// begin inline asm
	lop3.b32 %r12673, %r882, %r12675, %r12654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12677, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12678, %r12654, %r12677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12681, %r12673, %r12678;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12684, %r893, %r12675, %r12665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12688, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12689, %r12665, %r12688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12692, %r12684, %r12689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12695, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12697, %r12695, %r12337;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12700, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12702, %r12700, %r12348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12705, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12707, %r12705, %r12359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12710, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12712, %r12710, %r12370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12715, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12717, %r12715, %r12383;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12720, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12722, %r12720, %r12394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12725, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12727, %r12725, %r12405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12730, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12732, %r12730, %r12416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12735, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12737, %r12735, %r12429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12740, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12742, %r12740, %r12440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12745, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12747, %r12745, %r12451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12750, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12752, %r12750, %r12462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12755, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12757, %r12755, %r12475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12760, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12762, %r12760, %r12486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12765, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12767, %r12765, %r12497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12770, %r416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12772, %r12770, %r12508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12775, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12777, %r12775, %r12521;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12780, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12782, %r12780, %r12532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12785, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12787, %r12785, %r12543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12790, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12792, %r12790, %r12554;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12795, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12797, %r12795, %r12567;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12800, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12802, %r12800, %r12578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12805, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12807, %r12805, %r12589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12810, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12812, %r12810, %r12600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12815, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12817, %r12815, %r12613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12820, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12822, %r12820, %r12624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12825, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12827, %r12825, %r12635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12830, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12832, %r12830, %r12646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12835, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12837, %r12835, %r12659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12840, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12842, %r12840, %r12670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12845, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12847, %r12845, %r12681;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12850, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12852, %r12850, %r12692;
	// end inline asm
	// begin inline asm
	mov.b32 %r12860, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12871, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12857, %r882, %r883, %r12860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12861, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12862, %r12860, %r12861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12865, %r12857, %r12862;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12868, %r893, %r883, %r12871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12872, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12873, %r12871, %r12872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12876, %r12868, %r12873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12879, %r882, %r905, %r12860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12883, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12884, %r12860, %r12883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12887, %r12879, %r12884;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12890, %r893, %r905, %r12871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12894, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12895, %r12871, %r12894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12898, %r12890, %r12895;
	// end inline asm
	// begin inline asm
	mov.b32 %r12906, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12917, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12903, %r882, %r929, %r12906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12907, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12908, %r12906, %r12907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12911, %r12903, %r12908;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12914, %r893, %r929, %r12917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12918, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12919, %r12917, %r12918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12922, %r12914, %r12919;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12925, %r882, %r951, %r12906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12929, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12930, %r12906, %r12929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12933, %r12925, %r12930;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12936, %r893, %r951, %r12917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12940, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12941, %r12917, %r12940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12944, %r12936, %r12941;
	// end inline asm
	// begin inline asm
	mov.b32 %r12952, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12963, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12949, %r882, %r975, %r12952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12953, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12954, %r12952, %r12953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12957, %r12949, %r12954;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12960, %r893, %r975, %r12963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12965, %r12963, %r12964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12968, %r12960, %r12965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12971, %r882, %r997, %r12952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12975, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12976, %r12952, %r12975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12979, %r12971, %r12976;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12982, %r893, %r997, %r12963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12986, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12987, %r12963, %r12986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12990, %r12982, %r12987;
	// end inline asm
	// begin inline asm
	mov.b32 %r12998, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13009, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12995, %r882, %r1021, %r12998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13000, %r12998, %r12999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13003, %r12995, %r13000;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13006, %r893, %r1021, %r13009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13010, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13011, %r13009, %r13010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13014, %r13006, %r13011;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13017, %r882, %r1043, %r12998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13022, %r12998, %r13021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13025, %r13017, %r13022;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13028, %r893, %r1043, %r13009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13032, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13033, %r13009, %r13032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13036, %r13028, %r13033;
	// end inline asm
	// begin inline asm
	mov.b32 %r13044, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13055, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13041, %r882, %r1067, %r13044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13045, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13046, %r13044, %r13045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13049, %r13041, %r13046;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13052, %r893, %r1067, %r13055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13057, %r13055, %r13056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13060, %r13052, %r13057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13063, %r882, %r1089, %r13044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13068, %r13044, %r13067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13071, %r13063, %r13068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13074, %r893, %r1089, %r13055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13078, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13079, %r13055, %r13078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13082, %r13074, %r13079;
	// end inline asm
	// begin inline asm
	mov.b32 %r13090, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13101, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13087, %r882, %r1113, %r13090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13091, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13092, %r13090, %r13091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13095, %r13087, %r13092;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13098, %r893, %r1113, %r13101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13102, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13103, %r13101, %r13102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13106, %r13098, %r13103;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13109, %r882, %r1135, %r13090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13114, %r13090, %r13113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13117, %r13109, %r13114;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13120, %r893, %r1135, %r13101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13125, %r13101, %r13124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13128, %r13120, %r13125;
	// end inline asm
	// begin inline asm
	mov.b32 %r13136, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13147, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13133, %r882, %r1159, %r13136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13137, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13138, %r13136, %r13137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13141, %r13133, %r13138;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13144, %r893, %r1159, %r13147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13148, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13149, %r13147, %r13148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13152, %r13144, %r13149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13155, %r882, %r1181, %r13136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13160, %r13136, %r13159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13163, %r13155, %r13160;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13166, %r893, %r1181, %r13147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13170, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13171, %r13147, %r13170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13174, %r13166, %r13171;
	// end inline asm
	// begin inline asm
	mov.b32 %r13182, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13193, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13179, %r882, %r1205, %r13182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13183, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13184, %r13182, %r13183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13187, %r13179, %r13184;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13190, %r893, %r1205, %r13193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13194, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13195, %r13193, %r13194;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13198, %r13190, %r13195;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13201, %r882, %r1227, %r13182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13206, %r13182, %r13205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13209, %r13201, %r13206;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13212, %r893, %r1227, %r13193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13216, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13217, %r13193, %r13216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13220, %r13212, %r13217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13223, %r308, %r12865, %r12697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13227, %r308, %r12876, %r12702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13231, %r308, %r12887, %r12707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13235, %r308, %r12898, %r12712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13239, %r308, %r12911, %r12717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13243, %r308, %r12922, %r12722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13247, %r308, %r12933, %r12727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13251, %r308, %r12944, %r12732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13255, %r308, %r12957, %r12737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13259, %r308, %r12968, %r12742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13263, %r308, %r12979, %r12747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13267, %r308, %r12990, %r12752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13271, %r308, %r13003, %r12757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13275, %r308, %r13014, %r12762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13279, %r308, %r13025, %r12767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13283, %r308, %r13036, %r12772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13287, %r326, %r13049, %r12777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13291, %r326, %r13060, %r12782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13295, %r326, %r13071, %r12787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13299, %r326, %r13082, %r12792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13303, %r326, %r13095, %r12797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13307, %r326, %r13106, %r12802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13311, %r326, %r13117, %r12807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13315, %r326, %r13128, %r12812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13319, %r326, %r13141, %r12817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13323, %r326, %r13152, %r12822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13327, %r326, %r13163, %r12827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13331, %r326, %r13174, %r12832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13335, %r326, %r13187, %r12837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13339, %r326, %r13198, %r12842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13343, %r326, %r13209, %r12847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13347, %r326, %r13220, %r12852;
	// end inline asm
	// begin inline asm
	mov.b32 %r13356, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13367, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13353, %r882, %r4699, %r13356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13357, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13358, %r13356, %r13357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13361, %r13353, %r13358;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13364, %r893, %r4699, %r13367, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13368, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13369, %r13367, %r13368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13372, %r13364, %r13369;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13375, %r882, %r4721, %r13356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13379, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13380, %r13356, %r13379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13383, %r13375, %r13380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13386, %r893, %r4721, %r13367, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13390, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13391, %r13367, %r13390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13394, %r13386, %r13391;
	// end inline asm
	// begin inline asm
	mov.b32 %r13402, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13413, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13399, %r882, %r4745, %r13402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13403, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13404, %r13402, %r13403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13407, %r13399, %r13404;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13410, %r893, %r4745, %r13413, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13414, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13415, %r13413, %r13414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13418, %r13410, %r13415;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13421, %r882, %r4767, %r13402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13425, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13426, %r13402, %r13425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13429, %r13421, %r13426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13432, %r893, %r4767, %r13413, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13436, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13437, %r13413, %r13436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13440, %r13432, %r13437;
	// end inline asm
	// begin inline asm
	mov.b32 %r13448, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13459, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13445, %r882, %r4791, %r13448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13449, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13450, %r13448, %r13449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13453, %r13445, %r13450;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13456, %r893, %r4791, %r13459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13460, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13461, %r13459, %r13460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13464, %r13456, %r13461;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13467, %r882, %r4813, %r13448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13472, %r13448, %r13471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13475, %r13467, %r13472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13478, %r893, %r4813, %r13459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13482, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13483, %r13459, %r13482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13486, %r13478, %r13483;
	// end inline asm
	// begin inline asm
	mov.b32 %r13494, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13505, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13491, %r882, %r4837, %r13494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13495, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13496, %r13494, %r13495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13499, %r13491, %r13496;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13502, %r893, %r4837, %r13505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13506, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13507, %r13505, %r13506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13510, %r13502, %r13507;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13513, %r882, %r4859, %r13494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13518, %r13494, %r13517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13521, %r13513, %r13518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13524, %r893, %r4859, %r13505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13529, %r13505, %r13528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13532, %r13524, %r13529;
	// end inline asm
	// begin inline asm
	mov.b32 %r13540, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13551, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13537, %r882, %r4883, %r13540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13541, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13542, %r13540, %r13541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13545, %r13537, %r13542;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13548, %r893, %r4883, %r13551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13552, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13553, %r13551, %r13552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13556, %r13548, %r13553;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13559, %r882, %r4905, %r13540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13563, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13564, %r13540, %r13563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13567, %r13559, %r13564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13570, %r893, %r4905, %r13551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13575, %r13551, %r13574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13578, %r13570, %r13575;
	// end inline asm
	// begin inline asm
	mov.b32 %r13586, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13597, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13583, %r882, %r4929, %r13586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13587, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13588, %r13586, %r13587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13591, %r13583, %r13588;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13594, %r893, %r4929, %r13597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13598, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13599, %r13597, %r13598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13602, %r13594, %r13599;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13605, %r882, %r4951, %r13586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13609, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13610, %r13586, %r13609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13613, %r13605, %r13610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13616, %r893, %r4951, %r13597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13620, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13621, %r13597, %r13620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13624, %r13616, %r13621;
	// end inline asm
	// begin inline asm
	mov.b32 %r13632, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13643, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13629, %r882, %r4975, %r13632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13633, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13634, %r13632, %r13633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13637, %r13629, %r13634;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13640, %r893, %r4975, %r13643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13644, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13645, %r13643, %r13644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13648, %r13640, %r13645;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13651, %r882, %r4997, %r13632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13655, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13656, %r13632, %r13655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13659, %r13651, %r13656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13662, %r893, %r4997, %r13643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13666, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13667, %r13643, %r13666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13670, %r13662, %r13667;
	// end inline asm
	// begin inline asm
	mov.b32 %r13678, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13689, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13675, %r882, %r5021, %r13678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13679, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13680, %r13678, %r13679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13683, %r13675, %r13680;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13686, %r893, %r5021, %r13689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13690, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13691, %r13689, %r13690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13694, %r13686, %r13691;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13697, %r882, %r5043, %r13678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13701, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13702, %r13678, %r13701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13705, %r13697, %r13702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13708, %r893, %r5043, %r13689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13712, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13713, %r13689, %r13712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13716, %r13708, %r13713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13719, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13721, %r13719, %r13361, %r13223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13725, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13727, %r13725, %r13372, %r13227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13731, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13733, %r13731, %r13383, %r13231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13737, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13739, %r13737, %r13394, %r13235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13743, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13745, %r13743, %r13407, %r13239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13749, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13751, %r13749, %r13418, %r13243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13755, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13757, %r13755, %r13429, %r13247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13761, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13763, %r13761, %r13440, %r13251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13767, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13769, %r13767, %r13453, %r13255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13773, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13775, %r13773, %r13464, %r13259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13779, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13781, %r13779, %r13475, %r13263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13785, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13787, %r13785, %r13486, %r13267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13791, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13793, %r13791, %r13499, %r13271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13797, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13799, %r13797, %r13510, %r13275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13803, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13805, %r13803, %r13521, %r13279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13809, %r344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13811, %r13809, %r13532, %r13283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13815, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13817, %r13815, %r13545, %r13287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13821, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13823, %r13821, %r13556, %r13291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13827, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13829, %r13827, %r13567, %r13295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13833, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13835, %r13833, %r13578, %r13299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13839, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13841, %r13839, %r13591, %r13303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13845, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13847, %r13845, %r13602, %r13307;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13851, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13853, %r13851, %r13613, %r13311;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13857, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13859, %r13857, %r13624, %r13315;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13863, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13865, %r13863, %r13637, %r13319;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13869, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13871, %r13869, %r13648, %r13323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13875, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13877, %r13875, %r13659, %r13327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13881, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13883, %r13881, %r13670, %r13331;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13887, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13889, %r13887, %r13683, %r13335;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13893, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13895, %r13893, %r13694, %r13339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13899, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13901, %r13899, %r13705, %r13343;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13905, %r362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13907, %r13905, %r13716, %r13347;
	// end inline asm
	// begin inline asm
	mov.b32 %r13916, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13927, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13913, %r882, %r8515, %r13916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13918, %r13916, %r13917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13921, %r13913, %r13918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13924, %r893, %r8515, %r13927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13929, %r13927, %r13928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13932, %r13924, %r13929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13935, %r882, %r8537, %r13916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13940, %r13916, %r13939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13943, %r13935, %r13940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13946, %r893, %r8537, %r13927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13951, %r13927, %r13950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13954, %r13946, %r13951;
	// end inline asm
	// begin inline asm
	mov.b32 %r13962, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13973, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13959, %r882, %r8561, %r13962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13963, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13964, %r13962, %r13963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13967, %r13959, %r13964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13970, %r893, %r8561, %r13973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13975, %r13973, %r13974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13978, %r13970, %r13975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13981, %r882, %r8583, %r13962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13986, %r13962, %r13985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13989, %r13981, %r13986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13992, %r893, %r8583, %r13973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13997, %r13973, %r13996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14000, %r13992, %r13997;
	// end inline asm
	// begin inline asm
	mov.b32 %r14008, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14019, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14005, %r882, %r8607, %r14008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14009, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14010, %r14008, %r14009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14013, %r14005, %r14010;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14016, %r893, %r8607, %r14019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14021, %r14019, %r14020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14024, %r14016, %r14021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14027, %r882, %r8629, %r14008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14032, %r14008, %r14031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14035, %r14027, %r14032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14038, %r893, %r8629, %r14019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14043, %r14019, %r14042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14046, %r14038, %r14043;
	// end inline asm
	// begin inline asm
	mov.b32 %r14054, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14065, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14051, %r882, %r8653, %r14054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14055, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14056, %r14054, %r14055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14059, %r14051, %r14056;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14062, %r893, %r8653, %r14065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14067, %r14065, %r14066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14070, %r14062, %r14067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14073, %r882, %r8675, %r14054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14078, %r14054, %r14077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14081, %r14073, %r14078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14084, %r893, %r8675, %r14065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14088, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14089, %r14065, %r14088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14092, %r14084, %r14089;
	// end inline asm
	// begin inline asm
	mov.b32 %r14100, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14111, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14097, %r882, %r8699, %r14100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14102, %r14100, %r14101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14105, %r14097, %r14102;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14108, %r893, %r8699, %r14111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14113, %r14111, %r14112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14116, %r14108, %r14113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14119, %r882, %r8721, %r14100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14124, %r14100, %r14123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14127, %r14119, %r14124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14130, %r893, %r8721, %r14111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14135, %r14111, %r14134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14138, %r14130, %r14135;
	// end inline asm
	// begin inline asm
	mov.b32 %r14146, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14157, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14143, %r882, %r8745, %r14146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14147, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14148, %r14146, %r14147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14151, %r14143, %r14148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14154, %r893, %r8745, %r14157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14159, %r14157, %r14158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14162, %r14154, %r14159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14165, %r882, %r8767, %r14146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14170, %r14146, %r14169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14173, %r14165, %r14170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14176, %r893, %r8767, %r14157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14180, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14181, %r14157, %r14180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14184, %r14176, %r14181;
	// end inline asm
	// begin inline asm
	mov.b32 %r14192, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14203, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14189, %r882, %r8791, %r14192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14193, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14194, %r14192, %r14193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14197, %r14189, %r14194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14200, %r893, %r8791, %r14203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14204, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14205, %r14203, %r14204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14208, %r14200, %r14205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14211, %r882, %r8813, %r14192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14215, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14216, %r14192, %r14215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14219, %r14211, %r14216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14222, %r893, %r8813, %r14203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14226, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14227, %r14203, %r14226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14230, %r14222, %r14227;
	// end inline asm
	// begin inline asm
	mov.b32 %r14238, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14249, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14235, %r882, %r8837, %r14238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14239, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14240, %r14238, %r14239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14243, %r14235, %r14240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14246, %r893, %r8837, %r14249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14251, %r14249, %r14250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14254, %r14246, %r14251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14257, %r882, %r8859, %r14238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14261, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14262, %r14238, %r14261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14265, %r14257, %r14262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14268, %r893, %r8859, %r14249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14272, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14273, %r14249, %r14272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14276, %r14268, %r14273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14414, %r380, %r13921, %r13721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14411, %r380, %r13932, %r13727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14423, %r380, %r13943, %r13733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14420, %r380, %r13954, %r13739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14432, %r380, %r13967, %r13745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14429, %r380, %r13978, %r13751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14441, %r380, %r13989, %r13757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14438, %r380, %r14000, %r13763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14450, %r380, %r14013, %r13769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14447, %r380, %r14024, %r13775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14459, %r380, %r14035, %r13781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14456, %r380, %r14046, %r13787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14468, %r380, %r14059, %r13793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14465, %r380, %r14070, %r13799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14477, %r380, %r14081, %r13805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14474, %r380, %r14092, %r13811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14486, %r398, %r14105, %r13817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14483, %r398, %r14116, %r13823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14495, %r398, %r14127, %r13829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14492, %r398, %r14138, %r13835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14504, %r398, %r14151, %r13841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14501, %r398, %r14162, %r13847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14513, %r398, %r14173, %r13853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14510, %r398, %r14184, %r13859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14522, %r398, %r14197, %r13865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14519, %r398, %r14208, %r13871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14531, %r398, %r14219, %r13877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14528, %r398, %r14230, %r13883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14540, %r398, %r14243, %r13889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14537, %r398, %r14254, %r13895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14549, %r398, %r14265, %r13901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14546, %r398, %r14276, %r13907;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14407, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14409, %r14407, %r14411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14412, %r462, %r14414, %r14409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14416, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14418, %r14416, %r14420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14421, %r462, %r14423, %r14418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14425, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14427, %r14425, %r14429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14430, %r462, %r14432, %r14427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14434, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14436, %r14434, %r14438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14439, %r462, %r14441, %r14436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14443, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14445, %r14443, %r14447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14448, %r462, %r14450, %r14445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14452, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14454, %r14452, %r14456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14457, %r462, %r14459, %r14454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14461, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14463, %r14461, %r14465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14466, %r462, %r14468, %r14463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14470, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14472, %r14470, %r14474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14475, %r462, %r14477, %r14472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14479, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14481, %r14479, %r14483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14484, %r465, %r14486, %r14481;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14488, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14490, %r14488, %r14492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14493, %r465, %r14495, %r14490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14497, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14499, %r14497, %r14501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14502, %r465, %r14504, %r14499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14506, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14508, %r14506, %r14510;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14511, %r465, %r14513, %r14508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14515, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14517, %r14515, %r14519;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14520, %r465, %r14522, %r14517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14524, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14526, %r14524, %r14528;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14529, %r465, %r14531, %r14526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14533, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14535, %r14533, %r14537;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14538, %r465, %r14540, %r14535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14542, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14544, %r14542, %r14546;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14547, %r465, %r14549, %r14544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14551, %r468, %r14414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14554, %r462, %r14411, %r14551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14558, %r468, %r14423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14561, %r462, %r14420, %r14558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14565, %r468, %r14432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14568, %r462, %r14429, %r14565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14572, %r468, %r14441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14575, %r462, %r14438, %r14572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14579, %r468, %r14450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14582, %r462, %r14447, %r14579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14586, %r468, %r14459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14589, %r462, %r14456, %r14586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14593, %r468, %r14468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14596, %r462, %r14465, %r14593;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14600, %r468, %r14477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14603, %r462, %r14474, %r14600;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14607, %r471, %r14486;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14610, %r465, %r14483, %r14607;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14614, %r471, %r14495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14617, %r465, %r14492, %r14614;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14621, %r471, %r14504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14624, %r465, %r14501, %r14621;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14628, %r471, %r14513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14631, %r465, %r14510, %r14628;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14635, %r471, %r14522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14638, %r465, %r14519, %r14635;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14642, %r471, %r14531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14645, %r465, %r14528, %r14642;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14649, %r471, %r14540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14652, %r465, %r14537, %r14649;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14656, %r471, %r14549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14659, %r465, %r14546, %r14656;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14830, %r14827}, {%r517, %r523, %r520, %r526}, {%r14412, %r14554}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14839, %r14836}, {%r517, %r523, %r520, %r526}, {%r14421, %r14561}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14848, %r14845}, {%r517, %r523, %r520, %r526}, {%r14430, %r14568}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14857, %r14854}, {%r517, %r523, %r520, %r526}, {%r14439, %r14575}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14866, %r14863}, {%r517, %r523, %r520, %r526}, {%r14448, %r14582}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14875, %r14872}, {%r517, %r523, %r520, %r526}, {%r14457, %r14589}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14884, %r14881}, {%r517, %r523, %r520, %r526}, {%r14466, %r14596}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14893, %r14890}, {%r517, %r523, %r520, %r526}, {%r14475, %r14603}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14902, %r14899}, {%r517, %r523, %r520, %r526}, {%r14484, %r14610}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14911, %r14908}, {%r517, %r523, %r520, %r526}, {%r14493, %r14617}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14920, %r14917}, {%r517, %r523, %r520, %r526}, {%r14502, %r14624}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14929, %r14926}, {%r517, %r523, %r520, %r526}, {%r14511, %r14631}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14938, %r14935}, {%r517, %r523, %r520, %r526}, {%r14520, %r14638}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14947, %r14944}, {%r517, %r523, %r520, %r526}, {%r14529, %r14645}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14956, %r14953}, {%r517, %r523, %r520, %r526}, {%r14538, %r14652}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14965, %r14962}, {%r517, %r523, %r520, %r526}, {%r14547, %r14659}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14823, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14825, %r14823, %r14827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14828, %r567, %r14830, %r14825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14832, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14834, %r14832, %r14836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14837, %r567, %r14839, %r14834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14841, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14843, %r14841, %r14845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14846, %r567, %r14848, %r14843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14850, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14852, %r14850, %r14854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14855, %r567, %r14857, %r14852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14859, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14861, %r14859, %r14863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14864, %r567, %r14866, %r14861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14868, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14870, %r14868, %r14872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14873, %r567, %r14875, %r14870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14877, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14879, %r14877, %r14881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14882, %r567, %r14884, %r14879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14886, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14888, %r14886, %r14890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14891, %r567, %r14893, %r14888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14895, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14897, %r14895, %r14899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14900, %r567, %r14902, %r14897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14904, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14906, %r14904, %r14908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14909, %r567, %r14911, %r14906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14913, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14915, %r14913, %r14917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14918, %r567, %r14920, %r14915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14922, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14924, %r14922, %r14926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14927, %r567, %r14929, %r14924;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14931, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14933, %r14931, %r14935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14936, %r567, %r14938, %r14933;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14940, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14942, %r14940, %r14944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14945, %r567, %r14947, %r14942;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14949, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14951, %r14949, %r14953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14954, %r567, %r14956, %r14951;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14958, %r570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14960, %r14958, %r14962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14963, %r567, %r14965, %r14960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14967, %r570, %r14830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14970, %r567, %r14827, %r14967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14974, %r570, %r14839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14977, %r567, %r14836, %r14974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14981, %r570, %r14848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14984, %r567, %r14845, %r14981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14988, %r570, %r14857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14991, %r567, %r14854, %r14988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14995, %r570, %r14866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14998, %r567, %r14863, %r14995;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15002, %r570, %r14875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15005, %r567, %r14872, %r15002;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15009, %r570, %r14884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15012, %r567, %r14881, %r15009;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15016, %r570, %r14893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15019, %r567, %r14890, %r15016;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15023, %r570, %r14902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15026, %r567, %r14899, %r15023;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15030, %r570, %r14911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15033, %r567, %r14908, %r15030;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15037, %r570, %r14920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15040, %r567, %r14917, %r15037;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15044, %r570, %r14929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15047, %r567, %r14926, %r15044;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15051, %r570, %r14938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15054, %r567, %r14935, %r15051;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15058, %r570, %r14947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15061, %r567, %r14944, %r15058;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15065, %r570, %r14956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15068, %r567, %r14953, %r15065;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15072, %r570, %r14965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15075, %r567, %r14962, %r15072;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15368, %r15371}, {%r605, %r611, %r608, %r614}, {%r14828, %r14970}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15374, %r15377}, {%r605, %r611, %r608, %r614}, {%r14837, %r14977}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15380, %r15383}, {%r605, %r611, %r608, %r614}, {%r14846, %r14984}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15386, %r15389}, {%r605, %r611, %r608, %r614}, {%r14855, %r14991}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15392, %r15395}, {%r605, %r611, %r608, %r614}, {%r14864, %r14998}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15398, %r15401}, {%r605, %r611, %r608, %r614}, {%r14873, %r15005}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15404, %r15407}, {%r605, %r611, %r608, %r614}, {%r14882, %r15012}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15410, %r15413}, {%r605, %r611, %r608, %r614}, {%r14891, %r15019}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15369, %r15372}, {%r605, %r611, %r608, %r614}, {%r14900, %r15026}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15375, %r15378}, {%r605, %r611, %r608, %r614}, {%r14909, %r15033}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15381, %r15384}, {%r605, %r611, %r608, %r614}, {%r14918, %r15040}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15387, %r15390}, {%r605, %r611, %r608, %r614}, {%r14927, %r15047}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15393, %r15396}, {%r605, %r611, %r608, %r614}, {%r14936, %r15054}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15399, %r15402}, {%r605, %r611, %r608, %r614}, {%r14945, %r15061}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15405, %r15408}, {%r605, %r611, %r608, %r614}, {%r14954, %r15068}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15411, %r15414}, {%r605, %r611, %r608, %r614}, {%r14963, %r15075}, {%r3223, %r3223};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15367, %r15368, %r15369;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15370, %r15371, %r15372;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15373, %r15374, %r15375;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15376, %r15377, %r15378;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15379, %r15380, %r15381;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15382, %r15383, %r15384;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15385, %r15386, %r15387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15388, %r15389, %r15390;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15391, %r15392, %r15393;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15394, %r15395, %r15396;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15397, %r15398, %r15399;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15400, %r15401, %r15402;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15403, %r15404, %r15405;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15406, %r15407, %r15408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15409, %r15410, %r15411;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15412, %r15413, %r15414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15415, %r15368, %r15369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15418, %r15371, %r15372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15421, %r15374, %r15375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15424, %r15377, %r15378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15427, %r15380, %r15381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15430, %r15383, %r15384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15433, %r15386, %r15387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15436, %r15389, %r15390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15439, %r15392, %r15393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15442, %r15395, %r15396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15445, %r15398, %r15399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15448, %r15401, %r15402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15451, %r15404, %r15405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15454, %r15407, %r15408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15457, %r15410, %r15411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15460, %r15413, %r15414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15463, %r186, %r15367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15466, %r186, %r15370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15469, %r186, %r15373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15472, %r186, %r15376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15475, %r186, %r15379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15478, %r186, %r15382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15481, %r186, %r15385;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15484, %r186, %r15388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15487, %r186, %r15391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15490, %r186, %r15394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15493, %r186, %r15397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15496, %r186, %r15400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15499, %r186, %r15403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15502, %r186, %r15406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15505, %r186, %r15409;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15508, %r186, %r15412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15511, %r187, %r15415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15514, %r187, %r15418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15517, %r187, %r15421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15520, %r187, %r15424;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15523, %r187, %r15427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15526, %r187, %r15430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15529, %r187, %r15433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15532, %r187, %r15436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15535, %r187, %r15439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15538, %r187, %r15442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15541, %r187, %r15445;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15544, %r187, %r15448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15547, %r187, %r15451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15550, %r187, %r15454;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15553, %r187, %r15457;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15556, %r187, %r15460;
	// end inline asm
	// begin inline asm
	mov.b32 %r15559, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15560, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15561, %r15463, %r15559;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15564, %r15561, %r15560;
	// end inline asm
	// begin inline asm
	mov.b32 %r15567, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15568, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15569, %r15466, %r15567;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15572, %r15569, %r15568;
	// end inline asm
	// begin inline asm
	mov.b32 %r15575, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15576, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15577, %r15469, %r15575;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15580, %r15577, %r15576;
	// end inline asm
	// begin inline asm
	mov.b32 %r15583, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15584, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15585, %r15472, %r15583;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15588, %r15585, %r15584;
	// end inline asm
	// begin inline asm
	mov.b32 %r15591, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15592, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15593, %r15475, %r15591;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15596, %r15593, %r15592;
	// end inline asm
	// begin inline asm
	mov.b32 %r15599, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15600, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15601, %r15478, %r15599;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15604, %r15601, %r15600;
	// end inline asm
	// begin inline asm
	mov.b32 %r15607, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15608, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15609, %r15481, %r15607;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15612, %r15609, %r15608;
	// end inline asm
	// begin inline asm
	mov.b32 %r15615, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15616, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15617, %r15484, %r15615;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15620, %r15617, %r15616;
	// end inline asm
	// begin inline asm
	mov.b32 %r15623, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15624, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15625, %r15487, %r15623;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15628, %r15625, %r15624;
	// end inline asm
	// begin inline asm
	mov.b32 %r15631, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15632, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15633, %r15490, %r15631;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15636, %r15633, %r15632;
	// end inline asm
	// begin inline asm
	mov.b32 %r15639, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15640, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15641, %r15493, %r15639;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15644, %r15641, %r15640;
	// end inline asm
	// begin inline asm
	mov.b32 %r15647, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15648, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15649, %r15496, %r15647;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15652, %r15649, %r15648;
	// end inline asm
	// begin inline asm
	mov.b32 %r15655, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15656, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15657, %r15499, %r15655;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15660, %r15657, %r15656;
	// end inline asm
	// begin inline asm
	mov.b32 %r15663, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15664, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15665, %r15502, %r15663;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15668, %r15665, %r15664;
	// end inline asm
	// begin inline asm
	mov.b32 %r15671, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15672, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15673, %r15505, %r15671;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15676, %r15673, %r15672;
	// end inline asm
	// begin inline asm
	mov.b32 %r15679, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15680, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15681, %r15508, %r15679;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15684, %r15681, %r15680;
	// end inline asm
	// begin inline asm
	mov.b32 %r15687, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15688, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15689, %r15511, %r15687;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15692, %r15689, %r15688;
	// end inline asm
	// begin inline asm
	mov.b32 %r15695, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15696, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15697, %r15514, %r15695;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15700, %r15697, %r15696;
	// end inline asm
	// begin inline asm
	mov.b32 %r15703, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15704, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15705, %r15517, %r15703;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15708, %r15705, %r15704;
	// end inline asm
	// begin inline asm
	mov.b32 %r15711, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15712, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15713, %r15520, %r15711;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15716, %r15713, %r15712;
	// end inline asm
	// begin inline asm
	mov.b32 %r15719, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15720, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15721, %r15523, %r15719;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15724, %r15721, %r15720;
	// end inline asm
	// begin inline asm
	mov.b32 %r15727, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15728, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15729, %r15526, %r15727;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15732, %r15729, %r15728;
	// end inline asm
	// begin inline asm
	mov.b32 %r15735, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15736, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15737, %r15529, %r15735;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15740, %r15737, %r15736;
	// end inline asm
	// begin inline asm
	mov.b32 %r15743, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15744, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15745, %r15532, %r15743;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15748, %r15745, %r15744;
	// end inline asm
	// begin inline asm
	mov.b32 %r15751, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15752, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15753, %r15535, %r15751;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15756, %r15753, %r15752;
	// end inline asm
	// begin inline asm
	mov.b32 %r15759, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15760, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15761, %r15538, %r15759;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15764, %r15761, %r15760;
	// end inline asm
	// begin inline asm
	mov.b32 %r15767, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15768, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15769, %r15541, %r15767;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15772, %r15769, %r15768;
	// end inline asm
	// begin inline asm
	mov.b32 %r15775, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15776, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15777, %r15544, %r15775;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15780, %r15777, %r15776;
	// end inline asm
	// begin inline asm
	mov.b32 %r15783, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15784, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15785, %r15547, %r15783;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15788, %r15785, %r15784;
	// end inline asm
	// begin inline asm
	mov.b32 %r15791, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15792, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15793, %r15550, %r15791;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15796, %r15793, %r15792;
	// end inline asm
	// begin inline asm
	mov.b32 %r15799, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15800, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15801, %r15553, %r15799;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15804, %r15801, %r15800;
	// end inline asm
	// begin inline asm
	mov.b32 %r15807, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15808, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15809, %r15556, %r15807;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15812, %r15809, %r15808;
	// end inline asm
	// begin inline asm
	mov.b32 %r15818, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15817, %r15818, %r15816;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15820, %r15564, %r15817;
	// end inline asm
	// begin inline asm
	mov.b32 %r15823, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15824, %r15818, %r15823;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15827, %r15572, %r15824;
	// end inline asm
	// begin inline asm
	mov.b32 %r15830, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15831, %r15818, %r15830;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15834, %r15580, %r15831;
	// end inline asm
	// begin inline asm
	mov.b32 %r15837, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15838, %r15818, %r15837;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15841, %r15588, %r15838;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15844, %r15820, %r15834, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15848, %r15827, %r15841, %r4399;
	// end inline asm
	shl.b32 	%r15855, %r15848, 4;
	// begin inline asm
	lop3.b32 %r15852, %r4405, %r15844, %r15855, 202;
	// end inline asm
	xor.b32  	%r16255, %r15852, -2004318072;
	// begin inline asm
	mov.b32 %r15859, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15857, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15858, %r15859, %r15857;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15861, %r15596, %r15858;
	// end inline asm
	// begin inline asm
	mov.b32 %r15864, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15865, %r15859, %r15864;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15868, %r15604, %r15865;
	// end inline asm
	// begin inline asm
	mov.b32 %r15871, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15872, %r15859, %r15871;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15875, %r15612, %r15872;
	// end inline asm
	// begin inline asm
	mov.b32 %r15878, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15879, %r15859, %r15878;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15882, %r15620, %r15879;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15885, %r15861, %r15875, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15889, %r15868, %r15882, %r4399;
	// end inline asm
	shl.b32 	%r15896, %r15889, 4;
	// begin inline asm
	lop3.b32 %r15893, %r4405, %r15885, %r15896, 202;
	// end inline asm
	xor.b32  	%r16256, %r15893, -2004318072;
	// begin inline asm
	mov.b32 %r15900, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15898, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15899, %r15900, %r15898;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15902, %r15628, %r15899;
	// end inline asm
	// begin inline asm
	mov.b32 %r15905, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15906, %r15900, %r15905;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15909, %r15636, %r15906;
	// end inline asm
	// begin inline asm
	mov.b32 %r15912, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15913, %r15900, %r15912;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15916, %r15644, %r15913;
	// end inline asm
	// begin inline asm
	mov.b32 %r15919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15920, %r15900, %r15919;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15923, %r15652, %r15920;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15926, %r15902, %r15916, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15930, %r15909, %r15923, %r4399;
	// end inline asm
	shl.b32 	%r15937, %r15930, 4;
	// begin inline asm
	lop3.b32 %r15934, %r4405, %r15926, %r15937, 202;
	// end inline asm
	xor.b32  	%r16257, %r15934, -2004318072;
	// begin inline asm
	mov.b32 %r15941, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15940, %r15941, %r15939;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15943, %r15660, %r15940;
	// end inline asm
	// begin inline asm
	mov.b32 %r15946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15947, %r15941, %r15946;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15950, %r15668, %r15947;
	// end inline asm
	// begin inline asm
	mov.b32 %r15953, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15954, %r15941, %r15953;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15957, %r15676, %r15954;
	// end inline asm
	// begin inline asm
	mov.b32 %r15960, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15961, %r15941, %r15960;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15964, %r15684, %r15961;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15967, %r15943, %r15957, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15971, %r15950, %r15964, %r4399;
	// end inline asm
	shl.b32 	%r15978, %r15971, 4;
	// begin inline asm
	lop3.b32 %r15975, %r4405, %r15967, %r15978, 202;
	// end inline asm
	xor.b32  	%r16258, %r15975, -2004318072;
	// begin inline asm
	mov.b32 %r15982, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15980, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15981, %r15982, %r15980;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15984, %r15692, %r15981;
	// end inline asm
	// begin inline asm
	mov.b32 %r15987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15988, %r15982, %r15987;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15991, %r15700, %r15988;
	// end inline asm
	// begin inline asm
	mov.b32 %r15994, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15995, %r15982, %r15994;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15998, %r15708, %r15995;
	// end inline asm
	// begin inline asm
	mov.b32 %r16001, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16002, %r15982, %r16001;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16005, %r15716, %r16002;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16008, %r15984, %r15998, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16012, %r15991, %r16005, %r4399;
	// end inline asm
	shl.b32 	%r16019, %r16012, 4;
	// begin inline asm
	lop3.b32 %r16016, %r4405, %r16008, %r16019, 202;
	// end inline asm
	xor.b32  	%r16259, %r16016, -2004318072;
	// begin inline asm
	mov.b32 %r16023, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16022, %r16023, %r16021;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16025, %r15724, %r16022;
	// end inline asm
	// begin inline asm
	mov.b32 %r16028, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16029, %r16023, %r16028;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16032, %r15732, %r16029;
	// end inline asm
	// begin inline asm
	mov.b32 %r16035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16036, %r16023, %r16035;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16039, %r15740, %r16036;
	// end inline asm
	// begin inline asm
	mov.b32 %r16042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16043, %r16023, %r16042;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16046, %r15748, %r16043;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16049, %r16025, %r16039, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16053, %r16032, %r16046, %r4399;
	// end inline asm
	shl.b32 	%r16060, %r16053, 4;
	// begin inline asm
	lop3.b32 %r16057, %r4405, %r16049, %r16060, 202;
	// end inline asm
	xor.b32  	%r16260, %r16057, -2004318072;
	// begin inline asm
	mov.b32 %r16064, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16063, %r16064, %r16062;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16066, %r15756, %r16063;
	// end inline asm
	// begin inline asm
	mov.b32 %r16069, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16070, %r16064, %r16069;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16073, %r15764, %r16070;
	// end inline asm
	// begin inline asm
	mov.b32 %r16076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16077, %r16064, %r16076;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16080, %r15772, %r16077;
	// end inline asm
	// begin inline asm
	mov.b32 %r16083, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16084, %r16064, %r16083;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16087, %r15780, %r16084;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16090, %r16066, %r16080, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16094, %r16073, %r16087, %r4399;
	// end inline asm
	shl.b32 	%r16101, %r16094, 4;
	// begin inline asm
	lop3.b32 %r16098, %r4405, %r16090, %r16101, 202;
	// end inline asm
	xor.b32  	%r16261, %r16098, -2004318072;
	// begin inline asm
	mov.b32 %r16105, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16104, %r16105, %r16103;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16107, %r15788, %r16104;
	// end inline asm
	// begin inline asm
	mov.b32 %r16110, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16111, %r16105, %r16110;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16114, %r15796, %r16111;
	// end inline asm
	// begin inline asm
	mov.b32 %r16117, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16118, %r16105, %r16117;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16121, %r15804, %r16118;
	// end inline asm
	// begin inline asm
	mov.b32 %r16124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16125, %r16105, %r16124;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16128, %r15812, %r16125;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16131, %r16107, %r16121, %r4399;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16135, %r16114, %r16128, %r4399;
	// end inline asm
	shl.b32 	%r16142, %r16135, 4;
	// begin inline asm
	lop3.b32 %r16139, %r4405, %r16131, %r16142, 202;
	// end inline asm
	xor.b32  	%r16262, %r16139, -2004318072;
	st.shared.u32 	[%rd116], %r16255;
	st.shared.u32 	[%rd118], %r16256;
	st.shared.u32 	[%rd120], %r16257;
	st.shared.u32 	[%rd122], %r16258;
	st.shared.u32 	[%rd124], %r16259;
	st.shared.u32 	[%rd126], %r16260;
	st.shared.u32 	[%rd128], %r16261;
	st.shared.u32 	[%rd130], %r16262;
	add.s32 	%r16405, %r16405, 128;
	setp.eq.s32 	%p329, %r16405, 256;
	@%p329 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;
$L__BB0_184:                            // %guard_exit29817
                                        //   in Loop: Header=BB0_181 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16268, [%rd5];
	ld.shared.u32 	%r16269, [%rd6+128];
	ld.shared.u32 	%r16276, [%rd6+4];
	ld.shared.u32 	%r16277, [%rd6+132];
	ld.shared.u32 	%r16284, [%rd7];
	ld.shared.u32 	%r16285, [%rd8+128];
	ld.shared.u32 	%r16292, [%rd8+4];
	ld.shared.u32 	%r16293, [%rd8+132];
	ld.shared.u32 	%r16300, [%rd5+16644];
	ld.shared.u32 	%r16301, [%rd6+16772];
	ld.shared.u32 	%r16308, [%rd6+16648];
	ld.shared.u32 	%r16309, [%rd6+16776];
	ld.shared.u32 	%r16316, [%rd7+16644];
	ld.shared.u32 	%r16317, [%rd8+16772];
	ld.shared.u32 	%r16324, [%rd8+16648];
	ld.shared.u32 	%r16325, [%rd8+16776];
	// begin inline asm
	prmt.b32 %r16263, %r16268, %r16269, %r795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16267, %r16268, %r16269, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16271, %r16276, %r16277, %r795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16275, %r16276, %r16277, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16279, %r16284, %r16285, %r795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16283, %r16284, %r16285, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16287, %r16292, %r16293, %r795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16291, %r16292, %r16293, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16295, %r16300, %r16301, %r795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16299, %r16300, %r16301, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16303, %r16308, %r16309, %r795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16307, %r16308, %r16309, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16311, %r16316, %r16317, %r795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16315, %r16316, %r16317, %r799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16319, %r16324, %r16325, %r795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16323, %r16324, %r16325, %r799;
	// end inline asm
	selp.b32 	%r16327, %r16267, %r16263, %p315;
	shfl.sync.bfly.b32	%r257, %r16327, 8, 31, -1;
	selp.b32 	%r16328, %r16275, %r16271, %p315;
	shfl.sync.bfly.b32	%r258, %r16328, 8, 31, -1;
	selp.b32 	%r16329, %r16283, %r16279, %p315;
	shfl.sync.bfly.b32	%r259, %r16329, 8, 31, -1;
	selp.b32 	%r16330, %r16291, %r16287, %p315;
	shfl.sync.bfly.b32	%r260, %r16330, 8, 31, -1;
	selp.b32 	%r16331, %r16299, %r16295, %p315;
	shfl.sync.bfly.b32	%r16332, %r16331, 8, 31, -1;
	selp.b32 	%r16333, %r16307, %r16303, %p315;
	shfl.sync.bfly.b32	%r16334, %r16333, 8, 31, -1;
	selp.b32 	%r16335, %r16315, %r16311, %p315;
	shfl.sync.bfly.b32	%r16336, %r16335, 8, 31, -1;
	selp.b32 	%r16337, %r16323, %r16319, %p315;
	shfl.sync.bfly.b32	%r16338, %r16337, 8, 31, -1;
	and.b32  	%r269, %r16404, 768;
	setp.lt.u32 	%p331, %r269, 384;
	shl.b32 	%r16359, %r16404, 12;
	@%p331 bra 	$L__BB0_186;
// %bb.185:                             // %pass28467
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r16339, %r260, %r16291, %p315;
	selp.b32 	%r16340, %r16287, %r260, %p315;
	selp.b32 	%r16341, %r259, %r16283, %p315;
	selp.b32 	%r16342, %r16279, %r259, %p315;
	selp.b32 	%r16343, %r258, %r16275, %p315;
	selp.b32 	%r16344, %r16271, %r258, %p315;
	selp.b32 	%r16345, %r257, %r16267, %p315;
	selp.b32 	%r16346, %r16263, %r257, %p315;
	or.b32  	%r16348, %r16359, %r143;
	or.b32  	%r16349, %r16348, %r125;
	or.b32  	%r16350, %r16349, %r126;
	cvt.s64.s32 	%rd131, %r16350;
	add.s64 	%rd132, %rd131, %rd9;
	shr.u64 	%rd133, %rd132, 39;
	add.s64 	%rd134, %rd132, %rd133;
	shr.s64 	%rd135, %rd134, 25;
	setp.lt.s64 	%p333, %rd132, 0;
	and.b64  	%rd136, %rd134, -33554432;
	setp.ne.s64 	%p334, %rd136, %rd132;
	and.pred  	%p335, %p333, %p334;
	selp.u64 	%rd137, 1, 0, %p335;
	sub.s64 	%rd138, %rd137, %rd135;
	shl.b64 	%rd139, %rd138, 25;
	add.s64 	%rd140, %rd139, %rd132;
	shl.b64 	%rd141, %rd140, 2;
	add.s64 	%rd142, %rd3, %rd141;
	st.global.v4.u32 	[%rd142], {%r16346, %r16344, %r16345, %r16343};
	or.b32  	%r16351, %r16350, 16384;
	cvt.s64.s32 	%rd143, %r16351;
	add.s64 	%rd144, %rd143, %rd9;
	shr.u64 	%rd145, %rd144, 39;
	add.s64 	%rd146, %rd144, %rd145;
	shr.u64 	%rd147, %rd146, 25;
	shr.u64 	%rd148, %rd144, 63;
	sub.s64 	%rd149, %rd148, %rd147;
	shl.b64 	%rd150, %rd149, 25;
	add.s64 	%rd151, %rd150, %rd144;
	shl.b64 	%rd152, %rd151, 2;
	add.s64 	%rd153, %rd3, %rd152;
	st.global.v4.u32 	[%rd153], {%r16342, %r16340, %r16341, %r16339};
$L__BB0_186:                            // %pass28635
                                        //   in Loop: Header=BB0_181 Depth=1
	or.b32  	%r16352, %r269, 128;
	setp.lt.u32 	%p336, %r16352, 384;
	@%p336 bra 	$L__BB0_187;
// %bb.189:                             // %pass28687
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r261, %r16295, %r16332, %p315;
	selp.b32 	%r262, %r16332, %r16299, %p315;
	selp.b32 	%r263, %r16303, %r16334, %p315;
	selp.b32 	%r264, %r16334, %r16307, %p315;
	selp.b32 	%r265, %r16311, %r16336, %p315;
	selp.b32 	%r266, %r16336, %r16315, %p315;
	selp.b32 	%r267, %r16319, %r16338, %p315;
	selp.b32 	%r268, %r16338, %r16323, %p315;
	or.b32  	%r16354, %r16359, %r144;
	or.b32  	%r16355, %r16354, 524288;
	cvt.s64.s32 	%rd154, %r16355;
	add.s64 	%rd155, %rd154, %rd9;
	shr.u64 	%rd156, %rd155, 39;
	add.s64 	%rd157, %rd155, %rd156;
	shr.s64 	%rd158, %rd157, 25;
	setp.lt.s64 	%p337, %rd155, 0;
	and.b64  	%rd159, %rd157, -33554432;
	setp.ne.s64 	%p338, %rd159, %rd155;
	and.pred  	%p339, %p337, %p338;
	selp.u64 	%rd160, 1, 0, %p339;
	sub.s64 	%rd161, %rd160, %rd158;
	shl.b64 	%rd162, %rd161, 25;
	add.s64 	%rd163, %rd162, %rd155;
	shl.b64 	%rd164, %rd163, 2;
	add.s64 	%rd165, %rd3, %rd164;
	st.global.v4.u32 	[%rd165], {%r261, %r263, %r262, %r264};
	or.b32  	%r16356, %r16354, 540672;
	cvt.s64.s32 	%rd166, %r16356;
	add.s64 	%rd167, %rd166, %rd9;
	shr.u64 	%rd168, %rd167, 39;
	add.s64 	%rd169, %rd167, %rd168;
	shr.u64 	%rd170, %rd169, 25;
	shr.u64 	%rd171, %rd167, 63;
	sub.s64 	%rd172, %rd171, %rd170;
	shl.b64 	%rd173, %rd172, 25;
	add.s64 	%rd174, %rd173, %rd167;
	shl.b64 	%rd175, %rd174, 2;
	add.s64 	%rd176, %rd3, %rd175;
	st.global.v4.u32 	[%rd176], {%r265, %r267, %r266, %r268};
	bra.uni 	$L__BB0_187;
$L__BB0_188:                            // %L70764
	mov.u32 	%r16357, 0;
	st.global.u32 	[%rd4], %r16357;
	ret;
$L__BB0_7:                              // %L246
	mov.u32 	%r16358, 2;
	st.global.u32 	[%rd4], %r16358;
	mov.u64 	%rd177, exception5808;
	cvta.global.u64 	%rd178, %rd177;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd178;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd24;
	st.param.b32 	[param0+8], %r270;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd45, exception1;
	cvta.global.u64 	%rd46, %rd45;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd46;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd24;
	st.param.b32 	[param0+8], %r270;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
