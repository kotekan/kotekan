// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5788[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<339>;
	.reg .b16 	%rs<2389>;
	.reg .f32 	%f<1392>;
	.reg .b32 	%r<16405>;
	.reg .b64 	%rd<172>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r252, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd44, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r253, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r253, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L11
	ld.param.u64 	%rd61, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd45, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r254, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r255, %r254, %r2;
	or.b32  	%r256, %r255, %r4;
	mul.wide.u32 	%rd67, %r256, 4;
	add.s64 	%rd4, %rd61, %rd67;
	mov.u32 	%r257, 1;
	st.global.u32 	[%rd4], %r257;
	ld.global.u32 	%r5, [%rd45];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L231
	ld.param.u64 	%rd49, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd49];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L241
	ld.param.u64 	%rd53, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd53];
	sub.s32 	%r258, %r6, %r5;
	and.b32  	%r259, %r258, 255;
	setp.ne.s32 	%p6, %r259, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L247
	ld.param.u64 	%rd57, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd57];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 2048;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L257
	sub.s32 	%r260, %r8, %r7;
	and.b32  	%r261, %r260, 1;
	setp.eq.b32 	%p12, %r261, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %L379
	bfe.u32 	%r20, %r4, 1, 1;
	and.b32  	%r21, %r4, 1;
	bfe.u32 	%r22, %r4, 2, 1;
	shr.u32 	%r23, %r4, 4;
	shl.b32 	%r278, %r23, 2;
	shl.b32 	%r279, %r22, 3;
	shl.b32 	%r280, %r21, 4;
	shl.b32 	%r281, %r20, 5;
	or.b32  	%r282, %r280, %r281;
	or.b32  	%r283, %r279, %r282;
	or.b32  	%r284, %r278, %r283;
	bfe.u32 	%r25, %r4, 3, 1;
	shl.b32 	%r285, %r25, 1;
	or.b32  	%r26, %r285, %r284;
	or.b32  	%r27, %r26, 64;
	mov.f32 	%f257, 0f40000000;
	mov.f32 	%f258, 0f43FF8000;
	div.approx.f32 	%f1, %f258, %f257;
	cvt.rn.f32.s32 	%f259, %r26;
	sub.f32 	%f260, %f259, %f1;
	mov.f32 	%f289, 0f43000000;
	div.approx.f32 	%f3, %f260, %f289;
	setp.eq.f32 	%p20, %f3, 0f00000000;
	mov.f32 	%f1351, 0f3F800000;
	mov.f32 	%f1336, %f1351;
	@%p20 bra 	LBB0_10;
// %bb.9:                               // %L823
	sin.approx.f32 	%f290, %f3;
	div.approx.f32 	%f1336, %f290, %f3;
LBB0_10:                                // %L826
	cvt.rn.f32.s32 	%f293, %r27;
	sub.f32 	%f294, %f293, %f1;
	div.approx.f32 	%f8, %f294, %f289;
	setp.eq.f32 	%p26, %f8, 0f00000000;
	mov.f32 	%f1337, %f1351;
	@%p26 bra 	LBB0_12;
// %bb.11:                              // %L843
	sin.approx.f32 	%f324, %f8;
	div.approx.f32 	%f1337, %f324, %f8;
LBB0_12:                                // %L846
	or.b32  	%r303, %r26, 1;
	or.b32  	%r29, %r26, 65;
	cvt.rn.f32.s32 	%f328, %r303;
	sub.f32 	%f329, %f328, %f1;
	div.approx.f32 	%f12, %f329, %f289;
	setp.eq.f32 	%p32, %f12, 0f00000000;
	mov.f32 	%f1338, %f1351;
	@%p32 bra 	LBB0_14;
// %bb.13:                              // %L932
	sin.approx.f32 	%f359, %f12;
	div.approx.f32 	%f1338, %f359, %f12;
LBB0_14:                                // %L935
	cvt.rn.f32.s32 	%f362, %r29;
	sub.f32 	%f363, %f362, %f1;
	div.approx.f32 	%f17, %f363, %f289;
	setp.eq.f32 	%p38, %f17, 0f00000000;
	mov.f32 	%f1339, %f1351;
	@%p38 bra 	LBB0_16;
// %bb.15:                              // %L952
	sin.approx.f32 	%f393, %f17;
	div.approx.f32 	%f1339, %f393, %f17;
LBB0_16:                                // %L955
	or.b32  	%r321, %r26, 128;
	or.b32  	%r31, %r26, 192;
	cvt.rn.f32.s32 	%f397, %r321;
	sub.f32 	%f398, %f397, %f1;
	div.approx.f32 	%f21, %f398, %f289;
	setp.eq.f32 	%p44, %f21, 0f00000000;
	mov.f32 	%f1340, %f1351;
	@%p44 bra 	LBB0_18;
// %bb.17:                              // %L1041
	sin.approx.f32 	%f428, %f21;
	div.approx.f32 	%f1340, %f428, %f21;
LBB0_18:                                // %L1044
	cvt.rn.f32.s32 	%f431, %r31;
	sub.f32 	%f432, %f431, %f1;
	div.approx.f32 	%f26, %f432, %f289;
	setp.eq.f32 	%p50, %f26, 0f00000000;
	mov.f32 	%f1341, %f1351;
	@%p50 bra 	LBB0_20;
// %bb.19:                              // %L1061
	sin.approx.f32 	%f462, %f26;
	div.approx.f32 	%f1341, %f462, %f26;
LBB0_20:                                // %L1064
	or.b32  	%r339, %r26, 129;
	or.b32  	%r33, %r26, 193;
	cvt.rn.f32.s32 	%f466, %r339;
	sub.f32 	%f467, %f466, %f1;
	div.approx.f32 	%f30, %f467, %f289;
	setp.eq.f32 	%p56, %f30, 0f00000000;
	mov.f32 	%f1342, %f1351;
	@%p56 bra 	LBB0_22;
// %bb.21:                              // %L1150
	sin.approx.f32 	%f497, %f30;
	div.approx.f32 	%f1342, %f497, %f30;
LBB0_22:                                // %L1153
	cvt.rn.f32.s32 	%f500, %r33;
	sub.f32 	%f501, %f500, %f1;
	div.approx.f32 	%f35, %f501, %f289;
	setp.eq.f32 	%p62, %f35, 0f00000000;
	mov.f32 	%f1343, %f1351;
	@%p62 bra 	LBB0_24;
// %bb.23:                              // %L1170
	sin.approx.f32 	%f531, %f35;
	div.approx.f32 	%f1343, %f531, %f35;
LBB0_24:                                // %L1173
	or.b32  	%r357, %r26, 256;
	or.b32  	%r35, %r26, 320;
	cvt.rn.f32.s32 	%f535, %r357;
	sub.f32 	%f536, %f535, %f1;
	div.approx.f32 	%f39, %f536, %f289;
	setp.eq.f32 	%p68, %f39, 0f00000000;
	mov.f32 	%f1344, %f1351;
	@%p68 bra 	LBB0_26;
// %bb.25:                              // %L1259
	sin.approx.f32 	%f566, %f39;
	div.approx.f32 	%f1344, %f566, %f39;
LBB0_26:                                // %L1262
	cvt.rn.f32.s32 	%f569, %r35;
	sub.f32 	%f570, %f569, %f1;
	div.approx.f32 	%f44, %f570, %f289;
	setp.eq.f32 	%p74, %f44, 0f00000000;
	mov.f32 	%f1345, %f1351;
	@%p74 bra 	LBB0_28;
// %bb.27:                              // %L1279
	sin.approx.f32 	%f600, %f44;
	div.approx.f32 	%f1345, %f600, %f44;
LBB0_28:                                // %L1282
	or.b32  	%r375, %r26, 257;
	or.b32  	%r37, %r26, 321;
	cvt.rn.f32.s32 	%f604, %r375;
	sub.f32 	%f605, %f604, %f1;
	div.approx.f32 	%f48, %f605, %f289;
	setp.eq.f32 	%p80, %f48, 0f00000000;
	mov.f32 	%f1346, %f1351;
	@%p80 bra 	LBB0_30;
// %bb.29:                              // %L1368
	sin.approx.f32 	%f635, %f48;
	div.approx.f32 	%f1346, %f635, %f48;
LBB0_30:                                // %L1371
	cvt.rn.f32.s32 	%f638, %r37;
	sub.f32 	%f639, %f638, %f1;
	div.approx.f32 	%f53, %f639, %f289;
	setp.eq.f32 	%p86, %f53, 0f00000000;
	mov.f32 	%f1347, %f1351;
	@%p86 bra 	LBB0_32;
// %bb.31:                              // %L1388
	sin.approx.f32 	%f669, %f53;
	div.approx.f32 	%f1347, %f669, %f53;
LBB0_32:                                // %L1391
	or.b32  	%r393, %r26, 384;
	or.b32  	%r39, %r26, 448;
	cvt.rn.f32.s32 	%f673, %r393;
	sub.f32 	%f674, %f673, %f1;
	div.approx.f32 	%f57, %f674, %f289;
	setp.eq.f32 	%p92, %f57, 0f00000000;
	mov.f32 	%f1348, %f1351;
	@%p92 bra 	LBB0_34;
// %bb.33:                              // %L1477
	sin.approx.f32 	%f704, %f57;
	div.approx.f32 	%f1348, %f704, %f57;
LBB0_34:                                // %L1480
	cvt.rn.f32.s32 	%f707, %r39;
	sub.f32 	%f708, %f707, %f1;
	div.approx.f32 	%f62, %f708, %f289;
	setp.eq.f32 	%p98, %f62, 0f00000000;
	mov.f32 	%f1349, %f1351;
	@%p98 bra 	LBB0_36;
// %bb.35:                              // %L1497
	sin.approx.f32 	%f738, %f62;
	div.approx.f32 	%f1349, %f738, %f62;
LBB0_36:                                // %L1500
	or.b32  	%r411, %r26, 385;
	or.b32  	%r41, %r26, 449;
	cvt.rn.f32.s32 	%f742, %r411;
	sub.f32 	%f743, %f742, %f1;
	div.approx.f32 	%f66, %f743, %f289;
	setp.eq.f32 	%p104, %f66, 0f00000000;
	mov.f32 	%f1350, %f1351;
	@%p104 bra 	LBB0_38;
// %bb.37:                              // %L1586
	sin.approx.f32 	%f773, %f66;
	div.approx.f32 	%f1350, %f773, %f66;
LBB0_38:                                // %L1589
	cvt.rn.f32.s32 	%f776, %r41;
	sub.f32 	%f777, %f776, %f1;
	div.approx.f32 	%f71, %f777, %f289;
	setp.eq.f32 	%p110, %f71, 0f00000000;
	@%p110 bra 	LBB0_40;
// %bb.39:                              // %L1606
	sin.approx.f32 	%f807, %f71;
	div.approx.f32 	%f1351, %f807, %f71;
LBB0_40:                                // %L1609
	mul.lo.s32 	%r43, %r26, 127;
	cvt.rn.f32.s32 	%f810, %r43;
	div.approx.f32 	%f74, %f810, %f289;
	abs.f32 	%f1354, %f74;
	setp.lt.f32 	%p111, %f1354, 0f40000000;
	@%p111 bra 	LBB0_52;
// %bb.41:
	setp.gtu.f32 	%p112, %f1354, 0f4B800000;
	@%p112 bra 	LBB0_48;
	bra.uni 	LBB0_42;
LBB0_48:
	mov.b32 	%r45, %f1354;
	and.b32  	%r429, %r45, 8388607;
	or.b32  	%r16335, %r429, 1065353216;
	mov.b32 	%f1353, %r16335;
	add.s32 	%r430, %r45, -1073741824;
	and.b32  	%r16336, %r430, -8388608;
	setp.eq.s32 	%p118, %r16336, 0;
	@%p118 bra 	LBB0_51;
// %bb.49:                              // %.lr.ph4113.preheader
	mov.f32 	%f821, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f820,%f821;
	// end inline asm
LBB0_50:                                // %.lr.ph4113
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r431, %r16336, 192937984;
	add.s32 	%r432, %r431, %r16335;
	mov.b32 	%f822, %r432;
	mul.f32 	%f823, %f820, %f822;
	sub.f32 	%f824, %f822, %f823;
	fma.rn.f32 	%f825, %f824, %f820, %f823;
	sub.f32 	%f826, %f822, %f825;
	fma.rz.f32 	%f827, %f826, %f820, %f825;
	cvt.rzi.f32.f32 	%f828, %f827;
	sub.f32 	%f1353, %f822, %f828;
	sub.s32 	%r16336, %r16336, %r431;
	mov.b32 	%r16335, %f1353;
	setp.ne.s32 	%p119, %r16336, 0;
	setp.ne.s32 	%p120, %r16335, 0;
	and.pred  	%p121, %p119, %p120;
	@%p121 bra 	LBB0_50;
LBB0_51:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p122, %r45, 2139095039;
	selp.f32 	%f829, 0f7FFFFFFF, 0f4B800000, %p122;
	mul.f32 	%f830, %f1353, 0f34000000;
	mul.f32 	%f1354, %f829, %f830;
	bra.uni 	LBB0_52;
LBB0_42:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f813, %f1354, %f257;
	cvt.rzi.f32.f32 	%f76, %f813;
	fma.rn.f32 	%f77, %f76, 0fC0000000, %f1354;
	mov.b32 	%r44, %f77;
	setp.lt.u32 	%p113, %r44, 1073741824;
	mov.f32 	%f1352, %f76;
	@%p113 bra 	LBB0_47;
// %bb.43:
	setp.lt.u32 	%p114, %r44, -2147483647;
	@%p114 bra 	LBB0_45;
// %bb.44:
	add.f32 	%f818, %f76, 0fBF800000;
	setp.lt.f32 	%p117, %f77, 0fC0000000;
	selp.f32 	%f819, %f818, %f76, %p117;
	add.f32 	%f1352, %f819, 0fBF800000;
	bra.uni 	LBB0_47;
LBB0_45:
	add.f32 	%f1352, %f76, 0f3F800000;
	setp.ltu.f32 	%p115, %f77, 0f40800000;
	@%p115 bra 	LBB0_47;
// %bb.46:                              // %__nv_fmaf_rn.exit.i.i.i
	fma.rn.f32 	%f815, %f257, 0fC0400000, %f77;
	setp.ge.f32 	%p116, %f815, 0f00000000;
	selp.f32 	%f816, %f1352, %f76, %p116;
	add.f32 	%f817, %f816, 0f3F800000;
	add.f32 	%f1352, %f817, 0f3F800000;
LBB0_47:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1354, %f1352, 0fC0000000, %f1354;
LBB0_52:                                // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f831, %f1354;
	setp.gtu.f32 	%p123, %f831, 0f7F800000;
	@%p123 bra 	LBB0_54;
// %bb.53:
	mov.b32 	%r433, %f74;
	and.b32  	%r434, %r433, -2147483648;
	mov.b32 	%r435, %f1354;
	or.b32  	%r436, %r434, %r435;
	mov.b32 	%f1354, %r436;
LBB0_54:                                // %__nv_fmodf.exit
	add.s32 	%r445, %r43, 8128;
	cvt.rn.f32.s32 	%f862, %r445;
	div.approx.f32 	%f93, %f862, %f289;
	abs.f32 	%f1358, %f93;
	setp.lt.f32 	%p131, %f1358, 0f40000000;
	@%p131 bra 	LBB0_66;
// %bb.55:
	setp.gtu.f32 	%p132, %f1358, 0f4B800000;
	@%p132 bra 	LBB0_62;
	bra.uni 	LBB0_56;
LBB0_62:
	mov.b32 	%r53, %f1358;
	and.b32  	%r446, %r53, 8388607;
	or.b32  	%r16337, %r446, 1065353216;
	mov.b32 	%f1357, %r16337;
	add.s32 	%r447, %r53, -1073741824;
	and.b32  	%r16338, %r447, -8388608;
	setp.eq.s32 	%p138, %r16338, 0;
	@%p138 bra 	LBB0_65;
// %bb.63:                              // %.lr.ph4108.preheader
	mov.f32 	%f873, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f872,%f873;
	// end inline asm
LBB0_64:                                // %.lr.ph4108
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r448, %r16338, 192937984;
	add.s32 	%r449, %r448, %r16337;
	mov.b32 	%f874, %r449;
	mul.f32 	%f875, %f872, %f874;
	sub.f32 	%f876, %f874, %f875;
	fma.rn.f32 	%f877, %f876, %f872, %f875;
	sub.f32 	%f878, %f874, %f877;
	fma.rz.f32 	%f879, %f878, %f872, %f877;
	cvt.rzi.f32.f32 	%f880, %f879;
	sub.f32 	%f1357, %f874, %f880;
	sub.s32 	%r16338, %r16338, %r448;
	mov.b32 	%r16337, %f1357;
	setp.ne.s32 	%p139, %r16338, 0;
	setp.ne.s32 	%p140, %r16337, 0;
	and.pred  	%p141, %p139, %p140;
	@%p141 bra 	LBB0_64;
LBB0_65:                                // %__internal_fmodf_slowpath_mod.exit.i.i2500
	setp.gt.u32 	%p142, %r53, 2139095039;
	selp.f32 	%f881, 0f7FFFFFFF, 0f4B800000, %p142;
	mul.f32 	%f882, %f1357, 0f34000000;
	mul.f32 	%f1358, %f881, %f882;
	bra.uni 	LBB0_66;
LBB0_56:                                // %__nv_fast_fdividef.exit.i.i.i2466
	div.approx.f32 	%f865, %f1358, %f257;
	cvt.rzi.f32.f32 	%f95, %f865;
	fma.rn.f32 	%f96, %f95, 0fC0000000, %f1358;
	mov.b32 	%r52, %f96;
	setp.lt.u32 	%p133, %r52, 1073741824;
	mov.f32 	%f1356, %f95;
	@%p133 bra 	LBB0_61;
// %bb.57:
	setp.lt.u32 	%p134, %r52, -2147483647;
	@%p134 bra 	LBB0_59;
// %bb.58:
	add.f32 	%f870, %f95, 0fBF800000;
	setp.lt.f32 	%p137, %f96, 0fC0000000;
	selp.f32 	%f871, %f870, %f95, %p137;
	add.f32 	%f1356, %f871, 0fBF800000;
	bra.uni 	LBB0_61;
LBB0_59:
	add.f32 	%f1356, %f95, 0f3F800000;
	setp.ltu.f32 	%p135, %f96, 0f40800000;
	@%p135 bra 	LBB0_61;
// %bb.60:                              // %__nv_fmaf_rn.exit.i.i.i2471
	fma.rn.f32 	%f867, %f257, 0fC0400000, %f96;
	setp.ge.f32 	%p136, %f867, 0f00000000;
	selp.f32 	%f868, %f1356, %f95, %p136;
	add.f32 	%f869, %f868, 0f3F800000;
	add.f32 	%f1356, %f869, 0f3F800000;
LBB0_61:                                // %__internal_fmodf_fastpath_quot.exit.i.i2474
	fma.rn.f32 	%f1358, %f1356, 0fC0000000, %f1358;
LBB0_66:                                // %__internal_fmodf_kernel.exit.i2503
	shr.u32 	%r19, %r4, 1;
	shr.u32 	%r24, %r4, 3;
	abs.f32 	%f883, %f1358;
	setp.gtu.f32 	%p143, %f883, 0f7F800000;
	@%p143 bra 	LBB0_68;
// %bb.67:
	mov.b32 	%r450, %f93;
	and.b32  	%r451, %r450, -2147483648;
	mov.b32 	%r452, %f1358;
	or.b32  	%r453, %r451, %r452;
	mov.b32 	%f1358, %r453;
LBB0_68:                                // %__nv_fmodf.exit2506
	and.b32  	%r474, %r24, 2;
	or.b32  	%r475, %r22, %r474;
	and.b32  	%r476, %r19, 4;
	or.b32  	%r64, %r475, %r476;
	and.b32  	%r477, %r4, 3;
	mul.lo.s32 	%r478, %r477, %r64;
	shl.b32 	%r479, %r478, 1;
	neg.s32 	%r480, %r479;
	cvt.rn.f32.s32 	%f916, %r480;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f110, %f916, %f917;
	abs.f32 	%f1362, %f110;
	setp.lt.f32 	%p151, %f1362, 0f40000000;
	@%p151 bra 	LBB0_80;
// %bb.69:
	setp.gtu.f32 	%p152, %f1362, 0f4B800000;
	@%p152 bra 	LBB0_76;
	bra.uni 	LBB0_70;
LBB0_76:
	mov.b32 	%r66, %f1362;
	and.b32  	%r481, %r66, 8388607;
	or.b32  	%r16339, %r481, 1065353216;
	mov.b32 	%f1361, %r16339;
	add.s32 	%r482, %r66, -1073741824;
	and.b32  	%r16340, %r482, -8388608;
	setp.eq.s32 	%p158, %r16340, 0;
	@%p158 bra 	LBB0_79;
// %bb.77:                              // %.lr.ph4093.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
LBB0_78:                                // %.lr.ph4093
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r483, %r16340, 192937984;
	add.s32 	%r484, %r483, %r16339;
	mov.b32 	%f928, %r484;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1361, %f928, %f934;
	sub.s32 	%r16340, %r16340, %r483;
	mov.b32 	%r16339, %f1361;
	setp.ne.s32 	%p159, %r16340, 0;
	setp.ne.s32 	%p160, %r16339, 0;
	and.pred  	%p161, %p159, %p160;
	@%p161 bra 	LBB0_78;
LBB0_79:                                // %__internal_fmodf_slowpath_mod.exit.i.i2553
	setp.gt.u32 	%p162, %r66, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p162;
	mul.f32 	%f936, %f1361, 0f34000000;
	mul.f32 	%f1362, %f935, %f936;
	bra.uni 	LBB0_80;
LBB0_70:                                // %__nv_fast_fdividef.exit.i.i.i2519
	div.approx.f32 	%f919, %f1362, %f257;
	cvt.rzi.f32.f32 	%f112, %f919;
	fma.rn.f32 	%f113, %f112, 0fC0000000, %f1362;
	mov.b32 	%r65, %f113;
	setp.lt.u32 	%p153, %r65, 1073741824;
	mov.f32 	%f1360, %f112;
	@%p153 bra 	LBB0_75;
// %bb.71:
	setp.lt.u32 	%p154, %r65, -2147483647;
	@%p154 bra 	LBB0_73;
// %bb.72:
	add.f32 	%f924, %f112, 0fBF800000;
	setp.lt.f32 	%p157, %f113, 0fC0000000;
	selp.f32 	%f925, %f924, %f112, %p157;
	add.f32 	%f1360, %f925, 0fBF800000;
	bra.uni 	LBB0_75;
LBB0_73:
	add.f32 	%f1360, %f112, 0f3F800000;
	setp.ltu.f32 	%p155, %f113, 0f40800000;
	@%p155 bra 	LBB0_75;
// %bb.74:                              // %__nv_fmaf_rn.exit.i.i.i2524
	fma.rn.f32 	%f921, %f257, 0fC0400000, %f113;
	setp.ge.f32 	%p156, %f921, 0f00000000;
	selp.f32 	%f922, %f1360, %f112, %p156;
	add.f32 	%f923, %f922, 0f3F800000;
	add.f32 	%f1360, %f923, 0f3F800000;
LBB0_75:                                // %__internal_fmodf_fastpath_quot.exit.i.i2527
	fma.rn.f32 	%f1362, %f1360, 0fC0000000, %f1362;
LBB0_80:                                // %__internal_fmodf_kernel.exit.i2556
	shl.b32 	%r15, %r4, 1;
	abs.f32 	%f937, %f1362;
	setp.gtu.f32 	%p163, %f937, 0f7F800000;
	@%p163 bra 	LBB0_82;
// %bb.81:
	mov.b32 	%r485, %f110;
	and.b32  	%r486, %r485, -2147483648;
	mov.b32 	%r487, %f1362;
	or.b32  	%r488, %r486, %r487;
	mov.b32 	%f1362, %r488;
LBB0_82:                                // %__nv_fmodf.exit2559
	and.b32  	%r497, %r15, 6;
	mov.u32 	%r498, -8;
	sub.s32 	%r499, %r498, %r497;
	mul.lo.s32 	%r500, %r64, %r499;
	cvt.rn.f32.s32 	%f968, %r500;
	div.approx.f32 	%f129, %f968, %f917;
	abs.f32 	%f1366, %f129;
	setp.lt.f32 	%p171, %f1366, 0f40000000;
	@%p171 bra 	LBB0_94;
// %bb.83:
	setp.gtu.f32 	%p172, %f1366, 0f4B800000;
	@%p172 bra 	LBB0_90;
	bra.uni 	LBB0_84;
LBB0_90:
	mov.b32 	%r74, %f1366;
	and.b32  	%r501, %r74, 8388607;
	or.b32  	%r16341, %r501, 1065353216;
	mov.b32 	%f1365, %r16341;
	add.s32 	%r502, %r74, -1073741824;
	and.b32  	%r16342, %r502, -8388608;
	setp.eq.s32 	%p178, %r16342, 0;
	@%p178 bra 	LBB0_93;
// %bb.91:                              // %.lr.ph4083.preheader
	mov.f32 	%f979, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f978,%f979;
	// end inline asm
LBB0_92:                                // %.lr.ph4083
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r503, %r16342, 192937984;
	add.s32 	%r504, %r503, %r16341;
	mov.b32 	%f980, %r504;
	mul.f32 	%f981, %f978, %f980;
	sub.f32 	%f982, %f980, %f981;
	fma.rn.f32 	%f983, %f982, %f978, %f981;
	sub.f32 	%f984, %f980, %f983;
	fma.rz.f32 	%f985, %f984, %f978, %f983;
	cvt.rzi.f32.f32 	%f986, %f985;
	sub.f32 	%f1365, %f980, %f986;
	sub.s32 	%r16342, %r16342, %r503;
	mov.b32 	%r16341, %f1365;
	setp.ne.s32 	%p179, %r16342, 0;
	setp.ne.s32 	%p180, %r16341, 0;
	and.pred  	%p181, %p179, %p180;
	@%p181 bra 	LBB0_92;
LBB0_93:                                // %__internal_fmodf_slowpath_mod.exit.i.i2606
	setp.gt.u32 	%p182, %r74, 2139095039;
	selp.f32 	%f987, 0f7FFFFFFF, 0f4B800000, %p182;
	mul.f32 	%f988, %f1365, 0f34000000;
	mul.f32 	%f1366, %f987, %f988;
	bra.uni 	LBB0_94;
LBB0_84:                                // %__nv_fast_fdividef.exit.i.i.i2572
	div.approx.f32 	%f971, %f1366, %f257;
	cvt.rzi.f32.f32 	%f131, %f971;
	fma.rn.f32 	%f132, %f131, 0fC0000000, %f1366;
	mov.b32 	%r73, %f132;
	setp.lt.u32 	%p173, %r73, 1073741824;
	mov.f32 	%f1364, %f131;
	@%p173 bra 	LBB0_89;
// %bb.85:
	setp.lt.u32 	%p174, %r73, -2147483647;
	@%p174 bra 	LBB0_87;
// %bb.86:
	add.f32 	%f976, %f131, 0fBF800000;
	setp.lt.f32 	%p177, %f132, 0fC0000000;
	selp.f32 	%f977, %f976, %f131, %p177;
	add.f32 	%f1364, %f977, 0fBF800000;
	bra.uni 	LBB0_89;
LBB0_87:
	add.f32 	%f1364, %f131, 0f3F800000;
	setp.ltu.f32 	%p175, %f132, 0f40800000;
	@%p175 bra 	LBB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i2577
	fma.rn.f32 	%f973, %f257, 0fC0400000, %f132;
	setp.ge.f32 	%p176, %f973, 0f00000000;
	selp.f32 	%f974, %f1364, %f131, %p176;
	add.f32 	%f975, %f974, 0f3F800000;
	add.f32 	%f1364, %f975, 0f3F800000;
LBB0_89:                                // %__internal_fmodf_fastpath_quot.exit.i.i2580
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
LBB0_94:                                // %__internal_fmodf_kernel.exit.i2609
	abs.f32 	%f989, %f1366;
	setp.gtu.f32 	%p183, %f989, 0f7F800000;
	@%p183 bra 	LBB0_96;
// %bb.95:
	mov.b32 	%r505, %f129;
	and.b32  	%r506, %r505, -2147483648;
	mov.b32 	%r507, %f1366;
	or.b32  	%r508, %r506, %r507;
	mov.b32 	%f1366, %r508;
LBB0_96:                                // %__nv_fmodf.exit2612
	shl.b32 	%r529, %r21, 1;
	neg.s32 	%r530, %r529;
	mad.lo.s32 	%r531, %r20, -4, %r530;
	mul.lo.s32 	%r532, %r531, %r64;
	shl.b32 	%r85, %r532, 1;
	cvt.rn.f32.s32 	%f146, %r85;
	div.approx.f32 	%f147, %f146, %f289;
	abs.f32 	%f1370, %f147;
	setp.lt.f32 	%p191, %f1370, 0f40000000;
	@%p191 bra 	LBB0_108;
// %bb.97:
	setp.gtu.f32 	%p192, %f1370, 0f4B800000;
	@%p192 bra 	LBB0_104;
	bra.uni 	LBB0_98;
LBB0_104:
	mov.b32 	%r87, %f1370;
	and.b32  	%r533, %r87, 8388607;
	or.b32  	%r16343, %r533, 1065353216;
	mov.b32 	%f1369, %r16343;
	add.s32 	%r534, %r87, -1073741824;
	and.b32  	%r16344, %r534, -8388608;
	setp.eq.s32 	%p198, %r16344, 0;
	@%p198 bra 	LBB0_107;
// %bb.105:                             // %.lr.ph4068.preheader
	mov.f32 	%f1032, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1031,%f1032;
	// end inline asm
LBB0_106:                               // %.lr.ph4068
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r535, %r16344, 192937984;
	add.s32 	%r536, %r535, %r16343;
	mov.b32 	%f1033, %r536;
	mul.f32 	%f1034, %f1031, %f1033;
	sub.f32 	%f1035, %f1033, %f1034;
	fma.rn.f32 	%f1036, %f1035, %f1031, %f1034;
	sub.f32 	%f1037, %f1033, %f1036;
	fma.rz.f32 	%f1038, %f1037, %f1031, %f1036;
	cvt.rzi.f32.f32 	%f1039, %f1038;
	sub.f32 	%f1369, %f1033, %f1039;
	sub.s32 	%r16344, %r16344, %r535;
	mov.b32 	%r16343, %f1369;
	setp.ne.s32 	%p199, %r16344, 0;
	setp.ne.s32 	%p200, %r16343, 0;
	and.pred  	%p201, %p199, %p200;
	@%p201 bra 	LBB0_106;
LBB0_107:                               // %__internal_fmodf_slowpath_mod.exit.i.i2659
	setp.gt.u32 	%p202, %r87, 2139095039;
	selp.f32 	%f1040, 0f7FFFFFFF, 0f4B800000, %p202;
	mul.f32 	%f1041, %f1369, 0f34000000;
	mul.f32 	%f1370, %f1040, %f1041;
	bra.uni 	LBB0_108;
LBB0_98:                                // %__nv_fast_fdividef.exit.i.i.i2625
	div.approx.f32 	%f1024, %f1370, %f257;
	cvt.rzi.f32.f32 	%f149, %f1024;
	fma.rn.f32 	%f150, %f149, 0fC0000000, %f1370;
	mov.b32 	%r86, %f150;
	setp.lt.u32 	%p193, %r86, 1073741824;
	mov.f32 	%f1368, %f149;
	@%p193 bra 	LBB0_103;
// %bb.99:
	setp.lt.u32 	%p194, %r86, -2147483647;
	@%p194 bra 	LBB0_101;
// %bb.100:
	add.f32 	%f1029, %f149, 0fBF800000;
	setp.lt.f32 	%p197, %f150, 0fC0000000;
	selp.f32 	%f1030, %f1029, %f149, %p197;
	add.f32 	%f1368, %f1030, 0fBF800000;
	bra.uni 	LBB0_103;
LBB0_101:
	add.f32 	%f1368, %f149, 0f3F800000;
	setp.ltu.f32 	%p195, %f150, 0f40800000;
	@%p195 bra 	LBB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i2630
	fma.rn.f32 	%f1026, %f257, 0fC0400000, %f150;
	setp.ge.f32 	%p196, %f1026, 0f00000000;
	selp.f32 	%f1027, %f1368, %f149, %p196;
	add.f32 	%f1028, %f1027, 0f3F800000;
	add.f32 	%f1368, %f1028, 0f3F800000;
LBB0_103:                               // %__internal_fmodf_fastpath_quot.exit.i.i2633
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
LBB0_108:                               // %__internal_fmodf_kernel.exit.i2662
	abs.f32 	%f1042, %f1370;
	setp.gtu.f32 	%p203, %f1042, 0f7F800000;
	@%p203 bra 	LBB0_110;
// %bb.109:
	mov.b32 	%r537, %f147;
	and.b32  	%r538, %r537, -2147483648;
	mov.b32 	%r539, %f1370;
	or.b32  	%r540, %r538, %r539;
	mov.b32 	%f1370, %r540;
LBB0_110:                               // %__nv_fmodf.exit2665
	shl.b32 	%r549, %r64, 4;
	sub.s32 	%r550, %r85, %r549;
	cvt.rn.f32.s32 	%f166, %r550;
	div.approx.f32 	%f167, %f166, %f289;
	abs.f32 	%f1374, %f167;
	setp.lt.f32 	%p211, %f1374, 0f40000000;
	@%p211 bra 	LBB0_122;
// %bb.111:
	setp.gtu.f32 	%p212, %f1374, 0f4B800000;
	@%p212 bra 	LBB0_118;
	bra.uni 	LBB0_112;
LBB0_118:
	mov.b32 	%r95, %f1374;
	and.b32  	%r551, %r95, 8388607;
	or.b32  	%r16345, %r551, 1065353216;
	mov.b32 	%f1373, %r16345;
	add.s32 	%r552, %r95, -1073741824;
	and.b32  	%r16346, %r552, -8388608;
	setp.eq.s32 	%p218, %r16346, 0;
	@%p218 bra 	LBB0_121;
// %bb.119:                             // %.lr.ph4058.preheader
	mov.f32 	%f1083, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1082,%f1083;
	// end inline asm
LBB0_120:                               // %.lr.ph4058
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r553, %r16346, 192937984;
	add.s32 	%r554, %r553, %r16345;
	mov.b32 	%f1084, %r554;
	mul.f32 	%f1085, %f1082, %f1084;
	sub.f32 	%f1086, %f1084, %f1085;
	fma.rn.f32 	%f1087, %f1086, %f1082, %f1085;
	sub.f32 	%f1088, %f1084, %f1087;
	fma.rz.f32 	%f1089, %f1088, %f1082, %f1087;
	cvt.rzi.f32.f32 	%f1090, %f1089;
	sub.f32 	%f1373, %f1084, %f1090;
	sub.s32 	%r16346, %r16346, %r553;
	mov.b32 	%r16345, %f1373;
	setp.ne.s32 	%p219, %r16346, 0;
	setp.ne.s32 	%p220, %r16345, 0;
	and.pred  	%p221, %p219, %p220;
	@%p221 bra 	LBB0_120;
LBB0_121:                               // %__internal_fmodf_slowpath_mod.exit.i.i2712
	setp.gt.u32 	%p222, %r95, 2139095039;
	selp.f32 	%f1091, 0f7FFFFFFF, 0f4B800000, %p222;
	mul.f32 	%f1092, %f1373, 0f34000000;
	mul.f32 	%f1374, %f1091, %f1092;
	bra.uni 	LBB0_122;
LBB0_112:                               // %__nv_fast_fdividef.exit.i.i.i2678
	div.approx.f32 	%f1075, %f1374, %f257;
	cvt.rzi.f32.f32 	%f169, %f1075;
	fma.rn.f32 	%f170, %f169, 0fC0000000, %f1374;
	mov.b32 	%r94, %f170;
	setp.lt.u32 	%p213, %r94, 1073741824;
	mov.f32 	%f1372, %f169;
	@%p213 bra 	LBB0_117;
// %bb.113:
	setp.lt.u32 	%p214, %r94, -2147483647;
	@%p214 bra 	LBB0_115;
// %bb.114:
	add.f32 	%f1080, %f169, 0fBF800000;
	setp.lt.f32 	%p217, %f170, 0fC0000000;
	selp.f32 	%f1081, %f1080, %f169, %p217;
	add.f32 	%f1372, %f1081, 0fBF800000;
	bra.uni 	LBB0_117;
LBB0_115:
	add.f32 	%f1372, %f169, 0f3F800000;
	setp.ltu.f32 	%p215, %f170, 0f40800000;
	@%p215 bra 	LBB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i2683
	fma.rn.f32 	%f1077, %f257, 0fC0400000, %f170;
	setp.ge.f32 	%p216, %f1077, 0f00000000;
	selp.f32 	%f1078, %f1372, %f169, %p216;
	add.f32 	%f1079, %f1078, 0f3F800000;
	add.f32 	%f1372, %f1079, 0f3F800000;
LBB0_117:                               // %__internal_fmodf_fastpath_quot.exit.i.i2686
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
LBB0_122:                               // %__internal_fmodf_kernel.exit.i2715
	abs.f32 	%f1093, %f1374;
	setp.gtu.f32 	%p223, %f1093, 0f7F800000;
	@%p223 bra 	LBB0_124;
// %bb.123:
	mov.b32 	%r555, %f167;
	and.b32  	%r556, %r555, -2147483648;
	mov.b32 	%r557, %f1374;
	or.b32  	%r558, %r556, %r557;
	mov.b32 	%f1374, %r558;
LBB0_124:                               // %__nv_fmodf.exit2718
	mov.f32 	%f1126, 0f41800000;
	div.approx.f32 	%f184, %f146, %f1126;
	abs.f32 	%f1378, %f184;
	setp.lt.f32 	%p231, %f1378, 0f40000000;
	@%p231 bra 	LBB0_136;
// %bb.125:
	setp.gtu.f32 	%p232, %f1378, 0f4B800000;
	@%p232 bra 	LBB0_132;
	bra.uni 	LBB0_126;
LBB0_132:
	mov.b32 	%r105, %f1378;
	and.b32  	%r573, %r105, 8388607;
	or.b32  	%r16347, %r573, 1065353216;
	mov.b32 	%f1377, %r16347;
	add.s32 	%r574, %r105, -1073741824;
	and.b32  	%r16348, %r574, -8388608;
	setp.eq.s32 	%p238, %r16348, 0;
	@%p238 bra 	LBB0_135;
// %bb.133:                             // %.lr.ph4047.preheader
	mov.f32 	%f1136, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1135,%f1136;
	// end inline asm
LBB0_134:                               // %.lr.ph4047
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r575, %r16348, 192937984;
	add.s32 	%r576, %r575, %r16347;
	mov.b32 	%f1137, %r576;
	mul.f32 	%f1138, %f1135, %f1137;
	sub.f32 	%f1139, %f1137, %f1138;
	fma.rn.f32 	%f1140, %f1139, %f1135, %f1138;
	sub.f32 	%f1141, %f1137, %f1140;
	fma.rz.f32 	%f1142, %f1141, %f1135, %f1140;
	cvt.rzi.f32.f32 	%f1143, %f1142;
	sub.f32 	%f1377, %f1137, %f1143;
	sub.s32 	%r16348, %r16348, %r575;
	mov.b32 	%r16347, %f1377;
	setp.ne.s32 	%p239, %r16348, 0;
	setp.ne.s32 	%p240, %r16347, 0;
	and.pred  	%p241, %p239, %p240;
	@%p241 bra 	LBB0_134;
LBB0_135:                               // %__internal_fmodf_slowpath_mod.exit.i.i2765
	setp.gt.u32 	%p242, %r105, 2139095039;
	selp.f32 	%f1144, 0f7FFFFFFF, 0f4B800000, %p242;
	mul.f32 	%f1145, %f1377, 0f34000000;
	mul.f32 	%f1378, %f1144, %f1145;
	bra.uni 	LBB0_136;
LBB0_126:                               // %__nv_fast_fdividef.exit.i.i.i2731
	div.approx.f32 	%f1128, %f1378, %f257;
	cvt.rzi.f32.f32 	%f186, %f1128;
	fma.rn.f32 	%f187, %f186, 0fC0000000, %f1378;
	mov.b32 	%r104, %f187;
	setp.lt.u32 	%p233, %r104, 1073741824;
	mov.f32 	%f1376, %f186;
	@%p233 bra 	LBB0_131;
// %bb.127:
	setp.lt.u32 	%p234, %r104, -2147483647;
	@%p234 bra 	LBB0_129;
// %bb.128:
	add.f32 	%f1133, %f186, 0fBF800000;
	setp.lt.f32 	%p237, %f187, 0fC0000000;
	selp.f32 	%f1134, %f1133, %f186, %p237;
	add.f32 	%f1376, %f1134, 0fBF800000;
	bra.uni 	LBB0_131;
LBB0_129:
	add.f32 	%f1376, %f186, 0f3F800000;
	setp.ltu.f32 	%p235, %f187, 0f40800000;
	@%p235 bra 	LBB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i2736
	fma.rn.f32 	%f1130, %f257, 0fC0400000, %f187;
	setp.ge.f32 	%p236, %f1130, 0f00000000;
	selp.f32 	%f1131, %f1376, %f186, %p236;
	add.f32 	%f1132, %f1131, 0f3F800000;
	add.f32 	%f1376, %f1132, 0f3F800000;
LBB0_131:                               // %__internal_fmodf_fastpath_quot.exit.i.i2739
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
LBB0_136:                               // %__internal_fmodf_kernel.exit.i2768
	abs.f32 	%f1146, %f1378;
	setp.gtu.f32 	%p243, %f1146, 0f7F800000;
	@%p243 bra 	LBB0_138;
// %bb.137:
	mov.b32 	%r577, %f184;
	and.b32  	%r578, %r577, -2147483648;
	mov.b32 	%r579, %f1378;
	or.b32  	%r580, %r578, %r579;
	mov.b32 	%f1378, %r580;
LBB0_138:                               // %__nv_fmodf.exit2771
	div.approx.f32 	%f203, %f166, %f1126;
	abs.f32 	%f1382, %f203;
	setp.lt.f32 	%p251, %f1382, 0f40000000;
	@%p251 bra 	LBB0_150;
// %bb.139:
	setp.gtu.f32 	%p252, %f1382, 0f4B800000;
	@%p252 bra 	LBB0_146;
	bra.uni 	LBB0_140;
LBB0_146:
	mov.b32 	%r113, %f1382;
	and.b32  	%r589, %r113, 8388607;
	or.b32  	%r16349, %r589, 1065353216;
	mov.b32 	%f1381, %r16349;
	add.s32 	%r590, %r113, -1073741824;
	and.b32  	%r16350, %r590, -8388608;
	setp.eq.s32 	%p258, %r16350, 0;
	@%p258 bra 	LBB0_149;
// %bb.147:                             // %.lr.ph4041.preheader
	mov.f32 	%f1187, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1186,%f1187;
	// end inline asm
LBB0_148:                               // %.lr.ph4041
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r591, %r16350, 192937984;
	add.s32 	%r592, %r591, %r16349;
	mov.b32 	%f1188, %r592;
	mul.f32 	%f1189, %f1186, %f1188;
	sub.f32 	%f1190, %f1188, %f1189;
	fma.rn.f32 	%f1191, %f1190, %f1186, %f1189;
	sub.f32 	%f1192, %f1188, %f1191;
	fma.rz.f32 	%f1193, %f1192, %f1186, %f1191;
	cvt.rzi.f32.f32 	%f1194, %f1193;
	sub.f32 	%f1381, %f1188, %f1194;
	sub.s32 	%r16350, %r16350, %r591;
	mov.b32 	%r16349, %f1381;
	setp.ne.s32 	%p259, %r16350, 0;
	setp.ne.s32 	%p260, %r16349, 0;
	and.pred  	%p261, %p259, %p260;
	@%p261 bra 	LBB0_148;
LBB0_149:                               // %__internal_fmodf_slowpath_mod.exit.i.i2818
	setp.gt.u32 	%p262, %r113, 2139095039;
	selp.f32 	%f1195, 0f7FFFFFFF, 0f4B800000, %p262;
	mul.f32 	%f1196, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1195, %f1196;
	bra.uni 	LBB0_150;
LBB0_140:                               // %__nv_fast_fdividef.exit.i.i.i2784
	div.approx.f32 	%f1179, %f1382, %f257;
	cvt.rzi.f32.f32 	%f205, %f1179;
	fma.rn.f32 	%f206, %f205, 0fC0000000, %f1382;
	mov.b32 	%r112, %f206;
	setp.lt.u32 	%p253, %r112, 1073741824;
	mov.f32 	%f1380, %f205;
	@%p253 bra 	LBB0_145;
// %bb.141:
	setp.lt.u32 	%p254, %r112, -2147483647;
	@%p254 bra 	LBB0_143;
// %bb.142:
	add.f32 	%f1184, %f205, 0fBF800000;
	setp.lt.f32 	%p257, %f206, 0fC0000000;
	selp.f32 	%f1185, %f1184, %f205, %p257;
	add.f32 	%f1380, %f1185, 0fBF800000;
	bra.uni 	LBB0_145;
LBB0_143:
	add.f32 	%f1380, %f205, 0f3F800000;
	setp.ltu.f32 	%p255, %f206, 0f40800000;
	@%p255 bra 	LBB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i2789
	fma.rn.f32 	%f1181, %f257, 0fC0400000, %f206;
	setp.ge.f32 	%p256, %f1181, 0f00000000;
	selp.f32 	%f1182, %f1380, %f205, %p256;
	add.f32 	%f1183, %f1182, 0f3F800000;
	add.f32 	%f1380, %f1183, 0f3F800000;
LBB0_145:                               // %__internal_fmodf_fastpath_quot.exit.i.i2792
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
LBB0_150:                               // %__internal_fmodf_kernel.exit.i2821
	and.b32  	%r13, %r4, 16;
	abs.f32 	%f1197, %f1382;
	setp.gtu.f32 	%p263, %f1197, 0f7F800000;
	@%p263 bra 	LBB0_152;
// %bb.151:
	mov.b32 	%r593, %f203;
	and.b32  	%r594, %r593, -2147483648;
	mov.b32 	%r595, %f1382;
	or.b32  	%r596, %r594, %r595;
	mov.b32 	%f1382, %r596;
LBB0_152:                               // %__nv_fmodf.exit2824
	cvt.u16.u32 	%rs1, %r4;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shl.b16 	%rs6, %rs1, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	shr.u16 	%rs9, %rs8, 2;
	and.b16  	%rs10, %rs8, 13104;
	shl.b16 	%rs11, %rs10, 2;
	or.b16  	%rs12, %rs9, %rs11;
	and.b16  	%rs13, %rs12, 20480;
	shl.b16 	%rs14, %rs13, 1;
	shl.b16 	%rs15, %rs10, 1;
	and.b16  	%rs16, %rs15, 16384;
	or.b16  	%rs17, %rs16, %rs14;
	shr.u16 	%rs18, %rs17, 13;
	add.s32 	%r618, %r279, %r13;
	neg.s32 	%r619, %r618;
	mad.lo.s32 	%r620, %r25, -32, %r619;
	or.b16  	%rs19, %rs18, 1;
	cvt.u32.u16 	%r621, %rs19;
	and.b16  	%rs20, %rs18, 6;
	cvt.u32.u16 	%r622, %rs20;
	sub.s32 	%r623, %r620, %r622;
	shl.b32 	%r624, %r623, 1;
	cvt.rn.f32.s32 	%f1230, %r624;
	div.approx.f32 	%f220, %f1230, %f289;
	abs.f32 	%f1386, %f220;
	setp.lt.f32 	%p271, %f1386, 0f40000000;
	@%p271 bra 	LBB0_164;
// %bb.153:
	setp.gtu.f32 	%p272, %f1386, 0f4B800000;
	@%p272 bra 	LBB0_160;
	bra.uni 	LBB0_154;
LBB0_160:
	mov.b32 	%r126, %f1386;
	and.b32  	%r625, %r126, 8388607;
	or.b32  	%r16351, %r625, 1065353216;
	mov.b32 	%f1385, %r16351;
	add.s32 	%r626, %r126, -1073741824;
	and.b32  	%r16352, %r626, -8388608;
	setp.eq.s32 	%p278, %r16352, 0;
	@%p278 bra 	LBB0_163;
// %bb.161:                             // %.lr.ph4026.preheader
	mov.f32 	%f1241, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1240,%f1241;
	// end inline asm
LBB0_162:                               // %.lr.ph4026
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r627, %r16352, 192937984;
	add.s32 	%r628, %r627, %r16351;
	mov.b32 	%f1242, %r628;
	mul.f32 	%f1243, %f1240, %f1242;
	sub.f32 	%f1244, %f1242, %f1243;
	fma.rn.f32 	%f1245, %f1244, %f1240, %f1243;
	sub.f32 	%f1246, %f1242, %f1245;
	fma.rz.f32 	%f1247, %f1246, %f1240, %f1245;
	cvt.rzi.f32.f32 	%f1248, %f1247;
	sub.f32 	%f1385, %f1242, %f1248;
	sub.s32 	%r16352, %r16352, %r627;
	mov.b32 	%r16351, %f1385;
	setp.ne.s32 	%p279, %r16352, 0;
	setp.ne.s32 	%p280, %r16351, 0;
	and.pred  	%p281, %p279, %p280;
	@%p281 bra 	LBB0_162;
LBB0_163:                               // %__internal_fmodf_slowpath_mod.exit.i.i2871
	setp.gt.u32 	%p282, %r126, 2139095039;
	selp.f32 	%f1249, 0f7FFFFFFF, 0f4B800000, %p282;
	mul.f32 	%f1250, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1249, %f1250;
	bra.uni 	LBB0_164;
LBB0_154:                               // %__nv_fast_fdividef.exit.i.i.i2837
	div.approx.f32 	%f1233, %f1386, %f257;
	cvt.rzi.f32.f32 	%f222, %f1233;
	fma.rn.f32 	%f223, %f222, 0fC0000000, %f1386;
	mov.b32 	%r125, %f223;
	setp.lt.u32 	%p273, %r125, 1073741824;
	mov.f32 	%f1384, %f222;
	@%p273 bra 	LBB0_159;
// %bb.155:
	setp.lt.u32 	%p274, %r125, -2147483647;
	@%p274 bra 	LBB0_157;
// %bb.156:
	add.f32 	%f1238, %f222, 0fBF800000;
	setp.lt.f32 	%p277, %f223, 0fC0000000;
	selp.f32 	%f1239, %f1238, %f222, %p277;
	add.f32 	%f1384, %f1239, 0fBF800000;
	bra.uni 	LBB0_159;
LBB0_157:
	add.f32 	%f1384, %f222, 0f3F800000;
	setp.ltu.f32 	%p275, %f223, 0f40800000;
	@%p275 bra 	LBB0_159;
// %bb.158:                             // %__nv_fmaf_rn.exit.i.i.i2842
	fma.rn.f32 	%f1235, %f257, 0fC0400000, %f223;
	setp.ge.f32 	%p276, %f1235, 0f00000000;
	selp.f32 	%f1236, %f1384, %f222, %p276;
	add.f32 	%f1237, %f1236, 0f3F800000;
	add.f32 	%f1384, %f1237, 0f3F800000;
LBB0_159:                               // %__internal_fmodf_fastpath_quot.exit.i.i2845
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
LBB0_164:                               // %__internal_fmodf_kernel.exit.i2874
	sub.s32 	%r124, %r620, %r621;
	abs.f32 	%f1251, %f1386;
	setp.gtu.f32 	%p283, %f1251, 0f7F800000;
	@%p283 bra 	LBB0_166;
// %bb.165:
	mov.b32 	%r629, %f220;
	and.b32  	%r630, %r629, -2147483648;
	mov.b32 	%r631, %f1386;
	or.b32  	%r632, %r630, %r631;
	mov.b32 	%f1386, %r632;
LBB0_166:                               // %__nv_fmodf.exit2877
	shl.b32 	%r641, %r124, 1;
	cvt.rn.f32.s32 	%f1282, %r641;
	div.approx.f32 	%f239, %f1282, %f289;
	abs.f32 	%f1390, %f239;
	setp.lt.f32 	%p291, %f1390, 0f40000000;
	@%p291 bra 	LBB0_178;
// %bb.167:
	setp.gtu.f32 	%p292, %f1390, 0f4B800000;
	@%p292 bra 	LBB0_174;
	bra.uni 	LBB0_168;
LBB0_174:
	mov.b32 	%r134, %f1390;
	and.b32  	%r642, %r134, 8388607;
	or.b32  	%r16353, %r642, 1065353216;
	mov.b32 	%f1389, %r16353;
	add.s32 	%r643, %r134, -1073741824;
	and.b32  	%r16354, %r643, -8388608;
	setp.eq.s32 	%p298, %r16354, 0;
	@%p298 bra 	LBB0_177;
// %bb.175:                             // %.lr.ph.preheader
	mov.f32 	%f1293, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1292,%f1293;
	// end inline asm
LBB0_176:                               // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r644, %r16354, 192937984;
	add.s32 	%r645, %r644, %r16353;
	mov.b32 	%f1294, %r645;
	mul.f32 	%f1295, %f1292, %f1294;
	sub.f32 	%f1296, %f1294, %f1295;
	fma.rn.f32 	%f1297, %f1296, %f1292, %f1295;
	sub.f32 	%f1298, %f1294, %f1297;
	fma.rz.f32 	%f1299, %f1298, %f1292, %f1297;
	cvt.rzi.f32.f32 	%f1300, %f1299;
	sub.f32 	%f1389, %f1294, %f1300;
	sub.s32 	%r16354, %r16354, %r644;
	mov.b32 	%r16353, %f1389;
	setp.ne.s32 	%p299, %r16354, 0;
	setp.ne.s32 	%p300, %r16353, 0;
	and.pred  	%p301, %p299, %p300;
	@%p301 bra 	LBB0_176;
LBB0_177:                               // %__internal_fmodf_slowpath_mod.exit.i.i2924
	setp.gt.u32 	%p302, %r134, 2139095039;
	selp.f32 	%f1301, 0f7FFFFFFF, 0f4B800000, %p302;
	mul.f32 	%f1302, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1301, %f1302;
	bra.uni 	LBB0_178;
LBB0_168:                               // %__nv_fast_fdividef.exit.i.i.i2890
	div.approx.f32 	%f1285, %f1390, %f257;
	cvt.rzi.f32.f32 	%f241, %f1285;
	fma.rn.f32 	%f242, %f241, 0fC0000000, %f1390;
	mov.b32 	%r133, %f242;
	setp.lt.u32 	%p293, %r133, 1073741824;
	mov.f32 	%f1388, %f241;
	@%p293 bra 	LBB0_173;
// %bb.169:
	setp.lt.u32 	%p294, %r133, -2147483647;
	@%p294 bra 	LBB0_171;
// %bb.170:
	add.f32 	%f1290, %f241, 0fBF800000;
	setp.lt.f32 	%p297, %f242, 0fC0000000;
	selp.f32 	%f1291, %f1290, %f241, %p297;
	add.f32 	%f1388, %f1291, 0fBF800000;
	bra.uni 	LBB0_173;
LBB0_171:
	add.f32 	%f1388, %f241, 0f3F800000;
	setp.ltu.f32 	%p295, %f242, 0f40800000;
	@%p295 bra 	LBB0_173;
// %bb.172:                             // %__nv_fmaf_rn.exit.i.i.i2895
	fma.rn.f32 	%f1287, %f257, 0fC0400000, %f242;
	setp.ge.f32 	%p296, %f1287, 0f00000000;
	selp.f32 	%f1288, %f1388, %f241, %p296;
	add.f32 	%f1289, %f1288, 0f3F800000;
	add.f32 	%f1388, %f1289, 0f3F800000;
LBB0_173:                               // %__internal_fmodf_fastpath_quot.exit.i.i2898
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
LBB0_178:                               // %__internal_fmodf_kernel.exit.i2927
	abs.f32 	%f1303, %f1390;
	setp.gtu.f32 	%p303, %f1303, 0f7F800000;
	@%p303 bra 	LBB0_180;
// %bb.179:
	mov.b32 	%r646, %f239;
	and.b32  	%r647, %r646, -2147483648;
	mov.b32 	%r648, %f1390;
	or.b32  	%r649, %r647, %r648;
	mov.b32 	%f1390, %r649;
LBB0_180:                               // %__nv_fmodf.exit2930
	setp.le.s32 	%p311, %r6, %r5;
	mov.u32 	%r16333, 0;
	@%p311 bra 	LBB0_189;
// %bb.181:                             // %L2449.lr.ph
	mov.f32 	%f261, 0f44004000;
	div.approx.f32 	%f262, %f260, %f261;
	div.approx.f32 	%f296, %f294, %f261;
	div.approx.f32 	%f331, %f329, %f261;
	div.approx.f32 	%f365, %f363, %f261;
	div.approx.f32 	%f400, %f398, %f261;
	div.approx.f32 	%f434, %f432, %f261;
	div.approx.f32 	%f469, %f467, %f261;
	div.approx.f32 	%f503, %f501, %f261;
	div.approx.f32 	%f538, %f536, %f261;
	div.approx.f32 	%f572, %f570, %f261;
	div.approx.f32 	%f607, %f605, %f261;
	div.approx.f32 	%f641, %f639, %f261;
	div.approx.f32 	%f676, %f674, %f261;
	div.approx.f32 	%f710, %f708, %f261;
	div.approx.f32 	%f745, %f743, %f261;
	div.approx.f32 	%f779, %f777, %f261;
	abs.f32 	%f263, %f262;
	abs.f32 	%f297, %f296;
	abs.f32 	%f332, %f331;
	abs.f32 	%f366, %f365;
	abs.f32 	%f401, %f400;
	abs.f32 	%f435, %f434;
	abs.f32 	%f470, %f469;
	abs.f32 	%f504, %f503;
	abs.f32 	%f539, %f538;
	abs.f32 	%f573, %f572;
	abs.f32 	%f608, %f607;
	abs.f32 	%f642, %f641;
	abs.f32 	%f677, %f676;
	abs.f32 	%f711, %f710;
	abs.f32 	%f746, %f745;
	abs.f32 	%f780, %f779;
	setp.gt.f32 	%p15, %f263, 0f4B800000;
	mul.f32 	%f264, %f262, 0f00000000;
	setp.gt.f32 	%p21, %f297, 0f4B800000;
	mul.f32 	%f298, %f296, 0f00000000;
	setp.gt.f32 	%p27, %f332, 0f4B800000;
	mul.f32 	%f333, %f331, 0f00000000;
	setp.gt.f32 	%p33, %f366, 0f4B800000;
	mul.f32 	%f367, %f365, 0f00000000;
	setp.gt.f32 	%p39, %f401, 0f4B800000;
	mul.f32 	%f402, %f400, 0f00000000;
	setp.gt.f32 	%p45, %f435, 0f4B800000;
	mul.f32 	%f436, %f434, 0f00000000;
	setp.gt.f32 	%p51, %f470, 0f4B800000;
	mul.f32 	%f471, %f469, 0f00000000;
	setp.gt.f32 	%p57, %f504, 0f4B800000;
	mul.f32 	%f505, %f503, 0f00000000;
	setp.gt.f32 	%p63, %f539, 0f4B800000;
	mul.f32 	%f540, %f538, 0f00000000;
	setp.gt.f32 	%p69, %f573, 0f4B800000;
	mul.f32 	%f574, %f572, 0f00000000;
	setp.gt.f32 	%p75, %f608, 0f4B800000;
	mul.f32 	%f609, %f607, 0f00000000;
	setp.gt.f32 	%p81, %f642, 0f4B800000;
	mul.f32 	%f643, %f641, 0f00000000;
	setp.gt.f32 	%p87, %f677, 0f4B800000;
	mul.f32 	%f678, %f676, 0f00000000;
	setp.gt.f32 	%p93, %f711, 0f4B800000;
	mul.f32 	%f712, %f710, 0f00000000;
	setp.gt.f32 	%p99, %f746, 0f4B800000;
	mul.f32 	%f747, %f745, 0f00000000;
	setp.gt.f32 	%p105, %f780, 0f4B800000;
	mul.f32 	%f781, %f779, 0f00000000;
	selp.f32 	%f265, %f264, %f262, %p15;
	selp.f32 	%f299, %f298, %f296, %p21;
	selp.f32 	%f334, %f333, %f331, %p27;
	selp.f32 	%f368, %f367, %f365, %p33;
	selp.f32 	%f403, %f402, %f400, %p39;
	selp.f32 	%f437, %f436, %f434, %p45;
	selp.f32 	%f472, %f471, %f469, %p51;
	selp.f32 	%f506, %f505, %f503, %p57;
	selp.f32 	%f541, %f540, %f538, %p63;
	selp.f32 	%f575, %f574, %f572, %p69;
	selp.f32 	%f610, %f609, %f607, %p75;
	selp.f32 	%f644, %f643, %f641, %p81;
	selp.f32 	%f679, %f678, %f676, %p87;
	selp.f32 	%f713, %f712, %f710, %p93;
	selp.f32 	%f748, %f747, %f745, %p99;
	selp.f32 	%f782, %f781, %f779, %p105;
	add.f32 	%f832, %f1354, %f1354;
	add.f32 	%f884, %f1358, %f1358;
	add.f32 	%f938, %f1362, %f1362;
	add.f32 	%f990, %f1366, %f1366;
	add.f32 	%f1147, %f1378, %f1378;
	add.f32 	%f1198, %f1382, %f1382;
	add.f32 	%f266, %f265, %f265;
	add.f32 	%f300, %f299, %f299;
	add.f32 	%f335, %f334, %f334;
	add.f32 	%f369, %f368, %f368;
	add.f32 	%f404, %f403, %f403;
	add.f32 	%f438, %f437, %f437;
	add.f32 	%f473, %f472, %f472;
	add.f32 	%f507, %f506, %f506;
	add.f32 	%f542, %f541, %f541;
	add.f32 	%f576, %f575, %f575;
	add.f32 	%f611, %f610, %f610;
	add.f32 	%f645, %f644, %f644;
	add.f32 	%f680, %f679, %f679;
	add.f32 	%f714, %f713, %f713;
	add.f32 	%f749, %f748, %f748;
	add.f32 	%f783, %f782, %f782;
	mov.b32 	%r437, %f832;
	mov.b32 	%r466, %f884;
	mov.b32 	%r489, %f938;
	mov.b32 	%r521, %f990;
	add.f32 	%f1043, %f1370, %f1370;
	add.f32 	%f1094, %f1374, %f1374;
	mov.b32 	%r581, %f1147;
	mov.b32 	%r609, %f1198;
	mov.b32 	%r286, %f266;
	mov.b32 	%r293, %f300;
	mov.b32 	%r304, %f335;
	mov.b32 	%r311, %f369;
	mov.b32 	%r322, %f404;
	mov.b32 	%r329, %f438;
	mov.b32 	%r340, %f473;
	mov.b32 	%r347, %f507;
	mov.b32 	%r358, %f542;
	mov.b32 	%r365, %f576;
	mov.b32 	%r376, %f611;
	mov.b32 	%r383, %f645;
	mov.b32 	%r394, %f680;
	mov.b32 	%r401, %f714;
	mov.b32 	%r412, %f749;
	mov.b32 	%r419, %f783;
	and.b32  	%r438, %r437, -2147483648;
	and.b32  	%r467, %r466, -2147483648;
	and.b32  	%r490, %r489, -2147483648;
	and.b32  	%r522, %r521, -2147483648;
	mov.b32 	%r541, %f1043;
	mov.b32 	%r565, %f1094;
	and.b32  	%r582, %r581, -2147483648;
	and.b32  	%r610, %r609, -2147483648;
	add.f32 	%f1252, %f1386, %f1386;
	and.b32  	%r287, %r286, -2147483648;
	and.b32  	%r294, %r293, -2147483648;
	and.b32  	%r305, %r304, -2147483648;
	and.b32  	%r312, %r311, -2147483648;
	and.b32  	%r323, %r322, -2147483648;
	and.b32  	%r330, %r329, -2147483648;
	and.b32  	%r341, %r340, -2147483648;
	and.b32  	%r348, %r347, -2147483648;
	and.b32  	%r359, %r358, -2147483648;
	and.b32  	%r366, %r365, -2147483648;
	and.b32  	%r377, %r376, -2147483648;
	and.b32  	%r384, %r383, -2147483648;
	and.b32  	%r395, %r394, -2147483648;
	and.b32  	%r402, %r401, -2147483648;
	and.b32  	%r413, %r412, -2147483648;
	and.b32  	%r420, %r419, -2147483648;
	or.b32  	%r439, %r438, 1056964608;
	or.b32  	%r468, %r467, 1056964608;
	or.b32  	%r491, %r490, 1056964608;
	or.b32  	%r523, %r522, 1056964608;
	and.b32  	%r542, %r541, -2147483648;
	and.b32  	%r566, %r565, -2147483648;
	or.b32  	%r583, %r582, 1056964608;
	or.b32  	%r611, %r610, 1056964608;
	mov.b32 	%r633, %f1252;
	or.b32  	%r288, %r287, 1056964608;
	or.b32  	%r295, %r294, 1056964608;
	or.b32  	%r306, %r305, 1056964608;
	or.b32  	%r313, %r312, 1056964608;
	or.b32  	%r324, %r323, 1056964608;
	or.b32  	%r331, %r330, 1056964608;
	or.b32  	%r342, %r341, 1056964608;
	or.b32  	%r349, %r348, 1056964608;
	or.b32  	%r360, %r359, 1056964608;
	or.b32  	%r367, %r366, 1056964608;
	or.b32  	%r378, %r377, 1056964608;
	or.b32  	%r385, %r384, 1056964608;
	or.b32  	%r396, %r395, 1056964608;
	or.b32  	%r403, %r402, 1056964608;
	or.b32  	%r414, %r413, 1056964608;
	or.b32  	%r421, %r420, 1056964608;
	mov.b32 	%f833, %r439;
	mov.b32 	%f885, %r468;
	mov.b32 	%f939, %r491;
	mov.b32 	%f991, %r523;
	or.b32  	%r543, %r542, 1056964608;
	or.b32  	%r567, %r566, 1056964608;
	mov.b32 	%f1148, %r583;
	mov.b32 	%f1199, %r611;
	and.b32  	%r634, %r633, -2147483648;
	mov.b32 	%f267, %r288;
	mov.b32 	%f301, %r295;
	mov.b32 	%f336, %r306;
	mov.b32 	%f370, %r313;
	mov.b32 	%f405, %r324;
	mov.b32 	%f439, %r331;
	mov.b32 	%f474, %r342;
	mov.b32 	%f508, %r349;
	mov.b32 	%f543, %r360;
	mov.b32 	%f577, %r367;
	mov.b32 	%f612, %r378;
	mov.b32 	%f646, %r385;
	mov.b32 	%f681, %r396;
	mov.b32 	%f715, %r403;
	mov.b32 	%f750, %r414;
	mov.b32 	%f784, %r421;
	add.f32 	%f834, %f832, %f833;
	abs.f32 	%f836, %f832;
	add.f32 	%f886, %f884, %f885;
	abs.f32 	%f888, %f884;
	add.f32 	%f940, %f938, %f939;
	abs.f32 	%f942, %f938;
	add.f32 	%f992, %f990, %f991;
	abs.f32 	%f994, %f990;
	mov.b32 	%f1044, %r543;
	mov.b32 	%f1095, %r567;
	add.f32 	%f1149, %f1147, %f1148;
	abs.f32 	%f1151, %f1147;
	add.f32 	%f1200, %f1198, %f1199;
	abs.f32 	%f1202, %f1198;
	or.b32  	%r635, %r634, 1056964608;
	shl.b32 	%r9, %r4, 2;
	shl.b32 	%r262, %r3, 4;
	add.f32 	%f268, %f266, %f267;
	abs.f32 	%f270, %f266;
	add.f32 	%f302, %f300, %f301;
	abs.f32 	%f304, %f300;
	add.f32 	%f337, %f335, %f336;
	abs.f32 	%f339, %f335;
	add.f32 	%f371, %f369, %f370;
	abs.f32 	%f373, %f369;
	add.f32 	%f406, %f404, %f405;
	abs.f32 	%f408, %f404;
	add.f32 	%f440, %f438, %f439;
	abs.f32 	%f442, %f438;
	add.f32 	%f475, %f473, %f474;
	abs.f32 	%f477, %f473;
	add.f32 	%f509, %f507, %f508;
	abs.f32 	%f511, %f507;
	add.f32 	%f544, %f542, %f543;
	abs.f32 	%f546, %f542;
	add.f32 	%f578, %f576, %f577;
	abs.f32 	%f580, %f576;
	add.f32 	%f613, %f611, %f612;
	abs.f32 	%f615, %f611;
	add.f32 	%f647, %f645, %f646;
	abs.f32 	%f649, %f645;
	add.f32 	%f682, %f680, %f681;
	abs.f32 	%f684, %f680;
	add.f32 	%f716, %f714, %f715;
	abs.f32 	%f718, %f714;
	add.f32 	%f751, %f749, %f750;
	abs.f32 	%f753, %f749;
	add.f32 	%f785, %f783, %f784;
	abs.f32 	%f787, %f783;
	cvt.rzi.f32.f32 	%f835, %f834;
	setp.gt.f32 	%p124, %f836, 0f4B000000;
	cvt.rzi.f32.f32 	%f887, %f886;
	setp.gt.f32 	%p144, %f888, 0f4B000000;
	cvt.rzi.f32.f32 	%f941, %f940;
	setp.gt.f32 	%p164, %f942, 0f4B000000;
	cvt.rzi.f32.f32 	%f993, %f992;
	setp.gt.f32 	%p184, %f994, 0f4B000000;
	add.f32 	%f1045, %f1043, %f1044;
	abs.f32 	%f1047, %f1043;
	add.f32 	%f1096, %f1094, %f1095;
	abs.f32 	%f1098, %f1094;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	setp.gt.f32 	%p244, %f1151, 0f4B000000;
	cvt.rzi.f32.f32 	%f1201, %f1200;
	setp.gt.f32 	%p264, %f1202, 0f4B000000;
	mov.b32 	%f1253, %r635;
	and.b32  	%r10, %r9, 4;
	and.b32  	%r11, %r262, 1920;
	cvt.rzi.f32.f32 	%f269, %f268;
	setp.gt.f32 	%p16, %f270, 0f4B000000;
	cvt.rzi.f32.f32 	%f303, %f302;
	setp.gt.f32 	%p22, %f304, 0f4B000000;
	cvt.rzi.f32.f32 	%f338, %f337;
	setp.gt.f32 	%p28, %f339, 0f4B000000;
	cvt.rzi.f32.f32 	%f372, %f371;
	setp.gt.f32 	%p34, %f373, 0f4B000000;
	cvt.rzi.f32.f32 	%f407, %f406;
	setp.gt.f32 	%p40, %f408, 0f4B000000;
	cvt.rzi.f32.f32 	%f441, %f440;
	setp.gt.f32 	%p46, %f442, 0f4B000000;
	cvt.rzi.f32.f32 	%f476, %f475;
	setp.gt.f32 	%p52, %f477, 0f4B000000;
	cvt.rzi.f32.f32 	%f510, %f509;
	setp.gt.f32 	%p58, %f511, 0f4B000000;
	cvt.rzi.f32.f32 	%f545, %f544;
	setp.gt.f32 	%p64, %f546, 0f4B000000;
	cvt.rzi.f32.f32 	%f579, %f578;
	setp.gt.f32 	%p70, %f580, 0f4B000000;
	cvt.rzi.f32.f32 	%f614, %f613;
	setp.gt.f32 	%p76, %f615, 0f4B000000;
	cvt.rzi.f32.f32 	%f648, %f647;
	setp.gt.f32 	%p82, %f649, 0f4B000000;
	cvt.rzi.f32.f32 	%f683, %f682;
	setp.gt.f32 	%p88, %f684, 0f4B000000;
	cvt.rzi.f32.f32 	%f717, %f716;
	setp.gt.f32 	%p94, %f718, 0f4B000000;
	cvt.rzi.f32.f32 	%f752, %f751;
	setp.gt.f32 	%p100, %f753, 0f4B000000;
	cvt.rzi.f32.f32 	%f786, %f785;
	setp.gt.f32 	%p106, %f787, 0f4B000000;
	selp.f32 	%f837, %f832, %f835, %p124;
	cvt.rzi.f32.f32 	%f838, %f832;
	setp.lt.f32 	%p125, %f836, 0f3F000000;
	selp.f32 	%f889, %f884, %f887, %p144;
	cvt.rzi.f32.f32 	%f890, %f884;
	setp.lt.f32 	%p145, %f888, 0f3F000000;
	selp.f32 	%f943, %f938, %f941, %p164;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p165, %f942, 0f3F000000;
	selp.f32 	%f995, %f990, %f993, %p184;
	cvt.rzi.f32.f32 	%f996, %f990;
	setp.lt.f32 	%p185, %f994, 0f3F000000;
	cvt.rzi.f32.f32 	%f1046, %f1045;
	setp.gt.f32 	%p204, %f1047, 0f4B000000;
	cvt.rzi.f32.f32 	%f1097, %f1096;
	setp.gt.f32 	%p224, %f1098, 0f4B000000;
	selp.f32 	%f1152, %f1147, %f1150, %p244;
	cvt.rzi.f32.f32 	%f1153, %f1147;
	setp.lt.f32 	%p245, %f1151, 0f3F000000;
	selp.f32 	%f1203, %f1198, %f1201, %p264;
	cvt.rzi.f32.f32 	%f1204, %f1198;
	setp.lt.f32 	%p265, %f1202, 0f3F000000;
	add.f32 	%f1254, %f1252, %f1253;
	abs.f32 	%f1256, %f1252;
	or.b32  	%r263, %r11, %r10;
	and.b32  	%r12, %r9, 32;
	selp.f32 	%f271, %f266, %f269, %p16;
	cvt.rzi.f32.f32 	%f272, %f266;
	setp.lt.f32 	%p17, %f270, 0f3F000000;
	selp.f32 	%f305, %f300, %f303, %p22;
	cvt.rzi.f32.f32 	%f306, %f300;
	setp.lt.f32 	%p23, %f304, 0f3F000000;
	selp.f32 	%f340, %f335, %f338, %p28;
	cvt.rzi.f32.f32 	%f341, %f335;
	setp.lt.f32 	%p29, %f339, 0f3F000000;
	selp.f32 	%f374, %f369, %f372, %p34;
	cvt.rzi.f32.f32 	%f375, %f369;
	setp.lt.f32 	%p35, %f373, 0f3F000000;
	selp.f32 	%f409, %f404, %f407, %p40;
	cvt.rzi.f32.f32 	%f410, %f404;
	setp.lt.f32 	%p41, %f408, 0f3F000000;
	selp.f32 	%f443, %f438, %f441, %p46;
	cvt.rzi.f32.f32 	%f444, %f438;
	setp.lt.f32 	%p47, %f442, 0f3F000000;
	selp.f32 	%f478, %f473, %f476, %p52;
	cvt.rzi.f32.f32 	%f479, %f473;
	setp.lt.f32 	%p53, %f477, 0f3F000000;
	selp.f32 	%f512, %f507, %f510, %p58;
	cvt.rzi.f32.f32 	%f513, %f507;
	setp.lt.f32 	%p59, %f511, 0f3F000000;
	selp.f32 	%f547, %f542, %f545, %p64;
	cvt.rzi.f32.f32 	%f548, %f542;
	setp.lt.f32 	%p65, %f546, 0f3F000000;
	selp.f32 	%f581, %f576, %f579, %p70;
	cvt.rzi.f32.f32 	%f582, %f576;
	setp.lt.f32 	%p71, %f580, 0f3F000000;
	selp.f32 	%f616, %f611, %f614, %p76;
	cvt.rzi.f32.f32 	%f617, %f611;
	setp.lt.f32 	%p77, %f615, 0f3F000000;
	selp.f32 	%f650, %f645, %f648, %p82;
	cvt.rzi.f32.f32 	%f651, %f645;
	setp.lt.f32 	%p83, %f649, 0f3F000000;
	selp.f32 	%f685, %f680, %f683, %p88;
	cvt.rzi.f32.f32 	%f686, %f680;
	setp.lt.f32 	%p89, %f684, 0f3F000000;
	selp.f32 	%f719, %f714, %f717, %p94;
	cvt.rzi.f32.f32 	%f720, %f714;
	setp.lt.f32 	%p95, %f718, 0f3F000000;
	selp.f32 	%f754, %f749, %f752, %p100;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p101, %f753, 0f3F000000;
	selp.f32 	%f788, %f783, %f786, %p106;
	cvt.rzi.f32.f32 	%f789, %f783;
	setp.lt.f32 	%p107, %f787, 0f3F000000;
	selp.f32 	%f839, %f838, %f837, %p125;
	selp.f32 	%f891, %f890, %f889, %p145;
	selp.f32 	%f945, %f944, %f943, %p165;
	selp.f32 	%f997, %f996, %f995, %p185;
	selp.f32 	%f1048, %f1043, %f1046, %p204;
	cvt.rzi.f32.f32 	%f1049, %f1043;
	setp.lt.f32 	%p205, %f1047, 0f3F000000;
	selp.f32 	%f1099, %f1094, %f1097, %p224;
	cvt.rzi.f32.f32 	%f1100, %f1094;
	setp.lt.f32 	%p225, %f1098, 0f3F000000;
	selp.f32 	%f1154, %f1153, %f1152, %p245;
	selp.f32 	%f1205, %f1204, %f1203, %p265;
	cvt.rzi.f32.f32 	%f1255, %f1254;
	setp.gt.f32 	%p284, %f1256, 0f4B000000;
	or.b32  	%r264, %r263, %r12;
	selp.f32 	%f273, %f272, %f271, %p17;
	selp.f32 	%f307, %f306, %f305, %p23;
	selp.f32 	%f342, %f341, %f340, %p29;
	selp.f32 	%f376, %f375, %f374, %p35;
	selp.f32 	%f411, %f410, %f409, %p41;
	selp.f32 	%f445, %f444, %f443, %p47;
	selp.f32 	%f480, %f479, %f478, %p53;
	selp.f32 	%f514, %f513, %f512, %p59;
	selp.f32 	%f549, %f548, %f547, %p65;
	selp.f32 	%f583, %f582, %f581, %p71;
	selp.f32 	%f618, %f617, %f616, %p77;
	selp.f32 	%f652, %f651, %f650, %p83;
	selp.f32 	%f687, %f686, %f685, %p89;
	selp.f32 	%f721, %f720, %f719, %p95;
	selp.f32 	%f756, %f755, %f754, %p101;
	selp.f32 	%f790, %f789, %f788, %p107;
	fma.rn.f32 	%f840, %f839, 0fBF000000, %f1354;
	fma.rn.f32 	%f892, %f891, 0fBF000000, %f1358;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1362;
	fma.rn.f32 	%f998, %f997, 0fBF000000, %f1366;
	selp.f32 	%f1050, %f1049, %f1048, %p205;
	selp.f32 	%f1101, %f1100, %f1099, %p225;
	fma.rn.f32 	%f1155, %f1154, 0fBF000000, %f1378;
	fma.rn.f32 	%f1206, %f1205, 0fBF000000, %f1382;
	selp.f32 	%f1257, %f1252, %f1255, %p284;
	cvt.rzi.f32.f32 	%f1258, %f1252;
	setp.lt.f32 	%p285, %f1256, 0f3F000000;
	or.b32  	%r265, %r264, %r13;
	and.b32  	%r14, %r4, 2;
	fma.rn.f32 	%f274, %f273, 0fBF000000, %f265;
	fma.rn.f32 	%f308, %f307, 0fBF000000, %f299;
	fma.rn.f32 	%f343, %f342, 0fBF000000, %f334;
	fma.rn.f32 	%f377, %f376, 0fBF000000, %f368;
	fma.rn.f32 	%f412, %f411, 0fBF000000, %f403;
	fma.rn.f32 	%f446, %f445, 0fBF000000, %f437;
	fma.rn.f32 	%f481, %f480, 0fBF000000, %f472;
	fma.rn.f32 	%f515, %f514, 0fBF000000, %f506;
	fma.rn.f32 	%f550, %f549, 0fBF000000, %f541;
	fma.rn.f32 	%f584, %f583, 0fBF000000, %f575;
	fma.rn.f32 	%f619, %f618, 0fBF000000, %f610;
	fma.rn.f32 	%f653, %f652, 0fBF000000, %f644;
	fma.rn.f32 	%f688, %f687, 0fBF000000, %f679;
	fma.rn.f32 	%f722, %f721, 0fBF000000, %f713;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f748;
	fma.rn.f32 	%f791, %f790, 0fBF000000, %f782;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f893, %f892, %f892;
	mul.f32 	%f947, %f946, %f946;
	mul.f32 	%f999, %f998, %f998;
	fma.rn.f32 	%f1051, %f1050, 0fBF000000, %f1370;
	fma.rn.f32 	%f1102, %f1101, 0fBF000000, %f1374;
	mul.f32 	%f1156, %f1155, %f1155;
	mul.f32 	%f1207, %f1206, %f1206;
	selp.f32 	%f1259, %f1258, %f1257, %p285;
	or.b32  	%r266, %r265, %r14;
	and.b32  	%r16, %r15, 8;
	mul.f32 	%f275, %f274, %f274;
	mul.f32 	%f309, %f308, %f308;
	mul.f32 	%f344, %f343, %f343;
	mul.f32 	%f378, %f377, %f377;
	mul.f32 	%f413, %f412, %f412;
	mul.f32 	%f447, %f446, %f446;
	mul.f32 	%f482, %f481, %f481;
	mul.f32 	%f516, %f515, %f515;
	mul.f32 	%f551, %f550, %f550;
	mul.f32 	%f585, %f584, %f584;
	mul.f32 	%f620, %f619, %f619;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f689, %f688, %f688;
	mul.f32 	%f723, %f722, %f722;
	mul.f32 	%f758, %f757, %f757;
	mul.f32 	%f792, %f791, %f791;
	fma.rn.f32 	%f842, %f841, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f843, %f841, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f894, %f893, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f895, %f893, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f948, %f947, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f949, %f947, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1000, %f999, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1001, %f999, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f1052, %f1051, %f1051;
	mul.f32 	%f1103, %f1102, %f1102;
	fma.rn.f32 	%f1157, %f1156, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1158, %f1156, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1208, %f1207, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1209, %f1207, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1260, %f1259, 0fBF000000, %f1386;
	or.b32  	%r267, %r266, %r16;
	cvt.rzi.s32.f32 	%r289, %f273;
	fma.rn.f32 	%f276, %f275, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f277, %f275, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r296, %f307;
	fma.rn.f32 	%f310, %f309, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f311, %f309, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r307, %f342;
	fma.rn.f32 	%f345, %f344, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f346, %f344, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r314, %f376;
	fma.rn.f32 	%f379, %f378, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f380, %f378, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r325, %f411;
	fma.rn.f32 	%f414, %f413, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f415, %f413, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r332, %f445;
	fma.rn.f32 	%f448, %f447, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f449, %f447, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r343, %f480;
	fma.rn.f32 	%f483, %f482, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f484, %f482, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r350, %f514;
	fma.rn.f32 	%f517, %f516, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f518, %f516, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r361, %f549;
	fma.rn.f32 	%f552, %f551, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f553, %f551, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r368, %f583;
	fma.rn.f32 	%f586, %f585, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f587, %f585, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r379, %f618;
	fma.rn.f32 	%f621, %f620, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f622, %f620, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r386, %f652;
	fma.rn.f32 	%f655, %f654, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f656, %f654, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r397, %f687;
	fma.rn.f32 	%f690, %f689, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f691, %f689, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r404, %f721;
	fma.rn.f32 	%f724, %f723, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f725, %f723, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r415, %f756;
	fma.rn.f32 	%f759, %f758, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f760, %f758, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r422, %f790;
	fma.rn.f32 	%f793, %f792, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f794, %f792, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r440, %f839;
	fma.rn.f32 	%f844, %f842, %f841, 0fC0A55DF6;
	fma.rn.f32 	%f845, %f843, %f841, 0f4081E0CF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	cvt.rzi.s32.f32 	%r469, %f891;
	fma.rn.f32 	%f896, %f894, %f893, 0fC0A55DF6;
	fma.rn.f32 	%f897, %f895, %f893, 0f4081E0CF;
	fma.rn.f32 	%f898, %f893, %f892, 0f00000000;
	cvt.rzi.s32.f32 	%r492, %f945;
	fma.rn.f32 	%f950, %f948, %f947, 0fC0A55DF6;
	fma.rn.f32 	%f951, %f949, %f947, 0f4081E0CF;
	fma.rn.f32 	%f952, %f947, %f946, 0f00000000;
	cvt.rzi.s32.f32 	%r524, %f997;
	fma.rn.f32 	%f1002, %f1000, %f999, 0fC0A55DF6;
	fma.rn.f32 	%f1003, %f1001, %f999, 0f4081E0CF;
	fma.rn.f32 	%f1004, %f999, %f998, 0f00000000;
	fma.rn.f32 	%f1053, %f1052, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1054, %f1052, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1104, %f1103, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1105, %f1103, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r584, %f1154;
	fma.rn.f32 	%f1159, %f1157, %f1156, 0fC0A55DF6;
	fma.rn.f32 	%f1160, %f1158, %f1156, 0f4081E0CF;
	fma.rn.f32 	%f1161, %f1156, %f1155, 0f00000000;
	cvt.rzi.s32.f32 	%r612, %f1205;
	fma.rn.f32 	%f1210, %f1208, %f1207, 0fC0A55DF6;
	fma.rn.f32 	%f1211, %f1209, %f1207, 0f4081E0CF;
	fma.rn.f32 	%f1212, %f1207, %f1206, 0f00000000;
	mul.f32 	%f1261, %f1260, %f1260;
	or.b32  	%r269, %r267, 64;
	add.s32 	%r290, %r289, 1;
	fma.rn.f32 	%f278, %f276, %f275, 0fC0A55DF6;
	fma.rn.f32 	%f279, %f277, %f275, 0f4081E0CF;
	fma.rn.f32 	%f280, %f275, %f274, 0f00000000;
	add.s32 	%r297, %r296, 1;
	fma.rn.f32 	%f312, %f310, %f309, 0fC0A55DF6;
	fma.rn.f32 	%f313, %f311, %f309, 0f4081E0CF;
	fma.rn.f32 	%f314, %f309, %f308, 0f00000000;
	add.s32 	%r308, %r307, 1;
	fma.rn.f32 	%f347, %f345, %f344, 0fC0A55DF6;
	fma.rn.f32 	%f348, %f346, %f344, 0f4081E0CF;
	fma.rn.f32 	%f349, %f344, %f343, 0f00000000;
	add.s32 	%r315, %r314, 1;
	fma.rn.f32 	%f381, %f379, %f378, 0fC0A55DF6;
	fma.rn.f32 	%f382, %f380, %f378, 0f4081E0CF;
	fma.rn.f32 	%f383, %f378, %f377, 0f00000000;
	add.s32 	%r326, %r325, 1;
	fma.rn.f32 	%f416, %f414, %f413, 0fC0A55DF6;
	fma.rn.f32 	%f417, %f415, %f413, 0f4081E0CF;
	fma.rn.f32 	%f418, %f413, %f412, 0f00000000;
	add.s32 	%r333, %r332, 1;
	fma.rn.f32 	%f450, %f448, %f447, 0fC0A55DF6;
	fma.rn.f32 	%f451, %f449, %f447, 0f4081E0CF;
	fma.rn.f32 	%f452, %f447, %f446, 0f00000000;
	add.s32 	%r344, %r343, 1;
	fma.rn.f32 	%f485, %f483, %f482, 0fC0A55DF6;
	fma.rn.f32 	%f486, %f484, %f482, 0f4081E0CF;
	fma.rn.f32 	%f487, %f482, %f481, 0f00000000;
	add.s32 	%r351, %r350, 1;
	fma.rn.f32 	%f519, %f517, %f516, 0fC0A55DF6;
	fma.rn.f32 	%f520, %f518, %f516, 0f4081E0CF;
	fma.rn.f32 	%f521, %f516, %f515, 0f00000000;
	add.s32 	%r362, %r361, 1;
	fma.rn.f32 	%f554, %f552, %f551, 0fC0A55DF6;
	fma.rn.f32 	%f555, %f553, %f551, 0f4081E0CF;
	fma.rn.f32 	%f556, %f551, %f550, 0f00000000;
	add.s32 	%r369, %r368, 1;
	fma.rn.f32 	%f588, %f586, %f585, 0fC0A55DF6;
	fma.rn.f32 	%f589, %f587, %f585, 0f4081E0CF;
	fma.rn.f32 	%f590, %f585, %f584, 0f00000000;
	add.s32 	%r380, %r379, 1;
	fma.rn.f32 	%f623, %f621, %f620, 0fC0A55DF6;
	fma.rn.f32 	%f624, %f622, %f620, 0f4081E0CF;
	fma.rn.f32 	%f625, %f620, %f619, 0f00000000;
	add.s32 	%r387, %r386, 1;
	fma.rn.f32 	%f657, %f655, %f654, 0fC0A55DF6;
	fma.rn.f32 	%f658, %f656, %f654, 0f4081E0CF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	add.s32 	%r398, %r397, 1;
	fma.rn.f32 	%f692, %f690, %f689, 0fC0A55DF6;
	fma.rn.f32 	%f693, %f691, %f689, 0f4081E0CF;
	fma.rn.f32 	%f694, %f689, %f688, 0f00000000;
	add.s32 	%r405, %r404, 1;
	fma.rn.f32 	%f726, %f724, %f723, 0fC0A55DF6;
	fma.rn.f32 	%f727, %f725, %f723, 0f4081E0CF;
	fma.rn.f32 	%f728, %f723, %f722, 0f00000000;
	add.s32 	%r416, %r415, 1;
	fma.rn.f32 	%f761, %f759, %f758, 0fC0A55DF6;
	fma.rn.f32 	%f762, %f760, %f758, 0f4081E0CF;
	fma.rn.f32 	%f763, %f758, %f757, 0f00000000;
	add.s32 	%r423, %r422, 1;
	fma.rn.f32 	%f795, %f793, %f792, 0fC0A55DF6;
	fma.rn.f32 	%f796, %f794, %f792, 0f4081E0CF;
	fma.rn.f32 	%f797, %f792, %f791, 0f00000000;
	fma.rn.f32 	%f847, %f845, %f841, 0fC09DE9E6;
	fma.rn.f32 	%f848, %f844, %f846, 0f00000000;
	and.b32  	%r441, %r440, 1;
	fma.rn.f32 	%f899, %f897, %f893, 0fC09DE9E6;
	fma.rn.f32 	%f900, %f896, %f898, 0f00000000;
	and.b32  	%r470, %r469, 1;
	fma.rn.f32 	%f953, %f951, %f947, 0fC09DE9E6;
	fma.rn.f32 	%f954, %f950, %f952, 0f00000000;
	and.b32  	%r493, %r492, 1;
	fma.rn.f32 	%f1005, %f1003, %f999, 0fC09DE9E6;
	fma.rn.f32 	%f1006, %f1002, %f1004, 0f00000000;
	and.b32  	%r525, %r524, 1;
	cvt.rzi.s32.f32 	%r544, %f1050;
	fma.rn.f32 	%f1055, %f1053, %f1052, 0fC0A55DF6;
	fma.rn.f32 	%f1056, %f1054, %f1052, 0f4081E0CF;
	fma.rn.f32 	%f1057, %f1052, %f1051, 0f00000000;
	cvt.rzi.s32.f32 	%r568, %f1101;
	fma.rn.f32 	%f1106, %f1104, %f1103, 0fC0A55DF6;
	fma.rn.f32 	%f1107, %f1105, %f1103, 0f4081E0CF;
	fma.rn.f32 	%f1108, %f1103, %f1102, 0f00000000;
	fma.rn.f32 	%f1162, %f1160, %f1156, 0fC09DE9E6;
	fma.rn.f32 	%f1163, %f1159, %f1161, 0f00000000;
	and.b32  	%r585, %r584, 1;
	fma.rn.f32 	%f1213, %f1211, %f1207, 0fC09DE9E6;
	fma.rn.f32 	%f1214, %f1210, %f1212, 0f00000000;
	and.b32  	%r613, %r612, 1;
	fma.rn.f32 	%f1262, %f1261, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1263, %f1261, 0f3E684E12, 0fBFAAD2E0;
	shr.u32 	%r270, %r269, 31;
	fma.rn.f32 	%f281, %f279, %f275, 0fC09DE9E6;
	fma.rn.f32 	%f282, %f278, %f280, 0f00000000;
	and.b32  	%r291, %r290, 1;
	fma.rn.f32 	%f315, %f313, %f309, 0fC09DE9E6;
	fma.rn.f32 	%f316, %f312, %f314, 0f00000000;
	and.b32  	%r298, %r297, 1;
	fma.rn.f32 	%f350, %f348, %f344, 0fC09DE9E6;
	fma.rn.f32 	%f351, %f347, %f349, 0f00000000;
	and.b32  	%r309, %r308, 1;
	fma.rn.f32 	%f384, %f382, %f378, 0fC09DE9E6;
	fma.rn.f32 	%f385, %f381, %f383, 0f00000000;
	and.b32  	%r316, %r315, 1;
	fma.rn.f32 	%f419, %f417, %f413, 0fC09DE9E6;
	fma.rn.f32 	%f420, %f416, %f418, 0f00000000;
	and.b32  	%r327, %r326, 1;
	fma.rn.f32 	%f453, %f451, %f447, 0fC09DE9E6;
	fma.rn.f32 	%f454, %f450, %f452, 0f00000000;
	and.b32  	%r334, %r333, 1;
	fma.rn.f32 	%f488, %f486, %f482, 0fC09DE9E6;
	fma.rn.f32 	%f489, %f485, %f487, 0f00000000;
	and.b32  	%r345, %r344, 1;
	fma.rn.f32 	%f522, %f520, %f516, 0fC09DE9E6;
	fma.rn.f32 	%f523, %f519, %f521, 0f00000000;
	and.b32  	%r352, %r351, 1;
	fma.rn.f32 	%f557, %f555, %f551, 0fC09DE9E6;
	fma.rn.f32 	%f558, %f554, %f556, 0f00000000;
	and.b32  	%r363, %r362, 1;
	fma.rn.f32 	%f591, %f589, %f585, 0fC09DE9E6;
	fma.rn.f32 	%f592, %f588, %f590, 0f00000000;
	and.b32  	%r370, %r369, 1;
	fma.rn.f32 	%f626, %f624, %f620, 0fC09DE9E6;
	fma.rn.f32 	%f627, %f623, %f625, 0f00000000;
	and.b32  	%r381, %r380, 1;
	fma.rn.f32 	%f660, %f658, %f654, 0fC09DE9E6;
	fma.rn.f32 	%f661, %f657, %f659, 0f00000000;
	and.b32  	%r388, %r387, 1;
	fma.rn.f32 	%f695, %f693, %f689, 0fC09DE9E6;
	fma.rn.f32 	%f696, %f692, %f694, 0f00000000;
	and.b32  	%r399, %r398, 1;
	fma.rn.f32 	%f729, %f727, %f723, 0fC09DE9E6;
	fma.rn.f32 	%f730, %f726, %f728, 0f00000000;
	and.b32  	%r406, %r405, 1;
	fma.rn.f32 	%f764, %f762, %f758, 0fC09DE9E6;
	fma.rn.f32 	%f765, %f761, %f763, 0f00000000;
	and.b32  	%r417, %r416, 1;
	fma.rn.f32 	%f798, %f796, %f792, 0fC09DE9E6;
	fma.rn.f32 	%f799, %f795, %f797, 0f00000000;
	and.b32  	%r424, %r423, 1;
	fma.rn.f32 	%f849, %f847, %f841, 0f3F800000;
	fma.rn.f32 	%f850, %f840, 0f40490FDB, %f848;
	setp.eq.b32 	%p126, %r441, 1;
	fma.rn.f32 	%f901, %f899, %f893, 0f3F800000;
	fma.rn.f32 	%f902, %f892, 0f40490FDB, %f900;
	setp.eq.b32 	%p146, %r470, 1;
	fma.rn.f32 	%f955, %f953, %f947, 0f3F800000;
	fma.rn.f32 	%f956, %f946, 0f40490FDB, %f954;
	setp.eq.b32 	%p166, %r493, 1;
	fma.rn.f32 	%f1007, %f1005, %f999, 0f3F800000;
	fma.rn.f32 	%f1008, %f998, 0f40490FDB, %f1006;
	setp.eq.b32 	%p186, %r525, 1;
	fma.rn.f32 	%f1058, %f1056, %f1052, 0fC09DE9E6;
	fma.rn.f32 	%f1059, %f1055, %f1057, 0f00000000;
	and.b32  	%r545, %r544, 1;
	fma.rn.f32 	%f1109, %f1107, %f1103, 0fC09DE9E6;
	fma.rn.f32 	%f1110, %f1106, %f1108, 0f00000000;
	and.b32  	%r569, %r568, 1;
	fma.rn.f32 	%f1164, %f1162, %f1156, 0f3F800000;
	fma.rn.f32 	%f1165, %f1155, 0f40490FDB, %f1163;
	setp.eq.b32 	%p246, %r585, 1;
	fma.rn.f32 	%f1215, %f1213, %f1207, 0f3F800000;
	fma.rn.f32 	%f1216, %f1206, 0f40490FDB, %f1214;
	setp.eq.b32 	%p266, %r613, 1;
	cvt.rzi.s32.f32 	%r636, %f1259;
	fma.rn.f32 	%f1264, %f1262, %f1261, 0fC0A55DF6;
	fma.rn.f32 	%f1265, %f1263, %f1261, 0f4081E0CF;
	fma.rn.f32 	%f1266, %f1261, %f1260, 0f00000000;
	add.s32 	%r271, %r269, %r270;
	fma.rn.f32 	%f283, %f281, %f275, 0f3F800000;
	fma.rn.f32 	%f284, %f274, 0f40490FDB, %f282;
	setp.eq.b32 	%p18, %r291, 1;
	fma.rn.f32 	%f317, %f315, %f309, 0f3F800000;
	fma.rn.f32 	%f318, %f308, 0f40490FDB, %f316;
	setp.eq.b32 	%p24, %r298, 1;
	fma.rn.f32 	%f352, %f350, %f344, 0f3F800000;
	fma.rn.f32 	%f353, %f343, 0f40490FDB, %f351;
	setp.eq.b32 	%p30, %r309, 1;
	fma.rn.f32 	%f386, %f384, %f378, 0f3F800000;
	fma.rn.f32 	%f387, %f377, 0f40490FDB, %f385;
	setp.eq.b32 	%p36, %r316, 1;
	fma.rn.f32 	%f421, %f419, %f413, 0f3F800000;
	fma.rn.f32 	%f422, %f412, 0f40490FDB, %f420;
	setp.eq.b32 	%p42, %r327, 1;
	fma.rn.f32 	%f455, %f453, %f447, 0f3F800000;
	fma.rn.f32 	%f456, %f446, 0f40490FDB, %f454;
	setp.eq.b32 	%p48, %r334, 1;
	fma.rn.f32 	%f490, %f488, %f482, 0f3F800000;
	fma.rn.f32 	%f491, %f481, 0f40490FDB, %f489;
	setp.eq.b32 	%p54, %r345, 1;
	fma.rn.f32 	%f524, %f522, %f516, 0f3F800000;
	fma.rn.f32 	%f525, %f515, 0f40490FDB, %f523;
	setp.eq.b32 	%p60, %r352, 1;
	fma.rn.f32 	%f559, %f557, %f551, 0f3F800000;
	fma.rn.f32 	%f560, %f550, 0f40490FDB, %f558;
	setp.eq.b32 	%p66, %r363, 1;
	fma.rn.f32 	%f593, %f591, %f585, 0f3F800000;
	fma.rn.f32 	%f594, %f584, 0f40490FDB, %f592;
	setp.eq.b32 	%p72, %r370, 1;
	fma.rn.f32 	%f628, %f626, %f620, 0f3F800000;
	fma.rn.f32 	%f629, %f619, 0f40490FDB, %f627;
	setp.eq.b32 	%p78, %r381, 1;
	fma.rn.f32 	%f662, %f660, %f654, 0f3F800000;
	fma.rn.f32 	%f663, %f653, 0f40490FDB, %f661;
	setp.eq.b32 	%p84, %r388, 1;
	fma.rn.f32 	%f697, %f695, %f689, 0f3F800000;
	fma.rn.f32 	%f698, %f688, 0f40490FDB, %f696;
	setp.eq.b32 	%p90, %r399, 1;
	fma.rn.f32 	%f731, %f729, %f723, 0f3F800000;
	fma.rn.f32 	%f732, %f722, 0f40490FDB, %f730;
	setp.eq.b32 	%p96, %r406, 1;
	fma.rn.f32 	%f766, %f764, %f758, 0f3F800000;
	fma.rn.f32 	%f767, %f757, 0f40490FDB, %f765;
	setp.eq.b32 	%p102, %r417, 1;
	fma.rn.f32 	%f800, %f798, %f792, 0f3F800000;
	fma.rn.f32 	%f801, %f791, 0f40490FDB, %f799;
	setp.eq.b32 	%p108, %r424, 1;
	selp.f32 	%f851, %f849, %f850, %p126;
	and.b32  	%r442, %r440, 2;
	selp.f32 	%f903, %f901, %f902, %p146;
	and.b32  	%r471, %r469, 2;
	selp.f32 	%f957, %f955, %f956, %p166;
	and.b32  	%r494, %r492, 2;
	selp.f32 	%f1009, %f1007, %f1008, %p186;
	and.b32  	%r526, %r524, 2;
	fma.rn.f32 	%f1060, %f1058, %f1052, 0f3F800000;
	fma.rn.f32 	%f1061, %f1051, 0f40490FDB, %f1059;
	setp.eq.b32 	%p206, %r545, 1;
	fma.rn.f32 	%f1111, %f1109, %f1103, 0f3F800000;
	fma.rn.f32 	%f1112, %f1102, 0f40490FDB, %f1110;
	setp.eq.b32 	%p226, %r569, 1;
	selp.f32 	%f1166, %f1164, %f1165, %p246;
	and.b32  	%r586, %r584, 2;
	selp.f32 	%f1217, %f1215, %f1216, %p266;
	and.b32  	%r614, %r612, 2;
	fma.rn.f32 	%f1267, %f1265, %f1261, 0fC09DE9E6;
	fma.rn.f32 	%f1268, %f1264, %f1266, 0f00000000;
	and.b32  	%r637, %r636, 1;
	shr.s32 	%r273, %r271, 31;
	selp.f32 	%f285, %f283, %f284, %p18;
	and.b32  	%r292, %r290, 2;
	mov.f32 	%f286, 0f00000000;
	selp.f32 	%f319, %f317, %f318, %p24;
	and.b32  	%r299, %r297, 2;
	selp.f32 	%f354, %f352, %f353, %p30;
	and.b32  	%r310, %r308, 2;
	selp.f32 	%f388, %f386, %f387, %p36;
	and.b32  	%r317, %r315, 2;
	selp.f32 	%f423, %f421, %f422, %p42;
	and.b32  	%r328, %r326, 2;
	selp.f32 	%f457, %f455, %f456, %p48;
	and.b32  	%r335, %r333, 2;
	selp.f32 	%f492, %f490, %f491, %p54;
	and.b32  	%r346, %r344, 2;
	selp.f32 	%f526, %f524, %f525, %p60;
	and.b32  	%r353, %r351, 2;
	selp.f32 	%f561, %f559, %f560, %p66;
	and.b32  	%r364, %r362, 2;
	selp.f32 	%f595, %f593, %f594, %p72;
	and.b32  	%r371, %r369, 2;
	selp.f32 	%f630, %f628, %f629, %p78;
	and.b32  	%r382, %r380, 2;
	selp.f32 	%f664, %f662, %f663, %p84;
	and.b32  	%r389, %r387, 2;
	selp.f32 	%f699, %f697, %f698, %p90;
	and.b32  	%r400, %r398, 2;
	selp.f32 	%f733, %f731, %f732, %p96;
	and.b32  	%r407, %r405, 2;
	selp.f32 	%f768, %f766, %f767, %p102;
	and.b32  	%r418, %r416, 2;
	selp.f32 	%f802, %f800, %f801, %p108;
	and.b32  	%r425, %r423, 2;
	setp.eq.s32 	%p127, %r442, 0;
	neg.f32 	%f853, %f851;
	add.s32 	%r443, %r440, 1;
	cvt.rzi.f32.f32 	%f858, %f1354;
	setp.eq.s32 	%p147, %r471, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r472, %r469, 1;
	cvt.rzi.f32.f32 	%f910, %f1358;
	setp.eq.s32 	%p167, %r494, 0;
	neg.f32 	%f959, %f957;
	add.s32 	%r495, %r492, 1;
	cvt.rzi.f32.f32 	%f964, %f1362;
	setp.eq.s32 	%p187, %r526, 0;
	neg.f32 	%f1011, %f1009;
	add.s32 	%r527, %r524, 1;
	cvt.rzi.f32.f32 	%f1016, %f1366;
	selp.f32 	%f1062, %f1060, %f1061, %p206;
	and.b32  	%r546, %r544, 2;
	selp.f32 	%f1113, %f1111, %f1112, %p226;
	and.b32  	%r570, %r568, 2;
	setp.eq.s32 	%p247, %r586, 0;
	neg.f32 	%f1168, %f1166;
	add.s32 	%r587, %r584, 1;
	cvt.rzi.f32.f32 	%f1173, %f1378;
	setp.eq.s32 	%p267, %r614, 0;
	neg.f32 	%f1219, %f1217;
	add.s32 	%r615, %r612, 1;
	cvt.rzi.f32.f32 	%f1224, %f1382;
	fma.rn.f32 	%f1269, %f1267, %f1261, 0f3F800000;
	fma.rn.f32 	%f1270, %f1260, 0f40490FDB, %f1268;
	setp.eq.b32 	%p286, %r637, 1;
	shr.s32 	%r272, %r271, 1;
	shr.u32 	%r274, %r273, 22;
	setp.eq.s32 	%p19, %r292, 0;
	sub.f32 	%f287, %f286, %f285;
	setp.eq.s32 	%p25, %r299, 0;
	sub.f32 	%f321, %f286, %f319;
	setp.eq.s32 	%p31, %r310, 0;
	sub.f32 	%f356, %f286, %f354;
	setp.eq.s32 	%p37, %r317, 0;
	sub.f32 	%f390, %f286, %f388;
	setp.eq.s32 	%p43, %r328, 0;
	sub.f32 	%f425, %f286, %f423;
	setp.eq.s32 	%p49, %r335, 0;
	sub.f32 	%f459, %f286, %f457;
	setp.eq.s32 	%p55, %r346, 0;
	sub.f32 	%f494, %f286, %f492;
	setp.eq.s32 	%p61, %r353, 0;
	sub.f32 	%f528, %f286, %f526;
	setp.eq.s32 	%p67, %r364, 0;
	sub.f32 	%f563, %f286, %f561;
	setp.eq.s32 	%p73, %r371, 0;
	sub.f32 	%f597, %f286, %f595;
	setp.eq.s32 	%p79, %r382, 0;
	sub.f32 	%f632, %f286, %f630;
	setp.eq.s32 	%p85, %r389, 0;
	sub.f32 	%f666, %f286, %f664;
	setp.eq.s32 	%p91, %r400, 0;
	sub.f32 	%f701, %f286, %f699;
	setp.eq.s32 	%p97, %r407, 0;
	sub.f32 	%f735, %f286, %f733;
	setp.eq.s32 	%p103, %r418, 0;
	sub.f32 	%f770, %f286, %f768;
	setp.eq.s32 	%p109, %r425, 0;
	sub.f32 	%f804, %f286, %f802;
	selp.f32 	%f852, %f850, %f849, %p126;
	selp.f32 	%f854, %f851, %f853, %p127;
	and.b32  	%r444, %r443, 2;
	setp.eq.f32 	%p129, %f858, %f1354;
	mul.f32 	%f859, %f1354, 0f00000000;
	selp.f32 	%f904, %f902, %f901, %p146;
	selp.f32 	%f906, %f903, %f905, %p147;
	and.b32  	%r473, %r472, 2;
	setp.eq.f32 	%p149, %f910, %f1358;
	mul.f32 	%f911, %f1358, 0f00000000;
	selp.f32 	%f958, %f956, %f955, %p166;
	selp.f32 	%f960, %f957, %f959, %p167;
	and.b32  	%r496, %r495, 2;
	setp.eq.f32 	%p169, %f964, %f1362;
	mul.f32 	%f965, %f1362, 0f00000000;
	selp.f32 	%f1010, %f1008, %f1007, %p186;
	selp.f32 	%f1012, %f1009, %f1011, %p187;
	and.b32  	%r528, %r527, 2;
	setp.eq.f32 	%p189, %f1016, %f1366;
	mul.f32 	%f1017, %f1366, 0f00000000;
	setp.eq.s32 	%p207, %r546, 0;
	neg.f32 	%f1064, %f1062;
	add.s32 	%r547, %r544, 1;
	cvt.rzi.f32.f32 	%f1069, %f1370;
	setp.eq.s32 	%p227, %r570, 0;
	neg.f32 	%f1115, %f1113;
	add.s32 	%r571, %r568, 1;
	cvt.rzi.f32.f32 	%f1120, %f1374;
	selp.f32 	%f1167, %f1165, %f1164, %p246;
	selp.f32 	%f1169, %f1166, %f1168, %p247;
	and.b32  	%r588, %r587, 2;
	setp.eq.f32 	%p249, %f1173, %f1378;
	mul.f32 	%f1174, %f1378, 0f00000000;
	selp.f32 	%f1218, %f1216, %f1215, %p266;
	selp.f32 	%f1220, %f1217, %f1219, %p267;
	and.b32  	%r616, %r615, 2;
	setp.eq.f32 	%p269, %f1224, %f1382;
	mul.f32 	%f1225, %f1382, 0f00000000;
	selp.f32 	%f1271, %f1269, %f1270, %p286;
	and.b32  	%r638, %r636, 2;
	add.s32 	%r275, %r272, %r274;
	selp.f32 	%f288, %f285, %f287, %p19;
	selp.f32 	%f322, %f319, %f321, %p25;
	selp.f32 	%f357, %f354, %f356, %p31;
	selp.f32 	%f391, %f388, %f390, %p37;
	selp.f32 	%f426, %f423, %f425, %p43;
	selp.f32 	%f460, %f457, %f459, %p49;
	selp.f32 	%f495, %f492, %f494, %p55;
	selp.f32 	%f529, %f526, %f528, %p61;
	selp.f32 	%f564, %f561, %f563, %p67;
	selp.f32 	%f598, %f595, %f597, %p73;
	selp.f32 	%f633, %f630, %f632, %p79;
	selp.f32 	%f667, %f664, %f666, %p85;
	selp.f32 	%f702, %f699, %f701, %p91;
	selp.f32 	%f736, %f733, %f735, %p97;
	selp.f32 	%f771, %f768, %f770, %p103;
	selp.f32 	%f805, %f802, %f804, %p109;
	setp.eq.s32 	%p128, %r444, 0;
	sub.f32 	%f856, %f286, %f852;
	selp.f32 	%f91, %f859, %f854, %p129;
	abs.f32 	%f860, %f1354;
	setp.eq.s32 	%p148, %r473, 0;
	sub.f32 	%f908, %f286, %f904;
	selp.f32 	%f912, %f911, %f906, %p149;
	abs.f32 	%f913, %f1358;
	setp.eq.s32 	%p168, %r496, 0;
	sub.f32 	%f962, %f286, %f958;
	selp.f32 	%f127, %f965, %f960, %p169;
	abs.f32 	%f966, %f1362;
	setp.eq.s32 	%p188, %r528, 0;
	sub.f32 	%f1014, %f286, %f1010;
	selp.f32 	%f1018, %f1017, %f1012, %p189;
	abs.f32 	%f1019, %f1366;
	selp.f32 	%f1063, %f1061, %f1060, %p206;
	selp.f32 	%f1065, %f1062, %f1064, %p207;
	and.b32  	%r548, %r547, 2;
	setp.eq.f32 	%p209, %f1069, %f1370;
	mul.f32 	%f1070, %f1370, 0f00000000;
	selp.f32 	%f1114, %f1112, %f1111, %p226;
	selp.f32 	%f1116, %f1113, %f1115, %p227;
	and.b32  	%r572, %r571, 2;
	setp.eq.f32 	%p229, %f1120, %f1374;
	mul.f32 	%f1121, %f1374, 0f00000000;
	setp.eq.s32 	%p248, %r588, 0;
	sub.f32 	%f1171, %f286, %f1167;
	selp.f32 	%f201, %f1174, %f1169, %p249;
	abs.f32 	%f1175, %f1378;
	setp.eq.s32 	%p268, %r616, 0;
	sub.f32 	%f1222, %f286, %f1218;
	selp.f32 	%f1226, %f1225, %f1220, %p269;
	abs.f32 	%f1227, %f1382;
	setp.eq.s32 	%p287, %r638, 0;
	neg.f32 	%f1273, %f1271;
	add.s32 	%r639, %r636, 1;
	cvt.rzi.f32.f32 	%f1278, %f1386;
	and.b32  	%r276, %r275, -1024;
	mul.f32 	%f2, %f288, %f288;
	mul.f32 	%f7, %f322, %f322;
	mul.f32 	%f11, %f357, %f357;
	mul.f32 	%f16, %f391, %f391;
	mul.f32 	%f20, %f426, %f426;
	mul.f32 	%f25, %f460, %f460;
	mul.f32 	%f29, %f495, %f495;
	mul.f32 	%f34, %f529, %f529;
	mul.f32 	%f38, %f564, %f564;
	mul.f32 	%f43, %f598, %f598;
	mul.f32 	%f47, %f633, %f633;
	mul.f32 	%f52, %f667, %f667;
	mul.f32 	%f56, %f702, %f702;
	mul.f32 	%f61, %f736, %f736;
	mul.f32 	%f65, %f771, %f771;
	mul.f32 	%f70, %f805, %f805;
	selp.f32 	%f857, %f852, %f856, %p128;
	setp.gt.f32 	%p130, %f860, 0f4B800000;
	add.f32 	%f861, %f91, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p148;
	setp.gt.f32 	%p150, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f963, %f958, %f962, %p168;
	setp.gt.f32 	%p170, %f966, 0f4B800000;
	add.f32 	%f967, %f127, 0f3F800000;
	selp.f32 	%f1015, %f1010, %f1014, %p188;
	setp.gt.f32 	%p190, %f1019, 0f4B800000;
	add.f32 	%f1020, %f1018, 0f3F800000;
	setp.eq.s32 	%p208, %r548, 0;
	sub.f32 	%f1067, %f286, %f1063;
	selp.f32 	%f164, %f1070, %f1065, %p209;
	abs.f32 	%f1071, %f1370;
	setp.eq.s32 	%p228, %r572, 0;
	sub.f32 	%f1118, %f286, %f1114;
	selp.f32 	%f1122, %f1121, %f1116, %p229;
	abs.f32 	%f1123, %f1374;
	selp.f32 	%f1172, %f1167, %f1171, %p248;
	setp.gt.f32 	%p250, %f1175, 0f4B800000;
	add.f32 	%f1176, %f201, 0f3F800000;
	selp.f32 	%f1223, %f1218, %f1222, %p268;
	setp.gt.f32 	%p270, %f1227, 0f4B800000;
	add.f32 	%f1228, %f1226, 0f3F800000;
	selp.f32 	%f1272, %f1270, %f1269, %p286;
	selp.f32 	%f1274, %f1271, %f1273, %p287;
	and.b32  	%r640, %r639, 2;
	setp.eq.f32 	%p289, %f1278, %f1386;
	mul.f32 	%f1279, %f1386, 0f00000000;
	bfe.u32 	%r268, %r267, 1, 10;
	sub.s32 	%r277, %r272, %r276;
	mul.f32 	%f292, %f2, 0f3B8B2FF9;
	mul.f32 	%f326, %f7, 0f3B8B2FF9;
	mul.f32 	%f361, %f11, 0f3B8B2FF9;
	mul.f32 	%f395, %f16, 0f3B8B2FF9;
	mul.f32 	%f430, %f20, 0f3B8B2FF9;
	mul.f32 	%f464, %f25, 0f3B8B2FF9;
	mul.f32 	%f499, %f29, 0f3B8B2FF9;
	mul.f32 	%f533, %f34, 0f3B8B2FF9;
	mul.f32 	%f568, %f38, 0f3B8B2FF9;
	mul.f32 	%f602, %f43, 0f3B8B2FF9;
	mul.f32 	%f637, %f47, 0f3B8B2FF9;
	mul.f32 	%f671, %f52, 0f3B8B2FF9;
	mul.f32 	%f706, %f56, 0f3B8B2FF9;
	mul.f32 	%f740, %f61, 0f3B8B2FF9;
	mul.f32 	%f775, %f65, 0f3B8B2FF9;
	mul.f32 	%f808, %f70, 0f3B8B2FF9;
	selp.f32 	%f92, %f861, %f857, %p130;
	selp.f32 	%f915, %f914, %f909, %p150;
	selp.f32 	%f128, %f967, %f963, %p170;
	selp.f32 	%f1021, %f1020, %f1015, %p190;
	selp.f32 	%f1068, %f1063, %f1067, %p208;
	setp.gt.f32 	%p210, %f1071, 0f4B800000;
	add.f32 	%f1072, %f164, 0f3F800000;
	selp.f32 	%f1119, %f1114, %f1118, %p228;
	setp.gt.f32 	%p230, %f1123, 0f4B800000;
	add.f32 	%f1124, %f1122, 0f3F800000;
	selp.f32 	%f202, %f1176, %f1172, %p250;
	selp.f32 	%f1229, %f1228, %f1223, %p270;
	setp.eq.s32 	%p288, %r640, 0;
	sub.f32 	%f1276, %f286, %f1272;
	selp.f32 	%f237, %f1279, %f1274, %p289;
	abs.f32 	%f1280, %f1386;
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd68, %r268, 4;
	mul.wide.s32 	%rd70, %r277, 4;
	mul.f32 	%f6, %f292, %f1336;
	mul.f32 	%f327, %f326, %f1337;
	mul.f32 	%f15, %f361, %f1338;
	mul.f32 	%f396, %f395, %f1339;
	mul.f32 	%f24, %f430, %f1340;
	mul.f32 	%f465, %f464, %f1341;
	mul.f32 	%f33, %f499, %f1342;
	mul.f32 	%f534, %f533, %f1343;
	mul.f32 	%f42, %f568, %f1344;
	mul.f32 	%f603, %f602, %f1345;
	mul.f32 	%f51, %f637, %f1346;
	mul.f32 	%f672, %f671, %f1347;
	mul.f32 	%f60, %f706, %f1348;
	mul.f32 	%f741, %f740, %f1349;
	mul.f32 	%f69, %f775, %f1350;
	mul.f32 	%f809, %f808, %f1351;
	mov.b32 	%r456, %f915;
	mov.b32 	%r455, %f92;
	mov.b32 	%r462, %f912;
	mov.b32 	%r461, %f91;
	mov.b32 	%r511, %f1021;
	mov.b32 	%r510, %f128;
	mov.b32 	%r517, %f1018;
	mov.b32 	%r516, %f127;
	selp.f32 	%f165, %f1072, %f1068, %p210;
	selp.f32 	%f1125, %f1124, %f1119, %p230;
	mov.b32 	%r599, %f1229;
	mov.b32 	%r598, %f202;
	mov.b32 	%r605, %f1226;
	mov.b32 	%r604, %f201;
	selp.f32 	%f1277, %f1272, %f1276, %p288;
	setp.gt.f32 	%p290, %f1280, 0f4B800000;
	add.f32 	%f1281, %f237, 0f3F800000;
	add.s64 	%rd69, %rd1, %rd68;
	add.s64 	%rd71, %rd1, %rd70;
	mov.b32 	%r302, %f327;
	mov.b32 	%r301, %f6;
	mov.b32 	%r320, %f396;
	mov.b32 	%r319, %f15;
	mov.b32 	%r338, %f465;
	mov.b32 	%r337, %f24;
	mov.b32 	%r356, %f534;
	mov.b32 	%r355, %f33;
	mov.b32 	%r374, %f603;
	mov.b32 	%r373, %f42;
	mov.b32 	%r392, %f672;
	mov.b32 	%r391, %f51;
	mov.b32 	%r410, %f741;
	mov.b32 	%r409, %f60;
	mov.b32 	%r428, %f809;
	mov.b32 	%r427, %f69;
	xor.b32  	%r514, %r517, -2147483648;
	xor.b32  	%r513, %r516, -2147483648;
	mov.b32 	%r561, %f1125;
	mov.b32 	%r560, %f165;
	mov.b32 	%r564, %f1122;
	mov.b32 	%r563, %f164;
	xor.b32  	%r602, %r605, -2147483648;
	xor.b32  	%r601, %r604, -2147483648;
	selp.f32 	%f238, %f1281, %f1277, %p290;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	ld.global.u32 	%r17, [%rd69];
	ld.global.u32 	%r18, [%rd71];
	// begin inline asm
	cvt.rn.f16x2.f32 %r300, %r302, %r301;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r318, %r320, %r319;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r336, %r338, %r337;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r354, %r356, %r355;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r372, %r374, %r373;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r390, %r392, %r391;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r408, %r410, %r409;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r426, %r428, %r427;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r454, %r456, %r455;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r457, %r456, %r455;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r460, %r462, %r461;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r463, %r462, %r461;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r509, %r511, %r510;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r512, %r514, %r513;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r515, %r517, %r516;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r518, %r511, %r510;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r559, %r561, %r560;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r562, %r564, %r563;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r597, %r599, %r598;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r600, %r602, %r601;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r603, %r605, %r604;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r606, %r599, %r598;
	// end inline asm
	add.f32 	%f1304, %f1390, %f1390;
	mov.b32 	%r656, %f1304;
	and.b32  	%r657, %r656, -2147483648;
	or.b32  	%r658, %r657, 1056964608;
	mov.b32 	%f1305, %r658;
	add.f32 	%f1306, %f1304, %f1305;
	cvt.rzi.f32.f32 	%f1307, %f1306;
	abs.f32 	%f1308, %f1304;
	setp.gt.f32 	%p304, %f1308, 0f4B000000;
	selp.f32 	%f1309, %f1304, %f1307, %p304;
	cvt.rzi.f32.f32 	%f1310, %f1304;
	setp.lt.f32 	%p305, %f1308, 0f3F000000;
	selp.f32 	%f1311, %f1310, %f1309, %p305;
	cvt.rzi.s32.f32 	%r659, %f1311;
	fma.rn.f32 	%f1312, %f1311, 0fBF000000, %f1390;
	mul.f32 	%f1313, %f1312, %f1312;
	fma.rn.f32 	%f1314, %f1313, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1315, %f1313, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1316, %f1314, %f1313, 0fC0A55DF6;
	fma.rn.f32 	%f1317, %f1315, %f1313, 0f4081E0CF;
	fma.rn.f32 	%f1318, %f1313, %f1312, 0f00000000;
	fma.rn.f32 	%f1319, %f1317, %f1313, 0fC09DE9E6;
	fma.rn.f32 	%f1320, %f1316, %f1318, 0f00000000;
	fma.rn.f32 	%f1321, %f1319, %f1313, 0f3F800000;
	fma.rn.f32 	%f1322, %f1312, 0f40490FDB, %f1320;
	and.b32  	%r660, %r659, 1;
	setp.eq.b32 	%p306, %r660, 1;
	selp.f32 	%f1323, %f1321, %f1322, %p306;
	selp.f32 	%f1324, %f1322, %f1321, %p306;
	and.b32  	%r661, %r659, 2;
	setp.eq.s32 	%p307, %r661, 0;
	neg.f32 	%f1325, %f1323;
	selp.f32 	%f1326, %f1323, %f1325, %p307;
	add.s32 	%r662, %r659, 1;
	and.b32  	%r663, %r662, 2;
	setp.eq.s32 	%p308, %r663, 0;
	sub.f32 	%f1328, %f286, %f1324;
	selp.f32 	%f1329, %f1324, %f1328, %p308;
	cvt.rzi.f32.f32 	%f1330, %f1390;
	setp.eq.f32 	%p309, %f1330, %f1390;
	mul.f32 	%f1331, %f1390, 0f00000000;
	selp.f32 	%f1332, %f1331, %f1326, %p309;
	abs.f32 	%f1333, %f1390;
	setp.gt.f32 	%p310, %f1333, 0f4B800000;
	add.f32 	%f1334, %f1332, 0f3F800000;
	selp.f32 	%f1335, %f1334, %f1329, %p310;
	mov.b32 	%r652, %f1335;
	mov.b32 	%r651, %f238;
	// begin inline asm
	cvt.rn.f16x2.f32 %r650, %r652, %r651;
	// end inline asm
	mov.b32 	%r655, %f1332;
	mov.b32 	%r654, %f237;
	// begin inline asm
	cvt.rn.f16x2.f32 %r653, %r655, %r654;
	// end inline asm
	shl.b32 	%r143, %r5, 12;
	shl.b32 	%r665, %r3, 5;
	and.b32  	%r144, %r9, 28;
	and.b32  	%r145, %r665, 96;
	and.b32  	%r146, %r665, 128;
	shl.b32 	%r666, %r4, 3;
	and.b32  	%r147, %r666, 64;
	and.b32  	%r148, %r15, 32;
	or.b32  	%r667, %r145, %r143;
	or.b32  	%r668, %r667, %r144;
	or.b32  	%r149, %r668, %r146;
	or.b32  	%r669, %r145, %r144;
	or.b32  	%r150, %r669, %r146;
	and.b32  	%r151, %r4, 8;
	and.b32  	%r670, %r1, 1;
	mul.lo.s32 	%r671, %r670, 2080;
	bfe.u32 	%r672, %r1, 2, 1;
	shr.u32 	%r673, %r1, 3;
	shl.b32 	%r674, %r4, 4;
	or.b32  	%r675, %r674, %r151;
	shr.u32 	%r676, %r675, 2;
	and.b32  	%r677, %r676, 30;
	shr.u32 	%r678, %r1, 1;
	bfe.u32 	%r679, %r1, 1, 1;
	mad.lo.s32 	%r680, %r672, 520, %r671;
	mad.lo.s32 	%r681, %r673, 260, %r680;
	add.s32 	%r682, %r681, %r677;
	mad.lo.s32 	%r683, %r679, 1040, %r682;
	mad.lo.s32 	%r684, %r23, 65, %r683;
	mul.wide.u32 	%rd72, %r684, 4;
	mov.u64 	%rd73, shmem;
	add.s64 	%rd5, %rd73, %rd72;
	add.s32 	%r685, %r684, 32;
	mul.wide.u32 	%rd74, %r685, 4;
	add.s64 	%rd6, %rd73, %rd74;
	add.s32 	%r686, %r684, 1;
	mul.wide.u32 	%rd75, %r686, 4;
	add.s64 	%rd7, %rd73, %rd75;
	add.s32 	%r687, %r684, 33;
	mul.wide.u32 	%rd76, %r687, 4;
	add.s64 	%rd8, %rd73, %rd76;
	add.s32 	%r688, %r684, 130;
	mul.wide.u32 	%rd77, %r688, 4;
	add.s64 	%rd9, %rd73, %rd77;
	add.s32 	%r689, %r684, 162;
	mul.wide.u32 	%rd78, %r689, 4;
	add.s64 	%rd10, %rd73, %rd78;
	add.s32 	%r690, %r684, 131;
	mul.wide.u32 	%rd79, %r690, 4;
	add.s64 	%rd11, %rd73, %rd79;
	add.s32 	%r691, %r684, 163;
	mul.wide.u32 	%rd80, %r691, 4;
	add.s64 	%rd12, %rd73, %rd80;
	add.s32 	%r692, %r684, 4161;
	mul.wide.u32 	%rd81, %r692, 4;
	add.s64 	%rd13, %rd73, %rd81;
	add.s32 	%r693, %r684, 4193;
	mul.wide.u32 	%rd82, %r693, 4;
	add.s64 	%rd14, %rd73, %rd82;
	add.s32 	%r694, %r684, 4162;
	mul.wide.u32 	%rd83, %r694, 4;
	add.s64 	%rd15, %rd73, %rd83;
	add.s32 	%r695, %r684, 4194;
	mul.wide.u32 	%rd84, %r695, 4;
	add.s64 	%rd16, %rd73, %rd84;
	add.s32 	%r696, %r684, 4291;
	mul.wide.u32 	%rd85, %r696, 4;
	add.s64 	%rd17, %rd73, %rd85;
	add.s32 	%r697, %r684, 4323;
	mul.wide.u32 	%rd86, %r697, 4;
	add.s64 	%rd18, %rd73, %rd86;
	add.s32 	%r698, %r684, 4292;
	mul.wide.u32 	%rd87, %r698, 4;
	add.s64 	%rd19, %rd73, %rd87;
	add.s32 	%r699, %r684, 4324;
	mul.wide.u32 	%rd88, %r699, 4;
	add.s64 	%rd20, %rd73, %rd88;
	mul.lo.s32 	%r700, %r23, 520;
	mul.lo.s32 	%r701, %r21, 130;
	mul.lo.s32 	%r702, %r22, 260;
	mul.lo.s32 	%r703, %r25, 1040;
	mul.lo.s32 	%r704, %r20, 65;
	and.b32  	%r705, %r2, 32;
	or.b32  	%r706, %r678, 8;
	or.b32  	%r707, %r678, 16;
	or.b32  	%r708, %r678, 24;
	or.b32  	%r709, %r14, %r11;
	or.b32  	%r710, %r709, %r10;
	or.b32  	%r711, %r710, %r13;
	or.b32  	%r712, %r711, %r12;
	or.b32  	%r713, %r712, %r16;
	bfe.u32 	%r714, %r713, 1, 6;
	mul.lo.s32 	%r715, %r714, 65;
	or.b32  	%r716, %r713, 64;
	shr.u32 	%r717, %r716, 31;
	add.s32 	%r718, %r716, %r717;
	shr.s32 	%r719, %r718, 1;
	shr.s32 	%r720, %r718, 31;
	shr.u32 	%r721, %r720, 26;
	add.s32 	%r722, %r719, %r721;
	and.b32  	%r723, %r722, -64;
	sub.s32 	%r724, %r719, %r723;
	mul.lo.s32 	%r725, %r724, 65;
	shl.b32 	%r726, %r1, 1;
	or.b32  	%r727, %r726, %r23;
	mul.lo.s32 	%r728, %r727, 65;
	add.s32 	%r729, %r677, %r728;
	mul.wide.u32 	%rd89, %r729, 4;
	add.s64 	%rd21, %rd73, %rd89;
	cvt.u64.u32 	%rd90, %r677;
	cvt.u64.u32 	%rd91, %r728;
	add.s64 	%rd92, %rd91, %rd90;
	shl.b64 	%rd93, %rd92, 2;
	add.s64 	%rd22, %rd73, %rd93;
	or.b32  	%r730, %r727, 32;
	mul.lo.s32 	%r731, %r730, 65;
	add.s32 	%r732, %r677, %r731;
	mul.wide.u32 	%rd94, %r732, 4;
	add.s64 	%rd23, %rd73, %rd94;
	cvt.u64.u32 	%rd95, %r731;
	add.s64 	%rd96, %rd95, %rd90;
	shl.b64 	%rd97, %rd96, 2;
	add.s64 	%rd24, %rd73, %rd97;
	shl.b32 	%r733, %r7, 19;
	add.s32 	%r734, %r733, -1572864;
	shl.b32 	%r735, %r1, 2;
	or.b32  	%r736, %r735, %r11;
	or.b32  	%r737, %r736, %r24;
	shl.b32 	%r152, %r737, 8;
	cvt.s64.s32 	%rd25, %r734;
	or.b32  	%r153, %r152, 16384;
	or.b32  	%r154, %r150, %r152;
	add.s32 	%r738, %r708, %r725;
	add.s32 	%r739, %r738, %r705;
	mul.wide.s32 	%rd26, %r739, 4;
	add.s32 	%r740, %r708, %r715;
	add.s32 	%r741, %r740, %r705;
	mul.wide.u32 	%rd27, %r741, 4;
	add.s32 	%r742, %r707, %r725;
	add.s32 	%r743, %r742, %r705;
	mul.wide.s32 	%rd28, %r743, 4;
	add.s32 	%r744, %r707, %r715;
	add.s32 	%r745, %r744, %r705;
	mul.wide.u32 	%rd29, %r745, 4;
	add.s32 	%r746, %r706, %r725;
	add.s32 	%r747, %r746, %r705;
	mul.wide.s32 	%rd30, %r747, 4;
	add.s32 	%r748, %r706, %r715;
	add.s32 	%r749, %r748, %r705;
	mul.wide.u32 	%rd31, %r749, 4;
	add.s32 	%r750, %r678, %r725;
	add.s32 	%r751, %r750, %r705;
	mul.wide.s32 	%rd32, %r751, 4;
	add.s32 	%r752, %r678, %r715;
	add.s32 	%r753, %r752, %r705;
	mul.wide.u32 	%rd33, %r753, 4;
	add.s32 	%r754, %r678, %r703;
	add.s32 	%r755, %r754, %r700;
	add.s32 	%r756, %r755, %r702;
	add.s32 	%r757, %r756, %r701;
	add.s32 	%r758, %r757, %r704;
	add.s32 	%r759, %r758, %r705;
	add.s32 	%r760, %r759, 2080;
	mul.wide.u32 	%rd34, %r760, 4;
	add.s32 	%r761, %r706, %r703;
	add.s32 	%r762, %r761, %r700;
	add.s32 	%r763, %r762, %r702;
	add.s32 	%r764, %r763, %r701;
	add.s32 	%r765, %r764, %r704;
	add.s32 	%r766, %r765, %r705;
	add.s32 	%r767, %r766, 2080;
	mul.wide.u32 	%rd35, %r767, 4;
	add.s32 	%r768, %r707, %r703;
	add.s32 	%r769, %r768, %r700;
	add.s32 	%r770, %r769, %r702;
	add.s32 	%r771, %r770, %r701;
	add.s32 	%r772, %r771, %r704;
	add.s32 	%r773, %r772, %r705;
	add.s32 	%r774, %r773, 2080;
	mul.wide.u32 	%rd36, %r774, 4;
	add.s32 	%r775, %r708, %r703;
	add.s32 	%r776, %r775, %r700;
	add.s32 	%r777, %r776, %r702;
	add.s32 	%r778, %r777, %r701;
	add.s32 	%r779, %r778, %r704;
	add.s32 	%r780, %r779, %r705;
	add.s32 	%r781, %r780, 2080;
	mul.wide.u32 	%rd37, %r781, 4;
	mul.wide.u32 	%rd38, %r780, 4;
	mul.wide.u32 	%rd39, %r773, 4;
	mul.wide.u32 	%rd40, %r766, 4;
	mul.wide.u32 	%rd41, %r759, 4;
	setp.eq.s32 	%p312, %r151, 0;
	mov.u16 	%rs2380, 25600;
	mov.u16 	%rs2172, 21504;
	mov.u16 	%rs2388, 18432;
	mov.u16 	%rs2306, -14592;
	mov.u32 	%r16355, %r16333;
	mov.u32 	%r16404, %r16333;
	mov.u32 	%r16403, %r16333;
	mov.u32 	%r16402, %r16333;
	mov.u32 	%r16401, %r16333;
	mov.u32 	%r16400, %r16333;
	mov.u32 	%r16399, %r16333;
	mov.u32 	%r16398, %r16333;
	mov.u32 	%r16397, %r16333;
	mov.u32 	%r16396, %r16333;
	mov.u32 	%r16395, %r16333;
	mov.u32 	%r16394, %r16333;
	mov.u32 	%r16393, %r16333;
	mov.u32 	%r16392, %r16333;
	mov.u32 	%r16391, %r16333;
	mov.u32 	%r16390, %r16333;
	mov.u32 	%r16389, %r16333;
	mov.u32 	%r16388, %r16333;
	mov.u32 	%r16387, %r16333;
	mov.u32 	%r16386, %r16333;
	mov.u32 	%r16385, %r16333;
	mov.u32 	%r16384, %r16333;
	mov.u32 	%r16383, %r16333;
	mov.u32 	%r16382, %r16333;
	mov.u32 	%r16381, %r16333;
	bra.uni 	LBB0_182;
LBB0_188:                               // %L81483
                                        //   in Loop: Header=BB0_182 Depth=1
	setp.ne.s32 	%p336, %r16355, 130816;
	add.s32 	%r16355, %r16355, 256;
	add.s32 	%r16330, %r16355, %r5;
	setp.gt.s32 	%p337, %r6, %r16330;
	and.pred  	%p338, %p336, %p337;
	@%p338 bra 	LBB0_182;
	bra.uni 	LBB0_189;
LBB0_182:                               // %L2449
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_183 Depth 2
	or.b32  	%r847, %r1, %r16355;
	or.b32  	%r848, %r847, %r147;
	or.b32  	%r849, %r848, %r148;
	shl.b32 	%r850, %r849, 12;
	add.s32 	%r851, %r149, %r850;
	shr.s32 	%r852, %r851, 31;
	shr.u32 	%r853, %r852, 3;
	add.s32 	%r854, %r851, %r853;
	shr.s32 	%r855, %r854, 29;
	and.b32  	%r856, %r854, -536870912;
	setp.ne.s32 	%p313, %r856, %r851;
	setp.lt.s32 	%p314, %r851, 0;
	and.pred  	%p315, %p314, %p313;
	selp.u32 	%r857, 1, 0, %p315;
	sub.s32 	%r858, %r857, %r855;
	shl.b32 	%r859, %r858, 29;
	add.s32 	%r860, %r859, %r851;
	mul.wide.s32 	%rd99, %r860, 4;
	add.s64 	%rd100, %rd2, %rd99;
	ld.global.v4.u32 	{%r861, %r862, %r863, %r864}, [%rd100];
	or.b32  	%r865, %r150, %r850;
	or.b32  	%r866, %r865, 65536;
	add.s32 	%r867, %r866, %r143;
	shr.s32 	%r868, %r867, 31;
	shr.u32 	%r869, %r868, 3;
	add.s32 	%r870, %r867, %r869;
	shr.s32 	%r871, %r870, 29;
	and.b32  	%r872, %r870, -536870912;
	setp.ne.s32 	%p316, %r872, %r867;
	setp.lt.s32 	%p317, %r867, 0;
	and.pred  	%p318, %p317, %p316;
	selp.u32 	%r873, 1, 0, %p318;
	sub.s32 	%r874, %r873, %r871;
	shl.b32 	%r875, %r874, 29;
	add.s32 	%r876, %r875, %r867;
	mul.wide.s32 	%rd101, %r876, 4;
	add.s64 	%rd102, %rd2, %rd101;
	ld.global.v4.u32 	{%r877, %r878, %r879, %r880}, [%rd102];
	or.b32  	%r881, %r865, 524288;
	add.s32 	%r882, %r881, %r143;
	shr.s32 	%r883, %r882, 31;
	shr.u32 	%r884, %r883, 3;
	add.s32 	%r885, %r882, %r884;
	shr.s32 	%r886, %r885, 29;
	and.b32  	%r887, %r885, -536870912;
	setp.ne.s32 	%p319, %r887, %r882;
	setp.lt.s32 	%p320, %r882, 0;
	and.pred  	%p321, %p320, %p319;
	selp.u32 	%r888, 1, 0, %p321;
	sub.s32 	%r889, %r888, %r886;
	shl.b32 	%r890, %r889, 29;
	add.s32 	%r891, %r890, %r882;
	mul.wide.s32 	%rd103, %r891, 4;
	add.s64 	%rd104, %rd2, %rd103;
	ld.global.v4.u32 	{%r892, %r893, %r894, %r895}, [%rd104];
	or.b32  	%r896, %r865, 589824;
	add.s32 	%r897, %r896, %r143;
	shr.s32 	%r898, %r897, 31;
	shr.u32 	%r899, %r898, 3;
	add.s32 	%r900, %r897, %r899;
	shr.s32 	%r901, %r900, 29;
	and.b32  	%r902, %r900, -536870912;
	setp.ne.s32 	%p322, %r902, %r897;
	setp.lt.s32 	%p323, %r897, 0;
	and.pred  	%p324, %p323, %p322;
	selp.u32 	%r903, 1, 0, %p324;
	sub.s32 	%r904, %r903, %r901;
	shl.b32 	%r905, %r904, 29;
	add.s32 	%r906, %r905, %r897;
	mul.wide.s32 	%rd105, %r906, 4;
	add.s64 	%rd106, %rd2, %rd105;
	ld.global.v4.u32 	{%r907, %r908, %r909, %r910}, [%rd106];
	selp.b32 	%r911, %r863, %r861, %p312;
	shfl.sync.bfly.b32	%r912, %r911, 8, 31, -1;
	selp.b32 	%r783, %r861, %r912, %p312;
	selp.b32 	%r784, %r912, %r863, %p312;
	selp.b32 	%r913, %r864, %r862, %p312;
	shfl.sync.bfly.b32	%r914, %r913, 8, 31, -1;
	selp.b32 	%r791, %r862, %r914, %p312;
	selp.b32 	%r792, %r914, %r864, %p312;
	selp.b32 	%r915, %r879, %r877, %p312;
	shfl.sync.bfly.b32	%r916, %r915, 8, 31, -1;
	selp.b32 	%r799, %r877, %r916, %p312;
	selp.b32 	%r800, %r916, %r879, %p312;
	selp.b32 	%r917, %r880, %r878, %p312;
	shfl.sync.bfly.b32	%r918, %r917, 8, 31, -1;
	selp.b32 	%r807, %r878, %r918, %p312;
	selp.b32 	%r808, %r918, %r880, %p312;
	selp.b32 	%r919, %r894, %r892, %p312;
	shfl.sync.bfly.b32	%r920, %r919, 8, 31, -1;
	selp.b32 	%r815, %r892, %r920, %p312;
	selp.b32 	%r816, %r920, %r894, %p312;
	selp.b32 	%r921, %r895, %r893, %p312;
	shfl.sync.bfly.b32	%r922, %r921, 8, 31, -1;
	selp.b32 	%r823, %r893, %r922, %p312;
	selp.b32 	%r824, %r922, %r895, %p312;
	selp.b32 	%r923, %r909, %r907, %p312;
	shfl.sync.bfly.b32	%r924, %r923, 8, 31, -1;
	selp.b32 	%r831, %r907, %r924, %p312;
	selp.b32 	%r832, %r924, %r909, %p312;
	selp.b32 	%r925, %r910, %r908, %p312;
	shfl.sync.bfly.b32	%r926, %r925, 8, 31, -1;
	selp.b32 	%r839, %r908, %r926, %p312;
	selp.b32 	%r840, %r926, %r910, %p312;
	mov.u32 	%r841, 21520;
	// begin inline asm
	prmt.b32 %r782, %r783, %r784, %r841;
	// end inline asm
	mov.u32 	%r845, 30258;
	// begin inline asm
	prmt.b32 %r786, %r783, %r784, %r845;
	// end inline asm
	// begin inline asm
	prmt.b32 %r790, %r791, %r792, %r841;
	// end inline asm
	// begin inline asm
	prmt.b32 %r794, %r791, %r792, %r845;
	// end inline asm
	// begin inline asm
	prmt.b32 %r798, %r799, %r800, %r841;
	// end inline asm
	// begin inline asm
	prmt.b32 %r802, %r799, %r800, %r845;
	// end inline asm
	// begin inline asm
	prmt.b32 %r806, %r807, %r808, %r841;
	// end inline asm
	// begin inline asm
	prmt.b32 %r810, %r807, %r808, %r845;
	// end inline asm
	// begin inline asm
	prmt.b32 %r814, %r815, %r816, %r841;
	// end inline asm
	// begin inline asm
	prmt.b32 %r818, %r815, %r816, %r845;
	// end inline asm
	// begin inline asm
	prmt.b32 %r822, %r823, %r824, %r841;
	// end inline asm
	// begin inline asm
	prmt.b32 %r826, %r823, %r824, %r845;
	// end inline asm
	// begin inline asm
	prmt.b32 %r830, %r831, %r832, %r841;
	// end inline asm
	// begin inline asm
	prmt.b32 %r834, %r831, %r832, %r845;
	// end inline asm
	// begin inline asm
	prmt.b32 %r838, %r839, %r840, %r841;
	// end inline asm
	// begin inline asm
	prmt.b32 %r842, %r839, %r840, %r845;
	// end inline asm
	st.shared.u32 	[%rd5], %r782;
	st.shared.u32 	[%rd6], %r786;
	st.shared.u32 	[%rd7], %r790;
	st.shared.u32 	[%rd8], %r794;
	st.shared.u32 	[%rd9], %r798;
	st.shared.u32 	[%rd10], %r802;
	st.shared.u32 	[%rd11], %r806;
	st.shared.u32 	[%rd12], %r810;
	st.shared.u32 	[%rd13], %r814;
	st.shared.u32 	[%rd14], %r818;
	st.shared.u32 	[%rd15], %r822;
	st.shared.u32 	[%rd16], %r826;
	st.shared.u32 	[%rd17], %r830;
	st.shared.u32 	[%rd18], %r834;
	st.shared.u32 	[%rd19], %r838;
	st.shared.u32 	[%rd20], %r842;
	bar.sync 	0;
	mov.u32 	%r16380, 256;
	mov.u64 	%rd171, %rd73;
LBB0_183:                               // %L15017
                                        //   Parent Loop BB0_182 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd107, %rd171, %rd41;
	ld.shared.u32 	%r16191, [%rd107];
	add.s64 	%rd108, %rd171, %rd40;
	ld.shared.u32 	%r16192, [%rd108];
	add.s64 	%rd109, %rd171, %rd39;
	ld.shared.u32 	%r16193, [%rd109];
	add.s64 	%rd110, %rd171, %rd38;
	ld.shared.u32 	%r16194, [%rd110];
	add.s64 	%rd111, %rd171, %rd34;
	ld.shared.u32 	%r16195, [%rd111];
	add.s64 	%rd112, %rd171, %rd35;
	ld.shared.u32 	%r16196, [%rd112];
	add.s64 	%rd113, %rd171, %rd36;
	ld.shared.u32 	%r16197, [%rd113];
	add.s64 	%rd114, %rd171, %rd37;
	ld.shared.u32 	%r16198, [%rd114];
	// begin inline asm
	mov.b32 %r932, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r943, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r931, %r16191, -2004318072;
	mov.u32 	%r930, 983055;
	// begin inline asm
	lop3.b32 %r929, %r930, %r931, %r932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r933, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r934, %r932, %r933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r937, %r929, %r934;
	// end inline asm
	mov.u32 	%r941, 15728880;
	// begin inline asm
	lop3.b32 %r940, %r941, %r931, %r943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r944, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r945, %r943, %r944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r948, %r940, %r945;
	// end inline asm
	shr.u32 	%r953, %r931, 8;
	// begin inline asm
	lop3.b32 %r951, %r930, %r953, %r932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r955, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r956, %r932, %r955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r959, %r951, %r956;
	// end inline asm
	// begin inline asm
	lop3.b32 %r962, %r941, %r953, %r943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r966, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r967, %r943, %r966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r970, %r962, %r967;
	// end inline asm
	// begin inline asm
	mov.b32 %r978, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r989, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r977, %r16192, -2004318072;
	// begin inline asm
	lop3.b32 %r975, %r930, %r977, %r978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r979, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r980, %r978, %r979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r983, %r975, %r980;
	// end inline asm
	// begin inline asm
	lop3.b32 %r986, %r941, %r977, %r989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r990, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r991, %r989, %r990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r994, %r986, %r991;
	// end inline asm
	shr.u32 	%r999, %r977, 8;
	// begin inline asm
	lop3.b32 %r997, %r930, %r999, %r978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1001, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1002, %r978, %r1001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1005, %r997, %r1002;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1008, %r941, %r999, %r989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1012, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1013, %r989, %r1012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1016, %r1008, %r1013;
	// end inline asm
	// begin inline asm
	mov.b32 %r1024, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1035, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1023, %r16193, -2004318072;
	// begin inline asm
	lop3.b32 %r1021, %r930, %r1023, %r1024, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1025, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1026, %r1024, %r1025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1029, %r1021, %r1026;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1032, %r941, %r1023, %r1035, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1036, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1037, %r1035, %r1036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1040, %r1032, %r1037;
	// end inline asm
	shr.u32 	%r1045, %r1023, 8;
	// begin inline asm
	lop3.b32 %r1043, %r930, %r1045, %r1024, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1047, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1048, %r1024, %r1047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1051, %r1043, %r1048;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1054, %r941, %r1045, %r1035, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1058, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1059, %r1035, %r1058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1062, %r1054, %r1059;
	// end inline asm
	// begin inline asm
	mov.b32 %r1070, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1081, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1069, %r16194, -2004318072;
	// begin inline asm
	lop3.b32 %r1067, %r930, %r1069, %r1070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1071, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1072, %r1070, %r1071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1075, %r1067, %r1072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1078, %r941, %r1069, %r1081, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1082, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1083, %r1081, %r1082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1086, %r1078, %r1083;
	// end inline asm
	shr.u32 	%r1091, %r1069, 8;
	// begin inline asm
	lop3.b32 %r1089, %r930, %r1091, %r1070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1093, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1094, %r1070, %r1093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1097, %r1089, %r1094;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1100, %r941, %r1091, %r1081, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1104, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1105, %r1081, %r1104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1108, %r1100, %r1105;
	// end inline asm
	// begin inline asm
	mov.b32 %r1116, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1127, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1115, %r16195, -2004318072;
	// begin inline asm
	lop3.b32 %r1113, %r930, %r1115, %r1116, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1117, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1118, %r1116, %r1117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1121, %r1113, %r1118;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1124, %r941, %r1115, %r1127, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1128, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1129, %r1127, %r1128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1132, %r1124, %r1129;
	// end inline asm
	shr.u32 	%r1137, %r1115, 8;
	// begin inline asm
	lop3.b32 %r1135, %r930, %r1137, %r1116, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1139, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1140, %r1116, %r1139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1143, %r1135, %r1140;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1146, %r941, %r1137, %r1127, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1150, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1151, %r1127, %r1150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1154, %r1146, %r1151;
	// end inline asm
	// begin inline asm
	mov.b32 %r1162, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1173, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1161, %r16196, -2004318072;
	// begin inline asm
	lop3.b32 %r1159, %r930, %r1161, %r1162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1163, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1164, %r1162, %r1163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1167, %r1159, %r1164;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1170, %r941, %r1161, %r1173, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1174, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1175, %r1173, %r1174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1178, %r1170, %r1175;
	// end inline asm
	shr.u32 	%r1183, %r1161, 8;
	// begin inline asm
	lop3.b32 %r1181, %r930, %r1183, %r1162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1185, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1186, %r1162, %r1185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1189, %r1181, %r1186;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1192, %r941, %r1183, %r1173, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1196, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1197, %r1173, %r1196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1200, %r1192, %r1197;
	// end inline asm
	// begin inline asm
	mov.b32 %r1208, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1219, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1207, %r16197, -2004318072;
	// begin inline asm
	lop3.b32 %r1205, %r930, %r1207, %r1208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1209, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1210, %r1208, %r1209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1213, %r1205, %r1210;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1216, %r941, %r1207, %r1219, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1220, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1221, %r1219, %r1220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1224, %r1216, %r1221;
	// end inline asm
	shr.u32 	%r1229, %r1207, 8;
	// begin inline asm
	lop3.b32 %r1227, %r930, %r1229, %r1208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1231, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1232, %r1208, %r1231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1235, %r1227, %r1232;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1238, %r941, %r1229, %r1219, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1242, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1243, %r1219, %r1242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1246, %r1238, %r1243;
	// end inline asm
	// begin inline asm
	mov.b32 %r1254, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1265, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1253, %r16198, -2004318072;
	// begin inline asm
	lop3.b32 %r1251, %r930, %r1253, %r1254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1255, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1256, %r1254, %r1255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1259, %r1251, %r1256;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1262, %r941, %r1253, %r1265, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1266, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1267, %r1265, %r1266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1270, %r1262, %r1267;
	// end inline asm
	shr.u32 	%r1275, %r1253, 8;
	// begin inline asm
	lop3.b32 %r1273, %r930, %r1275, %r1254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1277, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1278, %r1254, %r1277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1281, %r1273, %r1278;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1284, %r941, %r1275, %r1265, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1288, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1289, %r1265, %r1288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1292, %r1284, %r1289;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1295, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1297, %r1295, %r937;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1300, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1302, %r1300, %r948;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1305, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1307, %r1305, %r959;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1310, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1312, %r1310, %r970;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1315, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1317, %r1315, %r983;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1320, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1322, %r1320, %r994;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1325, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1327, %r1325, %r1005;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1330, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1332, %r1330, %r1016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1335, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1337, %r1335, %r1029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1340, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1342, %r1340, %r1040;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1345, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1347, %r1345, %r1051;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1350, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1352, %r1350, %r1062;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1355, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1357, %r1355, %r1075;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1360, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1362, %r1360, %r1086;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1365, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1367, %r1365, %r1097;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1370, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1372, %r1370, %r1108;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1375, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1377, %r1375, %r1121;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1380, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1382, %r1380, %r1132;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1385, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1387, %r1385, %r1143;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1390, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1392, %r1390, %r1154;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1395, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1397, %r1395, %r1167;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1400, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1402, %r1400, %r1178;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1405, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1407, %r1405, %r1189;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1410, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1412, %r1410, %r1200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1415, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1417, %r1415, %r1213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1420, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1422, %r1420, %r1224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1425, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1427, %r1425, %r1235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1430, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1432, %r1430, %r1246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1435, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1437, %r1435, %r1259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1440, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1442, %r1440, %r1270;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1445, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1447, %r1445, %r1281;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1450, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1452, %r1450, %r1292;
	// end inline asm
	// begin inline asm
	mov.b32 %r1460, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1471, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1459, %r16381, -2004318072;
	// begin inline asm
	lop3.b32 %r1457, %r930, %r1459, %r1460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1461, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1462, %r1460, %r1461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1465, %r1457, %r1462;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1468, %r941, %r1459, %r1471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1472, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1473, %r1471, %r1472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1476, %r1468, %r1473;
	// end inline asm
	shr.u32 	%r1481, %r1459, 8;
	// begin inline asm
	lop3.b32 %r1479, %r930, %r1481, %r1460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1483, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1484, %r1460, %r1483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1487, %r1479, %r1484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1490, %r941, %r1481, %r1471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1494, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1495, %r1471, %r1494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1498, %r1490, %r1495;
	// end inline asm
	// begin inline asm
	mov.b32 %r1506, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1517, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1505, %r16382, -2004318072;
	// begin inline asm
	lop3.b32 %r1503, %r930, %r1505, %r1506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1507, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1508, %r1506, %r1507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1511, %r1503, %r1508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1514, %r941, %r1505, %r1517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1518, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1519, %r1517, %r1518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1522, %r1514, %r1519;
	// end inline asm
	shr.u32 	%r1527, %r1505, 8;
	// begin inline asm
	lop3.b32 %r1525, %r930, %r1527, %r1506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1529, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1530, %r1506, %r1529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1533, %r1525, %r1530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1536, %r941, %r1527, %r1517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1540, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1541, %r1517, %r1540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1544, %r1536, %r1541;
	// end inline asm
	// begin inline asm
	mov.b32 %r1552, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1563, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1551, %r16383, -2004318072;
	// begin inline asm
	lop3.b32 %r1549, %r930, %r1551, %r1552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1553, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1554, %r1552, %r1553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1557, %r1549, %r1554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1560, %r941, %r1551, %r1563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1564, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1565, %r1563, %r1564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1568, %r1560, %r1565;
	// end inline asm
	shr.u32 	%r1573, %r1551, 8;
	// begin inline asm
	lop3.b32 %r1571, %r930, %r1573, %r1552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1575, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1576, %r1552, %r1575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1579, %r1571, %r1576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1582, %r941, %r1573, %r1563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1586, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1587, %r1563, %r1586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1590, %r1582, %r1587;
	// end inline asm
	// begin inline asm
	mov.b32 %r1598, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1609, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1597, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r1595, %r930, %r1597, %r1598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1599, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1600, %r1598, %r1599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1603, %r1595, %r1600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1606, %r941, %r1597, %r1609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1610, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1611, %r1609, %r1610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1614, %r1606, %r1611;
	// end inline asm
	shr.u32 	%r1619, %r1597, 8;
	// begin inline asm
	lop3.b32 %r1617, %r930, %r1619, %r1598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1621, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1622, %r1598, %r1621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1625, %r1617, %r1622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1628, %r941, %r1619, %r1609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1632, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1633, %r1609, %r1632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1636, %r1628, %r1633;
	// end inline asm
	// begin inline asm
	mov.b32 %r1644, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1655, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1643, %r16393, -2004318072;
	// begin inline asm
	lop3.b32 %r1641, %r930, %r1643, %r1644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1645, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1646, %r1644, %r1645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1649, %r1641, %r1646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1652, %r941, %r1643, %r1655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1656, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1657, %r1655, %r1656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1660, %r1652, %r1657;
	// end inline asm
	shr.u32 	%r1665, %r1643, 8;
	// begin inline asm
	lop3.b32 %r1663, %r930, %r1665, %r1644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1667, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1668, %r1644, %r1667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1671, %r1663, %r1668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1674, %r941, %r1665, %r1655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1678, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1679, %r1655, %r1678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1682, %r1674, %r1679;
	// end inline asm
	// begin inline asm
	mov.b32 %r1690, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1701, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1689, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r1687, %r930, %r1689, %r1690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1691, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1692, %r1690, %r1691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1695, %r1687, %r1692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1698, %r941, %r1689, %r1701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1702, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1703, %r1701, %r1702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1706, %r1698, %r1703;
	// end inline asm
	shr.u32 	%r1711, %r1689, 8;
	// begin inline asm
	lop3.b32 %r1709, %r930, %r1711, %r1690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1713, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1714, %r1690, %r1713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1717, %r1709, %r1714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1720, %r941, %r1711, %r1701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1724, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1725, %r1701, %r1724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1728, %r1720, %r1725;
	// end inline asm
	// begin inline asm
	mov.b32 %r1736, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1747, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1735, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r1733, %r930, %r1735, %r1736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1737, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1738, %r1736, %r1737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1741, %r1733, %r1738;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1744, %r941, %r1735, %r1747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1748, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1749, %r1747, %r1748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1752, %r1744, %r1749;
	// end inline asm
	shr.u32 	%r1757, %r1735, 8;
	// begin inline asm
	lop3.b32 %r1755, %r930, %r1757, %r1736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1759, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1760, %r1736, %r1759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1763, %r1755, %r1760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1766, %r941, %r1757, %r1747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1770, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1771, %r1747, %r1770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1774, %r1766, %r1771;
	// end inline asm
	// begin inline asm
	mov.b32 %r1782, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1793, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1781, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r1779, %r930, %r1781, %r1782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1783, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1784, %r1782, %r1783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1787, %r1779, %r1784;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1790, %r941, %r1781, %r1793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1794, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1795, %r1793, %r1794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1798, %r1790, %r1795;
	// end inline asm
	shr.u32 	%r1803, %r1781, 8;
	// begin inline asm
	lop3.b32 %r1801, %r930, %r1803, %r1782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1805, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1806, %r1782, %r1805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1809, %r1801, %r1806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1812, %r941, %r1803, %r1793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1816, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1817, %r1793, %r1816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1820, %r1812, %r1817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1823, %r300, %r1465, %r1297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1827, %r300, %r1476, %r1302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1831, %r300, %r1487, %r1307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1835, %r300, %r1498, %r1312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1839, %r300, %r1511, %r1317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1843, %r300, %r1522, %r1322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1847, %r300, %r1533, %r1327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1851, %r300, %r1544, %r1332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1855, %r300, %r1557, %r1337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1859, %r300, %r1568, %r1342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1863, %r300, %r1579, %r1347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1867, %r300, %r1590, %r1352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1871, %r300, %r1603, %r1357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1875, %r300, %r1614, %r1362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1879, %r300, %r1625, %r1367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1883, %r300, %r1636, %r1372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1887, %r318, %r1649, %r1377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1891, %r318, %r1660, %r1382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1895, %r318, %r1671, %r1387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1899, %r318, %r1682, %r1392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1903, %r318, %r1695, %r1397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1907, %r318, %r1706, %r1402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1911, %r318, %r1717, %r1407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1915, %r318, %r1728, %r1412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1919, %r318, %r1741, %r1417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1923, %r318, %r1752, %r1422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1927, %r318, %r1763, %r1427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1931, %r318, %r1774, %r1432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1935, %r318, %r1787, %r1437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1939, %r318, %r1798, %r1442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1943, %r318, %r1809, %r1447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1947, %r318, %r1820, %r1452;
	// end inline asm
	// begin inline asm
	mov.b32 %r1956, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1967, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1955, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r1953, %r930, %r1955, %r1956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1957, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1958, %r1956, %r1957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1961, %r1953, %r1958;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1964, %r941, %r1955, %r1967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1968, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1969, %r1967, %r1968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1972, %r1964, %r1969;
	// end inline asm
	shr.u32 	%r1977, %r1955, 8;
	// begin inline asm
	lop3.b32 %r1975, %r930, %r1977, %r1956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1979, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1980, %r1956, %r1979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1983, %r1975, %r1980;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1986, %r941, %r1977, %r1967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1990, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1991, %r1967, %r1990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1994, %r1986, %r1991;
	// end inline asm
	// begin inline asm
	mov.b32 %r2002, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2013, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2001, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r1999, %r930, %r2001, %r2002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2003, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2004, %r2002, %r2003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2007, %r1999, %r2004;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2010, %r941, %r2001, %r2013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2014, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2015, %r2013, %r2014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2018, %r2010, %r2015;
	// end inline asm
	shr.u32 	%r2023, %r2001, 8;
	// begin inline asm
	lop3.b32 %r2021, %r930, %r2023, %r2002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2025, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2026, %r2002, %r2025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2029, %r2021, %r2026;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2032, %r941, %r2023, %r2013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2036, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2037, %r2013, %r2036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2040, %r2032, %r2037;
	// end inline asm
	// begin inline asm
	mov.b32 %r2048, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2059, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2047, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r2045, %r930, %r2047, %r2048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2049, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2050, %r2048, %r2049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2053, %r2045, %r2050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2056, %r941, %r2047, %r2059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2060, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2061, %r2059, %r2060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2064, %r2056, %r2061;
	// end inline asm
	shr.u32 	%r2069, %r2047, 8;
	// begin inline asm
	lop3.b32 %r2067, %r930, %r2069, %r2048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2071, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2072, %r2048, %r2071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2075, %r2067, %r2072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2078, %r941, %r2069, %r2059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2082, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2083, %r2059, %r2082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2086, %r2078, %r2083;
	// end inline asm
	// begin inline asm
	mov.b32 %r2094, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2105, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2093, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r2091, %r930, %r2093, %r2094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2095, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2096, %r2094, %r2095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2099, %r2091, %r2096;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2102, %r941, %r2093, %r2105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2106, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2107, %r2105, %r2106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2110, %r2102, %r2107;
	// end inline asm
	shr.u32 	%r2115, %r2093, 8;
	// begin inline asm
	lop3.b32 %r2113, %r930, %r2115, %r2094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2117, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2118, %r2094, %r2117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2121, %r2113, %r2118;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2124, %r941, %r2115, %r2105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2128, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2129, %r2105, %r2128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2132, %r2124, %r2129;
	// end inline asm
	// begin inline asm
	mov.b32 %r2140, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2151, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2139, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r2137, %r930, %r2139, %r2140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2141, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2142, %r2140, %r2141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2145, %r2137, %r2142;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2148, %r941, %r2139, %r2151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2152, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2153, %r2151, %r2152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2156, %r2148, %r2153;
	// end inline asm
	shr.u32 	%r2161, %r2139, 8;
	// begin inline asm
	lop3.b32 %r2159, %r930, %r2161, %r2140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2163, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2164, %r2140, %r2163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2167, %r2159, %r2164;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2170, %r941, %r2161, %r2151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2174, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2175, %r2151, %r2174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2178, %r2170, %r2175;
	// end inline asm
	// begin inline asm
	mov.b32 %r2186, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2197, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2185, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r2183, %r930, %r2185, %r2186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2187, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2188, %r2186, %r2187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2191, %r2183, %r2188;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2194, %r941, %r2185, %r2197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2198, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2199, %r2197, %r2198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2202, %r2194, %r2199;
	// end inline asm
	shr.u32 	%r2207, %r2185, 8;
	// begin inline asm
	lop3.b32 %r2205, %r930, %r2207, %r2186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2209, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2210, %r2186, %r2209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2213, %r2205, %r2210;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2216, %r941, %r2207, %r2197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2220, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2221, %r2197, %r2220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2224, %r2216, %r2221;
	// end inline asm
	// begin inline asm
	mov.b32 %r2232, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2243, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2231, %r16399, -2004318072;
	// begin inline asm
	lop3.b32 %r2229, %r930, %r2231, %r2232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2233, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2234, %r2232, %r2233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2237, %r2229, %r2234;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2240, %r941, %r2231, %r2243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2244, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2245, %r2243, %r2244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2248, %r2240, %r2245;
	// end inline asm
	shr.u32 	%r2253, %r2231, 8;
	// begin inline asm
	lop3.b32 %r2251, %r930, %r2253, %r2232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2255, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2256, %r2232, %r2255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2259, %r2251, %r2256;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2262, %r941, %r2253, %r2243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2266, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2267, %r2243, %r2266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2270, %r2262, %r2267;
	// end inline asm
	// begin inline asm
	mov.b32 %r2278, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2289, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2277, %r16400, -2004318072;
	// begin inline asm
	lop3.b32 %r2275, %r930, %r2277, %r2278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2279, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2280, %r2278, %r2279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2283, %r2275, %r2280;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2286, %r941, %r2277, %r2289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2290, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2291, %r2289, %r2290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2294, %r2286, %r2291;
	// end inline asm
	shr.u32 	%r2299, %r2277, 8;
	// begin inline asm
	lop3.b32 %r2297, %r930, %r2299, %r2278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2301, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2302, %r2278, %r2301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2305, %r2297, %r2302;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2308, %r941, %r2299, %r2289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2312, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2313, %r2289, %r2312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2316, %r2308, %r2313;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2319, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2321, %r2319, %r1961, %r1823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2325, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2327, %r2325, %r1972, %r1827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2331, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2333, %r2331, %r1983, %r1831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2337, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2339, %r2337, %r1994, %r1835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2343, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2345, %r2343, %r2007, %r1839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2349, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2351, %r2349, %r2018, %r1843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2355, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2357, %r2355, %r2029, %r1847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2361, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2363, %r2361, %r2040, %r1851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2367, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2369, %r2367, %r2053, %r1855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2373, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2375, %r2373, %r2064, %r1859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2379, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2381, %r2379, %r2075, %r1863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2385, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2387, %r2385, %r2086, %r1867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2391, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2393, %r2391, %r2099, %r1871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2397, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2399, %r2397, %r2110, %r1875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2403, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2405, %r2403, %r2121, %r1879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2409, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2411, %r2409, %r2132, %r1883;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2415, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2417, %r2415, %r2145, %r1887;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2421, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2423, %r2421, %r2156, %r1891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2427, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2429, %r2427, %r2167, %r1895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2433, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2435, %r2433, %r2178, %r1899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2439, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2441, %r2439, %r2191, %r1903;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2445, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2447, %r2445, %r2202, %r1907;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2451, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2453, %r2451, %r2213, %r1911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2457, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2459, %r2457, %r2224, %r1915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2463, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2465, %r2463, %r2237, %r1919;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2469, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2471, %r2469, %r2248, %r1923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2475, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2477, %r2475, %r2259, %r1927;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2481, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2483, %r2481, %r2270, %r1931;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2487, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2489, %r2487, %r2283, %r1935;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2493, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2495, %r2493, %r2294, %r1939;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2499, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2501, %r2499, %r2305, %r1943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2505, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2507, %r2505, %r2316, %r1947;
	// end inline asm
	// begin inline asm
	mov.b32 %r2516, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2527, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2515, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r2513, %r930, %r2515, %r2516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2517, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2518, %r2516, %r2517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2521, %r2513, %r2518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2524, %r941, %r2515, %r2527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2528, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2529, %r2527, %r2528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2532, %r2524, %r2529;
	// end inline asm
	shr.u32 	%r2537, %r2515, 8;
	// begin inline asm
	lop3.b32 %r2535, %r930, %r2537, %r2516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2539, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2540, %r2516, %r2539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2543, %r2535, %r2540;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2546, %r941, %r2537, %r2527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2550, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2551, %r2527, %r2550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2554, %r2546, %r2551;
	// end inline asm
	// begin inline asm
	mov.b32 %r2562, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2573, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2561, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r2559, %r930, %r2561, %r2562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2563, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2564, %r2562, %r2563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2567, %r2559, %r2564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2570, %r941, %r2561, %r2573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2574, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2575, %r2573, %r2574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2578, %r2570, %r2575;
	// end inline asm
	shr.u32 	%r2583, %r2561, 8;
	// begin inline asm
	lop3.b32 %r2581, %r930, %r2583, %r2562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2585, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2586, %r2562, %r2585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2589, %r2581, %r2586;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2592, %r941, %r2583, %r2573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2596, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2597, %r2573, %r2596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2600, %r2592, %r2597;
	// end inline asm
	// begin inline asm
	mov.b32 %r2608, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2619, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2607, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r2605, %r930, %r2607, %r2608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2609, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2610, %r2608, %r2609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2613, %r2605, %r2610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2616, %r941, %r2607, %r2619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2620, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2621, %r2619, %r2620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2624, %r2616, %r2621;
	// end inline asm
	shr.u32 	%r2629, %r2607, 8;
	// begin inline asm
	lop3.b32 %r2627, %r930, %r2629, %r2608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2631, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2632, %r2608, %r2631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2635, %r2627, %r2632;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2638, %r941, %r2629, %r2619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2642, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2643, %r2619, %r2642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2646, %r2638, %r2643;
	// end inline asm
	// begin inline asm
	mov.b32 %r2654, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2665, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2653, %r16392, -2004318072;
	// begin inline asm
	lop3.b32 %r2651, %r930, %r2653, %r2654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2655, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2656, %r2654, %r2655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2659, %r2651, %r2656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2662, %r941, %r2653, %r2665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2666, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2667, %r2665, %r2666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2670, %r2662, %r2667;
	// end inline asm
	shr.u32 	%r2675, %r2653, 8;
	// begin inline asm
	lop3.b32 %r2673, %r930, %r2675, %r2654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2677, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2678, %r2654, %r2677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2681, %r2673, %r2678;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2684, %r941, %r2675, %r2665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2688, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2689, %r2665, %r2688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2692, %r2684, %r2689;
	// end inline asm
	// begin inline asm
	mov.b32 %r2700, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2711, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2699, %r16401, -2004318072;
	// begin inline asm
	lop3.b32 %r2697, %r930, %r2699, %r2700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2701, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2702, %r2700, %r2701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2705, %r2697, %r2702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2708, %r941, %r2699, %r2711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2712, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2713, %r2711, %r2712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2716, %r2708, %r2713;
	// end inline asm
	shr.u32 	%r2721, %r2699, 8;
	// begin inline asm
	lop3.b32 %r2719, %r930, %r2721, %r2700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2723, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2724, %r2700, %r2723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2727, %r2719, %r2724;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2730, %r941, %r2721, %r2711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2734, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2735, %r2711, %r2734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2738, %r2730, %r2735;
	// end inline asm
	// begin inline asm
	mov.b32 %r2746, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2757, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2745, %r16402, -2004318072;
	// begin inline asm
	lop3.b32 %r2743, %r930, %r2745, %r2746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2747, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2748, %r2746, %r2747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2751, %r2743, %r2748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2754, %r941, %r2745, %r2757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2758, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2759, %r2757, %r2758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2762, %r2754, %r2759;
	// end inline asm
	shr.u32 	%r2767, %r2745, 8;
	// begin inline asm
	lop3.b32 %r2765, %r930, %r2767, %r2746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2769, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2770, %r2746, %r2769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2773, %r2765, %r2770;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2776, %r941, %r2767, %r2757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2780, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2781, %r2757, %r2780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2784, %r2776, %r2781;
	// end inline asm
	// begin inline asm
	mov.b32 %r2792, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2803, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2791, %r16403, -2004318072;
	// begin inline asm
	lop3.b32 %r2789, %r930, %r2791, %r2792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2793, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2794, %r2792, %r2793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2797, %r2789, %r2794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2800, %r941, %r2791, %r2803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2804, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2805, %r2803, %r2804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2808, %r2800, %r2805;
	// end inline asm
	shr.u32 	%r2813, %r2791, 8;
	// begin inline asm
	lop3.b32 %r2811, %r930, %r2813, %r2792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2815, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2816, %r2792, %r2815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2819, %r2811, %r2816;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2822, %r941, %r2813, %r2803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2826, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2827, %r2803, %r2826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2830, %r2822, %r2827;
	// end inline asm
	// begin inline asm
	mov.b32 %r2838, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2849, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2837, %r16404, -2004318072;
	// begin inline asm
	lop3.b32 %r2835, %r930, %r2837, %r2838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2839, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2840, %r2838, %r2839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2843, %r2835, %r2840;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2846, %r941, %r2837, %r2849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2850, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2851, %r2849, %r2850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2854, %r2846, %r2851;
	// end inline asm
	shr.u32 	%r2859, %r2837, 8;
	// begin inline asm
	lop3.b32 %r2857, %r930, %r2859, %r2838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2861, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2862, %r2838, %r2861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2865, %r2857, %r2862;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2868, %r941, %r2859, %r2849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2872, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2873, %r2849, %r2872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2876, %r2868, %r2873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3014, %r372, %r2521, %r2321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3011, %r372, %r2532, %r2327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3023, %r372, %r2543, %r2333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3020, %r372, %r2554, %r2339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3032, %r372, %r2567, %r2345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r372, %r2578, %r2351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3041, %r372, %r2589, %r2357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r372, %r2600, %r2363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3050, %r372, %r2613, %r2369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3047, %r372, %r2624, %r2375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3059, %r372, %r2635, %r2381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3056, %r372, %r2646, %r2387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3068, %r372, %r2659, %r2393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3065, %r372, %r2670, %r2399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3077, %r372, %r2681, %r2405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r372, %r2692, %r2411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3086, %r390, %r2705, %r2417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3083, %r390, %r2716, %r2423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3095, %r390, %r2727, %r2429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3092, %r390, %r2738, %r2435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3104, %r390, %r2751, %r2441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3101, %r390, %r2762, %r2447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3113, %r390, %r2773, %r2453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3110, %r390, %r2784, %r2459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3122, %r390, %r2797, %r2465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3119, %r390, %r2808, %r2471;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3131, %r390, %r2819, %r2477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3128, %r390, %r2830, %r2483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3140, %r390, %r2843, %r2489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3137, %r390, %r2854, %r2495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3149, %r390, %r2865, %r2501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3146, %r390, %r2876, %r2507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3007, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3009, %r3007, %r3011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3012, %r454, %r3014, %r3009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3016, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3018, %r3016, %r3020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3021, %r454, %r3023, %r3018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3025, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3027, %r3025, %r3029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3030, %r454, %r3032, %r3027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3034, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3036, %r3034, %r3038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3039, %r454, %r3041, %r3036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3043, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3045, %r3043, %r3047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3048, %r454, %r3050, %r3045;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3052, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3054, %r3052, %r3056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3057, %r454, %r3059, %r3054;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3061, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3063, %r3061, %r3065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3066, %r454, %r3068, %r3063;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3070, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3072, %r3070, %r3074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3075, %r454, %r3077, %r3072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3079, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3081, %r3079, %r3083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3084, %r457, %r3086, %r3081;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3088, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3090, %r3088, %r3092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3093, %r457, %r3095, %r3090;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3097, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3099, %r3097, %r3101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3102, %r457, %r3104, %r3099;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3106, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3108, %r3106, %r3110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3111, %r457, %r3113, %r3108;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3115, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3117, %r3115, %r3119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3120, %r457, %r3122, %r3117;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3124, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3126, %r3124, %r3128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3129, %r457, %r3131, %r3126;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3133, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3135, %r3133, %r3137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3138, %r457, %r3140, %r3135;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3142, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3144, %r3142, %r3146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3147, %r457, %r3149, %r3144;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3151, %r460, %r3014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3154, %r454, %r3011, %r3151;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3158, %r460, %r3023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3161, %r454, %r3020, %r3158;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3165, %r460, %r3032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3168, %r454, %r3029, %r3165;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3172, %r460, %r3041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3175, %r454, %r3038, %r3172;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3179, %r460, %r3050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3182, %r454, %r3047, %r3179;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3186, %r460, %r3059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3189, %r454, %r3056, %r3186;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3193, %r460, %r3068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3196, %r454, %r3065, %r3193;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3200, %r460, %r3077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3203, %r454, %r3074, %r3200;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3207, %r463, %r3086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3210, %r457, %r3083, %r3207;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3214, %r463, %r3095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3217, %r457, %r3092, %r3214;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3221, %r463, %r3104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3224, %r457, %r3101, %r3221;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3228, %r463, %r3113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3231, %r457, %r3110, %r3228;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3235, %r463, %r3122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3238, %r457, %r3119, %r3235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3242, %r463, %r3131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3245, %r457, %r3128, %r3242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3249, %r463, %r3140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3252, %r457, %r3137, %r3249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3256, %r463, %r3149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3259, %r457, %r3146, %r3256;
	// end inline asm
	mov.u32 	%r3271, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3430, %r3427}, {%r509, %r515, %r512, %r518}, {%r3012, %r3154}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3439, %r3436}, {%r509, %r515, %r512, %r518}, {%r3021, %r3161}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3448, %r3445}, {%r509, %r515, %r512, %r518}, {%r3030, %r3168}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3457, %r3454}, {%r509, %r515, %r512, %r518}, {%r3039, %r3175}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3466, %r3463}, {%r509, %r515, %r512, %r518}, {%r3048, %r3182}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3475, %r3472}, {%r509, %r515, %r512, %r518}, {%r3057, %r3189}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3484, %r3481}, {%r509, %r515, %r512, %r518}, {%r3066, %r3196}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3493, %r3490}, {%r509, %r515, %r512, %r518}, {%r3075, %r3203}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3502, %r3499}, {%r509, %r515, %r512, %r518}, {%r3084, %r3210}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3511, %r3508}, {%r509, %r515, %r512, %r518}, {%r3093, %r3217}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3520, %r3517}, {%r509, %r515, %r512, %r518}, {%r3102, %r3224}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3529, %r3526}, {%r509, %r515, %r512, %r518}, {%r3111, %r3231}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3538, %r3535}, {%r509, %r515, %r512, %r518}, {%r3120, %r3238}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3547, %r3544}, {%r509, %r515, %r512, %r518}, {%r3129, %r3245}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3556, %r3553}, {%r509, %r515, %r512, %r518}, {%r3138, %r3252}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3565, %r3562}, {%r509, %r515, %r512, %r518}, {%r3147, %r3259}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3423, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3425, %r3423, %r3427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3428, %r559, %r3430, %r3425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3432, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3434, %r3432, %r3436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3437, %r559, %r3439, %r3434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3441, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3443, %r3441, %r3445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3446, %r559, %r3448, %r3443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3450, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3452, %r3450, %r3454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3455, %r559, %r3457, %r3452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3459, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3461, %r3459, %r3463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3464, %r559, %r3466, %r3461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3468, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3470, %r3468, %r3472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3473, %r559, %r3475, %r3470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3477, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3479, %r3477, %r3481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3482, %r559, %r3484, %r3479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3486, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3488, %r3486, %r3490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3491, %r559, %r3493, %r3488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3495, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3497, %r3495, %r3499;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3500, %r559, %r3502, %r3497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3504, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3506, %r3504, %r3508;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3509, %r559, %r3511, %r3506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3513, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3515, %r3513, %r3517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3518, %r559, %r3520, %r3515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3522, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3524, %r3522, %r3526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3527, %r559, %r3529, %r3524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3531, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3533, %r3531, %r3535;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3536, %r559, %r3538, %r3533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3540, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3542, %r3540, %r3544;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3545, %r559, %r3547, %r3542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3549, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3551, %r3549, %r3553;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3554, %r559, %r3556, %r3551;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3558, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3560, %r3558, %r3562;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3563, %r559, %r3565, %r3560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3567, %r562, %r3430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3570, %r559, %r3427, %r3567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3574, %r562, %r3439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3577, %r559, %r3436, %r3574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3581, %r562, %r3448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3584, %r559, %r3445, %r3581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3588, %r562, %r3457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3591, %r559, %r3454, %r3588;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3595, %r562, %r3466;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3598, %r559, %r3463, %r3595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3602, %r562, %r3475;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3605, %r559, %r3472, %r3602;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3609, %r562, %r3484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3612, %r559, %r3481, %r3609;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3616, %r562, %r3493;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3619, %r559, %r3490, %r3616;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3623, %r562, %r3502;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3626, %r559, %r3499, %r3623;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3630, %r562, %r3511;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3633, %r559, %r3508, %r3630;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3637, %r562, %r3520;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3640, %r559, %r3517, %r3637;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3644, %r562, %r3529;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3647, %r559, %r3526, %r3644;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3651, %r562, %r3538;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3654, %r559, %r3535, %r3651;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3658, %r562, %r3547;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3661, %r559, %r3544, %r3658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3665, %r562, %r3556;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3668, %r559, %r3553, %r3665;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3672, %r562, %r3565;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3675, %r559, %r3562, %r3672;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3968, %r3971}, {%r597, %r603, %r600, %r606}, {%r3428, %r3570}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3974, %r3977}, {%r597, %r603, %r600, %r606}, {%r3437, %r3577}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3980, %r3983}, {%r597, %r603, %r600, %r606}, {%r3446, %r3584}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3986, %r3989}, {%r597, %r603, %r600, %r606}, {%r3455, %r3591}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3992, %r3995}, {%r597, %r603, %r600, %r606}, {%r3464, %r3598}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3998, %r4001}, {%r597, %r603, %r600, %r606}, {%r3473, %r3605}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r4004, %r4007}, {%r597, %r603, %r600, %r606}, {%r3482, %r3612}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r4010, %r4013}, {%r597, %r603, %r600, %r606}, {%r3491, %r3619}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3969, %r3972}, {%r597, %r603, %r600, %r606}, {%r3500, %r3626}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3975, %r3978}, {%r597, %r603, %r600, %r606}, {%r3509, %r3633}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3981, %r3984}, {%r597, %r603, %r600, %r606}, {%r3518, %r3640}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3987, %r3990}, {%r597, %r603, %r600, %r606}, {%r3527, %r3647}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3993, %r3996}, {%r597, %r603, %r600, %r606}, {%r3536, %r3654}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3999, %r4002}, {%r597, %r603, %r600, %r606}, {%r3545, %r3661}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r4005, %r4008}, {%r597, %r603, %r600, %r606}, {%r3554, %r3668}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r4011, %r4014}, {%r597, %r603, %r600, %r606}, {%r3563, %r3675}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3967, %r3968, %r3969;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3970, %r3971, %r3972;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3973, %r3974, %r3975;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3976, %r3977, %r3978;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3979, %r3980, %r3981;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3982, %r3983, %r3984;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3985, %r3986, %r3987;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3988, %r3989, %r3990;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3991, %r3992, %r3993;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3994, %r3995, %r3996;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3997, %r3998, %r3999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4000, %r4001, %r4002;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4003, %r4004, %r4005;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4006, %r4007, %r4008;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4009, %r4010, %r4011;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4012, %r4013, %r4014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4015, %r3968, %r3969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4018, %r3971, %r3972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4021, %r3974, %r3975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4024, %r3977, %r3978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4027, %r3980, %r3981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4030, %r3983, %r3984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4033, %r3986, %r3987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4036, %r3989, %r3990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4039, %r3992, %r3993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4042, %r3995, %r3996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4045, %r3998, %r3999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4048, %r4001, %r4002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4051, %r4004, %r4005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4054, %r4007, %r4008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4057, %r4010, %r4011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4060, %r4013, %r4014;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4063, %r17, %r3967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4066, %r17, %r3970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4069, %r17, %r3973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4072, %r17, %r3976;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4075, %r17, %r3979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4078, %r17, %r3982;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4081, %r17, %r3985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4084, %r17, %r3988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4087, %r17, %r3991;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4090, %r17, %r3994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4093, %r17, %r3997;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4096, %r17, %r4000;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4099, %r17, %r4003;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4102, %r17, %r4006;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4105, %r17, %r4009;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4108, %r17, %r4012;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4111, %r18, %r4015;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4114, %r18, %r4018;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4117, %r18, %r4021;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4120, %r18, %r4024;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4123, %r18, %r4027;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4126, %r18, %r4030;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4129, %r18, %r4033;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4132, %r18, %r4036;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4135, %r18, %r4039;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4138, %r18, %r4042;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4141, %r18, %r4045;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4144, %r18, %r4048;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4147, %r18, %r4051;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4150, %r18, %r4054;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4153, %r18, %r4057;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4156, %r18, %r4060;
	// end inline asm
	// begin inline asm
	mov.b32 %r4159, {%rs2306, %rs2306};
	// end inline asm
	mov.u16 	%rs407, 18176;
	// begin inline asm
	mov.b32 %r4160, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4161, %r4063, %r4159;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4164, %r4161, %r4160;
	// end inline asm
	// begin inline asm
	mov.b32 %r4167, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4168, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4169, %r4066, %r4167;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4172, %r4169, %r4168;
	// end inline asm
	// begin inline asm
	mov.b32 %r4175, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4176, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4177, %r4069, %r4175;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4180, %r4177, %r4176;
	// end inline asm
	// begin inline asm
	mov.b32 %r4183, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4184, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4185, %r4072, %r4183;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4188, %r4185, %r4184;
	// end inline asm
	// begin inline asm
	mov.b32 %r4191, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4192, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4193, %r4075, %r4191;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4196, %r4193, %r4192;
	// end inline asm
	// begin inline asm
	mov.b32 %r4199, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4200, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4201, %r4078, %r4199;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4204, %r4201, %r4200;
	// end inline asm
	// begin inline asm
	mov.b32 %r4207, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4208, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4209, %r4081, %r4207;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4212, %r4209, %r4208;
	// end inline asm
	// begin inline asm
	mov.b32 %r4215, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4216, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4217, %r4084, %r4215;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4220, %r4217, %r4216;
	// end inline asm
	// begin inline asm
	mov.b32 %r4223, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4225, %r4087, %r4223;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4228, %r4225, %r4224;
	// end inline asm
	// begin inline asm
	mov.b32 %r4231, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4232, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4233, %r4090, %r4231;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4236, %r4233, %r4232;
	// end inline asm
	// begin inline asm
	mov.b32 %r4239, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4240, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4241, %r4093, %r4239;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4244, %r4241, %r4240;
	// end inline asm
	// begin inline asm
	mov.b32 %r4247, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4248, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4249, %r4096, %r4247;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4252, %r4249, %r4248;
	// end inline asm
	// begin inline asm
	mov.b32 %r4255, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4256, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4257, %r4099, %r4255;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4260, %r4257, %r4256;
	// end inline asm
	// begin inline asm
	mov.b32 %r4263, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4264, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4265, %r4102, %r4263;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4268, %r4265, %r4264;
	// end inline asm
	// begin inline asm
	mov.b32 %r4271, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4272, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4273, %r4105, %r4271;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4276, %r4273, %r4272;
	// end inline asm
	// begin inline asm
	mov.b32 %r4279, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4280, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4281, %r4108, %r4279;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4284, %r4281, %r4280;
	// end inline asm
	// begin inline asm
	mov.b32 %r4287, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4288, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4289, %r4111, %r4287;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4292, %r4289, %r4288;
	// end inline asm
	// begin inline asm
	mov.b32 %r4295, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4296, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4297, %r4114, %r4295;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4300, %r4297, %r4296;
	// end inline asm
	// begin inline asm
	mov.b32 %r4303, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4304, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4305, %r4117, %r4303;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4308, %r4305, %r4304;
	// end inline asm
	// begin inline asm
	mov.b32 %r4311, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4312, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4313, %r4120, %r4311;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4316, %r4313, %r4312;
	// end inline asm
	// begin inline asm
	mov.b32 %r4319, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4320, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4321, %r4123, %r4319;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4324, %r4321, %r4320;
	// end inline asm
	// begin inline asm
	mov.b32 %r4327, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4328, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4329, %r4126, %r4327;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4332, %r4329, %r4328;
	// end inline asm
	// begin inline asm
	mov.b32 %r4335, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4336, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4337, %r4129, %r4335;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4340, %r4337, %r4336;
	// end inline asm
	// begin inline asm
	mov.b32 %r4343, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4344, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4345, %r4132, %r4343;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4348, %r4345, %r4344;
	// end inline asm
	// begin inline asm
	mov.b32 %r4351, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4352, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4353, %r4135, %r4351;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4356, %r4353, %r4352;
	// end inline asm
	// begin inline asm
	mov.b32 %r4359, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4360, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4361, %r4138, %r4359;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4364, %r4361, %r4360;
	// end inline asm
	// begin inline asm
	mov.b32 %r4367, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4368, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4369, %r4141, %r4367;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4372, %r4369, %r4368;
	// end inline asm
	// begin inline asm
	mov.b32 %r4375, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4376, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4377, %r4144, %r4375;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4380, %r4377, %r4376;
	// end inline asm
	// begin inline asm
	mov.b32 %r4383, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4384, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4385, %r4147, %r4383;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4388, %r4385, %r4384;
	// end inline asm
	// begin inline asm
	mov.b32 %r4391, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4392, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4393, %r4150, %r4391;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4396, %r4393, %r4392;
	// end inline asm
	// begin inline asm
	mov.b32 %r4399, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4400, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4401, %r4153, %r4399;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4404, %r4401, %r4400;
	// end inline asm
	// begin inline asm
	mov.b32 %r4407, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4408, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4409, %r4156, %r4407;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4412, %r4409, %r4408;
	// end inline asm
	// begin inline asm
	mov.b32 %r4418, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4416, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4417, %r4418, %r4416;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4420, %r4164, %r4417;
	// end inline asm
	// begin inline asm
	mov.b32 %r4423, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4424, %r4418, %r4423;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4427, %r4172, %r4424;
	// end inline asm
	// begin inline asm
	mov.b32 %r4430, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4431, %r4418, %r4430;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4434, %r4180, %r4431;
	// end inline asm
	// begin inline asm
	mov.b32 %r4437, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4438, %r4418, %r4437;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4441, %r4188, %r4438;
	// end inline asm
	mov.u32 	%r4447, 25152;
	// begin inline asm
	prmt.b32 %r4444, %r4420, %r4434, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4448, %r4427, %r4441, %r4447;
	// end inline asm
	shl.b32 	%r4455, %r4448, 4;
	mov.u32 	%r4453, 252645135;
	// begin inline asm
	lop3.b32 %r4452, %r4453, %r4444, %r4455, 202;
	// end inline asm
	xor.b32  	%r16199, %r4452, -2004318072;
	// begin inline asm
	mov.b32 %r4459, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4457, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4458, %r4459, %r4457;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4461, %r4196, %r4458;
	// end inline asm
	// begin inline asm
	mov.b32 %r4464, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4465, %r4459, %r4464;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4468, %r4204, %r4465;
	// end inline asm
	// begin inline asm
	mov.b32 %r4471, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4472, %r4459, %r4471;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4475, %r4212, %r4472;
	// end inline asm
	// begin inline asm
	mov.b32 %r4478, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4479, %r4459, %r4478;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4482, %r4220, %r4479;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4485, %r4461, %r4475, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4489, %r4468, %r4482, %r4447;
	// end inline asm
	shl.b32 	%r4496, %r4489, 4;
	// begin inline asm
	lop3.b32 %r4493, %r4453, %r4485, %r4496, 202;
	// end inline asm
	xor.b32  	%r16200, %r4493, -2004318072;
	// begin inline asm
	mov.b32 %r4500, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4498, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4499, %r4500, %r4498;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4502, %r4228, %r4499;
	// end inline asm
	// begin inline asm
	mov.b32 %r4505, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4506, %r4500, %r4505;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4509, %r4236, %r4506;
	// end inline asm
	// begin inline asm
	mov.b32 %r4512, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4513, %r4500, %r4512;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4516, %r4244, %r4513;
	// end inline asm
	// begin inline asm
	mov.b32 %r4519, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4520, %r4500, %r4519;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4523, %r4252, %r4520;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4526, %r4502, %r4516, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4530, %r4509, %r4523, %r4447;
	// end inline asm
	shl.b32 	%r4537, %r4530, 4;
	// begin inline asm
	lop3.b32 %r4534, %r4453, %r4526, %r4537, 202;
	// end inline asm
	xor.b32  	%r16201, %r4534, -2004318072;
	// begin inline asm
	mov.b32 %r4541, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4539, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4540, %r4541, %r4539;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4543, %r4260, %r4540;
	// end inline asm
	// begin inline asm
	mov.b32 %r4546, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4547, %r4541, %r4546;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4550, %r4268, %r4547;
	// end inline asm
	// begin inline asm
	mov.b32 %r4553, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4554, %r4541, %r4553;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4557, %r4276, %r4554;
	// end inline asm
	// begin inline asm
	mov.b32 %r4560, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4561, %r4541, %r4560;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4564, %r4284, %r4561;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4567, %r4543, %r4557, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4571, %r4550, %r4564, %r4447;
	// end inline asm
	shl.b32 	%r4578, %r4571, 4;
	// begin inline asm
	lop3.b32 %r4575, %r4453, %r4567, %r4578, 202;
	// end inline asm
	xor.b32  	%r16202, %r4575, -2004318072;
	// begin inline asm
	mov.b32 %r4582, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4580, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4581, %r4582, %r4580;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4584, %r4292, %r4581;
	// end inline asm
	// begin inline asm
	mov.b32 %r4587, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4588, %r4582, %r4587;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4591, %r4300, %r4588;
	// end inline asm
	// begin inline asm
	mov.b32 %r4594, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4595, %r4582, %r4594;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4598, %r4308, %r4595;
	// end inline asm
	// begin inline asm
	mov.b32 %r4601, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4602, %r4582, %r4601;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4605, %r4316, %r4602;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4608, %r4584, %r4598, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4612, %r4591, %r4605, %r4447;
	// end inline asm
	shl.b32 	%r4619, %r4612, 4;
	// begin inline asm
	lop3.b32 %r4616, %r4453, %r4608, %r4619, 202;
	// end inline asm
	xor.b32  	%r16203, %r4616, -2004318072;
	// begin inline asm
	mov.b32 %r4623, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4621, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4622, %r4623, %r4621;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4625, %r4324, %r4622;
	// end inline asm
	// begin inline asm
	mov.b32 %r4628, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4629, %r4623, %r4628;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4632, %r4332, %r4629;
	// end inline asm
	// begin inline asm
	mov.b32 %r4635, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4636, %r4623, %r4635;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4639, %r4340, %r4636;
	// end inline asm
	// begin inline asm
	mov.b32 %r4642, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4643, %r4623, %r4642;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4646, %r4348, %r4643;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4649, %r4625, %r4639, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4653, %r4632, %r4646, %r4447;
	// end inline asm
	shl.b32 	%r4660, %r4653, 4;
	// begin inline asm
	lop3.b32 %r4657, %r4453, %r4649, %r4660, 202;
	// end inline asm
	xor.b32  	%r16204, %r4657, -2004318072;
	// begin inline asm
	mov.b32 %r4664, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4662, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4663, %r4664, %r4662;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4666, %r4356, %r4663;
	// end inline asm
	// begin inline asm
	mov.b32 %r4669, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4670, %r4664, %r4669;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4673, %r4364, %r4670;
	// end inline asm
	// begin inline asm
	mov.b32 %r4676, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4677, %r4664, %r4676;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4680, %r4372, %r4677;
	// end inline asm
	// begin inline asm
	mov.b32 %r4683, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4684, %r4664, %r4683;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4687, %r4380, %r4684;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4690, %r4666, %r4680, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4694, %r4673, %r4687, %r4447;
	// end inline asm
	shl.b32 	%r4701, %r4694, 4;
	// begin inline asm
	lop3.b32 %r4698, %r4453, %r4690, %r4701, 202;
	// end inline asm
	xor.b32  	%r16205, %r4698, -2004318072;
	// begin inline asm
	mov.b32 %r4705, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4703, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4704, %r4705, %r4703;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4707, %r4388, %r4704;
	// end inline asm
	// begin inline asm
	mov.b32 %r4710, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4711, %r4705, %r4710;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4714, %r4396, %r4711;
	// end inline asm
	// begin inline asm
	mov.b32 %r4717, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4718, %r4705, %r4717;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4721, %r4404, %r4718;
	// end inline asm
	// begin inline asm
	mov.b32 %r4724, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4725, %r4705, %r4724;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4728, %r4412, %r4725;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4731, %r4707, %r4721, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4735, %r4714, %r4728, %r4447;
	// end inline asm
	shl.b32 	%r4742, %r4735, 4;
	// begin inline asm
	lop3.b32 %r4739, %r4453, %r4731, %r4742, 202;
	// end inline asm
	xor.b32  	%r16206, %r4739, -2004318072;
	add.s64 	%rd115, %rd171, %rd33;
	st.shared.u32 	[%rd115], %r16199;
	add.s64 	%rd116, %rd171, %rd31;
	st.shared.u32 	[%rd116], %r16200;
	add.s64 	%rd117, %rd171, %rd29;
	st.shared.u32 	[%rd117], %r16201;
	add.s64 	%rd118, %rd171, %rd27;
	st.shared.u32 	[%rd118], %r16202;
	add.s64 	%rd119, %rd171, %rd32;
	st.shared.u32 	[%rd119], %r16203;
	add.s64 	%rd120, %rd171, %rd30;
	st.shared.u32 	[%rd120], %r16204;
	add.s64 	%rd121, %rd171, %rd28;
	st.shared.u32 	[%rd121], %r16205;
	add.s64 	%rd122, %rd171, %rd26;
	st.shared.u32 	[%rd122], %r16206;
	ld.shared.u32 	%r16381, [%rd107];
	ld.shared.u32 	%r16382, [%rd108];
	ld.shared.u32 	%r16383, [%rd109];
	ld.shared.u32 	%r16384, [%rd110];
	ld.shared.u32 	%r16393, [%rd111];
	ld.shared.u32 	%r16394, [%rd112];
	ld.shared.u32 	%r16395, [%rd113];
	ld.shared.u32 	%r16396, [%rd114];
	// begin inline asm
	mov.b32 %r4748, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4759, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4747, %r16381, -2004318072;
	// begin inline asm
	lop3.b32 %r4745, %r930, %r4747, %r4748, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4749, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4750, %r4748, %r4749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4753, %r4745, %r4750;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4756, %r941, %r4747, %r4759, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4760, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4761, %r4759, %r4760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4764, %r4756, %r4761;
	// end inline asm
	shr.u32 	%r4769, %r4747, 8;
	// begin inline asm
	lop3.b32 %r4767, %r930, %r4769, %r4748, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4771, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4772, %r4748, %r4771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4775, %r4767, %r4772;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4778, %r941, %r4769, %r4759, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4782, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4783, %r4759, %r4782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4786, %r4778, %r4783;
	// end inline asm
	// begin inline asm
	mov.b32 %r4794, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4805, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4793, %r16382, -2004318072;
	// begin inline asm
	lop3.b32 %r4791, %r930, %r4793, %r4794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4795, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4796, %r4794, %r4795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4799, %r4791, %r4796;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4802, %r941, %r4793, %r4805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4806, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4807, %r4805, %r4806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4810, %r4802, %r4807;
	// end inline asm
	shr.u32 	%r4815, %r4793, 8;
	// begin inline asm
	lop3.b32 %r4813, %r930, %r4815, %r4794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4817, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4818, %r4794, %r4817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4821, %r4813, %r4818;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4824, %r941, %r4815, %r4805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4828, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4829, %r4805, %r4828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4832, %r4824, %r4829;
	// end inline asm
	// begin inline asm
	mov.b32 %r4840, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4851, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4839, %r16383, -2004318072;
	// begin inline asm
	lop3.b32 %r4837, %r930, %r4839, %r4840, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4841, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4842, %r4840, %r4841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4845, %r4837, %r4842;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4848, %r941, %r4839, %r4851, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4852, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4853, %r4851, %r4852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4856, %r4848, %r4853;
	// end inline asm
	shr.u32 	%r4861, %r4839, 8;
	// begin inline asm
	lop3.b32 %r4859, %r930, %r4861, %r4840, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4863, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4864, %r4840, %r4863;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4867, %r4859, %r4864;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4870, %r941, %r4861, %r4851, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4874, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4875, %r4851, %r4874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4878, %r4870, %r4875;
	// end inline asm
	// begin inline asm
	mov.b32 %r4886, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4897, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4885, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r4883, %r930, %r4885, %r4886, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4887, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4888, %r4886, %r4887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4891, %r4883, %r4888;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4894, %r941, %r4885, %r4897, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4898, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4899, %r4897, %r4898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4902, %r4894, %r4899;
	// end inline asm
	shr.u32 	%r4907, %r4885, 8;
	// begin inline asm
	lop3.b32 %r4905, %r930, %r4907, %r4886, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4909, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4910, %r4886, %r4909;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4913, %r4905, %r4910;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4916, %r941, %r4907, %r4897, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4920, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4921, %r4897, %r4920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4924, %r4916, %r4921;
	// end inline asm
	// begin inline asm
	mov.b32 %r4932, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4943, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4931, %r16393, -2004318072;
	// begin inline asm
	lop3.b32 %r4929, %r930, %r4931, %r4932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4933, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4934, %r4932, %r4933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4937, %r4929, %r4934;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4940, %r941, %r4931, %r4943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4944, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4945, %r4943, %r4944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4948, %r4940, %r4945;
	// end inline asm
	shr.u32 	%r4953, %r4931, 8;
	// begin inline asm
	lop3.b32 %r4951, %r930, %r4953, %r4932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4955, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4956, %r4932, %r4955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4959, %r4951, %r4956;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4962, %r941, %r4953, %r4943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4966, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4967, %r4943, %r4966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4970, %r4962, %r4967;
	// end inline asm
	// begin inline asm
	mov.b32 %r4978, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4989, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4977, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r4975, %r930, %r4977, %r4978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4979, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4980, %r4978, %r4979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4983, %r4975, %r4980;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4986, %r941, %r4977, %r4989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4990, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4991, %r4989, %r4990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4994, %r4986, %r4991;
	// end inline asm
	shr.u32 	%r4999, %r4977, 8;
	// begin inline asm
	lop3.b32 %r4997, %r930, %r4999, %r4978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5001, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5002, %r4978, %r5001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5005, %r4997, %r5002;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5008, %r941, %r4999, %r4989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5012, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5013, %r4989, %r5012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5016, %r5008, %r5013;
	// end inline asm
	// begin inline asm
	mov.b32 %r5024, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5035, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r5023, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r5021, %r930, %r5023, %r5024, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5025, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5026, %r5024, %r5025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5029, %r5021, %r5026;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5032, %r941, %r5023, %r5035, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5036, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5037, %r5035, %r5036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5040, %r5032, %r5037;
	// end inline asm
	shr.u32 	%r5045, %r5023, 8;
	// begin inline asm
	lop3.b32 %r5043, %r930, %r5045, %r5024, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5047, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5048, %r5024, %r5047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5051, %r5043, %r5048;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5054, %r941, %r5045, %r5035, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5058, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5059, %r5035, %r5058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5062, %r5054, %r5059;
	// end inline asm
	// begin inline asm
	mov.b32 %r5070, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5081, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r5069, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r5067, %r930, %r5069, %r5070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5071, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5072, %r5070, %r5071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5075, %r5067, %r5072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5078, %r941, %r5069, %r5081, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5082, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5083, %r5081, %r5082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5086, %r5078, %r5083;
	// end inline asm
	shr.u32 	%r5091, %r5069, 8;
	// begin inline asm
	lop3.b32 %r5089, %r930, %r5091, %r5070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5093, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5094, %r5070, %r5093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5097, %r5089, %r5094;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5100, %r941, %r5091, %r5081, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5104, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5105, %r5081, %r5104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5108, %r5100, %r5105;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5111, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5113, %r5111, %r4753;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5116, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5118, %r5116, %r4764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5121, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5123, %r5121, %r4775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5126, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5128, %r5126, %r4786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5131, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5133, %r5131, %r4799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5136, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5138, %r5136, %r4810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5141, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5143, %r5141, %r4821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5146, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5148, %r5146, %r4832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5151, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5153, %r5151, %r4845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5156, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5158, %r5156, %r4856;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5161, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5163, %r5161, %r4867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5166, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5168, %r5166, %r4878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5171, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5173, %r5171, %r4891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5176, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5178, %r5176, %r4902;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5181, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5183, %r5181, %r4913;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5186, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5188, %r5186, %r4924;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5191, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5193, %r5191, %r4937;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5196, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5198, %r5196, %r4948;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5201, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5203, %r5201, %r4959;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5206, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5208, %r5206, %r4970;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5211, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5213, %r5211, %r4983;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5216, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5218, %r5216, %r4994;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5221, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5223, %r5221, %r5005;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5226, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5228, %r5226, %r5016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5231, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5233, %r5231, %r5029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5236, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5238, %r5236, %r5040;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5241, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5243, %r5241, %r5051;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5246, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5248, %r5246, %r5062;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5251, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5253, %r5251, %r5075;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5256, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5258, %r5256, %r5086;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5261, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5263, %r5261, %r5097;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5266, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5268, %r5266, %r5108;
	// end inline asm
	// begin inline asm
	mov.b32 %r5276, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5287, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5273, %r930, %r1955, %r5276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5277, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5278, %r5276, %r5277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5281, %r5273, %r5278;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5284, %r941, %r1955, %r5287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5288, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5289, %r5287, %r5288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5292, %r5284, %r5289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5295, %r930, %r1977, %r5276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5299, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5300, %r5276, %r5299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5303, %r5295, %r5300;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5306, %r941, %r1977, %r5287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5310, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5311, %r5287, %r5310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5314, %r5306, %r5311;
	// end inline asm
	// begin inline asm
	mov.b32 %r5322, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5333, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5319, %r930, %r2001, %r5322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5323, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5324, %r5322, %r5323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5327, %r5319, %r5324;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5330, %r941, %r2001, %r5333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5334, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5335, %r5333, %r5334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5338, %r5330, %r5335;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5341, %r930, %r2023, %r5322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5345, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5346, %r5322, %r5345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5349, %r5341, %r5346;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5352, %r941, %r2023, %r5333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5356, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5357, %r5333, %r5356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5360, %r5352, %r5357;
	// end inline asm
	// begin inline asm
	mov.b32 %r5368, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5379, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5365, %r930, %r2047, %r5368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5369, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5370, %r5368, %r5369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5373, %r5365, %r5370;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5376, %r941, %r2047, %r5379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5380, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5381, %r5379, %r5380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5384, %r5376, %r5381;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5387, %r930, %r2069, %r5368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5391, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5392, %r5368, %r5391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5395, %r5387, %r5392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5398, %r941, %r2069, %r5379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5402, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5403, %r5379, %r5402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5406, %r5398, %r5403;
	// end inline asm
	// begin inline asm
	mov.b32 %r5414, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5425, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5411, %r930, %r2093, %r5414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5415, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5416, %r5414, %r5415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5419, %r5411, %r5416;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5422, %r941, %r2093, %r5425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5426, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5427, %r5425, %r5426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5430, %r5422, %r5427;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5433, %r930, %r2115, %r5414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5437, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5438, %r5414, %r5437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5441, %r5433, %r5438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5444, %r941, %r2115, %r5425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5448, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5449, %r5425, %r5448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5452, %r5444, %r5449;
	// end inline asm
	// begin inline asm
	mov.b32 %r5460, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5471, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5457, %r930, %r2139, %r5460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5461, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5462, %r5460, %r5461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5465, %r5457, %r5462;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5468, %r941, %r2139, %r5471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5472, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5473, %r5471, %r5472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5476, %r5468, %r5473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5479, %r930, %r2161, %r5460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5483, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5484, %r5460, %r5483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5487, %r5479, %r5484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5490, %r941, %r2161, %r5471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5494, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5495, %r5471, %r5494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5498, %r5490, %r5495;
	// end inline asm
	// begin inline asm
	mov.b32 %r5506, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5517, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5503, %r930, %r2185, %r5506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5507, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5508, %r5506, %r5507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5511, %r5503, %r5508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5514, %r941, %r2185, %r5517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5518, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5519, %r5517, %r5518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5522, %r5514, %r5519;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5525, %r930, %r2207, %r5506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5529, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5530, %r5506, %r5529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5533, %r5525, %r5530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5536, %r941, %r2207, %r5517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5540, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5541, %r5517, %r5540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5544, %r5536, %r5541;
	// end inline asm
	// begin inline asm
	mov.b32 %r5552, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5563, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5549, %r930, %r2231, %r5552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5553, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5554, %r5552, %r5553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5557, %r5549, %r5554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5560, %r941, %r2231, %r5563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5564, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5565, %r5563, %r5564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5568, %r5560, %r5565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5571, %r930, %r2253, %r5552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5575, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5576, %r5552, %r5575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5579, %r5571, %r5576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5582, %r941, %r2253, %r5563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5586, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5587, %r5563, %r5586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5590, %r5582, %r5587;
	// end inline asm
	// begin inline asm
	mov.b32 %r5598, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5609, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5595, %r930, %r2277, %r5598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5599, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5600, %r5598, %r5599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5603, %r5595, %r5600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5606, %r941, %r2277, %r5609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5610, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5611, %r5609, %r5610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5614, %r5606, %r5611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5617, %r930, %r2299, %r5598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5621, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5622, %r5598, %r5621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5625, %r5617, %r5622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5628, %r941, %r2299, %r5609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5632, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5633, %r5609, %r5632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5636, %r5628, %r5633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5639, %r300, %r5281, %r5113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5643, %r300, %r5292, %r5118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5647, %r300, %r5303, %r5123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5651, %r300, %r5314, %r5128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5655, %r300, %r5327, %r5133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5659, %r300, %r5338, %r5138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5663, %r300, %r5349, %r5143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5667, %r300, %r5360, %r5148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5671, %r300, %r5373, %r5153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5675, %r300, %r5384, %r5158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5679, %r300, %r5395, %r5163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5683, %r300, %r5406, %r5168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5687, %r300, %r5419, %r5173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5691, %r300, %r5430, %r5178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5695, %r300, %r5441, %r5183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5699, %r300, %r5452, %r5188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5703, %r318, %r5465, %r5193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5707, %r318, %r5476, %r5198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5711, %r318, %r5487, %r5203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5715, %r318, %r5498, %r5208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5719, %r318, %r5511, %r5213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5723, %r318, %r5522, %r5218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5727, %r318, %r5533, %r5223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5731, %r318, %r5544, %r5228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5735, %r318, %r5557, %r5233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5739, %r318, %r5568, %r5238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5743, %r318, %r5579, %r5243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5747, %r318, %r5590, %r5248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5751, %r318, %r5603, %r5253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5755, %r318, %r5614, %r5258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5759, %r318, %r5625, %r5263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5763, %r318, %r5636, %r5268;
	// end inline asm
	// begin inline asm
	mov.b32 %r5772, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5783, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5769, %r930, %r2515, %r5772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5773, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5774, %r5772, %r5773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5777, %r5769, %r5774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5780, %r941, %r2515, %r5783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5784, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5785, %r5783, %r5784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5788, %r5780, %r5785;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5791, %r930, %r2537, %r5772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5795, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5796, %r5772, %r5795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5799, %r5791, %r5796;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5802, %r941, %r2537, %r5783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5806, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5807, %r5783, %r5806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5810, %r5802, %r5807;
	// end inline asm
	// begin inline asm
	mov.b32 %r5818, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5829, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5815, %r930, %r2561, %r5818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5819, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5820, %r5818, %r5819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5823, %r5815, %r5820;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5826, %r941, %r2561, %r5829, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5830, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5831, %r5829, %r5830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5834, %r5826, %r5831;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5837, %r930, %r2583, %r5818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5841, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5842, %r5818, %r5841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5845, %r5837, %r5842;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5848, %r941, %r2583, %r5829, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5852, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5853, %r5829, %r5852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5856, %r5848, %r5853;
	// end inline asm
	// begin inline asm
	mov.b32 %r5864, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5875, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5861, %r930, %r2607, %r5864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5865, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5866, %r5864, %r5865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5869, %r5861, %r5866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5872, %r941, %r2607, %r5875, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5876, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5877, %r5875, %r5876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5880, %r5872, %r5877;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5883, %r930, %r2629, %r5864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5887, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5888, %r5864, %r5887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5891, %r5883, %r5888;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5894, %r941, %r2629, %r5875, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5898, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5899, %r5875, %r5898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5902, %r5894, %r5899;
	// end inline asm
	// begin inline asm
	mov.b32 %r5910, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5921, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5907, %r930, %r2653, %r5910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5911, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5912, %r5910, %r5911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5915, %r5907, %r5912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5918, %r941, %r2653, %r5921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5922, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5923, %r5921, %r5922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5926, %r5918, %r5923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5929, %r930, %r2675, %r5910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5933, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5934, %r5910, %r5933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5937, %r5929, %r5934;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5940, %r941, %r2675, %r5921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5944, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5945, %r5921, %r5944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5948, %r5940, %r5945;
	// end inline asm
	// begin inline asm
	mov.b32 %r5956, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5967, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5953, %r930, %r2699, %r5956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5957, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5958, %r5956, %r5957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5961, %r5953, %r5958;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5964, %r941, %r2699, %r5967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5968, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5969, %r5967, %r5968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5972, %r5964, %r5969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5975, %r930, %r2721, %r5956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5979, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5980, %r5956, %r5979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5983, %r5975, %r5980;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5986, %r941, %r2721, %r5967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5990, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5991, %r5967, %r5990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5994, %r5986, %r5991;
	// end inline asm
	// begin inline asm
	mov.b32 %r6002, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6013, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5999, %r930, %r2745, %r6002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6003, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6004, %r6002, %r6003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6007, %r5999, %r6004;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6010, %r941, %r2745, %r6013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6014, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6015, %r6013, %r6014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6018, %r6010, %r6015;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6021, %r930, %r2767, %r6002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6025, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6026, %r6002, %r6025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6029, %r6021, %r6026;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6032, %r941, %r2767, %r6013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6036, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6037, %r6013, %r6036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6040, %r6032, %r6037;
	// end inline asm
	// begin inline asm
	mov.b32 %r6048, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6059, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6045, %r930, %r2791, %r6048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6049, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6050, %r6048, %r6049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6053, %r6045, %r6050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6056, %r941, %r2791, %r6059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6060, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6061, %r6059, %r6060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6064, %r6056, %r6061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6067, %r930, %r2813, %r6048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6071, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6072, %r6048, %r6071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6075, %r6067, %r6072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6078, %r941, %r2813, %r6059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6082, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6083, %r6059, %r6082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6086, %r6078, %r6083;
	// end inline asm
	// begin inline asm
	mov.b32 %r6094, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6105, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6091, %r930, %r2837, %r6094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6095, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6096, %r6094, %r6095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6099, %r6091, %r6096;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6102, %r941, %r2837, %r6105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6106, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6107, %r6105, %r6106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6110, %r6102, %r6107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6113, %r930, %r2859, %r6094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6117, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6118, %r6094, %r6117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6121, %r6113, %r6118;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6124, %r941, %r2859, %r6105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6128, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6129, %r6105, %r6128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6132, %r6124, %r6129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6135, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6137, %r6135, %r5777, %r5639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6141, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6143, %r6141, %r5788, %r5643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6147, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6149, %r6147, %r5799, %r5647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6153, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6155, %r6153, %r5810, %r5651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6159, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6161, %r6159, %r5823, %r5655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6165, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6167, %r6165, %r5834, %r5659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6171, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6173, %r6171, %r5845, %r5663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6177, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6179, %r6177, %r5856, %r5667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6183, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6185, %r6183, %r5869, %r5671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6189, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6191, %r6189, %r5880, %r5675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6195, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6197, %r6195, %r5891, %r5679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6201, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6203, %r6201, %r5902, %r5683;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6207, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6209, %r6207, %r5915, %r5687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6213, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6215, %r6213, %r5926, %r5691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6219, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6221, %r6219, %r5937, %r5695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6225, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6227, %r6225, %r5948, %r5699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6231, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6233, %r6231, %r5961, %r5703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6237, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6239, %r6237, %r5972, %r5707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6243, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6245, %r6243, %r5983, %r5711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6249, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6251, %r6249, %r5994, %r5715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6255, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6257, %r6255, %r6007, %r5719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6261, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6263, %r6261, %r6018, %r5723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6267, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6269, %r6267, %r6029, %r5727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6273, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6275, %r6273, %r6040, %r5731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6279, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6281, %r6279, %r6053, %r5735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6285, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6287, %r6285, %r6064, %r5739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6291, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6293, %r6291, %r6075, %r5743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6297, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6299, %r6297, %r6086, %r5747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6303, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6305, %r6303, %r6099, %r5751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6309, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6311, %r6309, %r6110, %r5755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6315, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6317, %r6315, %r6121, %r5759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6321, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6323, %r6321, %r6132, %r5763;
	// end inline asm
	// begin inline asm
	mov.b32 %r6332, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6343, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6329, %r930, %r931, %r6332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6333, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6334, %r6332, %r6333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6337, %r6329, %r6334;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6340, %r941, %r931, %r6343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6344, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6345, %r6343, %r6344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6348, %r6340, %r6345;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6351, %r930, %r953, %r6332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6355, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6356, %r6332, %r6355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6359, %r6351, %r6356;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6362, %r941, %r953, %r6343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6366, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6367, %r6343, %r6366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6370, %r6362, %r6367;
	// end inline asm
	// begin inline asm
	mov.b32 %r6378, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6389, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6375, %r930, %r977, %r6378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6379, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6380, %r6378, %r6379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6383, %r6375, %r6380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6386, %r941, %r977, %r6389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6390, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6391, %r6389, %r6390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6394, %r6386, %r6391;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6397, %r930, %r999, %r6378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6401, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6402, %r6378, %r6401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6405, %r6397, %r6402;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6408, %r941, %r999, %r6389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6412, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6413, %r6389, %r6412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6416, %r6408, %r6413;
	// end inline asm
	// begin inline asm
	mov.b32 %r6424, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6435, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6421, %r930, %r1023, %r6424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6425, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6426, %r6424, %r6425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6429, %r6421, %r6426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6432, %r941, %r1023, %r6435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6436, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6437, %r6435, %r6436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6440, %r6432, %r6437;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6443, %r930, %r1045, %r6424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6447, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6448, %r6424, %r6447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6451, %r6443, %r6448;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6454, %r941, %r1045, %r6435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6458, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6459, %r6435, %r6458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6462, %r6454, %r6459;
	// end inline asm
	// begin inline asm
	mov.b32 %r6470, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6481, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6467, %r930, %r1069, %r6470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6471, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6472, %r6470, %r6471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6475, %r6467, %r6472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6478, %r941, %r1069, %r6481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6482, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6483, %r6481, %r6482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6486, %r6478, %r6483;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6489, %r930, %r1091, %r6470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6493, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6494, %r6470, %r6493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6497, %r6489, %r6494;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6500, %r941, %r1091, %r6481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6504, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6505, %r6481, %r6504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6508, %r6500, %r6505;
	// end inline asm
	// begin inline asm
	mov.b32 %r6516, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6527, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6513, %r930, %r1115, %r6516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6517, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6518, %r6516, %r6517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6521, %r6513, %r6518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6524, %r941, %r1115, %r6527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6528, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6529, %r6527, %r6528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6532, %r6524, %r6529;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6535, %r930, %r1137, %r6516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6539, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6540, %r6516, %r6539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6543, %r6535, %r6540;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6546, %r941, %r1137, %r6527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6550, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6551, %r6527, %r6550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6554, %r6546, %r6551;
	// end inline asm
	// begin inline asm
	mov.b32 %r6562, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6573, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6559, %r930, %r1161, %r6562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6563, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6564, %r6562, %r6563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6567, %r6559, %r6564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6570, %r941, %r1161, %r6573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6574, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6575, %r6573, %r6574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6578, %r6570, %r6575;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6581, %r930, %r1183, %r6562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6585, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6586, %r6562, %r6585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6589, %r6581, %r6586;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6592, %r941, %r1183, %r6573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6596, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6597, %r6573, %r6596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6600, %r6592, %r6597;
	// end inline asm
	// begin inline asm
	mov.b32 %r6608, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6619, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6605, %r930, %r1207, %r6608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6609, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6610, %r6608, %r6609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6613, %r6605, %r6610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6616, %r941, %r1207, %r6619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6620, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6621, %r6619, %r6620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6624, %r6616, %r6621;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6627, %r930, %r1229, %r6608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6631, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6632, %r6608, %r6631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6635, %r6627, %r6632;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6638, %r941, %r1229, %r6619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6642, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6643, %r6619, %r6642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6646, %r6638, %r6643;
	// end inline asm
	// begin inline asm
	mov.b32 %r6654, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6665, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6651, %r930, %r1253, %r6654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6655, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6656, %r6654, %r6655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6659, %r6651, %r6656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6662, %r941, %r1253, %r6665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6666, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6667, %r6665, %r6666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6670, %r6662, %r6667;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6673, %r930, %r1275, %r6654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6677, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6678, %r6654, %r6677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6681, %r6673, %r6678;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6684, %r941, %r1275, %r6665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6688, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6689, %r6665, %r6688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6692, %r6684, %r6689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6830, %r372, %r6337, %r6137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r372, %r6348, %r6143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6839, %r372, %r6359, %r6149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6836, %r372, %r6370, %r6155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6848, %r372, %r6383, %r6161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r372, %r6394, %r6167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6857, %r372, %r6405, %r6173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6854, %r372, %r6416, %r6179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6866, %r372, %r6429, %r6185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6863, %r372, %r6440, %r6191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6875, %r372, %r6451, %r6197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6872, %r372, %r6462, %r6203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6884, %r372, %r6475, %r6209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6881, %r372, %r6486, %r6215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6893, %r372, %r6497, %r6221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6890, %r372, %r6508, %r6227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6902, %r390, %r6521, %r6233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6899, %r390, %r6532, %r6239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6911, %r390, %r6543, %r6245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6908, %r390, %r6554, %r6251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6920, %r390, %r6567, %r6257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6917, %r390, %r6578, %r6263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6929, %r390, %r6589, %r6269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6926, %r390, %r6600, %r6275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6938, %r390, %r6613, %r6281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6935, %r390, %r6624, %r6287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6947, %r390, %r6635, %r6293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6944, %r390, %r6646, %r6299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6956, %r390, %r6659, %r6305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6953, %r390, %r6670, %r6311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6965, %r390, %r6681, %r6317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6962, %r390, %r6692, %r6323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6823, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6825, %r6823, %r6827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6828, %r454, %r6830, %r6825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6832, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6834, %r6832, %r6836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6837, %r454, %r6839, %r6834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6841, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6843, %r6841, %r6845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6846, %r454, %r6848, %r6843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6850, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6852, %r6850, %r6854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6855, %r454, %r6857, %r6852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6859, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6861, %r6859, %r6863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6864, %r454, %r6866, %r6861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6868, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6870, %r6868, %r6872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6873, %r454, %r6875, %r6870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6877, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6879, %r6877, %r6881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6882, %r454, %r6884, %r6879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6886, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6888, %r6886, %r6890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6891, %r454, %r6893, %r6888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6895, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6897, %r6895, %r6899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6900, %r457, %r6902, %r6897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6904, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6906, %r6904, %r6908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6909, %r457, %r6911, %r6906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6913, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6915, %r6913, %r6917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6918, %r457, %r6920, %r6915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6922, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6924, %r6922, %r6926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6927, %r457, %r6929, %r6924;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6931, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6933, %r6931, %r6935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6936, %r457, %r6938, %r6933;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6940, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6942, %r6940, %r6944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6945, %r457, %r6947, %r6942;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6949, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6951, %r6949, %r6953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6954, %r457, %r6956, %r6951;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6958, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6960, %r6958, %r6962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6963, %r457, %r6965, %r6960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6967, %r460, %r6830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6970, %r454, %r6827, %r6967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6974, %r460, %r6839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6977, %r454, %r6836, %r6974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6981, %r460, %r6848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6984, %r454, %r6845, %r6981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6988, %r460, %r6857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6991, %r454, %r6854, %r6988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6995, %r460, %r6866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6998, %r454, %r6863, %r6995;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7002, %r460, %r6875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7005, %r454, %r6872, %r7002;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7009, %r460, %r6884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7012, %r454, %r6881, %r7009;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7016, %r460, %r6893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7019, %r454, %r6890, %r7016;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7023, %r463, %r6902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7026, %r457, %r6899, %r7023;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7030, %r463, %r6911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7033, %r457, %r6908, %r7030;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7037, %r463, %r6920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7040, %r457, %r6917, %r7037;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7044, %r463, %r6929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7047, %r457, %r6926, %r7044;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7051, %r463, %r6938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7054, %r457, %r6935, %r7051;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7058, %r463, %r6947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7061, %r457, %r6944, %r7058;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7065, %r463, %r6956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7068, %r457, %r6953, %r7065;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7072, %r463, %r6965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7075, %r457, %r6962, %r7072;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7246, %r7243}, {%r509, %r515, %r512, %r518}, {%r6828, %r6970}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7255, %r7252}, {%r509, %r515, %r512, %r518}, {%r6837, %r6977}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7264, %r7261}, {%r509, %r515, %r512, %r518}, {%r6846, %r6984}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7273, %r7270}, {%r509, %r515, %r512, %r518}, {%r6855, %r6991}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7282, %r7279}, {%r509, %r515, %r512, %r518}, {%r6864, %r6998}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7291, %r7288}, {%r509, %r515, %r512, %r518}, {%r6873, %r7005}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7300, %r7297}, {%r509, %r515, %r512, %r518}, {%r6882, %r7012}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7309, %r7306}, {%r509, %r515, %r512, %r518}, {%r6891, %r7019}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7318, %r7315}, {%r509, %r515, %r512, %r518}, {%r6900, %r7026}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7327, %r7324}, {%r509, %r515, %r512, %r518}, {%r6909, %r7033}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7336, %r7333}, {%r509, %r515, %r512, %r518}, {%r6918, %r7040}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7345, %r7342}, {%r509, %r515, %r512, %r518}, {%r6927, %r7047}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7354, %r7351}, {%r509, %r515, %r512, %r518}, {%r6936, %r7054}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7363, %r7360}, {%r509, %r515, %r512, %r518}, {%r6945, %r7061}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7372, %r7369}, {%r509, %r515, %r512, %r518}, {%r6954, %r7068}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7381, %r7378}, {%r509, %r515, %r512, %r518}, {%r6963, %r7075}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7239, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7241, %r7239, %r7243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7244, %r559, %r7246, %r7241;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7248, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7250, %r7248, %r7252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7253, %r559, %r7255, %r7250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7257, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7259, %r7257, %r7261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7262, %r559, %r7264, %r7259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7266, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7268, %r7266, %r7270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7271, %r559, %r7273, %r7268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7275, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7277, %r7275, %r7279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7280, %r559, %r7282, %r7277;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7284, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7286, %r7284, %r7288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7289, %r559, %r7291, %r7286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7293, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7295, %r7293, %r7297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7298, %r559, %r7300, %r7295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7302, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7304, %r7302, %r7306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7307, %r559, %r7309, %r7304;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7311, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7313, %r7311, %r7315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7316, %r559, %r7318, %r7313;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7320, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7322, %r7320, %r7324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7325, %r559, %r7327, %r7322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7329, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7331, %r7329, %r7333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7334, %r559, %r7336, %r7331;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7338, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7340, %r7338, %r7342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7343, %r559, %r7345, %r7340;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7347, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7349, %r7347, %r7351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7352, %r559, %r7354, %r7349;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7356, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7358, %r7356, %r7360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7361, %r559, %r7363, %r7358;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7365, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7367, %r7365, %r7369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7370, %r559, %r7372, %r7367;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7374, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7376, %r7374, %r7378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7379, %r559, %r7381, %r7376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7383, %r562, %r7246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7386, %r559, %r7243, %r7383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7390, %r562, %r7255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7393, %r559, %r7252, %r7390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7397, %r562, %r7264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7400, %r559, %r7261, %r7397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7404, %r562, %r7273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7407, %r559, %r7270, %r7404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7411, %r562, %r7282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7414, %r559, %r7279, %r7411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7418, %r562, %r7291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7421, %r559, %r7288, %r7418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7425, %r562, %r7300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7428, %r559, %r7297, %r7425;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7432, %r562, %r7309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7435, %r559, %r7306, %r7432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7439, %r562, %r7318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7442, %r559, %r7315, %r7439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7446, %r562, %r7327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7449, %r559, %r7324, %r7446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7453, %r562, %r7336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7456, %r559, %r7333, %r7453;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7460, %r562, %r7345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7463, %r559, %r7342, %r7460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7467, %r562, %r7354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7470, %r559, %r7351, %r7467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7474, %r562, %r7363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7477, %r559, %r7360, %r7474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7481, %r562, %r7372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7484, %r559, %r7369, %r7481;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7488, %r562, %r7381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7491, %r559, %r7378, %r7488;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7784, %r7787}, {%r597, %r603, %r600, %r606}, {%r7244, %r7386}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7790, %r7793}, {%r597, %r603, %r600, %r606}, {%r7253, %r7393}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7796, %r7799}, {%r597, %r603, %r600, %r606}, {%r7262, %r7400}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7802, %r7805}, {%r597, %r603, %r600, %r606}, {%r7271, %r7407}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7808, %r7811}, {%r597, %r603, %r600, %r606}, {%r7280, %r7414}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7814, %r7817}, {%r597, %r603, %r600, %r606}, {%r7289, %r7421}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7820, %r7823}, {%r597, %r603, %r600, %r606}, {%r7298, %r7428}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7826, %r7829}, {%r597, %r603, %r600, %r606}, {%r7307, %r7435}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7785, %r7788}, {%r597, %r603, %r600, %r606}, {%r7316, %r7442}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7791, %r7794}, {%r597, %r603, %r600, %r606}, {%r7325, %r7449}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7797, %r7800}, {%r597, %r603, %r600, %r606}, {%r7334, %r7456}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7803, %r7806}, {%r597, %r603, %r600, %r606}, {%r7343, %r7463}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7809, %r7812}, {%r597, %r603, %r600, %r606}, {%r7352, %r7470}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7815, %r7818}, {%r597, %r603, %r600, %r606}, {%r7361, %r7477}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7821, %r7824}, {%r597, %r603, %r600, %r606}, {%r7370, %r7484}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7827, %r7830}, {%r597, %r603, %r600, %r606}, {%r7379, %r7491}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7783, %r7784, %r7785;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7786, %r7787, %r7788;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7789, %r7790, %r7791;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7792, %r7793, %r7794;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7795, %r7796, %r7797;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7798, %r7799, %r7800;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7801, %r7802, %r7803;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7804, %r7805, %r7806;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7807, %r7808, %r7809;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7810, %r7811, %r7812;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7813, %r7814, %r7815;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7816, %r7817, %r7818;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7819, %r7820, %r7821;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7822, %r7823, %r7824;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7825, %r7826, %r7827;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7828, %r7829, %r7830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7831, %r7784, %r7785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7834, %r7787, %r7788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7837, %r7790, %r7791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7840, %r7793, %r7794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7843, %r7796, %r7797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7846, %r7799, %r7800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7849, %r7802, %r7803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7852, %r7805, %r7806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7855, %r7808, %r7809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7858, %r7811, %r7812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7861, %r7814, %r7815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7864, %r7817, %r7818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7867, %r7820, %r7821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7870, %r7823, %r7824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7873, %r7826, %r7827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7876, %r7829, %r7830;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7879, %r17, %r7783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7882, %r17, %r7786;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7885, %r17, %r7789;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7888, %r17, %r7792;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7891, %r17, %r7795;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7894, %r17, %r7798;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7897, %r17, %r7801;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7900, %r17, %r7804;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7903, %r17, %r7807;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7906, %r17, %r7810;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7909, %r17, %r7813;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7912, %r17, %r7816;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7915, %r17, %r7819;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7918, %r17, %r7822;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7921, %r17, %r7825;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7924, %r17, %r7828;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7927, %r18, %r7831;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7930, %r18, %r7834;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7933, %r18, %r7837;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7936, %r18, %r7840;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7939, %r18, %r7843;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7942, %r18, %r7846;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7945, %r18, %r7849;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7948, %r18, %r7852;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7951, %r18, %r7855;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7954, %r18, %r7858;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7957, %r18, %r7861;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7960, %r18, %r7864;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7963, %r18, %r7867;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7966, %r18, %r7870;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7969, %r18, %r7873;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7972, %r18, %r7876;
	// end inline asm
	// begin inline asm
	mov.b32 %r7975, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7976, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7977, %r7879, %r7975;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7980, %r7977, %r7976;
	// end inline asm
	// begin inline asm
	mov.b32 %r7983, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7984, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7985, %r7882, %r7983;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7988, %r7985, %r7984;
	// end inline asm
	// begin inline asm
	mov.b32 %r7991, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7992, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7993, %r7885, %r7991;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7996, %r7993, %r7992;
	// end inline asm
	// begin inline asm
	mov.b32 %r7999, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8000, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8001, %r7888, %r7999;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8004, %r8001, %r8000;
	// end inline asm
	// begin inline asm
	mov.b32 %r8007, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8008, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8009, %r7891, %r8007;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8012, %r8009, %r8008;
	// end inline asm
	// begin inline asm
	mov.b32 %r8015, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8016, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8017, %r7894, %r8015;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8020, %r8017, %r8016;
	// end inline asm
	// begin inline asm
	mov.b32 %r8023, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8024, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8025, %r7897, %r8023;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8028, %r8025, %r8024;
	// end inline asm
	// begin inline asm
	mov.b32 %r8031, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8032, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8033, %r7900, %r8031;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8036, %r8033, %r8032;
	// end inline asm
	// begin inline asm
	mov.b32 %r8039, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8040, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8041, %r7903, %r8039;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8044, %r8041, %r8040;
	// end inline asm
	// begin inline asm
	mov.b32 %r8047, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8048, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8049, %r7906, %r8047;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8052, %r8049, %r8048;
	// end inline asm
	// begin inline asm
	mov.b32 %r8055, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8056, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8057, %r7909, %r8055;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8060, %r8057, %r8056;
	// end inline asm
	// begin inline asm
	mov.b32 %r8063, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8064, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8065, %r7912, %r8063;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8068, %r8065, %r8064;
	// end inline asm
	// begin inline asm
	mov.b32 %r8071, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8072, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8073, %r7915, %r8071;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8076, %r8073, %r8072;
	// end inline asm
	// begin inline asm
	mov.b32 %r8079, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8080, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8081, %r7918, %r8079;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8084, %r8081, %r8080;
	// end inline asm
	// begin inline asm
	mov.b32 %r8087, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8088, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8089, %r7921, %r8087;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8092, %r8089, %r8088;
	// end inline asm
	// begin inline asm
	mov.b32 %r8095, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8096, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8097, %r7924, %r8095;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8100, %r8097, %r8096;
	// end inline asm
	// begin inline asm
	mov.b32 %r8103, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8104, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8105, %r7927, %r8103;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8108, %r8105, %r8104;
	// end inline asm
	// begin inline asm
	mov.b32 %r8111, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8112, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8113, %r7930, %r8111;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8116, %r8113, %r8112;
	// end inline asm
	// begin inline asm
	mov.b32 %r8119, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8120, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8121, %r7933, %r8119;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8124, %r8121, %r8120;
	// end inline asm
	// begin inline asm
	mov.b32 %r8127, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8128, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8129, %r7936, %r8127;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8132, %r8129, %r8128;
	// end inline asm
	// begin inline asm
	mov.b32 %r8135, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8136, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8137, %r7939, %r8135;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8140, %r8137, %r8136;
	// end inline asm
	// begin inline asm
	mov.b32 %r8143, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8144, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8145, %r7942, %r8143;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8148, %r8145, %r8144;
	// end inline asm
	// begin inline asm
	mov.b32 %r8151, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8152, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8153, %r7945, %r8151;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8156, %r8153, %r8152;
	// end inline asm
	// begin inline asm
	mov.b32 %r8159, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8160, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8161, %r7948, %r8159;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8164, %r8161, %r8160;
	// end inline asm
	// begin inline asm
	mov.b32 %r8167, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8168, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8169, %r7951, %r8167;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8172, %r8169, %r8168;
	// end inline asm
	// begin inline asm
	mov.b32 %r8175, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8176, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8177, %r7954, %r8175;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8180, %r8177, %r8176;
	// end inline asm
	// begin inline asm
	mov.b32 %r8183, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8184, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8185, %r7957, %r8183;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8188, %r8185, %r8184;
	// end inline asm
	// begin inline asm
	mov.b32 %r8191, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8192, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8193, %r7960, %r8191;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8196, %r8193, %r8192;
	// end inline asm
	// begin inline asm
	mov.b32 %r8199, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8200, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8201, %r7963, %r8199;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8204, %r8201, %r8200;
	// end inline asm
	// begin inline asm
	mov.b32 %r8207, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8208, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8209, %r7966, %r8207;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8212, %r8209, %r8208;
	// end inline asm
	// begin inline asm
	mov.b32 %r8215, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8216, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8217, %r7969, %r8215;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8220, %r8217, %r8216;
	// end inline asm
	// begin inline asm
	mov.b32 %r8223, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8224, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8225, %r7972, %r8223;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8228, %r8225, %r8224;
	// end inline asm
	// begin inline asm
	mov.b32 %r8234, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8232, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8233, %r8234, %r8232;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8236, %r7980, %r8233;
	// end inline asm
	// begin inline asm
	mov.b32 %r8239, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8240, %r8234, %r8239;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8243, %r7988, %r8240;
	// end inline asm
	// begin inline asm
	mov.b32 %r8246, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8247, %r8234, %r8246;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8250, %r7996, %r8247;
	// end inline asm
	// begin inline asm
	mov.b32 %r8253, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8254, %r8234, %r8253;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8257, %r8004, %r8254;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8260, %r8236, %r8250, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8264, %r8243, %r8257, %r4447;
	// end inline asm
	shl.b32 	%r8271, %r8264, 4;
	// begin inline asm
	lop3.b32 %r8268, %r4453, %r8260, %r8271, 202;
	// end inline asm
	xor.b32  	%r16207, %r8268, -2004318072;
	// begin inline asm
	mov.b32 %r8275, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8273, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8274, %r8275, %r8273;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8277, %r8012, %r8274;
	// end inline asm
	// begin inline asm
	mov.b32 %r8280, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8281, %r8275, %r8280;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8284, %r8020, %r8281;
	// end inline asm
	// begin inline asm
	mov.b32 %r8287, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8288, %r8275, %r8287;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8291, %r8028, %r8288;
	// end inline asm
	// begin inline asm
	mov.b32 %r8294, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8295, %r8275, %r8294;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8298, %r8036, %r8295;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8301, %r8277, %r8291, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8305, %r8284, %r8298, %r4447;
	// end inline asm
	shl.b32 	%r8312, %r8305, 4;
	// begin inline asm
	lop3.b32 %r8309, %r4453, %r8301, %r8312, 202;
	// end inline asm
	xor.b32  	%r16208, %r8309, -2004318072;
	// begin inline asm
	mov.b32 %r8316, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8314, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8315, %r8316, %r8314;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8318, %r8044, %r8315;
	// end inline asm
	// begin inline asm
	mov.b32 %r8321, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8322, %r8316, %r8321;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8325, %r8052, %r8322;
	// end inline asm
	// begin inline asm
	mov.b32 %r8328, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8329, %r8316, %r8328;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8332, %r8060, %r8329;
	// end inline asm
	// begin inline asm
	mov.b32 %r8335, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8336, %r8316, %r8335;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8339, %r8068, %r8336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8342, %r8318, %r8332, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8346, %r8325, %r8339, %r4447;
	// end inline asm
	shl.b32 	%r8353, %r8346, 4;
	// begin inline asm
	lop3.b32 %r8350, %r4453, %r8342, %r8353, 202;
	// end inline asm
	xor.b32  	%r16209, %r8350, -2004318072;
	// begin inline asm
	mov.b32 %r8357, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8355, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8356, %r8357, %r8355;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8359, %r8076, %r8356;
	// end inline asm
	// begin inline asm
	mov.b32 %r8362, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8363, %r8357, %r8362;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8366, %r8084, %r8363;
	// end inline asm
	// begin inline asm
	mov.b32 %r8369, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8370, %r8357, %r8369;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8373, %r8092, %r8370;
	// end inline asm
	// begin inline asm
	mov.b32 %r8376, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8377, %r8357, %r8376;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8380, %r8100, %r8377;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8383, %r8359, %r8373, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8387, %r8366, %r8380, %r4447;
	// end inline asm
	shl.b32 	%r8394, %r8387, 4;
	// begin inline asm
	lop3.b32 %r8391, %r4453, %r8383, %r8394, 202;
	// end inline asm
	xor.b32  	%r16210, %r8391, -2004318072;
	// begin inline asm
	mov.b32 %r8398, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8396, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8397, %r8398, %r8396;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8400, %r8108, %r8397;
	// end inline asm
	// begin inline asm
	mov.b32 %r8403, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8404, %r8398, %r8403;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8407, %r8116, %r8404;
	// end inline asm
	// begin inline asm
	mov.b32 %r8410, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8411, %r8398, %r8410;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8414, %r8124, %r8411;
	// end inline asm
	// begin inline asm
	mov.b32 %r8417, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8418, %r8398, %r8417;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8421, %r8132, %r8418;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8424, %r8400, %r8414, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8428, %r8407, %r8421, %r4447;
	// end inline asm
	shl.b32 	%r8435, %r8428, 4;
	// begin inline asm
	lop3.b32 %r8432, %r4453, %r8424, %r8435, 202;
	// end inline asm
	xor.b32  	%r16211, %r8432, -2004318072;
	// begin inline asm
	mov.b32 %r8439, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8437, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8438, %r8439, %r8437;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8441, %r8140, %r8438;
	// end inline asm
	// begin inline asm
	mov.b32 %r8444, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8445, %r8439, %r8444;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8448, %r8148, %r8445;
	// end inline asm
	// begin inline asm
	mov.b32 %r8451, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8452, %r8439, %r8451;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8455, %r8156, %r8452;
	// end inline asm
	// begin inline asm
	mov.b32 %r8458, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8459, %r8439, %r8458;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8462, %r8164, %r8459;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8465, %r8441, %r8455, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8469, %r8448, %r8462, %r4447;
	// end inline asm
	shl.b32 	%r8476, %r8469, 4;
	// begin inline asm
	lop3.b32 %r8473, %r4453, %r8465, %r8476, 202;
	// end inline asm
	xor.b32  	%r16212, %r8473, -2004318072;
	// begin inline asm
	mov.b32 %r8480, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8478, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8479, %r8480, %r8478;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8482, %r8172, %r8479;
	// end inline asm
	// begin inline asm
	mov.b32 %r8485, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8486, %r8480, %r8485;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8489, %r8180, %r8486;
	// end inline asm
	// begin inline asm
	mov.b32 %r8492, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8493, %r8480, %r8492;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8496, %r8188, %r8493;
	// end inline asm
	// begin inline asm
	mov.b32 %r8499, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8500, %r8480, %r8499;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8503, %r8196, %r8500;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8506, %r8482, %r8496, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8510, %r8489, %r8503, %r4447;
	// end inline asm
	shl.b32 	%r8517, %r8510, 4;
	// begin inline asm
	lop3.b32 %r8514, %r4453, %r8506, %r8517, 202;
	// end inline asm
	xor.b32  	%r16213, %r8514, -2004318072;
	// begin inline asm
	mov.b32 %r8521, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8519, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8520, %r8521, %r8519;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8523, %r8204, %r8520;
	// end inline asm
	// begin inline asm
	mov.b32 %r8526, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8527, %r8521, %r8526;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8530, %r8212, %r8527;
	// end inline asm
	// begin inline asm
	mov.b32 %r8533, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8534, %r8521, %r8533;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8537, %r8220, %r8534;
	// end inline asm
	// begin inline asm
	mov.b32 %r8540, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8541, %r8521, %r8540;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8544, %r8228, %r8541;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8547, %r8523, %r8537, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8551, %r8530, %r8544, %r4447;
	// end inline asm
	shl.b32 	%r8558, %r8551, 4;
	// begin inline asm
	lop3.b32 %r8555, %r4453, %r8547, %r8558, 202;
	// end inline asm
	xor.b32  	%r16214, %r8555, -2004318072;
	st.shared.u32 	[%rd115], %r16207;
	st.shared.u32 	[%rd116], %r16208;
	st.shared.u32 	[%rd117], %r16209;
	st.shared.u32 	[%rd118], %r16210;
	st.shared.u32 	[%rd119], %r16211;
	st.shared.u32 	[%rd120], %r16212;
	st.shared.u32 	[%rd121], %r16213;
	st.shared.u32 	[%rd122], %r16214;
	ld.shared.u32 	%r16385, [%rd107];
	ld.shared.u32 	%r16386, [%rd108];
	ld.shared.u32 	%r16387, [%rd109];
	ld.shared.u32 	%r16388, [%rd110];
	ld.shared.u32 	%r16397, [%rd111];
	ld.shared.u32 	%r16398, [%rd112];
	ld.shared.u32 	%r16399, [%rd113];
	ld.shared.u32 	%r16400, [%rd114];
	// begin inline asm
	mov.b32 %r8564, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8575, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8563, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r8561, %r930, %r8563, %r8564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8565, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8566, %r8564, %r8565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8569, %r8561, %r8566;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8572, %r941, %r8563, %r8575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8576, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8577, %r8575, %r8576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8580, %r8572, %r8577;
	// end inline asm
	shr.u32 	%r8585, %r8563, 8;
	// begin inline asm
	lop3.b32 %r8583, %r930, %r8585, %r8564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8587, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8588, %r8564, %r8587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8591, %r8583, %r8588;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8594, %r941, %r8585, %r8575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8598, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8599, %r8575, %r8598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8602, %r8594, %r8599;
	// end inline asm
	// begin inline asm
	mov.b32 %r8610, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8621, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8609, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r8607, %r930, %r8609, %r8610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8611, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8612, %r8610, %r8611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8615, %r8607, %r8612;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8618, %r941, %r8609, %r8621, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8622, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8623, %r8621, %r8622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8626, %r8618, %r8623;
	// end inline asm
	shr.u32 	%r8631, %r8609, 8;
	// begin inline asm
	lop3.b32 %r8629, %r930, %r8631, %r8610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8633, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8634, %r8610, %r8633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8637, %r8629, %r8634;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8640, %r941, %r8631, %r8621, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8644, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8645, %r8621, %r8644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8648, %r8640, %r8645;
	// end inline asm
	// begin inline asm
	mov.b32 %r8656, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8667, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8655, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r8653, %r930, %r8655, %r8656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8657, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8658, %r8656, %r8657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8661, %r8653, %r8658;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8664, %r941, %r8655, %r8667, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8668, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8669, %r8667, %r8668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8672, %r8664, %r8669;
	// end inline asm
	shr.u32 	%r8677, %r8655, 8;
	// begin inline asm
	lop3.b32 %r8675, %r930, %r8677, %r8656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8679, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8680, %r8656, %r8679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8683, %r8675, %r8680;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8686, %r941, %r8677, %r8667, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8690, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8691, %r8667, %r8690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8694, %r8686, %r8691;
	// end inline asm
	// begin inline asm
	mov.b32 %r8702, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8713, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8701, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r8699, %r930, %r8701, %r8702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8703, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8704, %r8702, %r8703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8707, %r8699, %r8704;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8710, %r941, %r8701, %r8713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8714, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8715, %r8713, %r8714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8718, %r8710, %r8715;
	// end inline asm
	shr.u32 	%r8723, %r8701, 8;
	// begin inline asm
	lop3.b32 %r8721, %r930, %r8723, %r8702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8725, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8726, %r8702, %r8725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8729, %r8721, %r8726;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8732, %r941, %r8723, %r8713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8736, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8737, %r8713, %r8736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8740, %r8732, %r8737;
	// end inline asm
	// begin inline asm
	mov.b32 %r8748, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8759, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8747, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r8745, %r930, %r8747, %r8748, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8749, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8750, %r8748, %r8749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8753, %r8745, %r8750;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8756, %r941, %r8747, %r8759, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8760, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8761, %r8759, %r8760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8764, %r8756, %r8761;
	// end inline asm
	shr.u32 	%r8769, %r8747, 8;
	// begin inline asm
	lop3.b32 %r8767, %r930, %r8769, %r8748, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8771, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8772, %r8748, %r8771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8775, %r8767, %r8772;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8778, %r941, %r8769, %r8759, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8782, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8783, %r8759, %r8782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8786, %r8778, %r8783;
	// end inline asm
	// begin inline asm
	mov.b32 %r8794, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8805, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8793, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r8791, %r930, %r8793, %r8794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8795, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8796, %r8794, %r8795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8799, %r8791, %r8796;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8802, %r941, %r8793, %r8805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8806, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8807, %r8805, %r8806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8810, %r8802, %r8807;
	// end inline asm
	shr.u32 	%r8815, %r8793, 8;
	// begin inline asm
	lop3.b32 %r8813, %r930, %r8815, %r8794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8817, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8818, %r8794, %r8817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8821, %r8813, %r8818;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8824, %r941, %r8815, %r8805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8828, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8829, %r8805, %r8828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8832, %r8824, %r8829;
	// end inline asm
	// begin inline asm
	mov.b32 %r8840, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8851, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8839, %r16399, -2004318072;
	// begin inline asm
	lop3.b32 %r8837, %r930, %r8839, %r8840, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8841, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8842, %r8840, %r8841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8845, %r8837, %r8842;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8848, %r941, %r8839, %r8851, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8852, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8853, %r8851, %r8852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8856, %r8848, %r8853;
	// end inline asm
	shr.u32 	%r8861, %r8839, 8;
	// begin inline asm
	lop3.b32 %r8859, %r930, %r8861, %r8840, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8863, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8864, %r8840, %r8863;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8867, %r8859, %r8864;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8870, %r941, %r8861, %r8851, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8874, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8875, %r8851, %r8874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8878, %r8870, %r8875;
	// end inline asm
	// begin inline asm
	mov.b32 %r8886, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8897, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8885, %r16400, -2004318072;
	// begin inline asm
	lop3.b32 %r8883, %r930, %r8885, %r8886, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8887, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8888, %r8886, %r8887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8891, %r8883, %r8888;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8894, %r941, %r8885, %r8897, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8898, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8899, %r8897, %r8898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8902, %r8894, %r8899;
	// end inline asm
	shr.u32 	%r8907, %r8885, 8;
	// begin inline asm
	lop3.b32 %r8905, %r930, %r8907, %r8886, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8909, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8910, %r8886, %r8909;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8913, %r8905, %r8910;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8916, %r941, %r8907, %r8897, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8920, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8921, %r8897, %r8920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8924, %r8916, %r8921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8927, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8929, %r8927, %r8569;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8932, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8934, %r8932, %r8580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8937, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8939, %r8937, %r8591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8942, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8944, %r8942, %r8602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8947, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8949, %r8947, %r8615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8952, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8954, %r8952, %r8626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8957, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8959, %r8957, %r8637;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8962, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8964, %r8962, %r8648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8967, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8969, %r8967, %r8661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8972, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8974, %r8972, %r8672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8977, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8979, %r8977, %r8683;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8982, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8984, %r8982, %r8694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8987, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8989, %r8987, %r8707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8992, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8994, %r8992, %r8718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8997, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8999, %r8997, %r8729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9002, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9004, %r9002, %r8740;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9007, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9009, %r9007, %r8753;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9012, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9014, %r9012, %r8764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9017, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9019, %r9017, %r8775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9022, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9024, %r9022, %r8786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9027, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9029, %r9027, %r8799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9032, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9034, %r9032, %r8810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9037, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9039, %r9037, %r8821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9042, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9044, %r9042, %r8832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9047, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9049, %r9047, %r8845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9052, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9054, %r9052, %r8856;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9057, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9059, %r9057, %r8867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9062, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9064, %r9062, %r8878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9067, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9069, %r9067, %r8891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9072, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9074, %r9072, %r8902;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9077, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9079, %r9077, %r8913;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9082, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9084, %r9082, %r8924;
	// end inline asm
	// begin inline asm
	mov.b32 %r9092, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9103, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9089, %r930, %r2515, %r9092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9093, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9094, %r9092, %r9093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9097, %r9089, %r9094;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9100, %r941, %r2515, %r9103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9104, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9105, %r9103, %r9104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9108, %r9100, %r9105;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9111, %r930, %r2537, %r9092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9115, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9116, %r9092, %r9115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9119, %r9111, %r9116;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9122, %r941, %r2537, %r9103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9126, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9127, %r9103, %r9126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9130, %r9122, %r9127;
	// end inline asm
	// begin inline asm
	mov.b32 %r9138, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9149, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9135, %r930, %r2561, %r9138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9139, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9140, %r9138, %r9139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9143, %r9135, %r9140;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9146, %r941, %r2561, %r9149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9150, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9151, %r9149, %r9150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9154, %r9146, %r9151;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9157, %r930, %r2583, %r9138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9161, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9162, %r9138, %r9161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9165, %r9157, %r9162;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9168, %r941, %r2583, %r9149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9172, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9173, %r9149, %r9172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9176, %r9168, %r9173;
	// end inline asm
	// begin inline asm
	mov.b32 %r9184, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9195, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9181, %r930, %r2607, %r9184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9185, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9186, %r9184, %r9185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9189, %r9181, %r9186;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9192, %r941, %r2607, %r9195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9196, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9197, %r9195, %r9196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9200, %r9192, %r9197;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9203, %r930, %r2629, %r9184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9207, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9208, %r9184, %r9207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9211, %r9203, %r9208;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9214, %r941, %r2629, %r9195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9218, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9219, %r9195, %r9218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9222, %r9214, %r9219;
	// end inline asm
	// begin inline asm
	mov.b32 %r9230, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9241, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9227, %r930, %r2653, %r9230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9231, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9232, %r9230, %r9231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9235, %r9227, %r9232;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9238, %r941, %r2653, %r9241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9242, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9243, %r9241, %r9242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9246, %r9238, %r9243;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9249, %r930, %r2675, %r9230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9253, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9254, %r9230, %r9253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9257, %r9249, %r9254;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9260, %r941, %r2675, %r9241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9264, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9265, %r9241, %r9264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9268, %r9260, %r9265;
	// end inline asm
	// begin inline asm
	mov.b32 %r9276, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9287, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9273, %r930, %r2699, %r9276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9277, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9278, %r9276, %r9277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9281, %r9273, %r9278;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9284, %r941, %r2699, %r9287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9288, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9289, %r9287, %r9288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9292, %r9284, %r9289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9295, %r930, %r2721, %r9276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9299, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9300, %r9276, %r9299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9303, %r9295, %r9300;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9306, %r941, %r2721, %r9287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9310, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9311, %r9287, %r9310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9314, %r9306, %r9311;
	// end inline asm
	// begin inline asm
	mov.b32 %r9322, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9333, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9319, %r930, %r2745, %r9322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9323, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9324, %r9322, %r9323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9327, %r9319, %r9324;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9330, %r941, %r2745, %r9333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9334, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9335, %r9333, %r9334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9338, %r9330, %r9335;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9341, %r930, %r2767, %r9322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9345, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9346, %r9322, %r9345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9349, %r9341, %r9346;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9352, %r941, %r2767, %r9333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9356, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9357, %r9333, %r9356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9360, %r9352, %r9357;
	// end inline asm
	// begin inline asm
	mov.b32 %r9368, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9379, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9365, %r930, %r2791, %r9368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9369, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9370, %r9368, %r9369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9373, %r9365, %r9370;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9376, %r941, %r2791, %r9379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9380, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9381, %r9379, %r9380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9384, %r9376, %r9381;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9387, %r930, %r2813, %r9368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9391, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9392, %r9368, %r9391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9395, %r9387, %r9392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9398, %r941, %r2813, %r9379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9402, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9403, %r9379, %r9402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9406, %r9398, %r9403;
	// end inline asm
	// begin inline asm
	mov.b32 %r9414, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9425, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9411, %r930, %r2837, %r9414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9415, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9416, %r9414, %r9415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9419, %r9411, %r9416;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9422, %r941, %r2837, %r9425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9426, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9427, %r9425, %r9426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9430, %r9422, %r9427;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9433, %r930, %r2859, %r9414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9437, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9438, %r9414, %r9437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9441, %r9433, %r9438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9444, %r941, %r2859, %r9425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9448, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9449, %r9425, %r9448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9452, %r9444, %r9449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9455, %r300, %r9097, %r8929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9459, %r300, %r9108, %r8934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9463, %r300, %r9119, %r8939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9467, %r300, %r9130, %r8944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9471, %r300, %r9143, %r8949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9475, %r300, %r9154, %r8954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9479, %r300, %r9165, %r8959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9483, %r300, %r9176, %r8964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9487, %r300, %r9189, %r8969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9491, %r300, %r9200, %r8974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9495, %r300, %r9211, %r8979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9499, %r300, %r9222, %r8984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9503, %r300, %r9235, %r8989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9507, %r300, %r9246, %r8994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9511, %r300, %r9257, %r8999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9515, %r300, %r9268, %r9004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9519, %r318, %r9281, %r9009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9523, %r318, %r9292, %r9014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9527, %r318, %r9303, %r9019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9531, %r318, %r9314, %r9024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9535, %r318, %r9327, %r9029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9539, %r318, %r9338, %r9034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9543, %r318, %r9349, %r9039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9547, %r318, %r9360, %r9044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9551, %r318, %r9373, %r9049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9555, %r318, %r9384, %r9054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9559, %r318, %r9395, %r9059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9563, %r318, %r9406, %r9064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9567, %r318, %r9419, %r9069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9571, %r318, %r9430, %r9074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9575, %r318, %r9441, %r9079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9579, %r318, %r9452, %r9084;
	// end inline asm
	// begin inline asm
	mov.b32 %r9588, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9599, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9585, %r930, %r931, %r9588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9589, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9590, %r9588, %r9589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9593, %r9585, %r9590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9596, %r941, %r931, %r9599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9600, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9601, %r9599, %r9600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9604, %r9596, %r9601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9607, %r930, %r953, %r9588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9611, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9612, %r9588, %r9611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9615, %r9607, %r9612;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9618, %r941, %r953, %r9599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9622, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9623, %r9599, %r9622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9626, %r9618, %r9623;
	// end inline asm
	// begin inline asm
	mov.b32 %r9634, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9645, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9631, %r930, %r977, %r9634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9635, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9636, %r9634, %r9635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9639, %r9631, %r9636;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9642, %r941, %r977, %r9645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9646, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9647, %r9645, %r9646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9650, %r9642, %r9647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9653, %r930, %r999, %r9634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9657, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9658, %r9634, %r9657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9661, %r9653, %r9658;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9664, %r941, %r999, %r9645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9668, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9669, %r9645, %r9668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9672, %r9664, %r9669;
	// end inline asm
	// begin inline asm
	mov.b32 %r9680, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9691, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9677, %r930, %r1023, %r9680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9681, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9682, %r9680, %r9681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9685, %r9677, %r9682;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9688, %r941, %r1023, %r9691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9692, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9693, %r9691, %r9692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9696, %r9688, %r9693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9699, %r930, %r1045, %r9680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9703, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9704, %r9680, %r9703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9707, %r9699, %r9704;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9710, %r941, %r1045, %r9691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9714, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9715, %r9691, %r9714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9718, %r9710, %r9715;
	// end inline asm
	// begin inline asm
	mov.b32 %r9726, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9737, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9723, %r930, %r1069, %r9726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9727, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9728, %r9726, %r9727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9731, %r9723, %r9728;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9734, %r941, %r1069, %r9737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9738, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9739, %r9737, %r9738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9742, %r9734, %r9739;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9745, %r930, %r1091, %r9726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9749, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9750, %r9726, %r9749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9753, %r9745, %r9750;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9756, %r941, %r1091, %r9737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9760, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9761, %r9737, %r9760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9764, %r9756, %r9761;
	// end inline asm
	// begin inline asm
	mov.b32 %r9772, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9783, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9769, %r930, %r1115, %r9772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9773, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9774, %r9772, %r9773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9777, %r9769, %r9774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9780, %r941, %r1115, %r9783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9784, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9785, %r9783, %r9784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9788, %r9780, %r9785;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9791, %r930, %r1137, %r9772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9795, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9796, %r9772, %r9795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9799, %r9791, %r9796;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9802, %r941, %r1137, %r9783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9806, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9807, %r9783, %r9806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9810, %r9802, %r9807;
	// end inline asm
	// begin inline asm
	mov.b32 %r9818, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9829, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9815, %r930, %r1161, %r9818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9819, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9820, %r9818, %r9819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9823, %r9815, %r9820;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9826, %r941, %r1161, %r9829, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9830, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9831, %r9829, %r9830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9834, %r9826, %r9831;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9837, %r930, %r1183, %r9818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9841, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9842, %r9818, %r9841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9845, %r9837, %r9842;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9848, %r941, %r1183, %r9829, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9852, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9853, %r9829, %r9852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9856, %r9848, %r9853;
	// end inline asm
	// begin inline asm
	mov.b32 %r9864, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9875, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9861, %r930, %r1207, %r9864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9865, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9866, %r9864, %r9865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9869, %r9861, %r9866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9872, %r941, %r1207, %r9875, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9876, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9877, %r9875, %r9876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9880, %r9872, %r9877;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9883, %r930, %r1229, %r9864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9887, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9888, %r9864, %r9887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9891, %r9883, %r9888;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9894, %r941, %r1229, %r9875, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9898, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9899, %r9875, %r9898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9902, %r9894, %r9899;
	// end inline asm
	// begin inline asm
	mov.b32 %r9910, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9921, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9907, %r930, %r1253, %r9910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9911, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9912, %r9910, %r9911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9915, %r9907, %r9912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9918, %r941, %r1253, %r9921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9922, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9923, %r9921, %r9922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9926, %r9918, %r9923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9929, %r930, %r1275, %r9910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9933, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9934, %r9910, %r9933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9937, %r9929, %r9934;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9940, %r941, %r1275, %r9921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9944, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9945, %r9921, %r9944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9948, %r9940, %r9945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9951, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9953, %r9951, %r9593, %r9455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9957, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9959, %r9957, %r9604, %r9459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9963, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9965, %r9963, %r9615, %r9463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9969, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9971, %r9969, %r9626, %r9467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9975, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9977, %r9975, %r9639, %r9471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9981, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9983, %r9981, %r9650, %r9475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9987, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9989, %r9987, %r9661, %r9479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9993, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9995, %r9993, %r9672, %r9483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9999, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10001, %r9999, %r9685, %r9487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10005, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10007, %r10005, %r9696, %r9491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10011, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10013, %r10011, %r9707, %r9495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10017, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10019, %r10017, %r9718, %r9499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10023, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10025, %r10023, %r9731, %r9503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10029, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10031, %r10029, %r9742, %r9507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10035, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10037, %r10035, %r9753, %r9511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10041, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10043, %r10041, %r9764, %r9515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10047, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10049, %r10047, %r9777, %r9519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10053, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10055, %r10053, %r9788, %r9523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10059, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10061, %r10059, %r9799, %r9527;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10065, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10067, %r10065, %r9810, %r9531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10071, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10073, %r10071, %r9823, %r9535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10077, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10079, %r10077, %r9834, %r9539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10083, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10085, %r10083, %r9845, %r9543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10089, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10091, %r10089, %r9856, %r9547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10095, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10097, %r10095, %r9869, %r9551;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10101, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10103, %r10101, %r9880, %r9555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10107, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10109, %r10107, %r9891, %r9559;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10113, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10115, %r10113, %r9902, %r9563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10119, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10121, %r10119, %r9915, %r9567;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10125, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10127, %r10125, %r9926, %r9571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10131, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10133, %r10131, %r9937, %r9575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10137, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10139, %r10137, %r9948, %r9579;
	// end inline asm
	// begin inline asm
	mov.b32 %r10148, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10159, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10145, %r930, %r4747, %r10148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10149, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10150, %r10148, %r10149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10153, %r10145, %r10150;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10156, %r941, %r4747, %r10159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10160, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10161, %r10159, %r10160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10164, %r10156, %r10161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10167, %r930, %r4769, %r10148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10171, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10172, %r10148, %r10171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10175, %r10167, %r10172;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10178, %r941, %r4769, %r10159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10182, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10183, %r10159, %r10182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10186, %r10178, %r10183;
	// end inline asm
	// begin inline asm
	mov.b32 %r10194, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10205, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10191, %r930, %r4793, %r10194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10195, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10196, %r10194, %r10195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10199, %r10191, %r10196;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10202, %r941, %r4793, %r10205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10206, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10207, %r10205, %r10206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10210, %r10202, %r10207;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10213, %r930, %r4815, %r10194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10217, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10218, %r10194, %r10217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10221, %r10213, %r10218;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10224, %r941, %r4815, %r10205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10228, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10229, %r10205, %r10228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10232, %r10224, %r10229;
	// end inline asm
	// begin inline asm
	mov.b32 %r10240, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10251, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10237, %r930, %r4839, %r10240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10241, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10242, %r10240, %r10241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10245, %r10237, %r10242;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10248, %r941, %r4839, %r10251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10252, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10253, %r10251, %r10252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10256, %r10248, %r10253;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10259, %r930, %r4861, %r10240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10263, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10264, %r10240, %r10263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10267, %r10259, %r10264;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10270, %r941, %r4861, %r10251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10274, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10275, %r10251, %r10274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10278, %r10270, %r10275;
	// end inline asm
	// begin inline asm
	mov.b32 %r10286, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10297, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10283, %r930, %r4885, %r10286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10287, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10288, %r10286, %r10287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10291, %r10283, %r10288;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10294, %r941, %r4885, %r10297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10298, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10299, %r10297, %r10298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10302, %r10294, %r10299;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10305, %r930, %r4907, %r10286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10309, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10310, %r10286, %r10309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10313, %r10305, %r10310;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10316, %r941, %r4907, %r10297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10320, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10321, %r10297, %r10320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10324, %r10316, %r10321;
	// end inline asm
	// begin inline asm
	mov.b32 %r10332, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10343, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10329, %r930, %r4931, %r10332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10333, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10334, %r10332, %r10333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10337, %r10329, %r10334;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10340, %r941, %r4931, %r10343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10344, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10345, %r10343, %r10344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10348, %r10340, %r10345;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10351, %r930, %r4953, %r10332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10355, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10356, %r10332, %r10355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10359, %r10351, %r10356;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10362, %r941, %r4953, %r10343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10366, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10367, %r10343, %r10366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10370, %r10362, %r10367;
	// end inline asm
	// begin inline asm
	mov.b32 %r10378, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10389, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10375, %r930, %r4977, %r10378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10379, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10380, %r10378, %r10379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10383, %r10375, %r10380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10386, %r941, %r4977, %r10389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10390, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10391, %r10389, %r10390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10394, %r10386, %r10391;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10397, %r930, %r4999, %r10378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10401, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10402, %r10378, %r10401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10405, %r10397, %r10402;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10408, %r941, %r4999, %r10389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10412, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10413, %r10389, %r10412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10416, %r10408, %r10413;
	// end inline asm
	// begin inline asm
	mov.b32 %r10424, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10435, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10421, %r930, %r5023, %r10424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10425, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10426, %r10424, %r10425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10429, %r10421, %r10426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10432, %r941, %r5023, %r10435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10436, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10437, %r10435, %r10436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10440, %r10432, %r10437;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10443, %r930, %r5045, %r10424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10447, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10448, %r10424, %r10447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10451, %r10443, %r10448;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10454, %r941, %r5045, %r10435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10458, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10459, %r10435, %r10458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10462, %r10454, %r10459;
	// end inline asm
	// begin inline asm
	mov.b32 %r10470, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10481, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10467, %r930, %r5069, %r10470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10471, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10472, %r10470, %r10471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10475, %r10467, %r10472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10478, %r941, %r5069, %r10481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10482, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10483, %r10481, %r10482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10486, %r10478, %r10483;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10489, %r930, %r5091, %r10470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10493, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10494, %r10470, %r10493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10497, %r10489, %r10494;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10500, %r941, %r5091, %r10481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10504, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10505, %r10481, %r10504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10508, %r10500, %r10505;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10646, %r372, %r10153, %r9953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10643, %r372, %r10164, %r9959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10655, %r372, %r10175, %r9965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10652, %r372, %r10186, %r9971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10664, %r372, %r10199, %r9977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10661, %r372, %r10210, %r9983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10673, %r372, %r10221, %r9989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10670, %r372, %r10232, %r9995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10682, %r372, %r10245, %r10001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10679, %r372, %r10256, %r10007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10691, %r372, %r10267, %r10013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10688, %r372, %r10278, %r10019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10700, %r372, %r10291, %r10025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10697, %r372, %r10302, %r10031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10709, %r372, %r10313, %r10037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10706, %r372, %r10324, %r10043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10718, %r390, %r10337, %r10049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10715, %r390, %r10348, %r10055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10727, %r390, %r10359, %r10061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10724, %r390, %r10370, %r10067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10736, %r390, %r10383, %r10073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10733, %r390, %r10394, %r10079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10745, %r390, %r10405, %r10085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10742, %r390, %r10416, %r10091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10754, %r390, %r10429, %r10097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10751, %r390, %r10440, %r10103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10763, %r390, %r10451, %r10109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10760, %r390, %r10462, %r10115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10772, %r390, %r10475, %r10121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10769, %r390, %r10486, %r10127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10781, %r390, %r10497, %r10133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10778, %r390, %r10508, %r10139;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10639, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10641, %r10639, %r10643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10644, %r454, %r10646, %r10641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10648, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10650, %r10648, %r10652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10653, %r454, %r10655, %r10650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10657, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10659, %r10657, %r10661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10662, %r454, %r10664, %r10659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10666, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10668, %r10666, %r10670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10671, %r454, %r10673, %r10668;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10675, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10677, %r10675, %r10679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10680, %r454, %r10682, %r10677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10684, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10686, %r10684, %r10688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10689, %r454, %r10691, %r10686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10693, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10695, %r10693, %r10697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10698, %r454, %r10700, %r10695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10702, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10704, %r10702, %r10706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10707, %r454, %r10709, %r10704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10711, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10713, %r10711, %r10715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10716, %r457, %r10718, %r10713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10720, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10722, %r10720, %r10724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10725, %r457, %r10727, %r10722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10729, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10731, %r10729, %r10733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10734, %r457, %r10736, %r10731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10738, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10740, %r10738, %r10742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10743, %r457, %r10745, %r10740;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10747, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10749, %r10747, %r10751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10752, %r457, %r10754, %r10749;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10756, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10758, %r10756, %r10760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10761, %r457, %r10763, %r10758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10765, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10767, %r10765, %r10769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10770, %r457, %r10772, %r10767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10774, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10776, %r10774, %r10778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10779, %r457, %r10781, %r10776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10783, %r460, %r10646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10786, %r454, %r10643, %r10783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10790, %r460, %r10655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10793, %r454, %r10652, %r10790;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10797, %r460, %r10664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10800, %r454, %r10661, %r10797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10804, %r460, %r10673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10807, %r454, %r10670, %r10804;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10811, %r460, %r10682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10814, %r454, %r10679, %r10811;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10818, %r460, %r10691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10821, %r454, %r10688, %r10818;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10825, %r460, %r10700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10828, %r454, %r10697, %r10825;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10832, %r460, %r10709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10835, %r454, %r10706, %r10832;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10839, %r463, %r10718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10842, %r457, %r10715, %r10839;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10846, %r463, %r10727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10849, %r457, %r10724, %r10846;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10853, %r463, %r10736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10856, %r457, %r10733, %r10853;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10860, %r463, %r10745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10863, %r457, %r10742, %r10860;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10867, %r463, %r10754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10870, %r457, %r10751, %r10867;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10874, %r463, %r10763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10877, %r457, %r10760, %r10874;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10881, %r463, %r10772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10884, %r457, %r10769, %r10881;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10888, %r463, %r10781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10891, %r457, %r10778, %r10888;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11062, %r11059}, {%r509, %r515, %r512, %r518}, {%r10644, %r10786}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11071, %r11068}, {%r509, %r515, %r512, %r518}, {%r10653, %r10793}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11080, %r11077}, {%r509, %r515, %r512, %r518}, {%r10662, %r10800}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11089, %r11086}, {%r509, %r515, %r512, %r518}, {%r10671, %r10807}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11098, %r11095}, {%r509, %r515, %r512, %r518}, {%r10680, %r10814}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11107, %r11104}, {%r509, %r515, %r512, %r518}, {%r10689, %r10821}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11116, %r11113}, {%r509, %r515, %r512, %r518}, {%r10698, %r10828}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11125, %r11122}, {%r509, %r515, %r512, %r518}, {%r10707, %r10835}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11134, %r11131}, {%r509, %r515, %r512, %r518}, {%r10716, %r10842}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11143, %r11140}, {%r509, %r515, %r512, %r518}, {%r10725, %r10849}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11152, %r11149}, {%r509, %r515, %r512, %r518}, {%r10734, %r10856}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11161, %r11158}, {%r509, %r515, %r512, %r518}, {%r10743, %r10863}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11170, %r11167}, {%r509, %r515, %r512, %r518}, {%r10752, %r10870}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11179, %r11176}, {%r509, %r515, %r512, %r518}, {%r10761, %r10877}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11188, %r11185}, {%r509, %r515, %r512, %r518}, {%r10770, %r10884}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11197, %r11194}, {%r509, %r515, %r512, %r518}, {%r10779, %r10891}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11055, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11057, %r11055, %r11059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11060, %r559, %r11062, %r11057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11064, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11066, %r11064, %r11068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11069, %r559, %r11071, %r11066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11073, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11075, %r11073, %r11077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11078, %r559, %r11080, %r11075;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11082, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11084, %r11082, %r11086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11087, %r559, %r11089, %r11084;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11091, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11093, %r11091, %r11095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11096, %r559, %r11098, %r11093;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11100, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11102, %r11100, %r11104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11105, %r559, %r11107, %r11102;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11109, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11111, %r11109, %r11113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11114, %r559, %r11116, %r11111;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11118, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11120, %r11118, %r11122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11123, %r559, %r11125, %r11120;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11127, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11129, %r11127, %r11131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11132, %r559, %r11134, %r11129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11136, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11138, %r11136, %r11140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11141, %r559, %r11143, %r11138;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11145, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11147, %r11145, %r11149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11150, %r559, %r11152, %r11147;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11154, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11156, %r11154, %r11158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11159, %r559, %r11161, %r11156;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11163, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11165, %r11163, %r11167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11168, %r559, %r11170, %r11165;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11172, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11174, %r11172, %r11176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11177, %r559, %r11179, %r11174;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11181, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11183, %r11181, %r11185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11186, %r559, %r11188, %r11183;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11190, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11192, %r11190, %r11194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11195, %r559, %r11197, %r11192;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11199, %r562, %r11062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11202, %r559, %r11059, %r11199;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11206, %r562, %r11071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11209, %r559, %r11068, %r11206;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11213, %r562, %r11080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11216, %r559, %r11077, %r11213;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11220, %r562, %r11089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11223, %r559, %r11086, %r11220;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11227, %r562, %r11098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11230, %r559, %r11095, %r11227;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11234, %r562, %r11107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11237, %r559, %r11104, %r11234;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11241, %r562, %r11116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11244, %r559, %r11113, %r11241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11248, %r562, %r11125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11251, %r559, %r11122, %r11248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11255, %r562, %r11134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11258, %r559, %r11131, %r11255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11262, %r562, %r11143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11265, %r559, %r11140, %r11262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11269, %r562, %r11152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11272, %r559, %r11149, %r11269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11276, %r562, %r11161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11279, %r559, %r11158, %r11276;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11283, %r562, %r11170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11286, %r559, %r11167, %r11283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11290, %r562, %r11179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11293, %r559, %r11176, %r11290;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11297, %r562, %r11188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11300, %r559, %r11185, %r11297;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11304, %r562, %r11197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11307, %r559, %r11194, %r11304;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11600, %r11603}, {%r597, %r603, %r600, %r606}, {%r11060, %r11202}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11606, %r11609}, {%r597, %r603, %r600, %r606}, {%r11069, %r11209}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11612, %r11615}, {%r597, %r603, %r600, %r606}, {%r11078, %r11216}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11618, %r11621}, {%r597, %r603, %r600, %r606}, {%r11087, %r11223}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11624, %r11627}, {%r597, %r603, %r600, %r606}, {%r11096, %r11230}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11630, %r11633}, {%r597, %r603, %r600, %r606}, {%r11105, %r11237}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11636, %r11639}, {%r597, %r603, %r600, %r606}, {%r11114, %r11244}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11642, %r11645}, {%r597, %r603, %r600, %r606}, {%r11123, %r11251}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11601, %r11604}, {%r597, %r603, %r600, %r606}, {%r11132, %r11258}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11607, %r11610}, {%r597, %r603, %r600, %r606}, {%r11141, %r11265}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11613, %r11616}, {%r597, %r603, %r600, %r606}, {%r11150, %r11272}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11619, %r11622}, {%r597, %r603, %r600, %r606}, {%r11159, %r11279}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11625, %r11628}, {%r597, %r603, %r600, %r606}, {%r11168, %r11286}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11631, %r11634}, {%r597, %r603, %r600, %r606}, {%r11177, %r11293}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11637, %r11640}, {%r597, %r603, %r600, %r606}, {%r11186, %r11300}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11643, %r11646}, {%r597, %r603, %r600, %r606}, {%r11195, %r11307}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11599, %r11600, %r11601;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11602, %r11603, %r11604;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11605, %r11606, %r11607;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11608, %r11609, %r11610;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11611, %r11612, %r11613;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11614, %r11615, %r11616;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11617, %r11618, %r11619;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11620, %r11621, %r11622;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11623, %r11624, %r11625;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11626, %r11627, %r11628;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11629, %r11630, %r11631;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11632, %r11633, %r11634;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11635, %r11636, %r11637;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11638, %r11639, %r11640;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11641, %r11642, %r11643;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11644, %r11645, %r11646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11647, %r11600, %r11601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11650, %r11603, %r11604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11653, %r11606, %r11607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11656, %r11609, %r11610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11659, %r11612, %r11613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11662, %r11615, %r11616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11665, %r11618, %r11619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11668, %r11621, %r11622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11671, %r11624, %r11625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11674, %r11627, %r11628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11677, %r11630, %r11631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11680, %r11633, %r11634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11683, %r11636, %r11637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11686, %r11639, %r11640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11689, %r11642, %r11643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11692, %r11645, %r11646;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11695, %r17, %r11599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11698, %r17, %r11602;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11701, %r17, %r11605;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11704, %r17, %r11608;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11707, %r17, %r11611;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11710, %r17, %r11614;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11713, %r17, %r11617;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11716, %r17, %r11620;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11719, %r17, %r11623;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11722, %r17, %r11626;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11725, %r17, %r11629;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11728, %r17, %r11632;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11731, %r17, %r11635;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11734, %r17, %r11638;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11737, %r17, %r11641;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11740, %r17, %r11644;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11743, %r18, %r11647;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11746, %r18, %r11650;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11749, %r18, %r11653;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11752, %r18, %r11656;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11755, %r18, %r11659;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11758, %r18, %r11662;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11761, %r18, %r11665;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11764, %r18, %r11668;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11767, %r18, %r11671;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11770, %r18, %r11674;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11773, %r18, %r11677;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11776, %r18, %r11680;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11779, %r18, %r11683;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11782, %r18, %r11686;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11785, %r18, %r11689;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11788, %r18, %r11692;
	// end inline asm
	// begin inline asm
	mov.b32 %r11791, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11792, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11793, %r11695, %r11791;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11796, %r11793, %r11792;
	// end inline asm
	// begin inline asm
	mov.b32 %r11799, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11800, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11801, %r11698, %r11799;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11804, %r11801, %r11800;
	// end inline asm
	// begin inline asm
	mov.b32 %r11807, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11808, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11809, %r11701, %r11807;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11812, %r11809, %r11808;
	// end inline asm
	// begin inline asm
	mov.b32 %r11815, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11816, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11817, %r11704, %r11815;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11820, %r11817, %r11816;
	// end inline asm
	// begin inline asm
	mov.b32 %r11823, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11824, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11825, %r11707, %r11823;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11828, %r11825, %r11824;
	// end inline asm
	// begin inline asm
	mov.b32 %r11831, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11832, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11833, %r11710, %r11831;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11836, %r11833, %r11832;
	// end inline asm
	// begin inline asm
	mov.b32 %r11839, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11840, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11841, %r11713, %r11839;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11844, %r11841, %r11840;
	// end inline asm
	// begin inline asm
	mov.b32 %r11847, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11848, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11849, %r11716, %r11847;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11852, %r11849, %r11848;
	// end inline asm
	// begin inline asm
	mov.b32 %r11855, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11856, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11857, %r11719, %r11855;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11860, %r11857, %r11856;
	// end inline asm
	// begin inline asm
	mov.b32 %r11863, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11864, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11865, %r11722, %r11863;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11868, %r11865, %r11864;
	// end inline asm
	// begin inline asm
	mov.b32 %r11871, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11872, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11873, %r11725, %r11871;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11876, %r11873, %r11872;
	// end inline asm
	// begin inline asm
	mov.b32 %r11879, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11880, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11881, %r11728, %r11879;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11884, %r11881, %r11880;
	// end inline asm
	// begin inline asm
	mov.b32 %r11887, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11888, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11889, %r11731, %r11887;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11892, %r11889, %r11888;
	// end inline asm
	// begin inline asm
	mov.b32 %r11895, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11896, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11897, %r11734, %r11895;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11900, %r11897, %r11896;
	// end inline asm
	// begin inline asm
	mov.b32 %r11903, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11904, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11905, %r11737, %r11903;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11908, %r11905, %r11904;
	// end inline asm
	// begin inline asm
	mov.b32 %r11911, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11912, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11913, %r11740, %r11911;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11916, %r11913, %r11912;
	// end inline asm
	// begin inline asm
	mov.b32 %r11919, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11920, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11921, %r11743, %r11919;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11924, %r11921, %r11920;
	// end inline asm
	// begin inline asm
	mov.b32 %r11927, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11928, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11929, %r11746, %r11927;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11932, %r11929, %r11928;
	// end inline asm
	// begin inline asm
	mov.b32 %r11935, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11936, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11937, %r11749, %r11935;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11940, %r11937, %r11936;
	// end inline asm
	// begin inline asm
	mov.b32 %r11943, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11944, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11945, %r11752, %r11943;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11948, %r11945, %r11944;
	// end inline asm
	// begin inline asm
	mov.b32 %r11951, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11952, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11953, %r11755, %r11951;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11956, %r11953, %r11952;
	// end inline asm
	// begin inline asm
	mov.b32 %r11959, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11960, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11961, %r11758, %r11959;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11964, %r11961, %r11960;
	// end inline asm
	// begin inline asm
	mov.b32 %r11967, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11968, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11969, %r11761, %r11967;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11972, %r11969, %r11968;
	// end inline asm
	// begin inline asm
	mov.b32 %r11975, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11976, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11977, %r11764, %r11975;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11980, %r11977, %r11976;
	// end inline asm
	// begin inline asm
	mov.b32 %r11983, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11984, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11985, %r11767, %r11983;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11988, %r11985, %r11984;
	// end inline asm
	// begin inline asm
	mov.b32 %r11991, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11992, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11993, %r11770, %r11991;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11996, %r11993, %r11992;
	// end inline asm
	// begin inline asm
	mov.b32 %r11999, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r12000, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12001, %r11773, %r11999;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12004, %r12001, %r12000;
	// end inline asm
	// begin inline asm
	mov.b32 %r12007, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r12008, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12009, %r11776, %r12007;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12012, %r12009, %r12008;
	// end inline asm
	// begin inline asm
	mov.b32 %r12015, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r12016, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12017, %r11779, %r12015;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12020, %r12017, %r12016;
	// end inline asm
	// begin inline asm
	mov.b32 %r12023, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r12024, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12025, %r11782, %r12023;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12028, %r12025, %r12024;
	// end inline asm
	// begin inline asm
	mov.b32 %r12031, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r12032, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12033, %r11785, %r12031;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12036, %r12033, %r12032;
	// end inline asm
	// begin inline asm
	mov.b32 %r12039, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r12040, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12041, %r11788, %r12039;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12044, %r12041, %r12040;
	// end inline asm
	// begin inline asm
	mov.b32 %r12050, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12048, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12049, %r12050, %r12048;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12052, %r11796, %r12049;
	// end inline asm
	// begin inline asm
	mov.b32 %r12055, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12056, %r12050, %r12055;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12059, %r11804, %r12056;
	// end inline asm
	// begin inline asm
	mov.b32 %r12062, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12063, %r12050, %r12062;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12066, %r11812, %r12063;
	// end inline asm
	// begin inline asm
	mov.b32 %r12069, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12070, %r12050, %r12069;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12073, %r11820, %r12070;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12076, %r12052, %r12066, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12080, %r12059, %r12073, %r4447;
	// end inline asm
	shl.b32 	%r12087, %r12080, 4;
	// begin inline asm
	lop3.b32 %r12084, %r4453, %r12076, %r12087, 202;
	// end inline asm
	xor.b32  	%r16215, %r12084, -2004318072;
	// begin inline asm
	mov.b32 %r12091, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12089, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12090, %r12091, %r12089;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12093, %r11828, %r12090;
	// end inline asm
	// begin inline asm
	mov.b32 %r12096, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12097, %r12091, %r12096;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12100, %r11836, %r12097;
	// end inline asm
	// begin inline asm
	mov.b32 %r12103, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12104, %r12091, %r12103;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12107, %r11844, %r12104;
	// end inline asm
	// begin inline asm
	mov.b32 %r12110, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12111, %r12091, %r12110;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12114, %r11852, %r12111;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12117, %r12093, %r12107, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12121, %r12100, %r12114, %r4447;
	// end inline asm
	shl.b32 	%r12128, %r12121, 4;
	// begin inline asm
	lop3.b32 %r12125, %r4453, %r12117, %r12128, 202;
	// end inline asm
	xor.b32  	%r16216, %r12125, -2004318072;
	// begin inline asm
	mov.b32 %r12132, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12130, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12131, %r12132, %r12130;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12134, %r11860, %r12131;
	// end inline asm
	// begin inline asm
	mov.b32 %r12137, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12138, %r12132, %r12137;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12141, %r11868, %r12138;
	// end inline asm
	// begin inline asm
	mov.b32 %r12144, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12145, %r12132, %r12144;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12148, %r11876, %r12145;
	// end inline asm
	// begin inline asm
	mov.b32 %r12151, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12152, %r12132, %r12151;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12155, %r11884, %r12152;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12158, %r12134, %r12148, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12162, %r12141, %r12155, %r4447;
	// end inline asm
	shl.b32 	%r12169, %r12162, 4;
	// begin inline asm
	lop3.b32 %r12166, %r4453, %r12158, %r12169, 202;
	// end inline asm
	xor.b32  	%r16217, %r12166, -2004318072;
	// begin inline asm
	mov.b32 %r12173, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12171, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12172, %r12173, %r12171;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12175, %r11892, %r12172;
	// end inline asm
	// begin inline asm
	mov.b32 %r12178, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12179, %r12173, %r12178;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12182, %r11900, %r12179;
	// end inline asm
	// begin inline asm
	mov.b32 %r12185, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12186, %r12173, %r12185;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12189, %r11908, %r12186;
	// end inline asm
	// begin inline asm
	mov.b32 %r12192, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12193, %r12173, %r12192;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12196, %r11916, %r12193;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12199, %r12175, %r12189, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12203, %r12182, %r12196, %r4447;
	// end inline asm
	shl.b32 	%r12210, %r12203, 4;
	// begin inline asm
	lop3.b32 %r12207, %r4453, %r12199, %r12210, 202;
	// end inline asm
	xor.b32  	%r16218, %r12207, -2004318072;
	// begin inline asm
	mov.b32 %r12214, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12212, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12213, %r12214, %r12212;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12216, %r11924, %r12213;
	// end inline asm
	// begin inline asm
	mov.b32 %r12219, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12220, %r12214, %r12219;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12223, %r11932, %r12220;
	// end inline asm
	// begin inline asm
	mov.b32 %r12226, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12227, %r12214, %r12226;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12230, %r11940, %r12227;
	// end inline asm
	// begin inline asm
	mov.b32 %r12233, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12234, %r12214, %r12233;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12237, %r11948, %r12234;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12240, %r12216, %r12230, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12244, %r12223, %r12237, %r4447;
	// end inline asm
	shl.b32 	%r12251, %r12244, 4;
	// begin inline asm
	lop3.b32 %r12248, %r4453, %r12240, %r12251, 202;
	// end inline asm
	xor.b32  	%r16219, %r12248, -2004318072;
	// begin inline asm
	mov.b32 %r12255, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12253, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12254, %r12255, %r12253;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12257, %r11956, %r12254;
	// end inline asm
	// begin inline asm
	mov.b32 %r12260, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12261, %r12255, %r12260;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12264, %r11964, %r12261;
	// end inline asm
	// begin inline asm
	mov.b32 %r12267, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12268, %r12255, %r12267;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12271, %r11972, %r12268;
	// end inline asm
	// begin inline asm
	mov.b32 %r12274, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12275, %r12255, %r12274;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12278, %r11980, %r12275;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12281, %r12257, %r12271, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12285, %r12264, %r12278, %r4447;
	// end inline asm
	shl.b32 	%r12292, %r12285, 4;
	// begin inline asm
	lop3.b32 %r12289, %r4453, %r12281, %r12292, 202;
	// end inline asm
	xor.b32  	%r16220, %r12289, -2004318072;
	// begin inline asm
	mov.b32 %r12296, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12294, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12295, %r12296, %r12294;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12298, %r11988, %r12295;
	// end inline asm
	// begin inline asm
	mov.b32 %r12301, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12302, %r12296, %r12301;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12305, %r11996, %r12302;
	// end inline asm
	// begin inline asm
	mov.b32 %r12308, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12309, %r12296, %r12308;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12312, %r12004, %r12309;
	// end inline asm
	// begin inline asm
	mov.b32 %r12315, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12316, %r12296, %r12315;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12319, %r12012, %r12316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12322, %r12298, %r12312, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12326, %r12305, %r12319, %r4447;
	// end inline asm
	shl.b32 	%r12333, %r12326, 4;
	// begin inline asm
	lop3.b32 %r12330, %r4453, %r12322, %r12333, 202;
	// end inline asm
	xor.b32  	%r16221, %r12330, -2004318072;
	// begin inline asm
	mov.b32 %r12337, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12335, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12336, %r12337, %r12335;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12339, %r12020, %r12336;
	// end inline asm
	// begin inline asm
	mov.b32 %r12342, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12343, %r12337, %r12342;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12346, %r12028, %r12343;
	// end inline asm
	// begin inline asm
	mov.b32 %r12349, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12350, %r12337, %r12349;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12353, %r12036, %r12350;
	// end inline asm
	// begin inline asm
	mov.b32 %r12356, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12357, %r12337, %r12356;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12360, %r12044, %r12357;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12363, %r12339, %r12353, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12367, %r12346, %r12360, %r4447;
	// end inline asm
	shl.b32 	%r12374, %r12367, 4;
	// begin inline asm
	lop3.b32 %r12371, %r4453, %r12363, %r12374, 202;
	// end inline asm
	xor.b32  	%r16222, %r12371, -2004318072;
	st.shared.u32 	[%rd115], %r16215;
	st.shared.u32 	[%rd116], %r16216;
	st.shared.u32 	[%rd117], %r16217;
	st.shared.u32 	[%rd118], %r16218;
	st.shared.u32 	[%rd119], %r16219;
	st.shared.u32 	[%rd120], %r16220;
	st.shared.u32 	[%rd121], %r16221;
	st.shared.u32 	[%rd122], %r16222;
	ld.shared.u32 	%r16389, [%rd107];
	ld.shared.u32 	%r16390, [%rd108];
	ld.shared.u32 	%r16391, [%rd109];
	ld.shared.u32 	%r16392, [%rd110];
	ld.shared.u32 	%r16401, [%rd111];
	ld.shared.u32 	%r16402, [%rd112];
	ld.shared.u32 	%r16403, [%rd113];
	ld.shared.u32 	%r16404, [%rd114];
	// begin inline asm
	mov.b32 %r12380, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12391, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12379, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r12377, %r930, %r12379, %r12380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12381, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12382, %r12380, %r12381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12385, %r12377, %r12382;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12388, %r941, %r12379, %r12391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12392, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12393, %r12391, %r12392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12396, %r12388, %r12393;
	// end inline asm
	shr.u32 	%r12401, %r12379, 8;
	// begin inline asm
	lop3.b32 %r12399, %r930, %r12401, %r12380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12403, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12404, %r12380, %r12403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12407, %r12399, %r12404;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12410, %r941, %r12401, %r12391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12414, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12415, %r12391, %r12414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12418, %r12410, %r12415;
	// end inline asm
	// begin inline asm
	mov.b32 %r12426, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12437, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12425, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r12423, %r930, %r12425, %r12426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12427, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12428, %r12426, %r12427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12431, %r12423, %r12428;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12434, %r941, %r12425, %r12437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12438, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12439, %r12437, %r12438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12442, %r12434, %r12439;
	// end inline asm
	shr.u32 	%r12447, %r12425, 8;
	// begin inline asm
	lop3.b32 %r12445, %r930, %r12447, %r12426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12449, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12450, %r12426, %r12449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12453, %r12445, %r12450;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12456, %r941, %r12447, %r12437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12460, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12461, %r12437, %r12460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12464, %r12456, %r12461;
	// end inline asm
	// begin inline asm
	mov.b32 %r12472, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12483, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12471, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r12469, %r930, %r12471, %r12472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12473, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12474, %r12472, %r12473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12477, %r12469, %r12474;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12480, %r941, %r12471, %r12483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12484, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12485, %r12483, %r12484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12488, %r12480, %r12485;
	// end inline asm
	shr.u32 	%r12493, %r12471, 8;
	// begin inline asm
	lop3.b32 %r12491, %r930, %r12493, %r12472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12495, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12496, %r12472, %r12495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12499, %r12491, %r12496;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12502, %r941, %r12493, %r12483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12506, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12507, %r12483, %r12506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12510, %r12502, %r12507;
	// end inline asm
	// begin inline asm
	mov.b32 %r12518, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12529, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12517, %r16392, -2004318072;
	// begin inline asm
	lop3.b32 %r12515, %r930, %r12517, %r12518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12519, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12520, %r12518, %r12519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12523, %r12515, %r12520;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12526, %r941, %r12517, %r12529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12530, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12531, %r12529, %r12530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12534, %r12526, %r12531;
	// end inline asm
	shr.u32 	%r12539, %r12517, 8;
	// begin inline asm
	lop3.b32 %r12537, %r930, %r12539, %r12518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12541, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12542, %r12518, %r12541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12545, %r12537, %r12542;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12548, %r941, %r12539, %r12529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12552, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12553, %r12529, %r12552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12556, %r12548, %r12553;
	// end inline asm
	// begin inline asm
	mov.b32 %r12564, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12575, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12563, %r16401, -2004318072;
	// begin inline asm
	lop3.b32 %r12561, %r930, %r12563, %r12564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12565, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12566, %r12564, %r12565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12569, %r12561, %r12566;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12572, %r941, %r12563, %r12575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12576, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12577, %r12575, %r12576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12580, %r12572, %r12577;
	// end inline asm
	shr.u32 	%r12585, %r12563, 8;
	// begin inline asm
	lop3.b32 %r12583, %r930, %r12585, %r12564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12587, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12588, %r12564, %r12587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12591, %r12583, %r12588;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12594, %r941, %r12585, %r12575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12598, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12599, %r12575, %r12598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12602, %r12594, %r12599;
	// end inline asm
	// begin inline asm
	mov.b32 %r12610, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12621, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12609, %r16402, -2004318072;
	// begin inline asm
	lop3.b32 %r12607, %r930, %r12609, %r12610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12611, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12612, %r12610, %r12611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12615, %r12607, %r12612;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12618, %r941, %r12609, %r12621, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12622, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12623, %r12621, %r12622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12626, %r12618, %r12623;
	// end inline asm
	shr.u32 	%r12631, %r12609, 8;
	// begin inline asm
	lop3.b32 %r12629, %r930, %r12631, %r12610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12633, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12634, %r12610, %r12633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12637, %r12629, %r12634;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12640, %r941, %r12631, %r12621, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12644, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12645, %r12621, %r12644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12648, %r12640, %r12645;
	// end inline asm
	// begin inline asm
	mov.b32 %r12656, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12667, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12655, %r16403, -2004318072;
	// begin inline asm
	lop3.b32 %r12653, %r930, %r12655, %r12656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12657, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12658, %r12656, %r12657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12661, %r12653, %r12658;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12664, %r941, %r12655, %r12667, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12668, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12669, %r12667, %r12668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12672, %r12664, %r12669;
	// end inline asm
	shr.u32 	%r12677, %r12655, 8;
	// begin inline asm
	lop3.b32 %r12675, %r930, %r12677, %r12656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12679, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12680, %r12656, %r12679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12683, %r12675, %r12680;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12686, %r941, %r12677, %r12667, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12690, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12691, %r12667, %r12690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12694, %r12686, %r12691;
	// end inline asm
	// begin inline asm
	mov.b32 %r12702, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12713, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12701, %r16404, -2004318072;
	// begin inline asm
	lop3.b32 %r12699, %r930, %r12701, %r12702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12703, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12704, %r12702, %r12703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12707, %r12699, %r12704;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12710, %r941, %r12701, %r12713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12714, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12715, %r12713, %r12714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12718, %r12710, %r12715;
	// end inline asm
	shr.u32 	%r12723, %r12701, 8;
	// begin inline asm
	lop3.b32 %r12721, %r930, %r12723, %r12702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12725, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12726, %r12702, %r12725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12729, %r12721, %r12726;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12732, %r941, %r12723, %r12713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12736, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12737, %r12713, %r12736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12740, %r12732, %r12737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12743, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12745, %r12743, %r12385;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12748, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12750, %r12748, %r12396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12753, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12755, %r12753, %r12407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12758, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12760, %r12758, %r12418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12763, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12765, %r12763, %r12431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12768, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12770, %r12768, %r12442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12773, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12775, %r12773, %r12453;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12778, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12780, %r12778, %r12464;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12783, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12785, %r12783, %r12477;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12788, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12790, %r12788, %r12488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12793, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12795, %r12793, %r12499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12798, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12800, %r12798, %r12510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12803, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12805, %r12803, %r12523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12808, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12810, %r12808, %r12534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12813, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12815, %r12813, %r12545;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12818, %r408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12820, %r12818, %r12556;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12823, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12825, %r12823, %r12569;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12828, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12830, %r12828, %r12580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12833, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12835, %r12833, %r12591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12838, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12840, %r12838, %r12602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12843, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12845, %r12843, %r12615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12848, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12850, %r12848, %r12626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12853, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12855, %r12853, %r12637;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12858, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12860, %r12858, %r12648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12863, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12865, %r12863, %r12661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12868, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12870, %r12868, %r12672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12873, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12875, %r12873, %r12683;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12878, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12880, %r12878, %r12694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12883, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12885, %r12883, %r12707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12888, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12890, %r12888, %r12718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12893, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12895, %r12893, %r12729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12898, %r426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12900, %r12898, %r12740;
	// end inline asm
	// begin inline asm
	mov.b32 %r12908, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12919, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12905, %r930, %r931, %r12908, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12909, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12910, %r12908, %r12909;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12913, %r12905, %r12910;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12916, %r941, %r931, %r12919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12920, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12921, %r12919, %r12920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12924, %r12916, %r12921;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12927, %r930, %r953, %r12908, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12931, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12932, %r12908, %r12931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12935, %r12927, %r12932;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12938, %r941, %r953, %r12919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12942, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12943, %r12919, %r12942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12946, %r12938, %r12943;
	// end inline asm
	// begin inline asm
	mov.b32 %r12954, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12965, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12951, %r930, %r977, %r12954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12955, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12956, %r12954, %r12955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12959, %r12951, %r12956;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12962, %r941, %r977, %r12965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12966, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12967, %r12965, %r12966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12970, %r12962, %r12967;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12973, %r930, %r999, %r12954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12977, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12978, %r12954, %r12977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12981, %r12973, %r12978;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12984, %r941, %r999, %r12965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12988, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12989, %r12965, %r12988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12992, %r12984, %r12989;
	// end inline asm
	// begin inline asm
	mov.b32 %r13000, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13011, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12997, %r930, %r1023, %r13000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13001, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13002, %r13000, %r13001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13005, %r12997, %r13002;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13008, %r941, %r1023, %r13011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13012, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13013, %r13011, %r13012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13016, %r13008, %r13013;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13019, %r930, %r1045, %r13000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13023, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13024, %r13000, %r13023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13027, %r13019, %r13024;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13030, %r941, %r1045, %r13011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13034, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13035, %r13011, %r13034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13038, %r13030, %r13035;
	// end inline asm
	// begin inline asm
	mov.b32 %r13046, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13057, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13043, %r930, %r1069, %r13046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13047, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13048, %r13046, %r13047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13051, %r13043, %r13048;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13054, %r941, %r1069, %r13057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13058, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13059, %r13057, %r13058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13062, %r13054, %r13059;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13065, %r930, %r1091, %r13046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13069, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13070, %r13046, %r13069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13073, %r13065, %r13070;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13076, %r941, %r1091, %r13057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13080, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13081, %r13057, %r13080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13084, %r13076, %r13081;
	// end inline asm
	// begin inline asm
	mov.b32 %r13092, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13103, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13089, %r930, %r1115, %r13092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13093, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13094, %r13092, %r13093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13097, %r13089, %r13094;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13100, %r941, %r1115, %r13103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13104, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13105, %r13103, %r13104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13108, %r13100, %r13105;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13111, %r930, %r1137, %r13092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13115, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13116, %r13092, %r13115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13119, %r13111, %r13116;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13122, %r941, %r1137, %r13103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13126, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13127, %r13103, %r13126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13130, %r13122, %r13127;
	// end inline asm
	// begin inline asm
	mov.b32 %r13138, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13149, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13135, %r930, %r1161, %r13138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13139, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13140, %r13138, %r13139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13143, %r13135, %r13140;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13146, %r941, %r1161, %r13149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13150, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13151, %r13149, %r13150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13154, %r13146, %r13151;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13157, %r930, %r1183, %r13138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13161, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13162, %r13138, %r13161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13165, %r13157, %r13162;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13168, %r941, %r1183, %r13149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13172, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13173, %r13149, %r13172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13176, %r13168, %r13173;
	// end inline asm
	// begin inline asm
	mov.b32 %r13184, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13195, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13181, %r930, %r1207, %r13184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13185, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13186, %r13184, %r13185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13189, %r13181, %r13186;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13192, %r941, %r1207, %r13195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13196, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13197, %r13195, %r13196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13200, %r13192, %r13197;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13203, %r930, %r1229, %r13184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13207, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13208, %r13184, %r13207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13211, %r13203, %r13208;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13214, %r941, %r1229, %r13195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13218, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13219, %r13195, %r13218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13222, %r13214, %r13219;
	// end inline asm
	// begin inline asm
	mov.b32 %r13230, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13241, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13227, %r930, %r1253, %r13230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13231, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13232, %r13230, %r13231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13235, %r13227, %r13232;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13238, %r941, %r1253, %r13241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13242, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13243, %r13241, %r13242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13246, %r13238, %r13243;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13249, %r930, %r1275, %r13230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13253, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13254, %r13230, %r13253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13257, %r13249, %r13254;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13260, %r941, %r1275, %r13241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13264, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13265, %r13241, %r13264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13268, %r13260, %r13265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13271, %r300, %r12913, %r12745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13275, %r300, %r12924, %r12750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13279, %r300, %r12935, %r12755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13283, %r300, %r12946, %r12760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13287, %r300, %r12959, %r12765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13291, %r300, %r12970, %r12770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13295, %r300, %r12981, %r12775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13299, %r300, %r12992, %r12780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13303, %r300, %r13005, %r12785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13307, %r300, %r13016, %r12790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13311, %r300, %r13027, %r12795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13315, %r300, %r13038, %r12800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13319, %r300, %r13051, %r12805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13323, %r300, %r13062, %r12810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13327, %r300, %r13073, %r12815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13331, %r300, %r13084, %r12820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13335, %r318, %r13097, %r12825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13339, %r318, %r13108, %r12830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13343, %r318, %r13119, %r12835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13347, %r318, %r13130, %r12840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13351, %r318, %r13143, %r12845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13355, %r318, %r13154, %r12850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13359, %r318, %r13165, %r12855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13363, %r318, %r13176, %r12860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13367, %r318, %r13189, %r12865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13371, %r318, %r13200, %r12870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13375, %r318, %r13211, %r12875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13379, %r318, %r13222, %r12880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13383, %r318, %r13235, %r12885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13387, %r318, %r13246, %r12890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13391, %r318, %r13257, %r12895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13395, %r318, %r13268, %r12900;
	// end inline asm
	// begin inline asm
	mov.b32 %r13404, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13415, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13401, %r930, %r4747, %r13404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13405, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13406, %r13404, %r13405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13409, %r13401, %r13406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13412, %r941, %r4747, %r13415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13416, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13417, %r13415, %r13416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13420, %r13412, %r13417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13423, %r930, %r4769, %r13404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13427, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13428, %r13404, %r13427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13431, %r13423, %r13428;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13434, %r941, %r4769, %r13415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13438, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13439, %r13415, %r13438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13442, %r13434, %r13439;
	// end inline asm
	// begin inline asm
	mov.b32 %r13450, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13461, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13447, %r930, %r4793, %r13450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13451, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13452, %r13450, %r13451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13455, %r13447, %r13452;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13458, %r941, %r4793, %r13461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13462, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13463, %r13461, %r13462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13466, %r13458, %r13463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13469, %r930, %r4815, %r13450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13473, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13474, %r13450, %r13473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13477, %r13469, %r13474;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13480, %r941, %r4815, %r13461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13484, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13485, %r13461, %r13484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13488, %r13480, %r13485;
	// end inline asm
	// begin inline asm
	mov.b32 %r13496, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13507, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13493, %r930, %r4839, %r13496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13497, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13498, %r13496, %r13497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13501, %r13493, %r13498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13504, %r941, %r4839, %r13507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13508, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13509, %r13507, %r13508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13512, %r13504, %r13509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13515, %r930, %r4861, %r13496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13519, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13520, %r13496, %r13519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13523, %r13515, %r13520;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13526, %r941, %r4861, %r13507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13530, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13531, %r13507, %r13530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13534, %r13526, %r13531;
	// end inline asm
	// begin inline asm
	mov.b32 %r13542, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13553, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13539, %r930, %r4885, %r13542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13543, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13544, %r13542, %r13543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13547, %r13539, %r13544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13550, %r941, %r4885, %r13553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13554, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13555, %r13553, %r13554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13558, %r13550, %r13555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13561, %r930, %r4907, %r13542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13565, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13566, %r13542, %r13565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13569, %r13561, %r13566;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13572, %r941, %r4907, %r13553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13576, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13577, %r13553, %r13576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13580, %r13572, %r13577;
	// end inline asm
	// begin inline asm
	mov.b32 %r13588, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13599, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13585, %r930, %r4931, %r13588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13589, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13590, %r13588, %r13589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13593, %r13585, %r13590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13596, %r941, %r4931, %r13599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13600, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13601, %r13599, %r13600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13604, %r13596, %r13601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13607, %r930, %r4953, %r13588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13611, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13612, %r13588, %r13611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13615, %r13607, %r13612;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13618, %r941, %r4953, %r13599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13622, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13623, %r13599, %r13622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13626, %r13618, %r13623;
	// end inline asm
	// begin inline asm
	mov.b32 %r13634, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13645, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13631, %r930, %r4977, %r13634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13635, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13636, %r13634, %r13635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13639, %r13631, %r13636;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13642, %r941, %r4977, %r13645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13646, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13647, %r13645, %r13646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13650, %r13642, %r13647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13653, %r930, %r4999, %r13634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13657, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13658, %r13634, %r13657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13661, %r13653, %r13658;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13664, %r941, %r4999, %r13645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13668, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13669, %r13645, %r13668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13672, %r13664, %r13669;
	// end inline asm
	// begin inline asm
	mov.b32 %r13680, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13691, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13677, %r930, %r5023, %r13680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13681, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13682, %r13680, %r13681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13685, %r13677, %r13682;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13688, %r941, %r5023, %r13691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13692, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13693, %r13691, %r13692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13696, %r13688, %r13693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13699, %r930, %r5045, %r13680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13703, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13704, %r13680, %r13703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13707, %r13699, %r13704;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13710, %r941, %r5045, %r13691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13714, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13715, %r13691, %r13714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13718, %r13710, %r13715;
	// end inline asm
	// begin inline asm
	mov.b32 %r13726, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13737, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13723, %r930, %r5069, %r13726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13727, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13728, %r13726, %r13727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13731, %r13723, %r13728;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13734, %r941, %r5069, %r13737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13738, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13739, %r13737, %r13738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13742, %r13734, %r13739;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13745, %r930, %r5091, %r13726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13749, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13750, %r13726, %r13749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13753, %r13745, %r13750;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13756, %r941, %r5091, %r13737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13760, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13761, %r13737, %r13760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13764, %r13756, %r13761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13767, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13769, %r13767, %r13409, %r13271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13773, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13775, %r13773, %r13420, %r13275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13779, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13781, %r13779, %r13431, %r13279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13785, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13787, %r13785, %r13442, %r13283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13791, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13793, %r13791, %r13455, %r13287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13797, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13799, %r13797, %r13466, %r13291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13803, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13805, %r13803, %r13477, %r13295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13809, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13811, %r13809, %r13488, %r13299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13815, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13817, %r13815, %r13501, %r13303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13821, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13823, %r13821, %r13512, %r13307;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13827, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13829, %r13827, %r13523, %r13311;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13833, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13835, %r13833, %r13534, %r13315;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13839, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13841, %r13839, %r13547, %r13319;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13845, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13847, %r13845, %r13558, %r13323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13851, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13853, %r13851, %r13569, %r13327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13857, %r336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13859, %r13857, %r13580, %r13331;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13863, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13865, %r13863, %r13593, %r13335;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13869, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13871, %r13869, %r13604, %r13339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13875, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13877, %r13875, %r13615, %r13343;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13881, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13883, %r13881, %r13626, %r13347;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13887, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13889, %r13887, %r13639, %r13351;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13893, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13895, %r13893, %r13650, %r13355;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13899, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13901, %r13899, %r13661, %r13359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13905, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13907, %r13905, %r13672, %r13363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13911, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13913, %r13911, %r13685, %r13367;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13917, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13919, %r13917, %r13696, %r13371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13923, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13925, %r13923, %r13707, %r13375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13929, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13931, %r13929, %r13718, %r13379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13935, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13937, %r13935, %r13731, %r13383;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13941, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13943, %r13941, %r13742, %r13387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13947, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13949, %r13947, %r13753, %r13391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13953, %r354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13955, %r13953, %r13764, %r13395;
	// end inline asm
	// begin inline asm
	mov.b32 %r13964, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13975, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13961, %r930, %r8563, %r13964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13965, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13966, %r13964, %r13965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13969, %r13961, %r13966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13972, %r941, %r8563, %r13975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13976, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13977, %r13975, %r13976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13980, %r13972, %r13977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13983, %r930, %r8585, %r13964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13987, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13988, %r13964, %r13987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13991, %r13983, %r13988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13994, %r941, %r8585, %r13975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13998, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13999, %r13975, %r13998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14002, %r13994, %r13999;
	// end inline asm
	// begin inline asm
	mov.b32 %r14010, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14021, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14007, %r930, %r8609, %r14010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14011, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14012, %r14010, %r14011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14015, %r14007, %r14012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14018, %r941, %r8609, %r14021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14022, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14023, %r14021, %r14022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14026, %r14018, %r14023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14029, %r930, %r8631, %r14010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14033, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14034, %r14010, %r14033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14037, %r14029, %r14034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14040, %r941, %r8631, %r14021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14044, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14045, %r14021, %r14044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14048, %r14040, %r14045;
	// end inline asm
	// begin inline asm
	mov.b32 %r14056, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14067, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14053, %r930, %r8655, %r14056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14057, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14058, %r14056, %r14057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14061, %r14053, %r14058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14064, %r941, %r8655, %r14067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14068, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14069, %r14067, %r14068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14072, %r14064, %r14069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14075, %r930, %r8677, %r14056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14079, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14080, %r14056, %r14079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14083, %r14075, %r14080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14086, %r941, %r8677, %r14067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14090, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14091, %r14067, %r14090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14094, %r14086, %r14091;
	// end inline asm
	// begin inline asm
	mov.b32 %r14102, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14113, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14099, %r930, %r8701, %r14102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14103, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14104, %r14102, %r14103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14107, %r14099, %r14104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14110, %r941, %r8701, %r14113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14114, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14115, %r14113, %r14114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14118, %r14110, %r14115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14121, %r930, %r8723, %r14102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14125, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14126, %r14102, %r14125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14129, %r14121, %r14126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14132, %r941, %r8723, %r14113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14136, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14137, %r14113, %r14136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14140, %r14132, %r14137;
	// end inline asm
	// begin inline asm
	mov.b32 %r14148, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14159, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14145, %r930, %r8747, %r14148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14149, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14150, %r14148, %r14149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14153, %r14145, %r14150;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14156, %r941, %r8747, %r14159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14160, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14161, %r14159, %r14160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14164, %r14156, %r14161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14167, %r930, %r8769, %r14148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14171, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14172, %r14148, %r14171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14175, %r14167, %r14172;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14178, %r941, %r8769, %r14159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14182, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14183, %r14159, %r14182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14186, %r14178, %r14183;
	// end inline asm
	// begin inline asm
	mov.b32 %r14194, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14205, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14191, %r930, %r8793, %r14194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14195, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14196, %r14194, %r14195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14199, %r14191, %r14196;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14202, %r941, %r8793, %r14205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14206, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14207, %r14205, %r14206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14210, %r14202, %r14207;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14213, %r930, %r8815, %r14194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14217, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14218, %r14194, %r14217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14221, %r14213, %r14218;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14224, %r941, %r8815, %r14205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14228, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14229, %r14205, %r14228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14232, %r14224, %r14229;
	// end inline asm
	// begin inline asm
	mov.b32 %r14240, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14251, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14237, %r930, %r8839, %r14240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14241, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14242, %r14240, %r14241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14245, %r14237, %r14242;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14248, %r941, %r8839, %r14251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14252, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14253, %r14251, %r14252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14256, %r14248, %r14253;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14259, %r930, %r8861, %r14240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14263, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14264, %r14240, %r14263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14267, %r14259, %r14264;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14270, %r941, %r8861, %r14251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14274, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14275, %r14251, %r14274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14278, %r14270, %r14275;
	// end inline asm
	// begin inline asm
	mov.b32 %r14286, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14297, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14283, %r930, %r8885, %r14286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14287, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14288, %r14286, %r14287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14291, %r14283, %r14288;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14294, %r941, %r8885, %r14297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14298, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14299, %r14297, %r14298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14302, %r14294, %r14299;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14305, %r930, %r8907, %r14286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14309, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14310, %r14286, %r14309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14313, %r14305, %r14310;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14316, %r941, %r8907, %r14297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14320, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14321, %r14297, %r14320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14324, %r14316, %r14321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14462, %r372, %r13969, %r13769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14459, %r372, %r13980, %r13775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14471, %r372, %r13991, %r13781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14468, %r372, %r14002, %r13787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14480, %r372, %r14015, %r13793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14477, %r372, %r14026, %r13799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14489, %r372, %r14037, %r13805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14486, %r372, %r14048, %r13811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14498, %r372, %r14061, %r13817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14495, %r372, %r14072, %r13823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14507, %r372, %r14083, %r13829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14504, %r372, %r14094, %r13835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14516, %r372, %r14107, %r13841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14513, %r372, %r14118, %r13847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14525, %r372, %r14129, %r13853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14522, %r372, %r14140, %r13859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14534, %r390, %r14153, %r13865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14531, %r390, %r14164, %r13871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14543, %r390, %r14175, %r13877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14540, %r390, %r14186, %r13883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14552, %r390, %r14199, %r13889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14549, %r390, %r14210, %r13895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14561, %r390, %r14221, %r13901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14558, %r390, %r14232, %r13907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14570, %r390, %r14245, %r13913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14567, %r390, %r14256, %r13919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14579, %r390, %r14267, %r13925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14576, %r390, %r14278, %r13931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14588, %r390, %r14291, %r13937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14585, %r390, %r14302, %r13943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14597, %r390, %r14313, %r13949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14594, %r390, %r14324, %r13955;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14455, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14457, %r14455, %r14459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14460, %r454, %r14462, %r14457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14464, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14466, %r14464, %r14468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14469, %r454, %r14471, %r14466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14473, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14475, %r14473, %r14477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14478, %r454, %r14480, %r14475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14482, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14484, %r14482, %r14486;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14487, %r454, %r14489, %r14484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14491, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14493, %r14491, %r14495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14496, %r454, %r14498, %r14493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14500, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14502, %r14500, %r14504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14505, %r454, %r14507, %r14502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14509, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14511, %r14509, %r14513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14514, %r454, %r14516, %r14511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14518, %r460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14520, %r14518, %r14522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14523, %r454, %r14525, %r14520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14527, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14529, %r14527, %r14531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14532, %r457, %r14534, %r14529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14536, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14538, %r14536, %r14540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14541, %r457, %r14543, %r14538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14545, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14547, %r14545, %r14549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14550, %r457, %r14552, %r14547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14554, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14556, %r14554, %r14558;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14559, %r457, %r14561, %r14556;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14563, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14565, %r14563, %r14567;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14568, %r457, %r14570, %r14565;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14572, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14574, %r14572, %r14576;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14577, %r457, %r14579, %r14574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14581, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14583, %r14581, %r14585;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14586, %r457, %r14588, %r14583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14590, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14592, %r14590, %r14594;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14595, %r457, %r14597, %r14592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14599, %r460, %r14462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14602, %r454, %r14459, %r14599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14606, %r460, %r14471;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14609, %r454, %r14468, %r14606;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14613, %r460, %r14480;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14616, %r454, %r14477, %r14613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14620, %r460, %r14489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14623, %r454, %r14486, %r14620;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14627, %r460, %r14498;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14630, %r454, %r14495, %r14627;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14634, %r460, %r14507;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14637, %r454, %r14504, %r14634;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14641, %r460, %r14516;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14644, %r454, %r14513, %r14641;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14648, %r460, %r14525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14651, %r454, %r14522, %r14648;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14655, %r463, %r14534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14658, %r457, %r14531, %r14655;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14662, %r463, %r14543;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14665, %r457, %r14540, %r14662;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14669, %r463, %r14552;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14672, %r457, %r14549, %r14669;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14676, %r463, %r14561;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14679, %r457, %r14558, %r14676;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14683, %r463, %r14570;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14686, %r457, %r14567, %r14683;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14690, %r463, %r14579;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14693, %r457, %r14576, %r14690;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14697, %r463, %r14588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14700, %r457, %r14585, %r14697;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14704, %r463, %r14597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14707, %r457, %r14594, %r14704;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14878, %r14875}, {%r509, %r515, %r512, %r518}, {%r14460, %r14602}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14887, %r14884}, {%r509, %r515, %r512, %r518}, {%r14469, %r14609}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14896, %r14893}, {%r509, %r515, %r512, %r518}, {%r14478, %r14616}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14905, %r14902}, {%r509, %r515, %r512, %r518}, {%r14487, %r14623}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14914, %r14911}, {%r509, %r515, %r512, %r518}, {%r14496, %r14630}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14923, %r14920}, {%r509, %r515, %r512, %r518}, {%r14505, %r14637}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14932, %r14929}, {%r509, %r515, %r512, %r518}, {%r14514, %r14644}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14941, %r14938}, {%r509, %r515, %r512, %r518}, {%r14523, %r14651}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14950, %r14947}, {%r509, %r515, %r512, %r518}, {%r14532, %r14658}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14959, %r14956}, {%r509, %r515, %r512, %r518}, {%r14541, %r14665}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14968, %r14965}, {%r509, %r515, %r512, %r518}, {%r14550, %r14672}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14977, %r14974}, {%r509, %r515, %r512, %r518}, {%r14559, %r14679}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14986, %r14983}, {%r509, %r515, %r512, %r518}, {%r14568, %r14686}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14995, %r14992}, {%r509, %r515, %r512, %r518}, {%r14577, %r14693}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15004, %r15001}, {%r509, %r515, %r512, %r518}, {%r14586, %r14700}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15013, %r15010}, {%r509, %r515, %r512, %r518}, {%r14595, %r14707}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14871, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14873, %r14871, %r14875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14876, %r559, %r14878, %r14873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14880, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14882, %r14880, %r14884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14885, %r559, %r14887, %r14882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14889, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14891, %r14889, %r14893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14894, %r559, %r14896, %r14891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14898, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14900, %r14898, %r14902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14903, %r559, %r14905, %r14900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14907, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14909, %r14907, %r14911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14912, %r559, %r14914, %r14909;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14916, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14918, %r14916, %r14920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14921, %r559, %r14923, %r14918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14925, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14927, %r14925, %r14929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14930, %r559, %r14932, %r14927;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14934, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14936, %r14934, %r14938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14939, %r559, %r14941, %r14936;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14943, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14945, %r14943, %r14947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14948, %r559, %r14950, %r14945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14952, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14954, %r14952, %r14956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14957, %r559, %r14959, %r14954;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14961, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14963, %r14961, %r14965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14966, %r559, %r14968, %r14963;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14970, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14972, %r14970, %r14974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14975, %r559, %r14977, %r14972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14979, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14981, %r14979, %r14983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14984, %r559, %r14986, %r14981;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14988, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14990, %r14988, %r14992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14993, %r559, %r14995, %r14990;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14997, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14999, %r14997, %r15001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15002, %r559, %r15004, %r14999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r15006, %r562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15008, %r15006, %r15010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15011, %r559, %r15013, %r15008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15015, %r562, %r14878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15018, %r559, %r14875, %r15015;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15022, %r562, %r14887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15025, %r559, %r14884, %r15022;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15029, %r562, %r14896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15032, %r559, %r14893, %r15029;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15036, %r562, %r14905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15039, %r559, %r14902, %r15036;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15043, %r562, %r14914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15046, %r559, %r14911, %r15043;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15050, %r562, %r14923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15053, %r559, %r14920, %r15050;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15057, %r562, %r14932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15060, %r559, %r14929, %r15057;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15064, %r562, %r14941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15067, %r559, %r14938, %r15064;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15071, %r562, %r14950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15074, %r559, %r14947, %r15071;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15078, %r562, %r14959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15081, %r559, %r14956, %r15078;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15085, %r562, %r14968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15088, %r559, %r14965, %r15085;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15092, %r562, %r14977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15095, %r559, %r14974, %r15092;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15099, %r562, %r14986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15102, %r559, %r14983, %r15099;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15106, %r562, %r14995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15109, %r559, %r14992, %r15106;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15113, %r562, %r15004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15116, %r559, %r15001, %r15113;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15120, %r562, %r15013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15123, %r559, %r15010, %r15120;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15416, %r15419}, {%r597, %r603, %r600, %r606}, {%r14876, %r15018}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15422, %r15425}, {%r597, %r603, %r600, %r606}, {%r14885, %r15025}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15428, %r15431}, {%r597, %r603, %r600, %r606}, {%r14894, %r15032}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15434, %r15437}, {%r597, %r603, %r600, %r606}, {%r14903, %r15039}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15440, %r15443}, {%r597, %r603, %r600, %r606}, {%r14912, %r15046}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15446, %r15449}, {%r597, %r603, %r600, %r606}, {%r14921, %r15053}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15452, %r15455}, {%r597, %r603, %r600, %r606}, {%r14930, %r15060}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15458, %r15461}, {%r597, %r603, %r600, %r606}, {%r14939, %r15067}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15417, %r15420}, {%r597, %r603, %r600, %r606}, {%r14948, %r15074}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15423, %r15426}, {%r597, %r603, %r600, %r606}, {%r14957, %r15081}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15429, %r15432}, {%r597, %r603, %r600, %r606}, {%r14966, %r15088}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15435, %r15438}, {%r597, %r603, %r600, %r606}, {%r14975, %r15095}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15441, %r15444}, {%r597, %r603, %r600, %r606}, {%r14984, %r15102}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15447, %r15450}, {%r597, %r603, %r600, %r606}, {%r14993, %r15109}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15453, %r15456}, {%r597, %r603, %r600, %r606}, {%r15002, %r15116}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15459, %r15462}, {%r597, %r603, %r600, %r606}, {%r15011, %r15123}, {%r3271, %r3271};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15415, %r15416, %r15417;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15418, %r15419, %r15420;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15421, %r15422, %r15423;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15424, %r15425, %r15426;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15427, %r15428, %r15429;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15430, %r15431, %r15432;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15433, %r15434, %r15435;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15436, %r15437, %r15438;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15439, %r15440, %r15441;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15442, %r15443, %r15444;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15445, %r15446, %r15447;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15448, %r15449, %r15450;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15451, %r15452, %r15453;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15454, %r15455, %r15456;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15457, %r15458, %r15459;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15460, %r15461, %r15462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15463, %r15416, %r15417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15466, %r15419, %r15420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15469, %r15422, %r15423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15472, %r15425, %r15426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15475, %r15428, %r15429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15478, %r15431, %r15432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15481, %r15434, %r15435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15484, %r15437, %r15438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15487, %r15440, %r15441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15490, %r15443, %r15444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15493, %r15446, %r15447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15496, %r15449, %r15450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15499, %r15452, %r15453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15502, %r15455, %r15456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15505, %r15458, %r15459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15508, %r15461, %r15462;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15511, %r17, %r15415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15514, %r17, %r15418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15517, %r17, %r15421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15520, %r17, %r15424;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15523, %r17, %r15427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15526, %r17, %r15430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15529, %r17, %r15433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15532, %r17, %r15436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15535, %r17, %r15439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15538, %r17, %r15442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15541, %r17, %r15445;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15544, %r17, %r15448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15547, %r17, %r15451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15550, %r17, %r15454;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15553, %r17, %r15457;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15556, %r17, %r15460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15559, %r18, %r15463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15562, %r18, %r15466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15565, %r18, %r15469;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15568, %r18, %r15472;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15571, %r18, %r15475;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15574, %r18, %r15478;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15577, %r18, %r15481;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15580, %r18, %r15484;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15583, %r18, %r15487;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15586, %r18, %r15490;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15589, %r18, %r15493;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15592, %r18, %r15496;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15595, %r18, %r15499;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15598, %r18, %r15502;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15601, %r18, %r15505;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15604, %r18, %r15508;
	// end inline asm
	// begin inline asm
	mov.b32 %r15607, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15608, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15609, %r15511, %r15607;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15612, %r15609, %r15608;
	// end inline asm
	// begin inline asm
	mov.b32 %r15615, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15616, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15617, %r15514, %r15615;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15620, %r15617, %r15616;
	// end inline asm
	// begin inline asm
	mov.b32 %r15623, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15624, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15625, %r15517, %r15623;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15628, %r15625, %r15624;
	// end inline asm
	// begin inline asm
	mov.b32 %r15631, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15632, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15633, %r15520, %r15631;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15636, %r15633, %r15632;
	// end inline asm
	// begin inline asm
	mov.b32 %r15639, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15640, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15641, %r15523, %r15639;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15644, %r15641, %r15640;
	// end inline asm
	// begin inline asm
	mov.b32 %r15647, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15648, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15649, %r15526, %r15647;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15652, %r15649, %r15648;
	// end inline asm
	// begin inline asm
	mov.b32 %r15655, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15656, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15657, %r15529, %r15655;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15660, %r15657, %r15656;
	// end inline asm
	// begin inline asm
	mov.b32 %r15663, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15664, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15665, %r15532, %r15663;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15668, %r15665, %r15664;
	// end inline asm
	// begin inline asm
	mov.b32 %r15671, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15672, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15673, %r15535, %r15671;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15676, %r15673, %r15672;
	// end inline asm
	// begin inline asm
	mov.b32 %r15679, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15680, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15681, %r15538, %r15679;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15684, %r15681, %r15680;
	// end inline asm
	// begin inline asm
	mov.b32 %r15687, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15688, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15689, %r15541, %r15687;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15692, %r15689, %r15688;
	// end inline asm
	// begin inline asm
	mov.b32 %r15695, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15696, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15697, %r15544, %r15695;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15700, %r15697, %r15696;
	// end inline asm
	// begin inline asm
	mov.b32 %r15703, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15704, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15705, %r15547, %r15703;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15708, %r15705, %r15704;
	// end inline asm
	// begin inline asm
	mov.b32 %r15711, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15712, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15713, %r15550, %r15711;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15716, %r15713, %r15712;
	// end inline asm
	// begin inline asm
	mov.b32 %r15719, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15720, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15721, %r15553, %r15719;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15724, %r15721, %r15720;
	// end inline asm
	// begin inline asm
	mov.b32 %r15727, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15728, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15729, %r15556, %r15727;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15732, %r15729, %r15728;
	// end inline asm
	// begin inline asm
	mov.b32 %r15735, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15736, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15737, %r15559, %r15735;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15740, %r15737, %r15736;
	// end inline asm
	// begin inline asm
	mov.b32 %r15743, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15744, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15745, %r15562, %r15743;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15748, %r15745, %r15744;
	// end inline asm
	// begin inline asm
	mov.b32 %r15751, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15752, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15753, %r15565, %r15751;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15756, %r15753, %r15752;
	// end inline asm
	// begin inline asm
	mov.b32 %r15759, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15760, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15761, %r15568, %r15759;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15764, %r15761, %r15760;
	// end inline asm
	// begin inline asm
	mov.b32 %r15767, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15768, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15769, %r15571, %r15767;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15772, %r15769, %r15768;
	// end inline asm
	// begin inline asm
	mov.b32 %r15775, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15776, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15777, %r15574, %r15775;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15780, %r15777, %r15776;
	// end inline asm
	// begin inline asm
	mov.b32 %r15783, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15784, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15785, %r15577, %r15783;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15788, %r15785, %r15784;
	// end inline asm
	// begin inline asm
	mov.b32 %r15791, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15792, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15793, %r15580, %r15791;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15796, %r15793, %r15792;
	// end inline asm
	// begin inline asm
	mov.b32 %r15799, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15800, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15801, %r15583, %r15799;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15804, %r15801, %r15800;
	// end inline asm
	// begin inline asm
	mov.b32 %r15807, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15808, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15809, %r15586, %r15807;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15812, %r15809, %r15808;
	// end inline asm
	// begin inline asm
	mov.b32 %r15815, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15816, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15817, %r15589, %r15815;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15820, %r15817, %r15816;
	// end inline asm
	// begin inline asm
	mov.b32 %r15823, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15824, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15825, %r15592, %r15823;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15828, %r15825, %r15824;
	// end inline asm
	// begin inline asm
	mov.b32 %r15831, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15832, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15833, %r15595, %r15831;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15836, %r15833, %r15832;
	// end inline asm
	// begin inline asm
	mov.b32 %r15839, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15840, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15841, %r15598, %r15839;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15844, %r15841, %r15840;
	// end inline asm
	// begin inline asm
	mov.b32 %r15847, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15848, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15849, %r15601, %r15847;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15852, %r15849, %r15848;
	// end inline asm
	// begin inline asm
	mov.b32 %r15855, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15856, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15857, %r15604, %r15855;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15860, %r15857, %r15856;
	// end inline asm
	// begin inline asm
	mov.b32 %r15866, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15864, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15865, %r15866, %r15864;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15868, %r15612, %r15865;
	// end inline asm
	// begin inline asm
	mov.b32 %r15871, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15872, %r15866, %r15871;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15875, %r15620, %r15872;
	// end inline asm
	// begin inline asm
	mov.b32 %r15878, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15879, %r15866, %r15878;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15882, %r15628, %r15879;
	// end inline asm
	// begin inline asm
	mov.b32 %r15885, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15886, %r15866, %r15885;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15889, %r15636, %r15886;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15892, %r15868, %r15882, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15896, %r15875, %r15889, %r4447;
	// end inline asm
	shl.b32 	%r15903, %r15896, 4;
	// begin inline asm
	lop3.b32 %r15900, %r4453, %r15892, %r15903, 202;
	// end inline asm
	xor.b32  	%r16223, %r15900, -2004318072;
	// begin inline asm
	mov.b32 %r15907, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15905, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15906, %r15907, %r15905;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15909, %r15644, %r15906;
	// end inline asm
	// begin inline asm
	mov.b32 %r15912, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15913, %r15907, %r15912;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15916, %r15652, %r15913;
	// end inline asm
	// begin inline asm
	mov.b32 %r15919, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15920, %r15907, %r15919;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15923, %r15660, %r15920;
	// end inline asm
	// begin inline asm
	mov.b32 %r15926, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15927, %r15907, %r15926;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15930, %r15668, %r15927;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15933, %r15909, %r15923, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15937, %r15916, %r15930, %r4447;
	// end inline asm
	shl.b32 	%r15944, %r15937, 4;
	// begin inline asm
	lop3.b32 %r15941, %r4453, %r15933, %r15944, 202;
	// end inline asm
	xor.b32  	%r16224, %r15941, -2004318072;
	// begin inline asm
	mov.b32 %r15948, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15946, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15947, %r15948, %r15946;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15950, %r15676, %r15947;
	// end inline asm
	// begin inline asm
	mov.b32 %r15953, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15954, %r15948, %r15953;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15957, %r15684, %r15954;
	// end inline asm
	// begin inline asm
	mov.b32 %r15960, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15961, %r15948, %r15960;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15964, %r15692, %r15961;
	// end inline asm
	// begin inline asm
	mov.b32 %r15967, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15968, %r15948, %r15967;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15971, %r15700, %r15968;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15974, %r15950, %r15964, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15978, %r15957, %r15971, %r4447;
	// end inline asm
	shl.b32 	%r15985, %r15978, 4;
	// begin inline asm
	lop3.b32 %r15982, %r4453, %r15974, %r15985, 202;
	// end inline asm
	xor.b32  	%r16225, %r15982, -2004318072;
	// begin inline asm
	mov.b32 %r15989, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15987, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15988, %r15989, %r15987;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15991, %r15708, %r15988;
	// end inline asm
	// begin inline asm
	mov.b32 %r15994, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15995, %r15989, %r15994;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15998, %r15716, %r15995;
	// end inline asm
	// begin inline asm
	mov.b32 %r16001, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16002, %r15989, %r16001;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16005, %r15724, %r16002;
	// end inline asm
	// begin inline asm
	mov.b32 %r16008, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16009, %r15989, %r16008;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16012, %r15732, %r16009;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16015, %r15991, %r16005, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16019, %r15998, %r16012, %r4447;
	// end inline asm
	shl.b32 	%r16026, %r16019, 4;
	// begin inline asm
	lop3.b32 %r16023, %r4453, %r16015, %r16026, 202;
	// end inline asm
	xor.b32  	%r16226, %r16023, -2004318072;
	// begin inline asm
	mov.b32 %r16030, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r16028, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16029, %r16030, %r16028;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16032, %r15740, %r16029;
	// end inline asm
	// begin inline asm
	mov.b32 %r16035, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16036, %r16030, %r16035;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16039, %r15748, %r16036;
	// end inline asm
	// begin inline asm
	mov.b32 %r16042, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16043, %r16030, %r16042;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16046, %r15756, %r16043;
	// end inline asm
	// begin inline asm
	mov.b32 %r16049, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16050, %r16030, %r16049;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16053, %r15764, %r16050;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16056, %r16032, %r16046, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16060, %r16039, %r16053, %r4447;
	// end inline asm
	shl.b32 	%r16067, %r16060, 4;
	// begin inline asm
	lop3.b32 %r16064, %r4453, %r16056, %r16067, 202;
	// end inline asm
	xor.b32  	%r16227, %r16064, -2004318072;
	// begin inline asm
	mov.b32 %r16071, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r16069, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16070, %r16071, %r16069;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16073, %r15772, %r16070;
	// end inline asm
	// begin inline asm
	mov.b32 %r16076, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16077, %r16071, %r16076;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16080, %r15780, %r16077;
	// end inline asm
	// begin inline asm
	mov.b32 %r16083, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16084, %r16071, %r16083;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16087, %r15788, %r16084;
	// end inline asm
	// begin inline asm
	mov.b32 %r16090, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16091, %r16071, %r16090;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16094, %r15796, %r16091;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16097, %r16073, %r16087, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16101, %r16080, %r16094, %r4447;
	// end inline asm
	shl.b32 	%r16108, %r16101, 4;
	// begin inline asm
	lop3.b32 %r16105, %r4453, %r16097, %r16108, 202;
	// end inline asm
	xor.b32  	%r16228, %r16105, -2004318072;
	// begin inline asm
	mov.b32 %r16112, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r16110, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16111, %r16112, %r16110;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16114, %r15804, %r16111;
	// end inline asm
	// begin inline asm
	mov.b32 %r16117, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16118, %r16112, %r16117;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16121, %r15812, %r16118;
	// end inline asm
	// begin inline asm
	mov.b32 %r16124, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16125, %r16112, %r16124;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16128, %r15820, %r16125;
	// end inline asm
	// begin inline asm
	mov.b32 %r16131, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16132, %r16112, %r16131;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16135, %r15828, %r16132;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16138, %r16114, %r16128, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16142, %r16121, %r16135, %r4447;
	// end inline asm
	shl.b32 	%r16149, %r16142, 4;
	// begin inline asm
	lop3.b32 %r16146, %r4453, %r16138, %r16149, 202;
	// end inline asm
	xor.b32  	%r16229, %r16146, -2004318072;
	// begin inline asm
	mov.b32 %r16153, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r16151, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16152, %r16153, %r16151;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16155, %r15836, %r16152;
	// end inline asm
	// begin inline asm
	mov.b32 %r16158, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16159, %r16153, %r16158;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16162, %r15844, %r16159;
	// end inline asm
	// begin inline asm
	mov.b32 %r16165, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16166, %r16153, %r16165;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16169, %r15852, %r16166;
	// end inline asm
	// begin inline asm
	mov.b32 %r16172, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16173, %r16153, %r16172;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16176, %r15860, %r16173;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16179, %r16155, %r16169, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16183, %r16162, %r16176, %r4447;
	// end inline asm
	shl.b32 	%r16190, %r16183, 4;
	// begin inline asm
	lop3.b32 %r16187, %r4453, %r16179, %r16190, 202;
	// end inline asm
	xor.b32  	%r16230, %r16187, -2004318072;
	st.shared.u32 	[%rd115], %r16223;
	st.shared.u32 	[%rd116], %r16224;
	st.shared.u32 	[%rd117], %r16225;
	st.shared.u32 	[%rd118], %r16226;
	st.shared.u32 	[%rd119], %r16227;
	st.shared.u32 	[%rd120], %r16228;
	st.shared.u32 	[%rd121], %r16229;
	st.shared.u32 	[%rd122], %r16230;
	add.s32 	%r16380, %r16380, -128;
	add.s64 	%rd171, %rd171, 16644;
	setp.eq.s32 	%p325, %r16380, 0;
	@%p325 bra 	LBB0_184;
	bra.uni 	LBB0_183;
LBB0_184:                               // %guard_pass26125
                                        //   in Loop: Header=BB0_182 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16236, [%rd21];
	ld.shared.u32 	%r16237, [%rd22+128];
	ld.shared.u32 	%r16244, [%rd22+4];
	ld.shared.u32 	%r16245, [%rd22+132];
	ld.shared.u32 	%r16252, [%rd23];
	ld.shared.u32 	%r16253, [%rd24+128];
	ld.shared.u32 	%r16260, [%rd24+4];
	ld.shared.u32 	%r16261, [%rd24+132];
	ld.shared.u32 	%r16268, [%rd22+16644];
	ld.shared.u32 	%r16269, [%rd22+16772];
	ld.shared.u32 	%r16276, [%rd22+16648];
	ld.shared.u32 	%r16277, [%rd22+16776];
	ld.shared.u32 	%r16284, [%rd24+16644];
	ld.shared.u32 	%r16285, [%rd24+16772];
	ld.shared.u32 	%r16292, [%rd24+16648];
	ld.shared.u32 	%r16293, [%rd24+16776];
	// begin inline asm
	prmt.b32 %r16231, %r16236, %r16237, %r841;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16235, %r16236, %r16237, %r845;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16239, %r16244, %r16245, %r841;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16243, %r16244, %r16245, %r845;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16247, %r16252, %r16253, %r841;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16251, %r16252, %r16253, %r845;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16255, %r16260, %r16261, %r841;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16259, %r16260, %r16261, %r845;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16263, %r16268, %r16269, %r841;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16267, %r16268, %r16269, %r845;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16271, %r16276, %r16277, %r841;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16275, %r16276, %r16277, %r845;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16279, %r16284, %r16285, %r841;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16283, %r16284, %r16285, %r845;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16287, %r16292, %r16293, %r841;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16291, %r16292, %r16293, %r845;
	// end inline asm
	selp.b32 	%r16295, %r16235, %r16231, %p312;
	shfl.sync.bfly.b32	%r239, %r16295, 8, 31, -1;
	selp.b32 	%r16296, %r16243, %r16239, %p312;
	shfl.sync.bfly.b32	%r240, %r16296, 8, 31, -1;
	selp.b32 	%r16297, %r16251, %r16247, %p312;
	shfl.sync.bfly.b32	%r241, %r16297, 8, 31, -1;
	selp.b32 	%r16298, %r16259, %r16255, %p312;
	shfl.sync.bfly.b32	%r242, %r16298, 8, 31, -1;
	selp.b32 	%r16299, %r16267, %r16263, %p312;
	shfl.sync.bfly.b32	%r16300, %r16299, 8, 31, -1;
	selp.b32 	%r16301, %r16275, %r16271, %p312;
	shfl.sync.bfly.b32	%r16302, %r16301, 8, 31, -1;
	selp.b32 	%r16303, %r16283, %r16279, %p312;
	shfl.sync.bfly.b32	%r16304, %r16303, 8, 31, -1;
	selp.b32 	%r16305, %r16291, %r16287, %p312;
	shfl.sync.bfly.b32	%r16306, %r16305, 8, 31, -1;
	and.b32  	%r251, %r16355, 768;
	setp.lt.u32 	%p327, %r251, 384;
	shl.b32 	%r16334, %r16355, 12;
	@%p327 bra 	LBB0_186;
// %bb.185:                             // %L80585
                                        //   in Loop: Header=BB0_182 Depth=1
	selp.b32 	%r16307, %r242, %r16259, %p312;
	selp.b32 	%r16308, %r16255, %r242, %p312;
	selp.b32 	%r16309, %r241, %r16251, %p312;
	selp.b32 	%r16310, %r16247, %r241, %p312;
	selp.b32 	%r16311, %r240, %r16243, %p312;
	selp.b32 	%r16312, %r16239, %r240, %p312;
	selp.b32 	%r16313, %r239, %r16235, %p312;
	selp.b32 	%r16314, %r16231, %r239, %p312;
	or.b32  	%r16316, %r145, %r16334;
	or.b32  	%r16317, %r16316, %r144;
	or.b32  	%r16318, %r16317, %r146;
	or.b32  	%r16319, %r16318, %r152;
	cvt.u64.u32 	%rd123, %r16319;
	add.s64 	%rd124, %rd123, %rd25;
	shr.u64 	%rd125, %rd124, 35;
	add.s64 	%rd126, %rd124, %rd125;
	shr.s64 	%rd127, %rd126, 29;
	and.b64  	%rd128, %rd126, -536870912;
	setp.ne.s64 	%p329, %rd128, %rd124;
	setp.lt.s64 	%p330, %rd124, 0;
	and.pred  	%p331, %p330, %p329;
	selp.u64 	%rd129, 1, 0, %p331;
	sub.s64 	%rd130, %rd129, %rd127;
	shl.b64 	%rd131, %rd130, 29;
	add.s64 	%rd132, %rd131, %rd124;
	shl.b64 	%rd133, %rd132, 2;
	add.s64 	%rd134, %rd3, %rd133;
	st.global.v4.u32 	[%rd134], {%r16314, %r16312, %r16313, %r16311};
	or.b32  	%r16320, %r16318, %r153;
	cvt.s64.s32 	%rd135, %r16320;
	add.s64 	%rd136, %rd135, %rd25;
	shr.u64 	%rd137, %rd136, 35;
	add.s64 	%rd138, %rd136, %rd137;
	shr.u64 	%rd139, %rd138, 29;
	shr.u64 	%rd140, %rd136, 63;
	sub.s64 	%rd141, %rd140, %rd139;
	shl.b64 	%rd142, %rd141, 29;
	add.s64 	%rd143, %rd142, %rd136;
	shl.b64 	%rd144, %rd143, 2;
	add.s64 	%rd145, %rd3, %rd144;
	st.global.v4.u32 	[%rd145], {%r16310, %r16308, %r16309, %r16307};
LBB0_186:                               // %pass25534
                                        //   in Loop: Header=BB0_182 Depth=1
	or.b32  	%r16321, %r251, 128;
	setp.lt.u32 	%p332, %r16321, 384;
	@%p332 bra 	LBB0_188;
// %bb.187:                             // %L81038
                                        //   in Loop: Header=BB0_182 Depth=1
	selp.b32 	%r243, %r16263, %r16300, %p312;
	selp.b32 	%r244, %r16300, %r16267, %p312;
	selp.b32 	%r245, %r16271, %r16302, %p312;
	selp.b32 	%r246, %r16302, %r16275, %p312;
	selp.b32 	%r247, %r16279, %r16304, %p312;
	selp.b32 	%r248, %r16304, %r16283, %p312;
	selp.b32 	%r249, %r16287, %r16306, %p312;
	selp.b32 	%r250, %r16306, %r16291, %p312;
	or.b32  	%r16323, %r16334, %r154;
	or.b32  	%r16324, %r16323, 524288;
	cvt.s64.s32 	%rd146, %r16324;
	add.s64 	%rd147, %rd146, %rd25;
	shr.u64 	%rd148, %rd147, 35;
	add.s64 	%rd149, %rd147, %rd148;
	shr.s64 	%rd150, %rd149, 29;
	and.b64  	%rd151, %rd149, -536870912;
	setp.ne.s64 	%p333, %rd151, %rd147;
	setp.lt.s64 	%p334, %rd147, 0;
	and.pred  	%p335, %p334, %p333;
	selp.u64 	%rd152, 1, 0, %p335;
	sub.s64 	%rd153, %rd152, %rd150;
	shl.b64 	%rd154, %rd153, 29;
	add.s64 	%rd155, %rd154, %rd147;
	shl.b64 	%rd156, %rd155, 2;
	add.s64 	%rd157, %rd3, %rd156;
	st.global.v4.u32 	[%rd157], {%r243, %r245, %r244, %r246};
	or.b32  	%r16325, %r16334, %r145;
	or.b32  	%r16326, %r16325, %r144;
	or.b32  	%r16327, %r16326, %r146;
	or.b32  	%r16328, %r16327, %r153;
	or.b32  	%r16329, %r16328, 524288;
	cvt.s64.s32 	%rd158, %r16329;
	add.s64 	%rd159, %rd158, %rd25;
	shr.u64 	%rd160, %rd159, 35;
	add.s64 	%rd161, %rd159, %rd160;
	shr.u64 	%rd162, %rd161, 29;
	shr.u64 	%rd163, %rd159, 63;
	sub.s64 	%rd164, %rd163, %rd162;
	shl.b64 	%rd165, %rd164, 29;
	add.s64 	%rd166, %rd165, %rd159;
	shl.b64 	%rd167, %rd166, 2;
	add.s64 	%rd168, %rd3, %rd167;
	st.global.v4.u32 	[%rd168], {%r247, %r249, %r248, %r250};
	bra.uni 	LBB0_188;
LBB0_189:                               // %L81496
	st.global.u32 	[%rd4], %r16333;
	ret;
LBB0_7:                                 // %L273
	mov.u32 	%r16332, 2;
	st.global.u32 	[%rd4], %r16332;
	mov.u64 	%rd169, exception5788;
	cvta.global.u64 	%rd170, %rd169;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd170;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd44;
	st.param.b32 	[param0+8], %r252;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L9
	mov.u64 	%rd65, exception1;
	cvta.global.u64 	%rd66, %rd65;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd66;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd44;
	st.param.b32 	[param0+8], %r252;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
