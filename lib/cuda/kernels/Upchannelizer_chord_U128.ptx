// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5808[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<342>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16426>;
	.reg .f32 	%f<1392>;
	.reg .b64 	%rd<170>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r267, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd23, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r268, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r268, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	ld.param.u64 	%rd40, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd24, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r269, %r4, 9;
	or.b32  	%r270, %r3, %r1;
	or.b32  	%r271, %r270, %r269;
	mul.wide.u32 	%rd46, %r271, 4;
	add.s64 	%rd4, %rd40, %rd46;
	mov.u32 	%r272, 1;
	st.global.u32 	[%rd4], %r272;
	ld.global.u32 	%r5, [%rd24];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L204
	ld.param.u64 	%rd28, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd28];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 16384;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L214
	ld.param.u64 	%rd32, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd32];
	sub.s32 	%r273, %r6, %r5;
	and.b32  	%r274, %r273, 255;
	setp.ne.s32 	%p6, %r274, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L220
	ld.param.u64 	%rd36, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd36];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 128;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L230
	sub.s32 	%r275, %r8, %r7;
	and.b32  	%r276, %r275, 1;
	setp.eq.b32 	%p12, %r276, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass170
	bfe.u32 	%r186, %r1, 1, 1;
	and.b32  	%r187, %r1, 1;
	bfe.u32 	%r189, %r1, 2, 1;
	shr.u32 	%r190, %r1, 4;
	shl.b32 	%r283, %r190, 2;
	shl.b32 	%r284, %r189, 3;
	shl.b32 	%r285, %r187, 4;
	shl.b32 	%r286, %r186, 5;
	or.b32  	%r287, %r285, %r286;
	or.b32  	%r288, %r284, %r287;
	or.b32  	%r289, %r283, %r288;
	bfe.u32 	%r192, %r1, 3, 1;
	shl.b32 	%r290, %r192, 1;
	or.b32  	%r193, %r290, %r289;
	or.b32  	%r194, %r193, 64;
	mov.f32 	%f257, 0f40000000;
	mov.f32 	%f258, 0f43FF8000;
	div.approx.f32 	%f253, %f258, %f257;
	cvt.rn.f32.s32 	%f259, %r193;
	sub.f32 	%f260, %f259, %f253;
	mov.f32 	%f289, 0f43000000;
	div.approx.f32 	%f255, %f260, %f289;
	setp.ne.f32 	%p20, %f255, 0f00000000;
	mov.f32 	%f1351, 0f3F800000;
	mov.f32 	%f1336, %f1351;
	@%p20 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L735
	sin.approx.f32 	%f290, %f255;
	div.approx.f32 	%f1336, %f290, %f255;
$L__BB0_10:                             // %L738
	cvt.rn.f32.s32 	%f293, %r194;
	sub.f32 	%f294, %f293, %f253;
	div.approx.f32 	%f5, %f294, %f289;
	setp.eq.f32 	%p26, %f5, 0f00000000;
	mov.f32 	%f1337, %f1351;
	@%p26 bra 	$L__BB0_12;
// %bb.11:                              // %L755
	sin.approx.f32 	%f324, %f5;
	div.approx.f32 	%f1337, %f324, %f5;
$L__BB0_12:                             // %L758
	or.b32  	%r308, %r193, 1;
	or.b32  	%r10, %r193, 65;
	cvt.rn.f32.s32 	%f328, %r308;
	sub.f32 	%f329, %f328, %f253;
	div.approx.f32 	%f9, %f329, %f289;
	setp.eq.f32 	%p32, %f9, 0f00000000;
	mov.f32 	%f1338, %f1351;
	@%p32 bra 	$L__BB0_14;
// %bb.13:                              // %L837
	sin.approx.f32 	%f359, %f9;
	div.approx.f32 	%f1338, %f359, %f9;
$L__BB0_14:                             // %L840
	cvt.rn.f32.s32 	%f362, %r10;
	sub.f32 	%f363, %f362, %f253;
	div.approx.f32 	%f14, %f363, %f289;
	setp.eq.f32 	%p38, %f14, 0f00000000;
	mov.f32 	%f1339, %f1351;
	@%p38 bra 	$L__BB0_16;
// %bb.15:                              // %L857
	sin.approx.f32 	%f393, %f14;
	div.approx.f32 	%f1339, %f393, %f14;
$L__BB0_16:                             // %L860
	or.b32  	%r326, %r193, 128;
	or.b32  	%r12, %r193, 192;
	cvt.rn.f32.s32 	%f397, %r326;
	sub.f32 	%f398, %f397, %f253;
	div.approx.f32 	%f18, %f398, %f289;
	setp.eq.f32 	%p44, %f18, 0f00000000;
	mov.f32 	%f1340, %f1351;
	@%p44 bra 	$L__BB0_18;
// %bb.17:                              // %L939
	sin.approx.f32 	%f428, %f18;
	div.approx.f32 	%f1340, %f428, %f18;
$L__BB0_18:                             // %L942
	cvt.rn.f32.s32 	%f431, %r12;
	sub.f32 	%f432, %f431, %f253;
	div.approx.f32 	%f23, %f432, %f289;
	setp.eq.f32 	%p50, %f23, 0f00000000;
	mov.f32 	%f1341, %f1351;
	@%p50 bra 	$L__BB0_20;
// %bb.19:                              // %L959
	sin.approx.f32 	%f462, %f23;
	div.approx.f32 	%f1341, %f462, %f23;
$L__BB0_20:                             // %L962
	or.b32  	%r344, %r193, 129;
	or.b32  	%r14, %r193, 193;
	cvt.rn.f32.s32 	%f466, %r344;
	sub.f32 	%f467, %f466, %f253;
	div.approx.f32 	%f27, %f467, %f289;
	setp.eq.f32 	%p56, %f27, 0f00000000;
	mov.f32 	%f1342, %f1351;
	@%p56 bra 	$L__BB0_22;
// %bb.21:                              // %L1041
	sin.approx.f32 	%f497, %f27;
	div.approx.f32 	%f1342, %f497, %f27;
$L__BB0_22:                             // %L1044
	cvt.rn.f32.s32 	%f500, %r14;
	sub.f32 	%f501, %f500, %f253;
	div.approx.f32 	%f32, %f501, %f289;
	setp.eq.f32 	%p62, %f32, 0f00000000;
	mov.f32 	%f1343, %f1351;
	@%p62 bra 	$L__BB0_24;
// %bb.23:                              // %L1061
	sin.approx.f32 	%f531, %f32;
	div.approx.f32 	%f1343, %f531, %f32;
$L__BB0_24:                             // %L1064
	or.b32  	%r362, %r193, 256;
	or.b32  	%r16, %r193, 320;
	cvt.rn.f32.s32 	%f535, %r362;
	sub.f32 	%f536, %f535, %f253;
	div.approx.f32 	%f36, %f536, %f289;
	setp.eq.f32 	%p68, %f36, 0f00000000;
	mov.f32 	%f1344, %f1351;
	@%p68 bra 	$L__BB0_26;
// %bb.25:                              // %L1143
	sin.approx.f32 	%f566, %f36;
	div.approx.f32 	%f1344, %f566, %f36;
$L__BB0_26:                             // %L1146
	mov.f32 	%f261, 0f44004000;
	cvt.rn.f32.s32 	%f569, %r16;
	sub.f32 	%f570, %f569, %f253;
	div.approx.f32 	%f41, %f570, %f289;
	setp.eq.f32 	%p74, %f41, 0f00000000;
	mov.f32 	%f1345, %f1351;
	@%p74 bra 	$L__BB0_28;
// %bb.27:                              // %L1163
	sin.approx.f32 	%f600, %f41;
	div.approx.f32 	%f1345, %f600, %f41;
$L__BB0_28:                             // %L1166
	div.approx.f32 	%f262, %f260, %f261;
	div.approx.f32 	%f296, %f294, %f261;
	div.approx.f32 	%f331, %f329, %f261;
	div.approx.f32 	%f365, %f363, %f261;
	div.approx.f32 	%f400, %f398, %f261;
	div.approx.f32 	%f434, %f432, %f261;
	div.approx.f32 	%f469, %f467, %f261;
	div.approx.f32 	%f503, %f501, %f261;
	div.approx.f32 	%f538, %f536, %f261;
	div.approx.f32 	%f572, %f570, %f261;
	or.b32  	%r380, %r193, 257;
	or.b32  	%r18, %r193, 321;
	cvt.rn.f32.s32 	%f604, %r380;
	sub.f32 	%f605, %f604, %f253;
	div.approx.f32 	%f607, %f605, %f261;
	div.approx.f32 	%f45, %f605, %f289;
	setp.eq.f32 	%p80, %f45, 0f00000000;
	mov.f32 	%f1346, %f1351;
	@%p80 bra 	$L__BB0_30;
// %bb.29:                              // %L1245
	sin.approx.f32 	%f635, %f45;
	div.approx.f32 	%f1346, %f635, %f45;
$L__BB0_30:                             // %L1248
	abs.f32 	%f263, %f262;
	abs.f32 	%f297, %f296;
	abs.f32 	%f332, %f331;
	abs.f32 	%f366, %f365;
	abs.f32 	%f401, %f400;
	abs.f32 	%f435, %f434;
	abs.f32 	%f470, %f469;
	abs.f32 	%f504, %f503;
	abs.f32 	%f539, %f538;
	abs.f32 	%f573, %f572;
	abs.f32 	%f608, %f607;
	cvt.rn.f32.s32 	%f638, %r18;
	sub.f32 	%f639, %f638, %f253;
	div.approx.f32 	%f641, %f639, %f261;
	abs.f32 	%f642, %f641;
	div.approx.f32 	%f50, %f639, %f289;
	setp.eq.f32 	%p86, %f50, 0f00000000;
	mov.f32 	%f1347, %f1351;
	@%p86 bra 	$L__BB0_32;
// %bb.31:                              // %L1265
	sin.approx.f32 	%f669, %f50;
	div.approx.f32 	%f1347, %f669, %f50;
$L__BB0_32:                             // %L1268
	setp.gt.f32 	%p15, %f263, 0f4B800000;
	mul.f32 	%f264, %f262, 0f00000000;
	setp.gt.f32 	%p21, %f297, 0f4B800000;
	mul.f32 	%f298, %f296, 0f00000000;
	setp.gt.f32 	%p27, %f332, 0f4B800000;
	mul.f32 	%f333, %f331, 0f00000000;
	setp.gt.f32 	%p33, %f366, 0f4B800000;
	mul.f32 	%f367, %f365, 0f00000000;
	setp.gt.f32 	%p39, %f401, 0f4B800000;
	mul.f32 	%f402, %f400, 0f00000000;
	setp.gt.f32 	%p45, %f435, 0f4B800000;
	mul.f32 	%f436, %f434, 0f00000000;
	setp.gt.f32 	%p51, %f470, 0f4B800000;
	mul.f32 	%f471, %f469, 0f00000000;
	setp.gt.f32 	%p57, %f504, 0f4B800000;
	mul.f32 	%f505, %f503, 0f00000000;
	setp.gt.f32 	%p63, %f539, 0f4B800000;
	mul.f32 	%f540, %f538, 0f00000000;
	setp.gt.f32 	%p69, %f573, 0f4B800000;
	mul.f32 	%f574, %f572, 0f00000000;
	setp.gt.f32 	%p75, %f608, 0f4B800000;
	mul.f32 	%f609, %f607, 0f00000000;
	setp.gt.f32 	%p81, %f642, 0f4B800000;
	mul.f32 	%f643, %f641, 0f00000000;
	or.b32  	%r398, %r193, 384;
	or.b32  	%r20, %r193, 448;
	cvt.rn.f32.s32 	%f673, %r398;
	sub.f32 	%f674, %f673, %f253;
	div.approx.f32 	%f676, %f674, %f261;
	abs.f32 	%f677, %f676;
	setp.gt.f32 	%p87, %f677, 0f4B800000;
	mul.f32 	%f678, %f676, 0f00000000;
	div.approx.f32 	%f54, %f674, %f289;
	setp.eq.f32 	%p92, %f54, 0f00000000;
	mov.f32 	%f1348, %f1351;
	@%p92 bra 	$L__BB0_34;
// %bb.33:                              // %L1347
	sin.approx.f32 	%f704, %f54;
	div.approx.f32 	%f1348, %f704, %f54;
$L__BB0_34:                             // %L1350
	selp.f32 	%f265, %f264, %f262, %p15;
	selp.f32 	%f299, %f298, %f296, %p21;
	selp.f32 	%f334, %f333, %f331, %p27;
	selp.f32 	%f368, %f367, %f365, %p33;
	selp.f32 	%f403, %f402, %f400, %p39;
	selp.f32 	%f437, %f436, %f434, %p45;
	selp.f32 	%f472, %f471, %f469, %p51;
	selp.f32 	%f506, %f505, %f503, %p57;
	selp.f32 	%f541, %f540, %f538, %p63;
	selp.f32 	%f575, %f574, %f572, %p69;
	selp.f32 	%f610, %f609, %f607, %p75;
	selp.f32 	%f644, %f643, %f641, %p81;
	selp.f32 	%f679, %f678, %f676, %p87;
	cvt.rn.f32.s32 	%f707, %r20;
	sub.f32 	%f708, %f707, %f253;
	div.approx.f32 	%f710, %f708, %f261;
	abs.f32 	%f711, %f710;
	setp.gt.f32 	%p93, %f711, 0f4B800000;
	mul.f32 	%f712, %f710, 0f00000000;
	selp.f32 	%f713, %f712, %f710, %p93;
	div.approx.f32 	%f59, %f708, %f289;
	setp.eq.f32 	%p98, %f59, 0f00000000;
	mov.f32 	%f1349, %f1351;
	@%p98 bra 	$L__BB0_36;
// %bb.35:                              // %L1367
	sin.approx.f32 	%f738, %f59;
	div.approx.f32 	%f1349, %f738, %f59;
$L__BB0_36:                             // %L1370
	add.f32 	%f266, %f265, %f265;
	add.f32 	%f300, %f299, %f299;
	add.f32 	%f335, %f334, %f334;
	add.f32 	%f369, %f368, %f368;
	add.f32 	%f404, %f403, %f403;
	add.f32 	%f438, %f437, %f437;
	add.f32 	%f473, %f472, %f472;
	add.f32 	%f507, %f506, %f506;
	add.f32 	%f542, %f541, %f541;
	add.f32 	%f576, %f575, %f575;
	add.f32 	%f611, %f610, %f610;
	add.f32 	%f645, %f644, %f644;
	add.f32 	%f680, %f679, %f679;
	add.f32 	%f714, %f713, %f713;
	or.b32  	%r416, %r193, 385;
	or.b32  	%r22, %r193, 449;
	cvt.rn.f32.s32 	%f742, %r416;
	sub.f32 	%f743, %f742, %f253;
	div.approx.f32 	%f745, %f743, %f261;
	abs.f32 	%f746, %f745;
	setp.gt.f32 	%p99, %f746, 0f4B800000;
	mul.f32 	%f747, %f745, 0f00000000;
	selp.f32 	%f748, %f747, %f745, %p99;
	add.f32 	%f749, %f748, %f748;
	div.approx.f32 	%f63, %f743, %f289;
	setp.eq.f32 	%p104, %f63, 0f00000000;
	mov.f32 	%f1350, %f1351;
	@%p104 bra 	$L__BB0_38;
// %bb.37:                              // %L1449
	sin.approx.f32 	%f773, %f63;
	div.approx.f32 	%f1350, %f773, %f63;
$L__BB0_38:                             // %L1452
	mov.b32 	%r291, %f266;
	mov.b32 	%r298, %f300;
	mov.b32 	%r309, %f335;
	mov.b32 	%r316, %f369;
	mov.b32 	%r327, %f404;
	mov.b32 	%r334, %f438;
	mov.b32 	%r345, %f473;
	mov.b32 	%r352, %f507;
	mov.b32 	%r363, %f542;
	mov.b32 	%r370, %f576;
	mov.b32 	%r381, %f611;
	mov.b32 	%r388, %f645;
	mov.b32 	%r399, %f680;
	mov.b32 	%r406, %f714;
	mov.b32 	%r417, %f749;
	cvt.rn.f32.s32 	%f776, %r22;
	sub.f32 	%f777, %f776, %f253;
	div.approx.f32 	%f779, %f777, %f261;
	abs.f32 	%f780, %f779;
	setp.gt.f32 	%p105, %f780, 0f4B800000;
	mul.f32 	%f781, %f779, 0f00000000;
	selp.f32 	%f782, %f781, %f779, %p105;
	add.f32 	%f783, %f782, %f782;
	mov.b32 	%r424, %f783;
	div.approx.f32 	%f68, %f777, %f289;
	setp.eq.f32 	%p110, %f68, 0f00000000;
	@%p110 bra 	$L__BB0_40;
// %bb.39:                              // %L1469
	sin.approx.f32 	%f807, %f68;
	div.approx.f32 	%f1351, %f807, %f68;
$L__BB0_40:                             // %L1472
	and.b32  	%r292, %r291, -2147483648;
	and.b32  	%r299, %r298, -2147483648;
	and.b32  	%r310, %r309, -2147483648;
	and.b32  	%r317, %r316, -2147483648;
	and.b32  	%r328, %r327, -2147483648;
	and.b32  	%r335, %r334, -2147483648;
	and.b32  	%r346, %r345, -2147483648;
	and.b32  	%r353, %r352, -2147483648;
	and.b32  	%r364, %r363, -2147483648;
	and.b32  	%r371, %r370, -2147483648;
	and.b32  	%r382, %r381, -2147483648;
	and.b32  	%r389, %r388, -2147483648;
	and.b32  	%r400, %r399, -2147483648;
	and.b32  	%r407, %r406, -2147483648;
	and.b32  	%r418, %r417, -2147483648;
	and.b32  	%r425, %r424, -2147483648;
	mul.lo.s32 	%r24, %r193, 127;
	cvt.rn.f32.s32 	%f810, %r24;
	div.approx.f32 	%f71, %f810, %f289;
	abs.f32 	%f1354, %f71;
	setp.lt.f32 	%p111, %f1354, 0f40000000;
	@%p111 bra 	$L__BB0_52;
// %bb.41:
	setp.gtu.f32 	%p112, %f1354, 0f4B800000;
	@%p112 bra 	$L__BB0_48;
	bra.uni 	$L__BB0_42;
$L__BB0_48:
	mov.b32 	%r26, %f1354;
	and.b32  	%r434, %r26, 8388607;
	or.b32  	%r16356, %r434, 1065353216;
	mov.b32 	%f1353, %r16356;
	add.s32 	%r435, %r26, -1073741824;
	and.b32  	%r16357, %r435, -8388608;
	setp.eq.s32 	%p118, %r16357, 0;
	@%p118 bra 	$L__BB0_51;
// %bb.49:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f821, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f820,%f821;
	// end inline asm
$L__BB0_50:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r436, %r16357, 192937984;
	add.s32 	%r437, %r16356, %r436;
	mov.b32 	%f822, %r437;
	mul.f32 	%f823, %f820, %f822;
	sub.f32 	%f824, %f822, %f823;
	fma.rn.f32 	%f825, %f824, %f820, %f823;
	sub.f32 	%f826, %f822, %f825;
	fma.rz.f32 	%f827, %f826, %f820, %f825;
	cvt.rzi.f32.f32 	%f828, %f827;
	sub.f32 	%f1353, %f822, %f828;
	sub.s32 	%r16357, %r16357, %r436;
	mov.b32 	%r16356, %f1353;
	setp.ne.s32 	%p119, %r16357, 0;
	setp.ne.s32 	%p120, %r16356, 0;
	and.pred  	%p121, %p119, %p120;
	@%p121 bra 	$L__BB0_50;
$L__BB0_51:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p122, %r26, 2139095039;
	selp.f32 	%f829, 0f7FFFFFFF, 0f4B800000, %p122;
	mul.f32 	%f830, %f1353, 0f34000000;
	mul.f32 	%f1354, %f829, %f830;
	bra.uni 	$L__BB0_52;
$L__BB0_42:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f813, %f1354, %f257;
	cvt.rzi.f32.f32 	%f1352, %f813;
	fma.rn.f32 	%f74, %f1352, 0fC0000000, %f1354;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p113, %r25, 1073741824;
	@%p113 bra 	$L__BB0_47;
// %bb.43:
	setp.lt.u32 	%p114, %r25, -2147483647;
	@%p114 bra 	$L__BB0_45;
// %bb.44:
	add.f32 	%f818, %f1352, 0fBF800000;
	setp.lt.f32 	%p117, %f74, 0fC0000000;
	add.f32 	%f819, %f818, 0fBF800000;
	selp.f32 	%f1352, %f819, %f818, %p117;
	bra.uni 	$L__BB0_47;
$L__BB0_45:
	add.f32 	%f1352, %f1352, 0f3F800000;
	setp.ltu.f32 	%p115, %f74, 0f40800000;
	@%p115 bra 	$L__BB0_47;
// %bb.46:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f814, %f1352, 0f3F800000;
	fma.rn.f32 	%f816, %f257, 0fC0400000, %f74;
	setp.ge.f32 	%p116, %f816, 0f00000000;
	add.f32 	%f817, %f814, 0f3F800000;
	selp.f32 	%f1352, %f817, %f814, %p116;
$L__BB0_47:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1354, %f1352, 0fC0000000, %f1354;
$L__BB0_52:                             // %__internal_fmodf_kernel.exit.i
	or.b32  	%r293, %r292, 1056964608;
	or.b32  	%r300, %r299, 1056964608;
	or.b32  	%r311, %r310, 1056964608;
	or.b32  	%r318, %r317, 1056964608;
	or.b32  	%r329, %r328, 1056964608;
	or.b32  	%r336, %r335, 1056964608;
	or.b32  	%r347, %r346, 1056964608;
	or.b32  	%r354, %r353, 1056964608;
	or.b32  	%r365, %r364, 1056964608;
	or.b32  	%r372, %r371, 1056964608;
	or.b32  	%r383, %r382, 1056964608;
	or.b32  	%r390, %r389, 1056964608;
	or.b32  	%r401, %r400, 1056964608;
	or.b32  	%r408, %r407, 1056964608;
	or.b32  	%r419, %r418, 1056964608;
	or.b32  	%r426, %r425, 1056964608;
	abs.f32 	%f831, %f1354;
	setp.gtu.f32 	%p123, %f831, 0f7F800000;
	@%p123 bra 	$L__BB0_54;
// %bb.53:
	mov.b32 	%r438, %f71;
	and.b32  	%r439, %r438, -2147483648;
	mov.b32 	%r440, %f1354;
	or.b32  	%r441, %r439, %r440;
	mov.b32 	%f1354, %r441;
$L__BB0_54:                             // %__nv_fmodf.exit
	mov.b32 	%f267, %r293;
	mov.b32 	%f301, %r300;
	mov.b32 	%f336, %r311;
	mov.b32 	%f370, %r318;
	mov.b32 	%f405, %r329;
	mov.b32 	%f439, %r336;
	mov.b32 	%f474, %r347;
	mov.b32 	%f508, %r354;
	mov.b32 	%f543, %r365;
	mov.b32 	%f577, %r372;
	mov.b32 	%f612, %r383;
	mov.b32 	%f646, %r390;
	mov.b32 	%f681, %r401;
	mov.b32 	%f715, %r408;
	mov.b32 	%f750, %r419;
	mov.b32 	%f784, %r426;
	add.f32 	%f832, %f1354, %f1354;
	mov.b32 	%r442, %f832;
	and.b32  	%r443, %r442, -2147483648;
	or.b32  	%r444, %r443, 1056964608;
	mov.b32 	%f833, %r444;
	add.f32 	%f834, %f832, %f833;
	abs.f32 	%f836, %f832;
	add.s32 	%r450, %r24, 8128;
	cvt.rn.f32.s32 	%f862, %r450;
	div.approx.f32 	%f90, %f862, %f289;
	abs.f32 	%f1358, %f90;
	setp.lt.f32 	%p131, %f1358, 0f40000000;
	@%p131 bra 	$L__BB0_66;
// %bb.55:
	setp.gtu.f32 	%p132, %f1358, 0f4B800000;
	@%p132 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_56;
$L__BB0_62:
	mov.b32 	%r34, %f1358;
	and.b32  	%r451, %r34, 8388607;
	or.b32  	%r16358, %r451, 1065353216;
	mov.b32 	%f1357, %r16358;
	add.s32 	%r452, %r34, -1073741824;
	and.b32  	%r16359, %r452, -8388608;
	setp.eq.s32 	%p138, %r16359, 0;
	@%p138 bra 	$L__BB0_65;
// %bb.63:                              // %__nv_fmaf_rn.exit4.i.i.i1655.preheader
	mov.f32 	%f873, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f872,%f873;
	// end inline asm
$L__BB0_64:                             // %__nv_fmaf_rn.exit4.i.i.i1655
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r453, %r16359, 192937984;
	add.s32 	%r454, %r16358, %r453;
	mov.b32 	%f874, %r454;
	mul.f32 	%f875, %f872, %f874;
	sub.f32 	%f876, %f874, %f875;
	fma.rn.f32 	%f877, %f876, %f872, %f875;
	sub.f32 	%f878, %f874, %f877;
	fma.rz.f32 	%f879, %f878, %f872, %f877;
	cvt.rzi.f32.f32 	%f880, %f879;
	sub.f32 	%f1357, %f874, %f880;
	sub.s32 	%r16359, %r16359, %r453;
	mov.b32 	%r16358, %f1357;
	setp.ne.s32 	%p139, %r16359, 0;
	setp.ne.s32 	%p140, %r16358, 0;
	and.pred  	%p141, %p139, %p140;
	@%p141 bra 	$L__BB0_64;
$L__BB0_65:                             // %__internal_fmodf_slowpath_mod.exit.i.i1657
	setp.gt.u32 	%p142, %r34, 2139095039;
	selp.f32 	%f881, 0f7FFFFFFF, 0f4B800000, %p142;
	mul.f32 	%f882, %f1357, 0f34000000;
	mul.f32 	%f1358, %f881, %f882;
	bra.uni 	$L__BB0_66;
$L__BB0_56:                             // %__nv_fast_fdividef.exit.i.i.i1634
	div.approx.f32 	%f865, %f1358, %f257;
	cvt.rzi.f32.f32 	%f1356, %f865;
	fma.rn.f32 	%f93, %f1356, 0fC0000000, %f1358;
	mov.b32 	%r33, %f93;
	setp.lt.u32 	%p133, %r33, 1073741824;
	@%p133 bra 	$L__BB0_61;
// %bb.57:
	setp.lt.u32 	%p134, %r33, -2147483647;
	@%p134 bra 	$L__BB0_59;
// %bb.58:
	add.f32 	%f870, %f1356, 0fBF800000;
	setp.lt.f32 	%p137, %f93, 0fC0000000;
	add.f32 	%f871, %f870, 0fBF800000;
	selp.f32 	%f1356, %f871, %f870, %p137;
	bra.uni 	$L__BB0_61;
$L__BB0_59:
	add.f32 	%f1356, %f1356, 0f3F800000;
	setp.ltu.f32 	%p135, %f93, 0f40800000;
	@%p135 bra 	$L__BB0_61;
// %bb.60:                              // %__nv_fmaf_rn.exit.i.i.i1638
	add.f32 	%f866, %f1356, 0f3F800000;
	fma.rn.f32 	%f868, %f257, 0fC0400000, %f93;
	setp.ge.f32 	%p136, %f868, 0f00000000;
	add.f32 	%f869, %f866, 0f3F800000;
	selp.f32 	%f1356, %f869, %f866, %p136;
$L__BB0_61:                             // %__internal_fmodf_fastpath_quot.exit.i.i1641
	fma.rn.f32 	%f1358, %f1356, 0fC0000000, %f1358;
$L__BB0_66:                             // %__internal_fmodf_kernel.exit.i1660
	add.f32 	%f268, %f266, %f267;
	abs.f32 	%f270, %f266;
	add.f32 	%f302, %f300, %f301;
	abs.f32 	%f304, %f300;
	add.f32 	%f337, %f335, %f336;
	abs.f32 	%f339, %f335;
	add.f32 	%f371, %f369, %f370;
	abs.f32 	%f373, %f369;
	add.f32 	%f406, %f404, %f405;
	abs.f32 	%f408, %f404;
	add.f32 	%f440, %f438, %f439;
	abs.f32 	%f442, %f438;
	add.f32 	%f475, %f473, %f474;
	abs.f32 	%f477, %f473;
	add.f32 	%f509, %f507, %f508;
	abs.f32 	%f511, %f507;
	add.f32 	%f544, %f542, %f543;
	abs.f32 	%f546, %f542;
	add.f32 	%f578, %f576, %f577;
	abs.f32 	%f580, %f576;
	add.f32 	%f613, %f611, %f612;
	abs.f32 	%f615, %f611;
	add.f32 	%f647, %f645, %f646;
	abs.f32 	%f649, %f645;
	add.f32 	%f682, %f680, %f681;
	abs.f32 	%f684, %f680;
	add.f32 	%f716, %f714, %f715;
	abs.f32 	%f718, %f714;
	add.f32 	%f751, %f749, %f750;
	abs.f32 	%f753, %f749;
	add.f32 	%f785, %f783, %f784;
	abs.f32 	%f787, %f783;
	cvt.rzi.f32.f32 	%f835, %f834;
	setp.gt.f32 	%p124, %f836, 0f4B000000;
	shr.u32 	%r185, %r1, 1;
	shr.u32 	%r191, %r1, 3;
	abs.f32 	%f883, %f1358;
	setp.gtu.f32 	%p143, %f883, 0f7F800000;
	@%p143 bra 	$L__BB0_68;
// %bb.67:
	mov.b32 	%r455, %f90;
	and.b32  	%r456, %r455, -2147483648;
	mov.b32 	%r457, %f1358;
	or.b32  	%r458, %r456, %r457;
	mov.b32 	%f1358, %r458;
$L__BB0_68:                             // %__nv_fmodf.exit1661
	cvt.rzi.f32.f32 	%f269, %f268;
	setp.gt.f32 	%p16, %f270, 0f4B000000;
	cvt.rzi.f32.f32 	%f303, %f302;
	setp.gt.f32 	%p22, %f304, 0f4B000000;
	cvt.rzi.f32.f32 	%f338, %f337;
	setp.gt.f32 	%p28, %f339, 0f4B000000;
	cvt.rzi.f32.f32 	%f372, %f371;
	setp.gt.f32 	%p34, %f373, 0f4B000000;
	cvt.rzi.f32.f32 	%f407, %f406;
	setp.gt.f32 	%p40, %f408, 0f4B000000;
	cvt.rzi.f32.f32 	%f441, %f440;
	setp.gt.f32 	%p46, %f442, 0f4B000000;
	cvt.rzi.f32.f32 	%f476, %f475;
	setp.gt.f32 	%p52, %f477, 0f4B000000;
	cvt.rzi.f32.f32 	%f510, %f509;
	setp.gt.f32 	%p58, %f511, 0f4B000000;
	cvt.rzi.f32.f32 	%f545, %f544;
	setp.gt.f32 	%p64, %f546, 0f4B000000;
	cvt.rzi.f32.f32 	%f579, %f578;
	setp.gt.f32 	%p70, %f580, 0f4B000000;
	cvt.rzi.f32.f32 	%f614, %f613;
	setp.gt.f32 	%p76, %f615, 0f4B000000;
	cvt.rzi.f32.f32 	%f648, %f647;
	setp.gt.f32 	%p82, %f649, 0f4B000000;
	cvt.rzi.f32.f32 	%f683, %f682;
	setp.gt.f32 	%p88, %f684, 0f4B000000;
	cvt.rzi.f32.f32 	%f717, %f716;
	setp.gt.f32 	%p94, %f718, 0f4B000000;
	cvt.rzi.f32.f32 	%f752, %f751;
	setp.gt.f32 	%p100, %f753, 0f4B000000;
	cvt.rzi.f32.f32 	%f786, %f785;
	setp.gt.f32 	%p106, %f787, 0f4B000000;
	selp.f32 	%f837, %f832, %f835, %p124;
	cvt.rzi.f32.f32 	%f838, %f832;
	setp.lt.f32 	%p125, %f836, 0f3F000000;
	add.f32 	%f884, %f1358, %f1358;
	mov.b32 	%r471, %f884;
	and.b32  	%r472, %r471, -2147483648;
	or.b32  	%r473, %r472, 1056964608;
	mov.b32 	%f885, %r473;
	add.f32 	%f886, %f884, %f885;
	cvt.rzi.f32.f32 	%f887, %f886;
	abs.f32 	%f888, %f884;
	setp.gt.f32 	%p144, %f888, 0f4B000000;
	selp.f32 	%f889, %f884, %f887, %p144;
	cvt.rzi.f32.f32 	%f890, %f884;
	setp.lt.f32 	%p145, %f888, 0f3F000000;
	and.b32  	%r479, %r191, 2;
	or.b32  	%r480, %r189, %r479;
	and.b32  	%r481, %r185, 4;
	or.b32  	%r45, %r480, %r481;
	and.b32  	%r482, %r1, 3;
	mul.lo.s32 	%r483, %r482, %r45;
	shl.b32 	%r484, %r483, 1;
	neg.s32 	%r485, %r484;
	cvt.rn.f32.s32 	%f916, %r485;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f107, %f916, %f917;
	abs.f32 	%f1362, %f107;
	setp.lt.f32 	%p151, %f1362, 0f40000000;
	@%p151 bra 	$L__BB0_80;
// %bb.69:
	setp.gtu.f32 	%p152, %f1362, 0f4B800000;
	@%p152 bra 	$L__BB0_76;
	bra.uni 	$L__BB0_70;
$L__BB0_76:
	mov.b32 	%r47, %f1362;
	and.b32  	%r486, %r47, 8388607;
	or.b32  	%r16360, %r486, 1065353216;
	mov.b32 	%f1361, %r16360;
	add.s32 	%r487, %r47, -1073741824;
	and.b32  	%r16361, %r487, -8388608;
	setp.eq.s32 	%p158, %r16361, 0;
	@%p158 bra 	$L__BB0_79;
// %bb.77:                              // %__nv_fmaf_rn.exit4.i.i.i1686.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
$L__BB0_78:                             // %__nv_fmaf_rn.exit4.i.i.i1686
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r488, %r16361, 192937984;
	add.s32 	%r489, %r16360, %r488;
	mov.b32 	%f928, %r489;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1361, %f928, %f934;
	sub.s32 	%r16361, %r16361, %r488;
	mov.b32 	%r16360, %f1361;
	setp.ne.s32 	%p159, %r16361, 0;
	setp.ne.s32 	%p160, %r16360, 0;
	and.pred  	%p161, %p159, %p160;
	@%p161 bra 	$L__BB0_78;
$L__BB0_79:                             // %__internal_fmodf_slowpath_mod.exit.i.i1688
	setp.gt.u32 	%p162, %r47, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p162;
	mul.f32 	%f936, %f1361, 0f34000000;
	mul.f32 	%f1362, %f935, %f936;
	bra.uni 	$L__BB0_80;
$L__BB0_70:                             // %__nv_fast_fdividef.exit.i.i.i1665
	div.approx.f32 	%f919, %f1362, %f257;
	cvt.rzi.f32.f32 	%f1360, %f919;
	fma.rn.f32 	%f110, %f1360, 0fC0000000, %f1362;
	mov.b32 	%r46, %f110;
	setp.lt.u32 	%p153, %r46, 1073741824;
	@%p153 bra 	$L__BB0_75;
// %bb.71:
	setp.lt.u32 	%p154, %r46, -2147483647;
	@%p154 bra 	$L__BB0_73;
// %bb.72:
	add.f32 	%f924, %f1360, 0fBF800000;
	setp.lt.f32 	%p157, %f110, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1360, %f925, %f924, %p157;
	bra.uni 	$L__BB0_75;
$L__BB0_73:
	add.f32 	%f1360, %f1360, 0f3F800000;
	setp.ltu.f32 	%p155, %f110, 0f40800000;
	@%p155 bra 	$L__BB0_75;
// %bb.74:                              // %__nv_fmaf_rn.exit.i.i.i1669
	add.f32 	%f920, %f1360, 0f3F800000;
	fma.rn.f32 	%f922, %f257, 0fC0400000, %f110;
	setp.ge.f32 	%p156, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1360, %f923, %f920, %p156;
$L__BB0_75:                             // %__internal_fmodf_fastpath_quot.exit.i.i1672
	fma.rn.f32 	%f1362, %f1360, 0fC0000000, %f1362;
$L__BB0_80:                             // %__internal_fmodf_kernel.exit.i1691
	selp.f32 	%f271, %f266, %f269, %p16;
	cvt.rzi.f32.f32 	%f272, %f266;
	setp.lt.f32 	%p17, %f270, 0f3F000000;
	selp.f32 	%f305, %f300, %f303, %p22;
	cvt.rzi.f32.f32 	%f306, %f300;
	setp.lt.f32 	%p23, %f304, 0f3F000000;
	selp.f32 	%f340, %f335, %f338, %p28;
	cvt.rzi.f32.f32 	%f341, %f335;
	setp.lt.f32 	%p29, %f339, 0f3F000000;
	selp.f32 	%f374, %f369, %f372, %p34;
	cvt.rzi.f32.f32 	%f375, %f369;
	setp.lt.f32 	%p35, %f373, 0f3F000000;
	selp.f32 	%f409, %f404, %f407, %p40;
	cvt.rzi.f32.f32 	%f410, %f404;
	setp.lt.f32 	%p41, %f408, 0f3F000000;
	selp.f32 	%f443, %f438, %f441, %p46;
	cvt.rzi.f32.f32 	%f444, %f438;
	setp.lt.f32 	%p47, %f442, 0f3F000000;
	selp.f32 	%f478, %f473, %f476, %p52;
	cvt.rzi.f32.f32 	%f479, %f473;
	setp.lt.f32 	%p53, %f477, 0f3F000000;
	selp.f32 	%f512, %f507, %f510, %p58;
	cvt.rzi.f32.f32 	%f513, %f507;
	setp.lt.f32 	%p59, %f511, 0f3F000000;
	selp.f32 	%f547, %f542, %f545, %p64;
	cvt.rzi.f32.f32 	%f548, %f542;
	setp.lt.f32 	%p65, %f546, 0f3F000000;
	selp.f32 	%f581, %f576, %f579, %p70;
	cvt.rzi.f32.f32 	%f582, %f576;
	setp.lt.f32 	%p71, %f580, 0f3F000000;
	selp.f32 	%f616, %f611, %f614, %p76;
	cvt.rzi.f32.f32 	%f617, %f611;
	setp.lt.f32 	%p77, %f615, 0f3F000000;
	selp.f32 	%f650, %f645, %f648, %p82;
	cvt.rzi.f32.f32 	%f651, %f645;
	setp.lt.f32 	%p83, %f649, 0f3F000000;
	selp.f32 	%f685, %f680, %f683, %p88;
	cvt.rzi.f32.f32 	%f686, %f680;
	setp.lt.f32 	%p89, %f684, 0f3F000000;
	selp.f32 	%f719, %f714, %f717, %p94;
	cvt.rzi.f32.f32 	%f720, %f714;
	setp.lt.f32 	%p95, %f718, 0f3F000000;
	selp.f32 	%f754, %f749, %f752, %p100;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p101, %f753, 0f3F000000;
	selp.f32 	%f788, %f783, %f786, %p106;
	cvt.rzi.f32.f32 	%f789, %f783;
	setp.lt.f32 	%p107, %f787, 0f3F000000;
	selp.f32 	%f839, %f838, %f837, %p125;
	selp.f32 	%f891, %f890, %f889, %p145;
	shl.b32 	%r179, %r1, 1;
	abs.f32 	%f937, %f1362;
	setp.gtu.f32 	%p163, %f937, 0f7F800000;
	@%p163 bra 	$L__BB0_82;
// %bb.81:
	mov.b32 	%r490, %f107;
	and.b32  	%r491, %r490, -2147483648;
	mov.b32 	%r492, %f1362;
	or.b32  	%r493, %r491, %r492;
	mov.b32 	%f1362, %r493;
$L__BB0_82:                             // %__nv_fmodf.exit1692
	selp.f32 	%f273, %f272, %f271, %p17;
	selp.f32 	%f307, %f306, %f305, %p23;
	selp.f32 	%f342, %f341, %f340, %p29;
	selp.f32 	%f376, %f375, %f374, %p35;
	selp.f32 	%f411, %f410, %f409, %p41;
	selp.f32 	%f445, %f444, %f443, %p47;
	selp.f32 	%f480, %f479, %f478, %p53;
	selp.f32 	%f514, %f513, %f512, %p59;
	selp.f32 	%f549, %f548, %f547, %p65;
	selp.f32 	%f583, %f582, %f581, %p71;
	selp.f32 	%f618, %f617, %f616, %p77;
	selp.f32 	%f652, %f651, %f650, %p83;
	selp.f32 	%f687, %f686, %f685, %p89;
	selp.f32 	%f721, %f720, %f719, %p95;
	selp.f32 	%f756, %f755, %f754, %p101;
	selp.f32 	%f790, %f789, %f788, %p107;
	fma.rn.f32 	%f840, %f839, 0fBF000000, %f1354;
	fma.rn.f32 	%f892, %f891, 0fBF000000, %f1358;
	add.f32 	%f938, %f1362, %f1362;
	mov.b32 	%r494, %f938;
	and.b32  	%r495, %r494, -2147483648;
	or.b32  	%r496, %r495, 1056964608;
	mov.b32 	%f939, %r496;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p164, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p164;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p165, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p165;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1362;
	and.b32  	%r502, %r179, 6;
	mov.u32 	%r503, -8;
	sub.s32 	%r504, %r503, %r502;
	mul.lo.s32 	%r505, %r45, %r504;
	cvt.rn.f32.s32 	%f968, %r505;
	div.approx.f32 	%f126, %f968, %f917;
	abs.f32 	%f1366, %f126;
	setp.lt.f32 	%p171, %f1366, 0f40000000;
	@%p171 bra 	$L__BB0_94;
// %bb.83:
	setp.gtu.f32 	%p172, %f1366, 0f4B800000;
	@%p172 bra 	$L__BB0_90;
	bra.uni 	$L__BB0_84;
$L__BB0_90:
	mov.b32 	%r55, %f1366;
	and.b32  	%r506, %r55, 8388607;
	or.b32  	%r16362, %r506, 1065353216;
	mov.b32 	%f1365, %r16362;
	add.s32 	%r507, %r55, -1073741824;
	and.b32  	%r16363, %r507, -8388608;
	setp.eq.s32 	%p178, %r16363, 0;
	@%p178 bra 	$L__BB0_93;
// %bb.91:                              // %__nv_fmaf_rn.exit4.i.i.i1717.preheader
	mov.f32 	%f979, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f978,%f979;
	// end inline asm
$L__BB0_92:                             // %__nv_fmaf_rn.exit4.i.i.i1717
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r508, %r16363, 192937984;
	add.s32 	%r509, %r16362, %r508;
	mov.b32 	%f980, %r509;
	mul.f32 	%f981, %f978, %f980;
	sub.f32 	%f982, %f980, %f981;
	fma.rn.f32 	%f983, %f982, %f978, %f981;
	sub.f32 	%f984, %f980, %f983;
	fma.rz.f32 	%f985, %f984, %f978, %f983;
	cvt.rzi.f32.f32 	%f986, %f985;
	sub.f32 	%f1365, %f980, %f986;
	sub.s32 	%r16363, %r16363, %r508;
	mov.b32 	%r16362, %f1365;
	setp.ne.s32 	%p179, %r16363, 0;
	setp.ne.s32 	%p180, %r16362, 0;
	and.pred  	%p181, %p179, %p180;
	@%p181 bra 	$L__BB0_92;
$L__BB0_93:                             // %__internal_fmodf_slowpath_mod.exit.i.i1719
	setp.gt.u32 	%p182, %r55, 2139095039;
	selp.f32 	%f987, 0f7FFFFFFF, 0f4B800000, %p182;
	mul.f32 	%f988, %f1365, 0f34000000;
	mul.f32 	%f1366, %f987, %f988;
	bra.uni 	$L__BB0_94;
$L__BB0_84:                             // %__nv_fast_fdividef.exit.i.i.i1696
	div.approx.f32 	%f971, %f1366, %f257;
	cvt.rzi.f32.f32 	%f1364, %f971;
	fma.rn.f32 	%f129, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r54, %f129;
	setp.lt.u32 	%p173, %r54, 1073741824;
	@%p173 bra 	$L__BB0_89;
// %bb.85:
	setp.lt.u32 	%p174, %r54, -2147483647;
	@%p174 bra 	$L__BB0_87;
// %bb.86:
	add.f32 	%f976, %f1364, 0fBF800000;
	setp.lt.f32 	%p177, %f129, 0fC0000000;
	add.f32 	%f977, %f976, 0fBF800000;
	selp.f32 	%f1364, %f977, %f976, %p177;
	bra.uni 	$L__BB0_89;
$L__BB0_87:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p175, %f129, 0f40800000;
	@%p175 bra 	$L__BB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i1700
	add.f32 	%f972, %f1364, 0f3F800000;
	fma.rn.f32 	%f974, %f257, 0fC0400000, %f129;
	setp.ge.f32 	%p176, %f974, 0f00000000;
	add.f32 	%f975, %f972, 0f3F800000;
	selp.f32 	%f1364, %f975, %f972, %p176;
$L__BB0_89:                             // %__internal_fmodf_fastpath_quot.exit.i.i1703
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
$L__BB0_94:                             // %__internal_fmodf_kernel.exit.i1722
	fma.rn.f32 	%f274, %f273, 0fBF000000, %f265;
	fma.rn.f32 	%f308, %f307, 0fBF000000, %f299;
	fma.rn.f32 	%f343, %f342, 0fBF000000, %f334;
	fma.rn.f32 	%f377, %f376, 0fBF000000, %f368;
	fma.rn.f32 	%f412, %f411, 0fBF000000, %f403;
	fma.rn.f32 	%f446, %f445, 0fBF000000, %f437;
	fma.rn.f32 	%f481, %f480, 0fBF000000, %f472;
	fma.rn.f32 	%f515, %f514, 0fBF000000, %f506;
	fma.rn.f32 	%f550, %f549, 0fBF000000, %f541;
	fma.rn.f32 	%f584, %f583, 0fBF000000, %f575;
	fma.rn.f32 	%f619, %f618, 0fBF000000, %f610;
	fma.rn.f32 	%f653, %f652, 0fBF000000, %f644;
	fma.rn.f32 	%f688, %f687, 0fBF000000, %f679;
	fma.rn.f32 	%f722, %f721, 0fBF000000, %f713;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f748;
	fma.rn.f32 	%f791, %f790, 0fBF000000, %f782;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f893, %f892, %f892;
	mul.f32 	%f947, %f946, %f946;
	abs.f32 	%f989, %f1366;
	setp.gtu.f32 	%p183, %f989, 0f7F800000;
	@%p183 bra 	$L__BB0_96;
// %bb.95:
	mov.b32 	%r510, %f126;
	and.b32  	%r511, %r510, -2147483648;
	mov.b32 	%r512, %f1366;
	or.b32  	%r513, %r511, %r512;
	mov.b32 	%f1366, %r513;
$L__BB0_96:                             // %__nv_fmodf.exit1723
	mul.f32 	%f275, %f274, %f274;
	mul.f32 	%f309, %f308, %f308;
	mul.f32 	%f344, %f343, %f343;
	mul.f32 	%f378, %f377, %f377;
	mul.f32 	%f413, %f412, %f412;
	mul.f32 	%f447, %f446, %f446;
	mul.f32 	%f482, %f481, %f481;
	mul.f32 	%f516, %f515, %f515;
	mul.f32 	%f551, %f550, %f550;
	mul.f32 	%f585, %f584, %f584;
	mul.f32 	%f620, %f619, %f619;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f689, %f688, %f688;
	mul.f32 	%f723, %f722, %f722;
	mul.f32 	%f758, %f757, %f757;
	mul.f32 	%f792, %f791, %f791;
	fma.rn.f32 	%f842, %f841, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f843, %f841, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f894, %f893, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f895, %f893, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f948, %f947, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f949, %f947, 0f3E684E12, 0fBFAAD2E0;
	add.f32 	%f990, %f1366, %f1366;
	mov.b32 	%r526, %f990;
	and.b32  	%r527, %r526, -2147483648;
	or.b32  	%r528, %r527, 1056964608;
	mov.b32 	%f991, %r528;
	add.f32 	%f992, %f990, %f991;
	cvt.rzi.f32.f32 	%f993, %f992;
	abs.f32 	%f994, %f990;
	setp.gt.f32 	%p184, %f994, 0f4B000000;
	selp.f32 	%f995, %f990, %f993, %p184;
	cvt.rzi.f32.f32 	%f996, %f990;
	setp.lt.f32 	%p185, %f994, 0f3F000000;
	selp.f32 	%f997, %f996, %f995, %p185;
	fma.rn.f32 	%f998, %f997, 0fBF000000, %f1366;
	mul.f32 	%f999, %f998, %f998;
	fma.rn.f32 	%f1000, %f999, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1001, %f999, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r534, %r187, 2147483646;
	shl.b32 	%r535, %r186, 2;
	sub.s32 	%r536, %r534, %r535;
	mul.lo.s32 	%r537, %r536, %r45;
	shl.b32 	%r66, %r537, 1;
	cvt.rn.f32.s32 	%f143, %r66;
	div.approx.f32 	%f144, %f143, %f289;
	abs.f32 	%f1370, %f144;
	setp.lt.f32 	%p191, %f1370, 0f40000000;
	@%p191 bra 	$L__BB0_108;
// %bb.97:
	setp.gtu.f32 	%p192, %f1370, 0f4B800000;
	@%p192 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_98;
$L__BB0_104:
	mov.b32 	%r68, %f1370;
	and.b32  	%r538, %r68, 8388607;
	or.b32  	%r16364, %r538, 1065353216;
	mov.b32 	%f1369, %r16364;
	add.s32 	%r539, %r68, -1073741824;
	and.b32  	%r16365, %r539, -8388608;
	setp.eq.s32 	%p198, %r16365, 0;
	@%p198 bra 	$L__BB0_107;
// %bb.105:                             // %__nv_fmaf_rn.exit4.i.i.i1748.preheader
	mov.f32 	%f1032, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1031,%f1032;
	// end inline asm
$L__BB0_106:                            // %__nv_fmaf_rn.exit4.i.i.i1748
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r540, %r16365, 192937984;
	add.s32 	%r541, %r16364, %r540;
	mov.b32 	%f1033, %r541;
	mul.f32 	%f1034, %f1031, %f1033;
	sub.f32 	%f1035, %f1033, %f1034;
	fma.rn.f32 	%f1036, %f1035, %f1031, %f1034;
	sub.f32 	%f1037, %f1033, %f1036;
	fma.rz.f32 	%f1038, %f1037, %f1031, %f1036;
	cvt.rzi.f32.f32 	%f1039, %f1038;
	sub.f32 	%f1369, %f1033, %f1039;
	sub.s32 	%r16365, %r16365, %r540;
	mov.b32 	%r16364, %f1369;
	setp.ne.s32 	%p199, %r16365, 0;
	setp.ne.s32 	%p200, %r16364, 0;
	and.pred  	%p201, %p199, %p200;
	@%p201 bra 	$L__BB0_106;
$L__BB0_107:                            // %__internal_fmodf_slowpath_mod.exit.i.i1750
	setp.gt.u32 	%p202, %r68, 2139095039;
	selp.f32 	%f1040, 0f7FFFFFFF, 0f4B800000, %p202;
	mul.f32 	%f1041, %f1369, 0f34000000;
	mul.f32 	%f1370, %f1040, %f1041;
	bra.uni 	$L__BB0_108;
$L__BB0_98:                             // %__nv_fast_fdividef.exit.i.i.i1727
	div.approx.f32 	%f1024, %f1370, %f257;
	cvt.rzi.f32.f32 	%f1368, %f1024;
	fma.rn.f32 	%f147, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r67, %f147;
	setp.lt.u32 	%p193, %r67, 1073741824;
	@%p193 bra 	$L__BB0_103;
// %bb.99:
	setp.lt.u32 	%p194, %r67, -2147483647;
	@%p194 bra 	$L__BB0_101;
// %bb.100:
	add.f32 	%f1029, %f1368, 0fBF800000;
	setp.lt.f32 	%p197, %f147, 0fC0000000;
	add.f32 	%f1030, %f1029, 0fBF800000;
	selp.f32 	%f1368, %f1030, %f1029, %p197;
	bra.uni 	$L__BB0_103;
$L__BB0_101:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p195, %f147, 0f40800000;
	@%p195 bra 	$L__BB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i1731
	add.f32 	%f1025, %f1368, 0f3F800000;
	fma.rn.f32 	%f1027, %f257, 0fC0400000, %f147;
	setp.ge.f32 	%p196, %f1027, 0f00000000;
	add.f32 	%f1028, %f1025, 0f3F800000;
	selp.f32 	%f1368, %f1028, %f1025, %p196;
$L__BB0_103:                            // %__internal_fmodf_fastpath_quot.exit.i.i1734
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
$L__BB0_108:                            // %__internal_fmodf_kernel.exit.i1753
	cvt.rzi.s32.f32 	%r294, %f273;
	fma.rn.f32 	%f276, %f275, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f277, %f275, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r301, %f307;
	fma.rn.f32 	%f310, %f309, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f311, %f309, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r312, %f342;
	fma.rn.f32 	%f345, %f344, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f346, %f344, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r319, %f376;
	fma.rn.f32 	%f379, %f378, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f380, %f378, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r330, %f411;
	fma.rn.f32 	%f414, %f413, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f415, %f413, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r337, %f445;
	fma.rn.f32 	%f448, %f447, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f449, %f447, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r348, %f480;
	fma.rn.f32 	%f483, %f482, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f484, %f482, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r355, %f514;
	fma.rn.f32 	%f517, %f516, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f518, %f516, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r366, %f549;
	fma.rn.f32 	%f552, %f551, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f553, %f551, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r373, %f583;
	fma.rn.f32 	%f586, %f585, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f587, %f585, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r384, %f618;
	fma.rn.f32 	%f621, %f620, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f622, %f620, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r391, %f652;
	fma.rn.f32 	%f655, %f654, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f656, %f654, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r402, %f687;
	fma.rn.f32 	%f690, %f689, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f691, %f689, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r409, %f721;
	fma.rn.f32 	%f724, %f723, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f725, %f723, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r420, %f756;
	fma.rn.f32 	%f759, %f758, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f760, %f758, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r427, %f790;
	fma.rn.f32 	%f793, %f792, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f794, %f792, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r445, %f839;
	fma.rn.f32 	%f844, %f842, %f841, 0fC0A55DF6;
	fma.rn.f32 	%f845, %f843, %f841, 0f4081E0CF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	cvt.rzi.s32.f32 	%r474, %f891;
	fma.rn.f32 	%f896, %f894, %f893, 0fC0A55DF6;
	fma.rn.f32 	%f897, %f895, %f893, 0f4081E0CF;
	fma.rn.f32 	%f898, %f893, %f892, 0f00000000;
	cvt.rzi.s32.f32 	%r497, %f945;
	fma.rn.f32 	%f950, %f948, %f947, 0fC0A55DF6;
	fma.rn.f32 	%f951, %f949, %f947, 0f4081E0CF;
	fma.rn.f32 	%f952, %f947, %f946, 0f00000000;
	cvt.rzi.s32.f32 	%r529, %f997;
	fma.rn.f32 	%f1002, %f1000, %f999, 0fC0A55DF6;
	fma.rn.f32 	%f1003, %f1001, %f999, 0f4081E0CF;
	fma.rn.f32 	%f1004, %f999, %f998, 0f00000000;
	abs.f32 	%f1042, %f1370;
	setp.gtu.f32 	%p203, %f1042, 0f7F800000;
	@%p203 bra 	$L__BB0_110;
// %bb.109:
	mov.b32 	%r542, %f144;
	and.b32  	%r543, %r542, -2147483648;
	mov.b32 	%r544, %f1370;
	or.b32  	%r545, %r543, %r544;
	mov.b32 	%f1370, %r545;
$L__BB0_110:                            // %__nv_fmodf.exit1754
	add.s32 	%r295, %r294, 1;
	fma.rn.f32 	%f278, %f276, %f275, 0fC0A55DF6;
	fma.rn.f32 	%f279, %f277, %f275, 0f4081E0CF;
	fma.rn.f32 	%f280, %f275, %f274, 0f00000000;
	add.s32 	%r302, %r301, 1;
	fma.rn.f32 	%f312, %f310, %f309, 0fC0A55DF6;
	fma.rn.f32 	%f313, %f311, %f309, 0f4081E0CF;
	fma.rn.f32 	%f314, %f309, %f308, 0f00000000;
	add.s32 	%r313, %r312, 1;
	fma.rn.f32 	%f347, %f345, %f344, 0fC0A55DF6;
	fma.rn.f32 	%f348, %f346, %f344, 0f4081E0CF;
	fma.rn.f32 	%f349, %f344, %f343, 0f00000000;
	add.s32 	%r320, %r319, 1;
	fma.rn.f32 	%f381, %f379, %f378, 0fC0A55DF6;
	fma.rn.f32 	%f382, %f380, %f378, 0f4081E0CF;
	fma.rn.f32 	%f383, %f378, %f377, 0f00000000;
	add.s32 	%r331, %r330, 1;
	fma.rn.f32 	%f416, %f414, %f413, 0fC0A55DF6;
	fma.rn.f32 	%f417, %f415, %f413, 0f4081E0CF;
	fma.rn.f32 	%f418, %f413, %f412, 0f00000000;
	add.s32 	%r338, %r337, 1;
	fma.rn.f32 	%f450, %f448, %f447, 0fC0A55DF6;
	fma.rn.f32 	%f451, %f449, %f447, 0f4081E0CF;
	fma.rn.f32 	%f452, %f447, %f446, 0f00000000;
	add.s32 	%r349, %r348, 1;
	fma.rn.f32 	%f485, %f483, %f482, 0fC0A55DF6;
	fma.rn.f32 	%f486, %f484, %f482, 0f4081E0CF;
	fma.rn.f32 	%f487, %f482, %f481, 0f00000000;
	add.s32 	%r356, %r355, 1;
	fma.rn.f32 	%f519, %f517, %f516, 0fC0A55DF6;
	fma.rn.f32 	%f520, %f518, %f516, 0f4081E0CF;
	fma.rn.f32 	%f521, %f516, %f515, 0f00000000;
	add.s32 	%r367, %r366, 1;
	fma.rn.f32 	%f554, %f552, %f551, 0fC0A55DF6;
	fma.rn.f32 	%f555, %f553, %f551, 0f4081E0CF;
	fma.rn.f32 	%f556, %f551, %f550, 0f00000000;
	add.s32 	%r374, %r373, 1;
	fma.rn.f32 	%f588, %f586, %f585, 0fC0A55DF6;
	fma.rn.f32 	%f589, %f587, %f585, 0f4081E0CF;
	fma.rn.f32 	%f590, %f585, %f584, 0f00000000;
	add.s32 	%r385, %r384, 1;
	fma.rn.f32 	%f623, %f621, %f620, 0fC0A55DF6;
	fma.rn.f32 	%f624, %f622, %f620, 0f4081E0CF;
	fma.rn.f32 	%f625, %f620, %f619, 0f00000000;
	add.s32 	%r392, %r391, 1;
	fma.rn.f32 	%f657, %f655, %f654, 0fC0A55DF6;
	fma.rn.f32 	%f658, %f656, %f654, 0f4081E0CF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	add.s32 	%r403, %r402, 1;
	fma.rn.f32 	%f692, %f690, %f689, 0fC0A55DF6;
	fma.rn.f32 	%f693, %f691, %f689, 0f4081E0CF;
	fma.rn.f32 	%f694, %f689, %f688, 0f00000000;
	add.s32 	%r410, %r409, 1;
	fma.rn.f32 	%f726, %f724, %f723, 0fC0A55DF6;
	fma.rn.f32 	%f727, %f725, %f723, 0f4081E0CF;
	fma.rn.f32 	%f728, %f723, %f722, 0f00000000;
	add.s32 	%r421, %r420, 1;
	fma.rn.f32 	%f761, %f759, %f758, 0fC0A55DF6;
	fma.rn.f32 	%f762, %f760, %f758, 0f4081E0CF;
	fma.rn.f32 	%f763, %f758, %f757, 0f00000000;
	add.s32 	%r428, %r427, 1;
	fma.rn.f32 	%f795, %f793, %f792, 0fC0A55DF6;
	fma.rn.f32 	%f796, %f794, %f792, 0f4081E0CF;
	fma.rn.f32 	%f797, %f792, %f791, 0f00000000;
	fma.rn.f32 	%f847, %f845, %f841, 0fC09DE9E6;
	fma.rn.f32 	%f848, %f844, %f846, 0f00000000;
	and.b32  	%r446, %r445, 1;
	fma.rn.f32 	%f899, %f897, %f893, 0fC09DE9E6;
	fma.rn.f32 	%f900, %f896, %f898, 0f00000000;
	and.b32  	%r475, %r474, 1;
	fma.rn.f32 	%f953, %f951, %f947, 0fC09DE9E6;
	fma.rn.f32 	%f954, %f950, %f952, 0f00000000;
	and.b32  	%r498, %r497, 1;
	fma.rn.f32 	%f1005, %f1003, %f999, 0fC09DE9E6;
	fma.rn.f32 	%f1006, %f1002, %f1004, 0f00000000;
	and.b32  	%r530, %r529, 1;
	add.f32 	%f1043, %f1370, %f1370;
	mov.b32 	%r546, %f1043;
	and.b32  	%r547, %r546, -2147483648;
	or.b32  	%r548, %r547, 1056964608;
	mov.b32 	%f1044, %r548;
	add.f32 	%f1045, %f1043, %f1044;
	cvt.rzi.f32.f32 	%f1046, %f1045;
	abs.f32 	%f1047, %f1043;
	setp.gt.f32 	%p204, %f1047, 0f4B000000;
	selp.f32 	%f1048, %f1043, %f1046, %p204;
	cvt.rzi.f32.f32 	%f1049, %f1043;
	setp.lt.f32 	%p205, %f1047, 0f3F000000;
	selp.f32 	%f1050, %f1049, %f1048, %p205;
	cvt.rzi.s32.f32 	%r549, %f1050;
	fma.rn.f32 	%f1051, %f1050, 0fBF000000, %f1370;
	mul.f32 	%f1052, %f1051, %f1051;
	fma.rn.f32 	%f1053, %f1052, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1054, %f1052, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1055, %f1053, %f1052, 0fC0A55DF6;
	fma.rn.f32 	%f1056, %f1054, %f1052, 0f4081E0CF;
	fma.rn.f32 	%f1057, %f1052, %f1051, 0f00000000;
	shl.b32 	%r554, %r45, 4;
	sub.s32 	%r555, %r66, %r554;
	cvt.rn.f32.s32 	%f163, %r555;
	div.approx.f32 	%f164, %f163, %f289;
	abs.f32 	%f1374, %f164;
	setp.lt.f32 	%p211, %f1374, 0f40000000;
	@%p211 bra 	$L__BB0_122;
// %bb.111:
	setp.gtu.f32 	%p212, %f1374, 0f4B800000;
	@%p212 bra 	$L__BB0_118;
	bra.uni 	$L__BB0_112;
$L__BB0_118:
	mov.b32 	%r76, %f1374;
	and.b32  	%r556, %r76, 8388607;
	or.b32  	%r16366, %r556, 1065353216;
	mov.b32 	%f1373, %r16366;
	add.s32 	%r557, %r76, -1073741824;
	and.b32  	%r16367, %r557, -8388608;
	setp.eq.s32 	%p218, %r16367, 0;
	@%p218 bra 	$L__BB0_121;
// %bb.119:                             // %__nv_fmaf_rn.exit4.i.i.i1779.preheader
	mov.f32 	%f1083, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1082,%f1083;
	// end inline asm
$L__BB0_120:                            // %__nv_fmaf_rn.exit4.i.i.i1779
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r558, %r16367, 192937984;
	add.s32 	%r559, %r16366, %r558;
	mov.b32 	%f1084, %r559;
	mul.f32 	%f1085, %f1082, %f1084;
	sub.f32 	%f1086, %f1084, %f1085;
	fma.rn.f32 	%f1087, %f1086, %f1082, %f1085;
	sub.f32 	%f1088, %f1084, %f1087;
	fma.rz.f32 	%f1089, %f1088, %f1082, %f1087;
	cvt.rzi.f32.f32 	%f1090, %f1089;
	sub.f32 	%f1373, %f1084, %f1090;
	sub.s32 	%r16367, %r16367, %r558;
	mov.b32 	%r16366, %f1373;
	setp.ne.s32 	%p219, %r16367, 0;
	setp.ne.s32 	%p220, %r16366, 0;
	and.pred  	%p221, %p219, %p220;
	@%p221 bra 	$L__BB0_120;
$L__BB0_121:                            // %__internal_fmodf_slowpath_mod.exit.i.i1781
	setp.gt.u32 	%p222, %r76, 2139095039;
	selp.f32 	%f1091, 0f7FFFFFFF, 0f4B800000, %p222;
	mul.f32 	%f1092, %f1373, 0f34000000;
	mul.f32 	%f1374, %f1091, %f1092;
	bra.uni 	$L__BB0_122;
$L__BB0_112:                            // %__nv_fast_fdividef.exit.i.i.i1758
	div.approx.f32 	%f1075, %f1374, %f257;
	cvt.rzi.f32.f32 	%f1372, %f1075;
	fma.rn.f32 	%f167, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r75, %f167;
	setp.lt.u32 	%p213, %r75, 1073741824;
	@%p213 bra 	$L__BB0_117;
// %bb.113:
	setp.lt.u32 	%p214, %r75, -2147483647;
	@%p214 bra 	$L__BB0_115;
// %bb.114:
	add.f32 	%f1080, %f1372, 0fBF800000;
	setp.lt.f32 	%p217, %f167, 0fC0000000;
	add.f32 	%f1081, %f1080, 0fBF800000;
	selp.f32 	%f1372, %f1081, %f1080, %p217;
	bra.uni 	$L__BB0_117;
$L__BB0_115:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p215, %f167, 0f40800000;
	@%p215 bra 	$L__BB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i1762
	add.f32 	%f1076, %f1372, 0f3F800000;
	fma.rn.f32 	%f1078, %f257, 0fC0400000, %f167;
	setp.ge.f32 	%p216, %f1078, 0f00000000;
	add.f32 	%f1079, %f1076, 0f3F800000;
	selp.f32 	%f1372, %f1079, %f1076, %p216;
$L__BB0_117:                            // %__internal_fmodf_fastpath_quot.exit.i.i1765
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
$L__BB0_122:                            // %__internal_fmodf_kernel.exit.i1784
	shl.b32 	%r277, %r4, 4;
	fma.rn.f32 	%f281, %f279, %f275, 0fC09DE9E6;
	fma.rn.f32 	%f282, %f278, %f280, 0f00000000;
	and.b32  	%r296, %r295, 1;
	fma.rn.f32 	%f315, %f313, %f309, 0fC09DE9E6;
	fma.rn.f32 	%f316, %f312, %f314, 0f00000000;
	and.b32  	%r303, %r302, 1;
	fma.rn.f32 	%f350, %f348, %f344, 0fC09DE9E6;
	fma.rn.f32 	%f351, %f347, %f349, 0f00000000;
	and.b32  	%r314, %r313, 1;
	fma.rn.f32 	%f384, %f382, %f378, 0fC09DE9E6;
	fma.rn.f32 	%f385, %f381, %f383, 0f00000000;
	and.b32  	%r321, %r320, 1;
	fma.rn.f32 	%f419, %f417, %f413, 0fC09DE9E6;
	fma.rn.f32 	%f420, %f416, %f418, 0f00000000;
	and.b32  	%r332, %r331, 1;
	fma.rn.f32 	%f453, %f451, %f447, 0fC09DE9E6;
	fma.rn.f32 	%f454, %f450, %f452, 0f00000000;
	and.b32  	%r339, %r338, 1;
	fma.rn.f32 	%f488, %f486, %f482, 0fC09DE9E6;
	fma.rn.f32 	%f489, %f485, %f487, 0f00000000;
	and.b32  	%r350, %r349, 1;
	fma.rn.f32 	%f522, %f520, %f516, 0fC09DE9E6;
	fma.rn.f32 	%f523, %f519, %f521, 0f00000000;
	and.b32  	%r357, %r356, 1;
	fma.rn.f32 	%f557, %f555, %f551, 0fC09DE9E6;
	fma.rn.f32 	%f558, %f554, %f556, 0f00000000;
	and.b32  	%r368, %r367, 1;
	fma.rn.f32 	%f591, %f589, %f585, 0fC09DE9E6;
	fma.rn.f32 	%f592, %f588, %f590, 0f00000000;
	and.b32  	%r375, %r374, 1;
	fma.rn.f32 	%f626, %f624, %f620, 0fC09DE9E6;
	fma.rn.f32 	%f627, %f623, %f625, 0f00000000;
	and.b32  	%r386, %r385, 1;
	fma.rn.f32 	%f660, %f658, %f654, 0fC09DE9E6;
	fma.rn.f32 	%f661, %f657, %f659, 0f00000000;
	and.b32  	%r393, %r392, 1;
	fma.rn.f32 	%f695, %f693, %f689, 0fC09DE9E6;
	fma.rn.f32 	%f696, %f692, %f694, 0f00000000;
	and.b32  	%r404, %r403, 1;
	fma.rn.f32 	%f729, %f727, %f723, 0fC09DE9E6;
	fma.rn.f32 	%f730, %f726, %f728, 0f00000000;
	and.b32  	%r411, %r410, 1;
	fma.rn.f32 	%f764, %f762, %f758, 0fC09DE9E6;
	fma.rn.f32 	%f765, %f761, %f763, 0f00000000;
	and.b32  	%r422, %r421, 1;
	fma.rn.f32 	%f798, %f796, %f792, 0fC09DE9E6;
	fma.rn.f32 	%f799, %f795, %f797, 0f00000000;
	and.b32  	%r429, %r428, 1;
	fma.rn.f32 	%f849, %f847, %f841, 0f3F800000;
	fma.rn.f32 	%f850, %f840, 0f40490FDB, %f848;
	setp.eq.b32 	%p126, %r446, 1;
	fma.rn.f32 	%f901, %f899, %f893, 0f3F800000;
	fma.rn.f32 	%f902, %f892, 0f40490FDB, %f900;
	setp.eq.b32 	%p146, %r475, 1;
	fma.rn.f32 	%f955, %f953, %f947, 0f3F800000;
	fma.rn.f32 	%f956, %f946, 0f40490FDB, %f954;
	setp.eq.b32 	%p166, %r498, 1;
	fma.rn.f32 	%f1007, %f1005, %f999, 0f3F800000;
	fma.rn.f32 	%f1008, %f998, 0f40490FDB, %f1006;
	setp.eq.b32 	%p186, %r530, 1;
	fma.rn.f32 	%f1058, %f1056, %f1052, 0fC09DE9E6;
	fma.rn.f32 	%f1059, %f1055, %f1057, 0f00000000;
	and.b32  	%r550, %r549, 1;
	abs.f32 	%f1093, %f1374;
	setp.gtu.f32 	%p223, %f1093, 0f7F800000;
	@%p223 bra 	$L__BB0_124;
// %bb.123:
	mov.b32 	%r560, %f164;
	and.b32  	%r561, %r560, -2147483648;
	mov.b32 	%r562, %f1374;
	or.b32  	%r563, %r561, %r562;
	mov.b32 	%f1374, %r563;
$L__BB0_124:                            // %__nv_fmodf.exit1785
	and.b32  	%r176, %r277, 1920;
	shl.b32 	%r177, %r1, 2;
	and.b32  	%r182, %r1, 18;
	fma.rn.f32 	%f283, %f281, %f275, 0f3F800000;
	fma.rn.f32 	%f284, %f274, 0f40490FDB, %f282;
	setp.eq.b32 	%p18, %r296, 1;
	fma.rn.f32 	%f317, %f315, %f309, 0f3F800000;
	fma.rn.f32 	%f318, %f308, 0f40490FDB, %f316;
	setp.eq.b32 	%p24, %r303, 1;
	fma.rn.f32 	%f352, %f350, %f344, 0f3F800000;
	fma.rn.f32 	%f353, %f343, 0f40490FDB, %f351;
	setp.eq.b32 	%p30, %r314, 1;
	fma.rn.f32 	%f386, %f384, %f378, 0f3F800000;
	fma.rn.f32 	%f387, %f377, 0f40490FDB, %f385;
	setp.eq.b32 	%p36, %r321, 1;
	fma.rn.f32 	%f421, %f419, %f413, 0f3F800000;
	fma.rn.f32 	%f422, %f412, 0f40490FDB, %f420;
	setp.eq.b32 	%p42, %r332, 1;
	fma.rn.f32 	%f455, %f453, %f447, 0f3F800000;
	fma.rn.f32 	%f456, %f446, 0f40490FDB, %f454;
	setp.eq.b32 	%p48, %r339, 1;
	fma.rn.f32 	%f490, %f488, %f482, 0f3F800000;
	fma.rn.f32 	%f491, %f481, 0f40490FDB, %f489;
	setp.eq.b32 	%p54, %r350, 1;
	fma.rn.f32 	%f524, %f522, %f516, 0f3F800000;
	fma.rn.f32 	%f525, %f515, 0f40490FDB, %f523;
	setp.eq.b32 	%p60, %r357, 1;
	fma.rn.f32 	%f559, %f557, %f551, 0f3F800000;
	fma.rn.f32 	%f560, %f550, 0f40490FDB, %f558;
	setp.eq.b32 	%p66, %r368, 1;
	fma.rn.f32 	%f593, %f591, %f585, 0f3F800000;
	fma.rn.f32 	%f594, %f584, 0f40490FDB, %f592;
	setp.eq.b32 	%p72, %r375, 1;
	fma.rn.f32 	%f628, %f626, %f620, 0f3F800000;
	fma.rn.f32 	%f629, %f619, 0f40490FDB, %f627;
	setp.eq.b32 	%p78, %r386, 1;
	fma.rn.f32 	%f662, %f660, %f654, 0f3F800000;
	fma.rn.f32 	%f663, %f653, 0f40490FDB, %f661;
	setp.eq.b32 	%p84, %r393, 1;
	fma.rn.f32 	%f697, %f695, %f689, 0f3F800000;
	fma.rn.f32 	%f698, %f688, 0f40490FDB, %f696;
	setp.eq.b32 	%p90, %r404, 1;
	fma.rn.f32 	%f731, %f729, %f723, 0f3F800000;
	fma.rn.f32 	%f732, %f722, 0f40490FDB, %f730;
	setp.eq.b32 	%p96, %r411, 1;
	fma.rn.f32 	%f766, %f764, %f758, 0f3F800000;
	fma.rn.f32 	%f767, %f757, 0f40490FDB, %f765;
	setp.eq.b32 	%p102, %r422, 1;
	fma.rn.f32 	%f800, %f798, %f792, 0f3F800000;
	fma.rn.f32 	%f801, %f791, 0f40490FDB, %f799;
	setp.eq.b32 	%p108, %r429, 1;
	selp.f32 	%f851, %f849, %f850, %p126;
	and.b32  	%r447, %r445, 2;
	selp.f32 	%f903, %f901, %f902, %p146;
	and.b32  	%r476, %r474, 2;
	selp.f32 	%f957, %f955, %f956, %p166;
	and.b32  	%r499, %r497, 2;
	selp.f32 	%f1009, %f1007, %f1008, %p186;
	and.b32  	%r531, %r529, 2;
	fma.rn.f32 	%f1060, %f1058, %f1052, 0f3F800000;
	fma.rn.f32 	%f1061, %f1051, 0f40490FDB, %f1059;
	setp.eq.b32 	%p206, %r550, 1;
	add.f32 	%f1094, %f1374, %f1374;
	mov.b32 	%r570, %f1094;
	and.b32  	%r571, %r570, -2147483648;
	or.b32  	%r572, %r571, 1056964608;
	mov.b32 	%f1095, %r572;
	add.f32 	%f1096, %f1094, %f1095;
	cvt.rzi.f32.f32 	%f1097, %f1096;
	abs.f32 	%f1098, %f1094;
	setp.gt.f32 	%p224, %f1098, 0f4B000000;
	selp.f32 	%f1099, %f1094, %f1097, %p224;
	cvt.rzi.f32.f32 	%f1100, %f1094;
	setp.lt.f32 	%p225, %f1098, 0f3F000000;
	selp.f32 	%f1101, %f1100, %f1099, %p225;
	cvt.rzi.s32.f32 	%r573, %f1101;
	fma.rn.f32 	%f1102, %f1101, 0fBF000000, %f1374;
	mul.f32 	%f1103, %f1102, %f1102;
	fma.rn.f32 	%f1104, %f1103, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1105, %f1103, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1106, %f1104, %f1103, 0fC0A55DF6;
	fma.rn.f32 	%f1107, %f1105, %f1103, 0f4081E0CF;
	fma.rn.f32 	%f1108, %f1103, %f1102, 0f00000000;
	fma.rn.f32 	%f1109, %f1107, %f1103, 0fC09DE9E6;
	fma.rn.f32 	%f1110, %f1106, %f1108, 0f00000000;
	fma.rn.f32 	%f1111, %f1109, %f1103, 0f3F800000;
	fma.rn.f32 	%f1112, %f1102, 0f40490FDB, %f1110;
	and.b32  	%r574, %r573, 1;
	setp.eq.b32 	%p226, %r574, 1;
	mov.f32 	%f1126, 0f41800000;
	div.approx.f32 	%f181, %f143, %f1126;
	abs.f32 	%f1378, %f181;
	setp.lt.f32 	%p231, %f1378, 0f40000000;
	@%p231 bra 	$L__BB0_136;
// %bb.125:
	setp.gtu.f32 	%p232, %f1378, 0f4B800000;
	@%p232 bra 	$L__BB0_132;
	bra.uni 	$L__BB0_126;
$L__BB0_132:
	mov.b32 	%r86, %f1378;
	and.b32  	%r578, %r86, 8388607;
	or.b32  	%r16368, %r578, 1065353216;
	mov.b32 	%f1377, %r16368;
	add.s32 	%r579, %r86, -1073741824;
	and.b32  	%r16369, %r579, -8388608;
	setp.eq.s32 	%p238, %r16369, 0;
	@%p238 bra 	$L__BB0_135;
// %bb.133:                             // %__nv_fmaf_rn.exit4.i.i.i1810.preheader
	mov.f32 	%f1136, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1135,%f1136;
	// end inline asm
$L__BB0_134:                            // %__nv_fmaf_rn.exit4.i.i.i1810
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r580, %r16369, 192937984;
	add.s32 	%r581, %r16368, %r580;
	mov.b32 	%f1137, %r581;
	mul.f32 	%f1138, %f1135, %f1137;
	sub.f32 	%f1139, %f1137, %f1138;
	fma.rn.f32 	%f1140, %f1139, %f1135, %f1138;
	sub.f32 	%f1141, %f1137, %f1140;
	fma.rz.f32 	%f1142, %f1141, %f1135, %f1140;
	cvt.rzi.f32.f32 	%f1143, %f1142;
	sub.f32 	%f1377, %f1137, %f1143;
	sub.s32 	%r16369, %r16369, %r580;
	mov.b32 	%r16368, %f1377;
	setp.ne.s32 	%p239, %r16369, 0;
	setp.ne.s32 	%p240, %r16368, 0;
	and.pred  	%p241, %p239, %p240;
	@%p241 bra 	$L__BB0_134;
$L__BB0_135:                            // %__internal_fmodf_slowpath_mod.exit.i.i1812
	setp.gt.u32 	%p242, %r86, 2139095039;
	selp.f32 	%f1144, 0f7FFFFFFF, 0f4B800000, %p242;
	mul.f32 	%f1145, %f1377, 0f34000000;
	mul.f32 	%f1378, %f1144, %f1145;
	bra.uni 	$L__BB0_136;
$L__BB0_126:                            // %__nv_fast_fdividef.exit.i.i.i1789
	div.approx.f32 	%f1128, %f1378, %f257;
	cvt.rzi.f32.f32 	%f1376, %f1128;
	fma.rn.f32 	%f184, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r85, %f184;
	setp.lt.u32 	%p233, %r85, 1073741824;
	@%p233 bra 	$L__BB0_131;
// %bb.127:
	setp.lt.u32 	%p234, %r85, -2147483647;
	@%p234 bra 	$L__BB0_129;
// %bb.128:
	add.f32 	%f1133, %f1376, 0fBF800000;
	setp.lt.f32 	%p237, %f184, 0fC0000000;
	add.f32 	%f1134, %f1133, 0fBF800000;
	selp.f32 	%f1376, %f1134, %f1133, %p237;
	bra.uni 	$L__BB0_131;
$L__BB0_129:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p235, %f184, 0f40800000;
	@%p235 bra 	$L__BB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i1793
	add.f32 	%f1129, %f1376, 0f3F800000;
	fma.rn.f32 	%f1131, %f257, 0fC0400000, %f184;
	setp.ge.f32 	%p236, %f1131, 0f00000000;
	add.f32 	%f1132, %f1129, 0f3F800000;
	selp.f32 	%f1376, %f1132, %f1129, %p236;
$L__BB0_131:                            // %__internal_fmodf_fastpath_quot.exit.i.i1796
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
$L__BB0_136:                            // %__internal_fmodf_kernel.exit.i1815
	and.b32  	%r178, %r177, 4;
	or.b32  	%r278, %r182, %r176;
	selp.f32 	%f285, %f283, %f284, %p18;
	and.b32  	%r297, %r295, 2;
	mov.f32 	%f286, 0f00000000;
	selp.f32 	%f319, %f317, %f318, %p24;
	and.b32  	%r304, %r302, 2;
	selp.f32 	%f354, %f352, %f353, %p30;
	and.b32  	%r315, %r313, 2;
	selp.f32 	%f388, %f386, %f387, %p36;
	and.b32  	%r322, %r320, 2;
	selp.f32 	%f423, %f421, %f422, %p42;
	and.b32  	%r333, %r331, 2;
	selp.f32 	%f457, %f455, %f456, %p48;
	and.b32  	%r340, %r338, 2;
	selp.f32 	%f492, %f490, %f491, %p54;
	and.b32  	%r351, %r349, 2;
	selp.f32 	%f526, %f524, %f525, %p60;
	and.b32  	%r358, %r356, 2;
	selp.f32 	%f561, %f559, %f560, %p66;
	and.b32  	%r369, %r367, 2;
	selp.f32 	%f595, %f593, %f594, %p72;
	and.b32  	%r376, %r374, 2;
	selp.f32 	%f630, %f628, %f629, %p78;
	and.b32  	%r387, %r385, 2;
	selp.f32 	%f664, %f662, %f663, %p84;
	and.b32  	%r394, %r392, 2;
	selp.f32 	%f699, %f697, %f698, %p90;
	and.b32  	%r405, %r403, 2;
	selp.f32 	%f733, %f731, %f732, %p96;
	and.b32  	%r412, %r410, 2;
	selp.f32 	%f768, %f766, %f767, %p102;
	and.b32  	%r423, %r421, 2;
	selp.f32 	%f802, %f800, %f801, %p108;
	and.b32  	%r430, %r428, 2;
	setp.eq.s32 	%p127, %r447, 0;
	neg.f32 	%f853, %f851;
	add.s32 	%r448, %r445, 1;
	cvt.rzi.f32.f32 	%f858, %f1354;
	setp.eq.s32 	%p147, %r476, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r477, %r474, 1;
	cvt.rzi.f32.f32 	%f910, %f1358;
	setp.eq.s32 	%p167, %r499, 0;
	neg.f32 	%f959, %f957;
	add.s32 	%r500, %r497, 1;
	cvt.rzi.f32.f32 	%f964, %f1362;
	setp.eq.s32 	%p187, %r531, 0;
	neg.f32 	%f1011, %f1009;
	add.s32 	%r532, %r529, 1;
	cvt.rzi.f32.f32 	%f1016, %f1366;
	selp.f32 	%f1062, %f1060, %f1061, %p206;
	and.b32  	%r551, %r549, 2;
	selp.f32 	%f1113, %f1111, %f1112, %p226;
	and.b32  	%r575, %r573, 2;
	abs.f32 	%f1146, %f1378;
	setp.gtu.f32 	%p243, %f1146, 0f7F800000;
	@%p243 bra 	$L__BB0_138;
// %bb.137:
	mov.b32 	%r582, %f181;
	and.b32  	%r583, %r582, -2147483648;
	mov.b32 	%r584, %f1378;
	or.b32  	%r585, %r583, %r584;
	mov.b32 	%f1378, %r585;
$L__BB0_138:                            // %__nv_fmodf.exit1816
	and.b32  	%r180, %r179, 8;
	or.b32  	%r279, %r278, %r178;
	setp.eq.s32 	%p19, %r297, 0;
	sub.f32 	%f287, %f286, %f285;
	setp.eq.s32 	%p25, %r304, 0;
	sub.f32 	%f321, %f286, %f319;
	setp.eq.s32 	%p31, %r315, 0;
	sub.f32 	%f356, %f286, %f354;
	setp.eq.s32 	%p37, %r322, 0;
	sub.f32 	%f390, %f286, %f388;
	setp.eq.s32 	%p43, %r333, 0;
	sub.f32 	%f425, %f286, %f423;
	setp.eq.s32 	%p49, %r340, 0;
	sub.f32 	%f459, %f286, %f457;
	setp.eq.s32 	%p55, %r351, 0;
	sub.f32 	%f494, %f286, %f492;
	setp.eq.s32 	%p61, %r358, 0;
	sub.f32 	%f528, %f286, %f526;
	setp.eq.s32 	%p67, %r369, 0;
	sub.f32 	%f563, %f286, %f561;
	setp.eq.s32 	%p73, %r376, 0;
	sub.f32 	%f597, %f286, %f595;
	setp.eq.s32 	%p79, %r387, 0;
	sub.f32 	%f632, %f286, %f630;
	setp.eq.s32 	%p85, %r394, 0;
	sub.f32 	%f666, %f286, %f664;
	setp.eq.s32 	%p91, %r405, 0;
	sub.f32 	%f701, %f286, %f699;
	setp.eq.s32 	%p97, %r412, 0;
	sub.f32 	%f735, %f286, %f733;
	setp.eq.s32 	%p103, %r423, 0;
	sub.f32 	%f770, %f286, %f768;
	setp.eq.s32 	%p109, %r430, 0;
	sub.f32 	%f804, %f286, %f802;
	selp.f32 	%f852, %f850, %f849, %p126;
	selp.f32 	%f854, %f851, %f853, %p127;
	and.b32  	%r449, %r448, 2;
	setp.eq.f32 	%p129, %f858, %f1354;
	mul.f32 	%f859, %f1354, 0f00000000;
	selp.f32 	%f904, %f902, %f901, %p146;
	selp.f32 	%f906, %f903, %f905, %p147;
	and.b32  	%r478, %r477, 2;
	setp.eq.f32 	%p149, %f910, %f1358;
	mul.f32 	%f911, %f1358, 0f00000000;
	selp.f32 	%f958, %f956, %f955, %p166;
	selp.f32 	%f960, %f957, %f959, %p167;
	and.b32  	%r501, %r500, 2;
	setp.eq.f32 	%p169, %f964, %f1362;
	mul.f32 	%f965, %f1362, 0f00000000;
	selp.f32 	%f1010, %f1008, %f1007, %p186;
	selp.f32 	%f1012, %f1009, %f1011, %p187;
	and.b32  	%r533, %r532, 2;
	setp.eq.f32 	%p189, %f1016, %f1366;
	mul.f32 	%f1017, %f1366, 0f00000000;
	setp.eq.s32 	%p207, %r551, 0;
	neg.f32 	%f1064, %f1062;
	add.s32 	%r552, %r549, 1;
	cvt.rzi.f32.f32 	%f1069, %f1370;
	setp.eq.s32 	%p227, %r575, 0;
	neg.f32 	%f1115, %f1113;
	add.s32 	%r576, %r573, 1;
	cvt.rzi.f32.f32 	%f1120, %f1374;
	add.f32 	%f1147, %f1378, %f1378;
	mov.b32 	%r586, %f1147;
	and.b32  	%r587, %r586, -2147483648;
	or.b32  	%r588, %r587, 1056964608;
	mov.b32 	%f1148, %r588;
	add.f32 	%f1149, %f1147, %f1148;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	abs.f32 	%f1151, %f1147;
	setp.gt.f32 	%p244, %f1151, 0f4B000000;
	selp.f32 	%f1152, %f1147, %f1150, %p244;
	cvt.rzi.f32.f32 	%f1153, %f1147;
	setp.lt.f32 	%p245, %f1151, 0f3F000000;
	selp.f32 	%f1154, %f1153, %f1152, %p245;
	cvt.rzi.s32.f32 	%r589, %f1154;
	fma.rn.f32 	%f1155, %f1154, 0fBF000000, %f1378;
	mul.f32 	%f1156, %f1155, %f1155;
	fma.rn.f32 	%f1157, %f1156, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1158, %f1156, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1159, %f1157, %f1156, 0fC0A55DF6;
	fma.rn.f32 	%f1160, %f1158, %f1156, 0f4081E0CF;
	fma.rn.f32 	%f1161, %f1156, %f1155, 0f00000000;
	fma.rn.f32 	%f1162, %f1160, %f1156, 0fC09DE9E6;
	fma.rn.f32 	%f1163, %f1159, %f1161, 0f00000000;
	fma.rn.f32 	%f1164, %f1162, %f1156, 0f3F800000;
	fma.rn.f32 	%f1165, %f1155, 0f40490FDB, %f1163;
	and.b32  	%r590, %r589, 1;
	setp.eq.b32 	%p246, %r590, 1;
	selp.f32 	%f1166, %f1164, %f1165, %p246;
	selp.f32 	%f1167, %f1165, %f1164, %p246;
	and.b32  	%r591, %r589, 2;
	setp.eq.s32 	%p247, %r591, 0;
	neg.f32 	%f1168, %f1166;
	selp.f32 	%f1169, %f1166, %f1168, %p247;
	add.s32 	%r592, %r589, 1;
	and.b32  	%r593, %r592, 2;
	cvt.rzi.f32.f32 	%f1173, %f1378;
	setp.eq.f32 	%p249, %f1173, %f1378;
	mul.f32 	%f1174, %f1378, 0f00000000;
	div.approx.f32 	%f200, %f163, %f1126;
	abs.f32 	%f1382, %f200;
	setp.lt.f32 	%p251, %f1382, 0f40000000;
	@%p251 bra 	$L__BB0_150;
// %bb.139:
	setp.gtu.f32 	%p252, %f1382, 0f4B800000;
	@%p252 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_140;
$L__BB0_146:
	mov.b32 	%r94, %f1382;
	and.b32  	%r594, %r94, 8388607;
	or.b32  	%r16370, %r594, 1065353216;
	mov.b32 	%f1381, %r16370;
	add.s32 	%r595, %r94, -1073741824;
	and.b32  	%r16371, %r595, -8388608;
	setp.eq.s32 	%p258, %r16371, 0;
	@%p258 bra 	$L__BB0_149;
// %bb.147:                             // %__nv_fmaf_rn.exit4.i.i.i1841.preheader
	mov.f32 	%f1187, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1186,%f1187;
	// end inline asm
$L__BB0_148:                            // %__nv_fmaf_rn.exit4.i.i.i1841
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r596, %r16371, 192937984;
	add.s32 	%r597, %r16370, %r596;
	mov.b32 	%f1188, %r597;
	mul.f32 	%f1189, %f1186, %f1188;
	sub.f32 	%f1190, %f1188, %f1189;
	fma.rn.f32 	%f1191, %f1190, %f1186, %f1189;
	sub.f32 	%f1192, %f1188, %f1191;
	fma.rz.f32 	%f1193, %f1192, %f1186, %f1191;
	cvt.rzi.f32.f32 	%f1194, %f1193;
	sub.f32 	%f1381, %f1188, %f1194;
	sub.s32 	%r16371, %r16371, %r596;
	mov.b32 	%r16370, %f1381;
	setp.ne.s32 	%p259, %r16371, 0;
	setp.ne.s32 	%p260, %r16370, 0;
	and.pred  	%p261, %p259, %p260;
	@%p261 bra 	$L__BB0_148;
$L__BB0_149:                            // %__internal_fmodf_slowpath_mod.exit.i.i1843
	setp.gt.u32 	%p262, %r94, 2139095039;
	selp.f32 	%f1195, 0f7FFFFFFF, 0f4B800000, %p262;
	mul.f32 	%f1196, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1195, %f1196;
	bra.uni 	$L__BB0_150;
$L__BB0_140:                            // %__nv_fast_fdividef.exit.i.i.i1820
	div.approx.f32 	%f1179, %f1382, %f257;
	cvt.rzi.f32.f32 	%f1380, %f1179;
	fma.rn.f32 	%f203, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r93, %f203;
	setp.lt.u32 	%p253, %r93, 1073741824;
	@%p253 bra 	$L__BB0_145;
// %bb.141:
	setp.lt.u32 	%p254, %r93, -2147483647;
	@%p254 bra 	$L__BB0_143;
// %bb.142:
	add.f32 	%f1184, %f1380, 0fBF800000;
	setp.lt.f32 	%p257, %f203, 0fC0000000;
	add.f32 	%f1185, %f1184, 0fBF800000;
	selp.f32 	%f1380, %f1185, %f1184, %p257;
	bra.uni 	$L__BB0_145;
$L__BB0_143:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p255, %f203, 0f40800000;
	@%p255 bra 	$L__BB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i1824
	add.f32 	%f1180, %f1380, 0f3F800000;
	fma.rn.f32 	%f1182, %f257, 0fC0400000, %f203;
	setp.ge.f32 	%p256, %f1182, 0f00000000;
	add.f32 	%f1183, %f1180, 0f3F800000;
	selp.f32 	%f1380, %f1183, %f1180, %p256;
$L__BB0_145:                            // %__internal_fmodf_fastpath_quot.exit.i.i1827
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
$L__BB0_150:                            // %__internal_fmodf_kernel.exit.i1846
	and.b32  	%r181, %r177, 32;
	or.b32  	%r280, %r279, %r180;
	selp.f32 	%f288, %f285, %f287, %p19;
	selp.f32 	%f322, %f319, %f321, %p25;
	selp.f32 	%f357, %f354, %f356, %p31;
	selp.f32 	%f391, %f388, %f390, %p37;
	selp.f32 	%f426, %f423, %f425, %p43;
	selp.f32 	%f460, %f457, %f459, %p49;
	selp.f32 	%f495, %f492, %f494, %p55;
	selp.f32 	%f529, %f526, %f528, %p61;
	selp.f32 	%f564, %f561, %f563, %p67;
	selp.f32 	%f598, %f595, %f597, %p73;
	selp.f32 	%f633, %f630, %f632, %p79;
	selp.f32 	%f667, %f664, %f666, %p85;
	selp.f32 	%f702, %f699, %f701, %p91;
	selp.f32 	%f736, %f733, %f735, %p97;
	selp.f32 	%f771, %f768, %f770, %p103;
	selp.f32 	%f805, %f802, %f804, %p109;
	setp.eq.s32 	%p128, %r449, 0;
	sub.f32 	%f856, %f286, %f852;
	selp.f32 	%f88, %f859, %f854, %p129;
	abs.f32 	%f860, %f1354;
	setp.eq.s32 	%p148, %r478, 0;
	sub.f32 	%f908, %f286, %f904;
	selp.f32 	%f912, %f911, %f906, %p149;
	abs.f32 	%f913, %f1358;
	setp.eq.s32 	%p168, %r501, 0;
	sub.f32 	%f962, %f286, %f958;
	selp.f32 	%f124, %f965, %f960, %p169;
	abs.f32 	%f966, %f1362;
	setp.eq.s32 	%p188, %r533, 0;
	sub.f32 	%f1014, %f286, %f1010;
	selp.f32 	%f1018, %f1017, %f1012, %p189;
	abs.f32 	%f1019, %f1366;
	selp.f32 	%f1063, %f1061, %f1060, %p206;
	selp.f32 	%f1065, %f1062, %f1064, %p207;
	and.b32  	%r553, %r552, 2;
	setp.eq.f32 	%p209, %f1069, %f1370;
	mul.f32 	%f1070, %f1370, 0f00000000;
	selp.f32 	%f1114, %f1112, %f1111, %p226;
	selp.f32 	%f1116, %f1113, %f1115, %p227;
	and.b32  	%r577, %r576, 2;
	setp.eq.f32 	%p229, %f1120, %f1374;
	mul.f32 	%f1121, %f1374, 0f00000000;
	setp.eq.s32 	%p248, %r593, 0;
	sub.f32 	%f1171, %f286, %f1167;
	selp.f32 	%f198, %f1174, %f1169, %p249;
	abs.f32 	%f1175, %f1378;
	and.b32  	%r175, %r1, 16;
	abs.f32 	%f1197, %f1382;
	setp.gtu.f32 	%p263, %f1197, 0f7F800000;
	@%p263 bra 	$L__BB0_152;
// %bb.151:
	mov.b32 	%r598, %f200;
	and.b32  	%r599, %r598, -2147483648;
	mov.b32 	%r600, %f1382;
	or.b32  	%r601, %r599, %r600;
	mov.b32 	%f1382, %r601;
$L__BB0_152:                            // %__nv_fmodf.exit1847
	or.b32  	%r281, %r280, %r181;
	mul.f32 	%f254, %f288, %f288;
	mul.f32 	%f4, %f322, %f322;
	mul.f32 	%f8, %f357, %f357;
	mul.f32 	%f13, %f391, %f391;
	mul.f32 	%f17, %f426, %f426;
	mul.f32 	%f22, %f460, %f460;
	mul.f32 	%f26, %f495, %f495;
	mul.f32 	%f31, %f529, %f529;
	mul.f32 	%f35, %f564, %f564;
	mul.f32 	%f40, %f598, %f598;
	mul.f32 	%f44, %f633, %f633;
	mul.f32 	%f49, %f667, %f667;
	mul.f32 	%f53, %f702, %f702;
	mul.f32 	%f58, %f736, %f736;
	mul.f32 	%f62, %f771, %f771;
	mul.f32 	%f67, %f805, %f805;
	selp.f32 	%f857, %f852, %f856, %p128;
	setp.gt.f32 	%p130, %f860, 0f4B800000;
	add.f32 	%f861, %f88, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p148;
	setp.gt.f32 	%p150, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f963, %f958, %f962, %p168;
	setp.gt.f32 	%p170, %f966, 0f4B800000;
	add.f32 	%f967, %f124, 0f3F800000;
	selp.f32 	%f1015, %f1010, %f1014, %p188;
	setp.gt.f32 	%p190, %f1019, 0f4B800000;
	add.f32 	%f1020, %f1018, 0f3F800000;
	setp.eq.s32 	%p208, %r553, 0;
	sub.f32 	%f1067, %f286, %f1063;
	selp.f32 	%f161, %f1070, %f1065, %p209;
	abs.f32 	%f1071, %f1370;
	setp.eq.s32 	%p228, %r577, 0;
	sub.f32 	%f1118, %f286, %f1114;
	selp.f32 	%f1122, %f1121, %f1116, %p229;
	abs.f32 	%f1123, %f1374;
	selp.f32 	%f1172, %f1167, %f1171, %p248;
	setp.gt.f32 	%p250, %f1175, 0f4B800000;
	add.f32 	%f1176, %f198, 0f3F800000;
	add.f32 	%f1198, %f1382, %f1382;
	mov.b32 	%r614, %f1198;
	and.b32  	%r615, %r614, -2147483648;
	or.b32  	%r616, %r615, 1056964608;
	mov.b32 	%f1199, %r616;
	add.f32 	%f1200, %f1198, %f1199;
	cvt.rzi.f32.f32 	%f1201, %f1200;
	abs.f32 	%f1202, %f1198;
	setp.gt.f32 	%p264, %f1202, 0f4B000000;
	selp.f32 	%f1203, %f1198, %f1201, %p264;
	cvt.rzi.f32.f32 	%f1204, %f1198;
	setp.lt.f32 	%p265, %f1202, 0f3F000000;
	selp.f32 	%f1205, %f1204, %f1203, %p265;
	cvt.rzi.s32.f32 	%r617, %f1205;
	fma.rn.f32 	%f1206, %f1205, 0fBF000000, %f1382;
	mul.f32 	%f1207, %f1206, %f1206;
	fma.rn.f32 	%f1208, %f1207, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1209, %f1207, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1210, %f1208, %f1207, 0fC0A55DF6;
	fma.rn.f32 	%f1211, %f1209, %f1207, 0f4081E0CF;
	fma.rn.f32 	%f1212, %f1207, %f1206, 0f00000000;
	fma.rn.f32 	%f1213, %f1211, %f1207, 0fC09DE9E6;
	fma.rn.f32 	%f1214, %f1210, %f1212, 0f00000000;
	fma.rn.f32 	%f1215, %f1213, %f1207, 0f3F800000;
	fma.rn.f32 	%f1216, %f1206, 0f40490FDB, %f1214;
	and.b32  	%r618, %r617, 1;
	setp.eq.b32 	%p266, %r618, 1;
	selp.f32 	%f1217, %f1215, %f1216, %p266;
	selp.f32 	%f1218, %f1216, %f1215, %p266;
	and.b32  	%r619, %r617, 2;
	setp.eq.s32 	%p267, %r619, 0;
	neg.f32 	%f1219, %f1217;
	selp.f32 	%f1220, %f1217, %f1219, %p267;
	add.s32 	%r620, %r617, 1;
	and.b32  	%r621, %r620, 2;
	setp.eq.s32 	%p268, %r621, 0;
	sub.f32 	%f1222, %f286, %f1218;
	selp.f32 	%f1223, %f1218, %f1222, %p268;
	cvt.rzi.f32.f32 	%f1224, %f1382;
	setp.eq.f32 	%p269, %f1224, %f1382;
	mul.f32 	%f1225, %f1382, 0f00000000;
	selp.f32 	%f1226, %f1225, %f1220, %p269;
	abs.f32 	%f1227, %f1382;
	setp.gt.f32 	%p270, %f1227, 0f4B800000;
	add.f32 	%f1228, %f1226, 0f3F800000;
	mul.lo.s32 	%r622, %r189, 2147483640;
	cvt.u16.u32 	%rs1, %r1;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	sub.s32 	%r623, %r622, %r175;
	mad.lo.s32 	%r624, %r192, 2147483616, %r623;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r625, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r626, %rs21;
	sub.s32 	%r627, %r624, %r626;
	shl.b32 	%r628, %r627, 1;
	cvt.rn.f32.s32 	%f1230, %r628;
	div.approx.f32 	%f217, %f1230, %f289;
	abs.f32 	%f1386, %f217;
	setp.lt.f32 	%p271, %f1386, 0f40000000;
	@%p271 bra 	$L__BB0_164;
// %bb.153:
	setp.gtu.f32 	%p272, %f1386, 0f4B800000;
	@%p272 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_154;
$L__BB0_160:
	mov.b32 	%r107, %f1386;
	and.b32  	%r629, %r107, 8388607;
	or.b32  	%r16372, %r629, 1065353216;
	mov.b32 	%f1385, %r16372;
	add.s32 	%r630, %r107, -1073741824;
	and.b32  	%r16373, %r630, -8388608;
	setp.eq.s32 	%p278, %r16373, 0;
	@%p278 bra 	$L__BB0_163;
// %bb.161:                             // %__nv_fmaf_rn.exit4.i.i.i1872.preheader
	mov.f32 	%f1241, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1240,%f1241;
	// end inline asm
$L__BB0_162:                            // %__nv_fmaf_rn.exit4.i.i.i1872
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r631, %r16373, 192937984;
	add.s32 	%r632, %r16372, %r631;
	mov.b32 	%f1242, %r632;
	mul.f32 	%f1243, %f1240, %f1242;
	sub.f32 	%f1244, %f1242, %f1243;
	fma.rn.f32 	%f1245, %f1244, %f1240, %f1243;
	sub.f32 	%f1246, %f1242, %f1245;
	fma.rz.f32 	%f1247, %f1246, %f1240, %f1245;
	cvt.rzi.f32.f32 	%f1248, %f1247;
	sub.f32 	%f1385, %f1242, %f1248;
	sub.s32 	%r16373, %r16373, %r631;
	mov.b32 	%r16372, %f1385;
	setp.ne.s32 	%p279, %r16373, 0;
	setp.ne.s32 	%p280, %r16372, 0;
	and.pred  	%p281, %p279, %p280;
	@%p281 bra 	$L__BB0_162;
$L__BB0_163:                            // %__internal_fmodf_slowpath_mod.exit.i.i1874
	setp.gt.u32 	%p282, %r107, 2139095039;
	selp.f32 	%f1249, 0f7FFFFFFF, 0f4B800000, %p282;
	mul.f32 	%f1250, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1249, %f1250;
	bra.uni 	$L__BB0_164;
$L__BB0_154:                            // %__nv_fast_fdividef.exit.i.i.i1851
	div.approx.f32 	%f1233, %f1386, %f257;
	cvt.rzi.f32.f32 	%f1384, %f1233;
	fma.rn.f32 	%f220, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r106, %f220;
	setp.lt.u32 	%p273, %r106, 1073741824;
	@%p273 bra 	$L__BB0_159;
// %bb.155:
	setp.lt.u32 	%p274, %r106, -2147483647;
	@%p274 bra 	$L__BB0_157;
// %bb.156:
	add.f32 	%f1238, %f1384, 0fBF800000;
	setp.lt.f32 	%p277, %f220, 0fC0000000;
	add.f32 	%f1239, %f1238, 0fBF800000;
	selp.f32 	%f1384, %f1239, %f1238, %p277;
	bra.uni 	$L__BB0_159;
$L__BB0_157:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p275, %f220, 0f40800000;
	@%p275 bra 	$L__BB0_159;
// %bb.158:                             // %__nv_fmaf_rn.exit.i.i.i1855
	add.f32 	%f1234, %f1384, 0f3F800000;
	fma.rn.f32 	%f1236, %f257, 0fC0400000, %f220;
	setp.ge.f32 	%p276, %f1236, 0f00000000;
	add.f32 	%f1237, %f1234, 0f3F800000;
	selp.f32 	%f1384, %f1237, %f1234, %p276;
$L__BB0_159:                            // %__internal_fmodf_fastpath_quot.exit.i.i1858
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
$L__BB0_164:                            // %__internal_fmodf_kernel.exit.i1877
	shr.u32 	%r282, %r281, 1;
	mul.f32 	%f292, %f254, 0f3B8B2FF9;
	mul.f32 	%f326, %f4, 0f3B8B2FF9;
	mul.f32 	%f361, %f8, 0f3B8B2FF9;
	mul.f32 	%f395, %f13, 0f3B8B2FF9;
	mul.f32 	%f430, %f17, 0f3B8B2FF9;
	mul.f32 	%f464, %f22, 0f3B8B2FF9;
	mul.f32 	%f499, %f26, 0f3B8B2FF9;
	mul.f32 	%f533, %f31, 0f3B8B2FF9;
	mul.f32 	%f568, %f35, 0f3B8B2FF9;
	mul.f32 	%f602, %f40, 0f3B8B2FF9;
	mul.f32 	%f637, %f44, 0f3B8B2FF9;
	mul.f32 	%f671, %f49, 0f3B8B2FF9;
	mul.f32 	%f706, %f53, 0f3B8B2FF9;
	mul.f32 	%f740, %f58, 0f3B8B2FF9;
	mul.f32 	%f775, %f62, 0f3B8B2FF9;
	mul.f32 	%f808, %f67, 0f3B8B2FF9;
	selp.f32 	%f89, %f861, %f857, %p130;
	selp.f32 	%f915, %f914, %f909, %p150;
	selp.f32 	%f125, %f967, %f963, %p170;
	selp.f32 	%f1021, %f1020, %f1015, %p190;
	selp.f32 	%f1068, %f1063, %f1067, %p208;
	setp.gt.f32 	%p210, %f1071, 0f4B800000;
	add.f32 	%f1072, %f161, 0f3F800000;
	selp.f32 	%f1119, %f1114, %f1118, %p228;
	setp.gt.f32 	%p230, %f1123, 0f4B800000;
	add.f32 	%f1124, %f1122, 0f3F800000;
	selp.f32 	%f199, %f1176, %f1172, %p250;
	selp.f32 	%f1229, %f1228, %f1223, %p270;
	sub.s32 	%r105, %r624, %r625;
	abs.f32 	%f1251, %f1386;
	setp.gtu.f32 	%p283, %f1251, 0f7F800000;
	@%p283 bra 	$L__BB0_166;
// %bb.165:
	mov.b32 	%r633, %f217;
	and.b32  	%r634, %r633, -2147483648;
	mov.b32 	%r635, %f1386;
	or.b32  	%r636, %r634, %r635;
	mov.b32 	%f1386, %r636;
$L__BB0_166:                            // %__nv_fmodf.exit1878
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd47, %r282, 4;
	mul.f32 	%f3, %f292, %f1336;
	mul.f32 	%f327, %f326, %f1337;
	mul.f32 	%f12, %f361, %f1338;
	mul.f32 	%f396, %f395, %f1339;
	mul.f32 	%f21, %f430, %f1340;
	mul.f32 	%f465, %f464, %f1341;
	mul.f32 	%f30, %f499, %f1342;
	mul.f32 	%f534, %f533, %f1343;
	mul.f32 	%f39, %f568, %f1344;
	mul.f32 	%f603, %f602, %f1345;
	mul.f32 	%f48, %f637, %f1346;
	mul.f32 	%f672, %f671, %f1347;
	mul.f32 	%f57, %f706, %f1348;
	mul.f32 	%f741, %f740, %f1349;
	mul.f32 	%f66, %f775, %f1350;
	mul.f32 	%f809, %f808, %f1351;
	mov.b32 	%r461, %f915;
	mov.b32 	%r460, %f89;
	mov.b32 	%r467, %f912;
	mov.b32 	%r466, %f88;
	mov.b32 	%r516, %f1021;
	mov.b32 	%r515, %f125;
	mov.b32 	%r522, %f1018;
	mov.b32 	%r521, %f124;
	selp.f32 	%f162, %f1072, %f1068, %p210;
	selp.f32 	%f1125, %f1124, %f1119, %p230;
	mov.b32 	%r604, %f1229;
	mov.b32 	%r603, %f199;
	mov.b32 	%r610, %f1226;
	mov.b32 	%r609, %f198;
	add.f32 	%f1252, %f1386, %f1386;
	mov.b32 	%r637, %f1252;
	and.b32  	%r638, %r637, -2147483648;
	or.b32  	%r639, %r638, 1056964608;
	mov.b32 	%f1253, %r639;
	add.f32 	%f1254, %f1252, %f1253;
	cvt.rzi.f32.f32 	%f1255, %f1254;
	abs.f32 	%f1256, %f1252;
	setp.gt.f32 	%p284, %f1256, 0f4B000000;
	selp.f32 	%f1257, %f1252, %f1255, %p284;
	cvt.rzi.f32.f32 	%f1258, %f1252;
	setp.lt.f32 	%p285, %f1256, 0f3F000000;
	selp.f32 	%f1259, %f1258, %f1257, %p285;
	cvt.rzi.s32.f32 	%r640, %f1259;
	fma.rn.f32 	%f1260, %f1259, 0fBF000000, %f1386;
	mul.f32 	%f1261, %f1260, %f1260;
	fma.rn.f32 	%f1262, %f1261, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1263, %f1261, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1264, %f1262, %f1261, 0fC0A55DF6;
	fma.rn.f32 	%f1265, %f1263, %f1261, 0f4081E0CF;
	fma.rn.f32 	%f1266, %f1261, %f1260, 0f00000000;
	fma.rn.f32 	%f1267, %f1265, %f1261, 0fC09DE9E6;
	fma.rn.f32 	%f1268, %f1264, %f1266, 0f00000000;
	fma.rn.f32 	%f1269, %f1267, %f1261, 0f3F800000;
	fma.rn.f32 	%f1270, %f1260, 0f40490FDB, %f1268;
	and.b32  	%r641, %r640, 1;
	setp.eq.b32 	%p286, %r641, 1;
	selp.f32 	%f1271, %f1269, %f1270, %p286;
	selp.f32 	%f1272, %f1270, %f1269, %p286;
	and.b32  	%r642, %r640, 2;
	setp.eq.s32 	%p287, %r642, 0;
	neg.f32 	%f1273, %f1271;
	selp.f32 	%f1274, %f1271, %f1273, %p287;
	add.s32 	%r643, %r640, 1;
	and.b32  	%r644, %r643, 2;
	setp.eq.s32 	%p288, %r644, 0;
	sub.f32 	%f1276, %f286, %f1272;
	selp.f32 	%f1277, %f1272, %f1276, %p288;
	cvt.rzi.f32.f32 	%f1278, %f1386;
	setp.eq.f32 	%p289, %f1278, %f1386;
	mul.f32 	%f1279, %f1386, 0f00000000;
	selp.f32 	%f234, %f1279, %f1274, %p289;
	abs.f32 	%f1280, %f1386;
	setp.gt.f32 	%p290, %f1280, 0f4B800000;
	add.f32 	%f1281, %f234, 0f3F800000;
	shl.b32 	%r645, %r105, 1;
	cvt.rn.f32.s32 	%f1282, %r645;
	div.approx.f32 	%f236, %f1282, %f289;
	abs.f32 	%f1390, %f236;
	setp.lt.f32 	%p291, %f1390, 0f40000000;
	@%p291 bra 	$L__BB0_178;
// %bb.167:
	setp.gtu.f32 	%p292, %f1390, 0f4B800000;
	@%p292 bra 	$L__BB0_174;
	bra.uni 	$L__BB0_168;
$L__BB0_174:
	mov.b32 	%r115, %f1390;
	and.b32  	%r646, %r115, 8388607;
	or.b32  	%r16374, %r646, 1065353216;
	mov.b32 	%f1389, %r16374;
	add.s32 	%r647, %r115, -1073741824;
	and.b32  	%r16375, %r647, -8388608;
	setp.eq.s32 	%p298, %r16375, 0;
	@%p298 bra 	$L__BB0_177;
// %bb.175:                             // %__nv_fmaf_rn.exit4.i.i.i1903.preheader
	mov.f32 	%f1293, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1292,%f1293;
	// end inline asm
$L__BB0_176:                            // %__nv_fmaf_rn.exit4.i.i.i1903
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r648, %r16375, 192937984;
	add.s32 	%r649, %r16374, %r648;
	mov.b32 	%f1294, %r649;
	mul.f32 	%f1295, %f1292, %f1294;
	sub.f32 	%f1296, %f1294, %f1295;
	fma.rn.f32 	%f1297, %f1296, %f1292, %f1295;
	sub.f32 	%f1298, %f1294, %f1297;
	fma.rz.f32 	%f1299, %f1298, %f1292, %f1297;
	cvt.rzi.f32.f32 	%f1300, %f1299;
	sub.f32 	%f1389, %f1294, %f1300;
	sub.s32 	%r16375, %r16375, %r648;
	mov.b32 	%r16374, %f1389;
	setp.ne.s32 	%p299, %r16375, 0;
	setp.ne.s32 	%p300, %r16374, 0;
	and.pred  	%p301, %p299, %p300;
	@%p301 bra 	$L__BB0_176;
$L__BB0_177:                            // %__internal_fmodf_slowpath_mod.exit.i.i1905
	setp.gt.u32 	%p302, %r115, 2139095039;
	selp.f32 	%f1301, 0f7FFFFFFF, 0f4B800000, %p302;
	mul.f32 	%f1302, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1301, %f1302;
	bra.uni 	$L__BB0_178;
$L__BB0_168:                            // %__nv_fast_fdividef.exit.i.i.i1882
	div.approx.f32 	%f1285, %f1390, %f257;
	cvt.rzi.f32.f32 	%f1388, %f1285;
	fma.rn.f32 	%f239, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r114, %f239;
	setp.lt.u32 	%p293, %r114, 1073741824;
	@%p293 bra 	$L__BB0_173;
// %bb.169:
	setp.lt.u32 	%p294, %r114, -2147483647;
	@%p294 bra 	$L__BB0_171;
// %bb.170:
	add.f32 	%f1290, %f1388, 0fBF800000;
	setp.lt.f32 	%p297, %f239, 0fC0000000;
	add.f32 	%f1291, %f1290, 0fBF800000;
	selp.f32 	%f1388, %f1291, %f1290, %p297;
	bra.uni 	$L__BB0_173;
$L__BB0_171:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p295, %f239, 0f40800000;
	@%p295 bra 	$L__BB0_173;
// %bb.172:                             // %__nv_fmaf_rn.exit.i.i.i1886
	add.f32 	%f1286, %f1388, 0f3F800000;
	fma.rn.f32 	%f1288, %f257, 0fC0400000, %f239;
	setp.ge.f32 	%p296, %f1288, 0f00000000;
	add.f32 	%f1289, %f1286, 0f3F800000;
	selp.f32 	%f1388, %f1289, %f1286, %p296;
$L__BB0_173:                            // %__internal_fmodf_fastpath_quot.exit.i.i1889
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
$L__BB0_178:                            // %__internal_fmodf_kernel.exit.i1908
	add.s64 	%rd48, %rd1, %rd47;
	mov.b32 	%r307, %f327;
	mov.b32 	%r306, %f3;
	mov.b32 	%r325, %f396;
	mov.b32 	%r324, %f12;
	mov.b32 	%r343, %f465;
	mov.b32 	%r342, %f21;
	mov.b32 	%r361, %f534;
	mov.b32 	%r360, %f30;
	mov.b32 	%r379, %f603;
	mov.b32 	%r378, %f39;
	mov.b32 	%r397, %f672;
	mov.b32 	%r396, %f48;
	mov.b32 	%r415, %f741;
	mov.b32 	%r414, %f57;
	mov.b32 	%r433, %f809;
	mov.b32 	%r432, %f66;
	xor.b32  	%r519, %r522, -2147483648;
	xor.b32  	%r518, %r521, -2147483648;
	mov.b32 	%r566, %f1125;
	mov.b32 	%r565, %f162;
	mov.b32 	%r569, %f1122;
	mov.b32 	%r568, %f161;
	xor.b32  	%r607, %r610, -2147483648;
	xor.b32  	%r606, %r609, -2147483648;
	selp.f32 	%f235, %f1281, %f1277, %p290;
	abs.f32 	%f1303, %f1390;
	setp.gtu.f32 	%p303, %f1303, 0f7F800000;
	@%p303 bra 	$L__BB0_180;
// %bb.179:
	mov.b32 	%r650, %f236;
	and.b32  	%r651, %r650, -2147483648;
	mov.b32 	%r652, %f1390;
	or.b32  	%r653, %r651, %r652;
	mov.b32 	%f1390, %r653;
$L__BB0_180:                            // %__nv_fmodf.exit1909
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	ld.global.u32 	%r183, [%rd48];
	ld.global.u32 	%r184, [%rd48+128];
	shr.u32 	%r188, %r1, 2;
	// begin inline asm
	cvt.rn.f16x2.f32 %r305, %r307, %r306;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r323, %r325, %r324;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r341, %r343, %r342;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r359, %r361, %r360;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r377, %r379, %r378;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r395, %r397, %r396;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r413, %r415, %r414;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r431, %r433, %r432;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r459, %r461, %r460;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r462, %r461, %r460;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r465, %r467, %r466;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r468, %r467, %r466;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r514, %r516, %r515;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r517, %r519, %r518;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r520, %r522, %r521;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r523, %r516, %r515;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r564, %r566, %r565;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r567, %r569, %r568;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r602, %r604, %r603;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r605, %r607, %r606;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r608, %r610, %r609;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r611, %r604, %r603;
	// end inline asm
	add.f32 	%f1304, %f1390, %f1390;
	mov.b32 	%r661, %f1304;
	and.b32  	%r662, %r661, -2147483648;
	or.b32  	%r663, %r662, 1056964608;
	mov.b32 	%f1305, %r663;
	add.f32 	%f1306, %f1304, %f1305;
	cvt.rzi.f32.f32 	%f1307, %f1306;
	abs.f32 	%f1308, %f1304;
	setp.gt.f32 	%p304, %f1308, 0f4B000000;
	selp.f32 	%f1309, %f1304, %f1307, %p304;
	cvt.rzi.f32.f32 	%f1310, %f1304;
	setp.lt.f32 	%p305, %f1308, 0f3F000000;
	selp.f32 	%f1311, %f1310, %f1309, %p305;
	cvt.rzi.s32.f32 	%r664, %f1311;
	fma.rn.f32 	%f1312, %f1311, 0fBF000000, %f1390;
	mul.f32 	%f1313, %f1312, %f1312;
	fma.rn.f32 	%f1314, %f1313, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1315, %f1313, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1316, %f1314, %f1313, 0fC0A55DF6;
	fma.rn.f32 	%f1317, %f1315, %f1313, 0f4081E0CF;
	fma.rn.f32 	%f1318, %f1313, %f1312, 0f00000000;
	fma.rn.f32 	%f1319, %f1317, %f1313, 0fC09DE9E6;
	fma.rn.f32 	%f1320, %f1316, %f1318, 0f00000000;
	fma.rn.f32 	%f1321, %f1319, %f1313, 0f3F800000;
	fma.rn.f32 	%f1322, %f1312, 0f40490FDB, %f1320;
	and.b32  	%r665, %r664, 1;
	setp.eq.b32 	%p306, %r665, 1;
	selp.f32 	%f1323, %f1321, %f1322, %p306;
	selp.f32 	%f1324, %f1322, %f1321, %p306;
	and.b32  	%r666, %r664, 2;
	setp.eq.s32 	%p307, %r666, 0;
	neg.f32 	%f1325, %f1323;
	selp.f32 	%f1326, %f1323, %f1325, %p307;
	add.s32 	%r667, %r664, 1;
	and.b32  	%r668, %r667, 2;
	setp.eq.s32 	%p308, %r668, 0;
	sub.f32 	%f1328, %f286, %f1324;
	selp.f32 	%f1329, %f1324, %f1328, %p308;
	cvt.rzi.f32.f32 	%f1330, %f1390;
	setp.eq.f32 	%p309, %f1330, %f1390;
	mul.f32 	%f1331, %f1390, 0f00000000;
	selp.f32 	%f1332, %f1331, %f1326, %p309;
	abs.f32 	%f1333, %f1390;
	setp.gt.f32 	%p310, %f1333, 0f4B800000;
	add.f32 	%f1334, %f1332, 0f3F800000;
	selp.f32 	%f1335, %f1334, %f1329, %p310;
	mov.b32 	%r656, %f1335;
	mov.b32 	%r655, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r654, %r656, %r655;
	// end inline asm
	mov.b32 	%r659, %f1332;
	mov.b32 	%r658, %f234;
	// begin inline asm
	cvt.rn.f16x2.f32 %r657, %r659, %r658;
	// end inline asm
	shl.b32 	%r669, %r5, 12;
	shl.b32 	%r670, %r4, 5;
	and.b32  	%r671, %r177, 28;
	and.b32  	%r672, %r670, 96;
	or.b32  	%r124, %r672, %r671;
	and.b32  	%r125, %r670, 128;
	shl.b32 	%r673, %r1, 3;
	and.b32  	%r674, %r673, 64;
	or.b32  	%r126, %r674, %r179;
	or.b32  	%r675, %r125, %r124;
	or.b32  	%r127, %r669, %r675;
	bfe.s32 	%r676, %r1, 3, 1;
	and.b32  	%r128, %r1, 8;
	shl.b32 	%r677, %r1, 4;
	or.b32  	%r678, %r128, %r677;
	shr.u32 	%r679, %r678, 2;
	and.b32  	%r680, %r679, 30;
	and.b32  	%r681, %r677, 48;
	or.b32  	%r129, %r681, %r180;
	and.b32  	%r682, %r3, 32;
	shr.u32 	%r683, %r2, 1;
	or.b32  	%r684, %r682, %r683;
	or.b32  	%r685, %r684, 8;
	or.b32  	%r686, %r684, 16;
	or.b32  	%r687, %r684, 24;
	or.b32  	%r688, %r182, %r178;
	or.b32  	%r689, %r688, %r181;
	or.b32  	%r690, %r689, %r180;
	shr.u32 	%r691, %r690, 1;
	mul.lo.s32 	%r692, %r691, 65;
	add.s32 	%r130, %r684, %r692;
	add.s32 	%r131, %r685, %r692;
	add.s32 	%r132, %r686, %r692;
	add.s32 	%r133, %r687, %r692;
	add.s32 	%r693, %r692, 2080;
	add.s32 	%r134, %r684, %r693;
	add.s32 	%r135, %r685, %r693;
	add.s32 	%r136, %r686, %r693;
	add.s32 	%r137, %r687, %r693;
	shl.b32 	%r694, %r2, 1;
	or.b32  	%r695, %r190, %r694;
	mul.lo.s32 	%r696, %r695, 65;
	add.s32 	%r697, %r680, %r696;
	mul.wide.u32 	%rd49, %r697, 4;
	mov.u64 	%rd50, shmem;
	add.s64 	%rd5, %rd50, %rd49;
	cvt.u64.u32 	%rd51, %r680;
	cvt.u64.u32 	%rd52, %r696;
	add.s64 	%rd53, %rd52, %rd51;
	shl.b64 	%rd54, %rd53, 2;
	add.s64 	%rd6, %rd50, %rd54;
	or.b32  	%r698, %r695, 32;
	mul.lo.s32 	%r699, %r698, 65;
	add.s32 	%r700, %r699, %r680;
	mul.wide.u32 	%rd55, %r700, 4;
	add.s64 	%rd7, %rd50, %rd55;
	cvt.u64.u32 	%rd56, %r699;
	add.s64 	%rd57, %rd56, %rd51;
	shl.b64 	%rd58, %rd57, 2;
	add.s64 	%rd8, %rd50, %rd58;
	shl.b32 	%r701, %r7, 19;
	add.s32 	%r702, %r701, -1572864;
	shl.b32 	%r703, %r2, 2;
	or.b32  	%r704, %r703, %r191;
	or.b32  	%r705, %r704, %r176;
	shl.b32 	%r138, %r705, 8;
	cvt.s64.s32 	%rd9, %r702;
	or.b32  	%r139, %r138, 16384;
	bfe.u32 	%r706, %r677, 5, 1;
	shr.u32 	%r707, %r180, 3;
	setp.gt.u32 	%p311, %r1, 15;
	and.b32  	%r708, %r2, 1;
	neg.s32 	%r709, %r708;
	and.b32  	%r710, %r709, 2080;
	mul.lo.s32 	%r711, %r190, 65;
	shr.u32 	%r712, %r2, 3;
	mul.lo.s32 	%r713, %r712, 260;
	bfe.s32 	%r714, %r2, 2, 1;
	and.b32  	%r715, %r2, 4;
	setp.eq.s32 	%p312, %r715, 0;
	and.b32  	%r716, %r714, 520;
	bfe.s32 	%r717, %r2, 1, 1;
	and.b32  	%r718, %r2, 2;
	setp.eq.s32 	%p313, %r718, 0;
	and.b32  	%r719, %r717, 1040;
	or.b32  	%r720, %r710, %r680;
	add.s32 	%r721, %r720, %r711;
	add.s32 	%r722, %r721, %r713;
	add.s32 	%r723, %r722, %r716;
	add.s32 	%r724, %r723, %r719;
	mul.wide.u32 	%rd59, %r724, 4;
	add.s64 	%rd10, %rd50, %rd59;
	selp.b64 	%rd60, 0, 1040, %p313;
	selp.b64 	%rd61, 0, 520, %p312;
	cvt.u64.u32 	%rd62, %r713;
	cvt.u64.u32 	%rd63, %r711;
	cvt.u64.u32 	%rd64, %r720;
	add.s64 	%rd65, %rd64, %rd63;
	add.s64 	%rd66, %rd65, %rd62;
	add.s64 	%rd67, %rd66, %rd61;
	add.s64 	%rd68, %rd67, %rd60;
	shl.b64 	%rd69, %rd68, 2;
	add.s64 	%rd11, %rd50, %rd69;
	add.s32 	%r725, %r724, 162;
	mul.wide.u32 	%rd70, %r725, 4;
	add.s64 	%rd12, %rd50, %rd70;
	add.s32 	%r726, %r724, 131;
	mul.wide.u32 	%rd71, %r726, 4;
	add.s64 	%rd13, %rd50, %rd71;
	add.s32 	%r727, %r724, 163;
	mul.wide.u32 	%rd72, %r727, 4;
	add.s64 	%rd14, %rd50, %rd72;
	add.s32 	%r728, %r724, 4193;
	mul.wide.u32 	%rd73, %r728, 4;
	add.s64 	%rd15, %rd50, %rd73;
	add.s32 	%r729, %r724, 4162;
	mul.wide.u32 	%rd74, %r729, 4;
	add.s64 	%rd16, %rd50, %rd74;
	add.s32 	%r730, %r724, 4194;
	mul.wide.u32 	%rd75, %r730, 4;
	add.s64 	%rd17, %rd50, %rd75;
	add.s32 	%r731, %r724, 4323;
	mul.wide.u32 	%rd76, %r731, 4;
	add.s64 	%rd18, %rd50, %rd76;
	add.s32 	%r732, %r724, 4292;
	mul.wide.u32 	%rd77, %r732, 4;
	add.s64 	%rd19, %rd50, %rd77;
	add.s32 	%r733, %r724, 4324;
	mul.wide.u32 	%rd78, %r733, 4;
	add.s64 	%rd20, %rd50, %rd78;
	mul.lo.s32 	%r734, %r706, 65;
	mul.lo.s32 	%r735, %r707, 260;
	selp.b32 	%r736, 520, 0, %p311;
	and.b32  	%r737, %r676, 1040;
	setp.eq.s32 	%p314, %r187, 0;
	selp.b32 	%r140, 0, 130, %p314;
	add.s32 	%r738, %r684, %r735;
	add.s32 	%r739, %r738, %r734;
	add.s32 	%r740, %r739, %r736;
	add.s32 	%r141, %r740, %r737;
	add.s32 	%r741, %r685, %r735;
	add.s32 	%r742, %r741, %r734;
	add.s32 	%r743, %r742, %r736;
	add.s32 	%r142, %r743, %r737;
	add.s32 	%r744, %r686, %r735;
	add.s32 	%r745, %r744, %r734;
	add.s32 	%r746, %r745, %r736;
	add.s32 	%r143, %r746, %r737;
	add.s32 	%r747, %r687, %r735;
	add.s32 	%r748, %r747, %r734;
	add.s32 	%r749, %r748, %r736;
	add.s32 	%r144, %r749, %r737;
	add.s32 	%r145, %r684, 2080;
	add.s32 	%r146, %r684, 2088;
	add.s32 	%r147, %r684, 2096;
	add.s32 	%r148, %r684, 2104;
	add.s32 	%r750, %r700, 4193;
	mul.wide.u32 	%rd79, %r750, 4;
	add.s64 	%rd21, %rd50, %rd79;
	add.s32 	%r751, %r700, 4194;
	mul.wide.u32 	%rd80, %r751, 4;
	add.s64 	%rd22, %rd50, %rd80;
	mov.u32 	%r16376, 0;
	setp.eq.s32 	%p316, %r128, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16377, %r16376;
	mov.u32 	%r16378, %r16376;
	mov.u32 	%r16379, %r16376;
	mov.u32 	%r16380, %r16376;
	mov.u32 	%r16381, %r16376;
	mov.u32 	%r16382, %r16376;
	mov.u32 	%r16383, %r16376;
	mov.u32 	%r16384, %r16376;
	mov.u32 	%r16385, %r16376;
	mov.u32 	%r16386, %r16376;
	mov.u32 	%r16387, %r16376;
	mov.u32 	%r16388, %r16376;
	mov.u32 	%r16389, %r16376;
	mov.u32 	%r16390, %r16376;
	mov.u32 	%r16391, %r16376;
	mov.u32 	%r16392, %r16376;
	mov.u32 	%r16393, %r16376;
	mov.u32 	%r16394, %r16376;
	mov.u32 	%r16395, %r16376;
	mov.u32 	%r16396, %r16376;
	mov.u32 	%r16397, %r16376;
	mov.u32 	%r16398, %r16376;
	mov.u32 	%r16399, %r16376;
	mov.u32 	%r16400, %r16376;
	bra.uni 	$L__BB0_181;
$L__BB0_187:                            // %L70753
                                        //   in Loop: Header=BB0_181 Depth=1
	add.s32 	%r174, %r16400, 256;
	setp.ne.s32 	%p341, %r16400, 7936;
	mov.u32 	%r16400, %r174;
	@%p341 bra 	$L__BB0_181;
	bra.uni 	$L__BB0_188;
$L__BB0_181:                            // %L2417
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_183 Depth 2
	add.s32 	%r752, %r16400, %r5;
	setp.gt.s32 	%p315, %r6, %r752;
	@%p315 bra 	$L__BB0_182;
	bra.uni 	$L__BB0_188;
$L__BB0_182:                            // %pass886
                                        //   in Loop: Header=BB0_181 Depth=1
	or.b32  	%r818, %r16400, %r126;
	and.b32  	%r819, %r818, 8032;
	or.b32  	%r820, %r819, %r2;
	shl.b32 	%r821, %r820, 12;
	add.s32 	%r822, %r127, %r821;
	shr.s32 	%r823, %r822, 31;
	shr.u32 	%r824, %r823, 7;
	add.s32 	%r825, %r822, %r824;
	shr.s32 	%r826, %r825, 25;
	setp.lt.s32 	%p317, %r822, 0;
	and.b32  	%r827, %r825, -33554432;
	setp.ne.s32 	%p318, %r827, %r822;
	and.pred  	%p319, %p317, %p318;
	selp.u32 	%r828, 1, 0, %p319;
	sub.s32 	%r829, %r828, %r826;
	shl.b32 	%r830, %r829, 25;
	add.s32 	%r831, %r830, %r822;
	mul.wide.s32 	%rd81, %r831, 4;
	add.s64 	%rd82, %rd2, %rd81;
	ld.global.v4.u32 	{%r832, %r833, %r834, %r835}, [%rd82];
	or.b32  	%r836, %r821, 65536;
	add.s32 	%r837, %r127, %r836;
	shr.s32 	%r838, %r837, 31;
	shr.u32 	%r839, %r838, 7;
	add.s32 	%r840, %r837, %r839;
	shr.s32 	%r841, %r840, 25;
	setp.lt.s32 	%p320, %r837, 0;
	and.b32  	%r842, %r840, -33554432;
	setp.ne.s32 	%p321, %r842, %r837;
	and.pred  	%p322, %p320, %p321;
	selp.u32 	%r843, 1, 0, %p322;
	sub.s32 	%r844, %r843, %r841;
	shl.b32 	%r845, %r844, 25;
	add.s32 	%r846, %r845, %r837;
	mul.wide.s32 	%rd83, %r846, 4;
	add.s64 	%rd84, %rd2, %rd83;
	ld.global.v4.u32 	{%r847, %r848, %r849, %r850}, [%rd84];
	or.b32  	%r851, %r821, 524288;
	add.s32 	%r852, %r127, %r851;
	shr.s32 	%r853, %r852, 31;
	shr.u32 	%r854, %r853, 7;
	add.s32 	%r855, %r852, %r854;
	shr.s32 	%r856, %r855, 25;
	setp.lt.s32 	%p323, %r852, 0;
	and.b32  	%r857, %r855, -33554432;
	setp.ne.s32 	%p324, %r857, %r852;
	and.pred  	%p325, %p323, %p324;
	selp.u32 	%r858, 1, 0, %p325;
	sub.s32 	%r859, %r858, %r856;
	shl.b32 	%r860, %r859, 25;
	add.s32 	%r861, %r860, %r852;
	mul.wide.s32 	%rd85, %r861, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.v4.u32 	{%r862, %r863, %r864, %r865}, [%rd86];
	or.b32  	%r866, %r821, 589824;
	add.s32 	%r867, %r127, %r866;
	shr.s32 	%r868, %r867, 31;
	shr.u32 	%r869, %r868, 7;
	add.s32 	%r870, %r867, %r869;
	shr.s32 	%r871, %r870, 25;
	setp.lt.s32 	%p326, %r867, 0;
	and.b32  	%r872, %r870, -33554432;
	setp.ne.s32 	%p327, %r872, %r867;
	and.pred  	%p328, %p326, %p327;
	selp.u32 	%r873, 1, 0, %p328;
	sub.s32 	%r874, %r873, %r871;
	shl.b32 	%r875, %r874, 25;
	add.s32 	%r876, %r875, %r867;
	mul.wide.s32 	%rd87, %r876, 4;
	add.s64 	%rd88, %rd2, %rd87;
	ld.global.v4.u32 	{%r877, %r878, %r879, %r880}, [%rd88];
	selp.b32 	%r881, %r834, %r832, %p316;
	shfl.sync.bfly.b32	%r882, %r881, 8, 31, -1;
	selp.b32 	%r754, %r832, %r882, %p316;
	selp.b32 	%r755, %r882, %r834, %p316;
	selp.b32 	%r883, %r835, %r833, %p316;
	shfl.sync.bfly.b32	%r884, %r883, 8, 31, -1;
	selp.b32 	%r762, %r833, %r884, %p316;
	selp.b32 	%r763, %r884, %r835, %p316;
	selp.b32 	%r885, %r849, %r847, %p316;
	shfl.sync.bfly.b32	%r886, %r885, 8, 31, -1;
	selp.b32 	%r770, %r847, %r886, %p316;
	selp.b32 	%r771, %r886, %r849, %p316;
	selp.b32 	%r887, %r850, %r848, %p316;
	shfl.sync.bfly.b32	%r888, %r887, 8, 31, -1;
	selp.b32 	%r778, %r848, %r888, %p316;
	selp.b32 	%r779, %r888, %r850, %p316;
	selp.b32 	%r889, %r864, %r862, %p316;
	shfl.sync.bfly.b32	%r890, %r889, 8, 31, -1;
	selp.b32 	%r786, %r862, %r890, %p316;
	selp.b32 	%r787, %r890, %r864, %p316;
	selp.b32 	%r891, %r865, %r863, %p316;
	shfl.sync.bfly.b32	%r892, %r891, 8, 31, -1;
	selp.b32 	%r794, %r863, %r892, %p316;
	selp.b32 	%r795, %r892, %r865, %p316;
	selp.b32 	%r893, %r879, %r877, %p316;
	shfl.sync.bfly.b32	%r894, %r893, 8, 31, -1;
	selp.b32 	%r802, %r877, %r894, %p316;
	selp.b32 	%r803, %r894, %r879, %p316;
	selp.b32 	%r895, %r880, %r878, %p316;
	shfl.sync.bfly.b32	%r896, %r895, 8, 31, -1;
	selp.b32 	%r810, %r878, %r896, %p316;
	selp.b32 	%r811, %r896, %r880, %p316;
	mov.u32 	%r812, 21520;
	// begin inline asm
	prmt.b32 %r753, %r754, %r755, %r812;
	// end inline asm
	mov.u32 	%r816, 30258;
	// begin inline asm
	prmt.b32 %r757, %r754, %r755, %r816;
	// end inline asm
	// begin inline asm
	prmt.b32 %r761, %r762, %r763, %r812;
	// end inline asm
	// begin inline asm
	prmt.b32 %r765, %r762, %r763, %r816;
	// end inline asm
	// begin inline asm
	prmt.b32 %r769, %r770, %r771, %r812;
	// end inline asm
	// begin inline asm
	prmt.b32 %r773, %r770, %r771, %r816;
	// end inline asm
	// begin inline asm
	prmt.b32 %r777, %r778, %r779, %r812;
	// end inline asm
	// begin inline asm
	prmt.b32 %r781, %r778, %r779, %r816;
	// end inline asm
	// begin inline asm
	prmt.b32 %r785, %r786, %r787, %r812;
	// end inline asm
	// begin inline asm
	prmt.b32 %r789, %r786, %r787, %r816;
	// end inline asm
	// begin inline asm
	prmt.b32 %r793, %r794, %r795, %r812;
	// end inline asm
	// begin inline asm
	prmt.b32 %r797, %r794, %r795, %r816;
	// end inline asm
	// begin inline asm
	prmt.b32 %r801, %r802, %r803, %r812;
	// end inline asm
	// begin inline asm
	prmt.b32 %r805, %r802, %r803, %r816;
	// end inline asm
	// begin inline asm
	prmt.b32 %r809, %r810, %r811, %r812;
	// end inline asm
	// begin inline asm
	prmt.b32 %r813, %r810, %r811, %r816;
	// end inline asm
	st.shared.u32 	[%rd10], %r753;
	st.shared.u32 	[%rd11+128], %r757;
	st.shared.u32 	[%rd11+4], %r761;
	st.shared.u32 	[%rd11+132], %r765;
	st.shared.u32 	[%rd10+520], %r769;
	st.shared.u32 	[%rd12], %r773;
	st.shared.u32 	[%rd13], %r777;
	st.shared.u32 	[%rd14], %r781;
	st.shared.u32 	[%rd10+16644], %r785;
	st.shared.u32 	[%rd15], %r789;
	st.shared.u32 	[%rd16], %r793;
	st.shared.u32 	[%rd17], %r797;
	st.shared.u32 	[%rd10+17164], %r801;
	st.shared.u32 	[%rd18], %r805;
	st.shared.u32 	[%rd19], %r809;
	st.shared.u32 	[%rd20], %r813;
	bar.sync 	0;
	or.b32  	%r897, %r16400, %r129;
	or.b32  	%r898, %r188, %r897;
	or.b32  	%r195, %r898, 1;
	mov.u32 	%r3243, 0;
	mov.u32 	%r16401, %r3243;
$L__BB0_183:                            // %pass6435
                                        //   Parent Loop BB0_181 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.eq.s32 	%p329, %r16401, 0;
	selp.b32 	%r16163, 0, 4161, %p329;
	add.s32 	%r16164, %r141, %r16163;
	add.s32 	%r16165, %r16164, %r140;
	mul.wide.u32 	%rd89, %r16165, 4;
	add.s64 	%rd91, %rd50, %rd89;
	ld.shared.u32 	%r16166, [%rd91];
	add.s32 	%r16167, %r142, %r16163;
	add.s32 	%r16168, %r16167, %r140;
	mul.wide.u32 	%rd92, %r16168, 4;
	add.s64 	%rd93, %rd50, %rd92;
	ld.shared.u32 	%r16169, [%rd93];
	add.s32 	%r16170, %r143, %r16163;
	add.s32 	%r16171, %r16170, %r140;
	mul.wide.u32 	%rd94, %r16171, 4;
	add.s64 	%rd95, %rd50, %rd94;
	ld.shared.u32 	%r16172, [%rd95];
	add.s32 	%r16173, %r144, %r16163;
	add.s32 	%r16174, %r16173, %r140;
	mul.wide.u32 	%rd96, %r16174, 4;
	add.s64 	%rd97, %rd50, %rd96;
	ld.shared.u32 	%r16175, [%rd97];
	add.s32 	%r16176, %r195, %r16401;
	bfe.s32 	%r16177, %r16176, 5, 1;
	and.b32  	%r16178, %r16177, 65;
	bfe.s32 	%r16179, %r16176, 3, 1;
	and.b32  	%r16180, %r16179, 260;
	bfe.s32 	%r16181, %r16176, 2, 1;
	and.b32  	%r16182, %r16181, 520;
	bfe.s32 	%r16183, %r16176, 1, 1;
	and.b32  	%r16184, %r16183, 1040;
	bfe.s32 	%r16185, %r16176, 7, 1;
	and.b32  	%r16186, %r16185, 4161;
	bfe.s32 	%r16187, %r16176, 4, 1;
	and.b32  	%r16188, %r16187, 130;
	add.s32 	%r16189, %r145, %r16178;
	add.s32 	%r16190, %r16189, %r16180;
	add.s32 	%r16191, %r16190, %r16182;
	add.s32 	%r16192, %r16191, %r16184;
	add.s32 	%r16193, %r16192, %r16186;
	add.s32 	%r16194, %r16193, %r16188;
	mul.wide.u32 	%rd98, %r16194, 4;
	add.s64 	%rd99, %rd50, %rd98;
	ld.shared.u32 	%r16195, [%rd99];
	add.s32 	%r16196, %r146, %r16178;
	add.s32 	%r16197, %r16196, %r16180;
	add.s32 	%r16198, %r16197, %r16182;
	add.s32 	%r16199, %r16198, %r16184;
	add.s32 	%r16200, %r16199, %r16186;
	add.s32 	%r16201, %r16200, %r16188;
	mul.wide.u32 	%rd100, %r16201, 4;
	add.s64 	%rd101, %rd50, %rd100;
	ld.shared.u32 	%r16202, [%rd101];
	add.s32 	%r16203, %r147, %r16178;
	add.s32 	%r16204, %r16203, %r16180;
	add.s32 	%r16205, %r16204, %r16182;
	add.s32 	%r16206, %r16205, %r16184;
	add.s32 	%r16207, %r16206, %r16186;
	add.s32 	%r16208, %r16207, %r16188;
	mul.wide.u32 	%rd102, %r16208, 4;
	add.s64 	%rd103, %rd50, %rd102;
	ld.shared.u32 	%r16209, [%rd103];
	add.s32 	%r16210, %r148, %r16178;
	add.s32 	%r16211, %r16210, %r16180;
	add.s32 	%r16212, %r16211, %r16182;
	add.s32 	%r16213, %r16212, %r16184;
	add.s32 	%r16214, %r16213, %r16186;
	add.s32 	%r16215, %r16214, %r16188;
	mul.wide.u32 	%rd104, %r16215, 4;
	add.s64 	%rd105, %rd50, %rd104;
	ld.shared.u32 	%r16216, [%rd105];
	// begin inline asm
	mov.b32 %r904, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r915, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r903, %r16166, -2004318072;
	mov.u32 	%r902, 983055;
	// begin inline asm
	lop3.b32 %r901, %r902, %r903, %r904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r905, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r906, %r904, %r905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r909, %r901, %r906;
	// end inline asm
	mov.u32 	%r913, 15728880;
	// begin inline asm
	lop3.b32 %r912, %r913, %r903, %r915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r916, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r917, %r915, %r916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r920, %r912, %r917;
	// end inline asm
	shr.u32 	%r925, %r903, 8;
	// begin inline asm
	lop3.b32 %r923, %r902, %r925, %r904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r927, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r928, %r904, %r927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r931, %r923, %r928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r934, %r913, %r925, %r915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r938, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r939, %r915, %r938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r942, %r934, %r939;
	// end inline asm
	// begin inline asm
	mov.b32 %r950, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r961, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r949, %r16169, -2004318072;
	// begin inline asm
	lop3.b32 %r947, %r902, %r949, %r950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r952, %r950, %r951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r955, %r947, %r952;
	// end inline asm
	// begin inline asm
	lop3.b32 %r958, %r913, %r949, %r961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r963, %r961, %r962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r966, %r958, %r963;
	// end inline asm
	shr.u32 	%r971, %r949, 8;
	// begin inline asm
	lop3.b32 %r969, %r902, %r971, %r950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r973, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r974, %r950, %r973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r977, %r969, %r974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r980, %r913, %r971, %r961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r984, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r985, %r961, %r984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r988, %r980, %r985;
	// end inline asm
	// begin inline asm
	mov.b32 %r996, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1007, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r995, %r16172, -2004318072;
	// begin inline asm
	lop3.b32 %r993, %r902, %r995, %r996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r998, %r996, %r997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1001, %r993, %r998;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1004, %r913, %r995, %r1007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1008, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1009, %r1007, %r1008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1012, %r1004, %r1009;
	// end inline asm
	shr.u32 	%r1017, %r995, 8;
	// begin inline asm
	lop3.b32 %r1015, %r902, %r1017, %r996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1020, %r996, %r1019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1023, %r1015, %r1020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1026, %r913, %r1017, %r1007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1030, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1031, %r1007, %r1030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1034, %r1026, %r1031;
	// end inline asm
	// begin inline asm
	mov.b32 %r1042, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1053, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1041, %r16175, -2004318072;
	// begin inline asm
	lop3.b32 %r1039, %r902, %r1041, %r1042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1044, %r1042, %r1043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1047, %r1039, %r1044;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1050, %r913, %r1041, %r1053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1055, %r1053, %r1054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1058, %r1050, %r1055;
	// end inline asm
	shr.u32 	%r1063, %r1041, 8;
	// begin inline asm
	lop3.b32 %r1061, %r902, %r1063, %r1042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1066, %r1042, %r1065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1069, %r1061, %r1066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1072, %r913, %r1063, %r1053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1077, %r1053, %r1076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1080, %r1072, %r1077;
	// end inline asm
	// begin inline asm
	mov.b32 %r1088, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1099, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1087, %r16195, -2004318072;
	// begin inline asm
	lop3.b32 %r1085, %r902, %r1087, %r1088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1090, %r1088, %r1089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1093, %r1085, %r1090;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1096, %r913, %r1087, %r1099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1101, %r1099, %r1100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1104, %r1096, %r1101;
	// end inline asm
	shr.u32 	%r1109, %r1087, 8;
	// begin inline asm
	lop3.b32 %r1107, %r902, %r1109, %r1088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1111, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1112, %r1088, %r1111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1115, %r1107, %r1112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1118, %r913, %r1109, %r1099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1123, %r1099, %r1122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1126, %r1118, %r1123;
	// end inline asm
	// begin inline asm
	mov.b32 %r1134, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1145, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1133, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r1131, %r902, %r1133, %r1134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1136, %r1134, %r1135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1139, %r1131, %r1136;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1142, %r913, %r1133, %r1145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1147, %r1145, %r1146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1150, %r1142, %r1147;
	// end inline asm
	shr.u32 	%r1155, %r1133, 8;
	// begin inline asm
	lop3.b32 %r1153, %r902, %r1155, %r1134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1157, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1158, %r1134, %r1157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1161, %r1153, %r1158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1164, %r913, %r1155, %r1145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1168, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1169, %r1145, %r1168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1172, %r1164, %r1169;
	// end inline asm
	// begin inline asm
	mov.b32 %r1180, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1191, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1179, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r1177, %r902, %r1179, %r1180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1182, %r1180, %r1181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1185, %r1177, %r1182;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1188, %r913, %r1179, %r1191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1193, %r1191, %r1192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1196, %r1188, %r1193;
	// end inline asm
	shr.u32 	%r1201, %r1179, 8;
	// begin inline asm
	lop3.b32 %r1199, %r902, %r1201, %r1180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1204, %r1180, %r1203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1207, %r1199, %r1204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1210, %r913, %r1201, %r1191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1214, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1215, %r1191, %r1214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1218, %r1210, %r1215;
	// end inline asm
	// begin inline asm
	mov.b32 %r1226, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1237, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1225, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r1223, %r902, %r1225, %r1226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1228, %r1226, %r1227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1231, %r1223, %r1228;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1234, %r913, %r1225, %r1237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1239, %r1237, %r1238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1242, %r1234, %r1239;
	// end inline asm
	shr.u32 	%r1247, %r1225, 8;
	// begin inline asm
	lop3.b32 %r1245, %r902, %r1247, %r1226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1250, %r1226, %r1249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1253, %r1245, %r1250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1256, %r913, %r1247, %r1237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1260, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1261, %r1237, %r1260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1264, %r1256, %r1261;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1267, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1269, %r1267, %r909;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1272, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1274, %r1272, %r920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1277, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1279, %r1277, %r931;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1282, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1284, %r1282, %r942;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1287, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1289, %r1287, %r955;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1292, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1294, %r1292, %r966;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1297, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1299, %r1297, %r977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1302, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1304, %r1302, %r988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1307, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1309, %r1307, %r1001;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1312, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1314, %r1312, %r1012;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1317, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1319, %r1317, %r1023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1322, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1324, %r1322, %r1034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1327, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1329, %r1327, %r1047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1332, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1334, %r1332, %r1058;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1337, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1339, %r1337, %r1069;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1342, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1344, %r1342, %r1080;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1347, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1349, %r1347, %r1093;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1352, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1354, %r1352, %r1104;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1357, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1359, %r1357, %r1115;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1362, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1364, %r1362, %r1126;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1367, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1369, %r1367, %r1139;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1372, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1374, %r1372, %r1150;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1377, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1379, %r1377, %r1161;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1382, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1384, %r1382, %r1172;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1387, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1389, %r1387, %r1185;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1392, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1394, %r1392, %r1196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1397, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1399, %r1397, %r1207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1402, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1404, %r1402, %r1218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1407, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1409, %r1407, %r1231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1412, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1414, %r1412, %r1242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1417, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1419, %r1417, %r1253;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1422, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1424, %r1422, %r1264;
	// end inline asm
	// begin inline asm
	mov.b32 %r1432, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1443, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1431, %r16376, -2004318072;
	// begin inline asm
	lop3.b32 %r1429, %r902, %r1431, %r1432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1434, %r1432, %r1433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1437, %r1429, %r1434;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1440, %r913, %r1431, %r1443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1445, %r1443, %r1444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1448, %r1440, %r1445;
	// end inline asm
	shr.u32 	%r1453, %r1431, 8;
	// begin inline asm
	lop3.b32 %r1451, %r902, %r1453, %r1432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1456, %r1432, %r1455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1459, %r1451, %r1456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1462, %r913, %r1453, %r1443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1466, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1467, %r1443, %r1466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1470, %r1462, %r1467;
	// end inline asm
	// begin inline asm
	mov.b32 %r1478, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1489, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1477, %r16377, -2004318072;
	// begin inline asm
	lop3.b32 %r1475, %r902, %r1477, %r1478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1480, %r1478, %r1479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1483, %r1475, %r1480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1486, %r913, %r1477, %r1489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1491, %r1489, %r1490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1494, %r1486, %r1491;
	// end inline asm
	shr.u32 	%r1499, %r1477, 8;
	// begin inline asm
	lop3.b32 %r1497, %r902, %r1499, %r1478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1502, %r1478, %r1501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1505, %r1497, %r1502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1508, %r913, %r1499, %r1489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1512, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1513, %r1489, %r1512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1516, %r1508, %r1513;
	// end inline asm
	// begin inline asm
	mov.b32 %r1524, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1535, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1523, %r16378, -2004318072;
	// begin inline asm
	lop3.b32 %r1521, %r902, %r1523, %r1524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1526, %r1524, %r1525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1529, %r1521, %r1526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1532, %r913, %r1523, %r1535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1537, %r1535, %r1536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1540, %r1532, %r1537;
	// end inline asm
	shr.u32 	%r1545, %r1523, 8;
	// begin inline asm
	lop3.b32 %r1543, %r902, %r1545, %r1524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1548, %r1524, %r1547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1551, %r1543, %r1548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1554, %r913, %r1545, %r1535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1559, %r1535, %r1558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1562, %r1554, %r1559;
	// end inline asm
	// begin inline asm
	mov.b32 %r1570, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1581, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1569, %r16379, -2004318072;
	// begin inline asm
	lop3.b32 %r1567, %r902, %r1569, %r1570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1572, %r1570, %r1571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1575, %r1567, %r1572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1578, %r913, %r1569, %r1581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1583, %r1581, %r1582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1586, %r1578, %r1583;
	// end inline asm
	shr.u32 	%r1591, %r1569, 8;
	// begin inline asm
	lop3.b32 %r1589, %r902, %r1591, %r1570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1594, %r1570, %r1593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1597, %r1589, %r1594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1600, %r913, %r1591, %r1581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1604, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1605, %r1581, %r1604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1608, %r1600, %r1605;
	// end inline asm
	// begin inline asm
	mov.b32 %r1616, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1627, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1615, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r1613, %r902, %r1615, %r1616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1618, %r1616, %r1617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1621, %r1613, %r1618;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1624, %r913, %r1615, %r1627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1628, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1629, %r1627, %r1628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1632, %r1624, %r1629;
	// end inline asm
	shr.u32 	%r1637, %r1615, 8;
	// begin inline asm
	lop3.b32 %r1635, %r902, %r1637, %r1616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1640, %r1616, %r1639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1643, %r1635, %r1640;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1646, %r913, %r1637, %r1627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1650, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1651, %r1627, %r1650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1654, %r1646, %r1651;
	// end inline asm
	// begin inline asm
	mov.b32 %r1662, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1673, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1661, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r1659, %r902, %r1661, %r1662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1664, %r1662, %r1663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1667, %r1659, %r1664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1670, %r913, %r1661, %r1673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1675, %r1673, %r1674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1678, %r1670, %r1675;
	// end inline asm
	shr.u32 	%r1683, %r1661, 8;
	// begin inline asm
	lop3.b32 %r1681, %r902, %r1683, %r1662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1685, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1686, %r1662, %r1685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1689, %r1681, %r1686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1692, %r913, %r1683, %r1673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1696, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1697, %r1673, %r1696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1700, %r1692, %r1697;
	// end inline asm
	// begin inline asm
	mov.b32 %r1708, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1719, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1707, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r1705, %r902, %r1707, %r1708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1709, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1710, %r1708, %r1709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1713, %r1705, %r1710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1716, %r913, %r1707, %r1719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1720, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1721, %r1719, %r1720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1724, %r1716, %r1721;
	// end inline asm
	shr.u32 	%r1729, %r1707, 8;
	// begin inline asm
	lop3.b32 %r1727, %r902, %r1729, %r1708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1731, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1732, %r1708, %r1731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1735, %r1727, %r1732;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1738, %r913, %r1729, %r1719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1742, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1743, %r1719, %r1742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1746, %r1738, %r1743;
	// end inline asm
	// begin inline asm
	mov.b32 %r1754, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1765, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1753, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r1751, %r902, %r1753, %r1754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1755, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1756, %r1754, %r1755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1759, %r1751, %r1756;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1762, %r913, %r1753, %r1765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1766, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1767, %r1765, %r1766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1770, %r1762, %r1767;
	// end inline asm
	shr.u32 	%r1775, %r1753, 8;
	// begin inline asm
	lop3.b32 %r1773, %r902, %r1775, %r1754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1777, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1778, %r1754, %r1777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1781, %r1773, %r1778;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1784, %r913, %r1775, %r1765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1788, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1789, %r1765, %r1788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1792, %r1784, %r1789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r305, %r1437, %r1269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1799, %r305, %r1448, %r1274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r305, %r1459, %r1279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1807, %r305, %r1470, %r1284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1811, %r305, %r1483, %r1289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1815, %r305, %r1494, %r1294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1819, %r305, %r1505, %r1299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1823, %r305, %r1516, %r1304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1827, %r305, %r1529, %r1309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1831, %r305, %r1540, %r1314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1835, %r305, %r1551, %r1319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1839, %r305, %r1562, %r1324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1843, %r305, %r1575, %r1329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1847, %r305, %r1586, %r1334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1851, %r305, %r1597, %r1339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1855, %r305, %r1608, %r1344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1859, %r323, %r1621, %r1349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1863, %r323, %r1632, %r1354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1867, %r323, %r1643, %r1359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1871, %r323, %r1654, %r1364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1875, %r323, %r1667, %r1369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1879, %r323, %r1678, %r1374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1883, %r323, %r1689, %r1379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1887, %r323, %r1700, %r1384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1891, %r323, %r1713, %r1389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1895, %r323, %r1724, %r1394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1899, %r323, %r1735, %r1399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1903, %r323, %r1746, %r1404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1907, %r323, %r1759, %r1409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1911, %r323, %r1770, %r1414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1915, %r323, %r1781, %r1419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1919, %r323, %r1792, %r1424;
	// end inline asm
	// begin inline asm
	mov.b32 %r1928, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1939, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1927, %r16380, -2004318072;
	// begin inline asm
	lop3.b32 %r1925, %r902, %r1927, %r1928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1929, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1930, %r1928, %r1929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1933, %r1925, %r1930;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1936, %r913, %r1927, %r1939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1940, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1941, %r1939, %r1940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1944, %r1936, %r1941;
	// end inline asm
	shr.u32 	%r1949, %r1927, 8;
	// begin inline asm
	lop3.b32 %r1947, %r902, %r1949, %r1928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1952, %r1928, %r1951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1955, %r1947, %r1952;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1958, %r913, %r1949, %r1939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1963, %r1939, %r1962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1966, %r1958, %r1963;
	// end inline asm
	// begin inline asm
	mov.b32 %r1974, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1985, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1973, %r16381, -2004318072;
	// begin inline asm
	lop3.b32 %r1971, %r902, %r1973, %r1974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1975, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1976, %r1974, %r1975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1979, %r1971, %r1976;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1982, %r913, %r1973, %r1985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1986, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1987, %r1985, %r1986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1990, %r1982, %r1987;
	// end inline asm
	shr.u32 	%r1995, %r1973, 8;
	// begin inline asm
	lop3.b32 %r1993, %r902, %r1995, %r1974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1998, %r1974, %r1997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2001, %r1993, %r1998;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2004, %r913, %r1995, %r1985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2008, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2009, %r1985, %r2008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2012, %r2004, %r2009;
	// end inline asm
	// begin inline asm
	mov.b32 %r2020, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2031, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2019, %r16382, -2004318072;
	// begin inline asm
	lop3.b32 %r2017, %r902, %r2019, %r2020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2022, %r2020, %r2021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2025, %r2017, %r2022;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2028, %r913, %r2019, %r2031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2032, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2033, %r2031, %r2032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2036, %r2028, %r2033;
	// end inline asm
	shr.u32 	%r2041, %r2019, 8;
	// begin inline asm
	lop3.b32 %r2039, %r902, %r2041, %r2020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2044, %r2020, %r2043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2047, %r2039, %r2044;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2050, %r913, %r2041, %r2031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2055, %r2031, %r2054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2058, %r2050, %r2055;
	// end inline asm
	// begin inline asm
	mov.b32 %r2066, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2077, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2065, %r16383, -2004318072;
	// begin inline asm
	lop3.b32 %r2063, %r902, %r2065, %r2066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2068, %r2066, %r2067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2071, %r2063, %r2068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2074, %r913, %r2065, %r2077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2078, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2079, %r2077, %r2078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2082, %r2074, %r2079;
	// end inline asm
	shr.u32 	%r2087, %r2065, 8;
	// begin inline asm
	lop3.b32 %r2085, %r902, %r2087, %r2066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2090, %r2066, %r2089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2093, %r2085, %r2090;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2096, %r913, %r2087, %r2077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2101, %r2077, %r2100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2104, %r2096, %r2101;
	// end inline asm
	// begin inline asm
	mov.b32 %r2112, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2123, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2111, %r16392, -2004318072;
	// begin inline asm
	lop3.b32 %r2109, %r902, %r2111, %r2112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2114, %r2112, %r2113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2117, %r2109, %r2114;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2120, %r913, %r2111, %r2123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2125, %r2123, %r2124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2128, %r2120, %r2125;
	// end inline asm
	shr.u32 	%r2133, %r2111, 8;
	// begin inline asm
	lop3.b32 %r2131, %r902, %r2133, %r2112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2136, %r2112, %r2135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2139, %r2131, %r2136;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2142, %r913, %r2133, %r2123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2147, %r2123, %r2146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2150, %r2142, %r2147;
	// end inline asm
	// begin inline asm
	mov.b32 %r2158, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2169, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2157, %r16393, -2004318072;
	// begin inline asm
	lop3.b32 %r2155, %r902, %r2157, %r2158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2160, %r2158, %r2159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2163, %r2155, %r2160;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2166, %r913, %r2157, %r2169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2170, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2171, %r2169, %r2170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2174, %r2166, %r2171;
	// end inline asm
	shr.u32 	%r2179, %r2157, 8;
	// begin inline asm
	lop3.b32 %r2177, %r902, %r2179, %r2158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2182, %r2158, %r2181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2185, %r2177, %r2182;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2188, %r913, %r2179, %r2169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2193, %r2169, %r2192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2196, %r2188, %r2193;
	// end inline asm
	// begin inline asm
	mov.b32 %r2204, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2215, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2203, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r2201, %r902, %r2203, %r2204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2206, %r2204, %r2205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2209, %r2201, %r2206;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2212, %r913, %r2203, %r2215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2216, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2217, %r2215, %r2216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2220, %r2212, %r2217;
	// end inline asm
	shr.u32 	%r2225, %r2203, 8;
	// begin inline asm
	lop3.b32 %r2223, %r902, %r2225, %r2204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2228, %r2204, %r2227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2231, %r2223, %r2228;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2234, %r913, %r2225, %r2215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2239, %r2215, %r2238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2242, %r2234, %r2239;
	// end inline asm
	// begin inline asm
	mov.b32 %r2250, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2261, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2249, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r2247, %r902, %r2249, %r2250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2252, %r2250, %r2251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2255, %r2247, %r2252;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2258, %r913, %r2249, %r2261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2263, %r2261, %r2262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2266, %r2258, %r2263;
	// end inline asm
	shr.u32 	%r2271, %r2249, 8;
	// begin inline asm
	lop3.b32 %r2269, %r902, %r2271, %r2250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2274, %r2250, %r2273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2277, %r2269, %r2274;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2280, %r913, %r2271, %r2261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2285, %r2261, %r2284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2288, %r2280, %r2285;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2291, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2293, %r2291, %r1933, %r1795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2297, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2299, %r2297, %r1944, %r1799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2303, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2305, %r2303, %r1955, %r1803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2309, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2311, %r2309, %r1966, %r1807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2315, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2317, %r2315, %r1979, %r1811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2321, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2323, %r2321, %r1990, %r1815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2327, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2329, %r2327, %r2001, %r1819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2333, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2335, %r2333, %r2012, %r1823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2339, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2341, %r2339, %r2025, %r1827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2345, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2347, %r2345, %r2036, %r1831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2351, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2353, %r2351, %r2047, %r1835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2357, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2359, %r2357, %r2058, %r1839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2363, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2365, %r2363, %r2071, %r1843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2369, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2371, %r2369, %r2082, %r1847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2375, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2377, %r2375, %r2093, %r1851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2381, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2383, %r2381, %r2104, %r1855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2387, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2389, %r2387, %r2117, %r1859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2393, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2395, %r2393, %r2128, %r1863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2399, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2401, %r2399, %r2139, %r1867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2405, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2407, %r2405, %r2150, %r1871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2411, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2413, %r2411, %r2163, %r1875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2417, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2419, %r2417, %r2174, %r1879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2423, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2425, %r2423, %r2185, %r1883;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2429, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2431, %r2429, %r2196, %r1887;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2435, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2437, %r2435, %r2209, %r1891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2441, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2443, %r2441, %r2220, %r1895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2447, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2449, %r2447, %r2231, %r1899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2453, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2455, %r2453, %r2242, %r1903;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2459, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2461, %r2459, %r2255, %r1907;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2465, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2467, %r2465, %r2266, %r1911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2471, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2473, %r2471, %r2277, %r1915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2477, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2479, %r2477, %r2288, %r1919;
	// end inline asm
	// begin inline asm
	mov.b32 %r2488, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2499, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2487, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r2485, %r902, %r2487, %r2488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2490, %r2488, %r2489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2493, %r2485, %r2490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2496, %r913, %r2487, %r2499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2501, %r2499, %r2500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2504, %r2496, %r2501;
	// end inline asm
	shr.u32 	%r2509, %r2487, 8;
	// begin inline asm
	lop3.b32 %r2507, %r902, %r2509, %r2488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2512, %r2488, %r2511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2515, %r2507, %r2512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2518, %r913, %r2509, %r2499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2522, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2523, %r2499, %r2522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2526, %r2518, %r2523;
	// end inline asm
	// begin inline asm
	mov.b32 %r2534, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2545, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2533, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r2531, %r902, %r2533, %r2534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2536, %r2534, %r2535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2539, %r2531, %r2536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2542, %r913, %r2533, %r2545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2547, %r2545, %r2546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2550, %r2542, %r2547;
	// end inline asm
	shr.u32 	%r2555, %r2533, 8;
	// begin inline asm
	lop3.b32 %r2553, %r902, %r2555, %r2534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2558, %r2534, %r2557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2561, %r2553, %r2558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2564, %r913, %r2555, %r2545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2568, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2569, %r2545, %r2568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2572, %r2564, %r2569;
	// end inline asm
	// begin inline asm
	mov.b32 %r2580, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2591, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2579, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r2577, %r902, %r2579, %r2580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2581, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2582, %r2580, %r2581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2585, %r2577, %r2582;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2588, %r913, %r2579, %r2591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2593, %r2591, %r2592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2596, %r2588, %r2593;
	// end inline asm
	shr.u32 	%r2601, %r2579, 8;
	// begin inline asm
	lop3.b32 %r2599, %r902, %r2601, %r2580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2604, %r2580, %r2603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2607, %r2599, %r2604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2610, %r913, %r2601, %r2591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2614, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2615, %r2591, %r2614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2618, %r2610, %r2615;
	// end inline asm
	// begin inline asm
	mov.b32 %r2626, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2637, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2625, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r2623, %r902, %r2625, %r2626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2627, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2628, %r2626, %r2627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2631, %r2623, %r2628;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2634, %r913, %r2625, %r2637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2638, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2639, %r2637, %r2638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2642, %r2634, %r2639;
	// end inline asm
	shr.u32 	%r2647, %r2625, 8;
	// begin inline asm
	lop3.b32 %r2645, %r902, %r2647, %r2626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2649, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2650, %r2626, %r2649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2653, %r2645, %r2650;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2656, %r913, %r2647, %r2637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2660, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2661, %r2637, %r2660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2664, %r2656, %r2661;
	// end inline asm
	// begin inline asm
	mov.b32 %r2672, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2683, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2671, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r2669, %r902, %r2671, %r2672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2673, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2674, %r2672, %r2673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2677, %r2669, %r2674;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2680, %r913, %r2671, %r2683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2684, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2685, %r2683, %r2684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2688, %r2680, %r2685;
	// end inline asm
	shr.u32 	%r2693, %r2671, 8;
	// begin inline asm
	lop3.b32 %r2691, %r902, %r2693, %r2672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2695, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2696, %r2672, %r2695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2699, %r2691, %r2696;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2702, %r913, %r2693, %r2683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2706, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2707, %r2683, %r2706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2710, %r2702, %r2707;
	// end inline asm
	// begin inline asm
	mov.b32 %r2718, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2729, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2717, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r2715, %r902, %r2717, %r2718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2719, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2720, %r2718, %r2719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2723, %r2715, %r2720;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2726, %r913, %r2717, %r2729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2730, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2731, %r2729, %r2730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2734, %r2726, %r2731;
	// end inline asm
	shr.u32 	%r2739, %r2717, 8;
	// begin inline asm
	lop3.b32 %r2737, %r902, %r2739, %r2718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2741, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2742, %r2718, %r2741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2745, %r2737, %r2742;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2748, %r913, %r2739, %r2729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2752, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2753, %r2729, %r2752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2756, %r2748, %r2753;
	// end inline asm
	// begin inline asm
	mov.b32 %r2764, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2775, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2763, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r2761, %r902, %r2763, %r2764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2765, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2766, %r2764, %r2765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2769, %r2761, %r2766;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2772, %r913, %r2763, %r2775, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2776, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2777, %r2775, %r2776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2780, %r2772, %r2777;
	// end inline asm
	shr.u32 	%r2785, %r2763, 8;
	// begin inline asm
	lop3.b32 %r2783, %r902, %r2785, %r2764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2787, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2788, %r2764, %r2787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2791, %r2783, %r2788;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2794, %r913, %r2785, %r2775, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2798, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2799, %r2775, %r2798;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2802, %r2794, %r2799;
	// end inline asm
	// begin inline asm
	mov.b32 %r2810, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2821, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2809, %r16399, -2004318072;
	// begin inline asm
	lop3.b32 %r2807, %r902, %r2809, %r2810, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2811, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2812, %r2810, %r2811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2815, %r2807, %r2812;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2818, %r913, %r2809, %r2821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2822, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2823, %r2821, %r2822;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2826, %r2818, %r2823;
	// end inline asm
	shr.u32 	%r2831, %r2809, 8;
	// begin inline asm
	lop3.b32 %r2829, %r902, %r2831, %r2810, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2833, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2834, %r2810, %r2833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2837, %r2829, %r2834;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2840, %r913, %r2831, %r2821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2844, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2845, %r2821, %r2844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2848, %r2840, %r2845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2986, %r377, %r2493, %r2293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2983, %r377, %r2504, %r2299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2995, %r377, %r2515, %r2305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2992, %r377, %r2526, %r2311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3004, %r377, %r2539, %r2317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3001, %r377, %r2550, %r2323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3013, %r377, %r2561, %r2329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3010, %r377, %r2572, %r2335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3022, %r377, %r2585, %r2341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3019, %r377, %r2596, %r2347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3031, %r377, %r2607, %r2353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3028, %r377, %r2618, %r2359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3040, %r377, %r2631, %r2365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3037, %r377, %r2642, %r2371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3049, %r377, %r2653, %r2377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3046, %r377, %r2664, %r2383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3058, %r395, %r2677, %r2389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3055, %r395, %r2688, %r2395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3067, %r395, %r2699, %r2401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3064, %r395, %r2710, %r2407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3076, %r395, %r2723, %r2413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3073, %r395, %r2734, %r2419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3085, %r395, %r2745, %r2425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3082, %r395, %r2756, %r2431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3094, %r395, %r2769, %r2437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3091, %r395, %r2780, %r2443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3103, %r395, %r2791, %r2449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3100, %r395, %r2802, %r2455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3112, %r395, %r2815, %r2461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3109, %r395, %r2826, %r2467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3121, %r395, %r2837, %r2473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3118, %r395, %r2848, %r2479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2979, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2981, %r2979, %r2983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2984, %r459, %r2986, %r2981;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2988, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2990, %r2988, %r2992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2993, %r459, %r2995, %r2990;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2997, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2999, %r2997, %r3001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3002, %r459, %r3004, %r2999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3006, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3008, %r3006, %r3010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3011, %r459, %r3013, %r3008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3015, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3017, %r3015, %r3019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3020, %r459, %r3022, %r3017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3024, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3026, %r3024, %r3028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r459, %r3031, %r3026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3033, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3035, %r3033, %r3037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r459, %r3040, %r3035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3042, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3044, %r3042, %r3046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3047, %r459, %r3049, %r3044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3051, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3053, %r3051, %r3055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3056, %r462, %r3058, %r3053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3060, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3062, %r3060, %r3064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3065, %r462, %r3067, %r3062;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3069, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3071, %r3069, %r3073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r462, %r3076, %r3071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3078, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3080, %r3078, %r3082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3083, %r462, %r3085, %r3080;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3087, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3089, %r3087, %r3091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3092, %r462, %r3094, %r3089;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3096, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3098, %r3096, %r3100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3101, %r462, %r3103, %r3098;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3105, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3107, %r3105, %r3109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3110, %r462, %r3112, %r3107;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3114, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3116, %r3114, %r3118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3119, %r462, %r3121, %r3116;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3123, %r465, %r2986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3126, %r459, %r2983, %r3123;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3130, %r465, %r2995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3133, %r459, %r2992, %r3130;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3137, %r465, %r3004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3140, %r459, %r3001, %r3137;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3144, %r465, %r3013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3147, %r459, %r3010, %r3144;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3151, %r465, %r3022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3154, %r459, %r3019, %r3151;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3158, %r465, %r3031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3161, %r459, %r3028, %r3158;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3165, %r465, %r3040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3168, %r459, %r3037, %r3165;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3172, %r465, %r3049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3175, %r459, %r3046, %r3172;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3179, %r468, %r3058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3182, %r462, %r3055, %r3179;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3186, %r468, %r3067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3189, %r462, %r3064, %r3186;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3193, %r468, %r3076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3196, %r462, %r3073, %r3193;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3200, %r468, %r3085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3203, %r462, %r3082, %r3200;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3207, %r468, %r3094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3210, %r462, %r3091, %r3207;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3214, %r468, %r3103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3217, %r462, %r3100, %r3214;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3221, %r468, %r3112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3224, %r462, %r3109, %r3221;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3228, %r468, %r3121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3231, %r462, %r3118, %r3228;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3402, %r3399}, {%r514, %r520, %r517, %r523}, {%r2984, %r3126}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3411, %r3408}, {%r514, %r520, %r517, %r523}, {%r2993, %r3133}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3420, %r3417}, {%r514, %r520, %r517, %r523}, {%r3002, %r3140}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3429, %r3426}, {%r514, %r520, %r517, %r523}, {%r3011, %r3147}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3438, %r3435}, {%r514, %r520, %r517, %r523}, {%r3020, %r3154}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3447, %r3444}, {%r514, %r520, %r517, %r523}, {%r3029, %r3161}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3456, %r3453}, {%r514, %r520, %r517, %r523}, {%r3038, %r3168}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3465, %r3462}, {%r514, %r520, %r517, %r523}, {%r3047, %r3175}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3474, %r3471}, {%r514, %r520, %r517, %r523}, {%r3056, %r3182}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3483, %r3480}, {%r514, %r520, %r517, %r523}, {%r3065, %r3189}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3492, %r3489}, {%r514, %r520, %r517, %r523}, {%r3074, %r3196}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3501, %r3498}, {%r514, %r520, %r517, %r523}, {%r3083, %r3203}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3510, %r3507}, {%r514, %r520, %r517, %r523}, {%r3092, %r3210}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3519, %r3516}, {%r514, %r520, %r517, %r523}, {%r3101, %r3217}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3528, %r3525}, {%r514, %r520, %r517, %r523}, {%r3110, %r3224}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3537, %r3534}, {%r514, %r520, %r517, %r523}, {%r3119, %r3231}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3395, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3397, %r3395, %r3399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3400, %r564, %r3402, %r3397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3404, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3406, %r3404, %r3408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3409, %r564, %r3411, %r3406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3413, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3415, %r3413, %r3417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3418, %r564, %r3420, %r3415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3422, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3424, %r3422, %r3426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3427, %r564, %r3429, %r3424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3431, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3433, %r3431, %r3435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3436, %r564, %r3438, %r3433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3440, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3442, %r3440, %r3444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3445, %r564, %r3447, %r3442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3449, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3451, %r3449, %r3453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3454, %r564, %r3456, %r3451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3458, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3460, %r3458, %r3462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3463, %r564, %r3465, %r3460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3467, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3469, %r3467, %r3471;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3472, %r564, %r3474, %r3469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3476, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3478, %r3476, %r3480;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3481, %r564, %r3483, %r3478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3485, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3487, %r3485, %r3489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3490, %r564, %r3492, %r3487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3494, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3496, %r3494, %r3498;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3499, %r564, %r3501, %r3496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3503, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3505, %r3503, %r3507;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3508, %r564, %r3510, %r3505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3512, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3514, %r3512, %r3516;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3517, %r564, %r3519, %r3514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3521, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3523, %r3521, %r3525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3526, %r564, %r3528, %r3523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3530, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3532, %r3530, %r3534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3535, %r564, %r3537, %r3532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3539, %r567, %r3402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3542, %r564, %r3399, %r3539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3546, %r567, %r3411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3549, %r564, %r3408, %r3546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3553, %r567, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3556, %r564, %r3417, %r3553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3560, %r567, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3563, %r564, %r3426, %r3560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3567, %r567, %r3438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3570, %r564, %r3435, %r3567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3574, %r567, %r3447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3577, %r564, %r3444, %r3574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3581, %r567, %r3456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3584, %r564, %r3453, %r3581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3588, %r567, %r3465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3591, %r564, %r3462, %r3588;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3595, %r567, %r3474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3598, %r564, %r3471, %r3595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3602, %r567, %r3483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3605, %r564, %r3480, %r3602;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3609, %r567, %r3492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3612, %r564, %r3489, %r3609;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3616, %r567, %r3501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3619, %r564, %r3498, %r3616;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3623, %r567, %r3510;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3626, %r564, %r3507, %r3623;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3630, %r567, %r3519;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3633, %r564, %r3516, %r3630;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3637, %r567, %r3528;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3640, %r564, %r3525, %r3637;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3644, %r567, %r3537;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3647, %r564, %r3534, %r3644;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3940, %r3943}, {%r602, %r608, %r605, %r611}, {%r3400, %r3542}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3946, %r3949}, {%r602, %r608, %r605, %r611}, {%r3409, %r3549}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3952, %r3955}, {%r602, %r608, %r605, %r611}, {%r3418, %r3556}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3958, %r3961}, {%r602, %r608, %r605, %r611}, {%r3427, %r3563}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3964, %r3967}, {%r602, %r608, %r605, %r611}, {%r3436, %r3570}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3970, %r3973}, {%r602, %r608, %r605, %r611}, {%r3445, %r3577}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3976, %r3979}, {%r602, %r608, %r605, %r611}, {%r3454, %r3584}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3982, %r3985}, {%r602, %r608, %r605, %r611}, {%r3463, %r3591}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3941, %r3944}, {%r602, %r608, %r605, %r611}, {%r3472, %r3598}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3947, %r3950}, {%r602, %r608, %r605, %r611}, {%r3481, %r3605}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3953, %r3956}, {%r602, %r608, %r605, %r611}, {%r3490, %r3612}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3959, %r3962}, {%r602, %r608, %r605, %r611}, {%r3499, %r3619}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3965, %r3968}, {%r602, %r608, %r605, %r611}, {%r3508, %r3626}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3971, %r3974}, {%r602, %r608, %r605, %r611}, {%r3517, %r3633}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3977, %r3980}, {%r602, %r608, %r605, %r611}, {%r3526, %r3640}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3983, %r3986}, {%r602, %r608, %r605, %r611}, {%r3535, %r3647}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3939, %r3940, %r3941;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3942, %r3943, %r3944;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3945, %r3946, %r3947;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3948, %r3949, %r3950;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3951, %r3952, %r3953;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3954, %r3955, %r3956;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3957, %r3958, %r3959;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3960, %r3961, %r3962;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3963, %r3964, %r3965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3966, %r3967, %r3968;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3969, %r3970, %r3971;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3972, %r3973, %r3974;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3975, %r3976, %r3977;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3978, %r3979, %r3980;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3981, %r3982, %r3983;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3984, %r3985, %r3986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3987, %r3940, %r3941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3990, %r3943, %r3944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3993, %r3946, %r3947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3996, %r3949, %r3950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3999, %r3952, %r3953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4002, %r3955, %r3956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4005, %r3958, %r3959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4008, %r3961, %r3962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4011, %r3964, %r3965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4014, %r3967, %r3968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4017, %r3970, %r3971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4020, %r3973, %r3974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4023, %r3976, %r3977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4026, %r3979, %r3980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4029, %r3982, %r3983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4032, %r3985, %r3986;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4035, %r183, %r3939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4038, %r183, %r3942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4041, %r183, %r3945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4044, %r183, %r3948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4047, %r183, %r3951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4050, %r183, %r3954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4053, %r183, %r3957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4056, %r183, %r3960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4059, %r183, %r3963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4062, %r183, %r3966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4065, %r183, %r3969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4068, %r183, %r3972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4071, %r183, %r3975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4074, %r183, %r3978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4077, %r183, %r3981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4080, %r183, %r3984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4083, %r184, %r3987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4086, %r184, %r3990;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4089, %r184, %r3993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4092, %r184, %r3996;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4095, %r184, %r3999;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4098, %r184, %r4002;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4101, %r184, %r4005;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4104, %r184, %r4008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4107, %r184, %r4011;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4110, %r184, %r4014;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4113, %r184, %r4017;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4116, %r184, %r4020;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4119, %r184, %r4023;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4122, %r184, %r4026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4125, %r184, %r4029;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4128, %r184, %r4032;
	// end inline asm
	// begin inline asm
	mov.b32 %r4131, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4132, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4133, %r4035, %r4131;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4136, %r4133, %r4132;
	// end inline asm
	// begin inline asm
	mov.b32 %r4139, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4140, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4141, %r4038, %r4139;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4144, %r4141, %r4140;
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4148, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4149, %r4041, %r4147;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4152, %r4149, %r4148;
	// end inline asm
	// begin inline asm
	mov.b32 %r4155, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4156, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4157, %r4044, %r4155;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4160, %r4157, %r4156;
	// end inline asm
	// begin inline asm
	mov.b32 %r4163, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4164, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4165, %r4047, %r4163;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4168, %r4165, %r4164;
	// end inline asm
	// begin inline asm
	mov.b32 %r4171, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4172, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4173, %r4050, %r4171;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4176, %r4173, %r4172;
	// end inline asm
	// begin inline asm
	mov.b32 %r4179, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4180, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4181, %r4053, %r4179;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4184, %r4181, %r4180;
	// end inline asm
	// begin inline asm
	mov.b32 %r4187, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4188, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4189, %r4056, %r4187;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4192, %r4189, %r4188;
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4196, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4197, %r4059, %r4195;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4200, %r4197, %r4196;
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4204, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4205, %r4062, %r4203;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4208, %r4205, %r4204;
	// end inline asm
	// begin inline asm
	mov.b32 %r4211, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4212, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4213, %r4065, %r4211;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4216, %r4213, %r4212;
	// end inline asm
	// begin inline asm
	mov.b32 %r4219, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4220, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4221, %r4068, %r4219;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4224, %r4221, %r4220;
	// end inline asm
	// begin inline asm
	mov.b32 %r4227, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4228, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4229, %r4071, %r4227;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4232, %r4229, %r4228;
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4236, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4237, %r4074, %r4235;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4240, %r4237, %r4236;
	// end inline asm
	// begin inline asm
	mov.b32 %r4243, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4244, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4245, %r4077, %r4243;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4248, %r4245, %r4244;
	// end inline asm
	// begin inline asm
	mov.b32 %r4251, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4252, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4253, %r4080, %r4251;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4256, %r4253, %r4252;
	// end inline asm
	// begin inline asm
	mov.b32 %r4259, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4260, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4261, %r4083, %r4259;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4264, %r4261, %r4260;
	// end inline asm
	// begin inline asm
	mov.b32 %r4267, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4268, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4269, %r4086, %r4267;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4272, %r4269, %r4268;
	// end inline asm
	// begin inline asm
	mov.b32 %r4275, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4276, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4277, %r4089, %r4275;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4280, %r4277, %r4276;
	// end inline asm
	// begin inline asm
	mov.b32 %r4283, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4284, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4285, %r4092, %r4283;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4288, %r4285, %r4284;
	// end inline asm
	// begin inline asm
	mov.b32 %r4291, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4292, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4293, %r4095, %r4291;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4296, %r4293, %r4292;
	// end inline asm
	// begin inline asm
	mov.b32 %r4299, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4300, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4301, %r4098, %r4299;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4304, %r4301, %r4300;
	// end inline asm
	// begin inline asm
	mov.b32 %r4307, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4308, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4309, %r4101, %r4307;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4312, %r4309, %r4308;
	// end inline asm
	// begin inline asm
	mov.b32 %r4315, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4316, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4317, %r4104, %r4315;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4320, %r4317, %r4316;
	// end inline asm
	// begin inline asm
	mov.b32 %r4323, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4324, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4325, %r4107, %r4323;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4328, %r4325, %r4324;
	// end inline asm
	// begin inline asm
	mov.b32 %r4331, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4332, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4333, %r4110, %r4331;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4336, %r4333, %r4332;
	// end inline asm
	// begin inline asm
	mov.b32 %r4339, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4340, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4341, %r4113, %r4339;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4344, %r4341, %r4340;
	// end inline asm
	// begin inline asm
	mov.b32 %r4347, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4348, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4349, %r4116, %r4347;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4352, %r4349, %r4348;
	// end inline asm
	// begin inline asm
	mov.b32 %r4355, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4356, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4357, %r4119, %r4355;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4360, %r4357, %r4356;
	// end inline asm
	// begin inline asm
	mov.b32 %r4363, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4364, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4365, %r4122, %r4363;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4368, %r4365, %r4364;
	// end inline asm
	// begin inline asm
	mov.b32 %r4371, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4372, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4373, %r4125, %r4371;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4376, %r4373, %r4372;
	// end inline asm
	// begin inline asm
	mov.b32 %r4379, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4380, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4381, %r4128, %r4379;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4384, %r4381, %r4380;
	// end inline asm
	// begin inline asm
	mov.b32 %r4390, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4389, %r4390, %r4388;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4392, %r4136, %r4389;
	// end inline asm
	// begin inline asm
	mov.b32 %r4395, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4396, %r4390, %r4395;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4399, %r4144, %r4396;
	// end inline asm
	// begin inline asm
	mov.b32 %r4402, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4403, %r4390, %r4402;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4406, %r4152, %r4403;
	// end inline asm
	// begin inline asm
	mov.b32 %r4409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4410, %r4390, %r4409;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4413, %r4160, %r4410;
	// end inline asm
	mov.u32 	%r4419, 25152;
	// begin inline asm
	prmt.b32 %r4416, %r4392, %r4406, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4420, %r4399, %r4413, %r4419;
	// end inline asm
	shl.b32 	%r4427, %r4420, 4;
	mov.u32 	%r4425, 252645135;
	// begin inline asm
	lop3.b32 %r4424, %r4425, %r4416, %r4427, 202;
	// end inline asm
	xor.b32  	%r16217, %r4424, -2004318072;
	// begin inline asm
	mov.b32 %r4431, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4429, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4430, %r4431, %r4429;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4433, %r4168, %r4430;
	// end inline asm
	// begin inline asm
	mov.b32 %r4436, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4437, %r4431, %r4436;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4440, %r4176, %r4437;
	// end inline asm
	// begin inline asm
	mov.b32 %r4443, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4444, %r4431, %r4443;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4447, %r4184, %r4444;
	// end inline asm
	// begin inline asm
	mov.b32 %r4450, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4451, %r4431, %r4450;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4454, %r4192, %r4451;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4457, %r4433, %r4447, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4461, %r4440, %r4454, %r4419;
	// end inline asm
	shl.b32 	%r4468, %r4461, 4;
	// begin inline asm
	lop3.b32 %r4465, %r4425, %r4457, %r4468, 202;
	// end inline asm
	xor.b32  	%r16218, %r4465, -2004318072;
	// begin inline asm
	mov.b32 %r4472, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4471, %r4472, %r4470;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4474, %r4200, %r4471;
	// end inline asm
	// begin inline asm
	mov.b32 %r4477, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4478, %r4472, %r4477;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4481, %r4208, %r4478;
	// end inline asm
	// begin inline asm
	mov.b32 %r4484, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4485, %r4472, %r4484;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4488, %r4216, %r4485;
	// end inline asm
	// begin inline asm
	mov.b32 %r4491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4492, %r4472, %r4491;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4495, %r4224, %r4492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4498, %r4474, %r4488, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4502, %r4481, %r4495, %r4419;
	// end inline asm
	shl.b32 	%r4509, %r4502, 4;
	// begin inline asm
	lop3.b32 %r4506, %r4425, %r4498, %r4509, 202;
	// end inline asm
	xor.b32  	%r16219, %r4506, -2004318072;
	// begin inline asm
	mov.b32 %r4513, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4512, %r4513, %r4511;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4515, %r4232, %r4512;
	// end inline asm
	// begin inline asm
	mov.b32 %r4518, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4519, %r4513, %r4518;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4522, %r4240, %r4519;
	// end inline asm
	// begin inline asm
	mov.b32 %r4525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4526, %r4513, %r4525;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4529, %r4248, %r4526;
	// end inline asm
	// begin inline asm
	mov.b32 %r4532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4533, %r4513, %r4532;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4536, %r4256, %r4533;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4539, %r4515, %r4529, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4543, %r4522, %r4536, %r4419;
	// end inline asm
	shl.b32 	%r4550, %r4543, 4;
	// begin inline asm
	lop3.b32 %r4547, %r4425, %r4539, %r4550, 202;
	// end inline asm
	xor.b32  	%r16220, %r4547, -2004318072;
	// begin inline asm
	mov.b32 %r4554, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4552, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4553, %r4554, %r4552;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4556, %r4264, %r4553;
	// end inline asm
	// begin inline asm
	mov.b32 %r4559, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4560, %r4554, %r4559;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4563, %r4272, %r4560;
	// end inline asm
	// begin inline asm
	mov.b32 %r4566, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4567, %r4554, %r4566;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4570, %r4280, %r4567;
	// end inline asm
	// begin inline asm
	mov.b32 %r4573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4574, %r4554, %r4573;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4577, %r4288, %r4574;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4580, %r4556, %r4570, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4584, %r4563, %r4577, %r4419;
	// end inline asm
	shl.b32 	%r4591, %r4584, 4;
	// begin inline asm
	lop3.b32 %r4588, %r4425, %r4580, %r4591, 202;
	// end inline asm
	xor.b32  	%r16221, %r4588, -2004318072;
	// begin inline asm
	mov.b32 %r4595, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4594, %r4595, %r4593;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4597, %r4296, %r4594;
	// end inline asm
	// begin inline asm
	mov.b32 %r4600, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4601, %r4595, %r4600;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4604, %r4304, %r4601;
	// end inline asm
	// begin inline asm
	mov.b32 %r4607, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4608, %r4595, %r4607;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4611, %r4312, %r4608;
	// end inline asm
	// begin inline asm
	mov.b32 %r4614, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4615, %r4595, %r4614;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4618, %r4320, %r4615;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4621, %r4597, %r4611, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4625, %r4604, %r4618, %r4419;
	// end inline asm
	shl.b32 	%r4632, %r4625, 4;
	// begin inline asm
	lop3.b32 %r4629, %r4425, %r4621, %r4632, 202;
	// end inline asm
	xor.b32  	%r16222, %r4629, -2004318072;
	// begin inline asm
	mov.b32 %r4636, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4634, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4635, %r4636, %r4634;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4638, %r4328, %r4635;
	// end inline asm
	// begin inline asm
	mov.b32 %r4641, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4642, %r4636, %r4641;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4645, %r4336, %r4642;
	// end inline asm
	// begin inline asm
	mov.b32 %r4648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4649, %r4636, %r4648;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4652, %r4344, %r4649;
	// end inline asm
	// begin inline asm
	mov.b32 %r4655, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4656, %r4636, %r4655;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4659, %r4352, %r4656;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4662, %r4638, %r4652, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4666, %r4645, %r4659, %r4419;
	// end inline asm
	shl.b32 	%r4673, %r4666, 4;
	// begin inline asm
	lop3.b32 %r4670, %r4425, %r4662, %r4673, 202;
	// end inline asm
	xor.b32  	%r16223, %r4670, -2004318072;
	// begin inline asm
	mov.b32 %r4677, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4675, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4676, %r4677, %r4675;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4679, %r4360, %r4676;
	// end inline asm
	// begin inline asm
	mov.b32 %r4682, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4683, %r4677, %r4682;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4686, %r4368, %r4683;
	// end inline asm
	// begin inline asm
	mov.b32 %r4689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4690, %r4677, %r4689;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4693, %r4376, %r4690;
	// end inline asm
	// begin inline asm
	mov.b32 %r4696, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4697, %r4677, %r4696;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4700, %r4384, %r4697;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4703, %r4679, %r4693, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4707, %r4686, %r4700, %r4419;
	// end inline asm
	shl.b32 	%r4714, %r4707, 4;
	// begin inline asm
	lop3.b32 %r4711, %r4425, %r4703, %r4714, 202;
	// end inline asm
	xor.b32  	%r16224, %r4711, -2004318072;
	add.s32 	%r16225, %r130, %r16163;
	mul.wide.u32 	%rd106, %r16225, 4;
	add.s64 	%rd107, %rd50, %rd106;
	st.shared.u32 	[%rd107], %r16217;
	add.s32 	%r16226, %r131, %r16163;
	mul.wide.u32 	%rd108, %r16226, 4;
	add.s64 	%rd109, %rd50, %rd108;
	st.shared.u32 	[%rd109], %r16218;
	add.s32 	%r16227, %r132, %r16163;
	mul.wide.u32 	%rd110, %r16227, 4;
	add.s64 	%rd111, %rd50, %rd110;
	st.shared.u32 	[%rd111], %r16219;
	add.s32 	%r16228, %r133, %r16163;
	mul.wide.u32 	%rd112, %r16228, 4;
	add.s64 	%rd113, %rd50, %rd112;
	st.shared.u32 	[%rd113], %r16220;
	add.s32 	%r16229, %r134, %r16163;
	mul.wide.u32 	%rd114, %r16229, 4;
	add.s64 	%rd115, %rd50, %rd114;
	st.shared.u32 	[%rd115], %r16221;
	add.s32 	%r16230, %r135, %r16163;
	mul.wide.u32 	%rd116, %r16230, 4;
	add.s64 	%rd117, %rd50, %rd116;
	st.shared.u32 	[%rd117], %r16222;
	add.s32 	%r16231, %r136, %r16163;
	mul.wide.u32 	%rd118, %r16231, 4;
	add.s64 	%rd119, %rd50, %rd118;
	st.shared.u32 	[%rd119], %r16223;
	add.s32 	%r16232, %r137, %r16163;
	mul.wide.u32 	%rd120, %r16232, 4;
	add.s64 	%rd121, %rd50, %rd120;
	st.shared.u32 	[%rd121], %r16224;
	ld.shared.u32 	%r16376, [%rd91];
	ld.shared.u32 	%r16377, [%rd93];
	ld.shared.u32 	%r16378, [%rd95];
	ld.shared.u32 	%r16379, [%rd97];
	ld.shared.u32 	%r16388, [%rd99];
	ld.shared.u32 	%r16389, [%rd101];
	ld.shared.u32 	%r16390, [%rd103];
	ld.shared.u32 	%r16391, [%rd105];
	// begin inline asm
	mov.b32 %r4720, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4731, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4719, %r16376, -2004318072;
	// begin inline asm
	lop3.b32 %r4717, %r902, %r4719, %r4720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4721, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4722, %r4720, %r4721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4725, %r4717, %r4722;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4728, %r913, %r4719, %r4731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4732, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4733, %r4731, %r4732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4736, %r4728, %r4733;
	// end inline asm
	shr.u32 	%r4741, %r4719, 8;
	// begin inline asm
	lop3.b32 %r4739, %r902, %r4741, %r4720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4743, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4744, %r4720, %r4743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4747, %r4739, %r4744;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4750, %r913, %r4741, %r4731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4754, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4755, %r4731, %r4754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4758, %r4750, %r4755;
	// end inline asm
	// begin inline asm
	mov.b32 %r4766, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4777, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4765, %r16377, -2004318072;
	// begin inline asm
	lop3.b32 %r4763, %r902, %r4765, %r4766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4767, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4768, %r4766, %r4767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4771, %r4763, %r4768;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4774, %r913, %r4765, %r4777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4778, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4779, %r4777, %r4778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4782, %r4774, %r4779;
	// end inline asm
	shr.u32 	%r4787, %r4765, 8;
	// begin inline asm
	lop3.b32 %r4785, %r902, %r4787, %r4766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4789, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4790, %r4766, %r4789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4793, %r4785, %r4790;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4796, %r913, %r4787, %r4777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4800, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4801, %r4777, %r4800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4804, %r4796, %r4801;
	// end inline asm
	// begin inline asm
	mov.b32 %r4812, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4823, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4811, %r16378, -2004318072;
	// begin inline asm
	lop3.b32 %r4809, %r902, %r4811, %r4812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4813, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4814, %r4812, %r4813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4817, %r4809, %r4814;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4820, %r913, %r4811, %r4823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4824, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4825, %r4823, %r4824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4828, %r4820, %r4825;
	// end inline asm
	shr.u32 	%r4833, %r4811, 8;
	// begin inline asm
	lop3.b32 %r4831, %r902, %r4833, %r4812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4835, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4836, %r4812, %r4835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4839, %r4831, %r4836;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4842, %r913, %r4833, %r4823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4846, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4847, %r4823, %r4846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4850, %r4842, %r4847;
	// end inline asm
	// begin inline asm
	mov.b32 %r4858, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4869, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4857, %r16379, -2004318072;
	// begin inline asm
	lop3.b32 %r4855, %r902, %r4857, %r4858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4859, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4860, %r4858, %r4859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4863, %r4855, %r4860;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4866, %r913, %r4857, %r4869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4870, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4871, %r4869, %r4870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4874, %r4866, %r4871;
	// end inline asm
	shr.u32 	%r4879, %r4857, 8;
	// begin inline asm
	lop3.b32 %r4877, %r902, %r4879, %r4858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4881, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4882, %r4858, %r4881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4885, %r4877, %r4882;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4888, %r913, %r4879, %r4869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4892, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4893, %r4869, %r4892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4896, %r4888, %r4893;
	// end inline asm
	// begin inline asm
	mov.b32 %r4904, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4915, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4903, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r4901, %r902, %r4903, %r4904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4905, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4906, %r4904, %r4905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4909, %r4901, %r4906;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4912, %r913, %r4903, %r4915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4916, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4917, %r4915, %r4916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4920, %r4912, %r4917;
	// end inline asm
	shr.u32 	%r4925, %r4903, 8;
	// begin inline asm
	lop3.b32 %r4923, %r902, %r4925, %r4904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4927, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4928, %r4904, %r4927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4931, %r4923, %r4928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4934, %r913, %r4925, %r4915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4938, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4939, %r4915, %r4938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4942, %r4934, %r4939;
	// end inline asm
	// begin inline asm
	mov.b32 %r4950, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4961, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4949, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r4947, %r902, %r4949, %r4950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4952, %r4950, %r4951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4955, %r4947, %r4952;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4958, %r913, %r4949, %r4961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4963, %r4961, %r4962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4966, %r4958, %r4963;
	// end inline asm
	shr.u32 	%r4971, %r4949, 8;
	// begin inline asm
	lop3.b32 %r4969, %r902, %r4971, %r4950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4973, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4974, %r4950, %r4973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4977, %r4969, %r4974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4980, %r913, %r4971, %r4961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4984, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4985, %r4961, %r4984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4988, %r4980, %r4985;
	// end inline asm
	// begin inline asm
	mov.b32 %r4996, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5007, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4995, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r4993, %r902, %r4995, %r4996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4998, %r4996, %r4997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5001, %r4993, %r4998;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5004, %r913, %r4995, %r5007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5008, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5009, %r5007, %r5008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5012, %r5004, %r5009;
	// end inline asm
	shr.u32 	%r5017, %r4995, 8;
	// begin inline asm
	lop3.b32 %r5015, %r902, %r5017, %r4996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5020, %r4996, %r5019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5023, %r5015, %r5020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5026, %r913, %r5017, %r5007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5030, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5031, %r5007, %r5030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5034, %r5026, %r5031;
	// end inline asm
	// begin inline asm
	mov.b32 %r5042, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5053, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r5041, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r5039, %r902, %r5041, %r5042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5044, %r5042, %r5043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5047, %r5039, %r5044;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5050, %r913, %r5041, %r5053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5055, %r5053, %r5054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5058, %r5050, %r5055;
	// end inline asm
	shr.u32 	%r5063, %r5041, 8;
	// begin inline asm
	lop3.b32 %r5061, %r902, %r5063, %r5042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5066, %r5042, %r5065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5069, %r5061, %r5066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5072, %r913, %r5063, %r5053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5077, %r5053, %r5076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5080, %r5072, %r5077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5083, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5085, %r5083, %r4725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5088, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5090, %r5088, %r4736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5093, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5095, %r5093, %r4747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5098, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5100, %r5098, %r4758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5103, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5105, %r5103, %r4771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5108, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5110, %r5108, %r4782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5113, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5115, %r5113, %r4793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5118, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5120, %r5118, %r4804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5123, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5125, %r5123, %r4817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5128, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5130, %r5128, %r4828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5133, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5135, %r5133, %r4839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5138, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5140, %r5138, %r4850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5143, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5145, %r5143, %r4863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5148, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5150, %r5148, %r4874;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5153, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5155, %r5153, %r4885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5158, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5160, %r5158, %r4896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5163, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5165, %r5163, %r4909;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5168, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5170, %r5168, %r4920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5173, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5175, %r5173, %r4931;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5178, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5180, %r5178, %r4942;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5183, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5185, %r5183, %r4955;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5188, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5190, %r5188, %r4966;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5193, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5195, %r5193, %r4977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5198, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5200, %r5198, %r4988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5203, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5205, %r5203, %r5001;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5208, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5210, %r5208, %r5012;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5213, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5215, %r5213, %r5023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5218, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5220, %r5218, %r5034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5223, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5225, %r5223, %r5047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5228, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5230, %r5228, %r5058;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5233, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5235, %r5233, %r5069;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5238, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5240, %r5238, %r5080;
	// end inline asm
	// begin inline asm
	mov.b32 %r5248, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5259, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5245, %r902, %r1927, %r5248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5250, %r5248, %r5249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5253, %r5245, %r5250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5256, %r913, %r1927, %r5259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5260, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5261, %r5259, %r5260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5264, %r5256, %r5261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5267, %r902, %r1949, %r5248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5272, %r5248, %r5271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5275, %r5267, %r5272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5278, %r913, %r1949, %r5259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5282, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5283, %r5259, %r5282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5286, %r5278, %r5283;
	// end inline asm
	// begin inline asm
	mov.b32 %r5294, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5305, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5291, %r902, %r1973, %r5294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5296, %r5294, %r5295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5299, %r5291, %r5296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5302, %r913, %r1973, %r5305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5307, %r5305, %r5306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5310, %r5302, %r5307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5313, %r902, %r1995, %r5294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5317, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5318, %r5294, %r5317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5321, %r5313, %r5318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5324, %r913, %r1995, %r5305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5328, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5329, %r5305, %r5328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5332, %r5324, %r5329;
	// end inline asm
	// begin inline asm
	mov.b32 %r5340, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5351, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5337, %r902, %r2019, %r5340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5342, %r5340, %r5341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5345, %r5337, %r5342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5348, %r913, %r2019, %r5351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5352, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5353, %r5351, %r5352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5356, %r5348, %r5353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5359, %r902, %r2041, %r5340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5364, %r5340, %r5363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5367, %r5359, %r5364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5370, %r913, %r2041, %r5351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5374, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5375, %r5351, %r5374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5378, %r5370, %r5375;
	// end inline asm
	// begin inline asm
	mov.b32 %r5386, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5397, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5383, %r902, %r2065, %r5386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5388, %r5386, %r5387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5391, %r5383, %r5388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5394, %r913, %r2065, %r5397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5399, %r5397, %r5398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5402, %r5394, %r5399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5405, %r902, %r2087, %r5386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5410, %r5386, %r5409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5413, %r5405, %r5410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5416, %r913, %r2087, %r5397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5420, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5421, %r5397, %r5420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5424, %r5416, %r5421;
	// end inline asm
	// begin inline asm
	mov.b32 %r5432, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5443, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5429, %r902, %r2111, %r5432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5434, %r5432, %r5433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5437, %r5429, %r5434;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5440, %r913, %r2111, %r5443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5445, %r5443, %r5444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5448, %r5440, %r5445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5451, %r902, %r2133, %r5432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5456, %r5432, %r5455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5459, %r5451, %r5456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5462, %r913, %r2133, %r5443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5466, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5467, %r5443, %r5466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5470, %r5462, %r5467;
	// end inline asm
	// begin inline asm
	mov.b32 %r5478, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5489, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5475, %r902, %r2157, %r5478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5480, %r5478, %r5479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5483, %r5475, %r5480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5486, %r913, %r2157, %r5489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5491, %r5489, %r5490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5494, %r5486, %r5491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5497, %r902, %r2179, %r5478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5502, %r5478, %r5501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5505, %r5497, %r5502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5508, %r913, %r2179, %r5489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5512, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5513, %r5489, %r5512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5516, %r5508, %r5513;
	// end inline asm
	// begin inline asm
	mov.b32 %r5524, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5535, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5521, %r902, %r2203, %r5524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5526, %r5524, %r5525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5529, %r5521, %r5526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5532, %r913, %r2203, %r5535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5537, %r5535, %r5536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5540, %r5532, %r5537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5543, %r902, %r2225, %r5524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5548, %r5524, %r5547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5551, %r5543, %r5548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5554, %r913, %r2225, %r5535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5559, %r5535, %r5558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5562, %r5554, %r5559;
	// end inline asm
	// begin inline asm
	mov.b32 %r5570, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5581, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5567, %r902, %r2249, %r5570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5572, %r5570, %r5571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5575, %r5567, %r5572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5578, %r913, %r2249, %r5581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5583, %r5581, %r5582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5586, %r5578, %r5583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5589, %r902, %r2271, %r5570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5594, %r5570, %r5593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5597, %r5589, %r5594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5600, %r913, %r2271, %r5581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5604, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5605, %r5581, %r5604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5608, %r5600, %r5605;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5611, %r305, %r5253, %r5085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5615, %r305, %r5264, %r5090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5619, %r305, %r5275, %r5095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5623, %r305, %r5286, %r5100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5627, %r305, %r5299, %r5105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5631, %r305, %r5310, %r5110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5635, %r305, %r5321, %r5115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5639, %r305, %r5332, %r5120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5643, %r305, %r5345, %r5125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5647, %r305, %r5356, %r5130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5651, %r305, %r5367, %r5135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5655, %r305, %r5378, %r5140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5659, %r305, %r5391, %r5145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5663, %r305, %r5402, %r5150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5667, %r305, %r5413, %r5155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5671, %r305, %r5424, %r5160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5675, %r323, %r5437, %r5165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5679, %r323, %r5448, %r5170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5683, %r323, %r5459, %r5175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5687, %r323, %r5470, %r5180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5691, %r323, %r5483, %r5185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5695, %r323, %r5494, %r5190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5699, %r323, %r5505, %r5195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5703, %r323, %r5516, %r5200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5707, %r323, %r5529, %r5205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5711, %r323, %r5540, %r5210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5715, %r323, %r5551, %r5215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5719, %r323, %r5562, %r5220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5723, %r323, %r5575, %r5225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5727, %r323, %r5586, %r5230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5731, %r323, %r5597, %r5235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5735, %r323, %r5608, %r5240;
	// end inline asm
	// begin inline asm
	mov.b32 %r5744, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5755, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5741, %r902, %r2487, %r5744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5745, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5746, %r5744, %r5745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5749, %r5741, %r5746;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5752, %r913, %r2487, %r5755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5756, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5757, %r5755, %r5756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5760, %r5752, %r5757;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5763, %r902, %r2509, %r5744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5767, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5768, %r5744, %r5767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5771, %r5763, %r5768;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5774, %r913, %r2509, %r5755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5778, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5779, %r5755, %r5778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5782, %r5774, %r5779;
	// end inline asm
	// begin inline asm
	mov.b32 %r5790, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5801, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5787, %r902, %r2533, %r5790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5791, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5792, %r5790, %r5791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5795, %r5787, %r5792;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5798, %r913, %r2533, %r5801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5802, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5803, %r5801, %r5802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5806, %r5798, %r5803;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5809, %r902, %r2555, %r5790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5813, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5814, %r5790, %r5813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5817, %r5809, %r5814;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5820, %r913, %r2555, %r5801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5824, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5825, %r5801, %r5824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5828, %r5820, %r5825;
	// end inline asm
	// begin inline asm
	mov.b32 %r5836, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5847, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5833, %r902, %r2579, %r5836, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5837, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5838, %r5836, %r5837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5841, %r5833, %r5838;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5844, %r913, %r2579, %r5847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5848, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5849, %r5847, %r5848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5852, %r5844, %r5849;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5855, %r902, %r2601, %r5836, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5859, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5860, %r5836, %r5859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5863, %r5855, %r5860;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5866, %r913, %r2601, %r5847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5870, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5871, %r5847, %r5870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5874, %r5866, %r5871;
	// end inline asm
	// begin inline asm
	mov.b32 %r5882, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5893, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5879, %r902, %r2625, %r5882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5883, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5884, %r5882, %r5883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5887, %r5879, %r5884;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5890, %r913, %r2625, %r5893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5894, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5895, %r5893, %r5894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5898, %r5890, %r5895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5901, %r902, %r2647, %r5882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5905, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5906, %r5882, %r5905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5909, %r5901, %r5906;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5912, %r913, %r2647, %r5893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5916, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5917, %r5893, %r5916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5920, %r5912, %r5917;
	// end inline asm
	// begin inline asm
	mov.b32 %r5928, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5939, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5925, %r902, %r2671, %r5928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5929, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5930, %r5928, %r5929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5933, %r5925, %r5930;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5936, %r913, %r2671, %r5939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5940, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5941, %r5939, %r5940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5944, %r5936, %r5941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5947, %r902, %r2693, %r5928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5952, %r5928, %r5951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5955, %r5947, %r5952;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5958, %r913, %r2693, %r5939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5963, %r5939, %r5962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5966, %r5958, %r5963;
	// end inline asm
	// begin inline asm
	mov.b32 %r5974, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5985, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5971, %r902, %r2717, %r5974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5975, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5976, %r5974, %r5975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5979, %r5971, %r5976;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5982, %r913, %r2717, %r5985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5986, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5987, %r5985, %r5986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5990, %r5982, %r5987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5993, %r902, %r2739, %r5974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5998, %r5974, %r5997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6001, %r5993, %r5998;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6004, %r913, %r2739, %r5985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6008, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6009, %r5985, %r6008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6012, %r6004, %r6009;
	// end inline asm
	// begin inline asm
	mov.b32 %r6020, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6031, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6017, %r902, %r2763, %r6020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6022, %r6020, %r6021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6025, %r6017, %r6022;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6028, %r913, %r2763, %r6031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6032, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6033, %r6031, %r6032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6036, %r6028, %r6033;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6039, %r902, %r2785, %r6020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6044, %r6020, %r6043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6047, %r6039, %r6044;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6050, %r913, %r2785, %r6031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6055, %r6031, %r6054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6058, %r6050, %r6055;
	// end inline asm
	// begin inline asm
	mov.b32 %r6066, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6077, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6063, %r902, %r2809, %r6066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6068, %r6066, %r6067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6071, %r6063, %r6068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6074, %r913, %r2809, %r6077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6078, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6079, %r6077, %r6078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6082, %r6074, %r6079;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6085, %r902, %r2831, %r6066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6090, %r6066, %r6089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6093, %r6085, %r6090;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6096, %r913, %r2831, %r6077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6101, %r6077, %r6100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6104, %r6096, %r6101;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6107, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6109, %r6107, %r5749, %r5611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6113, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6115, %r6113, %r5760, %r5615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6119, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6121, %r6119, %r5771, %r5619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6125, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6127, %r6125, %r5782, %r5623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6131, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6133, %r6131, %r5795, %r5627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6137, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6139, %r6137, %r5806, %r5631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6143, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6145, %r6143, %r5817, %r5635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6149, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6151, %r6149, %r5828, %r5639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6155, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6157, %r6155, %r5841, %r5643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6161, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6163, %r6161, %r5852, %r5647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6167, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6169, %r6167, %r5863, %r5651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6173, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6175, %r6173, %r5874, %r5655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6179, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6181, %r6179, %r5887, %r5659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6185, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6187, %r6185, %r5898, %r5663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6191, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6193, %r6191, %r5909, %r5667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6197, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6199, %r6197, %r5920, %r5671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6203, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6205, %r6203, %r5933, %r5675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6209, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6211, %r6209, %r5944, %r5679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6215, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6217, %r6215, %r5955, %r5683;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6221, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6223, %r6221, %r5966, %r5687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6227, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6229, %r6227, %r5979, %r5691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6233, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6235, %r6233, %r5990, %r5695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6239, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6241, %r6239, %r6001, %r5699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6245, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6247, %r6245, %r6012, %r5703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6251, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6253, %r6251, %r6025, %r5707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6257, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6259, %r6257, %r6036, %r5711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6263, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6265, %r6263, %r6047, %r5715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6269, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6271, %r6269, %r6058, %r5719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6275, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6277, %r6275, %r6071, %r5723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6281, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6283, %r6281, %r6082, %r5727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6287, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6289, %r6287, %r6093, %r5731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6293, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6295, %r6293, %r6104, %r5735;
	// end inline asm
	// begin inline asm
	mov.b32 %r6304, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6315, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6301, %r902, %r903, %r6304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6306, %r6304, %r6305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6309, %r6301, %r6306;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6312, %r913, %r903, %r6315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6316, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6317, %r6315, %r6316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6320, %r6312, %r6317;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6323, %r902, %r925, %r6304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6327, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6328, %r6304, %r6327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6331, %r6323, %r6328;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6334, %r913, %r925, %r6315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6338, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6339, %r6315, %r6338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6342, %r6334, %r6339;
	// end inline asm
	// begin inline asm
	mov.b32 %r6350, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6361, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6347, %r902, %r949, %r6350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6352, %r6350, %r6351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6355, %r6347, %r6352;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6358, %r913, %r949, %r6361, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6362, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6363, %r6361, %r6362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6366, %r6358, %r6363;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6369, %r902, %r971, %r6350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6374, %r6350, %r6373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6377, %r6369, %r6374;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6380, %r913, %r971, %r6361, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6384, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6385, %r6361, %r6384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6388, %r6380, %r6385;
	// end inline asm
	// begin inline asm
	mov.b32 %r6396, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6407, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6393, %r902, %r995, %r6396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6398, %r6396, %r6397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6401, %r6393, %r6398;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6404, %r913, %r995, %r6407, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6409, %r6407, %r6408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6412, %r6404, %r6409;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6415, %r902, %r1017, %r6396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6420, %r6396, %r6419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6423, %r6415, %r6420;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6426, %r913, %r1017, %r6407, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6430, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6431, %r6407, %r6430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6434, %r6426, %r6431;
	// end inline asm
	// begin inline asm
	mov.b32 %r6442, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6453, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6439, %r902, %r1041, %r6442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6443, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6444, %r6442, %r6443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6447, %r6439, %r6444;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6450, %r913, %r1041, %r6453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6454, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6455, %r6453, %r6454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6458, %r6450, %r6455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6461, %r902, %r1063, %r6442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6466, %r6442, %r6465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6469, %r6461, %r6466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6472, %r913, %r1063, %r6453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6476, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6477, %r6453, %r6476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6480, %r6472, %r6477;
	// end inline asm
	// begin inline asm
	mov.b32 %r6488, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6499, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6485, %r902, %r1087, %r6488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6490, %r6488, %r6489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6493, %r6485, %r6490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6496, %r913, %r1087, %r6499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6501, %r6499, %r6500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6504, %r6496, %r6501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6507, %r902, %r1109, %r6488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6512, %r6488, %r6511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6515, %r6507, %r6512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6518, %r913, %r1109, %r6499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6522, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6523, %r6499, %r6522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6526, %r6518, %r6523;
	// end inline asm
	// begin inline asm
	mov.b32 %r6534, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6545, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6531, %r902, %r1133, %r6534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6536, %r6534, %r6535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6539, %r6531, %r6536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6542, %r913, %r1133, %r6545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6547, %r6545, %r6546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6550, %r6542, %r6547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6553, %r902, %r1155, %r6534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6558, %r6534, %r6557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6561, %r6553, %r6558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6564, %r913, %r1155, %r6545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6568, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6569, %r6545, %r6568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6572, %r6564, %r6569;
	// end inline asm
	// begin inline asm
	mov.b32 %r6580, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6591, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6577, %r902, %r1179, %r6580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6581, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6582, %r6580, %r6581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6585, %r6577, %r6582;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6588, %r913, %r1179, %r6591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6593, %r6591, %r6592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6596, %r6588, %r6593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6599, %r902, %r1201, %r6580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6604, %r6580, %r6603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6607, %r6599, %r6604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6610, %r913, %r1201, %r6591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6614, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6615, %r6591, %r6614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6618, %r6610, %r6615;
	// end inline asm
	// begin inline asm
	mov.b32 %r6626, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6637, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6623, %r902, %r1225, %r6626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6627, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6628, %r6626, %r6627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6631, %r6623, %r6628;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6634, %r913, %r1225, %r6637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6638, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6639, %r6637, %r6638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6642, %r6634, %r6639;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6645, %r902, %r1247, %r6626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6649, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6650, %r6626, %r6649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6653, %r6645, %r6650;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6656, %r913, %r1247, %r6637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6660, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6661, %r6637, %r6660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6664, %r6656, %r6661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6802, %r377, %r6309, %r6109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6799, %r377, %r6320, %r6115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6811, %r377, %r6331, %r6121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6808, %r377, %r6342, %r6127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6820, %r377, %r6355, %r6133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6817, %r377, %r6366, %r6139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6829, %r377, %r6377, %r6145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6826, %r377, %r6388, %r6151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6838, %r377, %r6401, %r6157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6835, %r377, %r6412, %r6163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6847, %r377, %r6423, %r6169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6844, %r377, %r6434, %r6175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6856, %r377, %r6447, %r6181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6853, %r377, %r6458, %r6187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6865, %r377, %r6469, %r6193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6862, %r377, %r6480, %r6199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6874, %r395, %r6493, %r6205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6871, %r395, %r6504, %r6211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6883, %r395, %r6515, %r6217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6880, %r395, %r6526, %r6223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6892, %r395, %r6539, %r6229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6889, %r395, %r6550, %r6235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6901, %r395, %r6561, %r6241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6898, %r395, %r6572, %r6247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6910, %r395, %r6585, %r6253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6907, %r395, %r6596, %r6259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6919, %r395, %r6607, %r6265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6916, %r395, %r6618, %r6271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6928, %r395, %r6631, %r6277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6925, %r395, %r6642, %r6283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6937, %r395, %r6653, %r6289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6934, %r395, %r6664, %r6295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6795, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6797, %r6795, %r6799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6800, %r459, %r6802, %r6797;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6804, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6806, %r6804, %r6808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6809, %r459, %r6811, %r6806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6813, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6815, %r6813, %r6817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6818, %r459, %r6820, %r6815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6822, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6824, %r6822, %r6826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r459, %r6829, %r6824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6831, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6833, %r6831, %r6835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6836, %r459, %r6838, %r6833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6840, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6842, %r6840, %r6844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r459, %r6847, %r6842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6849, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6851, %r6849, %r6853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6854, %r459, %r6856, %r6851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6858, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6860, %r6858, %r6862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6863, %r459, %r6865, %r6860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6867, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6869, %r6867, %r6871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6872, %r462, %r6874, %r6869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6876, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6878, %r6876, %r6880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6881, %r462, %r6883, %r6878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6885, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6887, %r6885, %r6889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6890, %r462, %r6892, %r6887;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6894, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6896, %r6894, %r6898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6899, %r462, %r6901, %r6896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6903, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6905, %r6903, %r6907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6908, %r462, %r6910, %r6905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6912, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6914, %r6912, %r6916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6917, %r462, %r6919, %r6914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6921, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6923, %r6921, %r6925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6926, %r462, %r6928, %r6923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6930, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6932, %r6930, %r6934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6935, %r462, %r6937, %r6932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6939, %r465, %r6802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6942, %r459, %r6799, %r6939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6946, %r465, %r6811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6949, %r459, %r6808, %r6946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6953, %r465, %r6820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6956, %r459, %r6817, %r6953;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6960, %r465, %r6829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6963, %r459, %r6826, %r6960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6967, %r465, %r6838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6970, %r459, %r6835, %r6967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6974, %r465, %r6847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6977, %r459, %r6844, %r6974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6981, %r465, %r6856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6984, %r459, %r6853, %r6981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6988, %r465, %r6865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6991, %r459, %r6862, %r6988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6995, %r468, %r6874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6998, %r462, %r6871, %r6995;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7002, %r468, %r6883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7005, %r462, %r6880, %r7002;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7009, %r468, %r6892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7012, %r462, %r6889, %r7009;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7016, %r468, %r6901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7019, %r462, %r6898, %r7016;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7023, %r468, %r6910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7026, %r462, %r6907, %r7023;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7030, %r468, %r6919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7033, %r462, %r6916, %r7030;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7037, %r468, %r6928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7040, %r462, %r6925, %r7037;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7044, %r468, %r6937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7047, %r462, %r6934, %r7044;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7218, %r7215}, {%r514, %r520, %r517, %r523}, {%r6800, %r6942}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7227, %r7224}, {%r514, %r520, %r517, %r523}, {%r6809, %r6949}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7236, %r7233}, {%r514, %r520, %r517, %r523}, {%r6818, %r6956}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7245, %r7242}, {%r514, %r520, %r517, %r523}, {%r6827, %r6963}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7254, %r7251}, {%r514, %r520, %r517, %r523}, {%r6836, %r6970}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7263, %r7260}, {%r514, %r520, %r517, %r523}, {%r6845, %r6977}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7272, %r7269}, {%r514, %r520, %r517, %r523}, {%r6854, %r6984}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7281, %r7278}, {%r514, %r520, %r517, %r523}, {%r6863, %r6991}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7290, %r7287}, {%r514, %r520, %r517, %r523}, {%r6872, %r6998}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7299, %r7296}, {%r514, %r520, %r517, %r523}, {%r6881, %r7005}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7308, %r7305}, {%r514, %r520, %r517, %r523}, {%r6890, %r7012}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7317, %r7314}, {%r514, %r520, %r517, %r523}, {%r6899, %r7019}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7326, %r7323}, {%r514, %r520, %r517, %r523}, {%r6908, %r7026}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7335, %r7332}, {%r514, %r520, %r517, %r523}, {%r6917, %r7033}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7344, %r7341}, {%r514, %r520, %r517, %r523}, {%r6926, %r7040}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7353, %r7350}, {%r514, %r520, %r517, %r523}, {%r6935, %r7047}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7211, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7213, %r7211, %r7215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7216, %r564, %r7218, %r7213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7220, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7222, %r7220, %r7224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7225, %r564, %r7227, %r7222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7229, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7231, %r7229, %r7233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7234, %r564, %r7236, %r7231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7238, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7240, %r7238, %r7242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7243, %r564, %r7245, %r7240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7247, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7249, %r7247, %r7251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7252, %r564, %r7254, %r7249;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7256, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7258, %r7256, %r7260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7261, %r564, %r7263, %r7258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7265, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7267, %r7265, %r7269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7270, %r564, %r7272, %r7267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7274, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7276, %r7274, %r7278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7279, %r564, %r7281, %r7276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7283, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7285, %r7283, %r7287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7288, %r564, %r7290, %r7285;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7292, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7294, %r7292, %r7296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7297, %r564, %r7299, %r7294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7301, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7303, %r7301, %r7305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7306, %r564, %r7308, %r7303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7310, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7312, %r7310, %r7314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7315, %r564, %r7317, %r7312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7319, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7321, %r7319, %r7323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7324, %r564, %r7326, %r7321;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7328, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7330, %r7328, %r7332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7333, %r564, %r7335, %r7330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7337, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7339, %r7337, %r7341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7342, %r564, %r7344, %r7339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7346, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7348, %r7346, %r7350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7351, %r564, %r7353, %r7348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7355, %r567, %r7218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7358, %r564, %r7215, %r7355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7362, %r567, %r7227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7365, %r564, %r7224, %r7362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7369, %r567, %r7236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7372, %r564, %r7233, %r7369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7376, %r567, %r7245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7379, %r564, %r7242, %r7376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7383, %r567, %r7254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7386, %r564, %r7251, %r7383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7390, %r567, %r7263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7393, %r564, %r7260, %r7390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7397, %r567, %r7272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7400, %r564, %r7269, %r7397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7404, %r567, %r7281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7407, %r564, %r7278, %r7404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7411, %r567, %r7290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7414, %r564, %r7287, %r7411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7418, %r567, %r7299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7421, %r564, %r7296, %r7418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7425, %r567, %r7308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7428, %r564, %r7305, %r7425;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7432, %r567, %r7317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7435, %r564, %r7314, %r7432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7439, %r567, %r7326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7442, %r564, %r7323, %r7439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7446, %r567, %r7335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7449, %r564, %r7332, %r7446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7453, %r567, %r7344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7456, %r564, %r7341, %r7453;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7460, %r567, %r7353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7463, %r564, %r7350, %r7460;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7756, %r7759}, {%r602, %r608, %r605, %r611}, {%r7216, %r7358}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7762, %r7765}, {%r602, %r608, %r605, %r611}, {%r7225, %r7365}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7768, %r7771}, {%r602, %r608, %r605, %r611}, {%r7234, %r7372}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7774, %r7777}, {%r602, %r608, %r605, %r611}, {%r7243, %r7379}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7780, %r7783}, {%r602, %r608, %r605, %r611}, {%r7252, %r7386}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7786, %r7789}, {%r602, %r608, %r605, %r611}, {%r7261, %r7393}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7792, %r7795}, {%r602, %r608, %r605, %r611}, {%r7270, %r7400}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7798, %r7801}, {%r602, %r608, %r605, %r611}, {%r7279, %r7407}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7757, %r7760}, {%r602, %r608, %r605, %r611}, {%r7288, %r7414}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7763, %r7766}, {%r602, %r608, %r605, %r611}, {%r7297, %r7421}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7769, %r7772}, {%r602, %r608, %r605, %r611}, {%r7306, %r7428}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7775, %r7778}, {%r602, %r608, %r605, %r611}, {%r7315, %r7435}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7781, %r7784}, {%r602, %r608, %r605, %r611}, {%r7324, %r7442}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7787, %r7790}, {%r602, %r608, %r605, %r611}, {%r7333, %r7449}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7793, %r7796}, {%r602, %r608, %r605, %r611}, {%r7342, %r7456}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7799, %r7802}, {%r602, %r608, %r605, %r611}, {%r7351, %r7463}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7755, %r7756, %r7757;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7758, %r7759, %r7760;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7761, %r7762, %r7763;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7764, %r7765, %r7766;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7767, %r7768, %r7769;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7770, %r7771, %r7772;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7773, %r7774, %r7775;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7776, %r7777, %r7778;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7779, %r7780, %r7781;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7782, %r7783, %r7784;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7785, %r7786, %r7787;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7788, %r7789, %r7790;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7791, %r7792, %r7793;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7794, %r7795, %r7796;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7797, %r7798, %r7799;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7800, %r7801, %r7802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7803, %r7756, %r7757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7806, %r7759, %r7760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7809, %r7762, %r7763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7812, %r7765, %r7766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7815, %r7768, %r7769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7818, %r7771, %r7772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7821, %r7774, %r7775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7824, %r7777, %r7778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7827, %r7780, %r7781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7830, %r7783, %r7784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7833, %r7786, %r7787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7836, %r7789, %r7790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7839, %r7792, %r7793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7842, %r7795, %r7796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7845, %r7798, %r7799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7848, %r7801, %r7802;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7851, %r183, %r7755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7854, %r183, %r7758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7857, %r183, %r7761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7860, %r183, %r7764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7863, %r183, %r7767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7866, %r183, %r7770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7869, %r183, %r7773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7872, %r183, %r7776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7875, %r183, %r7779;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7878, %r183, %r7782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7881, %r183, %r7785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7884, %r183, %r7788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7887, %r183, %r7791;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7890, %r183, %r7794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7893, %r183, %r7797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7896, %r183, %r7800;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7899, %r184, %r7803;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7902, %r184, %r7806;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7905, %r184, %r7809;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7908, %r184, %r7812;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7911, %r184, %r7815;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7914, %r184, %r7818;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7917, %r184, %r7821;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7920, %r184, %r7824;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7923, %r184, %r7827;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7926, %r184, %r7830;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7929, %r184, %r7833;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7932, %r184, %r7836;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7935, %r184, %r7839;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7938, %r184, %r7842;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7941, %r184, %r7845;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7944, %r184, %r7848;
	// end inline asm
	// begin inline asm
	mov.b32 %r7947, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7948, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7949, %r7851, %r7947;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7952, %r7949, %r7948;
	// end inline asm
	// begin inline asm
	mov.b32 %r7955, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7956, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7957, %r7854, %r7955;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7960, %r7957, %r7956;
	// end inline asm
	// begin inline asm
	mov.b32 %r7963, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7964, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7965, %r7857, %r7963;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7968, %r7965, %r7964;
	// end inline asm
	// begin inline asm
	mov.b32 %r7971, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7972, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7973, %r7860, %r7971;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7976, %r7973, %r7972;
	// end inline asm
	// begin inline asm
	mov.b32 %r7979, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7980, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7981, %r7863, %r7979;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7984, %r7981, %r7980;
	// end inline asm
	// begin inline asm
	mov.b32 %r7987, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7988, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7989, %r7866, %r7987;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7992, %r7989, %r7988;
	// end inline asm
	// begin inline asm
	mov.b32 %r7995, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7996, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7997, %r7869, %r7995;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8000, %r7997, %r7996;
	// end inline asm
	// begin inline asm
	mov.b32 %r8003, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8004, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8005, %r7872, %r8003;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8008, %r8005, %r8004;
	// end inline asm
	// begin inline asm
	mov.b32 %r8011, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8012, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8013, %r7875, %r8011;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8016, %r8013, %r8012;
	// end inline asm
	// begin inline asm
	mov.b32 %r8019, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8020, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8021, %r7878, %r8019;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8024, %r8021, %r8020;
	// end inline asm
	// begin inline asm
	mov.b32 %r8027, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8028, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8029, %r7881, %r8027;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8032, %r8029, %r8028;
	// end inline asm
	// begin inline asm
	mov.b32 %r8035, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8036, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8037, %r7884, %r8035;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8040, %r8037, %r8036;
	// end inline asm
	// begin inline asm
	mov.b32 %r8043, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8044, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8045, %r7887, %r8043;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8048, %r8045, %r8044;
	// end inline asm
	// begin inline asm
	mov.b32 %r8051, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8052, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8053, %r7890, %r8051;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8056, %r8053, %r8052;
	// end inline asm
	// begin inline asm
	mov.b32 %r8059, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8060, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8061, %r7893, %r8059;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8064, %r8061, %r8060;
	// end inline asm
	// begin inline asm
	mov.b32 %r8067, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8068, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8069, %r7896, %r8067;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8072, %r8069, %r8068;
	// end inline asm
	// begin inline asm
	mov.b32 %r8075, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8076, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8077, %r7899, %r8075;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8080, %r8077, %r8076;
	// end inline asm
	// begin inline asm
	mov.b32 %r8083, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8084, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8085, %r7902, %r8083;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8088, %r8085, %r8084;
	// end inline asm
	// begin inline asm
	mov.b32 %r8091, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8092, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8093, %r7905, %r8091;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8096, %r8093, %r8092;
	// end inline asm
	// begin inline asm
	mov.b32 %r8099, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8100, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8101, %r7908, %r8099;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8104, %r8101, %r8100;
	// end inline asm
	// begin inline asm
	mov.b32 %r8107, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8108, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8109, %r7911, %r8107;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8112, %r8109, %r8108;
	// end inline asm
	// begin inline asm
	mov.b32 %r8115, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8116, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8117, %r7914, %r8115;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8120, %r8117, %r8116;
	// end inline asm
	// begin inline asm
	mov.b32 %r8123, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8124, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8125, %r7917, %r8123;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8128, %r8125, %r8124;
	// end inline asm
	// begin inline asm
	mov.b32 %r8131, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8132, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8133, %r7920, %r8131;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8136, %r8133, %r8132;
	// end inline asm
	// begin inline asm
	mov.b32 %r8139, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8140, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8141, %r7923, %r8139;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8144, %r8141, %r8140;
	// end inline asm
	// begin inline asm
	mov.b32 %r8147, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8148, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8149, %r7926, %r8147;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8152, %r8149, %r8148;
	// end inline asm
	// begin inline asm
	mov.b32 %r8155, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8156, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8157, %r7929, %r8155;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8160, %r8157, %r8156;
	// end inline asm
	// begin inline asm
	mov.b32 %r8163, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8164, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8165, %r7932, %r8163;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8168, %r8165, %r8164;
	// end inline asm
	// begin inline asm
	mov.b32 %r8171, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8172, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8173, %r7935, %r8171;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8176, %r8173, %r8172;
	// end inline asm
	// begin inline asm
	mov.b32 %r8179, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8180, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8181, %r7938, %r8179;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8184, %r8181, %r8180;
	// end inline asm
	// begin inline asm
	mov.b32 %r8187, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8188, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8189, %r7941, %r8187;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8192, %r8189, %r8188;
	// end inline asm
	// begin inline asm
	mov.b32 %r8195, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8196, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8197, %r7944, %r8195;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8200, %r8197, %r8196;
	// end inline asm
	// begin inline asm
	mov.b32 %r8206, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8204, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8205, %r8206, %r8204;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8208, %r7952, %r8205;
	// end inline asm
	// begin inline asm
	mov.b32 %r8211, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8212, %r8206, %r8211;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8215, %r7960, %r8212;
	// end inline asm
	// begin inline asm
	mov.b32 %r8218, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8219, %r8206, %r8218;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8222, %r7968, %r8219;
	// end inline asm
	// begin inline asm
	mov.b32 %r8225, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8226, %r8206, %r8225;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8229, %r7976, %r8226;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8232, %r8208, %r8222, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8236, %r8215, %r8229, %r4419;
	// end inline asm
	shl.b32 	%r8243, %r8236, 4;
	// begin inline asm
	lop3.b32 %r8240, %r4425, %r8232, %r8243, 202;
	// end inline asm
	xor.b32  	%r16233, %r8240, -2004318072;
	// begin inline asm
	mov.b32 %r8247, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8245, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8246, %r8247, %r8245;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8249, %r7984, %r8246;
	// end inline asm
	// begin inline asm
	mov.b32 %r8252, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8253, %r8247, %r8252;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8256, %r7992, %r8253;
	// end inline asm
	// begin inline asm
	mov.b32 %r8259, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8260, %r8247, %r8259;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8263, %r8000, %r8260;
	// end inline asm
	// begin inline asm
	mov.b32 %r8266, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8267, %r8247, %r8266;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8270, %r8008, %r8267;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8273, %r8249, %r8263, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8277, %r8256, %r8270, %r4419;
	// end inline asm
	shl.b32 	%r8284, %r8277, 4;
	// begin inline asm
	lop3.b32 %r8281, %r4425, %r8273, %r8284, 202;
	// end inline asm
	xor.b32  	%r16234, %r8281, -2004318072;
	// begin inline asm
	mov.b32 %r8288, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8286, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8287, %r8288, %r8286;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8290, %r8016, %r8287;
	// end inline asm
	// begin inline asm
	mov.b32 %r8293, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8294, %r8288, %r8293;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8297, %r8024, %r8294;
	// end inline asm
	// begin inline asm
	mov.b32 %r8300, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8301, %r8288, %r8300;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8304, %r8032, %r8301;
	// end inline asm
	// begin inline asm
	mov.b32 %r8307, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8308, %r8288, %r8307;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8311, %r8040, %r8308;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8314, %r8290, %r8304, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8318, %r8297, %r8311, %r4419;
	// end inline asm
	shl.b32 	%r8325, %r8318, 4;
	// begin inline asm
	lop3.b32 %r8322, %r4425, %r8314, %r8325, 202;
	// end inline asm
	xor.b32  	%r16235, %r8322, -2004318072;
	// begin inline asm
	mov.b32 %r8329, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8327, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8328, %r8329, %r8327;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8331, %r8048, %r8328;
	// end inline asm
	// begin inline asm
	mov.b32 %r8334, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8335, %r8329, %r8334;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8338, %r8056, %r8335;
	// end inline asm
	// begin inline asm
	mov.b32 %r8341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8342, %r8329, %r8341;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8345, %r8064, %r8342;
	// end inline asm
	// begin inline asm
	mov.b32 %r8348, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8349, %r8329, %r8348;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8352, %r8072, %r8349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8355, %r8331, %r8345, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8359, %r8338, %r8352, %r4419;
	// end inline asm
	shl.b32 	%r8366, %r8359, 4;
	// begin inline asm
	lop3.b32 %r8363, %r4425, %r8355, %r8366, 202;
	// end inline asm
	xor.b32  	%r16236, %r8363, -2004318072;
	// begin inline asm
	mov.b32 %r8370, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8368, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8369, %r8370, %r8368;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8372, %r8080, %r8369;
	// end inline asm
	// begin inline asm
	mov.b32 %r8375, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8376, %r8370, %r8375;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8379, %r8088, %r8376;
	// end inline asm
	// begin inline asm
	mov.b32 %r8382, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8383, %r8370, %r8382;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8386, %r8096, %r8383;
	// end inline asm
	// begin inline asm
	mov.b32 %r8389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8390, %r8370, %r8389;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8393, %r8104, %r8390;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8396, %r8372, %r8386, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8400, %r8379, %r8393, %r4419;
	// end inline asm
	shl.b32 	%r8407, %r8400, 4;
	// begin inline asm
	lop3.b32 %r8404, %r4425, %r8396, %r8407, 202;
	// end inline asm
	xor.b32  	%r16237, %r8404, -2004318072;
	// begin inline asm
	mov.b32 %r8411, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8410, %r8411, %r8409;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8413, %r8112, %r8410;
	// end inline asm
	// begin inline asm
	mov.b32 %r8416, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8417, %r8411, %r8416;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8420, %r8120, %r8417;
	// end inline asm
	// begin inline asm
	mov.b32 %r8423, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8424, %r8411, %r8423;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8427, %r8128, %r8424;
	// end inline asm
	// begin inline asm
	mov.b32 %r8430, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8431, %r8411, %r8430;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8434, %r8136, %r8431;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8437, %r8413, %r8427, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8441, %r8420, %r8434, %r4419;
	// end inline asm
	shl.b32 	%r8448, %r8441, 4;
	// begin inline asm
	lop3.b32 %r8445, %r4425, %r8437, %r8448, 202;
	// end inline asm
	xor.b32  	%r16238, %r8445, -2004318072;
	// begin inline asm
	mov.b32 %r8452, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8450, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8451, %r8452, %r8450;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8454, %r8144, %r8451;
	// end inline asm
	// begin inline asm
	mov.b32 %r8457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8458, %r8452, %r8457;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8461, %r8152, %r8458;
	// end inline asm
	// begin inline asm
	mov.b32 %r8464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8465, %r8452, %r8464;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8468, %r8160, %r8465;
	// end inline asm
	// begin inline asm
	mov.b32 %r8471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8472, %r8452, %r8471;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8475, %r8168, %r8472;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8478, %r8454, %r8468, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8482, %r8461, %r8475, %r4419;
	// end inline asm
	shl.b32 	%r8489, %r8482, 4;
	// begin inline asm
	lop3.b32 %r8486, %r4425, %r8478, %r8489, 202;
	// end inline asm
	xor.b32  	%r16239, %r8486, -2004318072;
	// begin inline asm
	mov.b32 %r8493, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8492, %r8493, %r8491;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8495, %r8176, %r8492;
	// end inline asm
	// begin inline asm
	mov.b32 %r8498, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8499, %r8493, %r8498;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8502, %r8184, %r8499;
	// end inline asm
	// begin inline asm
	mov.b32 %r8505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8506, %r8493, %r8505;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8509, %r8192, %r8506;
	// end inline asm
	// begin inline asm
	mov.b32 %r8512, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8513, %r8493, %r8512;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8516, %r8200, %r8513;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8519, %r8495, %r8509, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8523, %r8502, %r8516, %r4419;
	// end inline asm
	shl.b32 	%r8530, %r8523, 4;
	// begin inline asm
	lop3.b32 %r8527, %r4425, %r8519, %r8530, 202;
	// end inline asm
	xor.b32  	%r16240, %r8527, -2004318072;
	st.shared.u32 	[%rd107], %r16233;
	st.shared.u32 	[%rd109], %r16234;
	st.shared.u32 	[%rd111], %r16235;
	st.shared.u32 	[%rd113], %r16236;
	st.shared.u32 	[%rd115], %r16237;
	st.shared.u32 	[%rd117], %r16238;
	st.shared.u32 	[%rd119], %r16239;
	st.shared.u32 	[%rd121], %r16240;
	ld.shared.u32 	%r16380, [%rd91];
	ld.shared.u32 	%r16381, [%rd93];
	ld.shared.u32 	%r16382, [%rd95];
	ld.shared.u32 	%r16383, [%rd97];
	ld.shared.u32 	%r16392, [%rd99];
	ld.shared.u32 	%r16393, [%rd101];
	ld.shared.u32 	%r16394, [%rd103];
	ld.shared.u32 	%r16395, [%rd105];
	// begin inline asm
	mov.b32 %r8536, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8547, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8535, %r16380, -2004318072;
	// begin inline asm
	lop3.b32 %r8533, %r902, %r8535, %r8536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8538, %r8536, %r8537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8541, %r8533, %r8538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8544, %r913, %r8535, %r8547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8548, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8549, %r8547, %r8548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8552, %r8544, %r8549;
	// end inline asm
	shr.u32 	%r8557, %r8535, 8;
	// begin inline asm
	lop3.b32 %r8555, %r902, %r8557, %r8536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8559, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8560, %r8536, %r8559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8563, %r8555, %r8560;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8566, %r913, %r8557, %r8547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8570, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8571, %r8547, %r8570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8574, %r8566, %r8571;
	// end inline asm
	// begin inline asm
	mov.b32 %r8582, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8593, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8581, %r16381, -2004318072;
	// begin inline asm
	lop3.b32 %r8579, %r902, %r8581, %r8582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8584, %r8582, %r8583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8587, %r8579, %r8584;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8590, %r913, %r8581, %r8593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8594, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8595, %r8593, %r8594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8598, %r8590, %r8595;
	// end inline asm
	shr.u32 	%r8603, %r8581, 8;
	// begin inline asm
	lop3.b32 %r8601, %r902, %r8603, %r8582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8605, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8606, %r8582, %r8605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8609, %r8601, %r8606;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8612, %r913, %r8603, %r8593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8616, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8617, %r8593, %r8616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8620, %r8612, %r8617;
	// end inline asm
	// begin inline asm
	mov.b32 %r8628, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8639, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8627, %r16382, -2004318072;
	// begin inline asm
	lop3.b32 %r8625, %r902, %r8627, %r8628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8630, %r8628, %r8629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8633, %r8625, %r8630;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8636, %r913, %r8627, %r8639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8640, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8641, %r8639, %r8640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8644, %r8636, %r8641;
	// end inline asm
	shr.u32 	%r8649, %r8627, 8;
	// begin inline asm
	lop3.b32 %r8647, %r902, %r8649, %r8628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8651, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8652, %r8628, %r8651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8655, %r8647, %r8652;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8658, %r913, %r8649, %r8639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8662, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8663, %r8639, %r8662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8666, %r8658, %r8663;
	// end inline asm
	// begin inline asm
	mov.b32 %r8674, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8685, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8673, %r16383, -2004318072;
	// begin inline asm
	lop3.b32 %r8671, %r902, %r8673, %r8674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8675, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8676, %r8674, %r8675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8679, %r8671, %r8676;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8682, %r913, %r8673, %r8685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8686, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8687, %r8685, %r8686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8690, %r8682, %r8687;
	// end inline asm
	shr.u32 	%r8695, %r8673, 8;
	// begin inline asm
	lop3.b32 %r8693, %r902, %r8695, %r8674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8697, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8698, %r8674, %r8697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8701, %r8693, %r8698;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8704, %r913, %r8695, %r8685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8708, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8709, %r8685, %r8708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8712, %r8704, %r8709;
	// end inline asm
	// begin inline asm
	mov.b32 %r8720, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8731, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8719, %r16392, -2004318072;
	// begin inline asm
	lop3.b32 %r8717, %r902, %r8719, %r8720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8721, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8722, %r8720, %r8721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8725, %r8717, %r8722;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8728, %r913, %r8719, %r8731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8732, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8733, %r8731, %r8732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8736, %r8728, %r8733;
	// end inline asm
	shr.u32 	%r8741, %r8719, 8;
	// begin inline asm
	lop3.b32 %r8739, %r902, %r8741, %r8720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8743, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8744, %r8720, %r8743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8747, %r8739, %r8744;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8750, %r913, %r8741, %r8731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8754, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8755, %r8731, %r8754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8758, %r8750, %r8755;
	// end inline asm
	// begin inline asm
	mov.b32 %r8766, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8777, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8765, %r16393, -2004318072;
	// begin inline asm
	lop3.b32 %r8763, %r902, %r8765, %r8766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8767, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8768, %r8766, %r8767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8771, %r8763, %r8768;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8774, %r913, %r8765, %r8777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8778, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8779, %r8777, %r8778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8782, %r8774, %r8779;
	// end inline asm
	shr.u32 	%r8787, %r8765, 8;
	// begin inline asm
	lop3.b32 %r8785, %r902, %r8787, %r8766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8789, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8790, %r8766, %r8789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8793, %r8785, %r8790;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8796, %r913, %r8787, %r8777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8800, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8801, %r8777, %r8800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8804, %r8796, %r8801;
	// end inline asm
	// begin inline asm
	mov.b32 %r8812, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8823, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8811, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r8809, %r902, %r8811, %r8812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8813, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8814, %r8812, %r8813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8817, %r8809, %r8814;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8820, %r913, %r8811, %r8823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8824, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8825, %r8823, %r8824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8828, %r8820, %r8825;
	// end inline asm
	shr.u32 	%r8833, %r8811, 8;
	// begin inline asm
	lop3.b32 %r8831, %r902, %r8833, %r8812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8835, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8836, %r8812, %r8835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8839, %r8831, %r8836;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8842, %r913, %r8833, %r8823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8846, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8847, %r8823, %r8846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8850, %r8842, %r8847;
	// end inline asm
	// begin inline asm
	mov.b32 %r8858, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8869, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8857, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r8855, %r902, %r8857, %r8858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8859, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8860, %r8858, %r8859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8863, %r8855, %r8860;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8866, %r913, %r8857, %r8869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8870, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8871, %r8869, %r8870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8874, %r8866, %r8871;
	// end inline asm
	shr.u32 	%r8879, %r8857, 8;
	// begin inline asm
	lop3.b32 %r8877, %r902, %r8879, %r8858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8881, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8882, %r8858, %r8881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8885, %r8877, %r8882;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8888, %r913, %r8879, %r8869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8892, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8893, %r8869, %r8892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8896, %r8888, %r8893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8899, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8901, %r8899, %r8541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8904, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8906, %r8904, %r8552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8909, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8911, %r8909, %r8563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8914, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8916, %r8914, %r8574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8919, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8921, %r8919, %r8587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8924, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8926, %r8924, %r8598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8929, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8931, %r8929, %r8609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8934, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8936, %r8934, %r8620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8939, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8941, %r8939, %r8633;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8944, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8946, %r8944, %r8644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8949, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8951, %r8949, %r8655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8954, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8956, %r8954, %r8666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8959, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8961, %r8959, %r8679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8964, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8966, %r8964, %r8690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8969, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8971, %r8969, %r8701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8974, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8976, %r8974, %r8712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8979, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8981, %r8979, %r8725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8984, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8986, %r8984, %r8736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8989, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8991, %r8989, %r8747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8994, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8996, %r8994, %r8758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8999, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9001, %r8999, %r8771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9004, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9006, %r9004, %r8782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9009, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9011, %r9009, %r8793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9014, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9016, %r9014, %r8804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9019, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9021, %r9019, %r8817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9024, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9026, %r9024, %r8828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9029, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9031, %r9029, %r8839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9034, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9036, %r9034, %r8850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9039, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9041, %r9039, %r8863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9044, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9046, %r9044, %r8874;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9049, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9051, %r9049, %r8885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9054, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9056, %r9054, %r8896;
	// end inline asm
	// begin inline asm
	mov.b32 %r9064, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9075, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9061, %r902, %r2487, %r9064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9066, %r9064, %r9065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9069, %r9061, %r9066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9072, %r913, %r2487, %r9075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9077, %r9075, %r9076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9080, %r9072, %r9077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9083, %r902, %r2509, %r9064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9088, %r9064, %r9087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9091, %r9083, %r9088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9094, %r913, %r2509, %r9075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9098, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9099, %r9075, %r9098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9102, %r9094, %r9099;
	// end inline asm
	// begin inline asm
	mov.b32 %r9110, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9121, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9107, %r902, %r2533, %r9110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9111, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9112, %r9110, %r9111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9115, %r9107, %r9112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9118, %r913, %r2533, %r9121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9123, %r9121, %r9122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9126, %r9118, %r9123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9129, %r902, %r2555, %r9110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9133, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9134, %r9110, %r9133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9137, %r9129, %r9134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9140, %r913, %r2555, %r9121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9144, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9145, %r9121, %r9144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9148, %r9140, %r9145;
	// end inline asm
	// begin inline asm
	mov.b32 %r9156, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9167, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9153, %r902, %r2579, %r9156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9157, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9158, %r9156, %r9157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9161, %r9153, %r9158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9164, %r913, %r2579, %r9167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9168, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9169, %r9167, %r9168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9172, %r9164, %r9169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9175, %r902, %r2601, %r9156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9179, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9180, %r9156, %r9179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9183, %r9175, %r9180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9186, %r913, %r2601, %r9167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9190, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9191, %r9167, %r9190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9194, %r9186, %r9191;
	// end inline asm
	// begin inline asm
	mov.b32 %r9202, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9213, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9199, %r902, %r2625, %r9202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9204, %r9202, %r9203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9207, %r9199, %r9204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9210, %r913, %r2625, %r9213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9214, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9215, %r9213, %r9214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9218, %r9210, %r9215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9221, %r902, %r2647, %r9202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9225, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9226, %r9202, %r9225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9229, %r9221, %r9226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9232, %r913, %r2647, %r9213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9236, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9237, %r9213, %r9236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9240, %r9232, %r9237;
	// end inline asm
	// begin inline asm
	mov.b32 %r9248, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9259, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9245, %r902, %r2671, %r9248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9250, %r9248, %r9249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9253, %r9245, %r9250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9256, %r913, %r2671, %r9259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9260, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9261, %r9259, %r9260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9264, %r9256, %r9261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9267, %r902, %r2693, %r9248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9272, %r9248, %r9271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9275, %r9267, %r9272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9278, %r913, %r2693, %r9259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9282, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9283, %r9259, %r9282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9286, %r9278, %r9283;
	// end inline asm
	// begin inline asm
	mov.b32 %r9294, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9305, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9291, %r902, %r2717, %r9294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9296, %r9294, %r9295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9299, %r9291, %r9296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9302, %r913, %r2717, %r9305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9307, %r9305, %r9306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9310, %r9302, %r9307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9313, %r902, %r2739, %r9294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9317, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9318, %r9294, %r9317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9321, %r9313, %r9318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9324, %r913, %r2739, %r9305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9328, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9329, %r9305, %r9328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9332, %r9324, %r9329;
	// end inline asm
	// begin inline asm
	mov.b32 %r9340, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9351, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9337, %r902, %r2763, %r9340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9342, %r9340, %r9341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9345, %r9337, %r9342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9348, %r913, %r2763, %r9351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9352, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9353, %r9351, %r9352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9356, %r9348, %r9353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9359, %r902, %r2785, %r9340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9364, %r9340, %r9363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9367, %r9359, %r9364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9370, %r913, %r2785, %r9351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9374, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9375, %r9351, %r9374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9378, %r9370, %r9375;
	// end inline asm
	// begin inline asm
	mov.b32 %r9386, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9397, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9383, %r902, %r2809, %r9386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9388, %r9386, %r9387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9391, %r9383, %r9388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9394, %r913, %r2809, %r9397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9399, %r9397, %r9398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9402, %r9394, %r9399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9405, %r902, %r2831, %r9386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9410, %r9386, %r9409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9413, %r9405, %r9410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9416, %r913, %r2831, %r9397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9420, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9421, %r9397, %r9420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9424, %r9416, %r9421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9427, %r305, %r9069, %r8901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9431, %r305, %r9080, %r8906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9435, %r305, %r9091, %r8911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9439, %r305, %r9102, %r8916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9443, %r305, %r9115, %r8921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9447, %r305, %r9126, %r8926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9451, %r305, %r9137, %r8931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9455, %r305, %r9148, %r8936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9459, %r305, %r9161, %r8941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9463, %r305, %r9172, %r8946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9467, %r305, %r9183, %r8951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9471, %r305, %r9194, %r8956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9475, %r305, %r9207, %r8961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9479, %r305, %r9218, %r8966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9483, %r305, %r9229, %r8971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9487, %r305, %r9240, %r8976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9491, %r323, %r9253, %r8981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9495, %r323, %r9264, %r8986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9499, %r323, %r9275, %r8991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9503, %r323, %r9286, %r8996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9507, %r323, %r9299, %r9001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9511, %r323, %r9310, %r9006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9515, %r323, %r9321, %r9011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9519, %r323, %r9332, %r9016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9523, %r323, %r9345, %r9021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9527, %r323, %r9356, %r9026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9531, %r323, %r9367, %r9031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9535, %r323, %r9378, %r9036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9539, %r323, %r9391, %r9041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9543, %r323, %r9402, %r9046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9547, %r323, %r9413, %r9051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9551, %r323, %r9424, %r9056;
	// end inline asm
	// begin inline asm
	mov.b32 %r9560, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9571, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9557, %r902, %r903, %r9560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9561, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9562, %r9560, %r9561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9565, %r9557, %r9562;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9568, %r913, %r903, %r9571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9572, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9573, %r9571, %r9572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9576, %r9568, %r9573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9579, %r902, %r925, %r9560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9584, %r9560, %r9583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9587, %r9579, %r9584;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9590, %r913, %r925, %r9571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9594, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9595, %r9571, %r9594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9598, %r9590, %r9595;
	// end inline asm
	// begin inline asm
	mov.b32 %r9606, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9617, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9603, %r902, %r949, %r9606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9607, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9608, %r9606, %r9607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9611, %r9603, %r9608;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9614, %r913, %r949, %r9617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9618, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9619, %r9617, %r9618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9622, %r9614, %r9619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9625, %r902, %r971, %r9606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9630, %r9606, %r9629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9633, %r9625, %r9630;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9636, %r913, %r971, %r9617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9640, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9641, %r9617, %r9640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9644, %r9636, %r9641;
	// end inline asm
	// begin inline asm
	mov.b32 %r9652, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9663, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9649, %r902, %r995, %r9652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9653, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9654, %r9652, %r9653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9657, %r9649, %r9654;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9660, %r913, %r995, %r9663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9664, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9665, %r9663, %r9664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9668, %r9660, %r9665;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9671, %r902, %r1017, %r9652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9675, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9676, %r9652, %r9675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9679, %r9671, %r9676;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9682, %r913, %r1017, %r9663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9686, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9687, %r9663, %r9686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9690, %r9682, %r9687;
	// end inline asm
	// begin inline asm
	mov.b32 %r9698, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9709, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9695, %r902, %r1041, %r9698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9699, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9700, %r9698, %r9699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9703, %r9695, %r9700;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9706, %r913, %r1041, %r9709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9710, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9711, %r9709, %r9710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9714, %r9706, %r9711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9717, %r902, %r1063, %r9698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9721, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9722, %r9698, %r9721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9725, %r9717, %r9722;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9728, %r913, %r1063, %r9709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9732, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9733, %r9709, %r9732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9736, %r9728, %r9733;
	// end inline asm
	// begin inline asm
	mov.b32 %r9744, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9755, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9741, %r902, %r1087, %r9744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9745, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9746, %r9744, %r9745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9749, %r9741, %r9746;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9752, %r913, %r1087, %r9755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9756, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9757, %r9755, %r9756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9760, %r9752, %r9757;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9763, %r902, %r1109, %r9744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9767, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9768, %r9744, %r9767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9771, %r9763, %r9768;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9774, %r913, %r1109, %r9755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9778, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9779, %r9755, %r9778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9782, %r9774, %r9779;
	// end inline asm
	// begin inline asm
	mov.b32 %r9790, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9801, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9787, %r902, %r1133, %r9790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9791, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9792, %r9790, %r9791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9795, %r9787, %r9792;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9798, %r913, %r1133, %r9801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9802, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9803, %r9801, %r9802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9806, %r9798, %r9803;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9809, %r902, %r1155, %r9790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9813, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9814, %r9790, %r9813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9817, %r9809, %r9814;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9820, %r913, %r1155, %r9801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9824, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9825, %r9801, %r9824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9828, %r9820, %r9825;
	// end inline asm
	// begin inline asm
	mov.b32 %r9836, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9847, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9833, %r902, %r1179, %r9836, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9837, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9838, %r9836, %r9837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9841, %r9833, %r9838;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9844, %r913, %r1179, %r9847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9848, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9849, %r9847, %r9848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9852, %r9844, %r9849;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9855, %r902, %r1201, %r9836, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9859, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9860, %r9836, %r9859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9863, %r9855, %r9860;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9866, %r913, %r1201, %r9847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9870, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9871, %r9847, %r9870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9874, %r9866, %r9871;
	// end inline asm
	// begin inline asm
	mov.b32 %r9882, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9893, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9879, %r902, %r1225, %r9882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9883, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9884, %r9882, %r9883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9887, %r9879, %r9884;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9890, %r913, %r1225, %r9893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9894, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9895, %r9893, %r9894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9898, %r9890, %r9895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9901, %r902, %r1247, %r9882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9905, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9906, %r9882, %r9905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9909, %r9901, %r9906;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9912, %r913, %r1247, %r9893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9916, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9917, %r9893, %r9916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9920, %r9912, %r9917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9923, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9925, %r9923, %r9565, %r9427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9929, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9931, %r9929, %r9576, %r9431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9935, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9937, %r9935, %r9587, %r9435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9941, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9943, %r9941, %r9598, %r9439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9947, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9949, %r9947, %r9611, %r9443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9953, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9955, %r9953, %r9622, %r9447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9959, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9961, %r9959, %r9633, %r9451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9965, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9967, %r9965, %r9644, %r9455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9971, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9973, %r9971, %r9657, %r9459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9977, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9979, %r9977, %r9668, %r9463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9983, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9985, %r9983, %r9679, %r9467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9989, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9991, %r9989, %r9690, %r9471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9995, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9997, %r9995, %r9703, %r9475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10001, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10003, %r10001, %r9714, %r9479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10007, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10009, %r10007, %r9725, %r9483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10013, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10015, %r10013, %r9736, %r9487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10019, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10021, %r10019, %r9749, %r9491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10025, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10027, %r10025, %r9760, %r9495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10031, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10033, %r10031, %r9771, %r9499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10037, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10039, %r10037, %r9782, %r9503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10043, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10045, %r10043, %r9795, %r9507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10049, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10051, %r10049, %r9806, %r9511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10055, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10057, %r10055, %r9817, %r9515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10061, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10063, %r10061, %r9828, %r9519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10067, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10069, %r10067, %r9841, %r9523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10073, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10075, %r10073, %r9852, %r9527;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10079, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10081, %r10079, %r9863, %r9531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10085, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10087, %r10085, %r9874, %r9535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10091, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10093, %r10091, %r9887, %r9539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10097, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10099, %r10097, %r9898, %r9543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10103, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10105, %r10103, %r9909, %r9547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10109, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10111, %r10109, %r9920, %r9551;
	// end inline asm
	// begin inline asm
	mov.b32 %r10120, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10131, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10117, %r902, %r4719, %r10120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10122, %r10120, %r10121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10125, %r10117, %r10122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10128, %r913, %r4719, %r10131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10132, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10133, %r10131, %r10132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10136, %r10128, %r10133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10139, %r902, %r4741, %r10120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10144, %r10120, %r10143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10147, %r10139, %r10144;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10150, %r913, %r4741, %r10131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10154, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10155, %r10131, %r10154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10158, %r10150, %r10155;
	// end inline asm
	// begin inline asm
	mov.b32 %r10166, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10177, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10163, %r902, %r4765, %r10166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10168, %r10166, %r10167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10171, %r10163, %r10168;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10174, %r913, %r4765, %r10177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10178, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10179, %r10177, %r10178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10182, %r10174, %r10179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10185, %r902, %r4787, %r10166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10190, %r10166, %r10189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10193, %r10185, %r10190;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10196, %r913, %r4787, %r10177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10200, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10201, %r10177, %r10200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10204, %r10196, %r10201;
	// end inline asm
	// begin inline asm
	mov.b32 %r10212, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10223, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10209, %r902, %r4811, %r10212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10214, %r10212, %r10213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10217, %r10209, %r10214;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10220, %r913, %r4811, %r10223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10225, %r10223, %r10224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10228, %r10220, %r10225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10231, %r902, %r4833, %r10212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10236, %r10212, %r10235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10239, %r10231, %r10236;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10242, %r913, %r4833, %r10223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10246, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10247, %r10223, %r10246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10250, %r10242, %r10247;
	// end inline asm
	// begin inline asm
	mov.b32 %r10258, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10269, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10255, %r902, %r4857, %r10258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10259, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10260, %r10258, %r10259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10263, %r10255, %r10260;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10266, %r913, %r4857, %r10269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10270, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10271, %r10269, %r10270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10274, %r10266, %r10271;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10277, %r902, %r4879, %r10258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10281, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10282, %r10258, %r10281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10285, %r10277, %r10282;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10288, %r913, %r4879, %r10269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10292, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10293, %r10269, %r10292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10296, %r10288, %r10293;
	// end inline asm
	// begin inline asm
	mov.b32 %r10304, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10315, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10301, %r902, %r4903, %r10304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10306, %r10304, %r10305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10309, %r10301, %r10306;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10312, %r913, %r4903, %r10315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10316, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10317, %r10315, %r10316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10320, %r10312, %r10317;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10323, %r902, %r4925, %r10304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10327, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10328, %r10304, %r10327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10331, %r10323, %r10328;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10334, %r913, %r4925, %r10315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10338, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10339, %r10315, %r10338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10342, %r10334, %r10339;
	// end inline asm
	// begin inline asm
	mov.b32 %r10350, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10361, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10347, %r902, %r4949, %r10350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10352, %r10350, %r10351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10355, %r10347, %r10352;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10358, %r913, %r4949, %r10361, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10362, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10363, %r10361, %r10362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10366, %r10358, %r10363;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10369, %r902, %r4971, %r10350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10374, %r10350, %r10373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10377, %r10369, %r10374;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10380, %r913, %r4971, %r10361, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10384, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10385, %r10361, %r10384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10388, %r10380, %r10385;
	// end inline asm
	// begin inline asm
	mov.b32 %r10396, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10407, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10393, %r902, %r4995, %r10396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10398, %r10396, %r10397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10401, %r10393, %r10398;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10404, %r913, %r4995, %r10407, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10409, %r10407, %r10408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10412, %r10404, %r10409;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10415, %r902, %r5017, %r10396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10420, %r10396, %r10419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10423, %r10415, %r10420;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10426, %r913, %r5017, %r10407, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10430, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10431, %r10407, %r10430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10434, %r10426, %r10431;
	// end inline asm
	// begin inline asm
	mov.b32 %r10442, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10453, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10439, %r902, %r5041, %r10442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10443, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10444, %r10442, %r10443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10447, %r10439, %r10444;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10450, %r913, %r5041, %r10453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10454, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10455, %r10453, %r10454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10458, %r10450, %r10455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10461, %r902, %r5063, %r10442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10466, %r10442, %r10465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10469, %r10461, %r10466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10472, %r913, %r5063, %r10453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10476, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10477, %r10453, %r10476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10480, %r10472, %r10477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10618, %r377, %r10125, %r9925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10615, %r377, %r10136, %r9931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10627, %r377, %r10147, %r9937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10624, %r377, %r10158, %r9943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10636, %r377, %r10171, %r9949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10633, %r377, %r10182, %r9955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10645, %r377, %r10193, %r9961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10642, %r377, %r10204, %r9967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10654, %r377, %r10217, %r9973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10651, %r377, %r10228, %r9979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10663, %r377, %r10239, %r9985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10660, %r377, %r10250, %r9991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10672, %r377, %r10263, %r9997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10669, %r377, %r10274, %r10003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10681, %r377, %r10285, %r10009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10678, %r377, %r10296, %r10015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10690, %r395, %r10309, %r10021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10687, %r395, %r10320, %r10027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10699, %r395, %r10331, %r10033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10696, %r395, %r10342, %r10039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10708, %r395, %r10355, %r10045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10705, %r395, %r10366, %r10051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10717, %r395, %r10377, %r10057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10714, %r395, %r10388, %r10063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10726, %r395, %r10401, %r10069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10723, %r395, %r10412, %r10075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10735, %r395, %r10423, %r10081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10732, %r395, %r10434, %r10087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10744, %r395, %r10447, %r10093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10741, %r395, %r10458, %r10099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10753, %r395, %r10469, %r10105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10750, %r395, %r10480, %r10111;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10611, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10613, %r10611, %r10615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10616, %r459, %r10618, %r10613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10620, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10622, %r10620, %r10624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10625, %r459, %r10627, %r10622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10629, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10631, %r10629, %r10633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10634, %r459, %r10636, %r10631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10638, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10640, %r10638, %r10642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10643, %r459, %r10645, %r10640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10647, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10649, %r10647, %r10651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10652, %r459, %r10654, %r10649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10656, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10658, %r10656, %r10660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10661, %r459, %r10663, %r10658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10665, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10667, %r10665, %r10669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10670, %r459, %r10672, %r10667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10674, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10676, %r10674, %r10678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10679, %r459, %r10681, %r10676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10683, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10685, %r10683, %r10687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10688, %r462, %r10690, %r10685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10692, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10694, %r10692, %r10696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10697, %r462, %r10699, %r10694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10701, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10703, %r10701, %r10705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10706, %r462, %r10708, %r10703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10710, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10712, %r10710, %r10714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10715, %r462, %r10717, %r10712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10719, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10721, %r10719, %r10723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10724, %r462, %r10726, %r10721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10728, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10730, %r10728, %r10732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10733, %r462, %r10735, %r10730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10737, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10739, %r10737, %r10741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10742, %r462, %r10744, %r10739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10746, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10748, %r10746, %r10750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10751, %r462, %r10753, %r10748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10755, %r465, %r10618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10758, %r459, %r10615, %r10755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10762, %r465, %r10627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10765, %r459, %r10624, %r10762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10769, %r465, %r10636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10772, %r459, %r10633, %r10769;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10776, %r465, %r10645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10779, %r459, %r10642, %r10776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10783, %r465, %r10654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10786, %r459, %r10651, %r10783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10790, %r465, %r10663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10793, %r459, %r10660, %r10790;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10797, %r465, %r10672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10800, %r459, %r10669, %r10797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10804, %r465, %r10681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10807, %r459, %r10678, %r10804;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10811, %r468, %r10690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10814, %r462, %r10687, %r10811;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10818, %r468, %r10699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10821, %r462, %r10696, %r10818;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10825, %r468, %r10708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10828, %r462, %r10705, %r10825;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10832, %r468, %r10717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10835, %r462, %r10714, %r10832;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10839, %r468, %r10726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10842, %r462, %r10723, %r10839;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10846, %r468, %r10735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10849, %r462, %r10732, %r10846;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10853, %r468, %r10744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10856, %r462, %r10741, %r10853;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10860, %r468, %r10753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10863, %r462, %r10750, %r10860;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11034, %r11031}, {%r514, %r520, %r517, %r523}, {%r10616, %r10758}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11043, %r11040}, {%r514, %r520, %r517, %r523}, {%r10625, %r10765}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11052, %r11049}, {%r514, %r520, %r517, %r523}, {%r10634, %r10772}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11061, %r11058}, {%r514, %r520, %r517, %r523}, {%r10643, %r10779}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11070, %r11067}, {%r514, %r520, %r517, %r523}, {%r10652, %r10786}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11079, %r11076}, {%r514, %r520, %r517, %r523}, {%r10661, %r10793}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11088, %r11085}, {%r514, %r520, %r517, %r523}, {%r10670, %r10800}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11097, %r11094}, {%r514, %r520, %r517, %r523}, {%r10679, %r10807}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11106, %r11103}, {%r514, %r520, %r517, %r523}, {%r10688, %r10814}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11115, %r11112}, {%r514, %r520, %r517, %r523}, {%r10697, %r10821}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11124, %r11121}, {%r514, %r520, %r517, %r523}, {%r10706, %r10828}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11133, %r11130}, {%r514, %r520, %r517, %r523}, {%r10715, %r10835}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11142, %r11139}, {%r514, %r520, %r517, %r523}, {%r10724, %r10842}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11151, %r11148}, {%r514, %r520, %r517, %r523}, {%r10733, %r10849}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11160, %r11157}, {%r514, %r520, %r517, %r523}, {%r10742, %r10856}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11169, %r11166}, {%r514, %r520, %r517, %r523}, {%r10751, %r10863}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11027, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11029, %r11027, %r11031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11032, %r564, %r11034, %r11029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11036, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11038, %r11036, %r11040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11041, %r564, %r11043, %r11038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11045, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11047, %r11045, %r11049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11050, %r564, %r11052, %r11047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11054, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11056, %r11054, %r11058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11059, %r564, %r11061, %r11056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11063, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11065, %r11063, %r11067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11068, %r564, %r11070, %r11065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11072, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11074, %r11072, %r11076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11077, %r564, %r11079, %r11074;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11081, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11083, %r11081, %r11085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11086, %r564, %r11088, %r11083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11090, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11092, %r11090, %r11094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11095, %r564, %r11097, %r11092;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11099, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11101, %r11099, %r11103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11104, %r564, %r11106, %r11101;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11108, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11110, %r11108, %r11112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11113, %r564, %r11115, %r11110;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11117, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11119, %r11117, %r11121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11122, %r564, %r11124, %r11119;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11126, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11128, %r11126, %r11130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11131, %r564, %r11133, %r11128;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11135, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11137, %r11135, %r11139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11140, %r564, %r11142, %r11137;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11144, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11146, %r11144, %r11148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11149, %r564, %r11151, %r11146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11153, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11155, %r11153, %r11157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11158, %r564, %r11160, %r11155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11162, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11164, %r11162, %r11166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11167, %r564, %r11169, %r11164;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11171, %r567, %r11034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11174, %r564, %r11031, %r11171;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11178, %r567, %r11043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11181, %r564, %r11040, %r11178;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11185, %r567, %r11052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11188, %r564, %r11049, %r11185;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11192, %r567, %r11061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11195, %r564, %r11058, %r11192;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11199, %r567, %r11070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11202, %r564, %r11067, %r11199;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11206, %r567, %r11079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11209, %r564, %r11076, %r11206;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11213, %r567, %r11088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11216, %r564, %r11085, %r11213;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11220, %r567, %r11097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11223, %r564, %r11094, %r11220;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11227, %r567, %r11106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11230, %r564, %r11103, %r11227;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11234, %r567, %r11115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11237, %r564, %r11112, %r11234;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11241, %r567, %r11124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11244, %r564, %r11121, %r11241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11248, %r567, %r11133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11251, %r564, %r11130, %r11248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11255, %r567, %r11142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11258, %r564, %r11139, %r11255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11262, %r567, %r11151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11265, %r564, %r11148, %r11262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11269, %r567, %r11160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11272, %r564, %r11157, %r11269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11276, %r567, %r11169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11279, %r564, %r11166, %r11276;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11572, %r11575}, {%r602, %r608, %r605, %r611}, {%r11032, %r11174}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11578, %r11581}, {%r602, %r608, %r605, %r611}, {%r11041, %r11181}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11584, %r11587}, {%r602, %r608, %r605, %r611}, {%r11050, %r11188}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11590, %r11593}, {%r602, %r608, %r605, %r611}, {%r11059, %r11195}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11596, %r11599}, {%r602, %r608, %r605, %r611}, {%r11068, %r11202}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11602, %r11605}, {%r602, %r608, %r605, %r611}, {%r11077, %r11209}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11608, %r11611}, {%r602, %r608, %r605, %r611}, {%r11086, %r11216}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11614, %r11617}, {%r602, %r608, %r605, %r611}, {%r11095, %r11223}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11573, %r11576}, {%r602, %r608, %r605, %r611}, {%r11104, %r11230}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11579, %r11582}, {%r602, %r608, %r605, %r611}, {%r11113, %r11237}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11585, %r11588}, {%r602, %r608, %r605, %r611}, {%r11122, %r11244}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11591, %r11594}, {%r602, %r608, %r605, %r611}, {%r11131, %r11251}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11597, %r11600}, {%r602, %r608, %r605, %r611}, {%r11140, %r11258}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11603, %r11606}, {%r602, %r608, %r605, %r611}, {%r11149, %r11265}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11609, %r11612}, {%r602, %r608, %r605, %r611}, {%r11158, %r11272}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11615, %r11618}, {%r602, %r608, %r605, %r611}, {%r11167, %r11279}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11571, %r11572, %r11573;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11574, %r11575, %r11576;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11577, %r11578, %r11579;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11580, %r11581, %r11582;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11583, %r11584, %r11585;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11586, %r11587, %r11588;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11589, %r11590, %r11591;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11592, %r11593, %r11594;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11595, %r11596, %r11597;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11598, %r11599, %r11600;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11601, %r11602, %r11603;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11604, %r11605, %r11606;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11607, %r11608, %r11609;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11610, %r11611, %r11612;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11613, %r11614, %r11615;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11616, %r11617, %r11618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11619, %r11572, %r11573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11622, %r11575, %r11576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11625, %r11578, %r11579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11628, %r11581, %r11582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11631, %r11584, %r11585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11634, %r11587, %r11588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11637, %r11590, %r11591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11640, %r11593, %r11594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11643, %r11596, %r11597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11646, %r11599, %r11600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11649, %r11602, %r11603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11652, %r11605, %r11606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11655, %r11608, %r11609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11658, %r11611, %r11612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11661, %r11614, %r11615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11664, %r11617, %r11618;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11667, %r183, %r11571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11670, %r183, %r11574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11673, %r183, %r11577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11676, %r183, %r11580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11679, %r183, %r11583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11682, %r183, %r11586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11685, %r183, %r11589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11688, %r183, %r11592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11691, %r183, %r11595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11694, %r183, %r11598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11697, %r183, %r11601;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11700, %r183, %r11604;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11703, %r183, %r11607;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11706, %r183, %r11610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11709, %r183, %r11613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11712, %r183, %r11616;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11715, %r184, %r11619;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11718, %r184, %r11622;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11721, %r184, %r11625;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11724, %r184, %r11628;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11727, %r184, %r11631;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11730, %r184, %r11634;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11733, %r184, %r11637;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11736, %r184, %r11640;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11739, %r184, %r11643;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11742, %r184, %r11646;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11745, %r184, %r11649;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11748, %r184, %r11652;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11751, %r184, %r11655;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11754, %r184, %r11658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11757, %r184, %r11661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11760, %r184, %r11664;
	// end inline asm
	// begin inline asm
	mov.b32 %r11763, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11764, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11765, %r11667, %r11763;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11768, %r11765, %r11764;
	// end inline asm
	// begin inline asm
	mov.b32 %r11771, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11772, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11773, %r11670, %r11771;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11776, %r11773, %r11772;
	// end inline asm
	// begin inline asm
	mov.b32 %r11779, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11780, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11781, %r11673, %r11779;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11784, %r11781, %r11780;
	// end inline asm
	// begin inline asm
	mov.b32 %r11787, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11788, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11789, %r11676, %r11787;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11792, %r11789, %r11788;
	// end inline asm
	// begin inline asm
	mov.b32 %r11795, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11796, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11797, %r11679, %r11795;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11800, %r11797, %r11796;
	// end inline asm
	// begin inline asm
	mov.b32 %r11803, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11804, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11805, %r11682, %r11803;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11808, %r11805, %r11804;
	// end inline asm
	// begin inline asm
	mov.b32 %r11811, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11812, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11813, %r11685, %r11811;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11816, %r11813, %r11812;
	// end inline asm
	// begin inline asm
	mov.b32 %r11819, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11820, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11821, %r11688, %r11819;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11824, %r11821, %r11820;
	// end inline asm
	// begin inline asm
	mov.b32 %r11827, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11828, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11829, %r11691, %r11827;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11832, %r11829, %r11828;
	// end inline asm
	// begin inline asm
	mov.b32 %r11835, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11836, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11837, %r11694, %r11835;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11840, %r11837, %r11836;
	// end inline asm
	// begin inline asm
	mov.b32 %r11843, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11844, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11845, %r11697, %r11843;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11848, %r11845, %r11844;
	// end inline asm
	// begin inline asm
	mov.b32 %r11851, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11852, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11853, %r11700, %r11851;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11856, %r11853, %r11852;
	// end inline asm
	// begin inline asm
	mov.b32 %r11859, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11860, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11861, %r11703, %r11859;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11864, %r11861, %r11860;
	// end inline asm
	// begin inline asm
	mov.b32 %r11867, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11868, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11869, %r11706, %r11867;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11872, %r11869, %r11868;
	// end inline asm
	// begin inline asm
	mov.b32 %r11875, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11876, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11877, %r11709, %r11875;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11880, %r11877, %r11876;
	// end inline asm
	// begin inline asm
	mov.b32 %r11883, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11884, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11885, %r11712, %r11883;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11888, %r11885, %r11884;
	// end inline asm
	// begin inline asm
	mov.b32 %r11891, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11892, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11893, %r11715, %r11891;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11896, %r11893, %r11892;
	// end inline asm
	// begin inline asm
	mov.b32 %r11899, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11900, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11901, %r11718, %r11899;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11904, %r11901, %r11900;
	// end inline asm
	// begin inline asm
	mov.b32 %r11907, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11908, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11909, %r11721, %r11907;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11912, %r11909, %r11908;
	// end inline asm
	// begin inline asm
	mov.b32 %r11915, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11916, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11917, %r11724, %r11915;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11920, %r11917, %r11916;
	// end inline asm
	// begin inline asm
	mov.b32 %r11923, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11924, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11925, %r11727, %r11923;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11928, %r11925, %r11924;
	// end inline asm
	// begin inline asm
	mov.b32 %r11931, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11932, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11933, %r11730, %r11931;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11936, %r11933, %r11932;
	// end inline asm
	// begin inline asm
	mov.b32 %r11939, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11940, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11941, %r11733, %r11939;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11944, %r11941, %r11940;
	// end inline asm
	// begin inline asm
	mov.b32 %r11947, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11948, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11949, %r11736, %r11947;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11952, %r11949, %r11948;
	// end inline asm
	// begin inline asm
	mov.b32 %r11955, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11956, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11957, %r11739, %r11955;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11960, %r11957, %r11956;
	// end inline asm
	// begin inline asm
	mov.b32 %r11963, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11964, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11965, %r11742, %r11963;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11968, %r11965, %r11964;
	// end inline asm
	// begin inline asm
	mov.b32 %r11971, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11972, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11973, %r11745, %r11971;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11976, %r11973, %r11972;
	// end inline asm
	// begin inline asm
	mov.b32 %r11979, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11980, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11981, %r11748, %r11979;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11984, %r11981, %r11980;
	// end inline asm
	// begin inline asm
	mov.b32 %r11987, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11988, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11989, %r11751, %r11987;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11992, %r11989, %r11988;
	// end inline asm
	// begin inline asm
	mov.b32 %r11995, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11996, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11997, %r11754, %r11995;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12000, %r11997, %r11996;
	// end inline asm
	// begin inline asm
	mov.b32 %r12003, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r12004, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12005, %r11757, %r12003;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12008, %r12005, %r12004;
	// end inline asm
	// begin inline asm
	mov.b32 %r12011, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r12012, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12013, %r11760, %r12011;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12016, %r12013, %r12012;
	// end inline asm
	// begin inline asm
	mov.b32 %r12022, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12021, %r12022, %r12020;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12024, %r11768, %r12021;
	// end inline asm
	// begin inline asm
	mov.b32 %r12027, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12028, %r12022, %r12027;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12031, %r11776, %r12028;
	// end inline asm
	// begin inline asm
	mov.b32 %r12034, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12035, %r12022, %r12034;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12038, %r11784, %r12035;
	// end inline asm
	// begin inline asm
	mov.b32 %r12041, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12042, %r12022, %r12041;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12045, %r11792, %r12042;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12048, %r12024, %r12038, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12052, %r12031, %r12045, %r4419;
	// end inline asm
	shl.b32 	%r12059, %r12052, 4;
	// begin inline asm
	lop3.b32 %r12056, %r4425, %r12048, %r12059, 202;
	// end inline asm
	xor.b32  	%r16241, %r12056, -2004318072;
	// begin inline asm
	mov.b32 %r12063, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12061, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12062, %r12063, %r12061;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12065, %r11800, %r12062;
	// end inline asm
	// begin inline asm
	mov.b32 %r12068, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12069, %r12063, %r12068;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12072, %r11808, %r12069;
	// end inline asm
	// begin inline asm
	mov.b32 %r12075, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12076, %r12063, %r12075;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12079, %r11816, %r12076;
	// end inline asm
	// begin inline asm
	mov.b32 %r12082, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12083, %r12063, %r12082;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12086, %r11824, %r12083;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12089, %r12065, %r12079, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12093, %r12072, %r12086, %r4419;
	// end inline asm
	shl.b32 	%r12100, %r12093, 4;
	// begin inline asm
	lop3.b32 %r12097, %r4425, %r12089, %r12100, 202;
	// end inline asm
	xor.b32  	%r16242, %r12097, -2004318072;
	// begin inline asm
	mov.b32 %r12104, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12102, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12103, %r12104, %r12102;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12106, %r11832, %r12103;
	// end inline asm
	// begin inline asm
	mov.b32 %r12109, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12110, %r12104, %r12109;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12113, %r11840, %r12110;
	// end inline asm
	// begin inline asm
	mov.b32 %r12116, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12117, %r12104, %r12116;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12120, %r11848, %r12117;
	// end inline asm
	// begin inline asm
	mov.b32 %r12123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12124, %r12104, %r12123;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12127, %r11856, %r12124;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12130, %r12106, %r12120, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12134, %r12113, %r12127, %r4419;
	// end inline asm
	shl.b32 	%r12141, %r12134, 4;
	// begin inline asm
	lop3.b32 %r12138, %r4425, %r12130, %r12141, 202;
	// end inline asm
	xor.b32  	%r16243, %r12138, -2004318072;
	// begin inline asm
	mov.b32 %r12145, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12144, %r12145, %r12143;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12147, %r11864, %r12144;
	// end inline asm
	// begin inline asm
	mov.b32 %r12150, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12151, %r12145, %r12150;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12154, %r11872, %r12151;
	// end inline asm
	// begin inline asm
	mov.b32 %r12157, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12158, %r12145, %r12157;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12161, %r11880, %r12158;
	// end inline asm
	// begin inline asm
	mov.b32 %r12164, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12165, %r12145, %r12164;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12168, %r11888, %r12165;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12171, %r12147, %r12161, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12175, %r12154, %r12168, %r4419;
	// end inline asm
	shl.b32 	%r12182, %r12175, 4;
	// begin inline asm
	lop3.b32 %r12179, %r4425, %r12171, %r12182, 202;
	// end inline asm
	xor.b32  	%r16244, %r12179, -2004318072;
	// begin inline asm
	mov.b32 %r12186, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12185, %r12186, %r12184;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12188, %r11896, %r12185;
	// end inline asm
	// begin inline asm
	mov.b32 %r12191, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12192, %r12186, %r12191;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12195, %r11904, %r12192;
	// end inline asm
	// begin inline asm
	mov.b32 %r12198, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12199, %r12186, %r12198;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12202, %r11912, %r12199;
	// end inline asm
	// begin inline asm
	mov.b32 %r12205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12206, %r12186, %r12205;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12209, %r11920, %r12206;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12212, %r12188, %r12202, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12216, %r12195, %r12209, %r4419;
	// end inline asm
	shl.b32 	%r12223, %r12216, 4;
	// begin inline asm
	lop3.b32 %r12220, %r4425, %r12212, %r12223, 202;
	// end inline asm
	xor.b32  	%r16245, %r12220, -2004318072;
	// begin inline asm
	mov.b32 %r12227, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12225, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12226, %r12227, %r12225;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12229, %r11928, %r12226;
	// end inline asm
	// begin inline asm
	mov.b32 %r12232, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12233, %r12227, %r12232;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12236, %r11936, %r12233;
	// end inline asm
	// begin inline asm
	mov.b32 %r12239, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12240, %r12227, %r12239;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12243, %r11944, %r12240;
	// end inline asm
	// begin inline asm
	mov.b32 %r12246, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12247, %r12227, %r12246;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12250, %r11952, %r12247;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12253, %r12229, %r12243, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12257, %r12236, %r12250, %r4419;
	// end inline asm
	shl.b32 	%r12264, %r12257, 4;
	// begin inline asm
	lop3.b32 %r12261, %r4425, %r12253, %r12264, 202;
	// end inline asm
	xor.b32  	%r16246, %r12261, -2004318072;
	// begin inline asm
	mov.b32 %r12268, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12266, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12267, %r12268, %r12266;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12270, %r11960, %r12267;
	// end inline asm
	// begin inline asm
	mov.b32 %r12273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12274, %r12268, %r12273;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12277, %r11968, %r12274;
	// end inline asm
	// begin inline asm
	mov.b32 %r12280, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12281, %r12268, %r12280;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12284, %r11976, %r12281;
	// end inline asm
	// begin inline asm
	mov.b32 %r12287, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12288, %r12268, %r12287;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12291, %r11984, %r12288;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12294, %r12270, %r12284, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12298, %r12277, %r12291, %r4419;
	// end inline asm
	shl.b32 	%r12305, %r12298, 4;
	// begin inline asm
	lop3.b32 %r12302, %r4425, %r12294, %r12305, 202;
	// end inline asm
	xor.b32  	%r16247, %r12302, -2004318072;
	// begin inline asm
	mov.b32 %r12309, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12307, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12308, %r12309, %r12307;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12311, %r11992, %r12308;
	// end inline asm
	// begin inline asm
	mov.b32 %r12314, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12315, %r12309, %r12314;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12318, %r12000, %r12315;
	// end inline asm
	// begin inline asm
	mov.b32 %r12321, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12322, %r12309, %r12321;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12325, %r12008, %r12322;
	// end inline asm
	// begin inline asm
	mov.b32 %r12328, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12329, %r12309, %r12328;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12332, %r12016, %r12329;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12335, %r12311, %r12325, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12339, %r12318, %r12332, %r4419;
	// end inline asm
	shl.b32 	%r12346, %r12339, 4;
	// begin inline asm
	lop3.b32 %r12343, %r4425, %r12335, %r12346, 202;
	// end inline asm
	xor.b32  	%r16248, %r12343, -2004318072;
	st.shared.u32 	[%rd107], %r16241;
	st.shared.u32 	[%rd109], %r16242;
	st.shared.u32 	[%rd111], %r16243;
	st.shared.u32 	[%rd113], %r16244;
	st.shared.u32 	[%rd115], %r16245;
	st.shared.u32 	[%rd117], %r16246;
	st.shared.u32 	[%rd119], %r16247;
	st.shared.u32 	[%rd121], %r16248;
	ld.shared.u32 	%r16384, [%rd91];
	ld.shared.u32 	%r16385, [%rd93];
	ld.shared.u32 	%r16386, [%rd95];
	ld.shared.u32 	%r16387, [%rd97];
	ld.shared.u32 	%r16396, [%rd99];
	ld.shared.u32 	%r16397, [%rd101];
	ld.shared.u32 	%r16398, [%rd103];
	ld.shared.u32 	%r16399, [%rd105];
	// begin inline asm
	mov.b32 %r12352, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12363, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12351, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r12349, %r902, %r12351, %r12352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12354, %r12352, %r12353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12357, %r12349, %r12354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12360, %r913, %r12351, %r12363, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12364, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12365, %r12363, %r12364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12368, %r12360, %r12365;
	// end inline asm
	shr.u32 	%r12373, %r12351, 8;
	// begin inline asm
	lop3.b32 %r12371, %r902, %r12373, %r12352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12375, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12376, %r12352, %r12375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12379, %r12371, %r12376;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12382, %r913, %r12373, %r12363, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12386, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12387, %r12363, %r12386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12390, %r12382, %r12387;
	// end inline asm
	// begin inline asm
	mov.b32 %r12398, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12409, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12397, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r12395, %r902, %r12397, %r12398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12400, %r12398, %r12399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12403, %r12395, %r12400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12406, %r913, %r12397, %r12409, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12411, %r12409, %r12410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12414, %r12406, %r12411;
	// end inline asm
	shr.u32 	%r12419, %r12397, 8;
	// begin inline asm
	lop3.b32 %r12417, %r902, %r12419, %r12398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12421, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12422, %r12398, %r12421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12425, %r12417, %r12422;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12428, %r913, %r12419, %r12409, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12432, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12433, %r12409, %r12432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12436, %r12428, %r12433;
	// end inline asm
	// begin inline asm
	mov.b32 %r12444, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12455, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12443, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r12441, %r902, %r12443, %r12444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12446, %r12444, %r12445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12449, %r12441, %r12446;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12452, %r913, %r12443, %r12455, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12456, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12457, %r12455, %r12456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12460, %r12452, %r12457;
	// end inline asm
	shr.u32 	%r12465, %r12443, 8;
	// begin inline asm
	lop3.b32 %r12463, %r902, %r12465, %r12444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12467, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12468, %r12444, %r12467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12471, %r12463, %r12468;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12474, %r913, %r12465, %r12455, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12478, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12479, %r12455, %r12478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12482, %r12474, %r12479;
	// end inline asm
	// begin inline asm
	mov.b32 %r12490, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12501, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12489, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r12487, %r902, %r12489, %r12490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12492, %r12490, %r12491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12495, %r12487, %r12492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12498, %r913, %r12489, %r12501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12502, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12503, %r12501, %r12502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12506, %r12498, %r12503;
	// end inline asm
	shr.u32 	%r12511, %r12489, 8;
	// begin inline asm
	lop3.b32 %r12509, %r902, %r12511, %r12490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12513, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12514, %r12490, %r12513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12517, %r12509, %r12514;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12520, %r913, %r12511, %r12501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12524, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12525, %r12501, %r12524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12528, %r12520, %r12525;
	// end inline asm
	// begin inline asm
	mov.b32 %r12536, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12547, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12535, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r12533, %r902, %r12535, %r12536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12538, %r12536, %r12537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12541, %r12533, %r12538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12544, %r913, %r12535, %r12547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12548, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12549, %r12547, %r12548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12552, %r12544, %r12549;
	// end inline asm
	shr.u32 	%r12557, %r12535, 8;
	// begin inline asm
	lop3.b32 %r12555, %r902, %r12557, %r12536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12559, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12560, %r12536, %r12559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12563, %r12555, %r12560;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12566, %r913, %r12557, %r12547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12570, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12571, %r12547, %r12570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12574, %r12566, %r12571;
	// end inline asm
	// begin inline asm
	mov.b32 %r12582, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12593, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12581, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r12579, %r902, %r12581, %r12582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12584, %r12582, %r12583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12587, %r12579, %r12584;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12590, %r913, %r12581, %r12593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12594, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12595, %r12593, %r12594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12598, %r12590, %r12595;
	// end inline asm
	shr.u32 	%r12603, %r12581, 8;
	// begin inline asm
	lop3.b32 %r12601, %r902, %r12603, %r12582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12605, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12606, %r12582, %r12605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12609, %r12601, %r12606;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12612, %r913, %r12603, %r12593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12616, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12617, %r12593, %r12616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12620, %r12612, %r12617;
	// end inline asm
	// begin inline asm
	mov.b32 %r12628, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12639, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12627, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r12625, %r902, %r12627, %r12628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12630, %r12628, %r12629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12633, %r12625, %r12630;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12636, %r913, %r12627, %r12639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12640, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12641, %r12639, %r12640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12644, %r12636, %r12641;
	// end inline asm
	shr.u32 	%r12649, %r12627, 8;
	// begin inline asm
	lop3.b32 %r12647, %r902, %r12649, %r12628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12651, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12652, %r12628, %r12651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12655, %r12647, %r12652;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12658, %r913, %r12649, %r12639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12662, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12663, %r12639, %r12662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12666, %r12658, %r12663;
	// end inline asm
	// begin inline asm
	mov.b32 %r12674, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12685, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12673, %r16399, -2004318072;
	// begin inline asm
	lop3.b32 %r12671, %r902, %r12673, %r12674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12675, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12676, %r12674, %r12675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12679, %r12671, %r12676;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12682, %r913, %r12673, %r12685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12686, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12687, %r12685, %r12686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12690, %r12682, %r12687;
	// end inline asm
	shr.u32 	%r12695, %r12673, 8;
	// begin inline asm
	lop3.b32 %r12693, %r902, %r12695, %r12674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12697, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12698, %r12674, %r12697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12701, %r12693, %r12698;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12704, %r913, %r12695, %r12685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12708, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12709, %r12685, %r12708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12712, %r12704, %r12709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12715, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12717, %r12715, %r12357;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12720, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12722, %r12720, %r12368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12725, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12727, %r12725, %r12379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12730, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12732, %r12730, %r12390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12735, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12737, %r12735, %r12403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12740, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12742, %r12740, %r12414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12745, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12747, %r12745, %r12425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12750, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12752, %r12750, %r12436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12755, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12757, %r12755, %r12449;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12760, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12762, %r12760, %r12460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12765, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12767, %r12765, %r12471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12770, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12772, %r12770, %r12482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12775, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12777, %r12775, %r12495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12780, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12782, %r12780, %r12506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12785, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12787, %r12785, %r12517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12790, %r413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12792, %r12790, %r12528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12795, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12797, %r12795, %r12541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12800, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12802, %r12800, %r12552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12805, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12807, %r12805, %r12563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12810, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12812, %r12810, %r12574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12815, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12817, %r12815, %r12587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12820, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12822, %r12820, %r12598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12825, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12827, %r12825, %r12609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12830, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12832, %r12830, %r12620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12835, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12837, %r12835, %r12633;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12840, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12842, %r12840, %r12644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12845, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12847, %r12845, %r12655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12850, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12852, %r12850, %r12666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12855, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12857, %r12855, %r12679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12860, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12862, %r12860, %r12690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12865, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12867, %r12865, %r12701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12870, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12872, %r12870, %r12712;
	// end inline asm
	// begin inline asm
	mov.b32 %r12880, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12891, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12877, %r902, %r903, %r12880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12881, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12882, %r12880, %r12881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12885, %r12877, %r12882;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12888, %r913, %r903, %r12891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12892, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12893, %r12891, %r12892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12896, %r12888, %r12893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12899, %r902, %r925, %r12880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12903, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12904, %r12880, %r12903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12907, %r12899, %r12904;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12910, %r913, %r925, %r12891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12914, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12915, %r12891, %r12914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12918, %r12910, %r12915;
	// end inline asm
	// begin inline asm
	mov.b32 %r12926, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12937, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12923, %r902, %r949, %r12926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12927, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12928, %r12926, %r12927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12931, %r12923, %r12928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12934, %r913, %r949, %r12937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12938, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12939, %r12937, %r12938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12942, %r12934, %r12939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12945, %r902, %r971, %r12926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12949, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12950, %r12926, %r12949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12953, %r12945, %r12950;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12956, %r913, %r971, %r12937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12960, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12961, %r12937, %r12960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12964, %r12956, %r12961;
	// end inline asm
	// begin inline asm
	mov.b32 %r12972, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12983, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12969, %r902, %r995, %r12972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12973, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12974, %r12972, %r12973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12977, %r12969, %r12974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12980, %r913, %r995, %r12983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12984, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12985, %r12983, %r12984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12988, %r12980, %r12985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12991, %r902, %r1017, %r12972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12995, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12996, %r12972, %r12995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12999, %r12991, %r12996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13002, %r913, %r1017, %r12983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13006, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13007, %r12983, %r13006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13010, %r13002, %r13007;
	// end inline asm
	// begin inline asm
	mov.b32 %r13018, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13029, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13015, %r902, %r1041, %r13018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13020, %r13018, %r13019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13023, %r13015, %r13020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13026, %r913, %r1041, %r13029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13030, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13031, %r13029, %r13030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13034, %r13026, %r13031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13037, %r902, %r1063, %r13018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13041, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13042, %r13018, %r13041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13045, %r13037, %r13042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13048, %r913, %r1063, %r13029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13052, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13053, %r13029, %r13052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13056, %r13048, %r13053;
	// end inline asm
	// begin inline asm
	mov.b32 %r13064, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13075, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13061, %r902, %r1087, %r13064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13066, %r13064, %r13065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13069, %r13061, %r13066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13072, %r913, %r1087, %r13075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13077, %r13075, %r13076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13080, %r13072, %r13077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13083, %r902, %r1109, %r13064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13088, %r13064, %r13087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13091, %r13083, %r13088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13094, %r913, %r1109, %r13075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13098, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13099, %r13075, %r13098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13102, %r13094, %r13099;
	// end inline asm
	// begin inline asm
	mov.b32 %r13110, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13121, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13107, %r902, %r1133, %r13110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13111, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13112, %r13110, %r13111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13115, %r13107, %r13112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13118, %r913, %r1133, %r13121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13123, %r13121, %r13122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13126, %r13118, %r13123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13129, %r902, %r1155, %r13110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13133, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13134, %r13110, %r13133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13137, %r13129, %r13134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13140, %r913, %r1155, %r13121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13144, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13145, %r13121, %r13144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13148, %r13140, %r13145;
	// end inline asm
	// begin inline asm
	mov.b32 %r13156, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13167, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13153, %r902, %r1179, %r13156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13157, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13158, %r13156, %r13157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13161, %r13153, %r13158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13164, %r913, %r1179, %r13167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13168, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13169, %r13167, %r13168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13172, %r13164, %r13169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13175, %r902, %r1201, %r13156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13179, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13180, %r13156, %r13179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13183, %r13175, %r13180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13186, %r913, %r1201, %r13167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13190, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13191, %r13167, %r13190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13194, %r13186, %r13191;
	// end inline asm
	// begin inline asm
	mov.b32 %r13202, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13213, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13199, %r902, %r1225, %r13202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13204, %r13202, %r13203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13207, %r13199, %r13204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13210, %r913, %r1225, %r13213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13214, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13215, %r13213, %r13214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13218, %r13210, %r13215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13221, %r902, %r1247, %r13202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13225, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13226, %r13202, %r13225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13229, %r13221, %r13226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13232, %r913, %r1247, %r13213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13236, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13237, %r13213, %r13236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13240, %r13232, %r13237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13243, %r305, %r12885, %r12717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13247, %r305, %r12896, %r12722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13251, %r305, %r12907, %r12727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13255, %r305, %r12918, %r12732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13259, %r305, %r12931, %r12737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13263, %r305, %r12942, %r12742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13267, %r305, %r12953, %r12747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13271, %r305, %r12964, %r12752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13275, %r305, %r12977, %r12757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13279, %r305, %r12988, %r12762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13283, %r305, %r12999, %r12767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13287, %r305, %r13010, %r12772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13291, %r305, %r13023, %r12777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13295, %r305, %r13034, %r12782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13299, %r305, %r13045, %r12787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13303, %r305, %r13056, %r12792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13307, %r323, %r13069, %r12797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13311, %r323, %r13080, %r12802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13315, %r323, %r13091, %r12807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13319, %r323, %r13102, %r12812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13323, %r323, %r13115, %r12817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13327, %r323, %r13126, %r12822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13331, %r323, %r13137, %r12827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13335, %r323, %r13148, %r12832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13339, %r323, %r13161, %r12837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13343, %r323, %r13172, %r12842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13347, %r323, %r13183, %r12847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13351, %r323, %r13194, %r12852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13355, %r323, %r13207, %r12857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13359, %r323, %r13218, %r12862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13363, %r323, %r13229, %r12867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13367, %r323, %r13240, %r12872;
	// end inline asm
	// begin inline asm
	mov.b32 %r13376, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13387, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13373, %r902, %r4719, %r13376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13377, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13378, %r13376, %r13377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13381, %r13373, %r13378;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13384, %r913, %r4719, %r13387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13389, %r13387, %r13388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13392, %r13384, %r13389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13395, %r902, %r4741, %r13376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13400, %r13376, %r13399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13403, %r13395, %r13400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13406, %r913, %r4741, %r13387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13411, %r13387, %r13410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13414, %r13406, %r13411;
	// end inline asm
	// begin inline asm
	mov.b32 %r13422, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13433, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13419, %r902, %r4765, %r13422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13423, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13424, %r13422, %r13423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13427, %r13419, %r13424;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13430, %r913, %r4765, %r13433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13435, %r13433, %r13434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13438, %r13430, %r13435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13441, %r902, %r4787, %r13422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13446, %r13422, %r13445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13449, %r13441, %r13446;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13452, %r913, %r4787, %r13433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13456, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13457, %r13433, %r13456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13460, %r13452, %r13457;
	// end inline asm
	// begin inline asm
	mov.b32 %r13468, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13479, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13465, %r902, %r4811, %r13468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13470, %r13468, %r13469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13473, %r13465, %r13470;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13476, %r913, %r4811, %r13479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13481, %r13479, %r13480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13484, %r13476, %r13481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13487, %r902, %r4833, %r13468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13492, %r13468, %r13491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13495, %r13487, %r13492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13498, %r913, %r4833, %r13479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13502, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13503, %r13479, %r13502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13506, %r13498, %r13503;
	// end inline asm
	// begin inline asm
	mov.b32 %r13514, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13525, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13511, %r902, %r4857, %r13514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13515, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13516, %r13514, %r13515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13519, %r13511, %r13516;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13522, %r913, %r4857, %r13525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13526, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13527, %r13525, %r13526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13530, %r13522, %r13527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13533, %r902, %r4879, %r13514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13538, %r13514, %r13537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13541, %r13533, %r13538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13544, %r913, %r4879, %r13525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13548, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13549, %r13525, %r13548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13552, %r13544, %r13549;
	// end inline asm
	// begin inline asm
	mov.b32 %r13560, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13571, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13557, %r902, %r4903, %r13560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13561, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13562, %r13560, %r13561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13565, %r13557, %r13562;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13568, %r913, %r4903, %r13571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13572, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13573, %r13571, %r13572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13576, %r13568, %r13573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13579, %r902, %r4925, %r13560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13584, %r13560, %r13583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13587, %r13579, %r13584;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13590, %r913, %r4925, %r13571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13594, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13595, %r13571, %r13594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13598, %r13590, %r13595;
	// end inline asm
	// begin inline asm
	mov.b32 %r13606, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13617, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13603, %r902, %r4949, %r13606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13607, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13608, %r13606, %r13607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13611, %r13603, %r13608;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13614, %r913, %r4949, %r13617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13618, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13619, %r13617, %r13618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13622, %r13614, %r13619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13625, %r902, %r4971, %r13606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13630, %r13606, %r13629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13633, %r13625, %r13630;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13636, %r913, %r4971, %r13617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13640, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13641, %r13617, %r13640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13644, %r13636, %r13641;
	// end inline asm
	// begin inline asm
	mov.b32 %r13652, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13663, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13649, %r902, %r4995, %r13652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13653, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13654, %r13652, %r13653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13657, %r13649, %r13654;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13660, %r913, %r4995, %r13663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13664, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13665, %r13663, %r13664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13668, %r13660, %r13665;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13671, %r902, %r5017, %r13652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13675, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13676, %r13652, %r13675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13679, %r13671, %r13676;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13682, %r913, %r5017, %r13663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13686, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13687, %r13663, %r13686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13690, %r13682, %r13687;
	// end inline asm
	// begin inline asm
	mov.b32 %r13698, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13709, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13695, %r902, %r5041, %r13698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13699, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13700, %r13698, %r13699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13703, %r13695, %r13700;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13706, %r913, %r5041, %r13709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13710, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13711, %r13709, %r13710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13714, %r13706, %r13711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13717, %r902, %r5063, %r13698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13721, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13722, %r13698, %r13721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13725, %r13717, %r13722;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13728, %r913, %r5063, %r13709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13732, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13733, %r13709, %r13732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13736, %r13728, %r13733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13739, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13741, %r13739, %r13381, %r13243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13745, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13747, %r13745, %r13392, %r13247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13751, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13753, %r13751, %r13403, %r13251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13757, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13759, %r13757, %r13414, %r13255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13763, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13765, %r13763, %r13427, %r13259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13769, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13771, %r13769, %r13438, %r13263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13775, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13777, %r13775, %r13449, %r13267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13781, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13783, %r13781, %r13460, %r13271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13787, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13789, %r13787, %r13473, %r13275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13793, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13795, %r13793, %r13484, %r13279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13799, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13801, %r13799, %r13495, %r13283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13805, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13807, %r13805, %r13506, %r13287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13811, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13813, %r13811, %r13519, %r13291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13817, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13819, %r13817, %r13530, %r13295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13823, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13825, %r13823, %r13541, %r13299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13829, %r341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13831, %r13829, %r13552, %r13303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13835, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13837, %r13835, %r13565, %r13307;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13841, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13843, %r13841, %r13576, %r13311;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13847, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13849, %r13847, %r13587, %r13315;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13853, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13855, %r13853, %r13598, %r13319;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13859, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13861, %r13859, %r13611, %r13323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13865, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13867, %r13865, %r13622, %r13327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13871, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13873, %r13871, %r13633, %r13331;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13877, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13879, %r13877, %r13644, %r13335;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13883, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13885, %r13883, %r13657, %r13339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13889, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13891, %r13889, %r13668, %r13343;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13895, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13897, %r13895, %r13679, %r13347;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13901, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13903, %r13901, %r13690, %r13351;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13907, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13909, %r13907, %r13703, %r13355;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13913, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13915, %r13913, %r13714, %r13359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13919, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13921, %r13919, %r13725, %r13363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13925, %r359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13927, %r13925, %r13736, %r13367;
	// end inline asm
	// begin inline asm
	mov.b32 %r13936, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13947, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13933, %r902, %r8535, %r13936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13938, %r13936, %r13937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13941, %r13933, %r13938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13944, %r913, %r8535, %r13947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13948, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13949, %r13947, %r13948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13952, %r13944, %r13949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13955, %r902, %r8557, %r13936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13959, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13960, %r13936, %r13959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13963, %r13955, %r13960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13966, %r913, %r8557, %r13947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13970, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13971, %r13947, %r13970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13974, %r13966, %r13971;
	// end inline asm
	// begin inline asm
	mov.b32 %r13982, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13993, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13979, %r902, %r8581, %r13982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13984, %r13982, %r13983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13987, %r13979, %r13984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13990, %r913, %r8581, %r13993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13994, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13995, %r13993, %r13994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13998, %r13990, %r13995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14001, %r902, %r8603, %r13982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14006, %r13982, %r14005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14009, %r14001, %r14006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14012, %r913, %r8603, %r13993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14016, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14017, %r13993, %r14016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14020, %r14012, %r14017;
	// end inline asm
	// begin inline asm
	mov.b32 %r14028, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14039, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14025, %r902, %r8627, %r14028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14030, %r14028, %r14029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14033, %r14025, %r14030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14036, %r913, %r8627, %r14039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14041, %r14039, %r14040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14044, %r14036, %r14041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14047, %r902, %r8649, %r14028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14052, %r14028, %r14051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14055, %r14047, %r14052;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14058, %r913, %r8649, %r14039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14063, %r14039, %r14062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14066, %r14058, %r14063;
	// end inline asm
	// begin inline asm
	mov.b32 %r14074, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14085, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14071, %r902, %r8673, %r14074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14075, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14076, %r14074, %r14075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14079, %r14071, %r14076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14082, %r913, %r8673, %r14085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14086, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14087, %r14085, %r14086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14090, %r14082, %r14087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14093, %r902, %r8695, %r14074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14098, %r14074, %r14097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14101, %r14093, %r14098;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14104, %r913, %r8695, %r14085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14109, %r14085, %r14108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14112, %r14104, %r14109;
	// end inline asm
	// begin inline asm
	mov.b32 %r14120, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14131, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14117, %r902, %r8719, %r14120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14122, %r14120, %r14121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14125, %r14117, %r14122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14128, %r913, %r8719, %r14131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14132, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14133, %r14131, %r14132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14136, %r14128, %r14133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14139, %r902, %r8741, %r14120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14144, %r14120, %r14143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14147, %r14139, %r14144;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14150, %r913, %r8741, %r14131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14154, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14155, %r14131, %r14154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14158, %r14150, %r14155;
	// end inline asm
	// begin inline asm
	mov.b32 %r14166, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14177, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14163, %r902, %r8765, %r14166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14168, %r14166, %r14167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14171, %r14163, %r14168;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14174, %r913, %r8765, %r14177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14178, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14179, %r14177, %r14178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14182, %r14174, %r14179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14185, %r902, %r8787, %r14166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14190, %r14166, %r14189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14193, %r14185, %r14190;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14196, %r913, %r8787, %r14177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14200, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14201, %r14177, %r14200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14204, %r14196, %r14201;
	// end inline asm
	// begin inline asm
	mov.b32 %r14212, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14223, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14209, %r902, %r8811, %r14212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14214, %r14212, %r14213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14217, %r14209, %r14214;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14220, %r913, %r8811, %r14223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14225, %r14223, %r14224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14228, %r14220, %r14225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14231, %r902, %r8833, %r14212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14236, %r14212, %r14235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14239, %r14231, %r14236;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14242, %r913, %r8833, %r14223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14246, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14247, %r14223, %r14246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14250, %r14242, %r14247;
	// end inline asm
	// begin inline asm
	mov.b32 %r14258, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14269, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14255, %r902, %r8857, %r14258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14259, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14260, %r14258, %r14259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14263, %r14255, %r14260;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14266, %r913, %r8857, %r14269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14270, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14271, %r14269, %r14270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14274, %r14266, %r14271;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14277, %r902, %r8879, %r14258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14281, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14282, %r14258, %r14281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14285, %r14277, %r14282;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14288, %r913, %r8879, %r14269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14292, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14293, %r14269, %r14292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14296, %r14288, %r14293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14434, %r377, %r13941, %r13741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14431, %r377, %r13952, %r13747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14443, %r377, %r13963, %r13753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14440, %r377, %r13974, %r13759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14452, %r377, %r13987, %r13765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14449, %r377, %r13998, %r13771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14461, %r377, %r14009, %r13777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14458, %r377, %r14020, %r13783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14470, %r377, %r14033, %r13789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14467, %r377, %r14044, %r13795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14479, %r377, %r14055, %r13801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14476, %r377, %r14066, %r13807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14488, %r377, %r14079, %r13813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14485, %r377, %r14090, %r13819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14497, %r377, %r14101, %r13825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14494, %r377, %r14112, %r13831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14506, %r395, %r14125, %r13837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14503, %r395, %r14136, %r13843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14515, %r395, %r14147, %r13849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14512, %r395, %r14158, %r13855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14524, %r395, %r14171, %r13861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14521, %r395, %r14182, %r13867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14533, %r395, %r14193, %r13873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14530, %r395, %r14204, %r13879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14542, %r395, %r14217, %r13885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14539, %r395, %r14228, %r13891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14551, %r395, %r14239, %r13897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14548, %r395, %r14250, %r13903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14560, %r395, %r14263, %r13909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14557, %r395, %r14274, %r13915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14569, %r395, %r14285, %r13921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14566, %r395, %r14296, %r13927;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14427, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14429, %r14427, %r14431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14432, %r459, %r14434, %r14429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14436, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14438, %r14436, %r14440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14441, %r459, %r14443, %r14438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14445, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14447, %r14445, %r14449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14450, %r459, %r14452, %r14447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14454, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14456, %r14454, %r14458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14459, %r459, %r14461, %r14456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14463, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14465, %r14463, %r14467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14468, %r459, %r14470, %r14465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14472, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14474, %r14472, %r14476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14477, %r459, %r14479, %r14474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14481, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14483, %r14481, %r14485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14486, %r459, %r14488, %r14483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14490, %r465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14492, %r14490, %r14494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14495, %r459, %r14497, %r14492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14499, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14501, %r14499, %r14503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14504, %r462, %r14506, %r14501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14508, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14510, %r14508, %r14512;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14513, %r462, %r14515, %r14510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14517, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14519, %r14517, %r14521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14522, %r462, %r14524, %r14519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14526, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14528, %r14526, %r14530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14531, %r462, %r14533, %r14528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14535, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14537, %r14535, %r14539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14540, %r462, %r14542, %r14537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14544, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14546, %r14544, %r14548;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14549, %r462, %r14551, %r14546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14553, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14555, %r14553, %r14557;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14558, %r462, %r14560, %r14555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14562, %r468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14564, %r14562, %r14566;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14567, %r462, %r14569, %r14564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14571, %r465, %r14434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14574, %r459, %r14431, %r14571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14578, %r465, %r14443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14581, %r459, %r14440, %r14578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14585, %r465, %r14452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14588, %r459, %r14449, %r14585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14592, %r465, %r14461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14595, %r459, %r14458, %r14592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14599, %r465, %r14470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14602, %r459, %r14467, %r14599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14606, %r465, %r14479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14609, %r459, %r14476, %r14606;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14613, %r465, %r14488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14616, %r459, %r14485, %r14613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14620, %r465, %r14497;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14623, %r459, %r14494, %r14620;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14627, %r468, %r14506;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14630, %r462, %r14503, %r14627;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14634, %r468, %r14515;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14637, %r462, %r14512, %r14634;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14641, %r468, %r14524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14644, %r462, %r14521, %r14641;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14648, %r468, %r14533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14651, %r462, %r14530, %r14648;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14655, %r468, %r14542;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14658, %r462, %r14539, %r14655;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14662, %r468, %r14551;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14665, %r462, %r14548, %r14662;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14669, %r468, %r14560;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14672, %r462, %r14557, %r14669;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14676, %r468, %r14569;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14679, %r462, %r14566, %r14676;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14850, %r14847}, {%r514, %r520, %r517, %r523}, {%r14432, %r14574}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14859, %r14856}, {%r514, %r520, %r517, %r523}, {%r14441, %r14581}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14868, %r14865}, {%r514, %r520, %r517, %r523}, {%r14450, %r14588}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14877, %r14874}, {%r514, %r520, %r517, %r523}, {%r14459, %r14595}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14886, %r14883}, {%r514, %r520, %r517, %r523}, {%r14468, %r14602}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14895, %r14892}, {%r514, %r520, %r517, %r523}, {%r14477, %r14609}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14904, %r14901}, {%r514, %r520, %r517, %r523}, {%r14486, %r14616}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14913, %r14910}, {%r514, %r520, %r517, %r523}, {%r14495, %r14623}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14922, %r14919}, {%r514, %r520, %r517, %r523}, {%r14504, %r14630}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14931, %r14928}, {%r514, %r520, %r517, %r523}, {%r14513, %r14637}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14940, %r14937}, {%r514, %r520, %r517, %r523}, {%r14522, %r14644}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14949, %r14946}, {%r514, %r520, %r517, %r523}, {%r14531, %r14651}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14958, %r14955}, {%r514, %r520, %r517, %r523}, {%r14540, %r14658}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14967, %r14964}, {%r514, %r520, %r517, %r523}, {%r14549, %r14665}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14976, %r14973}, {%r514, %r520, %r517, %r523}, {%r14558, %r14672}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14985, %r14982}, {%r514, %r520, %r517, %r523}, {%r14567, %r14679}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14843, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14845, %r14843, %r14847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14848, %r564, %r14850, %r14845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14852, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14854, %r14852, %r14856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14857, %r564, %r14859, %r14854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14861, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14863, %r14861, %r14865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14866, %r564, %r14868, %r14863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14870, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14872, %r14870, %r14874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14875, %r564, %r14877, %r14872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14879, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14881, %r14879, %r14883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14884, %r564, %r14886, %r14881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14888, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14890, %r14888, %r14892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14893, %r564, %r14895, %r14890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14897, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14899, %r14897, %r14901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14902, %r564, %r14904, %r14899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14906, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14908, %r14906, %r14910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14911, %r564, %r14913, %r14908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14915, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14917, %r14915, %r14919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14920, %r564, %r14922, %r14917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14924, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14926, %r14924, %r14928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14929, %r564, %r14931, %r14926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14933, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14935, %r14933, %r14937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14938, %r564, %r14940, %r14935;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14942, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14944, %r14942, %r14946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14947, %r564, %r14949, %r14944;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14951, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14953, %r14951, %r14955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14956, %r564, %r14958, %r14953;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14960, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14962, %r14960, %r14964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14965, %r564, %r14967, %r14962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14969, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14971, %r14969, %r14973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14974, %r564, %r14976, %r14971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14978, %r567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14980, %r14978, %r14982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14983, %r564, %r14985, %r14980;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14987, %r567, %r14850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14990, %r564, %r14847, %r14987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14994, %r567, %r14859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14997, %r564, %r14856, %r14994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15001, %r567, %r14868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15004, %r564, %r14865, %r15001;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15008, %r567, %r14877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15011, %r564, %r14874, %r15008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15015, %r567, %r14886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15018, %r564, %r14883, %r15015;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15022, %r567, %r14895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15025, %r564, %r14892, %r15022;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15029, %r567, %r14904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15032, %r564, %r14901, %r15029;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15036, %r567, %r14913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15039, %r564, %r14910, %r15036;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15043, %r567, %r14922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15046, %r564, %r14919, %r15043;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15050, %r567, %r14931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15053, %r564, %r14928, %r15050;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15057, %r567, %r14940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15060, %r564, %r14937, %r15057;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15064, %r567, %r14949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15067, %r564, %r14946, %r15064;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15071, %r567, %r14958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15074, %r564, %r14955, %r15071;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15078, %r567, %r14967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15081, %r564, %r14964, %r15078;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15085, %r567, %r14976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15088, %r564, %r14973, %r15085;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15092, %r567, %r14985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15095, %r564, %r14982, %r15092;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15388, %r15391}, {%r602, %r608, %r605, %r611}, {%r14848, %r14990}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15394, %r15397}, {%r602, %r608, %r605, %r611}, {%r14857, %r14997}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15400, %r15403}, {%r602, %r608, %r605, %r611}, {%r14866, %r15004}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15406, %r15409}, {%r602, %r608, %r605, %r611}, {%r14875, %r15011}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15412, %r15415}, {%r602, %r608, %r605, %r611}, {%r14884, %r15018}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15418, %r15421}, {%r602, %r608, %r605, %r611}, {%r14893, %r15025}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15424, %r15427}, {%r602, %r608, %r605, %r611}, {%r14902, %r15032}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15430, %r15433}, {%r602, %r608, %r605, %r611}, {%r14911, %r15039}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15389, %r15392}, {%r602, %r608, %r605, %r611}, {%r14920, %r15046}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15395, %r15398}, {%r602, %r608, %r605, %r611}, {%r14929, %r15053}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15401, %r15404}, {%r602, %r608, %r605, %r611}, {%r14938, %r15060}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15407, %r15410}, {%r602, %r608, %r605, %r611}, {%r14947, %r15067}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15413, %r15416}, {%r602, %r608, %r605, %r611}, {%r14956, %r15074}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15419, %r15422}, {%r602, %r608, %r605, %r611}, {%r14965, %r15081}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15425, %r15428}, {%r602, %r608, %r605, %r611}, {%r14974, %r15088}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15431, %r15434}, {%r602, %r608, %r605, %r611}, {%r14983, %r15095}, {%r3243, %r3243};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15387, %r15388, %r15389;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15390, %r15391, %r15392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15393, %r15394, %r15395;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15396, %r15397, %r15398;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15399, %r15400, %r15401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15402, %r15403, %r15404;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15405, %r15406, %r15407;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15408, %r15409, %r15410;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15411, %r15412, %r15413;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15414, %r15415, %r15416;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15417, %r15418, %r15419;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15420, %r15421, %r15422;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15423, %r15424, %r15425;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15426, %r15427, %r15428;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15429, %r15430, %r15431;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15432, %r15433, %r15434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15435, %r15388, %r15389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15438, %r15391, %r15392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15441, %r15394, %r15395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15444, %r15397, %r15398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15447, %r15400, %r15401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15450, %r15403, %r15404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15453, %r15406, %r15407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15456, %r15409, %r15410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15459, %r15412, %r15413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15462, %r15415, %r15416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15465, %r15418, %r15419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15468, %r15421, %r15422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15471, %r15424, %r15425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15474, %r15427, %r15428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15477, %r15430, %r15431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15480, %r15433, %r15434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15483, %r183, %r15387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15486, %r183, %r15390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15489, %r183, %r15393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15492, %r183, %r15396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15495, %r183, %r15399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15498, %r183, %r15402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15501, %r183, %r15405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15504, %r183, %r15408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15507, %r183, %r15411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15510, %r183, %r15414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15513, %r183, %r15417;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15516, %r183, %r15420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15519, %r183, %r15423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15522, %r183, %r15426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15525, %r183, %r15429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15528, %r183, %r15432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15531, %r184, %r15435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15534, %r184, %r15438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15537, %r184, %r15441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15540, %r184, %r15444;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15543, %r184, %r15447;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15546, %r184, %r15450;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15549, %r184, %r15453;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15552, %r184, %r15456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15555, %r184, %r15459;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15558, %r184, %r15462;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15561, %r184, %r15465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15564, %r184, %r15468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15567, %r184, %r15471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15570, %r184, %r15474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15573, %r184, %r15477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15576, %r184, %r15480;
	// end inline asm
	// begin inline asm
	mov.b32 %r15579, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15580, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15581, %r15483, %r15579;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15584, %r15581, %r15580;
	// end inline asm
	// begin inline asm
	mov.b32 %r15587, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15588, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15589, %r15486, %r15587;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15592, %r15589, %r15588;
	// end inline asm
	// begin inline asm
	mov.b32 %r15595, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15596, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15597, %r15489, %r15595;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15600, %r15597, %r15596;
	// end inline asm
	// begin inline asm
	mov.b32 %r15603, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15604, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15605, %r15492, %r15603;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15608, %r15605, %r15604;
	// end inline asm
	// begin inline asm
	mov.b32 %r15611, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15612, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15613, %r15495, %r15611;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15616, %r15613, %r15612;
	// end inline asm
	// begin inline asm
	mov.b32 %r15619, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15620, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15621, %r15498, %r15619;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15624, %r15621, %r15620;
	// end inline asm
	// begin inline asm
	mov.b32 %r15627, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15628, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15629, %r15501, %r15627;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15632, %r15629, %r15628;
	// end inline asm
	// begin inline asm
	mov.b32 %r15635, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15636, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15637, %r15504, %r15635;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15640, %r15637, %r15636;
	// end inline asm
	// begin inline asm
	mov.b32 %r15643, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15644, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15645, %r15507, %r15643;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15648, %r15645, %r15644;
	// end inline asm
	// begin inline asm
	mov.b32 %r15651, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15652, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15653, %r15510, %r15651;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15656, %r15653, %r15652;
	// end inline asm
	// begin inline asm
	mov.b32 %r15659, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15660, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15661, %r15513, %r15659;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15664, %r15661, %r15660;
	// end inline asm
	// begin inline asm
	mov.b32 %r15667, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15668, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15669, %r15516, %r15667;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15672, %r15669, %r15668;
	// end inline asm
	// begin inline asm
	mov.b32 %r15675, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15676, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15677, %r15519, %r15675;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15680, %r15677, %r15676;
	// end inline asm
	// begin inline asm
	mov.b32 %r15683, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15684, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15685, %r15522, %r15683;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15688, %r15685, %r15684;
	// end inline asm
	// begin inline asm
	mov.b32 %r15691, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15692, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15693, %r15525, %r15691;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15696, %r15693, %r15692;
	// end inline asm
	// begin inline asm
	mov.b32 %r15699, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15700, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15701, %r15528, %r15699;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15704, %r15701, %r15700;
	// end inline asm
	// begin inline asm
	mov.b32 %r15707, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15708, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15709, %r15531, %r15707;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15712, %r15709, %r15708;
	// end inline asm
	// begin inline asm
	mov.b32 %r15715, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15716, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15717, %r15534, %r15715;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15720, %r15717, %r15716;
	// end inline asm
	// begin inline asm
	mov.b32 %r15723, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15724, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15725, %r15537, %r15723;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15728, %r15725, %r15724;
	// end inline asm
	// begin inline asm
	mov.b32 %r15731, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15732, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15733, %r15540, %r15731;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15736, %r15733, %r15732;
	// end inline asm
	// begin inline asm
	mov.b32 %r15739, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15740, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15741, %r15543, %r15739;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15744, %r15741, %r15740;
	// end inline asm
	// begin inline asm
	mov.b32 %r15747, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15748, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15749, %r15546, %r15747;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15752, %r15749, %r15748;
	// end inline asm
	// begin inline asm
	mov.b32 %r15755, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15756, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15757, %r15549, %r15755;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15760, %r15757, %r15756;
	// end inline asm
	// begin inline asm
	mov.b32 %r15763, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15764, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15765, %r15552, %r15763;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15768, %r15765, %r15764;
	// end inline asm
	// begin inline asm
	mov.b32 %r15771, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15772, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15773, %r15555, %r15771;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15776, %r15773, %r15772;
	// end inline asm
	// begin inline asm
	mov.b32 %r15779, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15780, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15781, %r15558, %r15779;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15784, %r15781, %r15780;
	// end inline asm
	// begin inline asm
	mov.b32 %r15787, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15788, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15789, %r15561, %r15787;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15792, %r15789, %r15788;
	// end inline asm
	// begin inline asm
	mov.b32 %r15795, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15796, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15797, %r15564, %r15795;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15800, %r15797, %r15796;
	// end inline asm
	// begin inline asm
	mov.b32 %r15803, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15804, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15805, %r15567, %r15803;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15808, %r15805, %r15804;
	// end inline asm
	// begin inline asm
	mov.b32 %r15811, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15812, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15813, %r15570, %r15811;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15816, %r15813, %r15812;
	// end inline asm
	// begin inline asm
	mov.b32 %r15819, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15820, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15821, %r15573, %r15819;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15824, %r15821, %r15820;
	// end inline asm
	// begin inline asm
	mov.b32 %r15827, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15828, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15829, %r15576, %r15827;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15832, %r15829, %r15828;
	// end inline asm
	// begin inline asm
	mov.b32 %r15838, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15836, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15837, %r15838, %r15836;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15840, %r15584, %r15837;
	// end inline asm
	// begin inline asm
	mov.b32 %r15843, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15844, %r15838, %r15843;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15847, %r15592, %r15844;
	// end inline asm
	// begin inline asm
	mov.b32 %r15850, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15851, %r15838, %r15850;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15854, %r15600, %r15851;
	// end inline asm
	// begin inline asm
	mov.b32 %r15857, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15858, %r15838, %r15857;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15861, %r15608, %r15858;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15864, %r15840, %r15854, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15868, %r15847, %r15861, %r4419;
	// end inline asm
	shl.b32 	%r15875, %r15868, 4;
	// begin inline asm
	lop3.b32 %r15872, %r4425, %r15864, %r15875, 202;
	// end inline asm
	xor.b32  	%r16249, %r15872, -2004318072;
	// begin inline asm
	mov.b32 %r15879, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15877, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15878, %r15879, %r15877;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15881, %r15616, %r15878;
	// end inline asm
	// begin inline asm
	mov.b32 %r15884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15885, %r15879, %r15884;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15888, %r15624, %r15885;
	// end inline asm
	// begin inline asm
	mov.b32 %r15891, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15892, %r15879, %r15891;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15895, %r15632, %r15892;
	// end inline asm
	// begin inline asm
	mov.b32 %r15898, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15899, %r15879, %r15898;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15902, %r15640, %r15899;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15905, %r15881, %r15895, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15909, %r15888, %r15902, %r4419;
	// end inline asm
	shl.b32 	%r15916, %r15909, 4;
	// begin inline asm
	lop3.b32 %r15913, %r4425, %r15905, %r15916, 202;
	// end inline asm
	xor.b32  	%r16250, %r15913, -2004318072;
	// begin inline asm
	mov.b32 %r15920, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15918, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15919, %r15920, %r15918;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15922, %r15648, %r15919;
	// end inline asm
	// begin inline asm
	mov.b32 %r15925, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15926, %r15920, %r15925;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15929, %r15656, %r15926;
	// end inline asm
	// begin inline asm
	mov.b32 %r15932, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15933, %r15920, %r15932;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15936, %r15664, %r15933;
	// end inline asm
	// begin inline asm
	mov.b32 %r15939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15940, %r15920, %r15939;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15943, %r15672, %r15940;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15946, %r15922, %r15936, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15950, %r15929, %r15943, %r4419;
	// end inline asm
	shl.b32 	%r15957, %r15950, 4;
	// begin inline asm
	lop3.b32 %r15954, %r4425, %r15946, %r15957, 202;
	// end inline asm
	xor.b32  	%r16251, %r15954, -2004318072;
	// begin inline asm
	mov.b32 %r15961, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15959, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15960, %r15961, %r15959;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15963, %r15680, %r15960;
	// end inline asm
	// begin inline asm
	mov.b32 %r15966, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15967, %r15961, %r15966;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15970, %r15688, %r15967;
	// end inline asm
	// begin inline asm
	mov.b32 %r15973, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15974, %r15961, %r15973;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15977, %r15696, %r15974;
	// end inline asm
	// begin inline asm
	mov.b32 %r15980, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15981, %r15961, %r15980;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15984, %r15704, %r15981;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15987, %r15963, %r15977, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15991, %r15970, %r15984, %r4419;
	// end inline asm
	shl.b32 	%r15998, %r15991, 4;
	// begin inline asm
	lop3.b32 %r15995, %r4425, %r15987, %r15998, 202;
	// end inline asm
	xor.b32  	%r16252, %r15995, -2004318072;
	// begin inline asm
	mov.b32 %r16002, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16001, %r16002, %r16000;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16004, %r15712, %r16001;
	// end inline asm
	// begin inline asm
	mov.b32 %r16007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16008, %r16002, %r16007;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16011, %r15720, %r16008;
	// end inline asm
	// begin inline asm
	mov.b32 %r16014, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16015, %r16002, %r16014;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16018, %r15728, %r16015;
	// end inline asm
	// begin inline asm
	mov.b32 %r16021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16022, %r16002, %r16021;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16025, %r15736, %r16022;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16028, %r16004, %r16018, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16032, %r16011, %r16025, %r4419;
	// end inline asm
	shl.b32 	%r16039, %r16032, 4;
	// begin inline asm
	lop3.b32 %r16036, %r4425, %r16028, %r16039, 202;
	// end inline asm
	xor.b32  	%r16253, %r16036, -2004318072;
	// begin inline asm
	mov.b32 %r16043, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16041, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16042, %r16043, %r16041;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16045, %r15744, %r16042;
	// end inline asm
	// begin inline asm
	mov.b32 %r16048, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16049, %r16043, %r16048;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16052, %r15752, %r16049;
	// end inline asm
	// begin inline asm
	mov.b32 %r16055, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16056, %r16043, %r16055;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16059, %r15760, %r16056;
	// end inline asm
	// begin inline asm
	mov.b32 %r16062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16063, %r16043, %r16062;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16066, %r15768, %r16063;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16069, %r16045, %r16059, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16073, %r16052, %r16066, %r4419;
	// end inline asm
	shl.b32 	%r16080, %r16073, 4;
	// begin inline asm
	lop3.b32 %r16077, %r4425, %r16069, %r16080, 202;
	// end inline asm
	xor.b32  	%r16254, %r16077, -2004318072;
	// begin inline asm
	mov.b32 %r16084, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16082, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16083, %r16084, %r16082;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16086, %r15776, %r16083;
	// end inline asm
	// begin inline asm
	mov.b32 %r16089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16090, %r16084, %r16089;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16093, %r15784, %r16090;
	// end inline asm
	// begin inline asm
	mov.b32 %r16096, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16097, %r16084, %r16096;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16100, %r15792, %r16097;
	// end inline asm
	// begin inline asm
	mov.b32 %r16103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16104, %r16084, %r16103;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16107, %r15800, %r16104;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16110, %r16086, %r16100, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16114, %r16093, %r16107, %r4419;
	// end inline asm
	shl.b32 	%r16121, %r16114, 4;
	// begin inline asm
	lop3.b32 %r16118, %r4425, %r16110, %r16121, 202;
	// end inline asm
	xor.b32  	%r16255, %r16118, -2004318072;
	// begin inline asm
	mov.b32 %r16125, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16124, %r16125, %r16123;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16127, %r15808, %r16124;
	// end inline asm
	// begin inline asm
	mov.b32 %r16130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16131, %r16125, %r16130;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16134, %r15816, %r16131;
	// end inline asm
	// begin inline asm
	mov.b32 %r16137, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16138, %r16125, %r16137;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16141, %r15824, %r16138;
	// end inline asm
	// begin inline asm
	mov.b32 %r16144, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16145, %r16125, %r16144;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16148, %r15832, %r16145;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16151, %r16127, %r16141, %r4419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16155, %r16134, %r16148, %r4419;
	// end inline asm
	shl.b32 	%r16162, %r16155, 4;
	// begin inline asm
	lop3.b32 %r16159, %r4425, %r16151, %r16162, 202;
	// end inline asm
	xor.b32  	%r16256, %r16159, -2004318072;
	st.shared.u32 	[%rd107], %r16249;
	st.shared.u32 	[%rd109], %r16250;
	st.shared.u32 	[%rd111], %r16251;
	st.shared.u32 	[%rd113], %r16252;
	st.shared.u32 	[%rd115], %r16253;
	st.shared.u32 	[%rd117], %r16254;
	st.shared.u32 	[%rd119], %r16255;
	st.shared.u32 	[%rd121], %r16256;
	add.s32 	%r16401, %r16401, 128;
	setp.eq.s32 	%p330, %r16401, 256;
	@%p330 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;
$L__BB0_184:                            // %guard_exit29817
                                        //   in Loop: Header=BB0_181 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16262, [%rd5];
	ld.shared.u32 	%r16263, [%rd6+128];
	ld.shared.u32 	%r16270, [%rd6+4];
	ld.shared.u32 	%r16271, [%rd6+132];
	ld.shared.u32 	%r16278, [%rd7];
	ld.shared.u32 	%r16279, [%rd8+128];
	ld.shared.u32 	%r16286, [%rd8+4];
	ld.shared.u32 	%r16287, [%rd8+132];
	ld.shared.u32 	%r16294, [%rd5+16644];
	ld.shared.u32 	%r16295, [%rd6+16772];
	ld.shared.u32 	%r16302, [%rd6+16648];
	ld.shared.u32 	%r16303, [%rd6+16776];
	ld.shared.u32 	%r16310, [%rd7+16644];
	ld.shared.u32 	%r16311, [%rd21];
	ld.shared.u32 	%r16318, [%rd8+16648];
	ld.shared.u32 	%r16319, [%rd22];
	// begin inline asm
	prmt.b32 %r16257, %r16262, %r16263, %r812;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16261, %r16262, %r16263, %r816;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16265, %r16270, %r16271, %r812;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16269, %r16270, %r16271, %r816;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16273, %r16278, %r16279, %r812;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16277, %r16278, %r16279, %r816;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16281, %r16286, %r16287, %r812;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16285, %r16286, %r16287, %r816;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16289, %r16294, %r16295, %r812;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16293, %r16294, %r16295, %r816;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16297, %r16302, %r16303, %r812;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16301, %r16302, %r16303, %r816;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16305, %r16310, %r16311, %r812;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16309, %r16310, %r16311, %r816;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16313, %r16318, %r16319, %r812;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16317, %r16318, %r16319, %r816;
	// end inline asm
	selp.b32 	%r16321, %r16261, %r16257, %p316;
	shfl.sync.bfly.b32	%r254, %r16321, 8, 31, -1;
	selp.b32 	%r16322, %r16269, %r16265, %p316;
	shfl.sync.bfly.b32	%r255, %r16322, 8, 31, -1;
	selp.b32 	%r16323, %r16277, %r16273, %p316;
	shfl.sync.bfly.b32	%r256, %r16323, 8, 31, -1;
	selp.b32 	%r16324, %r16285, %r16281, %p316;
	shfl.sync.bfly.b32	%r257, %r16324, 8, 31, -1;
	selp.b32 	%r16325, %r16293, %r16289, %p316;
	shfl.sync.bfly.b32	%r16326, %r16325, 8, 31, -1;
	selp.b32 	%r16327, %r16301, %r16297, %p316;
	shfl.sync.bfly.b32	%r16328, %r16327, 8, 31, -1;
	selp.b32 	%r16329, %r16309, %r16305, %p316;
	shfl.sync.bfly.b32	%r16330, %r16329, 8, 31, -1;
	selp.b32 	%r16331, %r16317, %r16313, %p316;
	shfl.sync.bfly.b32	%r16332, %r16331, 8, 31, -1;
	and.b32  	%r266, %r16400, 768;
	setp.lt.u32 	%p332, %r266, 384;
	shl.b32 	%r16355, %r16400, 12;
	@%p332 bra 	$L__BB0_186;
// %bb.185:                             // %pass28458
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r16333, %r257, %r16285, %p316;
	selp.b32 	%r16334, %r16281, %r257, %p316;
	selp.b32 	%r16335, %r256, %r16277, %p316;
	selp.b32 	%r16336, %r16273, %r256, %p316;
	selp.b32 	%r16337, %r255, %r16269, %p316;
	selp.b32 	%r16338, %r16265, %r255, %p316;
	selp.b32 	%r16339, %r254, %r16261, %p316;
	selp.b32 	%r16340, %r16257, %r254, %p316;
	or.b32  	%r16342, %r16355, %r124;
	or.b32  	%r16343, %r16342, %r125;
	or.b32  	%r16344, %r16343, %r138;
	cvt.u64.u32 	%rd122, %r16344;
	add.s64 	%rd123, %rd122, %rd9;
	shr.u64 	%rd124, %rd123, 39;
	add.s64 	%rd125, %rd123, %rd124;
	shr.s64 	%rd126, %rd125, 25;
	setp.lt.s64 	%p334, %rd123, 0;
	and.b64  	%rd127, %rd125, -33554432;
	setp.ne.s64 	%p335, %rd127, %rd123;
	and.pred  	%p336, %p334, %p335;
	selp.u64 	%rd128, 1, 0, %p336;
	sub.s64 	%rd129, %rd128, %rd126;
	shl.b64 	%rd130, %rd129, 25;
	add.s64 	%rd131, %rd130, %rd123;
	shl.b64 	%rd132, %rd131, 2;
	add.s64 	%rd133, %rd3, %rd132;
	st.global.v4.u32 	[%rd133], {%r16340, %r16338, %r16339, %r16337};
	or.b32  	%r16345, %r16343, %r139;
	cvt.s64.s32 	%rd134, %r16345;
	add.s64 	%rd135, %rd134, %rd9;
	shr.u64 	%rd136, %rd135, 39;
	add.s64 	%rd137, %rd135, %rd136;
	shr.u64 	%rd138, %rd137, 25;
	shr.u64 	%rd139, %rd135, 63;
	sub.s64 	%rd140, %rd139, %rd138;
	shl.b64 	%rd141, %rd140, 25;
	add.s64 	%rd142, %rd141, %rd135;
	shl.b64 	%rd143, %rd142, 2;
	add.s64 	%rd144, %rd3, %rd143;
	st.global.v4.u32 	[%rd144], {%r16336, %r16334, %r16335, %r16333};
$L__BB0_186:                            // %pass28635
                                        //   in Loop: Header=BB0_181 Depth=1
	or.b32  	%r16346, %r266, 128;
	setp.lt.u32 	%p337, %r16346, 384;
	@%p337 bra 	$L__BB0_187;
// %bb.189:                             // %pass28678
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r258, %r16289, %r16326, %p316;
	selp.b32 	%r259, %r16326, %r16293, %p316;
	selp.b32 	%r260, %r16297, %r16328, %p316;
	selp.b32 	%r261, %r16328, %r16301, %p316;
	selp.b32 	%r262, %r16305, %r16330, %p316;
	selp.b32 	%r263, %r16330, %r16309, %p316;
	selp.b32 	%r264, %r16313, %r16332, %p316;
	selp.b32 	%r265, %r16332, %r16317, %p316;
	or.b32  	%r16348, %r16355, %r124;
	or.b32  	%r16349, %r16348, %r125;
	or.b32  	%r16350, %r16349, 524288;
	or.b32  	%r16351, %r16350, %r138;
	cvt.u64.u32 	%rd145, %r16351;
	add.s64 	%rd146, %rd145, %rd9;
	shr.u64 	%rd147, %rd146, 39;
	add.s64 	%rd148, %rd146, %rd147;
	shr.s64 	%rd149, %rd148, 25;
	setp.lt.s64 	%p338, %rd146, 0;
	and.b64  	%rd150, %rd148, -33554432;
	setp.ne.s64 	%p339, %rd150, %rd146;
	and.pred  	%p340, %p338, %p339;
	selp.u64 	%rd151, 1, 0, %p340;
	sub.s64 	%rd152, %rd151, %rd149;
	shl.b64 	%rd153, %rd152, 25;
	add.s64 	%rd154, %rd153, %rd146;
	shl.b64 	%rd155, %rd154, 2;
	add.s64 	%rd156, %rd3, %rd155;
	st.global.v4.u32 	[%rd156], {%r258, %r260, %r259, %r261};
	or.b32  	%r16352, %r139, %r16350;
	cvt.s64.s32 	%rd157, %r16352;
	add.s64 	%rd158, %rd157, %rd9;
	shr.u64 	%rd159, %rd158, 39;
	add.s64 	%rd160, %rd158, %rd159;
	shr.u64 	%rd161, %rd160, 25;
	shr.u64 	%rd162, %rd158, 63;
	sub.s64 	%rd163, %rd162, %rd161;
	shl.b64 	%rd164, %rd163, 25;
	add.s64 	%rd165, %rd164, %rd158;
	shl.b64 	%rd166, %rd165, 2;
	add.s64 	%rd167, %rd3, %rd166;
	st.global.v4.u32 	[%rd167], {%r262, %r264, %r263, %r265};
	bra.uni 	$L__BB0_187;
$L__BB0_188:                            // %L70764
	mov.u32 	%r16353, 0;
	st.global.u32 	[%rd4], %r16353;
	ret;
$L__BB0_7:                              // %L246
	mov.u32 	%r16354, 2;
	st.global.u32 	[%rd4], %r16354;
	mov.u64 	%rd168, exception5808;
	cvta.global.u64 	%rd169, %rd168;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd169;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r267;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd44, exception1;
	cvta.global.u64 	%rd45, %rd44;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd45;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r267;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
